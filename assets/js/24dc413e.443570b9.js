"use strict";(self.webpackChunkserenity_js_org=self.webpackChunkserenity_js_org||[]).push([[1987],{81530:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"design/index","title":"Core Design Patterns","description":"In this part of the Serenity/JS Handbook you\'ll learn about the core design patterns that underpin the framework.","source":"@site/src/docs/handbook/design/index.mdx","sourceDirName":"design","slug":"/design/","permalink":"/handbook/design/","draft":false,"unlisted":false,"editUrl":"https://github.com/serenity-js/serenity-js.org/tree/main/src/docs/handbook/design/index.mdx","tags":[],"version":"current","lastUpdatedAt":1738684281000,"sidebarPosition":7,"frontMatter":{"sidebar_position":7,"title":"Core Design Patterns"},"sidebar":"docs","previous":{"title":"Mobile testing","permalink":"/handbook/mobile-testing/"},"next":{"title":"Screenplay Pattern","permalink":"/handbook/design/screenplay-pattern"}}');var s=n(74848),o=n(28453);const i={sidebar_position:7,title:"Core Design Patterns"},a="Serenity/JS Core Design Patterns",d={},c=[];function l(e){const t={a:"a",h1:"h1",header:"header",p:"p",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"serenityjs-core-design-patterns",children:"Serenity/JS Core Design Patterns"})}),"\n",(0,s.jsxs)(t.p,{children:["In this part of the Serenity/JS Handbook you'll learn about the core design patterns that underpin the framework.\nWe'll take a deep dive into the ",(0,s.jsx)(t.a,{href:"/handbook/design/screenplay-pattern",children:"Screenplay Pattern"}),", and you'll see how the principles\nof encapsulation, composability, coherency, and learnability permeate the design of the framework to benefit the test scenarios you create with it."]})]})}function p(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>a});var r=n(96540);const s={},o=r.createContext(s);function i(e){const t=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(o.Provider,{value:t},e.children)}}}]);