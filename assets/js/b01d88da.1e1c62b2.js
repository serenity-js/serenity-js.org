"use strict";(self.webpackChunkserenity_js_org=self.webpackChunkserenity_js_org||[]).push([[8963],{67437:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var r=t(74848),s=t(28453);const i={sidebar_position:5},a="Debugging",o={id:"design/debugging",title:"Debugging",description:"Serenity/JS helps you model your test scenarios from the perspective of actors performing activities to accomplish their goals.",source:"@site/src/docs/handbook/design/debugging.mdx",sourceDirName:"design",slug:"/design/debugging",permalink:"/handbook/design/debugging",draft:!1,unlisted:!1,editUrl:"https://github.com/serenity-js/serenity-js.org/tree/main/src/docs/handbook/design/debugging.mdx",tags:[],version:"current",lastUpdatedAt:1733485057e3,sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"docs",previous:{title:"Logging",permalink:"/handbook/design/logging"},next:{title:"Control flow",permalink:"/handbook/design/control-flow"}},l={},c=[{value:"Error handling",id:"error-handling",level:2},{value:"Embedding in Tasks",id:"embedding-in-tasks",level:2},{value:"Exploring Playwright locators",id:"exploring-playwright-locators",level:2},{value:"Inspecting page element HTML",id:"inspecting-page-element-html",level:2},{value:"Inspecting Serenity/JS domain events",id:"inspecting-serenityjs-domain-events",level:2}];function h(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"debugging",children:"Debugging"}),"\n",(0,r.jsxs)(n.p,{children:["Serenity/JS helps you model your test scenarios from the perspective of ",(0,r.jsx)(n.a,{href:"/api/core/class/Actor",children:"actors"})," performing ",(0,r.jsx)(n.a,{href:"/api/core/class/Activity",children:"activities"})," to accomplish their goals.\nDebugging follows this same consistent approach, with any debug statements expressed using the interaction to ",(0,r.jsx)(n.a,{href:"/api/core/class/Debug",children:(0,r.jsx)(n.code,{children:"Debug"})}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["The interaction to ",(0,r.jsx)(n.a,{href:"/api/core/class/Debug",children:(0,r.jsx)(n.code,{children:"Debug"})})," accepts a ",(0,r.jsx)(n.code,{children:"debuggerFunction"})," and any number of arguments, including dynamic values such as ",(0,r.jsx)(n.a,{href:"/api/core/class/Question",children:"questions"}),"\nand ",(0,r.jsx)(n.a,{href:"/api/core#QuestionAdapter",children:"question adapters"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { actorCalled, Debug } from '@serenity-js/core'\nimport { Navigate, Page, PageElement, By } from '@serenity-js/web'\n\nawait actorCalled('Debbie').attemptsTo(\n    Navigate.to('https://serenity-js.org'),\n    Debug.values(\n        // debuggerFunction:\n        (results, url, tagline) => {\n            // set a breakpoint anywhere inside the function to view:\n            // - `results`, which evaluates to Array<DebuggingResult>\n            // - `url`, which evaluates to 'https://serenity-js.org'\n            // - `tagline`, which evaluates to text content of the h1 element\n        },\n\n        // values to inspect (any number of values, to be evaluated one by one):\n        Page.current().url(),\n        Text.of(PageElement.located(By.css('h1')).describedAs('tagline'))\n    ),\n);\n"})}),"\n",(0,r.jsxs)(n.p,{children:["When the actor reaches the interaction to ",(0,r.jsx)(n.a,{href:"/api/core/class/Debug",children:(0,r.jsx)(n.code,{children:"Debug"})})," in their workflow, the interaction:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"instructs the actor to attempt to resolve provided arguments one by one,"}),"\n",(0,r.jsxs)(n.li,{children:["passes them to your ",(0,r.jsx)(n.code,{children:"debuggerFunction"})," as an array of ",(0,r.jsx)(n.a,{href:"/api/core/interface/DebuggingResult",children:(0,r.jsx)(n.code,{children:"DebuggingResults"})}),", as well as individual values so that they're easier to inspect and interact with in your debugger,"]}),"\n",(0,r.jsxs)(n.li,{children:["makes the actor ",(0,r.jsx)(n.a,{href:"/api/core/class/Actor#collect",children:"collect"})," data artifacts with the results of the evaluation and emit collected artifacts as ",(0,r.jsx)(n.a,{href:"/handbook/reporting/domain-events",children:"domain events"}),"\nto all the registered ",(0,r.jsx)(n.a,{href:"/handbook/reporting/",children:"Serenity/JS reporting services"})," so that they're included in your test reports."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"error-handling",children:"Error handling"}),"\n",(0,r.jsxs)(n.p,{children:["When resolving provided argument results in an error, the interaction to ",(0,r.jsx)(n.a,{href:"/api/core/class/Debug",children:(0,r.jsx)(n.code,{children:"Debug"})})," will still pass,\nbut the ",(0,r.jsx)(n.code,{children:"results"})," parameter will contain the details of the error so that you can debug it in your IDE:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { actorCalled, Debug, Question } from '@serenity-js/core'\n\nconst throws = () =>\n    Question.about('argument that throws an error', actor => {\n        throw new Error('example error')\n    })\n\nawait actorCalled('Debbie').attemptsTo(\n    Debug.values(\n        // debuggerFunction:\n        (results, value) => {\n            // set a breakpoint anywhere inside the function to view:\n            // - `value`, which will be `undefined` since resolving it resulted in an error\n            // - `results`, which will contain one entry:\n            //   [{\n            //     description: `argument that throws an error`,    <- description of the Question\n            //     value: undefined,\n            //     error: Error                                     <- Error thrown during resolution\n            //   }]\n        },\n        throws(),\n    ),\n);\n"})}),"\n",(0,r.jsxs)(n.p,{children:["When resolving more than one argument results in an error, ",(0,r.jsx)(n.code,{children:"results"})," array provides details of all the errors."]}),"\n",(0,r.jsx)(n.h2,{id:"embedding-in-tasks",children:"Embedding in Tasks"}),"\n",(0,r.jsxs)(n.p,{children:["Note that the interaction to ",(0,r.jsx)(n.a,{href:"/api/core/class/Debug",children:(0,r.jsx)(n.code,{children:"Debug"})})," can be embedded in other ",(0,r.jsx)(n.a,{href:"/api/core/class/Task",children:"tasks"}),",\nto help with debugging nested workflows:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { actorCalled, Debug, Task } from '@serenity-js/core'\nimport { Navigate, PageElement, By, Text } from '@serenity-js/web'\n\nconst browseSerenityDocs = () =>\n    Task.where(`#actor browses Serenity/JS documentation`,\n        Navigate.to('https://serenity-js.org'),\n        Debug.values(\n            // debuggerFunction:\n            (results, tagline) => {\n                // set a breakpoint anywhere inside this function\n            },\n            Text.of(PageElement.located(By.css('h1')).describedAs('tagline'))\n        ),\n    )\n\nawait actorCalled('Debbie').attemptsTo(\n    browseSerenityDocs(),\n);\n"})}),"\n",(0,r.jsx)(n.h2,{id:"exploring-playwright-locators",children:"Exploring Playwright locators"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://marketplace.visualstudio.com/items?itemName=ms-playwright.playwright",children:"Playwright Test for VSCode"}),"\nprovides features that allow for ",(0,r.jsx)(n.a,{href:"https://marketplace.visualstudio.com/items?itemName=ms-playwright.playwright#tune-locators",children:"experimenting with web UI locators"}),"\nwhile the test is paused at breakpoint."]}),"\n",(0,r.jsxs)(n.p,{children:["Since this functionality is specific to ",(0,r.jsx)(n.a,{href:"/api/playwright",children:"Playwright"}),", you can use it by passing ",(0,r.jsx)(n.a,{href:"/api/playwright/class/PlaywrightPage",children:(0,r.jsx)(n.code,{children:"PlaywrightPage.current().nativePage()"})}),"\nas one of the arguments. You must also name the evaluated value ",(0,r.jsx)(n.code,{children:"page"}),", as this is the variable name that the Playwright VSCode extension looks for:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { actorCalled, Debug } from '@serenity-js/core'\nimport { PlaywrightPage } from '@serenity-js/playwright'\nimport { Navigate } from '@serenity-js/web'\n\nawait actorCalled('Debbie').attemptsTo(\n    Navigate.to('https://serenity-js.org'),\n    Debug.values((results, page) => {\n        // set a breakpoint here to use Playwright locator debugging features\n        page.locator('h1')\n        // note that you can change this selector while having the test paused at breakpoint\n    }, PlaywrightPage.current().nativePage()),\n);\n"})}),"\n",(0,r.jsx)(n.h2,{id:"inspecting-page-element-html",children:"Inspecting page element HTML"}),"\n",(0,r.jsxs)(n.p,{children:["When debugging ",(0,r.jsx)(n.a,{href:"/handbook/web-testing/page-element-query-language/",children:"Page Element Query Language"})," expressions\nit can be helpful to inspect the HTML of the elements that match the query."]}),"\n",(0,r.jsxs)(n.p,{children:["To inspect the HTML of a single ",(0,r.jsx)(n.code,{children:"PageElement"}),", use its ",(0,r.jsx)(n.a,{href:"/api/web/class/PageElement/#html",children:(0,r.jsx)(n.code,{children:"html()"})})," instance method:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { actorCalled, Log } from '@serenity-js/core'\nimport { Navigate, PageElement, By, Text } from '@serenity-js/web'\nimport { includes } from '@serenity-js/assertions'\n\nawait actorCalled('Debbie').attemptsTo(\n    Navigate.to('https://serenity-js.org'),\n\n    Log.the(\n        PageElement.located(By.css('h1')).html()\n    ),\n\n    Log.the(\n        PageElements.located(By.css('a'))\n            .where(Text, includes('modular'))\n            .first()\n            .html()\n    ),\n);\n"})}),"\n",(0,r.jsxs)(n.p,{children:["To inspect the HTML of multiple matching ",(0,r.jsx)(n.code,{children:"PageElements"}),", use ",(0,r.jsx)(n.a,{href:"/api/web/class/PageElements/#eachMappedTo",children:(0,r.jsx)(n.code,{children:"PageElements#eachMappedTo"})}),"\ninstance method, combined with the meta-question produced by the ",(0,r.jsx)(n.a,{href:"/api/web/class/PageElement/#html",children:(0,r.jsx)(n.code,{children:"PageElement.html()"})})," static method:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { actorCalled, Log } from '@serenity-js/core'\nimport { Navigate, PageElement, By, Text } from '@serenity-js/web'\nimport { includes } from '@serenity-js/assertions'\n\nawait actorCalled('Debbie').attemptsTo(\n    Navigate.to('https://serenity-js.org'),\n\n    Log.the(\n        PageElements.located(By.css('a'))\n            .eachMappedTo(PageElement.html())\n    ),\n\n    Log.the(\n        PageElements.located(By.css('a'))\n            .where(Text, includes('modular'))\n            .eachMappedTo(PageElement.html())\n    ),\n);\n"})}),"\n",(0,r.jsx)(n.h2,{id:"inspecting-serenityjs-domain-events",children:"Inspecting Serenity/JS domain events"}),"\n",(0,r.jsxs)(n.p,{children:["Serenity/JS uses ",(0,r.jsx)(n.a,{href:"/handbook/reporting/domain-events/",children:"domain events"})," to facilitate communication between ",(0,r.jsx)(n.a,{href:"/api/core/class/Actor",children:"actors"}),"\nand ",(0,r.jsx)(n.a,{href:"/api/core/interface/StageCrewMember/",children:"stage crew members"})," (a.k.a. reporting services)."]}),"\n",(0,r.jsxs)(n.p,{children:["If you're developing a ",(0,r.jsxs)(n.a,{href:"/api/core/interface/StageCrewMember/",children:["custom ",(0,r.jsx)(n.code,{children:"StageCrewMember"})]}),", or ",(0,r.jsx)(n.a,{href:"/community/contributing/reporting-issues/",children:"suspect a bug in Serenity/JS"})," itself,\nyou can inspect those events using the ",(0,r.jsx)(n.a,{href:"/api/core/class/StreamReporter/",children:(0,r.jsx)(n.code,{children:"StreamReporter"})}),"."]})]})}function d(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var r=t(96540);const s={},i=r.createContext(s);function a(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);