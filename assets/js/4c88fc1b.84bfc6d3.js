"use strict";(self.webpackChunkserenity_js_org=self.webpackChunkserenity_js_org||[]).push([[7956],{28453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>a});var s=n(96540);const r={},i=s.createContext(r);function o(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(i.Provider,{value:t},e.children)}},82866:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"web-testing/index","title":"Web Testing Patterns","description":"Serenity/JS web module is an abstraction layer on top of popular web integration tools like WebdriverIO, Playwright, or Protractor.","source":"@site/src/docs/handbook/web-testing/index.mdx","sourceDirName":"web-testing","slug":"/web-testing/","permalink":"/handbook/web-testing/","draft":false,"unlisted":false,"editUrl":"https://github.com/serenity-js/serenity-js.org/tree/main/src/docs/handbook/web-testing/index.mdx","tags":[],"version":"current","lastUpdatedAt":1751920583000,"sidebarPosition":5,"frontMatter":{"sidebar_position":5,"title":"Web Testing Patterns"},"sidebar":"docs","previous":{"title":"Portable test code","permalink":"/handbook/design/portable-test-code"},"next":{"title":"Page Element Query Language","permalink":"/handbook/web-testing/page-element-query-language"}}');var r=n(74848),i=n(28453);const o={sidebar_position:5,title:"Web Testing Patterns"},a="Serenity/JS Web Testing Patterns",l={},c=[];function d(e){const t={a:"a",em:"em",h1:"h1",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"serenityjs-web-testing-patterns",children:"Serenity/JS Web Testing Patterns"})}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.a,{href:"/api/web",children:(0,r.jsx)(t.strong,{children:"Serenity/JS web module"})})," is an abstraction layer on top of popular web integration tools like ",(0,r.jsx)(t.a,{href:"/api/webdriverio",children:"WebdriverIO"}),", ",(0,r.jsx)(t.a,{href:"/api/playwright",children:"Playwright"}),", or ",(0,r.jsx)(t.a,{href:"/api/protractor",children:"Protractor"}),".\nIt helps you create ",(0,r.jsx)(t.strong,{children:"portable test code libraries"})," that interact with web-based interfaces and can be shared and reused across projects and teams."]}),"\n",(0,r.jsx)(t.p,{children:"To help you achieve this flexibility, Serenity/JS web module offers several key features:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.a,{href:"/api/web",children:(0,r.jsx)(t.strong,{children:"Portable interaction APIs"})})," - a library of ",(0,r.jsx)(t.a,{href:"/handbook/design/screenplay-pattern",children:"Screenplay Pattern"}),"-compatible ",(0,r.jsx)(t.em,{children:"interactions"}),", ",(0,r.jsx)(t.em,{children:"questions"}),", and ",(0,r.jsx)(t.em,{children:"models"})," that work the same way across all the supported web integration tools,"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.a,{href:"/handbook/web-testing/page-element-query-language",children:(0,r.jsx)(t.strong,{children:"Page Element Query Language"})})," - a portable, composable, and type-safe abstraction around low-level tool-specific selectors,"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.a,{href:"/handbook/design/assertions#web-assertions",children:(0,r.jsx)(t.strong,{children:"Web assertions"})})," and ",(0,r.jsx)(t.a,{href:"/handbook/design/waiting-and-synchronisation",children:(0,r.jsx)(t.strong,{children:"synchronisation"})})," - a library of ",(0,r.jsx)(t.em,{children:"expectations"})," to help you implement web-first assertions, as well as conditional logic and synchronisation using the same consistent pattern."]}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:"The best way to experience working with the Serenity/JS web module is by using it, which is what I'm going to show you next!"})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);