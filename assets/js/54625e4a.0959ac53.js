"use strict";(self.webpackChunkserenity_js_org=self.webpackChunkserenity_js_org||[]).push([[8075],{17790:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>p,frontMatter:()=>c,metadata:()=>t,toc:()=>h});const t=JSON.parse('{"id":"test-runners/jasmine","title":"Jasmine","description":"Jasmine is a universal test runner,","source":"@site/src/docs/handbook/test-runners/jasmine.mdx","sourceDirName":"test-runners","slug":"/test-runners/jasmine","permalink":"/handbook/test-runners/jasmine","draft":false,"unlisted":false,"editUrl":"https://github.com/serenity-js/serenity-js.org/tree/main/src/docs/handbook/test-runners/jasmine.mdx","tags":[],"version":"current","lastUpdatedAt":1736608534000,"sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"docs","previous":{"title":"Cucumber","permalink":"/handbook/test-runners/cucumber"},"next":{"title":"Mocha","permalink":"/handbook/test-runners/mocha"}}');var s=r(74848),i=r(28453),a=r(49489),o=r(7227);const c={sidebar_position:2},l="Jasmine",d={},h=[{value:"Examples and Project Templates",id:"examples-and-project-templates",level:2},{value:"Using Serenity/JS reporting services",id:"using-serenityjs-reporting-services",level:2},{value:"Installing Serenity/JS test runner adapter",id:"installing-serenityjs-test-runner-adapter",level:3},{value:"Configuring Serenity/JS",id:"configuring-serenityjs",level:3},{value:"Configuring Jasmine",id:"configuring-jasmine",level:3},{value:"Defining Jasmine test scenarios",id:"defining-jasmine-test-scenarios",level:3},{value:"Attaching Serenity/JS test runner adapter",id:"attaching-serenityjs-test-runner-adapter",level:3},{value:"Using Serenity/JS Screenplay Pattern APIs",id:"using-serenityjs-screenplay-pattern-apis",level:2},{value:"Configuring a cast of actors",id:"configuring-a-cast-of-actors",level:3},{value:"Referring to actors in test scenarios",id:"referring-to-actors-in-test-scenarios",level:3}];function u(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",mermaid:"mermaid",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"jasmine",children:"Jasmine"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://jasmine.github.io/",children:"Jasmine"})," is a universal test runner,\nparticularly popular with projects based on ",(0,s.jsx)(n.a,{href:"https://angular.io/",children:"Angular"})," framework.\nIf your project already uses Jasmine to run its unit tests,\nyou can use the same runner for your acceptance tests too."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"In this article, you will learn:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["How to use ",(0,s.jsx)(n.a,{href:"/handbook/reporting/",children:"Serenity/JS reporting services"}),", including the ",(0,s.jsx)(n.a,{href:"/handbook/reporting/serenity-bdd-reporter",children:"Serenity BDD reporter"}),", even if your test scenarios don't follow the Screenplay Pattern yet"]}),"\n",(0,s.jsxs)(n.li,{children:["How to implement Jasmine test scenarios using reusable ",(0,s.jsx)(n.a,{href:"/handbook/design/screenplay-pattern",children:"Serenity/JS Screenplay Pattern"})," APIs"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"examples-and-project-templates",children:"Examples and Project Templates"}),"\n",(0,s.jsxs)(n.p,{children:["If you'd like to dive straight into the code, ",(0,s.jsx)(n.a,{href:"https://github.com/serenity-js",children:"Serenity/JS GitHub repository"})," provides:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/serenity-js?q=jasmine+template&type=all&language=&sort=",children:"Serenity/JS + Jasmine project templates"}),", which are the easiest way to start with the framework,"]}),"\n",(0,s.jsxs)(n.li,{children:["several ",(0,s.jsx)(n.a,{href:"https://github.com/serenity-js/serenity-js/tree/main/examples",children:"reference implementations"}),", demonstrating using Serenity/JS with Jasmine to write both REST API- and web-based acceptance tests"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"using-serenityjs-reporting-services",children:"Using Serenity/JS reporting services"}),"\n",(0,s.jsxs)(n.p,{children:["To use ",(0,s.jsx)(n.a,{href:"/handbook/reporting/",children:"Serenity/JS reporting services"})," in a Jasmine project, you need to:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["attach the ",(0,s.jsx)(n.a,{href:"/api/jasmine",children:(0,s.jsx)(n.code,{children:"@serenity-js/jasmine"})})," test runner adapter to Jasmine"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/api/core/function/configure",children:"configure Serenity/JS"})," to use the reporting services you want to use,\nsuch as the ",(0,s.jsx)(n.a,{href:"/handbook/reporting/console-reporter",children:(0,s.jsx)(n.code,{children:"ConsoleReporter"})}),"\nor ",(0,s.jsx)(n.a,{href:"/handbook/reporting/serenity-bdd-reporter",children:(0,s.jsx)(n.code,{children:"SerenityBDDReporter"})})]}),"\n"]}),"\n",(0,s.jsx)(n.admonition,{title:"Serenity/JS test runner adapters",type:"tip",children:(0,s.jsxs)(n.p,{children:["Serenity/JS test runner adapters turn internal, test runner-specific events\ninto ",(0,s.jsx)(n.a,{href:"/handbook/reporting/domain-events",children:"Serenity/JS domain events"})," that can contribute to test execution reports produced\nby ",(0,s.jsx)(n.a,{href:"/handbook/reporting/",children:"Serenity/JS reporting services"}),"."]})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsxs)(n.a,{href:"/api/jasmine",children:[(0,s.jsx)(n.code,{children:"@serenity-js/jasmine"})," module"]})," provides a ",(0,s.jsx)(n.a,{href:"/handbook/getting-started/architecture",children:(0,s.jsx)(n.strong,{children:"test runner adapter"})}),"\nyou can attach to your Jasmine test runner."]}),"\n",(0,s.jsxs)(n.p,{children:["Integration architecture described in this section applies to invoking\n",(0,s.jsx)(n.code,{children:"jasmine"})," command line interface directly, for example for ",(0,s.jsx)(n.strong,{children:"domain-level"}),",\n",(0,s.jsx)(n.a,{href:"/handbook/api-testing/",children:(0,s.jsx)(n.strong,{children:"REST/HTTP API-level"})}),", or ",(0,s.jsx)(n.a,{href:"/handbook/web-testing/",children:(0,s.jsx)(n.strong,{children:"web-based testing"})}),"\nusing ",(0,s.jsx)(n.a,{href:"/api/playwright",children:"Playwright"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["If you want your Jasmine scenarios to interact with ",(0,s.jsx)(n.strong,{children:"web interfaces"})," using ",(0,s.jsx)(n.a,{href:"https://www.selenium.dev/documentation/webdriver/",children:"Selenium Webdriver protocol"}),",\nor connect them to a ",(0,s.jsx)(n.a,{href:"https://www.selenium.dev/documentation/grid/",children:"Selenium Grid"}),",\nyou should do so via ",(0,s.jsx)(n.a,{href:"/handbook/test-runners/protractor",children:"Protractor"}),"\nor ",(0,s.jsx)(n.a,{href:"/handbook/test-runners/webdriverio",children:"WebdriverIO"})," instead."]}),"\n",(0,s.jsxs)("figure",{children:[(0,s.jsx)(n.mermaid,{value:'graph TB\n    DEV(["\ud83d\udcbb Developer"])\n    TR(["jasmine"])\n    SC(["@serenity-js/core"])\n    TRA(["@serenity-js/jasmine"])\n    CF["config.ts"]\n    R(["Serenity/JS reporting services"])\n    DEV -- invokes --\x3e TR\n    TR -- loads --\x3e CF\n    TR -- notifies --\x3e TRA\n    TRA -- notifies --\x3e SC\n    CF -- configures --\x3e SC\n    SC -- notifies --\x3e R\n\n    click R "/handbook/reporting"\n    click SC "/api/core"\n    click TRA "/api/jasmine"'}),(0,s.jsx)("figcaption",{children:"Serenity/JS + Jasmine integration architecture"})]}),"\n",(0,s.jsx)(n.h3,{id:"installing-serenityjs-test-runner-adapter",children:"Installing Serenity/JS test runner adapter"}),"\n",(0,s.jsxs)(n.p,{children:["Assuming you already have a ",(0,s.jsx)(n.a,{href:"/handbook/getting-started/installation/#creating-a-nodejs-project",children:"Node.js project"}),"\nand ",(0,s.jsx)(n.a,{href:"/handbook/getting-started/installation/",children:"Serenity/JS runtime dependencies"})," set up,\nadd the following Node modules:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/api/core",children:(0,s.jsx)(n.code,{children:"@serenity-js/core"})})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/api/jasmine",children:(0,s.jsx)(n.code,{children:"@serenity-js/jasmine"})})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://www.npmjs.com/package/jasmine",children:(0,s.jsx)(n.code,{children:"jasmine"})})}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"To do that, run the following command in your terminal:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-npm2yarn",children:"npm install --save-dev @serenity-js/core @serenity-js/jasmine jasmine\n"})}),"\n",(0,s.jsx)(n.p,{children:"If you'd like to implement your test suite in TypeScript, also run:"}),"\n",(0,s.jsxs)(a.A,{groupId:"npm2yarn",children:[(0,s.jsx)(o.A,{value:"npm",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"npm install --save-dev typescript ts-node @types/jasmine @types/node\n"})})}),(0,s.jsx)(o.A,{value:"yarn",label:"Yarn",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"yarn add --dev typescript ts-node @types/jasmine @types/node\n"})})}),(0,s.jsx)(o.A,{value:"pnpm",label:"pnpm",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"pnpm add --save-dev typescript ts-node @types/jasmine @types/node\n"})})})]}),"\n",(0,s.jsx)(n.h3,{id:"configuring-serenityjs",children:"Configuring Serenity/JS"}),"\n",(0,s.jsxs)(n.p,{children:["If you intend to run your Jasmine scenarios using the ",(0,s.jsx)(n.a,{href:"https://github.com/jasmine/jasmine-npm",children:"Jasmine CLI"}),",\nthe best way to configure Serenity/JS is to invoke the Serenity/JS ",(0,s.jsx)(n.a,{href:"/api/core/function/configure",children:(0,s.jsx)(n.code,{children:"configure"})})," function\nin a ",(0,s.jsxs)(n.a,{href:"https://jasmine.github.io/api/edge/global.html#beforeAll",children:[(0,s.jsx)(n.code,{children:"beforeAll"})," hook"]}),",\ndefined in a Jasmine helper file:"]}),"\n",(0,s.jsxs)(a.A,{groupId:"code-examples",children:[(0,s.jsx)(o.A,{value:"ts",label:"TypeScript",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",metastring:'title="spec/helpers/serenity.config.ts" tab',children:"import 'jasmine'\n\nimport { configure } from '@serenity-js/core'\n\nbeforeAll(async () => {\n    // Configure Serenity/JS\n    configure({\n        crew: [\n            '@serenity-js/console-reporter',\n            '@serenity-js/serenity-bdd',\n            [ '@serenity-js/core:ArtifactArchiver', { outputDirectory: 'target/site/serenity' } ],\n            // ... any other reporting services\n        ],\n    })\n})\n"})})}),(0,s.jsx)(o.A,{value:"js",label:"JavaScript",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",metastring:'title="spec/helpers/serenity.config.js" tab',children:"const { configure } = require('@serenity-js/core')\n\nbeforeAll(async () => {\n    // Configure Serenity/JS\n    configure({\n        crew: [\n            '@serenity-js/console-reporter',\n            '@serenity-js/serenity-bdd',\n            [ '@serenity-js/core:ArtifactArchiver', { outputDirectory: 'target/site/serenity' } ],\n            // ... any other reporting services\n        ],\n    })\n})\n"})})})]}),"\n",(0,s.jsxs)(n.p,{children:["To learn more about installing and configuring Serenity/JS reporting services appropriate for your project,\nfollow the ",(0,s.jsx)(n.a,{href:"/handbook/reporting/",children:"Serenity/JS reporting guide"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"configuring-jasmine",children:"Configuring Jasmine"}),"\n",(0,s.jsxs)(n.p,{children:["You can initialise Jasmine configuration file at ",(0,s.jsx)(n.code,{children:"spec/support/jasmine.json"})," by running the following command:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"npx jasmine init\n"})}),"\n",(0,s.jsx)(n.p,{children:"The resulting configuration file should look similar to the following:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",metastring:'title="spec/support/jasmine.json"',children:'{\n  "spec_dir": "spec",\n  "spec_files": [\n    "**/*[sS]pec.js"\n  ],\n  "helpers": [\n    "helpers/**/*.js"\n  ],\n  "stopSpecOnExpectationFailure": false,\n  "random": true\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["For TypeScript projects, modify ",(0,s.jsx)(n.code,{children:"spec/support/jasmine.json"})," as follows:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",metastring:'title="spec/support/jasmine.json"',children:'{\n  "spec_dir": "spec",\n  "spec_files": [\n    "**/*[sS]pec.ts"\n  ],\n  "helpers": [\n    "helpers/**/*.ts"\n  ],\n  "requires": [\n    "ts-node/register"\n  ],\n  "stopSpecOnExpectationFailure": false,\n  "random": true\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"defining-jasmine-test-scenarios",children:"Defining Jasmine test scenarios"}),"\n",(0,s.jsxs)(n.p,{children:["When Serenity/JS reports on Jasmine test scenarios, it assumes you're following a common convention\nwhere the outermost ",(0,s.jsxs)(n.a,{href:"https://jasmine.github.io/api/edge/global.html#describe",children:[(0,s.jsx)(n.code,{children:"describe"})," block"]})," describes the name of the feature or component under test,\nand any nested ",(0,s.jsx)(n.code,{children:"describe"})," blocks contribute to the name of the test scenario."]}),"\n",(0,s.jsx)(n.p,{children:"For example, Serenity/JS will report the below scenario as:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["feature: ",(0,s.jsx)(n.code,{children:"Todo List App"})]}),"\n",(0,s.jsxs)(n.li,{children:["scenario: ",(0,s.jsx)(n.code,{children:"when the user is a guest their list is empty"})]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",metastring:'title="spec/todo-list.spec.ts"',children:"import 'jasmine'\n\ndescribe('Todo List App', () => {               // - feature or component name\n\n    describe('when the user is', () => {        // - one or more nested `describe` blocks\n        describe('a guest', () => {             //   to group scenarios\n            describe('their list', () => {      //   by context in which they apply\n\n                it('is empty', async () => {    // - expected behaviour of the feature or component\n\n                })\n            })\n        })\n    })\n})\n"})}),"\n",(0,s.jsx)(n.admonition,{title:"Feature coverage",type:"tip",children:(0,s.jsxs)(n.p,{children:["Using the same name for the outermost ",(0,s.jsx)(n.code,{children:"describe"}),' block in several different spec files makes\nSerenity BDD associate the different test scenarios with the same logical "feature" or "component"\nand produce ',(0,s.jsx)(n.a,{href:"https://serenity-bdd.github.io/docs/reporting/the_serenity_reports",children:"feature coverage metrics"}),"."]})}),"\n",(0,s.jsx)(n.h3,{id:"attaching-serenityjs-test-runner-adapter",children:"Attaching Serenity/JS test runner adapter"}),"\n",(0,s.jsxs)(n.p,{children:["To attach ",(0,s.jsx)(n.a,{href:"/api/jasmine",children:(0,s.jsx)(n.code,{children:"@serenity-js/jasmine"})})," test runner adapter to Jasmine,\nuse the ",(0,s.jsx)(n.a,{href:"https://jasmine.github.io/setup/nodejs.html#--reporter",children:(0,s.jsx)(n.code,{children:"--reporter"})})," option when invoking the test runner:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"npx jasmine --reporter='@serenity-js/jasmine'\n"})}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsxs)(n.p,{children:["At the time of writing, Jasmine doesn't allow for reporters to be registered via the ",(0,s.jsx)(n.code,{children:"jasmine.json"})," configuration file."]})}),"\n",(0,s.jsx)(n.h2,{id:"using-serenityjs-screenplay-pattern-apis",children:"Using Serenity/JS Screenplay Pattern APIs"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/api/core/class/Actor",children:"Serenity/JS actor model"})," works great with Jasmine\nand ",(0,s.jsx)(n.a,{href:"/handbook/design/screenplay-pattern",children:"Serenity/JS Screenplay Pattern"})," APIs can help your team implement\nJasmine test scenarios that are easy to read and understand."]}),"\n",(0,s.jsxs)(n.p,{children:["The fastest way to get started with Serenity/JS and Jasmine is to use one of\nthe ",(0,s.jsx)(n.a,{href:"https://github.com/serenity-js?q=jasmine+template&type=all&language=&sort=",children:"Serenity/JS + Jasmine project templates"}),".\nHowever, if you're adding Serenity/JS to an existing project or simply want to understand how the integration works,\nthis guide is for you."]}),"\n",(0,s.jsx)(n.h3,{id:"configuring-a-cast-of-actors",children:"Configuring a cast of actors"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/handbook/design/screenplay-pattern",children:"Serenity/JS Screenplay Pattern"})," is an actor-centred model, so the first thing you\nneed to do is to tell Serenity/JS what ",(0,s.jsx)(n.a,{href:"/api/core/class/Cast",children:"cast of actors"})," you want to use."]}),"\n",(0,s.jsxs)(n.p,{children:["If you're planning to run Jasmine scenarios using the ",(0,s.jsx)(n.a,{href:"https://github.com/jasmine/jasmine-npm",children:"Jasmine CLI"})," ",(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.em,{children:"directly"})}),",\nyou can configure the actors in a ",(0,s.jsx)(n.a,{href:"https://jasmine.github.io/api/edge/global.html#beforeAll",children:(0,s.jsx)(n.code,{children:"beforeAll"})})," hook, for example:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",metastring:'title="spec/helpers/serenity.config.ts"',children:"import 'jasmine'\n\nimport { configure, Cast } from '@serenity-js/core'\nimport { BrowseTheWebWithPlaywright } from '@serenity-js/playwright'\n\nimport * as playwright from 'playwright'\n\nlet browser: playwright.Browser;\n\nbeforeAll(async () => {\n\n    // Launch the browser once before all the tests\n    // Serenity/JS will take care of managing Playwright browser context and browser tabs.\n    browser = await playwright.chromium.launch({\n        headless: true,\n    });\n\n    // Configure Serenity/JS\n    configure({\n        actors: Cast.where(actor =>\n            actor.whoCan(BrowseTheWebWithPlaywright.using(browser, {\n                baseURL: 'https://todo-app.serenity-js.org/',\n            }))\n        ),\n        crew: [\n            '@serenity-js/console-reporter',\n            '@serenity-js/serenity-bdd',\n            [ '@serenity-js/core:ArtifactArchiver', { outputDirectory: 'target/site/serenity' } ],\n            // ... any other reporting services\n        ],\n    })\n})\n\nafterAll(async () => {\n    // Close the browser after all the tests are finished\n    await browser?.close()\n})\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Consult the respective test runner instructions if you're invoking Jasmine ",(0,s.jsx)(n.em,{children:(0,s.jsx)(n.strong,{children:"indirectly"})}),",\nso via ",(0,s.jsx)(n.a,{href:"/handbook/test-runners/protractor",children:"Protractor"})," or ",(0,s.jsx)(n.a,{href:"/handbook/test-runners/webdriverio",children:"WebdriverIO"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"referring-to-actors-in-test-scenarios",children:"Referring to actors in test scenarios"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/api/core/class/Actor",children:"Serenity/JS actors"})," are often used to represent user personas or important external systems\ninteracting with the system under test. In those scenarios, a common strategy is to give actors names indicating their persona,\nand refer to them in your test scenarios using functions ",(0,s.jsx)(n.a,{href:"/api/core/function/actorCalled",children:(0,s.jsx)(n.code,{children:"actorCalled"})}),"\nand ",(0,s.jsx)(n.a,{href:"/api/core/function/actorInTheSpotlight",children:(0,s.jsx)(n.code,{children:"actorInTheSpotlight"})}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",metastring:'title="spec/todo-list.spec.ts"',children:"import 'jasmine'\n\nimport { Ensure, equals } from '@serenity-js/assertions'\nimport { actorCalled } from '@serenity-js/core'\nimport { Navigate, PageElements, By } from '@serenity-js/web'\n\ndescribe('Todo List App', () => {\n\n    const displayedItems = () =>\n        PageElements.located(By.css('.todo-list li'))\n            .describedAs('displayed items')\n\n    describe('when the user is', () => {\n        describe('a guest', () => {\n            describe('their list', () => {\n\n                it('is empty', async () => {\n                    await actorCalled('Alice').attemptsTo(\n                        Navigate.to('https://todo-app.serenity-js.org/'),\n                        Ensure.that(displayedItems().count(), equals(0))\n                    )\n                })\n            })\n        })\n    })\n})\n"})})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},7227:(e,n,r)=>{r.d(n,{A:()=>a});r(96540);var t=r(34164);const s={tabItem:"tabItem_Ymn6"};var i=r(74848);function a(e){let{children:n,hidden:r,className:a}=e;return(0,i.jsx)("div",{role:"tabpanel",className:(0,t.A)(s.tabItem,a),hidden:r,children:n})}},49489:(e,n,r)=>{r.d(n,{A:()=>S});var t=r(96540),s=r(34164),i=r(24245),a=r(56347),o=r(36494),c=r(62814),l=r(45167),d=r(69900);function h(e){return t.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:n,children:r}=e;return(0,t.useMemo)((()=>{const e=n??function(e){return h(e).map((e=>{let{props:{value:n,label:r,attributes:t,default:s}}=e;return{value:n,label:r,attributes:t,default:s}}))}(r);return function(e){const n=(0,l.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,r])}function p(e){let{value:n,tabValues:r}=e;return r.some((e=>e.value===n))}function m(e){let{queryString:n=!1,groupId:r}=e;const s=(0,a.W6)(),i=function(e){let{queryString:n=!1,groupId:r}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return r??null}({queryString:n,groupId:r});return[(0,c.aZ)(i),(0,t.useCallback)((e=>{if(!i)return;const n=new URLSearchParams(s.location.search);n.set(i,e),s.replace({...s.location,search:n.toString()})}),[i,s])]}function j(e){const{defaultValue:n,queryString:r=!1,groupId:s}=e,i=u(e),[a,c]=(0,t.useState)((()=>function(e){let{defaultValue:n,tabValues:r}=e;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:r}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${r.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const t=r.find((e=>e.default))??r[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:n,tabValues:i}))),[l,h]=m({queryString:r,groupId:s}),[j,g]=function(e){let{groupId:n}=e;const r=function(e){return e?`docusaurus.tab.${e}`:null}(n),[s,i]=(0,d.Dv)(r);return[s,(0,t.useCallback)((e=>{r&&i.set(e)}),[r,i])]}({groupId:s}),f=(()=>{const e=l??j;return p({value:e,tabValues:i})?e:null})();(0,o.A)((()=>{f&&c(f)}),[f]);return{selectedValue:a,selectValue:(0,t.useCallback)((e=>{if(!p({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);c(e),h(e),g(e)}),[h,g,i]),tabValues:i}}var g=r(11062);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var y=r(74848);function x(e){let{className:n,block:r,selectedValue:t,selectValue:a,tabValues:o}=e;const c=[],{blockElementScrollPositionUntilNextRender:l}=(0,i.a_)(),d=e=>{const n=e.currentTarget,r=c.indexOf(n),s=o[r].value;s!==t&&(l(n),a(s))},h=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const r=c.indexOf(e.currentTarget)+1;n=c[r]??c[0];break}case"ArrowLeft":{const r=c.indexOf(e.currentTarget)-1;n=c[r]??c[c.length-1];break}}n?.focus()};return(0,y.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":r},n),children:o.map((e=>{let{value:n,label:r,attributes:i}=e;return(0,y.jsx)("li",{role:"tab",tabIndex:t===n?0:-1,"aria-selected":t===n,ref:e=>c.push(e),onKeyDown:h,onClick:d,...i,className:(0,s.A)("tabs__item",f.tabItem,i?.className,{"tabs__item--active":t===n}),children:r??n},n)}))})}function b(e){let{lazy:n,children:r,selectedValue:i}=e;const a=(Array.isArray(r)?r:[r]).filter(Boolean);if(n){const e=a.find((e=>e.props.value===i));return e?(0,t.cloneElement)(e,{className:(0,s.A)("margin-top--md",e.props.className)}):null}return(0,y.jsx)("div",{className:"margin-top--md",children:a.map(((e,n)=>(0,t.cloneElement)(e,{key:n,hidden:e.props.value!==i})))})}function v(e){const n=j(e);return(0,y.jsxs)("div",{className:(0,s.A)("tabs-container",f.tabList),children:[(0,y.jsx)(x,{...n,...e}),(0,y.jsx)(b,{...n,...e})]})}function S(e){const n=(0,g.A)();return(0,y.jsx)(v,{...e,children:h(e.children)},String(n))}},28453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>o});var t=r(96540);const s={},i=t.createContext(s);function a(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);