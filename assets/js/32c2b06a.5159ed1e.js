"use strict";(self.webpackChunkserenity_js_org=self.webpackChunkserenity_js_org||[]).push([[9910],{24324:e=>{e.exports=JSON.parse('[{"name":"Core Modules","description":"\\n[Serenity/JS core modules](/handbook/design/) form the foundation of the Serenity/JS framework,\\nproviding essential functionality such as the Screenplay Pattern for structuring your automated tests,\\nreporting infrastructure for capturing the activities of your actors and processing test results,\\nand assertion libraries for verifying test outcomes.\\n\\nFor practical examples of writing different kinds of automated tests using Serenity/JS,\\ncheck out the [Serenity/JS Project Templates](/handbook/project-templates/).        \\n        ","items":[{"name":"@serenity-js/core","description":"The core Serenity/JS framework, providing the Screenplay Pattern interfaces, as well as the test reporting and integration infrastructure","version":"3.31.15","engines":{"node":"^18.12 || ^20 || ^22"},"compatibility":{},"permalink":"/api/core"},{"name":"@serenity-js/assertions","description":"Serenity/JS universal assertion library supporting all types of functional tests, including both web and REST API scenarios","version":"3.31.15","engines":{"node":"^18.12 || ^20 || ^22"},"compatibility":{},"permalink":"/api/assertions"}]},{"name":"Web Testing","description":"\\n[Serenity/JS web modules](/handbook/web-testing/) offer a **standardised abstraction layer** on top of popular web integration tools,\\nenabling you to write **portable web automation code** that follows the Screenplay Pattern\\nand works just as well for end-to-end test scenarios as for UI component tests.\\n\\nFor practical examples of writing web-based tests using Serenity/JS,\\ncheck out the [Serenity/JS Project Templates for web testing](/handbook/project-templates/#web-testing)\\nand the [Serenity/JS web testing tutorial](/handbook/tutorials/your-first-web-scenario/).\\n        ","items":[{"name":"@serenity-js/web","description":"Serenity/JS Screenplay Pattern library offering a flexible, web driver-agnostic approach for interacting with web-based user interfaces and components, suitable for various testing contexts","version":"3.31.15","engines":{"node":"^18.12 || ^20 || ^22"},"compatibility":{},"permalink":"/api/web"},{"name":"@serenity-js/playwright","description":"Adapter that integrates @serenity-js/web with Playwright, enabling Serenity/JS reporting and using the Screenplay Pattern to write component and end-to-end test scenarios","version":"3.31.15","engines":{"node":"^18.12 || ^20 || ^22"},"compatibility":{"playwright-core":{"version":"~1.52.0","type":"required"}},"permalink":"/api/playwright"},{"name":"@serenity-js/protractor","description":"Adapter that integrates @serenity-js/web with Protractor, enabling Serenity/JS reporting and using the Screenplay Pattern to write end-to-end test scenarios","version":"3.31.15","engines":{"node":"^18.12 || ^20 || ^22"},"compatibility":{"protractor":{"version":"^5.0.0 || ^7.0.0","type":"required"}},"permalink":"/api/protractor"},{"name":"@serenity-js/webdriverio","description":"Adapter that integrates @serenity-js/web with the latest stable version of WebdriverIO, enabling Serenity/JS reporting and using the Screenplay Pattern to write web and mobile test scenarios","version":"3.31.15","engines":{"node":"^18.12 || ^20 || ^22"},"compatibility":{"@wdio/cli":{"version":"^9.12.7","type":"required"},"webdriverio":{"version":"^9.12.7","type":"required"}},"permalink":"/api/webdriverio"},{"name":"@serenity-js/webdriverio-8","description":"Adapter that integrates @serenity-js/web with WebdriverIO 8, enabling Serenity/JS reporting and using the Screenplay Pattern to write web and mobile test scenarios","version":"3.31.15","engines":{"node":"^18.12 || ^20 || ^22"},"compatibility":{"@wdio/cli":{"version":"^8.44.1","type":"required"},"webdriverio":{"version":"^8.44.1","type":"required"}},"permalink":"/api/webdriverio-8"}]},{"name":"REST API Testing","description":"\\n[Serenity/JS REST modules](/handbook/api-testing/) enable you to automate interactions with REST and other HTTP-based APIs,\\neither as part of dedicated API test suites, or as part of web-based test scenarios.\\n\\nFor practical examples of writing API-based tests using Serenity/JS,\\ncheck out the [Serenity/JS Project Templates for API testing](/handbook/project-templates/#resthttp-api-testing)\\nand the [Serenity/JS API testing tutorial](/handbook/tutorials/your-first-api-scenario/).\\n        ","items":[{"name":"@serenity-js/rest","description":"Serenity/JS Screenplay Pattern library for interacting with REST and other HTTP-based services, supporting comprehensive API testing and blended testing scenarios","version":"3.31.15","engines":{"node":"^18.12 || ^20 || ^22"},"compatibility":{"axios":{"version":"1.9.0","type":"direct"}},"permalink":"/api/rest"},{"name":"@serenity-js/local-server","description":"Serenity/JS Screenplay Pattern library for managing local Node.js test servers, including Express, Koa, Hapi, and Restify, to support comprehensive integration testing","version":"3.31.15","engines":{"node":"^18.12 || ^20 || ^22"},"compatibility":{"@hapi/hapi":{"version":"^21.4.0","type":"optional"},"express":{"version":"^5.1.0","type":"optional"},"koa":{"version":"^3.0.0","type":"optional"},"restify":{"version":"^11.1.0","type":"optional"}},"permalink":"/api/local-server"}]},{"name":"Reporting","description":"\\n[Serenity/JS reporting modules](/handbook/reporting/) capture information about the activities performed by your actors\\nduring a test scenario and translate it into test reports and living documentation of your system.\\n        ","items":[{"name":"@serenity-js/console-reporter","description":"Serenity/JS console reporter that displays test results directly in the standard output","version":"3.31.15","engines":{"node":"^18.12 || ^20 || ^22"},"compatibility":{},"permalink":"/api/console-reporter"},{"name":"@serenity-js/serenity-bdd","description":"Serenity/JS reporting module that produces detailed Serenity BDD test reports and living documentation, enhancing transparency and traceability of test results","version":"3.31.15","engines":{"node":"^18.12 || ^20 || ^22"},"compatibility":{"axios":{"version":"1.9.0","type":"direct"}},"permalink":"/api/serenity-bdd"}]},{"name":"Test Runners","description":"\\n[Serenity/JS test runner adapters](/handbook/test-runners/) enable you to execute your Serenity/JS test scenarios\\nusing popular test runners and integrate them with [Serenity/JS reporting services](/handbook/reporting).\\n        ","items":[{"name":"@serenity-js/cucumber","description":"Serenity/JS test runner adapter for seamless integration with any version of Cucumber.js, facilitating BDD-style test automation and leveraging Serenity/JS reporting capabilities","version":"3.31.15","engines":{"node":"^18.12 || ^20 || ^22"},"compatibility":{"@cucumber/cucumber":{"version":"^7.3.2 || ^8.5.0 || ^9.1.0 || ^10.0.0 || ^11.0.0","type":"optional"},"cucumber":{"version":"^1.3.3 || ^2.3.1 || ^3.2.1 || ^4.2.1 || ^5.0.0 || ^6.0.0","type":"optional"}},"permalink":"/api/cucumber"},{"name":"@serenity-js/jasmine","description":"Serenity/JS test runner adapter for Jasmine, enabling the use of the Screenplay Pattern in Jasmine-based test suites and leveraging Serenity/JS reporting capabilities","version":"3.31.15","engines":{"node":"^18.12 || ^20 || ^22"},"compatibility":{"jasmine":{"version":"^5.7.1","type":"required"}},"permalink":"/api/jasmine"},{"name":"@serenity-js/mocha","description":"Serenity/JS test runner adapter for Mocha, enabling the use of the Screenplay Pattern in Mocha-based test suites and leveraging Serenity/JS reporting capabilities","version":"3.31.15","engines":{"node":"^18.12 || ^20 || ^22"},"compatibility":{"mocha":{"version":"^10.8.2 || ^11.0.1","type":"required"}},"permalink":"/api/mocha"},{"name":"@serenity-js/playwright-test","description":"Serenity/JS test runner adapter for Playwright Test, combining Playwright\'s developer experience with the advanced reporting and automation capabilities of Serenity/JS","version":"3.31.15","engines":{"node":"^18.12 || ^20 || ^22"},"compatibility":{"@playwright/test":{"version":"~1.52.0","type":"required"}},"permalink":"/api/playwright-test"}]}]')}}]);