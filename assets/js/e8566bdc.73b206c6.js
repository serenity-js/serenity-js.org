"use strict";(self.webpackChunkserenity_js_org=self.webpackChunkserenity_js_org||[]).push([[1674],{38417:e=>{e.exports=JSON.parse('[{"entryPoints":[{"index":true,"label":"Index","reflection":{"id":4,"name":"@serenity-js/assertions","variant":"declaration","kind":2,"flags":{"isExternal":true},"children":[{"id":3056,"name":"Ensure","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The [interaction](/api/core/class/Interaction/) to "},{"kind":"code","text":"`Ensure`"},{"kind":"text","text":"\\nverifies if the resolved value of the provided ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable)\\nmeets the specified ["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/).\\nIf not, it throws an ["},{"kind":"code","text":"`AssertionError`"},{"kind":"text","text":"](/api/core/class/AssertionError/).\\n\\nUse "},{"kind":"code","text":"`Ensure`"},{"kind":"text","text":" to verify the state of the system under test.\\n\\n## Basic usage with static values\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Erica\').attemptsTo(\\n  Ensure.that(\'Hello world!\', equals(\'Hello world!\'))\\n)\\n```"},{"kind":"text","text":"\\n\\n## Composing expectations with "},{"kind":"code","text":"`and`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { and, Ensure, startsWith, endsWith } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Erica\').attemptsTo(\\n  Ensure.that(\'Hello world!\', and(startsWith(\'Hello\'), endsWith(\'!\'))\\n)\\n```"},{"kind":"text","text":"\\n\\n## Overriding the type of Error thrown upon assertion failure\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, TestCompromisedError } from \'@serenity-js/core\'\\nimport { and, Ensure, startsWith, endsWith } from \'@serenity-js/assertions\'\\nimport { CallAnApi, GetRequest, LastResponse, Send } from \'@serenity-js/rest\'\\n\\nawait actorCalled(\'Erica\')\\n  .whoCan(CallAnApi.at(\'https://example.com\'))\\n  .attemptsTo(\\n    Send.a(GetRequest.to(\'/api/health\')),\\n    Ensure.that(LastResponse.status(), equals(200))\\n      .otherwiseFailWith(TestCompromisedError, \'The server is down, please cheer it up!\')\\n  )\\n```"}]},"children":[{"id":3057,"name":"that","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/assertions/src/Ensure.ts","line":88,"character":11}],"signatures":[{"id":3058,"name":"that","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates an [interaction](/api/core/class/Interaction/) to "},{"kind":"code","text":"`Ensure`"},{"kind":"text","text":", which\\nverifies if the resolved value of the provided ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable)\\nmeets the specified ["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/).\\nIf not, it immediately throws an ["},{"kind":"code","text":"`AssertionError`"},{"kind":"text","text":"](/api/core/class/AssertionError/)."}],"blockTags":[{"tag":"@returns","content":[]}]},"sources":[{"fileName":"packages/assertions/src/Ensure.ts","line":88,"character":11}],"typeParameter":[{"id":3059,"name":"Actual_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":3060,"name":"actual","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable) describing the actual state of the system."}]},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":3059,"name":"Actual_Type","package":"@serenity-js/assertions","refersToTypeParameter":true}],"name":"Answerable","package":"@serenity-js/core"}},{"id":3061,"name":"expectation","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An ["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/) you expect the "},{"kind":"code","text":"`actual`"},{"kind":"text","text":" value to meet"}]},"type":{"type":"reference","target":1156,"typeArguments":[{"type":"reference","target":3059,"name":"Actual_Type","package":"@serenity-js/assertions","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}],"type":{"type":"reference","target":3056,"typeArguments":[{"type":"reference","target":3059,"name":"Actual_Type","package":"@serenity-js/assertions","refersToTypeParameter":true}],"name":"Ensure","package":"@serenity-js/assertions"}}]},{"id":3062,"name":"eventually","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/assertions/src/Ensure.ts","line":107,"character":11}],"signatures":[{"id":3063,"name":"eventually","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates an [interaction](/api/core/class/Interaction/) to ["},{"kind":"code","text":"`EnsureEventually`"},{"kind":"text","text":"](/api/assertions/class/EnsureEventually/),\\nwhich verifies if the resolved value of the provided ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable)\\nmeets the specified ["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/) within the expected timeframe.\\n\\nIf the expectation is not met by the time the timeout expires, the interaction throws an ["},{"kind":"code","text":"`AssertionError`"},{"kind":"text","text":"](/api/core/class/AssertionError/)."}],"blockTags":[{"tag":"@returns","content":[]}]},"sources":[{"fileName":"packages/assertions/src/Ensure.ts","line":107,"character":11}],"typeParameter":[{"id":3064,"name":"Actual_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":3065,"name":"actual","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable) describing the actual state of the system."}]},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":3064,"name":"Actual_Type","package":"@serenity-js/assertions","refersToTypeParameter":true}],"name":"Answerable","package":"@serenity-js/core"}},{"id":3066,"name":"expectation","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An ["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/) you expect the "},{"kind":"code","text":"`actual`"},{"kind":"text","text":" value to meet"}]},"type":{"type":"reference","target":1156,"typeArguments":[{"type":"reference","target":3064,"name":"Actual_Type","package":"@serenity-js/assertions","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}],"type":{"type":"reference","target":3112,"typeArguments":[{"type":"reference","target":3064,"name":"Actual_Type","package":"@serenity-js/assertions","refersToTypeParameter":true}],"name":"EnsureEventually","package":"@serenity-js/assertions"}}]},{"id":3085,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/Ensure.ts","line":127,"character":10}],"signatures":[{"id":3086,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/assertions/src/Ensure.ts","line":127,"character":10}],"parameters":[{"id":3087,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":710,"name":"CollectsArtifacts","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Interaction.performAs"}}],"overwrites":{"type":"reference","target":-1,"name":"Interaction.performAs"}},{"id":3088,"name":"otherwiseFailWith","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/Ensure.ts","line":160,"character":4}],"signatures":[{"id":3089,"name":"otherwiseFailWith","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Overrides the default ["},{"kind":"code","text":"`AssertionError`"},{"kind":"text","text":"](/api/core/class/AssertionError/) thrown when\\nthe actual value does not meet the expectation."}]},"sources":[{"fileName":"packages/assertions/src/Ensure.ts","line":160,"character":4}],"parameters":[{"id":3090,"name":"typeOfRuntimeError","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A constructor function producing a subtype of ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/) to throw, e.g. ["},{"kind":"code","text":"`TestCompromisedError`"},{"kind":"text","text":"](/api/core/class/TestCompromisedError/)"}]},"type":{"type":"reflection","declaration":{"id":3091,"name":"__type","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/Ensure.ts","line":160,"character":42}],"signatures":[{"id":3092,"name":"new typeOfRuntimeError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/Ensure.ts","line":160,"character":42}],"parameters":[{"id":3093,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":3094,"name":"cause","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}],"type":{"type":"reference","target":367,"name":"RuntimeError","package":"@serenity-js/core"}}]}}},{"id":3095,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The message explaining the failure"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":3097,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"signatures":[{"id":3098,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.instantiationLocation"}},{"id":3099,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":3100,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":3101,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":3102,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3103,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3103]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.describedBy"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.describedBy"}},{"id":3109,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":3110,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.toString"}}],"groups":[{"title":"Methods","children":[3057,3062,3085,3088,3097,3099,3109]}],"sources":[{"fileName":"packages/assertions/src/Ensure.ts","line":72,"character":13}],"typeParameters":[{"id":3111,"name":"Actual","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"extendedTypes":[{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}],"permalink":"/api/assertions/class/Ensure","categories":[],"nextId":3112},{"id":3112,"name":"EnsureEventually","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The [interaction](/api/core/class/Interaction/) to "},{"kind":"code","text":"`EnsureEventually`"},{"kind":"text","text":"\\nverifies if the resolved value of the provided ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable)\\nmeets the specified ["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/) within the expected timeframe.\\n\\nIf the expectation is not met by the time the timeout expires, the interaction throws an ["},{"kind":"code","text":"`AssertionError`"},{"kind":"text","text":"](/api/core/class/AssertionError/).\\n"},{"kind":"code","text":"`EnsureEventually`"},{"kind":"text","text":" retries the evaluation if resolving the "},{"kind":"code","text":"`actual`"},{"kind":"text","text":" results in an ["},{"kind":"code","text":"`ListItemNotFoundError`"},{"kind":"text","text":"](/api/core/class/ListItemNotFoundError/),\\nbut rethrows any other errors.\\n\\n:::tip Use the factory method\\nUse the factory method ["},{"kind":"code","text":"`Ensure.eventually`"},{"kind":"text","text":"](/api/assertions/class/Ensure/#eventually) to instantiate this interaction.\\n:::\\n\\n## Basic usage with dynamic values\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { Text, PageElement, By } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Erica\').attemptsTo(\\n  Ensure.eventually(\\n    Text.of(PageElement.located(By.css(\'h1\'))),\\n    equals(\'Learn Serenity/JS!\')\\n  )\\n)\\n```"},{"kind":"text","text":"\\n\\n## Composing expectations with "},{"kind":"code","text":"`and`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { and, Ensure, startsWith, endsWith } from \'@serenity-js/assertions\'\\nimport { Text, PageElement, By } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Erica\').attemptsTo(\\n  Ensure.eventually(\\n    Text.of(PageElement.located(By.css(\'h1\'))),\\n    and(startsWith(\'Serenity\'), endsWith(\'!\'))\\n  )\\n)\\n```"},{"kind":"text","text":"\\n\\n## Overriding the type of Error thrown upon assertion failure\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { and, Ensure, startsWith, endsWith } from \'@serenity-js/assertions\'\\nimport { Text, PageElement, By } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Erica\').attemptsTo(\\n  Ensure.eventually(\\n    Text.of(PageElement.located(By.css(\'h1\'))),\\n    and(startsWith(\'Serenity\'), endsWith(\'!\'))\\n  ).otherwiseFailWith(LogicError, `Looks like we\'re not on the right page`)\\n)\\n```"}],"modifierTags":["@experimental"]},"children":[{"id":3123,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/EnsureEventually.ts","line":92,"character":4}],"signatures":[{"id":3124,"name":"new EnsureEventually","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/EnsureEventually.ts","line":92,"character":4}],"typeParameter":[{"id":3125,"name":"Actual","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":3126,"name":"actual","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":3125,"name":"Actual","package":"@serenity-js/assertions","qualifiedName":"EnsureEventually.Actual","refersToTypeParameter":true}],"name":"Answerable","package":"@serenity-js/core"}},{"id":3127,"name":"expectation","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1156,"typeArguments":[{"type":"reference","target":3125,"name":"Actual","package":"@serenity-js/assertions","qualifiedName":"EnsureEventually.Actual","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}},{"id":3128,"name":"location","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"}},{"id":3129,"name":"timeout","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1795,"name":"Duration","package":"@serenity-js/core"}}],"type":{"type":"reference","target":3112,"typeArguments":[{"type":"reference","target":3125,"name":"Actual","package":"@serenity-js/assertions","qualifiedName":"EnsureEventually.Actual","refersToTypeParameter":true}],"name":"EnsureEventually","package":"@serenity-js/assertions"},"overwrites":{"type":"reference","target":-1,"name":"Interaction.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"Interaction.constructor"}},{"id":3133,"name":"timeoutAfter","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/EnsureEventually.ts","line":106,"character":4}],"signatures":[{"id":3134,"name":"timeoutAfter","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Override the default timeout set via ["},{"kind":"code","text":"`SerenityConfig.interactionTimeout`"},{"kind":"text","text":"](/api/core/class/SerenityConfig/#interactionTimeout)."}]},"sources":[{"fileName":"packages/assertions/src/EnsureEventually.ts","line":106,"character":4}],"parameters":[{"id":3135,"name":"timeout","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1795,"name":"Duration","package":"@serenity-js/core"}}],"type":{"type":"reference","target":3112,"typeArguments":[{"type":"reference","target":3125,"name":"Actual","package":"@serenity-js/assertions","qualifiedName":"EnsureEventually.Actual","refersToTypeParameter":true}],"name":"EnsureEventually","package":"@serenity-js/assertions"}}]},{"id":3136,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/EnsureEventually.ts","line":113,"character":10}],"signatures":[{"id":3137,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/assertions/src/EnsureEventually.ts","line":113,"character":10}],"parameters":[{"id":3138,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":710,"name":"CollectsArtifacts","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Interaction.performAs"}}],"overwrites":{"type":"reference","target":-1,"name":"Interaction.performAs"}},{"id":3139,"name":"otherwiseFailWith","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/EnsureEventually.ts","line":161,"character":4}],"signatures":[{"id":3140,"name":"otherwiseFailWith","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Overrides the default ["},{"kind":"code","text":"`AssertionError`"},{"kind":"text","text":"](/api/core/class/AssertionError/) thrown when\\nthe actual value does not meet the expectation."}]},"sources":[{"fileName":"packages/assertions/src/EnsureEventually.ts","line":161,"character":4}],"parameters":[{"id":3141,"name":"typeOfRuntimeError","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A constructor function producing a subtype of ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/) to throw, e.g. ["},{"kind":"code","text":"`TestCompromisedError`"},{"kind":"text","text":"](/api/core/class/TestCompromisedError/)"}]},"type":{"type":"reflection","declaration":{"id":3142,"name":"__type","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/EnsureEventually.ts","line":161,"character":42}],"signatures":[{"id":3143,"name":"new typeOfRuntimeError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/EnsureEventually.ts","line":161,"character":42}],"parameters":[{"id":3144,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":3145,"name":"cause","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}],"type":{"type":"reference","target":367,"name":"RuntimeError","package":"@serenity-js/core"}}]}}},{"id":3146,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The message explaining the failure"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":3148,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"signatures":[{"id":3149,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.instantiationLocation"}},{"id":3150,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":3151,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":3152,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":3153,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3154,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3154]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.describedBy"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.describedBy"}},{"id":3160,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":3161,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.toString"}}],"groups":[{"title":"Constructors","children":[3123]},{"title":"Methods","children":[3133,3136,3139,3148,3150,3160]}],"sources":[{"fileName":"packages/assertions/src/EnsureEventually.ts","line":85,"character":13}],"typeParameters":[{"id":3162,"name":"Actual","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"extendedTypes":[{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}],"permalink":"/api/assertions/class/EnsureEventually","categories":[],"previousId":3056,"nextId":3163},{"id":3163,"name":"and","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/expectations/and.ts","line":24,"character":16}],"signatures":[{"id":3164,"name":"and","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates an [expectation](/api/core/class/Expectation/) that is met when all the "},{"kind":"code","text":"`expectations`"},{"kind":"text","text":" are met for the given actual value.\\n\\nUse "},{"kind":"code","text":"`and`"},{"kind":"text","text":" to combine several expectations using logical \\"and\\",\\n\\n## Combining several expectations\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, and, startsWith, endsWith } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(\'Hello World!\', and(startsWith(\'Hello\'), endsWith(\'!\'))),\\n)\\n```"}]},"sources":[{"fileName":"packages/assertions/src/expectations/and.ts","line":24,"character":16}],"typeParameter":[{"id":3165,"name":"Actual_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":3166,"name":"expectations","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":1156,"typeArguments":[{"type":"reference","target":3165,"name":"Actual_Type","package":"@serenity-js/assertions","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}}],"type":{"type":"reference","target":1156,"typeArguments":[{"type":"reference","target":3165,"name":"Actual_Type","package":"@serenity-js/assertions","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/assertions/function/and","categories":[],"previousId":3112,"nextId":3167},{"id":3167,"name":"contain","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/expectations/contain.ts","line":28,"character":13}],"signatures":[{"id":3168,"name":"contain","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Produces an [expectation](/api/core/class/Expectation/) that is met when the actual array of "},{"kind":"code","text":"`Item[]`"},{"kind":"text","text":" contains\\nat least one "},{"kind":"code","text":"`Item`"},{"kind":"text","text":" that is equal to the resolved value of "},{"kind":"code","text":"`expected`"},{"kind":"text","text":".\\n\\nNote that the equality check performs comparison **by value**\\nusing [TinyTypes "},{"kind":"code","text":"`equal`"},{"kind":"text","text":"](https://github.com/jan-molak/tiny-types/blob/master/src/objects/equal.ts).\\n\\n## Ensuring that the array contains the given item\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, and, startsWith, endsWith } from \'@serenity-js/assertions\'\\n\\nconst items = [ { name: \'apples\' }, { name: \'bananas\' } ]\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(items, contain({ name: \'bananas\' })),\\n)\\n```"}]},"sources":[{"fileName":"packages/assertions/src/expectations/contain.ts","line":28,"character":13}],"typeParameter":[{"id":3169,"name":"Item","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":3170,"name":"answerableArguments","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"expected","isOptional":false,"element":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":3169,"name":"Item","package":"@serenity-js/assertions","refersToTypeParameter":true}],"name":"Answerable","package":"@serenity-js/core"}}]}}],"type":{"type":"reference","target":1156,"typeArguments":[{"type":"array","elementType":{"type":"reference","target":3169,"name":"Item","package":"@serenity-js/assertions","refersToTypeParameter":true}}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/assertions/function/contain","categories":[],"previousId":3163,"nextId":3171},{"id":3171,"name":"containAtLeastOneItemThat","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/expectations/containAtLeastOneItemThat.ts","line":25,"character":16}],"signatures":[{"id":3172,"name":"containAtLeastOneItemThat","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Produces an [expectation](/api/core/class/Expectation/) that is met when the actual array of "},{"kind":"code","text":"`Item[]`"},{"kind":"text","text":" contains\\nat least one "},{"kind":"code","text":"`Item`"},{"kind":"text","text":" for which the "},{"kind":"code","text":"`expectation`"},{"kind":"text","text":" is met.\\n\\n## Ensuring that at least one item in an array meets the expectation\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, containAtLeastOneItemThat, isGreaterThan } from \'@serenity-js/assertions\'\\n\\nconst items = [ 10, 15, 20 ]\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(items, containAtLeastOneItemThat(isGreaterThan(18))),\\n)\\n```"}]},"sources":[{"fileName":"packages/assertions/src/expectations/containAtLeastOneItemThat.ts","line":25,"character":16}],"typeParameter":[{"id":3173,"name":"Item","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":3174,"name":"expectation","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1156,"typeArguments":[{"type":"reference","target":3173,"name":"Item","package":"@serenity-js/assertions","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1156,"typeArguments":[{"type":"array","elementType":{"type":"reference","target":3173,"name":"Item","package":"@serenity-js/assertions","refersToTypeParameter":true}}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/assertions/function/containAtLeastOneItemThat","categories":[],"previousId":3167,"nextId":3175},{"id":3175,"name":"containItemsWhereEachItem","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/expectations/containItemsWhereEachItem.ts","line":25,"character":16}],"signatures":[{"id":3176,"name":"containItemsWhereEachItem","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Produces an [expectation](/api/core/class/Expectation/) that is met when all the items of the actual array of "},{"kind":"code","text":"`Item[]`"},{"kind":"text","text":"\\nmeet the "},{"kind":"code","text":"`expectation`"},{"kind":"text","text":".\\n\\n## Ensuring that all the items in an array meet the expectation\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, containItemsWhereEachItem, endsWith } from \'@serenity-js/assertions\'\\n\\nconst items = [ \'Monday\', \'Tuesday\', \'Wednesday\', \'Thursday\', \'Friday\' ]\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(items, containItemsWhereEachItem(endsWith(\'day\'))),\\n)\\n```"}]},"sources":[{"fileName":"packages/assertions/src/expectations/containItemsWhereEachItem.ts","line":25,"character":16}],"typeParameter":[{"id":3177,"name":"Actual","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":3178,"name":"expectation","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1156,"typeArguments":[{"type":"reference","target":3177,"name":"Actual","package":"@serenity-js/assertions","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1156,"typeArguments":[{"type":"array","elementType":{"type":"reference","target":3177,"name":"Actual","package":"@serenity-js/assertions","refersToTypeParameter":true}}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/assertions/function/containItemsWhereEachItem","categories":[],"previousId":3171,"nextId":3179},{"id":3179,"name":"endsWith","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/expectations/endsWith.ts","line":22,"character":13}],"signatures":[{"id":3180,"name":"endsWith","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates an [expectation](/api/core/class/Expectation/) that is met when the actual "},{"kind":"code","text":"`string`"},{"kind":"text","text":" value\\nends with the resolved value of "},{"kind":"code","text":"`expected`"},{"kind":"text","text":".\\n\\n## Ensuring that a given string ends with an expected substring\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, endsWith } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(\'Hello World!\', endsWith(\'!\')),\\n)\\n```"}]},"sources":[{"fileName":"packages/assertions/src/expectations/endsWith.ts","line":22,"character":13}],"parameters":[{"id":3181,"name":"answerableArguments","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"expected","isOptional":false,"element":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}}],"type":{"type":"reference","target":1156,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/assertions/function/endsWith","categories":[],"previousId":3175,"nextId":3182},{"id":3182,"name":"equals","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/expectations/equals.ts","line":29,"character":13}],"signatures":[{"id":3183,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Produces an [expectation](/api/core/class/Expectation/) that is met when the actual value\\nis equal to the resolved value of "},{"kind":"code","text":"`expectedValue`"},{"kind":"text","text":".\\n\\nNote that the equality check performs comparison **by value**\\nusing [TinyTypes "},{"kind":"code","text":"`equal`"},{"kind":"text","text":"](https://github.com/jan-molak/tiny-types/blob/master/src/objects/equal.ts).\\n\\n## Ensuring that the actual value equals expected value\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nconst actual   = { name: \'apples\' }\\nconst expected = { name: \'apples\' }\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(actual, equals(expected)),\\n)\\n```"}]},"sources":[{"fileName":"packages/assertions/src/expectations/equals.ts","line":29,"character":13}],"typeParameter":[{"id":3184,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":3185,"name":"answerableArguments","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"expected","isOptional":false,"element":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":3184,"name":"T","package":"@serenity-js/assertions","refersToTypeParameter":true}],"name":"Answerable","package":"@serenity-js/core"}}]}}],"type":{"type":"reference","target":1156,"typeArguments":[{"type":"reference","target":3184,"name":"T","package":"@serenity-js/assertions","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/assertions/function/equals","categories":[],"previousId":3179,"nextId":3186},{"id":3186,"name":"includes","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/expectations/includes.ts","line":41,"character":13}],"signatures":[{"id":3187,"name":"includes","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates an [expectation](/api/core/class/Expectation/) that is met when the actual "},{"kind":"code","text":"`string`"},{"kind":"text","text":" value\\nincludes a substring of "},{"kind":"code","text":"`expected`"},{"kind":"text","text":".\\n\\n## Ensuring that a given string includes the expected substring\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, includes } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(\'Hello World!\', includes(\'World\')),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Ensuring that page URL includes the expected substring\\n\\n["},{"kind":"code","text":"`Page.current().url()`"},{"kind":"text","text":"](/api/web/class/Page/#url) returns a ["},{"kind":"code","text":"`QuestionAdapter<URL>`"},{"kind":"text","text":"](/api/core/#QuestionAdapter)\\na proxy object around the standard Node.js [URL](https://nodejs.org/api/url.html) class,\\noffering access to "},{"kind":"code","text":"`string`"},{"kind":"text","text":" properties such as ["},{"kind":"code","text":"`hostname`"},{"kind":"text","text":"](https://nodejs.org/api/url.html#urlobjecthostname),\\n["},{"kind":"code","text":"`pathname`"},{"kind":"text","text":"](https://nodejs.org/api/url.html#urlobjectpathname), and so on.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, includes } from \'@serenity-js/assertions\'\\nimport { Navigate, Page } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Navigate.to(\'/handbook\'),\\n  Ensure.that(Page.current().url().hostname, includes(\'serenity-js\')),\\n  Ensure.that(Page.current().url().pathname, includes(\'book\')),\\n)\\n```"}]},"sources":[{"fileName":"packages/assertions/src/expectations/includes.ts","line":41,"character":13}],"parameters":[{"id":3188,"name":"answerableArguments","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"expected","isOptional":false,"element":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}}],"type":{"type":"reference","target":1156,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/assertions/function/includes","categories":[],"previousId":3182,"nextId":3189},{"id":3189,"name":"isAfter","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/expectations/isAfter.ts","line":42,"character":13}],"signatures":[{"id":3190,"name":"isAfter","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates an [expectation](/api/core/class/Expectation/) that is met when the actual value of type "},{"kind":"code","text":"`Date`"},{"kind":"text","text":"\\nis after the expected "},{"kind":"code","text":"`Date`"},{"kind":"text","text":".\\n\\n## Ensuring that a given date is after the expected date\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, isAfter } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(new Date(\'2022-01-01\'), isAfter(new Date(\'1995-01-01\'))),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Ensuring that a given date is within the expected date range\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Expectation, d } from \'@serenity-js/core\'\\nimport { Ensure, and, isAfter, isBefore } from \'@serenity-js/assertions\'\\n\\nconst isWithinDateRange = (lowerBound: Answerable<Date>, upperBound: Answerable<Date>) =>\\n  Expectation.to(d`have value that is between ${ lowerBound } and ${ upperBound }`)\\n    .soThatActual(\\n      and(isAfter(lowerBound), isBefore(upperBound))\\n    ),\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(\\n    new Date(\'2022-01-01\'),\\n    isWithinDateRange(new Date(\'1995-01-01\'), new Date(\'2025-01-01\'))\\n  ),\\n)\\n```"}]},"sources":[{"fileName":"packages/assertions/src/expectations/isAfter.ts","line":42,"character":13}],"parameters":[{"id":3191,"name":"answerableArguments","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"expected","isOptional":false,"element":{"type":"reference","target":706,"typeArguments":[{"type":"union","types":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Date"},"name":"Date","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Date"},{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}]}],"name":"Answerable","package":"@serenity-js/core"}}]}}],"type":{"type":"reference","target":1156,"typeArguments":[{"type":"union","types":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Date"},"name":"Date","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Date"},{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}]}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/assertions/function/isAfter","categories":[],"previousId":3186,"nextId":3192},{"id":3192,"name":"isBefore","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/expectations/isBefore.ts","line":42,"character":13}],"signatures":[{"id":3193,"name":"isBefore","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates an [expectation](/api/core/class/Expectation/) that is met when the actual value of type "},{"kind":"code","text":"`Date`"},{"kind":"text","text":"\\nis before the expected "},{"kind":"code","text":"`Date`"},{"kind":"text","text":".\\n\\n## Ensuring that a given date is after the expected date\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, isBefore } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(new Date(\'1995-01-01\'), isBefore(new Date(\'2022-01-01\'))),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Ensuring that a given date is within the expected date range\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Expectation, d } from \'@serenity-js/core\'\\nimport { Ensure, and, isAfter, isBefore } from \'@serenity-js/assertions\'\\n\\nconst isWithinDateRange = (lowerBound: Answerable<Date>, upperBound: Answerable<Date>) =>\\n  Expectation.to(d`have value that is between ${ lowerBound } and ${ upperBound }`)\\n    .soThatActual(\\n      and(isAfter(lowerBound), isBefore(upperBound))\\n    ),\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(\\n    new Date(\'2022-01-01\'),\\n    isWithinDateRange(new Date(\'1995-01-01\'), new Date(\'2025-01-01\'))\\n  ),\\n)\\n```"}]},"sources":[{"fileName":"packages/assertions/src/expectations/isBefore.ts","line":42,"character":13}],"parameters":[{"id":3194,"name":"answerableArguments","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"expected","isOptional":false,"element":{"type":"reference","target":706,"typeArguments":[{"type":"union","types":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Date"},"name":"Date","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Date"},{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}]}],"name":"Answerable","package":"@serenity-js/core"}}]}}],"type":{"type":"reference","target":1156,"typeArguments":[{"type":"union","types":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Date"},"name":"Date","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Date"},{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}]}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/assertions/function/isBefore","categories":[],"previousId":3189,"nextId":3195},{"id":3195,"name":"isCloseTo","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/expectations/isCloseTo.ts","line":24,"character":13}],"signatures":[{"id":3196,"name":"isCloseTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Produces an [expectation](/api/core/class/Expectation/) that is met when the actual value\\nis within a given \xb1 "},{"kind":"code","text":"`absoluteTolerance`"},{"kind":"text","text":" range of the "},{"kind":"code","text":"`expected`"},{"kind":"text","text":" value.\\n\\n## Ensuring that a given floating point number is close to the expected number\\n\\n"},{"kind":"code","text":"```ts\\n import { actorCalled } from \'@serenity-js/core\'\\n import { Ensure, isCloseTo } from \'@serenity-js/assertions\'\\n\\n await actorCalled(\'Iris\').attemptsTo(\\n     Ensure.that(10.123, isCloseTo(10, 0.2))\\n )\\n```"}]},"sources":[{"fileName":"packages/assertions/src/expectations/isCloseTo.ts","line":24,"character":13}],"parameters":[{"id":3197,"name":"answerableArguments","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"expected","isOptional":false,"element":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"type":"namedTupleMember","name":"absoluteTolerance","isOptional":false,"element":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}}]}}],"type":{"type":"reference","target":1156,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/assertions/function/isCloseTo","categories":[],"previousId":3192,"nextId":3198},{"id":3198,"name":"isFalse","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/expectations/isFalse.ts","line":23,"character":16}],"signatures":[{"id":3199,"name":"isFalse","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates an [expectation](/api/core/class/Expectation/) that is met when the actual "},{"kind":"code","text":"`boolean`"},{"kind":"text","text":" value\\nis "},{"kind":"code","text":"`false`"},{"kind":"text","text":".\\n\\n## Ensuring that a given value is false\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, isFalse } from \'@serenity-js/assertions\'\\nimport { Cookie } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(Cookie.called(\'example-regular-cookie\').isSecure(), isFalse()),\\n)\\n```"}]},"sources":[{"fileName":"packages/assertions/src/expectations/isFalse.ts","line":23,"character":16}],"type":{"type":"reference","target":1156,"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/assertions/function/isFalse","categories":[],"previousId":3195,"nextId":3200},{"id":3200,"name":"isGreaterThan","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/expectations/isGreaterThan.ts","line":45,"character":13}],"signatures":[{"id":3201,"name":"isGreaterThan","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates an [expectation](/api/core/class/Expectation/) that is met when the actual value of type "},{"kind":"code","text":"`number`"},{"kind":"text","text":"\\nis greater than the expected "},{"kind":"code","text":"`number`"},{"kind":"text","text":".\\n\\n## Ensuring that a given number is greater than the expected number\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, isGreaterThan } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(10, isGreaterThan(5)),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Ensuring that a given number is within the expected range\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Expectation, d } from \'@serenity-js/core\'\\nimport { Ensure, and, equals, isGreaterThan, isLessThan, or } from \'@serenity-js/assertions\'\\n\\nconst isWithinRange = (lowerBound: Answerable<number>, upperBound: Answerable<number>) =>\\n  Expectation.to(d`have value that is between ${ lowerBound } and ${ upperBound }`)\\n    .soThatActual(\\n      and(\\n        or(equals(lowerBound), isGreaterThan(lowerBound)),\\n        or(equals(upperBound), isLessThan(upperBound)),\\n      )\\n    ),\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(\\n    7,\\n    isWithinRange(5, 10)\\n  ),\\n)\\n```"}]},"sources":[{"fileName":"packages/assertions/src/expectations/isGreaterThan.ts","line":45,"character":13}],"parameters":[{"id":3202,"name":"answerableArguments","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"expected","isOptional":false,"element":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}}]}}],"type":{"type":"reference","target":1156,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/assertions/function/isGreaterThan","categories":[],"previousId":3198,"nextId":3203},{"id":3203,"name":"isLessThan","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/expectations/isLessThan.ts","line":45,"character":13}],"signatures":[{"id":3204,"name":"isLessThan","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates an [expectation](/api/core/class/Expectation/) that is met when the actual value of type "},{"kind":"code","text":"`number`"},{"kind":"text","text":"\\nis less than the expected "},{"kind":"code","text":"`number`"},{"kind":"text","text":".\\n\\n## Ensuring that a given number is less than the expected number\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, isLessThan } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(5, isLessThan(10)),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Ensuring that a given number is within the expected range\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Expectation, d } from \'@serenity-js/core\'\\nimport { Ensure, and, equals, isGreaterThan, isLessThan, or } from \'@serenity-js/assertions\'\\n\\nconst isWithinRange = (lowerBound: Answerable<number>, upperBound: Answerable<number>) =>\\n  Expectation.to(d`have value that is between ${ lowerBound } and ${ upperBound }`)\\n    .soThatActual(\\n      and(\\n        or(equals(lowerBound), isGreaterThan(lowerBound)),\\n        or(equals(upperBound), isLessThan(upperBound)),\\n      )\\n    ),\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(\\n    7,\\n    isWithinRange(5, 10)\\n  ),\\n)\\n```"}]},"sources":[{"fileName":"packages/assertions/src/expectations/isLessThan.ts","line":45,"character":13}],"parameters":[{"id":3205,"name":"answerableArguments","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"expected","isOptional":false,"element":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}}]}}],"type":{"type":"reference","target":1156,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/assertions/function/isLessThan","categories":[],"previousId":3200,"nextId":3206},{"id":3206,"name":"isPresent","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/expectations/isPresent.ts","line":66,"character":16}],"signatures":[{"id":3207,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates an [expectation](/api/core/class/Expectation/) that is met when the "},{"kind":"code","text":"`actual`"},{"kind":"text","text":" value is not undefined or null.\\n\\nAlso, when the "},{"kind":"code","text":"`actual`"},{"kind":"text","text":" implements ["},{"kind":"code","text":"`Optional`"},{"kind":"text","text":"](/api/core/interface/Optional/),\\nthe expectation is met when calling ["},{"kind":"code","text":"`Optional.isPresent`"},{"kind":"text","text":"](/api/core/interface/Optional/#isPresent)\\nreturns an ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable) that resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":"\\n\\n## Ensuring that a value is defined\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, Send, GetRequest, LastResponse } from \'@serenity-js/rest\'\\nimport { Ensure, isPresent } from \'@serenity-js/assertions\'\\n\\ninterface Product {\\n    name: string;\\n}\\n\\ninterface ProductsResponse {\\n    products: Product[];\\n}\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(CallAnApi.at(\'https://api.example.org\'))\\n  .attemptsTo(\\n    Send.a(GetRequest.to(\'/products\')),\\n    Ensure.that(LastResponse.body<ProductsResponse>().products[0], isPresent()),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Checking if a PageElement is present\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Check } from \'@serenity-js/core\';\\nimport { BrowseTheWebWithPlaywright } from \'@serenity-js/playwright\';\\nimport { By, Click, Navigate, PageElement } from \'@serenity-js/web\';\\nimport { Browser, chromium } from \'playwright\';\\n\\nclass NewsletterSubscription {\\n  static modal = () =>\\n    PageElement.located(By.id(\'newsletter-subscription\'))\\n      .describedAs(\'newsletter subscription modal\')\\n\\n  static closeButton = () =>\\n    PageElement.located(By.class(\'.close\'))\\n      .of(NewsletterSubscription.modal())\\n      .describedAs(\'close button\')\\n}\\n\\nconst browser = await chromium.launch({ headless: true });\\n\\nawait actorCalled(\'Isabela\')\\n  .whoCan(BrowseTheWebWithPlaywright.using(browser))\\n  .attemptsTo(\\n    Navigate.to(`https://example.org`),\\n    Check.whether(NewsletterSubscription.modal(), isPresent())\\n      .andIfSo(Click.on(NewsletterSubscription.closeButton())),\\n  )\\n```"}]},"sources":[{"fileName":"packages/assertions/src/expectations/isPresent.ts","line":66,"character":16}],"typeParameter":[{"id":3208,"name":"Actual","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"type":{"type":"reference","target":1156,"typeArguments":[{"type":"reference","target":3208,"name":"Actual","package":"@serenity-js/assertions","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/assertions/function/isPresent","categories":[],"previousId":3203,"nextId":3209},{"id":3209,"name":"isTrue","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/expectations/isTrue.ts","line":23,"character":16}],"signatures":[{"id":3210,"name":"isTrue","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates an [expectation](/api/core/class/Expectation/) that is met when the actual "},{"kind":"code","text":"`boolean`"},{"kind":"text","text":" value\\nis "},{"kind":"code","text":"`true`"},{"kind":"text","text":".\\n\\n## Ensuring that a given value is true\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, isTrue } from \'@serenity-js/assertions\'\\nimport { Cookie } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(Cookie.called(\'example-secure-cookie\').isSecure(), isTrue()),\\n)\\n```"}]},"sources":[{"fileName":"packages/assertions/src/expectations/isTrue.ts","line":23,"character":16}],"type":{"type":"reference","target":1156,"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/assertions/function/isTrue","categories":[],"previousId":3206,"nextId":3211},{"id":3211,"name":"matches","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/expectations/matches.ts","line":22,"character":13}],"signatures":[{"id":3212,"name":"matches","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates an [expectation](/api/core/class/Expectation/) that is met when the actual "},{"kind":"code","text":"`string`"},{"kind":"text","text":" value\\nmatches the "},{"kind":"code","text":"`expected`"},{"kind":"text","text":" regular expression.\\n\\n## Ensuring that a given string matches a regular expression\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, includes } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(\'Hello World!\', matches(/[Ww]orld/)),\\n)\\n```"}]},"sources":[{"fileName":"packages/assertions/src/expectations/matches.ts","line":22,"character":13}],"parameters":[{"id":3213,"name":"answerableArguments","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"expected","isOptional":false,"element":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"RegExp"},"name":"RegExp","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/RegExp"}],"name":"Answerable","package":"@serenity-js/core"}}]}}],"type":{"type":"reference","target":1156,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/assertions/function/matches","categories":[],"previousId":3209,"nextId":3214},{"id":3214,"name":"not","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/expectations/not.ts","line":25,"character":16}],"signatures":[{"id":3215,"name":"not","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Produces an [expectation](/api/core/class/Expectation/) that negates the provided "},{"kind":"code","text":"`expectation`"},{"kind":"text","text":".\\n\\n## Ensuring that the actual value does not equal the expected value\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, equals, not } from \'@serenity-js/assertions\'\\n\\nconst actual   = { name: \'apples\' }\\nconst expected = { name: \'bananas\' }\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(actual, not(equals(expected))),\\n)\\n```"}]},"sources":[{"fileName":"packages/assertions/src/expectations/not.ts","line":25,"character":16}],"typeParameter":[{"id":3216,"name":"Actual","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":3217,"name":"expectation","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1156,"typeArguments":[{"type":"reference","target":3216,"name":"Actual","package":"@serenity-js/assertions","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1156,"typeArguments":[{"type":"reference","target":3216,"name":"Actual","package":"@serenity-js/assertions","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/assertions/function/not","categories":[],"previousId":3211,"nextId":3218},{"id":3218,"name":"or","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/expectations/or.ts","line":24,"character":16}],"signatures":[{"id":3219,"name":"or","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates an [expectation](/api/core/class/Expectation/) that is met when at least one of the "},{"kind":"code","text":"`expectations`"},{"kind":"text","text":" is met for the given actual value.\\n\\nUse "},{"kind":"code","text":"`or`"},{"kind":"text","text":" to combine several expectations using logical \\"or\\",\\n\\n## Combining several expectations\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, or, startsWith } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(\'Hello World!\', or(startsWith(\'Hello\'), startsWith(\'Hi\'))),\\n)\\n```"}]},"sources":[{"fileName":"packages/assertions/src/expectations/or.ts","line":24,"character":16}],"typeParameter":[{"id":3220,"name":"Actual_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":3221,"name":"expectations","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":1156,"typeArguments":[{"type":"reference","target":3220,"name":"Actual_Type","package":"@serenity-js/assertions","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}}],"type":{"type":"reference","target":1156,"typeArguments":[{"type":"reference","target":3220,"name":"Actual_Type","package":"@serenity-js/assertions","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/assertions/function/or","categories":[],"previousId":3214,"nextId":3222},{"id":3222,"name":"property","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/expectations/property.ts","line":63,"character":16}],"signatures":[{"id":3223,"name":"property","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates an [expectation](/api/core/class/Expectation/) that is met when the value of\\nthe "},{"kind":"code","text":"`actual[propertyName]`"},{"kind":"text","text":" meets the "},{"kind":"code","text":"`expectation`"},{"kind":"text","text":".\\n\\n## Ensuring that an array has an item\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, property } from \'@serenity-js/assertions\'\\n\\nconst list = [ \'hello\', \'world\' ]\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(list, property(0, isPresent())),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Ensuring that the property meets an expectation\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, property, equals } from \'@serenity-js/assertions\'\\n\\nconst list = [ \'hello\', \'world\' ]\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(list, property(\'length\', equals(2))),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Asserting on a list of objects\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, property, equals } from \'@serenity-js/assertions\'\\n\\nconst developers = [{\\n    name: \'Jan\',\\n    id: \'@jan-molak\',\\n}, {\\n    name: \'John\',\\n    id: \'@wakaleo\',\\n}]\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(\\n    developers,\\n    containItemsWhereEachItem(\\n      property(\'id\', startsWith(\'@\'))\\n    ),\\n  ),\\n)\\n```"}]},"sources":[{"fileName":"packages/assertions/src/expectations/property.ts","line":63,"character":16}],"typeParameter":[{"id":3224,"name":"Actual","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"object"}},{"id":3225,"name":"PropertyName","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":3226,"name":"propertyName","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":3225,"name":"PropertyName","package":"@serenity-js/assertions","refersToTypeParameter":true}},{"id":3227,"name":"expectation","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1156,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","target":3225,"name":"PropertyName","package":"@serenity-js/assertions","refersToTypeParameter":true},"objectType":{"type":"reference","target":3224,"name":"Actual","package":"@serenity-js/assertions","refersToTypeParameter":true}}],"name":"Expectation","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1156,"typeArguments":[{"type":"reference","target":3224,"name":"Actual","package":"@serenity-js/assertions","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/assertions/function/property","categories":[],"previousId":3218,"nextId":3228},{"id":3228,"name":"startsWith","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/expectations/startsWith.ts","line":22,"character":13}],"signatures":[{"id":3229,"name":"startsWith","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates an [expectation](/api/core/class/Expectation/) that is met when the actual "},{"kind":"code","text":"`string`"},{"kind":"text","text":" value\\nstarts with the resolved value of "},{"kind":"code","text":"`expected`"},{"kind":"text","text":".\\n\\n## Ensuring that a given string starts with an expected substring\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, startsWith } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(\'Hello World!\', startsWith(\'Hello\')),\\n)\\n```"}]},"sources":[{"fileName":"packages/assertions/src/expectations/startsWith.ts","line":22,"character":13}],"parameters":[{"id":3230,"name":"answerableArguments","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"expected","isOptional":false,"element":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}}],"type":{"type":"reference","target":1156,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/assertions/function/startsWith","categories":[],"previousId":3222}],"groups":[{"title":"Activities","children":[3056,3112]},{"title":"Expectations","children":[3163,3167,3171,3175,3179,3182,3186,3189,3192,3195,3198,3200,3203,3206,3209,3211,3214,3218,3222,3228]}],"sources":[{"fileName":"packages/assertions/src/index.ts","line":1,"character":0}],"permalink":"/api/assertions"},"urlSlug":"assertions"}],"packageName":"@serenity-js/assertions","packageVersion":"3.32.1"},{"entryPoints":[{"index":true,"label":"Index","reflection":{"id":47,"name":"@serenity-js/console-reporter","variant":"declaration","kind":2,"flags":{"isExternal":true},"children":[{"id":48,"name":"default","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/console-reporter/src/index.ts","line":9,"character":24}],"signatures":[{"id":49,"name":"default","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/console-reporter/src/index.ts","line":9,"character":24}],"parameters":[{"id":50,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":24549,"name":"ConsoleReporterConfig","package":"@serenity-js/console-reporter"},"defaultValue":"undefined"}],"type":{"type":"reference","target":2248,"typeArguments":[{"type":"reference","target":24491,"name":"ConsoleReporter","package":"@serenity-js/console-reporter"}],"name":"StageCrewMemberBuilder","package":"@serenity-js/core"}}],"permalink":"/api/console-reporter/function/default","categories":[],"nextId":24491},{"id":24491,"name":"ConsoleReporter","variant":"declaration","kind":128,"flags":{"isPublic":true,"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/) that uses [standard output](https://en.wikipedia.org/wiki/Standard_streams)\\nto report on progress of your Serenity/JS acceptance tests.\\n\\n"},{"kind":"code","text":"`ConsoleReporter`"},{"kind":"text","text":" ships with colour themes for both dark and light terminals,\\nas well as a monochromatic theme for those moments when you\'re in a noir mood\\n(or have a terminal that doesn\'t support colours, like the good old "},{"kind":"code","text":"`cmd.exe`"},{"kind":"text","text":" on Windows).\\n\\n## Registering Console Reporter programmatically\\n\\n"},{"kind":"code","text":"```ts\\n import { configure } from \'@serenity-js/core\';\\n import { ConsoleReporter } from \'@serenity-js/console-reporter\';\\n\\n configure({\\n   crew: [\\n     ConsoleReporter.withDefaultColourSupport()\\n   ],\\n });\\n```"},{"kind":"text","text":"\\n\\n## Redirecting output to a file\\n\\n"},{"kind":"code","text":"```ts\\n import { configure } from \'@serenity-js/core\';\\n import { ConsoleReporter } from \'@serenity-js/console-reporter\';\\n import { createWriteStream } from \'fs\';\\n\\n configure({\\n   outputStream: createWriteStream(\'./output.log\'),\\n   crew: [ ConsoleReporter.withDefaultColourSupport() ],\\n });\\n ```"},{"kind":"text","text":"\\n\\n## Registering Console Reporter with Playwright Test\\n\\n"},{"kind":"code","text":"```ts\\n// playwright.config.ts\\nimport { devices } from \'@playwright/test\';\\nimport type { PlaywrightTestConfig } from \'@serenity-js/playwright-test\';\\n\\nconst config: PlaywrightTestConfig = {\\n\\n  reporter: [\\n    [ \'line\' ],\\n    [ \'html\', { open: \'never\' } ],\\n    [ \'@serenity-js/playwright-test\', {\\n      crew: [\\n        \'@serenity-js/console-reporter\',\\n      ]\\n    }]\\n  ],\\n}\\n```"},{"kind":"text","text":"\\n\\n## Registering Console Reporter with WebdriverIO\\n\\n"},{"kind":"code","text":"```ts\\n// wdio.conf.ts\\nimport { ConsoleReporter } from \'@serenity-js/console-reporter\';\\nimport { WebdriverIOConfig } from \'@serenity-js/webdriverio\';\\n\\nexport const config: WebdriverIOConfig = {\\n\\n  framework: \'@serenity-js/webdriverio\',\\n\\n  serenity: {\\n    crew: [\\n      \'@serenity-js/console-reporter\',\\n    ]\\n    // other Serenity/JS config\\n  },\\n\\n // other WebdriverIO config\\n}\\n```"},{"kind":"text","text":"\\n\\n## Registering Console Reporter with Protractor\\n\\n"},{"kind":"code","text":"```js\\n// protractor.conf.js\\nconst { ConsoleReporter } = require(\'@serenity-js/console-reporter\');\\n\\nexports.config = {\\n  framework:     \'custom\',\\n  frameworkPath: require.resolve(\'@serenity-js/protractor/adapter\'),\\n\\n  serenity: {\\n    crew: [\\n      \'@serenity-js/console-reporter\',\\n    ],\\n    // other Serenity/JS config\\n  },\\n\\n  // other Protractor config\\n}\\n```"},{"kind":"text","text":"\\n\\n## Changing the default colour theme\\n\\n"},{"kind":"code","text":"```js\\n  // ...\\n  serenity: {\\n    crew: [\\n      [ \'@serenity-js/console-reporter\', {\\n        theme: \'light\',\\n        // theme: \'dark\',\\n        // theme: \'mono\',\\n        // theme: \'auto\',\\n      } ]\\n    ],\\n  },\\n  //...\\n```"}]},"children":[{"id":24492,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/console-reporter/src/stage/crew/console-reporter/ConsoleReporter.ts","line":170,"character":11}],"signatures":[{"id":24493,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/console-reporter/src/stage/crew/console-reporter/ConsoleReporter.ts","line":170,"character":11}],"parameters":[{"id":24494,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":24549,"name":"ConsoleReporterConfig","package":"@serenity-js/console-reporter"}}],"type":{"type":"reference","target":2248,"typeArguments":[{"type":"reference","target":24491,"name":"ConsoleReporter","package":"@serenity-js/console-reporter"}],"name":"StageCrewMemberBuilder","package":"@serenity-js/core"}}]},{"id":24495,"name":"withDefaultColourSupport","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/console-reporter/src/stage/crew/console-reporter/ConsoleReporter.ts","line":184,"character":11}],"signatures":[{"id":24496,"name":"withDefaultColourSupport","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a "},{"kind":"code","text":"`ConsoleReporter`"},{"kind":"text","text":" that auto-detects\\nyour terminal\'s support for colours and uses a colour theme\\nfor dark terminals if successful.\\n\\nPlease note that spawning your test process from another process\\n(by using [npm-failsafe](https://www.npmjs.com/package/npm-failsafe), for example)\\ncauses the "},{"kind":"code","text":"`ConsoleReporter`"},{"kind":"text","text":" to use the monochromatic colour scheme,\\nas colour support can\'t be detected in child processes."}]},"sources":[{"fileName":"packages/console-reporter/src/stage/crew/console-reporter/ConsoleReporter.ts","line":184,"character":11}],"type":{"type":"reference","target":2248,"typeArguments":[{"type":"reference","target":24491,"name":"ConsoleReporter","package":"@serenity-js/console-reporter"}],"name":"StageCrewMemberBuilder","package":"@serenity-js/core"}}]},{"id":24497,"name":"forMonochromaticTerminals","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/console-reporter/src/stage/crew/console-reporter/ConsoleReporter.ts","line":194,"character":11}],"signatures":[{"id":24498,"name":"forMonochromaticTerminals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a "},{"kind":"code","text":"`ConsoleReporter`"},{"kind":"text","text":" with a monochromatic colour theme.\\nGood for terminals with no colour support (like the "},{"kind":"code","text":"`cmd.exe`"},{"kind":"text","text":" on Windows),\\nor for times when you need to pipe the output to a text file and want\\nto avoid printing control characters."}]},"sources":[{"fileName":"packages/console-reporter/src/stage/crew/console-reporter/ConsoleReporter.ts","line":194,"character":11}],"type":{"type":"reference","target":2248,"typeArguments":[{"type":"reference","target":24491,"name":"ConsoleReporter","package":"@serenity-js/console-reporter"}],"name":"StageCrewMemberBuilder","package":"@serenity-js/core"}}]},{"id":24499,"name":"forDarkTerminals","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/console-reporter/src/stage/crew/console-reporter/ConsoleReporter.ts","line":201,"character":11}],"signatures":[{"id":24500,"name":"forDarkTerminals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a "},{"kind":"code","text":"`ConsoleReporter`"},{"kind":"text","text":" with a colour theme optimised for terminals with dark backgrounds."}]},"sources":[{"fileName":"packages/console-reporter/src/stage/crew/console-reporter/ConsoleReporter.ts","line":201,"character":11}],"type":{"type":"reference","target":2248,"typeArguments":[{"type":"reference","target":24491,"name":"ConsoleReporter","package":"@serenity-js/console-reporter"}],"name":"StageCrewMemberBuilder","package":"@serenity-js/core"}}]},{"id":24501,"name":"forLightTerminals","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/console-reporter/src/stage/crew/console-reporter/ConsoleReporter.ts","line":208,"character":11}],"signatures":[{"id":24502,"name":"forLightTerminals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a "},{"kind":"code","text":"`ConsoleReporter`"},{"kind":"text","text":" with a colour theme optimised for terminals with light backgrounds."}]},"sources":[{"fileName":"packages/console-reporter/src/stage/crew/console-reporter/ConsoleReporter.ts","line":208,"character":11}],"type":{"type":"reference","target":2248,"typeArguments":[{"type":"reference","target":24491,"name":"ConsoleReporter","package":"@serenity-js/console-reporter"}],"name":"StageCrewMemberBuilder","package":"@serenity-js/core"}}]},{"id":24506,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/console-reporter/src/stage/crew/console-reporter/ConsoleReporter.ts","line":230,"character":4}],"signatures":[{"id":24507,"name":"new ConsoleReporter","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/console-reporter/src/stage/crew/console-reporter/ConsoleReporter.ts","line":230,"character":4}],"parameters":[{"id":24508,"name":"printer","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Printer","package":"@serenity-js/console-reporter"}},{"id":24509,"name":"theme","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"TerminalTheme","package":"@serenity-js/console-reporter"}},{"id":24510,"name":"stage","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":2158,"name":"Stage","package":"@serenity-js/core"}}],"type":{"type":"reference","target":24491,"name":"ConsoleReporter","package":"@serenity-js/console-reporter"}}]},{"id":24520,"name":"notifyOf","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/console-reporter/src/stage/crew/console-reporter/ConsoleReporter.ts","line":250,"character":4}],"signatures":[{"id":24521,"name":"notifyOf","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Handles ["},{"kind":"code","text":"`DomainEvent`"},{"kind":"text","text":"](/api/core-events/class/DomainEvent/) objects emitted by the ["},{"kind":"code","text":"`Stage`"},{"kind":"text","text":"](/api/core/class/Stage/)."}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/)"}]},{"tag":"@listens","content":[]}]},"sources":[{"fileName":"packages/console-reporter/src/stage/crew/console-reporter/ConsoleReporter.ts","line":250,"character":4}],"parameters":[{"id":24522,"name":"event","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":2630,"name":"DomainEvent","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"void"},"implementationOf":{"type":"reference","target":-1,"name":"ListensToDomainEvents.notifyOf"}}],"implementationOf":{"type":"reference","target":-1,"name":"ListensToDomainEvents.notifyOf"}}],"groups":[{"title":"Constructors","children":[24506]},{"title":"Methods","children":[24492,24495,24497,24499,24501,24520]}],"sources":[{"fileName":"packages/console-reporter/src/stage/crew/console-reporter/ConsoleReporter.ts","line":161,"character":13}],"implementedTypes":[{"type":"reference","target":2076,"name":"ListensToDomainEvents","package":"@serenity-js/core"}],"permalink":"/api/console-reporter/class/ConsoleReporter","categories":[],"previousId":48,"nextId":24549},{"id":24549,"name":"ConsoleReporterConfig","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Used to configure the ["},{"kind":"code","text":"`ConsoleReporter`"},{"kind":"text","text":"](/api/console-reporter/class/ConsoleReporter/)."}]},"children":[{"id":24550,"name":"theme","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Choose a colour theme optimised for light, dark, or monochromatic terminals.\\nOr, use \'auto\' to automatically pick the most suitable one."}]},"sources":[{"fileName":"packages/console-reporter/src/stage/crew/console-reporter/ConsoleReporterConfig.ts","line":11,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"auto"},{"type":"literal","value":"light"},{"type":"literal","value":"dark"},{"type":"literal","value":"mono"}]}}],"groups":[{"title":"Properties","children":[24550]}],"sources":[{"fileName":"packages/console-reporter/src/stage/crew/console-reporter/ConsoleReporterConfig.ts","line":6,"character":17}],"permalink":"/api/console-reporter/interface/ConsoleReporterConfig","categories":[],"previousId":24491}],"groups":[{"title":"Functions","children":[48]},{"title":"Stage","children":[24491,24549]}],"sources":[{"fileName":"packages/console-reporter/src/index.ts","line":1,"character":0}],"permalink":"/api/console-reporter"},"urlSlug":"console-reporter"}],"packageName":"@serenity-js/console-reporter","packageVersion":"3.32.1"},{"entryPoints":[{"index":false,"label":"Test runner adapter","reflection":{"id":2,"name":"@serenity-js/core/adapter","variant":"declaration","kind":2,"flags":{"isExternal":true},"children":[{"id":2286,"name":"OutputStream","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An output stream to be injected into [stage crew member builders](/api/core/interface/StageCrewMemberBuilder/)\\nconfigured via ["},{"kind":"code","text":"`SerenityConfig.crew`"},{"kind":"text","text":"](/api/core/class/SerenityConfig/#crew).\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMemberBuilder/)\\n- ["},{"kind":"code","text":"`Serenity.configure`"},{"kind":"text","text":"](/api/core/class/Serenity/#configure)\\n- ["},{"kind":"code","text":"`SerenityConfig.crew`"},{"kind":"text","text":"](/api/core/class/SerenityConfig/#crew)"}]},"children":[{"id":2287,"name":"write","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/adapter/OutputStream.ts","line":13,"character":4}],"signatures":[{"id":2288,"name":"write","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/adapter/OutputStream.ts","line":13,"character":4}],"parameters":[{"id":2289,"name":"content","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}]}],"groups":[{"title":"Methods","children":[2287]}],"sources":[{"fileName":"packages/core/src/adapter/OutputStream.ts","line":12,"character":17}],"permalink":"/api/core-adapter/interface/OutputStream","categories":[],"nextId":2290},{"id":2290,"name":"TestRunnerAdapter","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Describes an adapter needed to run a given type of tests programmatically"}]},"children":[{"id":2291,"name":"load","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/adapter/TestRunnerAdapter.ts","line":13,"character":4}],"signatures":[{"id":2292,"name":"load","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Loads test scenarios."}]},"sources":[{"fileName":"packages/core/src/adapter/TestRunnerAdapter.ts","line":13,"character":4}],"parameters":[{"id":2293,"name":"pathsToScenarios","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":2294,"name":"scenarioCount","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/adapter/TestRunnerAdapter.ts","line":21,"character":4}],"signatures":[{"id":2295,"name":"scenarioCount","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the number of loaded scenarios"}],"blockTags":[{"tag":"@throws","content":[{"kind":"text","text":"["},{"kind":"code","text":"`LogicError`"},{"kind":"text","text":"](/api/core/class/LogicError/)\\n If called before "},{"kind":"code","text":"`load`"}]}]},"sources":[{"fileName":"packages/core/src/adapter/TestRunnerAdapter.ts","line":21,"character":4}],"type":{"type":"intrinsic","name":"number"}}]},{"id":2296,"name":"run","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/adapter/TestRunnerAdapter.ts","line":29,"character":4}],"signatures":[{"id":2297,"name":"run","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Runs loaded test scenarios."}],"blockTags":[{"tag":"@throws","content":[{"kind":"text","text":"["},{"kind":"code","text":"`LogicError`"},{"kind":"text","text":"](/api/core/class/LogicError/)\\n If called before "},{"kind":"code","text":"`load`"}]}]},"sources":[{"fileName":"packages/core/src/adapter/TestRunnerAdapter.ts","line":29,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":2298,"name":"successThreshold","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/adapter/TestRunnerAdapter.ts","line":34,"character":4}],"signatures":[{"id":2299,"name":"successThreshold","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Scenario success threshold for this test runner."}]},"sources":[{"fileName":"packages/core/src/adapter/TestRunnerAdapter.ts","line":34,"character":4}],"type":{"type":"union","types":[{"type":"reference","name":"Outcome","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":2300,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":2301,"name":"Code","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/adapter/TestRunnerAdapter.ts","line":34,"character":36}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[2301]}],"sources":[{"fileName":"packages/core/src/adapter/TestRunnerAdapter.ts","line":34,"character":34}]}}]}}]}],"groups":[{"title":"Methods","children":[2291,2294,2296,2298]}],"sources":[{"fileName":"packages/core/src/adapter/TestRunnerAdapter.ts","line":8,"character":17}],"permalink":"/api/core-adapter/interface/TestRunnerAdapter","categories":[],"previousId":2286}],"groups":[{"title":"Integration","children":[2286,2290]}],"sources":[{"fileName":"packages/core/src/adapter/index.ts","line":1,"character":0}],"permalink":"/api/core-adapter"},"urlSlug":"core-adapter"},{"index":false,"label":"Domain Events","reflection":{"id":3,"name":"@serenity-js/core/events","variant":"declaration","kind":2,"flags":{"isExternal":true},"children":[{"id":2302,"name":"ActivityFinished","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"Emitted when an ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) is finished."}]},"children":[{"id":2303,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":13,"character":4}],"signatures":[{"id":2304,"name":"new ActivityFinished","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":13,"character":4}],"parameters":[{"id":2305,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2306,"name":"activityId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2307,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"ActivityDetails","package":"@serenity-js/core"}},{"id":2308,"name":"outcome","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Outcome","package":"@serenity-js/core"}},{"id":2309,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2302,"name":"ActivityFinished","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2310,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":14,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2311,"name":"activityId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":15,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2312,"name":"details","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":16,"character":24}],"type":{"type":"reference","name":"ActivityDetails","package":"@serenity-js/core"}},{"id":2313,"name":"outcome","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":17,"character":24}],"type":{"type":"reference","name":"Outcome","package":"@serenity-js/core"}},{"id":2314,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2634,"name":"DomainEvent.timestamp"}},{"id":2315,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2316,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2317,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2636,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2635,"name":"DomainEvent.equals"}},{"id":2318,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2319,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2639,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2638,"name":"DomainEvent.toString"}},{"id":2320,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2321,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2641,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2640,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2303]},{"title":"Properties","children":[2310,2311,2312,2313,2314]},{"title":"Methods","children":[2315,2318,2320]}],"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":12,"character":22}],"extendedTypes":[{"type":"reference","target":2630,"name":"DomainEvent","package":"@serenity-js/core"}],"extendedBy":[{"type":"reference","target":2674,"name":"InteractionFinished"},{"type":"reference","target":2910,"name":"TaskFinished"}],"permalink":"/api/core-events/class/ActivityFinished","categories":[],"nextId":2322},{"id":2322,"name":"ActivityRelatedArtifactArchived","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2323,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ActivityRelatedArtifactArchived.ts","line":18,"character":11}],"signatures":[{"id":2324,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ActivityRelatedArtifactArchived.ts","line":18,"character":11}],"parameters":[{"id":2325,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2322,"name":"ActivityRelatedArtifactArchived","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":2489,"name":"ArtifactArchived.fromJSON"}}],"overwrites":{"type":"reference","target":2488,"name":"ArtifactArchived.fromJSON"}},{"id":2326,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ActivityRelatedArtifactArchived.ts","line":30,"character":4}],"signatures":[{"id":2327,"name":"new ActivityRelatedArtifactArchived","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ActivityRelatedArtifactArchived.ts","line":30,"character":4}],"parameters":[{"id":2328,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2329,"name":"activityId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2330,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Name","package":"@serenity-js/core"}},{"id":2331,"name":"type","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"ArtifactType","package":"@serenity-js/core"}},{"id":2332,"name":"path","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Path","package":"@serenity-js/core"}},{"id":2333,"name":"artifactTimestamp","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}},{"id":2334,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2322,"name":"ActivityRelatedArtifactArchived","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":2492,"name":"ArtifactArchived.constructor"}}],"overwrites":{"type":"reference","target":2491,"name":"ArtifactArchived.constructor"}},{"id":2335,"name":"activityId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityRelatedArtifactArchived.ts","line":32,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2336,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ActivityRelatedArtifactArchived.ts","line":43,"character":4}],"signatures":[{"id":2337,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[{"fileName":"packages/core/src/events/ActivityRelatedArtifactArchived.ts","line":43,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"},"overwrites":{"type":"reference","target":2505,"name":"ArtifactArchived.toJSON"}}],"overwrites":{"type":"reference","target":2504,"name":"ArtifactArchived.toJSON"}},{"id":2338,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ArtifactArchived.ts","line":26,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2499,"name":"ArtifactArchived.sceneId"}},{"id":2339,"name":"name","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ArtifactArchived.ts","line":27,"character":24}],"type":{"type":"reference","name":"Name","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2500,"name":"ArtifactArchived.name"}},{"id":2340,"name":"type","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ArtifactArchived.ts","line":28,"character":24}],"type":{"type":"reference","name":"ArtifactType","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2501,"name":"ArtifactArchived.type"}},{"id":2341,"name":"path","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ArtifactArchived.ts","line":29,"character":24}],"type":{"type":"reference","name":"Path","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2502,"name":"ArtifactArchived.path"}},{"id":2342,"name":"artifactTimestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ArtifactArchived.ts","line":30,"character":24}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2503,"name":"ArtifactArchived.artifactTimestamp"}},{"id":2343,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2506,"name":"ArtifactArchived.timestamp"}},{"id":2344,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2345,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2346,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2508,"name":"ArtifactArchived.equals"}}],"inheritedFrom":{"type":"reference","target":2507,"name":"ArtifactArchived.equals"}},{"id":2347,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2348,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2511,"name":"ArtifactArchived.toString"}}],"inheritedFrom":{"type":"reference","target":2510,"name":"ArtifactArchived.toString"}}],"groups":[{"title":"Constructors","children":[2326]},{"title":"Properties","children":[2335,2338,2339,2340,2341,2342,2343]},{"title":"Methods","children":[2323,2336,2344,2347]}],"sources":[{"fileName":"packages/core/src/events/ActivityRelatedArtifactArchived.ts","line":17,"character":13}],"extendedTypes":[{"type":"reference","target":2487,"name":"ArtifactArchived","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/ActivityRelatedArtifactArchived","categories":[],"previousId":2302,"nextId":2349},{"id":2349,"name":"ActivityRelatedArtifactGenerated","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2350,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ActivityRelatedArtifactGenerated.ts","line":13,"character":11}],"signatures":[{"id":2351,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ActivityRelatedArtifactGenerated.ts","line":13,"character":11}],"parameters":[{"id":2352,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2349,"name":"ActivityRelatedArtifactGenerated","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":2514,"name":"ArtifactGenerated.fromJSON"}}],"overwrites":{"type":"reference","target":2513,"name":"ArtifactGenerated.fromJSON"}},{"id":2353,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ActivityRelatedArtifactGenerated.ts","line":23,"character":4}],"signatures":[{"id":2354,"name":"new ActivityRelatedArtifactGenerated","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ActivityRelatedArtifactGenerated.ts","line":23,"character":4}],"parameters":[{"id":2355,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2356,"name":"activityId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2357,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Name","package":"@serenity-js/core"}},{"id":2358,"name":"artifact","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Artifact","package":"@serenity-js/core"}},{"id":2359,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2349,"name":"ActivityRelatedArtifactGenerated","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":2517,"name":"ArtifactGenerated.constructor"}}],"overwrites":{"type":"reference","target":2516,"name":"ArtifactGenerated.constructor"}},{"id":2360,"name":"activityId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityRelatedArtifactGenerated.ts","line":25,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2361,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ArtifactGenerated.ts","line":23,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2522,"name":"ArtifactGenerated.sceneId"}},{"id":2362,"name":"name","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ArtifactGenerated.ts","line":24,"character":24}],"type":{"type":"reference","name":"Name","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2523,"name":"ArtifactGenerated.name"}},{"id":2363,"name":"artifact","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ArtifactGenerated.ts","line":25,"character":24}],"type":{"type":"reference","name":"Artifact","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2524,"name":"ArtifactGenerated.artifact"}},{"id":2364,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2525,"name":"ArtifactGenerated.timestamp"}},{"id":2365,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2366,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2367,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2527,"name":"ArtifactGenerated.equals"}}],"inheritedFrom":{"type":"reference","target":2526,"name":"ArtifactGenerated.equals"}},{"id":2368,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2369,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2530,"name":"ArtifactGenerated.toString"}}],"inheritedFrom":{"type":"reference","target":2529,"name":"ArtifactGenerated.toString"}},{"id":2370,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2371,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2532,"name":"ArtifactGenerated.toJSON"}}],"inheritedFrom":{"type":"reference","target":2531,"name":"ArtifactGenerated.toJSON"}}],"groups":[{"title":"Constructors","children":[2353]},{"title":"Properties","children":[2360,2361,2362,2363,2364]},{"title":"Methods","children":[2350,2365,2368,2370]}],"sources":[{"fileName":"packages/core/src/events/ActivityRelatedArtifactGenerated.ts","line":12,"character":13}],"extendedTypes":[{"type":"reference","target":2512,"name":"ArtifactGenerated","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/ActivityRelatedArtifactGenerated","categories":[],"previousId":2322,"nextId":2372},{"id":2372,"name":"ActivityStarts","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"Emitted when an ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) starts."}]},"children":[{"id":2373,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ActivityStarts.ts","line":13,"character":4}],"signatures":[{"id":2374,"name":"new ActivityStarts","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ActivityStarts.ts","line":13,"character":4}],"parameters":[{"id":2375,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2376,"name":"activityId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2377,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"ActivityDetails","package":"@serenity-js/core"}},{"id":2378,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2372,"name":"ActivityStarts","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2379,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityStarts.ts","line":14,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2380,"name":"activityId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityStarts.ts","line":15,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2381,"name":"details","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityStarts.ts","line":16,"character":24}],"type":{"type":"reference","name":"ActivityDetails","package":"@serenity-js/core"}},{"id":2382,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2634,"name":"DomainEvent.timestamp"}},{"id":2383,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2384,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2385,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2636,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2635,"name":"DomainEvent.equals"}},{"id":2386,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2387,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2639,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2638,"name":"DomainEvent.toString"}},{"id":2388,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2389,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2641,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2640,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2373]},{"title":"Properties","children":[2379,2380,2381,2382]},{"title":"Methods","children":[2383,2386,2388]}],"sources":[{"fileName":"packages/core/src/events/ActivityStarts.ts","line":12,"character":22}],"extendedTypes":[{"type":"reference","target":2630,"name":"DomainEvent","package":"@serenity-js/core"}],"extendedBy":[{"type":"reference","target":2697,"name":"InteractionStarts"},{"type":"reference","target":2933,"name":"TaskStarts"}],"permalink":"/api/core-events/class/ActivityStarts","categories":[],"previousId":2349,"nextId":2487},{"id":2487,"name":"ArtifactArchived","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2488,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ArtifactArchived.ts","line":14,"character":11}],"signatures":[{"id":2489,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ArtifactArchived.ts","line":14,"character":11}],"parameters":[{"id":2490,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2487,"name":"ArtifactArchived","package":"@serenity-js/core"}}]},{"id":2491,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ArtifactArchived.ts","line":25,"character":4}],"signatures":[{"id":2492,"name":"new ArtifactArchived","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ArtifactArchived.ts","line":25,"character":4}],"parameters":[{"id":2493,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2494,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Name","package":"@serenity-js/core"}},{"id":2495,"name":"type","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"ArtifactType","package":"@serenity-js/core"}},{"id":2496,"name":"path","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Path","package":"@serenity-js/core"}},{"id":2497,"name":"artifactTimestamp","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}},{"id":2498,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2487,"name":"ArtifactArchived","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2499,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ArtifactArchived.ts","line":26,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2500,"name":"name","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ArtifactArchived.ts","line":27,"character":24}],"type":{"type":"reference","name":"Name","package":"@serenity-js/core"}},{"id":2501,"name":"type","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ArtifactArchived.ts","line":28,"character":24}],"type":{"type":"reference","name":"ArtifactType","package":"@serenity-js/core"}},{"id":2502,"name":"path","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ArtifactArchived.ts","line":29,"character":24}],"type":{"type":"reference","name":"Path","package":"@serenity-js/core"}},{"id":2503,"name":"artifactTimestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ArtifactArchived.ts","line":30,"character":24}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}},{"id":2504,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ArtifactArchived.ts","line":42,"character":4}],"signatures":[{"id":2505,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[{"fileName":"packages/core/src/events/ArtifactArchived.ts","line":42,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"},"overwrites":{"type":"reference","target":2641,"name":"DomainEvent.toJSON"}}],"overwrites":{"type":"reference","target":2640,"name":"DomainEvent.toJSON"}},{"id":2506,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2634,"name":"DomainEvent.timestamp"}},{"id":2507,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2508,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2509,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2636,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2635,"name":"DomainEvent.equals"}},{"id":2510,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2511,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2639,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2638,"name":"DomainEvent.toString"}}],"groups":[{"title":"Constructors","children":[2491]},{"title":"Properties","children":[2499,2500,2501,2502,2503,2506]},{"title":"Methods","children":[2488,2504,2507,2510]}],"sources":[{"fileName":"packages/core/src/events/ArtifactArchived.ts","line":13,"character":13}],"extendedTypes":[{"type":"reference","target":2630,"name":"DomainEvent","package":"@serenity-js/core"}],"extendedBy":[{"type":"reference","target":2322,"name":"ActivityRelatedArtifactArchived"}],"permalink":"/api/core-events/class/ArtifactArchived","categories":[],"previousId":2372,"nextId":2512},{"id":2512,"name":"ArtifactGenerated","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2513,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ArtifactGenerated.ts","line":13,"character":11}],"signatures":[{"id":2514,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ArtifactGenerated.ts","line":13,"character":11}],"parameters":[{"id":2515,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2512,"name":"ArtifactGenerated","package":"@serenity-js/core"}}]},{"id":2516,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ArtifactGenerated.ts","line":22,"character":4}],"signatures":[{"id":2517,"name":"new ArtifactGenerated","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ArtifactGenerated.ts","line":22,"character":4}],"parameters":[{"id":2518,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2519,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Name","package":"@serenity-js/core"}},{"id":2520,"name":"artifact","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Artifact","package":"@serenity-js/core"}},{"id":2521,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2512,"name":"ArtifactGenerated","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2522,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ArtifactGenerated.ts","line":23,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2523,"name":"name","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ArtifactGenerated.ts","line":24,"character":24}],"type":{"type":"reference","name":"Name","package":"@serenity-js/core"}},{"id":2524,"name":"artifact","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ArtifactGenerated.ts","line":25,"character":24}],"type":{"type":"reference","name":"Artifact","package":"@serenity-js/core"}},{"id":2525,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2634,"name":"DomainEvent.timestamp"}},{"id":2526,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2527,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2528,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2636,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2635,"name":"DomainEvent.equals"}},{"id":2529,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2530,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2639,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2638,"name":"DomainEvent.toString"}},{"id":2531,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2532,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2641,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2640,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2516]},{"title":"Properties","children":[2522,2523,2524,2525]},{"title":"Methods","children":[2513,2526,2529,2531]}],"sources":[{"fileName":"packages/core/src/events/ArtifactGenerated.ts","line":12,"character":13}],"extendedTypes":[{"type":"reference","target":2630,"name":"DomainEvent","package":"@serenity-js/core"}],"extendedBy":[{"type":"reference","target":2349,"name":"ActivityRelatedArtifactGenerated"}],"permalink":"/api/core-events/class/ArtifactGenerated","categories":[],"previousId":2487,"nextId":2533},{"id":2533,"name":"AsyncOperationAborted","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2534,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationAborted.ts","line":12,"character":11}],"signatures":[{"id":2535,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationAborted.ts","line":12,"character":11}],"parameters":[{"id":2536,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2533,"name":"AsyncOperationAborted","package":"@serenity-js/core"}}]},{"id":2537,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationAborted.ts","line":20,"character":4}],"signatures":[{"id":2538,"name":"new AsyncOperationAborted","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationAborted.ts","line":20,"character":4}],"parameters":[{"id":2539,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Description","package":"@serenity-js/core"}},{"id":2540,"name":"correlationId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2541,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2533,"name":"AsyncOperationAborted","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2542,"name":"description","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationAborted.ts","line":21,"character":24}],"type":{"type":"reference","name":"Description","package":"@serenity-js/core"}},{"id":2543,"name":"correlationId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationAborted.ts","line":22,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2544,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2634,"name":"DomainEvent.timestamp"}},{"id":2545,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2546,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2547,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2636,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2635,"name":"DomainEvent.equals"}},{"id":2548,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2549,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2639,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2638,"name":"DomainEvent.toString"}},{"id":2550,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2551,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2641,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2640,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2537]},{"title":"Properties","children":[2542,2543,2544]},{"title":"Methods","children":[2534,2545,2548,2550]}],"sources":[{"fileName":"packages/core/src/events/AsyncOperationAborted.ts","line":11,"character":13}],"extendedTypes":[{"type":"reference","target":2630,"name":"DomainEvent","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/AsyncOperationAborted","categories":[],"previousId":2512,"nextId":2552},{"id":2552,"name":"AsyncOperationAttempted","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2553,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationAttempted.ts","line":12,"character":11}],"signatures":[{"id":2554,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationAttempted.ts","line":12,"character":11}],"parameters":[{"id":2555,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2552,"name":"AsyncOperationAttempted","package":"@serenity-js/core"}}]},{"id":2556,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationAttempted.ts","line":21,"character":4}],"signatures":[{"id":2557,"name":"new AsyncOperationAttempted","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationAttempted.ts","line":21,"character":4}],"parameters":[{"id":2558,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Name","package":"@serenity-js/core"}},{"id":2559,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Description","package":"@serenity-js/core"}},{"id":2560,"name":"correlationId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2561,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2552,"name":"AsyncOperationAttempted","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2562,"name":"name","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationAttempted.ts","line":22,"character":24}],"type":{"type":"reference","name":"Name","package":"@serenity-js/core"}},{"id":2563,"name":"description","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationAttempted.ts","line":23,"character":24}],"type":{"type":"reference","name":"Description","package":"@serenity-js/core"}},{"id":2564,"name":"correlationId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationAttempted.ts","line":24,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2565,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2634,"name":"DomainEvent.timestamp"}},{"id":2566,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2567,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2568,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2636,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2635,"name":"DomainEvent.equals"}},{"id":2569,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2570,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2639,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2638,"name":"DomainEvent.toString"}},{"id":2571,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2572,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2641,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2640,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2556]},{"title":"Properties","children":[2562,2563,2564,2565]},{"title":"Methods","children":[2553,2566,2569,2571]}],"sources":[{"fileName":"packages/core/src/events/AsyncOperationAttempted.ts","line":11,"character":13}],"extendedTypes":[{"type":"reference","target":2630,"name":"DomainEvent","package":"@serenity-js/core"}],"extendedBy":[{"type":"reference","target":2409,"name":"ActorStageExitAttempted"}],"permalink":"/api/core-events/class/AsyncOperationAttempted","categories":[],"previousId":2533,"nextId":2573},{"id":2573,"name":"AsyncOperationCompleted","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2574,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationCompleted.ts","line":12,"character":11}],"signatures":[{"id":2575,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationCompleted.ts","line":12,"character":11}],"parameters":[{"id":2576,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2573,"name":"AsyncOperationCompleted","package":"@serenity-js/core"}}]},{"id":2577,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationCompleted.ts","line":19,"character":4}],"signatures":[{"id":2578,"name":"new AsyncOperationCompleted","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationCompleted.ts","line":19,"character":4}],"parameters":[{"id":2579,"name":"correlationId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2580,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2573,"name":"AsyncOperationCompleted","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2581,"name":"correlationId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationCompleted.ts","line":20,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2582,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2634,"name":"DomainEvent.timestamp"}},{"id":2583,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2584,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2585,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2636,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2635,"name":"DomainEvent.equals"}},{"id":2586,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2587,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2639,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2638,"name":"DomainEvent.toString"}},{"id":2588,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2589,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2641,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2640,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2577]},{"title":"Properties","children":[2581,2582]},{"title":"Methods","children":[2574,2583,2586,2588]}],"sources":[{"fileName":"packages/core/src/events/AsyncOperationCompleted.ts","line":11,"character":13}],"extendedTypes":[{"type":"reference","target":2630,"name":"DomainEvent","package":"@serenity-js/core"}],"extendedBy":[{"type":"reference","target":2430,"name":"ActorStageExitCompleted"}],"permalink":"/api/core-events/class/AsyncOperationCompleted","categories":[],"previousId":2552,"nextId":2590},{"id":2590,"name":"AsyncOperationFailed","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2591,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationFailed.ts","line":13,"character":11}],"signatures":[{"id":2592,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationFailed.ts","line":13,"character":11}],"parameters":[{"id":2593,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2590,"name":"AsyncOperationFailed","package":"@serenity-js/core"}}]},{"id":2594,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationFailed.ts","line":21,"character":4}],"signatures":[{"id":2595,"name":"new AsyncOperationFailed","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationFailed.ts","line":21,"character":4}],"parameters":[{"id":2596,"name":"error","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}},{"id":2597,"name":"correlationId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2598,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2590,"name":"AsyncOperationFailed","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2599,"name":"error","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationFailed.ts","line":22,"character":24}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}},{"id":2600,"name":"correlationId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationFailed.ts","line":23,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2601,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationFailed.ts","line":31,"character":4}],"signatures":[{"id":2602,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[{"fileName":"packages/core/src/events/AsyncOperationFailed.ts","line":31,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"},"overwrites":{"type":"reference","target":2641,"name":"DomainEvent.toJSON"}}],"overwrites":{"type":"reference","target":2640,"name":"DomainEvent.toJSON"}},{"id":2603,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2634,"name":"DomainEvent.timestamp"}},{"id":2604,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2605,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2606,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2636,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2635,"name":"DomainEvent.equals"}},{"id":2607,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2608,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2639,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2638,"name":"DomainEvent.toString"}}],"groups":[{"title":"Constructors","children":[2594]},{"title":"Properties","children":[2599,2600,2603]},{"title":"Methods","children":[2591,2601,2604,2607]}],"sources":[{"fileName":"packages/core/src/events/AsyncOperationFailed.ts","line":12,"character":13}],"extendedTypes":[{"type":"reference","target":2630,"name":"DomainEvent","package":"@serenity-js/core"}],"extendedBy":[{"type":"reference","target":2449,"name":"ActorStageExitFailed"}],"permalink":"/api/core-events/class/AsyncOperationFailed","categories":[],"previousId":2573,"nextId":2609},{"id":2609,"name":"BusinessRuleDetected","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Emitted by [@serenity-js/cucumber](/api/cucumber)\\nwhen a [business rule](https://cucumber.io/docs/gherkin/reference/#rule) is detected."}]},"children":[{"id":2610,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/BusinessRuleDetected.ts","line":15,"character":18}],"signatures":[{"id":2611,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/BusinessRuleDetected.ts","line":15,"character":18}],"parameters":[{"id":2612,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2609,"name":"BusinessRuleDetected","package":"@serenity-js/core"}}]},{"id":2613,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/BusinessRuleDetected.ts","line":24,"character":4}],"signatures":[{"id":2614,"name":"new BusinessRuleDetected","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/BusinessRuleDetected.ts","line":24,"character":4}],"parameters":[{"id":2615,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2616,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"ScenarioDetails","package":"@serenity-js/core"}},{"id":2617,"name":"rule","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"BusinessRule","package":"@serenity-js/core"}},{"id":2618,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2609,"name":"BusinessRuleDetected","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2619,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/BusinessRuleDetected.ts","line":25,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2620,"name":"details","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/BusinessRuleDetected.ts","line":26,"character":24}],"type":{"type":"reference","name":"ScenarioDetails","package":"@serenity-js/core"}},{"id":2621,"name":"rule","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/BusinessRuleDetected.ts","line":27,"character":24}],"type":{"type":"reference","name":"BusinessRule","package":"@serenity-js/core"}},{"id":2622,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2634,"name":"DomainEvent.timestamp"}},{"id":2623,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2624,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2625,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2636,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2635,"name":"DomainEvent.equals"}},{"id":2626,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2627,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2639,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2638,"name":"DomainEvent.toString"}},{"id":2628,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2629,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2641,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2640,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2613]},{"title":"Properties","children":[2619,2620,2621,2622]},{"title":"Methods","children":[2610,2623,2626,2628]}],"sources":[{"fileName":"packages/core/src/events/BusinessRuleDetected.ts","line":14,"character":13}],"extendedTypes":[{"type":"reference","target":2630,"name":"DomainEvent","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/BusinessRuleDetected","categories":[],"previousId":2590,"nextId":2630},{"id":2630,"name":"DomainEvent","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"Represents an internal domain event that occurs during test execution."}]},"children":[{"id":2634,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"..."},{"id":2635,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2636,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2637,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.equals"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.equals"}},{"id":2638,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2639,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.toString"}},{"id":2640,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2641,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.toJSON"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.toJSON"}}],"groups":[{"title":"Properties","children":[2634]},{"title":"Methods","children":[2635,2638,2640]}],"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":10,"character":22}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}],"extendedBy":[{"type":"reference","target":2302,"name":"ActivityFinished"},{"type":"reference","target":2372,"name":"ActivityStarts"},{"type":"reference","target":2390,"name":"ActorEntersStage"},{"type":"reference","target":2468,"name":"ActorStageExitStarts"},{"type":"reference","target":2487,"name":"ArtifactArchived"},{"type":"reference","target":2512,"name":"ArtifactGenerated"},{"type":"reference","target":2533,"name":"AsyncOperationAborted"},{"type":"reference","target":2552,"name":"AsyncOperationAttempted"},{"type":"reference","target":2573,"name":"AsyncOperationCompleted"},{"type":"reference","target":2590,"name":"AsyncOperationFailed"},{"type":"reference","target":2609,"name":"BusinessRuleDetected"},{"type":"reference","target":2655,"name":"FeatureNarrativeDetected"},{"type":"reference","target":2718,"name":"RetryableSceneDetected"},{"type":"reference","target":2735,"name":"SceneBackgroundDetected"},{"type":"reference","target":2756,"name":"SceneDescriptionDetected"},{"type":"reference","target":2775,"name":"SceneFinished"},{"type":"reference","target":2796,"name":"SceneFinishes"},{"type":"reference","target":2813,"name":"SceneParametersDetected"},{"type":"reference","target":2834,"name":"SceneSequenceDetected"},{"type":"reference","target":2853,"name":"SceneStarts"},{"type":"reference","target":2872,"name":"SceneTagged"},{"type":"reference","target":2891,"name":"SceneTemplateDetected"},{"type":"reference","target":2954,"name":"TestRunFinished"},{"type":"reference","target":2971,"name":"TestRunFinishes"},{"type":"reference","target":2986,"name":"TestRunnerDetected"},{"type":"reference","target":3005,"name":"TestRunStarts"},{"type":"reference","target":3020,"name":"TestSuiteFinished"},{"type":"reference","target":3039,"name":"TestSuiteStarts"}],"permalink":"/api/core-events/class/DomainEvent","categories":[],"previousId":2609,"nextId":2655},{"id":2642,"name":"EmitsDomainEvents","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Describes an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) or a supporting class capable of telling\\nthe current wall clock time.\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`Serenity`"},{"kind":"text","text":"](/api/core/class/Serenity/)\\n- ["},{"kind":"code","text":"`Stage`"},{"kind":"text","text":"](/api/core/class/Stage/)"}]},"children":[{"id":2643,"name":"currentSceneId","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/EmitsDomainEvents.ts","line":6,"character":4}],"signatures":[{"id":2644,"name":"currentSceneId","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/EmitsDomainEvents.ts","line":6,"character":4}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}]},{"id":2645,"name":"assignNewActivityId","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/EmitsDomainEvents.ts","line":7,"character":4}],"signatures":[{"id":2646,"name":"assignNewActivityId","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/EmitsDomainEvents.ts","line":7,"character":4}],"parameters":[{"id":2647,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"ActivityDetails","package":"@serenity-js/core"}}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}]},{"id":2648,"name":"announce","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/EmitsDomainEvents.ts","line":8,"character":4}],"signatures":[{"id":2649,"name":"announce","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/EmitsDomainEvents.ts","line":8,"character":4}],"parameters":[{"id":2650,"name":"event","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":2630,"name":"DomainEvent","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":2651,"name":"waitForNextCue","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/EmitsDomainEvents.ts","line":9,"character":4}],"signatures":[{"id":2652,"name":"waitForNextCue","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/EmitsDomainEvents.ts","line":9,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":2653,"name":"currentTime","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/TellsTime.ts","line":18,"character":4}],"signatures":[{"id":2654,"name":"currentTime","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns current wall clock time."}]},"sources":[{"fileName":"packages/core/src/screenplay/time/TellsTime.ts","line":18,"character":4}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":1948,"name":"TellsTime.currentTime"}}],"inheritedFrom":{"type":"reference","target":1947,"name":"TellsTime.currentTime"}}],"groups":[{"title":"Methods","children":[2643,2645,2648,2651,2653]}],"sources":[{"fileName":"packages/core/src/events/EmitsDomainEvents.ts","line":5,"character":17}],"extendedTypes":[{"type":"reference","target":1946,"name":"TellsTime","package":"@serenity-js/core"}],"implementedBy":[{"type":"reference","target":1951,"name":"Serenity"},{"type":"reference","target":2158,"name":"Stage"}],"permalink":"/api/core-events/interface/EmitsDomainEvents","categories":[],"previousId":2468},{"id":2655,"name":"FeatureNarrativeDetected","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2656,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/FeatureNarrativeDetected.ts","line":12,"character":18}],"signatures":[{"id":2657,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/FeatureNarrativeDetected.ts","line":12,"character":18}],"parameters":[{"id":2658,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2655,"name":"FeatureNarrativeDetected","package":"@serenity-js/core"}}]},{"id":2666,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2634,"name":"DomainEvent.timestamp"}},{"id":2659,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/FeatureNarrativeDetected.ts","line":20,"character":4}],"signatures":[{"id":2660,"name":"new FeatureNarrativeDetected","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/FeatureNarrativeDetected.ts","line":20,"character":4}],"parameters":[{"id":2661,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2662,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Description","package":"@serenity-js/core"}},{"id":2663,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2655,"name":"FeatureNarrativeDetected","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2664,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/FeatureNarrativeDetected.ts","line":21,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2665,"name":"description","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/FeatureNarrativeDetected.ts","line":22,"character":24}],"type":{"type":"reference","name":"Description","package":"@serenity-js/core"}},{"id":2667,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2668,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2669,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2636,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2635,"name":"DomainEvent.equals"}},{"id":2670,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2671,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2639,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2638,"name":"DomainEvent.toString"}},{"id":2672,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2673,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2641,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2640,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2659]},{"title":"Properties","children":[2666,2664,2665]},{"title":"Methods","children":[2656,2667,2670,2672]}],"sources":[{"fileName":"packages/core/src/events/FeatureNarrativeDetected.ts","line":11,"character":13}],"extendedTypes":[{"type":"reference","target":2630,"name":"DomainEvent","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/FeatureNarrativeDetected","categories":[],"previousId":2630,"nextId":2674},{"id":2674,"name":"InteractionFinished","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Emitted when an ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/) is finished.\\n["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/) instances listen\\nto this event to report on the outcome of the interaction, or perform any additional follow-up activities,\\nsuch as taking a screenshot."}]},"children":[{"id":2675,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/InteractionFinished.ts","line":17,"character":11}],"signatures":[{"id":2676,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/InteractionFinished.ts","line":17,"character":11}],"parameters":[{"id":2677,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2674,"name":"InteractionFinished","package":"@serenity-js/core"}}]},{"id":2678,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":13,"character":4}],"signatures":[{"id":2679,"name":"new InteractionFinished","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":13,"character":4}],"parameters":[{"id":2680,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2681,"name":"activityId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2682,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"ActivityDetails","package":"@serenity-js/core"}},{"id":2683,"name":"outcome","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Outcome","package":"@serenity-js/core"}},{"id":2684,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2674,"name":"InteractionFinished","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2304,"name":"ActivityFinished.constructor"}}],"inheritedFrom":{"type":"reference","target":2303,"name":"ActivityFinished.constructor"}},{"id":2685,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":14,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2310,"name":"ActivityFinished.sceneId"}},{"id":2686,"name":"activityId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":15,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2311,"name":"ActivityFinished.activityId"}},{"id":2687,"name":"details","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":16,"character":24}],"type":{"type":"reference","name":"ActivityDetails","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2312,"name":"ActivityFinished.details"}},{"id":2688,"name":"outcome","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":17,"character":24}],"type":{"type":"reference","name":"Outcome","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2313,"name":"ActivityFinished.outcome"}},{"id":2689,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2314,"name":"ActivityFinished.timestamp"}},{"id":2690,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2691,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2692,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2316,"name":"ActivityFinished.equals"}}],"inheritedFrom":{"type":"reference","target":2315,"name":"ActivityFinished.equals"}},{"id":2693,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2694,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2319,"name":"ActivityFinished.toString"}}],"inheritedFrom":{"type":"reference","target":2318,"name":"ActivityFinished.toString"}},{"id":2695,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2696,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2321,"name":"ActivityFinished.toJSON"}}],"inheritedFrom":{"type":"reference","target":2320,"name":"ActivityFinished.toJSON"}}],"groups":[{"title":"Constructors","children":[2678]},{"title":"Properties","children":[2685,2686,2687,2688,2689]},{"title":"Methods","children":[2675,2690,2693,2695]}],"sources":[{"fileName":"packages/core/src/events/InteractionFinished.ts","line":16,"character":13}],"extendedTypes":[{"type":"reference","target":2302,"name":"ActivityFinished","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/InteractionFinished","categories":[],"previousId":2655,"nextId":2697},{"id":2697,"name":"InteractionStarts","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Emitted when an ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/) starts."}]},"children":[{"id":2698,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/InteractionStarts.ts","line":13,"character":11}],"signatures":[{"id":2699,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/InteractionStarts.ts","line":13,"character":11}],"parameters":[{"id":2700,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2697,"name":"InteractionStarts","package":"@serenity-js/core"}}]},{"id":2701,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ActivityStarts.ts","line":13,"character":4}],"signatures":[{"id":2702,"name":"new InteractionStarts","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ActivityStarts.ts","line":13,"character":4}],"parameters":[{"id":2703,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2704,"name":"activityId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2705,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"ActivityDetails","package":"@serenity-js/core"}},{"id":2706,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2697,"name":"InteractionStarts","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2374,"name":"ActivityStarts.constructor"}}],"inheritedFrom":{"type":"reference","target":2373,"name":"ActivityStarts.constructor"}},{"id":2707,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityStarts.ts","line":14,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2379,"name":"ActivityStarts.sceneId"}},{"id":2708,"name":"activityId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityStarts.ts","line":15,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2380,"name":"ActivityStarts.activityId"}},{"id":2709,"name":"details","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityStarts.ts","line":16,"character":24}],"type":{"type":"reference","name":"ActivityDetails","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2381,"name":"ActivityStarts.details"}},{"id":2710,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2382,"name":"ActivityStarts.timestamp"}},{"id":2711,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2712,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2713,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2384,"name":"ActivityStarts.equals"}}],"inheritedFrom":{"type":"reference","target":2383,"name":"ActivityStarts.equals"}},{"id":2714,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2715,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2387,"name":"ActivityStarts.toString"}}],"inheritedFrom":{"type":"reference","target":2386,"name":"ActivityStarts.toString"}},{"id":2716,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2717,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2389,"name":"ActivityStarts.toJSON"}}],"inheritedFrom":{"type":"reference","target":2388,"name":"ActivityStarts.toJSON"}}],"groups":[{"title":"Constructors","children":[2701]},{"title":"Properties","children":[2707,2708,2709,2710]},{"title":"Methods","children":[2698,2711,2714,2716]}],"sources":[{"fileName":"packages/core/src/events/InteractionStarts.ts","line":12,"character":13}],"extendedTypes":[{"type":"reference","target":2372,"name":"ActivityStarts","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/InteractionStarts","categories":[],"previousId":2674,"nextId":2718},{"id":2718,"name":"RetryableSceneDetected","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Indicates that the test runner will retry running the test scenario upon failure."}]},"children":[{"id":2719,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/RetryableSceneDetected.ts","line":20,"character":11}],"signatures":[{"id":2720,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Deserialises the event from a JSONObject"}]},"sources":[{"fileName":"packages/core/src/events/RetryableSceneDetected.ts","line":20,"character":11}],"parameters":[{"id":2721,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2718,"name":"RetryableSceneDetected","package":"@serenity-js/core"}}]},{"id":2727,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2634,"name":"DomainEvent.timestamp"}},{"id":2722,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/RetryableSceneDetected.ts","line":31,"character":4}],"signatures":[{"id":2723,"name":"new RetryableSceneDetected","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/RetryableSceneDetected.ts","line":31,"character":4}],"parameters":[{"id":2724,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2725,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2718,"name":"RetryableSceneDetected","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2726,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/RetryableSceneDetected.ts","line":32,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2728,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2729,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2730,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2636,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2635,"name":"DomainEvent.equals"}},{"id":2731,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2732,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2639,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2638,"name":"DomainEvent.toString"}},{"id":2733,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2734,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2641,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2640,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2722]},{"title":"Properties","children":[2727,2726]},{"title":"Methods","children":[2719,2728,2731,2733]}],"sources":[{"fileName":"packages/core/src/events/RetryableSceneDetected.ts","line":13,"character":13}],"extendedTypes":[{"type":"reference","target":2630,"name":"DomainEvent","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/RetryableSceneDetected","categories":[],"previousId":2697,"nextId":2735},{"id":2735,"name":"SceneBackgroundDetected","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2736,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneBackgroundDetected.ts","line":12,"character":18}],"signatures":[{"id":2737,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneBackgroundDetected.ts","line":12,"character":18}],"parameters":[{"id":2738,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2735,"name":"SceneBackgroundDetected","package":"@serenity-js/core"}}]},{"id":2748,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2634,"name":"DomainEvent.timestamp"}},{"id":2739,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneBackgroundDetected.ts","line":20,"character":4}],"signatures":[{"id":2740,"name":"new SceneBackgroundDetected","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneBackgroundDetected.ts","line":20,"character":4}],"parameters":[{"id":2741,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2742,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Name","package":"@serenity-js/core"}},{"id":2743,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Description","package":"@serenity-js/core"}},{"id":2744,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2735,"name":"SceneBackgroundDetected","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2745,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneBackgroundDetected.ts","line":21,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2746,"name":"name","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneBackgroundDetected.ts","line":22,"character":24}],"type":{"type":"reference","name":"Name","package":"@serenity-js/core"}},{"id":2747,"name":"description","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneBackgroundDetected.ts","line":23,"character":24}],"type":{"type":"reference","name":"Description","package":"@serenity-js/core"}},{"id":2749,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2750,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2751,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2636,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2635,"name":"DomainEvent.equals"}},{"id":2752,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2753,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2639,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2638,"name":"DomainEvent.toString"}},{"id":2754,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2755,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2641,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2640,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2739]},{"title":"Properties","children":[2748,2745,2746,2747]},{"title":"Methods","children":[2736,2749,2752,2754]}],"sources":[{"fileName":"packages/core/src/events/SceneBackgroundDetected.ts","line":11,"character":13}],"extendedTypes":[{"type":"reference","target":2630,"name":"DomainEvent","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/SceneBackgroundDetected","categories":[],"previousId":2718,"nextId":2756},{"id":2756,"name":"SceneDescriptionDetected","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2757,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneDescriptionDetected.ts","line":12,"character":18}],"signatures":[{"id":2758,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneDescriptionDetected.ts","line":12,"character":18}],"parameters":[{"id":2759,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2756,"name":"SceneDescriptionDetected","package":"@serenity-js/core"}}]},{"id":2767,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2634,"name":"DomainEvent.timestamp"}},{"id":2760,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneDescriptionDetected.ts","line":20,"character":4}],"signatures":[{"id":2761,"name":"new SceneDescriptionDetected","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneDescriptionDetected.ts","line":20,"character":4}],"parameters":[{"id":2762,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2763,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Description","package":"@serenity-js/core"}},{"id":2764,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2756,"name":"SceneDescriptionDetected","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2765,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneDescriptionDetected.ts","line":21,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2766,"name":"description","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneDescriptionDetected.ts","line":22,"character":24}],"type":{"type":"reference","name":"Description","package":"@serenity-js/core"}},{"id":2768,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2769,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2770,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2636,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2635,"name":"DomainEvent.equals"}},{"id":2771,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2772,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2639,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2638,"name":"DomainEvent.toString"}},{"id":2773,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2774,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2641,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2640,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2760]},{"title":"Properties","children":[2767,2765,2766]},{"title":"Methods","children":[2757,2768,2771,2773]}],"sources":[{"fileName":"packages/core/src/events/SceneDescriptionDetected.ts","line":11,"character":13}],"extendedTypes":[{"type":"reference","target":2630,"name":"DomainEvent","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/SceneDescriptionDetected","categories":[],"previousId":2735,"nextId":2775},{"id":2775,"name":"SceneFinished","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2776,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneFinished.ts","line":13,"character":11}],"signatures":[{"id":2777,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneFinished.ts","line":13,"character":11}],"parameters":[{"id":2778,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2775,"name":"SceneFinished","package":"@serenity-js/core"}}]},{"id":2788,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2634,"name":"DomainEvent.timestamp"}},{"id":2779,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneFinished.ts","line":22,"character":4}],"signatures":[{"id":2780,"name":"new SceneFinished","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneFinished.ts","line":22,"character":4}],"parameters":[{"id":2781,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2782,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"ScenarioDetails","package":"@serenity-js/core"}},{"id":2783,"name":"outcome","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Outcome","package":"@serenity-js/core"}},{"id":2784,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2775,"name":"SceneFinished","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2785,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneFinished.ts","line":23,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2786,"name":"details","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneFinished.ts","line":24,"character":24}],"type":{"type":"reference","name":"ScenarioDetails","package":"@serenity-js/core"}},{"id":2787,"name":"outcome","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneFinished.ts","line":25,"character":24}],"type":{"type":"reference","name":"Outcome","package":"@serenity-js/core"}},{"id":2789,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2790,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2791,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2636,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2635,"name":"DomainEvent.equals"}},{"id":2792,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2793,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2639,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2638,"name":"DomainEvent.toString"}},{"id":2794,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2795,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2641,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2640,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2779]},{"title":"Properties","children":[2788,2785,2786,2787]},{"title":"Methods","children":[2776,2789,2792,2794]}],"sources":[{"fileName":"packages/core/src/events/SceneFinished.ts","line":12,"character":13}],"extendedTypes":[{"type":"reference","target":2630,"name":"DomainEvent","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/SceneFinished","categories":[],"previousId":2756,"nextId":2796},{"id":2796,"name":"SceneFinishes","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Emitted by a Serenity/JS test runner adapter, right before a test and all its associated test hooks finish.\\nTriggers any clean-up operations that might be required, such as discarding of\\nthe [discardable](/api/core/interface/Discardable/) abilities."}]},"children":[{"id":2797,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneFinishes.ts","line":16,"character":11}],"signatures":[{"id":2798,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneFinishes.ts","line":16,"character":11}],"parameters":[{"id":2799,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2796,"name":"SceneFinishes","package":"@serenity-js/core"}}]},{"id":2805,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2634,"name":"DomainEvent.timestamp"}},{"id":2800,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneFinishes.ts","line":23,"character":4}],"signatures":[{"id":2801,"name":"new SceneFinishes","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneFinishes.ts","line":23,"character":4}],"parameters":[{"id":2802,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2803,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2796,"name":"SceneFinishes","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2804,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneFinishes.ts","line":24,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2806,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2807,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2808,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2636,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2635,"name":"DomainEvent.equals"}},{"id":2809,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2810,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2639,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2638,"name":"DomainEvent.toString"}},{"id":2811,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2812,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2641,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2640,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2800]},{"title":"Properties","children":[2805,2804]},{"title":"Methods","children":[2797,2806,2809,2811]}],"sources":[{"fileName":"packages/core/src/events/SceneFinishes.ts","line":15,"character":13}],"extendedTypes":[{"type":"reference","target":2630,"name":"DomainEvent","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/SceneFinishes","categories":[],"previousId":2775,"nextId":2813},{"id":2813,"name":"SceneParametersDetected","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2814,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneParametersDetected.ts","line":12,"character":18}],"signatures":[{"id":2815,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneParametersDetected.ts","line":12,"character":18}],"parameters":[{"id":2816,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2813,"name":"SceneParametersDetected","package":"@serenity-js/core"}}]},{"id":2826,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2634,"name":"DomainEvent.timestamp"}},{"id":2817,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneParametersDetected.ts","line":21,"character":4}],"signatures":[{"id":2818,"name":"new SceneParametersDetected","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneParametersDetected.ts","line":21,"character":4}],"parameters":[{"id":2819,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2820,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"ScenarioDetails","package":"@serenity-js/core"}},{"id":2821,"name":"parameters","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"ScenarioParameters","package":"@serenity-js/core"}},{"id":2822,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2813,"name":"SceneParametersDetected","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2823,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneParametersDetected.ts","line":22,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2824,"name":"details","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneParametersDetected.ts","line":23,"character":24}],"type":{"type":"reference","name":"ScenarioDetails","package":"@serenity-js/core"}},{"id":2825,"name":"parameters","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneParametersDetected.ts","line":24,"character":24}],"type":{"type":"reference","name":"ScenarioParameters","package":"@serenity-js/core"}},{"id":2827,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2828,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2829,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2636,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2635,"name":"DomainEvent.equals"}},{"id":2830,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2831,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2639,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2638,"name":"DomainEvent.toString"}},{"id":2832,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2833,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2641,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2640,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2817]},{"title":"Properties","children":[2826,2823,2824,2825]},{"title":"Methods","children":[2814,2827,2830,2832]}],"sources":[{"fileName":"packages/core/src/events/SceneParametersDetected.ts","line":11,"character":13}],"extendedTypes":[{"type":"reference","target":2630,"name":"DomainEvent","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/SceneParametersDetected","categories":[],"previousId":2796,"nextId":2834},{"id":2834,"name":"SceneSequenceDetected","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2835,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneSequenceDetected.ts","line":12,"character":11}],"signatures":[{"id":2836,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneSequenceDetected.ts","line":12,"character":11}],"parameters":[{"id":2837,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2834,"name":"SceneSequenceDetected","package":"@serenity-js/core"}}]},{"id":2845,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2634,"name":"DomainEvent.timestamp"}},{"id":2838,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneSequenceDetected.ts","line":20,"character":4}],"signatures":[{"id":2839,"name":"new SceneSequenceDetected","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneSequenceDetected.ts","line":20,"character":4}],"parameters":[{"id":2840,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2841,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"ScenarioDetails","package":"@serenity-js/core"}},{"id":2842,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2834,"name":"SceneSequenceDetected","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2843,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneSequenceDetected.ts","line":21,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2844,"name":"details","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneSequenceDetected.ts","line":22,"character":24}],"type":{"type":"reference","name":"ScenarioDetails","package":"@serenity-js/core"}},{"id":2846,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2847,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2848,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2636,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2635,"name":"DomainEvent.equals"}},{"id":2849,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2850,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2639,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2638,"name":"DomainEvent.toString"}},{"id":2851,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2852,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2641,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2640,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2838]},{"title":"Properties","children":[2845,2843,2844]},{"title":"Methods","children":[2835,2846,2849,2851]}],"sources":[{"fileName":"packages/core/src/events/SceneSequenceDetected.ts","line":11,"character":13}],"extendedTypes":[{"type":"reference","target":2630,"name":"DomainEvent","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/SceneSequenceDetected","categories":[],"previousId":2813,"nextId":2853},{"id":2853,"name":"SceneStarts","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Emitted by a Serenity/JS test runner adapter when a test scenario and its associated test hooks are about to start."}]},"children":[{"id":2854,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneStarts.ts","line":14,"character":11}],"signatures":[{"id":2855,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneStarts.ts","line":14,"character":11}],"parameters":[{"id":2856,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2853,"name":"SceneStarts","package":"@serenity-js/core"}}]},{"id":2864,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2634,"name":"DomainEvent.timestamp"}},{"id":2857,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneStarts.ts","line":22,"character":4}],"signatures":[{"id":2858,"name":"new SceneStarts","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneStarts.ts","line":22,"character":4}],"parameters":[{"id":2859,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2860,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"ScenarioDetails","package":"@serenity-js/core"}},{"id":2861,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2853,"name":"SceneStarts","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2862,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneStarts.ts","line":23,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2863,"name":"details","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneStarts.ts","line":24,"character":24}],"type":{"type":"reference","name":"ScenarioDetails","package":"@serenity-js/core"}},{"id":2865,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2866,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2867,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2636,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2635,"name":"DomainEvent.equals"}},{"id":2868,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2869,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2639,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2638,"name":"DomainEvent.toString"}},{"id":2870,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2871,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2641,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2640,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2857]},{"title":"Properties","children":[2864,2862,2863]},{"title":"Methods","children":[2854,2865,2868,2870]}],"sources":[{"fileName":"packages/core/src/events/SceneStarts.ts","line":13,"character":13}],"extendedTypes":[{"type":"reference","target":2630,"name":"DomainEvent","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/SceneStarts","categories":[],"previousId":2834,"nextId":2872},{"id":2872,"name":"SceneTagged","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2873,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneTagged.ts","line":12,"character":11}],"signatures":[{"id":2874,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneTagged.ts","line":12,"character":11}],"parameters":[{"id":2875,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2872,"name":"SceneTagged","package":"@serenity-js/core"}}]},{"id":2883,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2634,"name":"DomainEvent.timestamp"}},{"id":2876,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneTagged.ts","line":19,"character":4}],"signatures":[{"id":2877,"name":"new SceneTagged","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneTagged.ts","line":19,"character":4}],"parameters":[{"id":2878,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2879,"name":"tag","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Tag","package":"@serenity-js/core"}},{"id":2880,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2872,"name":"SceneTagged","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2881,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneTagged.ts","line":20,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2882,"name":"tag","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneTagged.ts","line":21,"character":24}],"type":{"type":"reference","name":"Tag","package":"@serenity-js/core"}},{"id":2884,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2885,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2886,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2636,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2635,"name":"DomainEvent.equals"}},{"id":2887,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2888,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2639,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2638,"name":"DomainEvent.toString"}},{"id":2889,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2890,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2641,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2640,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2876]},{"title":"Properties","children":[2883,2881,2882]},{"title":"Methods","children":[2873,2884,2887,2889]}],"sources":[{"fileName":"packages/core/src/events/SceneTagged.ts","line":11,"character":13}],"extendedTypes":[{"type":"reference","target":2630,"name":"DomainEvent","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/SceneTagged","categories":[],"previousId":2853,"nextId":2891},{"id":2891,"name":"SceneTemplateDetected","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2892,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneTemplateDetected.ts","line":12,"character":18}],"signatures":[{"id":2893,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneTemplateDetected.ts","line":12,"character":18}],"parameters":[{"id":2894,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2891,"name":"SceneTemplateDetected","package":"@serenity-js/core"}}]},{"id":2902,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2634,"name":"DomainEvent.timestamp"}},{"id":2895,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneTemplateDetected.ts","line":20,"character":4}],"signatures":[{"id":2896,"name":"new SceneTemplateDetected","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneTemplateDetected.ts","line":20,"character":4}],"parameters":[{"id":2897,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2898,"name":"template","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Description","package":"@serenity-js/core"}},{"id":2899,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2891,"name":"SceneTemplateDetected","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2900,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneTemplateDetected.ts","line":21,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2901,"name":"template","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneTemplateDetected.ts","line":22,"character":24}],"type":{"type":"reference","name":"Description","package":"@serenity-js/core"}},{"id":2903,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2904,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2905,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2636,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2635,"name":"DomainEvent.equals"}},{"id":2906,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2907,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2639,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2638,"name":"DomainEvent.toString"}},{"id":2908,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2909,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2641,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2640,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2895]},{"title":"Properties","children":[2902,2900,2901]},{"title":"Methods","children":[2892,2903,2906,2908]}],"sources":[{"fileName":"packages/core/src/events/SceneTemplateDetected.ts","line":11,"character":13}],"extendedTypes":[{"type":"reference","target":2630,"name":"DomainEvent","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/SceneTemplateDetected","categories":[],"previousId":2872,"nextId":2910},{"id":2910,"name":"TaskFinished","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2911,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TaskFinished.ts","line":12,"character":11}],"signatures":[{"id":2912,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TaskFinished.ts","line":12,"character":11}],"parameters":[{"id":2913,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2910,"name":"TaskFinished","package":"@serenity-js/core"}}]},{"id":2914,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":13,"character":4}],"signatures":[{"id":2915,"name":"new TaskFinished","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":13,"character":4}],"parameters":[{"id":2916,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2917,"name":"activityId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2918,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"ActivityDetails","package":"@serenity-js/core"}},{"id":2919,"name":"outcome","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Outcome","package":"@serenity-js/core"}},{"id":2920,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2910,"name":"TaskFinished","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2304,"name":"ActivityFinished.constructor"}}],"inheritedFrom":{"type":"reference","target":2303,"name":"ActivityFinished.constructor"}},{"id":2921,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":14,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2310,"name":"ActivityFinished.sceneId"}},{"id":2922,"name":"activityId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":15,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2311,"name":"ActivityFinished.activityId"}},{"id":2923,"name":"details","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":16,"character":24}],"type":{"type":"reference","name":"ActivityDetails","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2312,"name":"ActivityFinished.details"}},{"id":2924,"name":"outcome","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":17,"character":24}],"type":{"type":"reference","name":"Outcome","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2313,"name":"ActivityFinished.outcome"}},{"id":2925,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2314,"name":"ActivityFinished.timestamp"}},{"id":2926,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2927,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2928,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2316,"name":"ActivityFinished.equals"}}],"inheritedFrom":{"type":"reference","target":2315,"name":"ActivityFinished.equals"}},{"id":2929,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2930,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2319,"name":"ActivityFinished.toString"}}],"inheritedFrom":{"type":"reference","target":2318,"name":"ActivityFinished.toString"}},{"id":2931,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2932,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2321,"name":"ActivityFinished.toJSON"}}],"inheritedFrom":{"type":"reference","target":2320,"name":"ActivityFinished.toJSON"}}],"groups":[{"title":"Constructors","children":[2914]},{"title":"Properties","children":[2921,2922,2923,2924,2925]},{"title":"Methods","children":[2911,2926,2929,2931]}],"sources":[{"fileName":"packages/core/src/events/TaskFinished.ts","line":11,"character":13}],"extendedTypes":[{"type":"reference","target":2302,"name":"ActivityFinished","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/TaskFinished","categories":[],"previousId":2891,"nextId":2933},{"id":2933,"name":"TaskStarts","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2934,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TaskStarts.ts","line":11,"character":11}],"signatures":[{"id":2935,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TaskStarts.ts","line":11,"character":11}],"parameters":[{"id":2936,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2933,"name":"TaskStarts","package":"@serenity-js/core"}}]},{"id":2937,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ActivityStarts.ts","line":13,"character":4}],"signatures":[{"id":2938,"name":"new TaskStarts","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ActivityStarts.ts","line":13,"character":4}],"parameters":[{"id":2939,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2940,"name":"activityId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2941,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"ActivityDetails","package":"@serenity-js/core"}},{"id":2942,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2933,"name":"TaskStarts","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2374,"name":"ActivityStarts.constructor"}}],"inheritedFrom":{"type":"reference","target":2373,"name":"ActivityStarts.constructor"}},{"id":2943,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityStarts.ts","line":14,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2379,"name":"ActivityStarts.sceneId"}},{"id":2944,"name":"activityId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityStarts.ts","line":15,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2380,"name":"ActivityStarts.activityId"}},{"id":2945,"name":"details","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityStarts.ts","line":16,"character":24}],"type":{"type":"reference","name":"ActivityDetails","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2381,"name":"ActivityStarts.details"}},{"id":2946,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2382,"name":"ActivityStarts.timestamp"}},{"id":2947,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2948,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2949,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2384,"name":"ActivityStarts.equals"}}],"inheritedFrom":{"type":"reference","target":2383,"name":"ActivityStarts.equals"}},{"id":2950,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2951,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2387,"name":"ActivityStarts.toString"}}],"inheritedFrom":{"type":"reference","target":2386,"name":"ActivityStarts.toString"}},{"id":2952,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2953,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2389,"name":"ActivityStarts.toJSON"}}],"inheritedFrom":{"type":"reference","target":2388,"name":"ActivityStarts.toJSON"}}],"groups":[{"title":"Constructors","children":[2937]},{"title":"Properties","children":[2943,2944,2945,2946]},{"title":"Methods","children":[2934,2947,2950,2952]}],"sources":[{"fileName":"packages/core/src/events/TaskStarts.ts","line":10,"character":13}],"extendedTypes":[{"type":"reference","target":2372,"name":"ActivityStarts","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/TaskStarts","categories":[],"previousId":2910,"nextId":2954},{"id":2954,"name":"TestRunFinished","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Emitted when all the test scenarios have finished running."}]},"children":[{"id":2955,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestRunFinished.ts","line":14,"character":11}],"signatures":[{"id":2956,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestRunFinished.ts","line":14,"character":11}],"parameters":[{"id":2957,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2954,"name":"TestRunFinished","package":"@serenity-js/core"}}]},{"id":2963,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2634,"name":"DomainEvent.timestamp"}},{"id":2958,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestRunFinished.ts","line":21,"character":4}],"signatures":[{"id":2959,"name":"new TestRunFinished","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestRunFinished.ts","line":21,"character":4}],"parameters":[{"id":2960,"name":"outcome","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Outcome","package":"@serenity-js/core"}},{"id":2961,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2954,"name":"TestRunFinished","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2962,"name":"outcome","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/TestRunFinished.ts","line":22,"character":24}],"type":{"type":"reference","name":"Outcome","package":"@serenity-js/core"}},{"id":2964,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2965,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2966,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2636,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2635,"name":"DomainEvent.equals"}},{"id":2967,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2968,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2639,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2638,"name":"DomainEvent.toString"}},{"id":2969,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2970,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2641,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2640,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2958]},{"title":"Properties","children":[2963,2962]},{"title":"Methods","children":[2955,2964,2967,2969]}],"sources":[{"fileName":"packages/core/src/events/TestRunFinished.ts","line":13,"character":13}],"extendedTypes":[{"type":"reference","target":2630,"name":"DomainEvent","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/TestRunFinished","categories":[],"previousId":2933,"nextId":2971},{"id":2971,"name":"TestRunFinishes","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Emitted when the last test in the test suite has finished running\\nand it\'s time for any last-minute reporting activities to take place."}]},"children":[{"id":2972,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestRunFinishes.ts","line":11,"character":11}],"signatures":[{"id":2973,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestRunFinishes.ts","line":11,"character":11}],"parameters":[{"id":2974,"name":"v","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":2971,"name":"TestRunFinishes","package":"@serenity-js/core"}}]},{"id":2978,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2634,"name":"DomainEvent.timestamp"}},{"id":2975,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestRunFinishes.ts","line":17,"character":4}],"signatures":[{"id":2976,"name":"new TestRunFinishes","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestRunFinishes.ts","line":17,"character":4}],"parameters":[{"id":2977,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2971,"name":"TestRunFinishes","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2979,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2980,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2981,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2636,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2635,"name":"DomainEvent.equals"}},{"id":2982,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2983,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2639,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2638,"name":"DomainEvent.toString"}},{"id":2984,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2985,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2641,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2640,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2975]},{"title":"Properties","children":[2978]},{"title":"Methods","children":[2972,2979,2982,2984]}],"sources":[{"fileName":"packages/core/src/events/TestRunFinishes.ts","line":10,"character":13}],"extendedTypes":[{"type":"reference","target":2630,"name":"DomainEvent","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/TestRunFinishes","categories":[],"previousId":2954,"nextId":3005},{"id":3005,"name":"TestRunStarts","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Emitted when the very first test is about to start"}]},"children":[{"id":3006,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestRunStarts.ts","line":10,"character":11}],"signatures":[{"id":3007,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestRunStarts.ts","line":10,"character":11}],"parameters":[{"id":3008,"name":"v","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":3005,"name":"TestRunStarts","package":"@serenity-js/core"}}]},{"id":3012,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2634,"name":"DomainEvent.timestamp"}},{"id":3009,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestRunStarts.ts","line":16,"character":4}],"signatures":[{"id":3010,"name":"new TestRunStarts","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestRunStarts.ts","line":16,"character":4}],"parameters":[{"id":3011,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":3005,"name":"TestRunStarts","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":3013,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":3014,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":3015,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2636,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2635,"name":"DomainEvent.equals"}},{"id":3016,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":3017,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2639,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2638,"name":"DomainEvent.toString"}},{"id":3018,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":3019,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2641,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2640,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[3009]},{"title":"Properties","children":[3012]},{"title":"Methods","children":[3006,3013,3016,3018]}],"sources":[{"fileName":"packages/core/src/events/TestRunStarts.ts","line":9,"character":13}],"extendedTypes":[{"type":"reference","target":2630,"name":"DomainEvent","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/TestRunStarts","categories":[],"previousId":2971,"nextId":2986},{"id":2986,"name":"TestRunnerDetected","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2987,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestRunnerDetected.ts","line":12,"character":18}],"signatures":[{"id":2988,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestRunnerDetected.ts","line":12,"character":18}],"parameters":[{"id":2989,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2986,"name":"TestRunnerDetected","package":"@serenity-js/core"}}]},{"id":2997,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2634,"name":"DomainEvent.timestamp"}},{"id":2990,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestRunnerDetected.ts","line":20,"character":4}],"signatures":[{"id":2991,"name":"new TestRunnerDetected","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestRunnerDetected.ts","line":20,"character":4}],"parameters":[{"id":2992,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2993,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Name","package":"@serenity-js/core"}},{"id":2994,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2986,"name":"TestRunnerDetected","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2995,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/TestRunnerDetected.ts","line":21,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2996,"name":"name","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/TestRunnerDetected.ts","line":22,"character":24}],"type":{"type":"reference","name":"Name","package":"@serenity-js/core"}},{"id":2998,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2999,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":3000,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2636,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2635,"name":"DomainEvent.equals"}},{"id":3001,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":3002,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2639,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2638,"name":"DomainEvent.toString"}},{"id":3003,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":3004,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2641,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2640,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2990]},{"title":"Properties","children":[2997,2995,2996]},{"title":"Methods","children":[2987,2998,3001,3003]}],"sources":[{"fileName":"packages/core/src/events/TestRunnerDetected.ts","line":11,"character":13}],"extendedTypes":[{"type":"reference","target":2630,"name":"DomainEvent","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/TestRunnerDetected","categories":[],"previousId":3005,"nextId":3020},{"id":3020,"name":"TestSuiteFinished","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":3021,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestSuiteFinished.ts","line":13,"character":11}],"signatures":[{"id":3022,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestSuiteFinished.ts","line":13,"character":11}],"parameters":[{"id":3023,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":3020,"name":"TestSuiteFinished","package":"@serenity-js/core"}}]},{"id":3031,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2634,"name":"DomainEvent.timestamp"}},{"id":3024,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestSuiteFinished.ts","line":21,"character":4}],"signatures":[{"id":3025,"name":"new TestSuiteFinished","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestSuiteFinished.ts","line":21,"character":4}],"parameters":[{"id":3026,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"TestSuiteDetails","package":"@serenity-js/core"}},{"id":3027,"name":"outcome","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Outcome","package":"@serenity-js/core"}},{"id":3028,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":3020,"name":"TestSuiteFinished","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":3029,"name":"details","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/TestSuiteFinished.ts","line":22,"character":24}],"type":{"type":"reference","name":"TestSuiteDetails","package":"@serenity-js/core"}},{"id":3030,"name":"outcome","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/TestSuiteFinished.ts","line":23,"character":24}],"type":{"type":"reference","name":"Outcome","package":"@serenity-js/core"}},{"id":3032,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":3033,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":3034,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2636,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2635,"name":"DomainEvent.equals"}},{"id":3035,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":3036,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2639,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2638,"name":"DomainEvent.toString"}},{"id":3037,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":3038,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2641,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2640,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[3024]},{"title":"Properties","children":[3031,3029,3030]},{"title":"Methods","children":[3021,3032,3035,3037]}],"sources":[{"fileName":"packages/core/src/events/TestSuiteFinished.ts","line":12,"character":13}],"extendedTypes":[{"type":"reference","target":2630,"name":"DomainEvent","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/TestSuiteFinished","categories":[],"previousId":2986,"nextId":3039},{"id":3039,"name":"TestSuiteStarts","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":3040,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestSuiteStarts.ts","line":12,"character":11}],"signatures":[{"id":3041,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestSuiteStarts.ts","line":12,"character":11}],"parameters":[{"id":3042,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":3039,"name":"TestSuiteStarts","package":"@serenity-js/core"}}]},{"id":3048,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2634,"name":"DomainEvent.timestamp"}},{"id":3043,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestSuiteStarts.ts","line":19,"character":4}],"signatures":[{"id":3044,"name":"new TestSuiteStarts","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestSuiteStarts.ts","line":19,"character":4}],"parameters":[{"id":3045,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"TestSuiteDetails","package":"@serenity-js/core"}},{"id":3046,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":3039,"name":"TestSuiteStarts","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":3047,"name":"details","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/TestSuiteStarts.ts","line":20,"character":24}],"type":{"type":"reference","name":"TestSuiteDetails","package":"@serenity-js/core"}},{"id":3049,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":3050,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":3051,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2636,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2635,"name":"DomainEvent.equals"}},{"id":3052,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":3053,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2639,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2638,"name":"DomainEvent.toString"}},{"id":3054,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":3055,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2641,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2640,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[3043]},{"title":"Properties","children":[3048,3047]},{"title":"Methods","children":[3040,3049,3052,3054]}],"sources":[{"fileName":"packages/core/src/events/TestSuiteStarts.ts","line":11,"character":13}],"extendedTypes":[{"type":"reference","target":2630,"name":"DomainEvent","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/TestSuiteStarts","categories":[],"previousId":3020,"nextId":2390},{"id":2390,"name":"ActorEntersStage","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Emitted when an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) is activated\\nas the result of invoking ["},{"kind":"code","text":"`actorCalled`"},{"kind":"text","text":"](/api/core/function/actorCalled/)."}]},"children":[{"id":2391,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/actor/ActorEntersStage.ts","line":15,"character":18}],"signatures":[{"id":2392,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/actor/ActorEntersStage.ts","line":15,"character":18}],"parameters":[{"id":2393,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2390,"name":"ActorEntersStage","package":"@serenity-js/core"}}]},{"id":2401,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2634,"name":"DomainEvent.timestamp"}},{"id":2394,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/actor/ActorEntersStage.ts","line":23,"character":4}],"signatures":[{"id":2395,"name":"new ActorEntersStage","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/actor/ActorEntersStage.ts","line":23,"character":4}],"parameters":[{"id":2396,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2397,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1637,"name":"SerialisedActor","package":"@serenity-js/core"}},{"id":2398,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2390,"name":"ActorEntersStage","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2399,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/actor/ActorEntersStage.ts","line":24,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2400,"name":"actor","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/actor/ActorEntersStage.ts","line":25,"character":24}],"type":{"type":"reference","target":1637,"name":"SerialisedActor","package":"@serenity-js/core"}},{"id":2402,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2403,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2404,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2636,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2635,"name":"DomainEvent.equals"}},{"id":2405,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2406,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2639,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2638,"name":"DomainEvent.toString"}},{"id":2407,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2408,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2641,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2640,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2394]},{"title":"Properties","children":[2401,2399,2400]},{"title":"Methods","children":[2391,2402,2405,2407]}],"sources":[{"fileName":"packages/core/src/events/actor/ActorEntersStage.ts","line":14,"character":13}],"extendedTypes":[{"type":"reference","target":2630,"name":"DomainEvent","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/ActorEntersStage","categories":[],"previousId":3039,"nextId":2409},{"id":2409,"name":"ActorStageExitAttempted","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Emitted when an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) is dismissed\\neither upon the ["},{"kind":"code","text":"`SceneFinishes`"},{"kind":"text","text":"](/api/core-events/class/SceneFinishes/) event\\nfor actors initialised within the scope of a test scenario,\\nor upon the ["},{"kind":"code","text":"`TestRunFinishes`"},{"kind":"text","text":"](/api/core-events/class/TestRunFinishes/) event\\nfor actors initialised within the scope of a test suite."}]},"children":[{"id":2410,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/actor/ActorStageExitAttempted.ts","line":18,"character":11}],"signatures":[{"id":2411,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/actor/ActorStageExitAttempted.ts","line":18,"character":11}],"parameters":[{"id":2412,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2409,"name":"ActorStageExitAttempted","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":2554,"name":"AsyncOperationAttempted.fromJSON"}}],"overwrites":{"type":"reference","target":2553,"name":"AsyncOperationAttempted.fromJSON"}},{"id":2419,"name":"name","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationAttempted.ts","line":22,"character":24}],"type":{"type":"reference","name":"Name","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2562,"name":"AsyncOperationAttempted.name"}},{"id":2420,"name":"description","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationAttempted.ts","line":23,"character":24}],"type":{"type":"reference","name":"Description","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2563,"name":"AsyncOperationAttempted.description"}},{"id":2421,"name":"correlationId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationAttempted.ts","line":24,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2564,"name":"AsyncOperationAttempted.correlationId"}},{"id":2422,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2565,"name":"AsyncOperationAttempted.timestamp"}},{"id":2413,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/actor/ActorStageExitAttempted.ts","line":26,"character":4}],"signatures":[{"id":2414,"name":"new ActorStageExitAttempted","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/actor/ActorStageExitAttempted.ts","line":26,"character":4}],"parameters":[{"id":2415,"name":"correlationId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2416,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Name","package":"@serenity-js/core"}},{"id":2417,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2409,"name":"ActorStageExitAttempted","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":2557,"name":"AsyncOperationAttempted.constructor"}}],"overwrites":{"type":"reference","target":2556,"name":"AsyncOperationAttempted.constructor"}},{"id":2418,"name":"actor","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/actor/ActorStageExitAttempted.ts","line":28,"character":24}],"type":{"type":"reference","name":"Name","package":"@serenity-js/core"}},{"id":2423,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2424,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2425,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2567,"name":"AsyncOperationAttempted.equals"}}],"inheritedFrom":{"type":"reference","target":2566,"name":"AsyncOperationAttempted.equals"}},{"id":2426,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2427,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2570,"name":"AsyncOperationAttempted.toString"}}],"inheritedFrom":{"type":"reference","target":2569,"name":"AsyncOperationAttempted.toString"}},{"id":2428,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2429,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2572,"name":"AsyncOperationAttempted.toJSON"}}],"inheritedFrom":{"type":"reference","target":2571,"name":"AsyncOperationAttempted.toJSON"}}],"groups":[{"title":"Constructors","children":[2413]},{"title":"Properties","children":[2419,2420,2421,2422,2418]},{"title":"Methods","children":[2410,2423,2426,2428]}],"sources":[{"fileName":"packages/core/src/events/actor/ActorStageExitAttempted.ts","line":17,"character":13}],"extendedTypes":[{"type":"reference","target":2552,"name":"AsyncOperationAttempted","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/ActorStageExitAttempted","categories":[],"previousId":2390,"nextId":2430},{"id":2430,"name":"ActorStageExitCompleted","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Emitted when an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) and its abilities\\nare correctly [released](/api/core/interface/Discardable/) either\\nupon the ["},{"kind":"code","text":"`SceneFinishes`"},{"kind":"text","text":"](/api/core-events/class/SceneFinishes/) event\\nfor actors initialised within the scope of a test scenario,\\nor upon the ["},{"kind":"code","text":"`TestRunFinishes`"},{"kind":"text","text":"](/api/core-events/class/TestRunFinishes/) event\\nfor actors initialised within the scope of a test suite."}]},"children":[{"id":2431,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/actor/ActorStageExitCompleted.ts","line":18,"character":11}],"signatures":[{"id":2432,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/actor/ActorStageExitCompleted.ts","line":18,"character":11}],"parameters":[{"id":2433,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2430,"name":"ActorStageExitCompleted","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":2575,"name":"AsyncOperationCompleted.fromJSON"}}],"overwrites":{"type":"reference","target":2574,"name":"AsyncOperationCompleted.fromJSON"}},{"id":2440,"name":"correlationId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationCompleted.ts","line":20,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2581,"name":"AsyncOperationCompleted.correlationId"}},{"id":2441,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2582,"name":"AsyncOperationCompleted.timestamp"}},{"id":2434,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/actor/ActorStageExitCompleted.ts","line":26,"character":4}],"signatures":[{"id":2435,"name":"new ActorStageExitCompleted","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/actor/ActorStageExitCompleted.ts","line":26,"character":4}],"parameters":[{"id":2436,"name":"correlationId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2437,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Name","package":"@serenity-js/core"}},{"id":2438,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2430,"name":"ActorStageExitCompleted","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":2578,"name":"AsyncOperationCompleted.constructor"}}],"overwrites":{"type":"reference","target":2577,"name":"AsyncOperationCompleted.constructor"}},{"id":2439,"name":"actor","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/actor/ActorStageExitCompleted.ts","line":28,"character":24}],"type":{"type":"reference","name":"Name","package":"@serenity-js/core"}},{"id":2442,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2443,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2444,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2584,"name":"AsyncOperationCompleted.equals"}}],"inheritedFrom":{"type":"reference","target":2583,"name":"AsyncOperationCompleted.equals"}},{"id":2445,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2446,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2587,"name":"AsyncOperationCompleted.toString"}}],"inheritedFrom":{"type":"reference","target":2586,"name":"AsyncOperationCompleted.toString"}},{"id":2447,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2448,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2589,"name":"AsyncOperationCompleted.toJSON"}}],"inheritedFrom":{"type":"reference","target":2588,"name":"AsyncOperationCompleted.toJSON"}}],"groups":[{"title":"Constructors","children":[2434]},{"title":"Properties","children":[2440,2441,2439]},{"title":"Methods","children":[2431,2442,2445,2447]}],"sources":[{"fileName":"packages/core/src/events/actor/ActorStageExitCompleted.ts","line":17,"character":13}],"extendedTypes":[{"type":"reference","target":2573,"name":"AsyncOperationCompleted","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/ActorStageExitCompleted","categories":[],"previousId":2409,"nextId":2449},{"id":2449,"name":"ActorStageExitFailed","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Emitted when [releasing](/api/core/interface/Discardable/) an\\n["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) or its abilities\\nresulted in an error either\\nupon the ["},{"kind":"code","text":"`SceneFinishes`"},{"kind":"text","text":"](/api/core-events/class/SceneFinishes/) event\\nfor actors initialised within the scope of a test scenario,\\nor upon the ["},{"kind":"code","text":"`TestRunFinishes`"},{"kind":"text","text":"](/api/core-events/class/TestRunFinishes/) event\\nfor actors initialised within the scope of a test suite."}]},"children":[{"id":2450,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/actor/ActorStageExitFailed.ts","line":20,"character":11}],"signatures":[{"id":2451,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/actor/ActorStageExitFailed.ts","line":20,"character":11}],"parameters":[{"id":2452,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2449,"name":"ActorStageExitFailed","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":2592,"name":"AsyncOperationFailed.fromJSON"}}],"overwrites":{"type":"reference","target":2591,"name":"AsyncOperationFailed.fromJSON"}},{"id":2453,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationFailed.ts","line":21,"character":4}],"signatures":[{"id":2454,"name":"new ActorStageExitFailed","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationFailed.ts","line":21,"character":4}],"parameters":[{"id":2455,"name":"error","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}},{"id":2456,"name":"correlationId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2457,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2449,"name":"ActorStageExitFailed","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2595,"name":"AsyncOperationFailed.constructor"}}],"inheritedFrom":{"type":"reference","target":2594,"name":"AsyncOperationFailed.constructor"}},{"id":2458,"name":"error","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationFailed.ts","line":22,"character":24}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"},"inheritedFrom":{"type":"reference","target":2599,"name":"AsyncOperationFailed.error"}},{"id":2459,"name":"correlationId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationFailed.ts","line":23,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2600,"name":"AsyncOperationFailed.correlationId"}},{"id":2460,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationFailed.ts","line":31,"character":4}],"signatures":[{"id":2461,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[{"fileName":"packages/core/src/events/AsyncOperationFailed.ts","line":31,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2602,"name":"AsyncOperationFailed.toJSON"}}],"inheritedFrom":{"type":"reference","target":2601,"name":"AsyncOperationFailed.toJSON"}},{"id":2462,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2603,"name":"AsyncOperationFailed.timestamp"}},{"id":2463,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2464,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2465,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2605,"name":"AsyncOperationFailed.equals"}}],"inheritedFrom":{"type":"reference","target":2604,"name":"AsyncOperationFailed.equals"}},{"id":2466,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2467,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2608,"name":"AsyncOperationFailed.toString"}}],"inheritedFrom":{"type":"reference","target":2607,"name":"AsyncOperationFailed.toString"}}],"groups":[{"title":"Constructors","children":[2453]},{"title":"Properties","children":[2458,2459,2462]},{"title":"Methods","children":[2450,2460,2463,2466]}],"sources":[{"fileName":"packages/core/src/events/actor/ActorStageExitFailed.ts","line":19,"character":13}],"extendedTypes":[{"type":"reference","target":2590,"name":"AsyncOperationFailed","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/ActorStageExitFailed","categories":[],"previousId":2430,"nextId":2468},{"id":2468,"name":"ActorStageExitStarts","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Emitted upon the ["},{"kind":"code","text":"`SceneFinishes`"},{"kind":"text","text":"](/api/core-events/class/SceneFinishes/) and\\n["},{"kind":"code","text":"`TestRunFinishes`"},{"kind":"text","text":"](/api/core-events/class/TestRunFinishes/) events\\nto notify the [stage crew members](/api/core/interface/StageCrewMember/)\\nabout the final state of the [actors](/api/core/class/Actor/) and their abilities\\nbefore they\'re [released](/api/core/interface/Discardable/)."}]},"children":[{"id":2469,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/actor/ActorStageExitStarts.ts","line":18,"character":11}],"signatures":[{"id":2470,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/actor/ActorStageExitStarts.ts","line":18,"character":11}],"parameters":[{"id":2471,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2468,"name":"ActorStageExitStarts","package":"@serenity-js/core"}}]},{"id":2479,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2634,"name":"DomainEvent.timestamp"}},{"id":2472,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/actor/ActorStageExitStarts.ts","line":26,"character":4}],"signatures":[{"id":2473,"name":"new ActorStageExitStarts","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/actor/ActorStageExitStarts.ts","line":26,"character":4}],"parameters":[{"id":2474,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2475,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1637,"name":"SerialisedActor","package":"@serenity-js/core"}},{"id":2476,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2468,"name":"ActorStageExitStarts","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2477,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/actor/ActorStageExitStarts.ts","line":27,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2478,"name":"actor","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/actor/ActorStageExitStarts.ts","line":28,"character":24}],"type":{"type":"reference","target":1637,"name":"SerialisedActor","package":"@serenity-js/core"}},{"id":2480,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2481,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2482,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2636,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2635,"name":"DomainEvent.equals"}},{"id":2483,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2484,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2639,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2638,"name":"DomainEvent.toString"}},{"id":2485,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2486,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2641,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2640,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2472]},{"title":"Properties","children":[2479,2477,2478]},{"title":"Methods","children":[2469,2480,2483,2485]}],"sources":[{"fileName":"packages/core/src/events/actor/ActorStageExitStarts.ts","line":17,"character":13}],"extendedTypes":[{"type":"reference","target":2630,"name":"DomainEvent","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/ActorStageExitStarts","categories":[],"previousId":2449,"nextId":2642}],"groups":[{"title":"Events","children":[2302,2322,2349,2372,2487,2512,2533,2552,2573,2590,2609,2630,2655,2674,2697,2718,2735,2756,2775,2796,2813,2834,2853,2872,2891,2910,2933,2954,2971,3005,2986,3020,3039,2390,2409,2430,2449,2468]},{"title":"Time","children":[2642]}],"sources":[{"fileName":"packages/core/src/events/index.ts","line":1,"character":0}],"permalink":"/api/core-events"},"urlSlug":"core-events"},{"index":true,"label":"index","reflection":{"id":1,"name":"@serenity-js/core","variant":"declaration","kind":2,"flags":{"isExternal":true},"children":[{"id":1951,"name":"Serenity","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":1955,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":38,"character":4}],"signatures":[{"id":1956,"name":"new Serenity","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":38,"character":4}],"parameters":[{"id":1957,"name":"clock","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1765,"name":"Clock","package":"@serenity-js/core"},"defaultValue":"..."},{"id":1958,"name":"cwd","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"},"defaultValue":"..."},{"id":1959,"name":"sceneIdFactory","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationIdFactory","package":"@serenity-js/core"},"defaultValue":"CorrelationId"}],"type":{"type":"reference","target":1951,"name":"Serenity","package":"@serenity-js/core"}}]},{"id":1967,"name":"configure","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":70,"character":4}],"signatures":[{"id":1968,"name":"configure","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures Serenity/JS. Every call to this function\\nreplaces the previous configuration provided,\\nso this function should be called exactly once\\nin your test suite."}]},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":70,"character":4}],"parameters":[{"id":1969,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":85,"name":"SerenityConfig","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":1970,"name":"engage","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":188,"character":4}],"signatures":[{"id":1971,"name":"engage","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Re-configures Serenity/JS with a new [cast](/api/core/class/Cast/) of [actors](/api/core/class/Actor/)\\nyou want to use in any subsequent calls to ["},{"kind":"code","text":"`actorCalled`"},{"kind":"text","text":"](/api/core/function/actorCalled/).\\n\\nFor your convenience, use ["},{"kind":"code","text":"`engage`"},{"kind":"text","text":"](/api/core/function/engage/) function instead,\\nwhich provides an alternative to calling ["},{"kind":"code","text":"`Actor.whoCan`"},{"kind":"text","text":"](/api/core/class/Actor/#whoCan) directly in your tests\\nand is typically invoked in a \\"before all\\" or \\"before each\\" hook of your test runner of choice.\\n\\nIf your implementation of the [cast](/api/core/class/Cast/) interface is stateless,\\nyou can invoke this function just once before your entire test suite is executed, see\\n- ["},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":"](https://jasmine.github.io/api/3.6/global.html#beforeAll) in Jasmine,\\n- ["},{"kind":"code","text":"`before`"},{"kind":"text","text":"](https://mochajs.org/#hooks) in Mocha,\\n- ["},{"kind":"code","text":"`BeforeAll`"},{"kind":"text","text":"](https://github.com/cucumber/cucumber-js/blob/master/docs/support_files/hooks.md#beforeall--afterall) in Cucumber.js\\n\\nHowever, if your [cast](/api/core/class/Cast/) holds state that you want to reset before each scenario,\\nit\'s better to invoke "},{"kind":"code","text":"`engage`"},{"kind":"text","text":" before each test using:\\n- ["},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":"](https://jasmine.github.io/api/3.6/global.html#beforeEach) in Jasmine\\n- ["},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":"](https://mochajs.org/#hooks) in Mocha,\\n- ["},{"kind":"code","text":"`Before`"},{"kind":"text","text":"](https://github.com/cucumber/cucumber-js/blob/master/docs/support_files/hooks.md#hooks) in Cucumber.js\\n\\n## Engaging a cast of actors\\n\\n"},{"kind":"code","text":"```ts\\nimport { Actor, Cast } from \'@serenity-js/core\';\\n\\nclass Actors implements Cast {\\n  prepare(actor: Actor) {\\n    return actor.whoCan(\\n      // ... abilities you\'d like the Actor to have\\n    );\\n  }\\n}\\n\\nengage(new Actors());\\n```"},{"kind":"text","text":"\\n\\n### Using with Mocha test runner\\n\\n"},{"kind":"code","text":"```ts\\nimport { beforeEach } from \'mocha\'\\n\\nbeforeEach(() => engage(new Actors()))\\n```"},{"kind":"text","text":"\\n\\n### Using with Jasmine test runner\\n\\n"},{"kind":"code","text":"```ts\\nimport \'jasmine\'\\n\\nbeforeEach(() => engage(new Actors()))\\n```"},{"kind":"text","text":"\\n\\n### Using with Cucumber.js test runner\\n\\n"},{"kind":"code","text":"```ts\\nimport { Before } from \'@cucumber/cucumber\'\\n\\nBefore(() => engage(new Actors()))\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`Cast`"},{"kind":"text","text":"](/api/core/class/Cast/)\\n- ["},{"kind":"code","text":"`engage`"},{"kind":"text","text":"](/api/core/function/engage/)"}]},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":188,"character":4}],"parameters":[{"id":1972,"name":"actors","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":2002,"name":"Cast","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":1973,"name":"theActorCalled","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":250,"character":4}],"signatures":[{"id":1974,"name":"theActorCalled","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates or retrieves an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\ncalled "},{"kind":"code","text":"`name`"},{"kind":"text","text":" if one has already been instantiated.\\n\\nFor your convenience, use ["},{"kind":"code","text":"`actorCalled`"},{"kind":"text","text":"](/api/core/function/actorCalled/) function instead.\\n\\n## Usage with Mocha\\n\\n"},{"kind":"code","text":"```typescript\\n  import { describe, it } from \'mocha\';\\n  import { actorCalled } from \'@serenity-js/core\';\\n\\n  describe(\'Feature\', () => {\\n\\n     it(\'should have some behaviour\', () =>\\n         actorCalled(\'James\').attemptsTo(\\n             // ... activities\\n         ))\\n  })\\n```"},{"kind":"text","text":"\\n\\n## Usage with Jasmine\\n\\n"},{"kind":"code","text":"```typescript\\n  import \'jasmine\';\\n  import { actorCalled } from \'@serenity-js/core\';\\n\\n  describe(\'Feature\', () => {\\n\\n     it(\'should have some behaviour\', () =>\\n         actorCalled(\'James\').attemptsTo(\\n             // ... activities\\n         ))\\n  })\\n```"},{"kind":"text","text":"\\n\\n## Usage with Cucumber\\n\\n"},{"kind":"code","text":"```typescript\\nimport { actorCalled } from \'@serenity-js/core\';\\nimport { Given } from \'@cucumber/cucumber\';\\n\\nGiven(/(.*?) is a registered user/, (name: string) =>\\n  actorCalled(name).attemptsTo(\\n    // ... activities\\n  ))\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`engage`"},{"kind":"text","text":"](/api/core/function/engage/)\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`Cast`"},{"kind":"text","text":"](/api/core/class/Cast/)\\n- ["},{"kind":"code","text":"`actorCalled`"},{"kind":"text","text":"](/api/core/function/actorCalled/)"}]},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":250,"character":4}],"parameters":[{"id":1975,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The name of the actor to instantiate or retrieve"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":655,"name":"Actor","package":"@serenity-js/core"}}]},{"id":1976,"name":"theActorInTheSpotlight","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":287,"character":4}],"signatures":[{"id":1977,"name":"theActorInTheSpotlight","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Retrieves an actor who was last instantiated or retrieved\\nusing ["},{"kind":"code","text":"`Serenity.theActorCalled`"},{"kind":"text","text":"](/api/core/class/Serenity/#theActorCalled).\\n\\nThis function is particularly useful when automating Cucumber scenarios.\\n\\nFor your convenience, use ["},{"kind":"code","text":"`actorInTheSpotlight`"},{"kind":"text","text":"](/api/core/function/actorInTheSpotlight/) function instead.\\n\\n## Usage with Cucumber\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\';\\nimport { Given, When } from \'@cucumber/cucumber\';\\n\\nGiven(/(.*?) is a registered user/, (name: string) =>\\n  actorCalled(name).attemptsTo(\\n    // ... activities\\n  ))\\n\\nWhen(/(?:he|she|they) browse their recent orders/, () =>\\n  actorInTheSpotlight().attemptsTo(\\n    // ... activities\\n  ))\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`engage`"},{"kind":"text","text":"](/api/core/function/engage/)\\n- ["},{"kind":"code","text":"`actorCalled`"},{"kind":"text","text":"](/api/core/function/actorCalled/)\\n- ["},{"kind":"code","text":"`actorInTheSpotlight`"},{"kind":"text","text":"](/api/core/function/actorInTheSpotlight/)\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`Cast`"},{"kind":"text","text":"](/api/core/class/Cast/)"}]},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":287,"character":4}],"type":{"type":"reference","target":655,"name":"Actor","package":"@serenity-js/core"}}]},{"id":1978,"name":"announce","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":291,"character":4}],"signatures":[{"id":1979,"name":"announce","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":291,"character":4}],"parameters":[{"id":1980,"name":"events","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":2630,"name":"DomainEvent","package":"@serenity-js/core"}}}],"type":{"type":"intrinsic","name":"void"},"implementationOf":{"type":"reference","target":2649,"name":"EmitsDomainEvents.announce"}}],"implementationOf":{"type":"reference","target":2648,"name":"EmitsDomainEvents.announce"}},{"id":1981,"name":"currentTime","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":295,"character":4}],"signatures":[{"id":1982,"name":"currentTime","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns current wall clock time."}]},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":295,"character":4}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"},"implementationOf":{"type":"reference","target":2654,"name":"EmitsDomainEvents.currentTime"}}],"implementationOf":{"type":"reference","target":2653,"name":"EmitsDomainEvents.currentTime"}},{"id":1983,"name":"assignNewSceneId","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":299,"character":4}],"signatures":[{"id":1984,"name":"assignNewSceneId","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":299,"character":4}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}]},{"id":1985,"name":"currentSceneId","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":303,"character":4}],"signatures":[{"id":1986,"name":"currentSceneId","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":303,"character":4}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"},"implementationOf":{"type":"reference","target":2644,"name":"EmitsDomainEvents.currentSceneId"}}],"implementationOf":{"type":"reference","target":2643,"name":"EmitsDomainEvents.currentSceneId"}},{"id":1987,"name":"assignNewActivityId","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":307,"character":4}],"signatures":[{"id":1988,"name":"assignNewActivityId","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":307,"character":4}],"parameters":[{"id":1989,"name":"activityDetails","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"ActivityDetails","package":"@serenity-js/core"}}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"},"implementationOf":{"type":"reference","target":2646,"name":"EmitsDomainEvents.assignNewActivityId"}}],"implementationOf":{"type":"reference","target":2645,"name":"EmitsDomainEvents.assignNewActivityId"}},{"id":1990,"name":"createError","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":311,"character":4}],"signatures":[{"id":1991,"name":"createError","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":311,"character":4}],"typeParameter":[{"id":1992,"name":"RE","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":367,"name":"RuntimeError","package":"@serenity-js/core"}}],"parameters":[{"id":1993,"name":"errorType","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":1994,"name":"__type","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":311,"character":52}],"signatures":[{"id":1995,"name":"new errorType","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":311,"character":52}],"parameters":[{"id":1996,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"reference","target":1992,"name":"RE","package":"@serenity-js/core","refersToTypeParameter":true}}]}}},{"id":1997,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":166,"name":"ErrorOptions","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1992,"name":"RE","package":"@serenity-js/core","refersToTypeParameter":true}}]},{"id":1998,"name":"waitForNextCue","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":318,"character":4}],"signatures":[{"id":1999,"name":"waitForNextCue","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@package","content":[]}]},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":318,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"implementationOf":{"type":"reference","target":2652,"name":"EmitsDomainEvents.waitForNextCue"}}],"implementationOf":{"type":"reference","target":2651,"name":"EmitsDomainEvents.waitForNextCue"}},{"id":2000,"name":"cwd","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":322,"character":4}],"signatures":[{"id":2001,"name":"cwd","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":322,"character":4}],"type":{"type":"reference","name":"Path","package":"@serenity-js/core"}}]}],"groups":[{"title":"Constructors","children":[1955]},{"title":"Methods","children":[1967,1970,1973,1976,1978,1981,1983,1985,1987,1990,1998,2000]}],"sources":[{"fileName":"packages/core/src/Serenity.ts","line":21,"character":13}],"implementedTypes":[{"type":"reference","target":2642,"name":"EmitsDomainEvents","package":"@serenity-js/core"}],"permalink":"/api/core/class/Serenity","categories":[],"previousId":508,"nextId":84},{"id":84,"name":"ClassDescription","variant":"declaration","kind":2097152,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"code","text":"`ClassDescription`"},{"kind":"text","text":" describes the Node module ID and optionally:\\n- a named export that you want to import\\n- a parameter that should be passed to the static "},{"kind":"code","text":"`fromJSON`"},{"kind":"text","text":" method if the imported type provides it.\\n\\n"},{"kind":"code","text":"`ClassDescription`"},{"kind":"text","text":" is used to describe the [stage crew members](/api/core/interface/StageCrewMember/) passed to ["},{"kind":"code","text":"`SerenityConfig`"},{"kind":"text","text":"](/api/core/class/SerenityConfig/).\\n\\nThe most basic class description is the name of a Node module that must provide a "},{"kind":"code","text":"`default`"},{"kind":"text","text":" export.\\nFor example, below definition would be interpreted as a request to import the "},{"kind":"code","text":"`default`"},{"kind":"text","text":" export from the "},{"kind":"code","text":"`@serenity-js/serenity-bdd`"},{"kind":"text","text":" module and instantiate it using its no-arg constructor:\\n"},{"kind":"code","text":"```typescript\\nimport { configure } from \'@serenity-js/core\'\\n\\nconfigure({\\n  crew: [\\n    `@serenity-js/serenity-bdd`\\n  ]\\n})\\n```"},{"kind":"text","text":"\\n\\nClass description can also include a named export to be imported. For example, below definition would be interpreted as a request\\nto import the "},{"kind":"code","text":"`SerenityBDDReporter`"},{"kind":"text","text":" type from "},{"kind":"code","text":"`@serenity-js/serenity-bdd`"},{"kind":"text","text":" and instantiate it using its no-arg constructor:\\n\\n"},{"kind":"code","text":"```typescript\\nimport { configure } from \'@serenity-js/core\'\\n\\nconfigure({\\n  crew: [\\n    `@serenity-js/serenity-bdd:SerenityBDDReporter`\\n  ]\\n})\\n```"},{"kind":"text","text":"\\n\\nHowever, not all types have no-arg constructors. In those cases, a type offering a "},{"kind":"code","text":"`static fromJSON(configParam)`"},{"kind":"text","text":" method can be described using a tuple\\nwhere the first item describes the Node module and optionally the class name, and the second item describes the "},{"kind":"code","text":"`configParam`"},{"kind":"text","text":".\\n\\n"},{"kind":"code","text":"```typescript\\nimport { configure } from \'@serenity-js/core\'\\n\\nconfigure({\\n  crew: [\\n    [ `@serenity-js/core:ArtifactArchiver`, { outputDirectory: \'./target/site/serenity\' } ]\\n  ]\\n})\\n```"},{"kind":"text","text":"\\n\\nNote that the class description could also describe a local Node module. This can be useful when you\'re writing a custom StageCrewMember implementation.\\nFor example, "},{"kind":"code","text":"`./my-reporter:MyReporter`"},{"kind":"text","text":" would be interpreted as a request to load the "},{"kind":"code","text":"`MyReporter`"},{"kind":"text","text":" type from "},{"kind":"code","text":"`./my-reporter`"},{"kind":"text","text":" file, located\\nrelative to the [working directory](https://nodejs.org/api/process.html#processcwd) of the current Node.js process."}]},"sources":[{"fileName":"packages/core/src/config/ClassDescription.ts","line":52,"character":12}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"tuple","elements":[{"type":"intrinsic","name":"string"}]},{"type":"tuple","elements":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}]}]},"permalink":"/api/core#ClassDescription","categories":[],"previousId":1951,"nextId":85},{"id":85,"name":"SerenityConfig","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"Describes the configuration object accepted by the ["},{"kind":"code","text":"`configure`"},{"kind":"text","text":"](/api/core/function/configure/) function.\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`configure`"},{"kind":"text","text":"](/api/core/function/configure/)\\n- ["},{"kind":"code","text":"`Cast`"},{"kind":"text","text":"](/api/core/class/Cast/)\\n- ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/)\\n- ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMemberBuilder/)\\n- ["},{"kind":"code","text":"`ClassDescription`"},{"kind":"text","text":"](/api/core/#ClassDescription)\\n- ["},{"kind":"code","text":"`Stage.waitForNextCue`"},{"kind":"text","text":"](/api/core/class/Stage/#waitForNextCue)"}]},"children":[{"id":86,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":87,"name":"new SerenityConfig","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":85,"name":"SerenityConfig","package":"@serenity-js/core"}}]},{"id":88,"name":"actors","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A [cast](/api/core/class/Cast/) of [actors](/api/core/class/Actor/) to be used when ["},{"kind":"code","text":"`actorCalled`"},{"kind":"text","text":"](/api/core/function/actorCalled/)\\nand ["},{"kind":"code","text":"`actorInTheSpotlight`"},{"kind":"text","text":"](/api/core/function/actorInTheSpotlight/) functions are called."}]},"sources":[{"fileName":"packages/core/src/config/SerenityConfig.ts","line":26,"character":4}],"type":{"type":"reference","target":2002,"name":"Cast","package":"@serenity-js/core"}},{"id":89,"name":"crew","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A list of [stage crew member builders](/api/core/interface/StageCrewMemberBuilder/) or [stage crew members](/api/core/interface/StageCrewMember/)\\nto be notified of [Serenity/JS domain events](/api/core-events/class/DomainEvent/) that occur during the scenario execution.\\n\\nNote that the "},{"kind":"code","text":"`crew`"},{"kind":"text","text":" can also be configured using [class descriptions](/api/core/#ClassDescription).\\nThis is useful when you need to load the configuration from a static "},{"kind":"code","text":"`json`"},{"kind":"text","text":" file, or when the test runner doesn\'t support\\nproviding class instances in configuration (e.g. Playwright Test)."}]},"sources":[{"fileName":"packages/core/src/config/SerenityConfig.ts","line":36,"character":4}],"type":{"type":"array","elementType":{"type":"union","types":[{"type":"reference","target":2241,"name":"StageCrewMember","package":"@serenity-js/core"},{"type":"reference","target":2248,"typeArguments":[{"type":"reference","target":2076,"name":"ListensToDomainEvents","package":"@serenity-js/core"}],"name":"StageCrewMemberBuilder","package":"@serenity-js/core"},{"type":"reference","target":84,"name":"ClassDescription","package":"@serenity-js/core"}]}}},{"id":90,"name":"cueTimeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The maximum amount of time between [SceneFinishes](/api/core-events/class/SceneFinishes/) and [SceneFinished](/api/core-events/class/SceneFinished/) events\\nthat Serenity/JS should wait for any post-scenario\\nasync operations to complete. Those include generating the screenshots,\\nsaving reports to disk, [dismissing the actors](/api/core/interface/Discardable/), and so on.\\n\\nDefaults to 5 seconds.\\n\\n**Please note** that this is not\\na scenario timeout, which should be configured in your test runner."}]},"sources":[{"fileName":"packages/core/src/config/SerenityConfig.ts","line":49,"character":4}],"type":{"type":"reference","target":1795,"name":"Duration","package":"@serenity-js/core"}},{"id":91,"name":"interactionTimeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The maximum default amount of time allowed for interactions such as ["},{"kind":"code","text":"`Wait.until`"},{"kind":"text","text":"](/api/core/class/Wait/#until)\\nto complete.\\n\\nDefaults to 5 seconds, can be overridden per interaction.\\n\\n**Please note** that this is not\\na scenario timeout, which should be configured in your test runner.\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Wait.until`"},{"kind":"text","text":"](/api/core/class/Wait/#until)"}]},"sources":[{"fileName":"packages/core/src/config/SerenityConfig.ts","line":63,"character":4}],"type":{"type":"reference","target":1795,"name":"Duration","package":"@serenity-js/core"}},{"id":92,"name":"diffFormatter","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"["},{"kind":"code","text":"`DiffFormatter`"},{"kind":"text","text":"](/api/core/interface/DiffFormatter/) that\\nshould be used by the ["},{"kind":"code","text":"`ErrorFactory`"},{"kind":"text","text":"](/api/core/class/ErrorFactory/) and the ability\\nto ["},{"kind":"code","text":"`RaiseErrors`"},{"kind":"text","text":"](/api/core/class/RaiseErrors/)\\nwhen generating diffs included in ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/) objects.\\n\\nBy default, Serenity/JS uses ["},{"kind":"code","text":"`NoOpDiffFormatter`"},{"kind":"text","text":"](/api/core/class/NoOpDiffFormatter/)"}]},"sources":[{"fileName":"packages/core/src/config/SerenityConfig.ts","line":73,"character":4}],"type":{"type":"reference","target":189,"name":"DiffFormatter","package":"@serenity-js/core"}},{"id":93,"name":"outputStream","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"An output stream to be injected into [stage crew member builders](/api/core/interface/StageCrewMemberBuilder/)\\n\\nDefaults to ["},{"kind":"code","text":"`process.stdout`"},{"kind":"text","text":"](https://nodejs.org/api/process.html#process_process_stdout)."}]},"sources":[{"fileName":"packages/core/src/config/SerenityConfig.ts","line":80,"character":4}],"type":{"type":"reference","target":2286,"name":"OutputStream","package":"@serenity-js/core"}}],"groups":[{"title":"Constructors","children":[86]},{"title":"Properties","children":[88,89,90,91,92,93]}],"sources":[{"fileName":"packages/core/src/config/SerenityConfig.ts","line":20,"character":22}],"permalink":"/api/core/class/SerenityConfig","categories":[],"previousId":84,"nextId":507},{"id":144,"name":"ErrorFactory","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Generates Serenity/JS ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/) objects based\\non the provided [configuration](/api/core/interface/ErrorOptions/)."}]},"children":[{"id":145,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/ErrorFactory.ts","line":21,"character":4}],"signatures":[{"id":146,"name":"new ErrorFactory","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/ErrorFactory.ts","line":21,"character":4}],"parameters":[{"id":147,"name":"formatter","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":189,"name":"DiffFormatter","package":"@serenity-js/core"},"defaultValue":"..."}],"type":{"type":"reference","target":144,"name":"ErrorFactory","package":"@serenity-js/core"}}]},{"id":149,"name":"create","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/ErrorFactory.ts","line":24,"character":4}],"signatures":[{"id":150,"name":"create","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/ErrorFactory.ts","line":24,"character":4}],"typeParameter":[{"id":151,"name":"RE","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":367,"name":"RuntimeError","package":"@serenity-js/core"}}],"parameters":[{"id":152,"name":"errorType","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":153,"name":"__type","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/ErrorFactory.ts","line":24,"character":47}],"signatures":[{"id":154,"name":"new errorType","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/ErrorFactory.ts","line":24,"character":47}],"parameters":[{"id":155,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"reference","target":151,"name":"RE","package":"@serenity-js/core","refersToTypeParameter":true}}]}}},{"id":156,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":166,"name":"ErrorOptions","package":"@serenity-js/core"}}],"type":{"type":"reference","target":151,"name":"RE","package":"@serenity-js/core","refersToTypeParameter":true}}]}],"groups":[{"title":"Constructors","children":[145]},{"title":"Methods","children":[149]}],"sources":[{"fileName":"packages/core/src/errors/ErrorFactory.ts","line":19,"character":13}],"permalink":"/api/core/class/ErrorFactory","categories":[],"previousId":1067,"nextId":166},{"id":166,"name":"ErrorOptions","variant":"declaration","kind":256,"flags":{"isExternal":true},"children":[{"id":167,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/ErrorOptions.ts","line":8,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":168,"name":"location","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/core/src/errors/ErrorOptions.ts","line":9,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"}},{"id":169,"name":"expectation","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/core/src/errors/ErrorOptions.ts","line":10,"character":4}],"type":{"type":"reference","target":1225,"name":"ExpectationDetails","package":"@serenity-js/core"}},{"id":170,"name":"diff","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/core/src/errors/ErrorOptions.ts","line":11,"character":4}],"type":{"type":"reflection","declaration":{"id":171,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":172,"name":"expected","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/ErrorOptions.ts","line":12,"character":8}],"type":{"type":"intrinsic","name":"unknown"}},{"id":173,"name":"actual","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/ErrorOptions.ts","line":13,"character":8}],"type":{"type":"intrinsic","name":"unknown"}}],"groups":[{"title":"Properties","children":[172,173]}],"sources":[{"fileName":"packages/core/src/errors/ErrorOptions.ts","line":11,"character":11}]}}},{"id":174,"name":"cause","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/core/src/errors/ErrorOptions.ts","line":15,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}],"groups":[{"title":"Properties","children":[167,168,169,170,174]}],"sources":[{"fileName":"packages/core/src/errors/ErrorOptions.ts","line":7,"character":17}],"permalink":"/api/core/interface/ErrorOptions","categories":[],"previousId":144,"nextId":94},{"id":94,"name":"ErrorSerialiser","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":99,"name":"serialise","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/ErrorSerialiser.ts","line":19,"character":11}],"signatures":[{"id":100,"name":"serialise","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/ErrorSerialiser.ts","line":19,"character":11}],"parameters":[{"id":101,"name":"error","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}],"type":{"type":"intrinsic","name":"string"}}]},{"id":102,"name":"registerErrorTypes","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/ErrorSerialiser.ts","line":36,"character":11}],"signatures":[{"id":103,"name":"registerErrorTypes","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/ErrorSerialiser.ts","line":36,"character":11}],"parameters":[{"id":104,"name":"types","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reflection","declaration":{"id":105,"name":"__type","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/ErrorSerialiser.ts","line":36,"character":46}],"signatures":[{"id":106,"name":"new types","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/ErrorSerialiser.ts","line":36,"character":46}],"parameters":[{"id":107,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}]}}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":108,"name":"deserialise","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/ErrorSerialiser.ts","line":44,"character":11}],"signatures":[{"id":109,"name":"deserialise","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/ErrorSerialiser.ts","line":44,"character":11}],"parameters":[{"id":110,"name":"serialised","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}]},{"id":133,"name":"deserialiseFromStackTrace","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/ErrorSerialiser.ts","line":78,"character":11}],"signatures":[{"id":134,"name":"deserialiseFromStackTrace","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/ErrorSerialiser.ts","line":78,"character":11}],"parameters":[{"id":135,"name":"stack","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}]},{"id":136,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":137,"name":"new ErrorSerialiser","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":94,"name":"ErrorSerialiser","package":"@serenity-js/core"}}]}],"groups":[{"title":"Constructors","children":[136]},{"title":"Methods","children":[99,102,108,133]}],"sources":[{"fileName":"packages/core/src/errors/ErrorSerialiser.ts","line":7,"character":13}],"permalink":"/api/core/class/ErrorSerialiser","categories":[],"previousId":166,"nextId":138},{"id":138,"name":"ErrorStackParser","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A thin wrapper around error-stack-parser module\\n\\n## Learn more\\n- [Error stack parser](https://www.npmjs.com/package/error-stack-parser)"}]},"children":[{"id":139,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":140,"name":"new ErrorStackParser","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":138,"name":"ErrorStackParser","package":"@serenity-js/core"}}]},{"id":141,"name":"parse","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/ErrorStackParser.ts","line":12,"character":4}],"signatures":[{"id":142,"name":"parse","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/ErrorStackParser.ts","line":12,"character":4}],"parameters":[{"id":143,"name":"error","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}],"type":{"type":"array","elementType":{"type":"reference","target":{"sourceFileName":"node_modules/stackframe/stackframe.d.ts","qualifiedName":"StackFrame"},"name":"StackFrame","package":"stackframe"}}}]}],"groups":[{"title":"Constructors","children":[139]},{"title":"Methods","children":[141]}],"sources":[{"fileName":"packages/core/src/errors/ErrorStackParser.ts","line":11,"character":13}],"permalink":"/api/core/class/ErrorStackParser","categories":[],"previousId":94,"nextId":472},{"id":472,"name":"RaiseErrors","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/) that enables an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to create a Serenity/JS ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/)\\nfrom within a custom ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/).\\n\\nThe stack trace of an error created this way includes the filesystem location pointing to where the interaction was invoked,\\nwhich makes debugging any failures easier.\\n\\n:::info Pro tip\\nThe ability to "},{"kind":"code","text":"`RaiseErrors`"},{"kind":"text","text":" is given to all Serenity/JS actors by default, so you don\'t need to configure it explicitly.\\n:::\\n\\n## Raising an error\\n\\n"},{"kind":"code","text":"```typescript\\nimport { Interaction, LogicError, RaiseErrors, the } from \'@serenity-js/core\'\\nimport isPathInside from \'is-path-inside\'\\nimport { unlink } from \'fs/promises\'\\n\\nconst RemoveFile = (pathToFile: string) =>\\n  Interaction.where(the`#actor removes a file at ${ pathToFile }`, async actor => {\\n\\n    if (! isPathInside(pathToFile, process.cwd())) {\\n\\n      throw RaiseErrors.as(actor).create(LogicError, {\\n        message: `Removing files outside the current working directory is not allowed`\\n        diff: {\\n          expected: process.cwd(),\\n          actual: pathToFile,\\n        }\\n      })\\n    }\\n\\n    await unlink(pathToFile);\\n  })\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`ErrorOptions`"},{"kind":"text","text":"](/api/core/interface/ErrorOptions/)\\n- ["},{"kind":"code","text":"`ErrorFactory`"},{"kind":"text","text":"](/api/core/class/ErrorFactory/)\\n- ["},{"kind":"code","text":"`AssertionError`"},{"kind":"text","text":"](/api/core/class/AssertionError/)\\n- ["},{"kind":"code","text":"`ConfigurationError`"},{"kind":"text","text":"](/api/core/class/ConfigurationError/)\\n- ["},{"kind":"code","text":"`LogicError`"},{"kind":"text","text":"](/api/core/class/LogicError/)\\n- ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/)\\n- ["},{"kind":"code","text":"`TestCompromisedError`"},{"kind":"text","text":"](/api/core/class/TestCompromisedError/)"}]},"children":[{"id":480,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/RaiseErrors.ts","line":54,"character":4}],"signatures":[{"id":481,"name":"new RaiseErrors","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/RaiseErrors.ts","line":54,"character":4}],"parameters":[{"id":482,"name":"stage","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":2158,"name":"Stage","package":"@serenity-js/core"}}],"type":{"type":"reference","target":472,"name":"RaiseErrors","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":524,"name":"Ability.constructor"}}],"overwrites":{"type":"reference","target":523,"name":"Ability.constructor"}},{"id":484,"name":"create","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/RaiseErrors.ts","line":58,"character":4}],"signatures":[{"id":485,"name":"create","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/RaiseErrors.ts","line":58,"character":4}],"typeParameter":[{"id":486,"name":"RE","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":367,"name":"RuntimeError","package":"@serenity-js/core"}}],"parameters":[{"id":487,"name":"errorType","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":488,"name":"__type","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/RaiseErrors.ts","line":58,"character":47}],"signatures":[{"id":489,"name":"new errorType","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/RaiseErrors.ts","line":58,"character":47}],"parameters":[{"id":490,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"reference","target":486,"name":"RE","package":"@serenity-js/core","refersToTypeParameter":true}}]}}},{"id":491,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":166,"name":"ErrorOptions","package":"@serenity-js/core"}}],"type":{"type":"reference","target":486,"name":"RE","package":"@serenity-js/core","refersToTypeParameter":true}}]},{"id":492,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Ability.ts","line":414,"character":4}],"signatures":[{"id":493,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a JSON representation of the ability and its current state, if available.\\nThe purpose of this method is to enable reporting the state of the ability in a human-readable format,\\nrather than to serialise and deserialise the ability itself."}]},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Ability.ts","line":414,"character":4}],"type":{"type":"reference","target":614,"name":"SerialisedAbility","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":526,"name":"Ability.toJSON"}}],"inheritedFrom":{"type":"reference","target":525,"name":"Ability.toJSON"}},{"id":494,"name":"abilityType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Ability.ts","line":461,"character":4}],"signatures":[{"id":495,"name":"abilityType","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the most abstract type of this Ability instance,\\nspecifically the first class in the inheritance hierarchy that directly extends the "},{"kind":"code","text":"`Ability`"},{"kind":"text","text":" class.\\n\\n"},{"kind":"code","text":"```ts\\nimport { Ability } from \'@serenity-js/core\';\\n\\nclass MyAbility extends Ability {}\\nclass MySpecialisedAbility extends MyAbility {}\\n\\nnew MyAbility().abilityType();            // returns MyAbility\\nnew MySpecialisedAbility().abilityType(); // returns MyAbility\\n```"}]},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Ability.ts","line":461,"character":4}],"type":{"type":"reference","target":529,"typeArguments":[{"type":"reference","target":508,"name":"Ability","package":"@serenity-js/core"}],"name":"AbilityType","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":528,"name":"Ability.abilityType"}}],"inheritedFrom":{"type":"reference","target":527,"name":"Ability.abilityType"}}],"groups":[{"title":"Constructors","children":[480]},{"title":"Methods","children":[484,492,494]}],"sources":[{"fileName":"packages/core/src/errors/RaiseErrors.ts","line":53,"character":13}],"extendedTypes":[{"type":"reference","target":508,"name":"Ability","package":"@serenity-js/core"}],"permalink":"/api/core/class/RaiseErrors","categories":[],"previousId":138,"nextId":175},{"id":175,"name":"AnsiDiffFormatter","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A ["},{"kind":"code","text":"`DiffFormatter`"},{"kind":"text","text":"](/api/core/interface/DiffFormatter/) that uses [ANSI escape codes](https://en.wikipedia.org/wiki/ANSI_escape_code)\\nto format the output."}]},"children":[{"id":176,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/diff/AnsiDiffFormatter.ts","line":27,"character":4}],"signatures":[{"id":177,"name":"new AnsiDiffFormatter","variant":"signature","kind":16384,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates an "},{"kind":"code","text":"`AnsiDiffFormatter`"},{"kind":"text","text":", configured with colour support options for [Chalk](https://github.com/chalk/chalk).\\nWhen no "},{"kind":"code","text":"`chalkOptions`"},{"kind":"text","text":" object is provided, Chalk will auto-detect colour support automatically based on the execution environment.\\n\\nAvailable colour support levels:\\n- "},{"kind":"code","text":"`0`"},{"kind":"text","text":" - All colours disabled.\\n- "},{"kind":"code","text":"`1`"},{"kind":"text","text":" - Basic 16 colours support.\\n- "},{"kind":"code","text":"`2`"},{"kind":"text","text":" - ANSI 256 colours support.\\n- "},{"kind":"code","text":"`3`"},{"kind":"text","text":" - Truecolor - 16 million colours support."}]},"sources":[{"fileName":"packages/core/src/errors/diff/AnsiDiffFormatter.ts","line":27,"character":4}],"parameters":[{"id":178,"name":"chalkOptions","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/chalk/index.d.ts","qualifiedName":"chalk.Options"},"name":"Options","package":"chalk","qualifiedName":"chalk.Options"}}],"type":{"type":"reference","target":175,"name":"AnsiDiffFormatter","package":"@serenity-js/core"}}]},{"id":180,"name":"expected","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/diff/AnsiDiffFormatter.ts","line":31,"character":4}],"signatures":[{"id":181,"name":"expected","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/diff/AnsiDiffFormatter.ts","line":31,"character":4}],"parameters":[{"id":182,"name":"line","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"},"implementationOf":{"type":"reference","target":191,"name":"DiffFormatter.expected"}}],"implementationOf":{"type":"reference","target":190,"name":"DiffFormatter.expected"}},{"id":183,"name":"received","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/diff/AnsiDiffFormatter.ts","line":35,"character":4}],"signatures":[{"id":184,"name":"received","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/diff/AnsiDiffFormatter.ts","line":35,"character":4}],"parameters":[{"id":185,"name":"line","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"},"implementationOf":{"type":"reference","target":194,"name":"DiffFormatter.received"}}],"implementationOf":{"type":"reference","target":193,"name":"DiffFormatter.received"}},{"id":186,"name":"unchanged","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/diff/AnsiDiffFormatter.ts","line":39,"character":4}],"signatures":[{"id":187,"name":"unchanged","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/diff/AnsiDiffFormatter.ts","line":39,"character":4}],"parameters":[{"id":188,"name":"line","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"},"implementationOf":{"type":"reference","target":197,"name":"DiffFormatter.unchanged"}}],"implementationOf":{"type":"reference","target":196,"name":"DiffFormatter.unchanged"}}],"groups":[{"title":"Constructors","children":[176]},{"title":"Methods","children":[180,183,186]}],"sources":[{"fileName":"packages/core/src/errors/diff/AnsiDiffFormatter.ts","line":12,"character":13}],"implementedTypes":[{"type":"reference","target":189,"name":"DiffFormatter","package":"@serenity-js/core"}],"permalink":"/api/core/class/AnsiDiffFormatter","categories":[],"previousId":472,"nextId":189},{"id":189,"name":"DiffFormatter","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Formats text representing expected, received, and unchanged lines of a diff\\nproduced by the ["},{"kind":"code","text":"`ErrorFactory`"},{"kind":"text","text":"](/api/core/class/ErrorFactory/), so that they can be presented to a developer\\nin a visually distinctive way."}]},"children":[{"id":190,"name":"expected","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/diff/DiffFormatter.ts","line":9,"character":4}],"signatures":[{"id":191,"name":"expected","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/diff/DiffFormatter.ts","line":9,"character":4}],"parameters":[{"id":192,"name":"line","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}]},{"id":193,"name":"received","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/diff/DiffFormatter.ts","line":10,"character":4}],"signatures":[{"id":194,"name":"received","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/diff/DiffFormatter.ts","line":10,"character":4}],"parameters":[{"id":195,"name":"line","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}]},{"id":196,"name":"unchanged","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/diff/DiffFormatter.ts","line":11,"character":4}],"signatures":[{"id":197,"name":"unchanged","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/diff/DiffFormatter.ts","line":11,"character":4}],"parameters":[{"id":198,"name":"line","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}]}],"groups":[{"title":"Methods","children":[190,193,196]}],"sources":[{"fileName":"packages/core/src/errors/diff/DiffFormatter.ts","line":8,"character":17}],"implementedBy":[{"type":"reference","target":175,"name":"AnsiDiffFormatter"},{"type":"reference","target":199,"name":"NoOpDiffFormatter"}],"permalink":"/api/core/interface/DiffFormatter","categories":[],"previousId":175,"nextId":199},{"id":199,"name":"NoOpDiffFormatter","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A no-op ["},{"kind":"code","text":"`DiffFormatter`"},{"kind":"text","text":"](/api/core/interface/DiffFormatter/) that produces output identical to input."}]},"children":[{"id":200,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":201,"name":"new NoOpDiffFormatter","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":199,"name":"NoOpDiffFormatter","package":"@serenity-js/core"}}]},{"id":202,"name":"expected","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/diff/NoOpDiffFormatter.ts","line":9,"character":4}],"signatures":[{"id":203,"name":"expected","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/diff/NoOpDiffFormatter.ts","line":9,"character":4}],"parameters":[{"id":204,"name":"line","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"},"implementationOf":{"type":"reference","target":191,"name":"DiffFormatter.expected"}}],"implementationOf":{"type":"reference","target":190,"name":"DiffFormatter.expected"}},{"id":205,"name":"received","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/diff/NoOpDiffFormatter.ts","line":13,"character":4}],"signatures":[{"id":206,"name":"received","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/diff/NoOpDiffFormatter.ts","line":13,"character":4}],"parameters":[{"id":207,"name":"line","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"},"implementationOf":{"type":"reference","target":194,"name":"DiffFormatter.received"}}],"implementationOf":{"type":"reference","target":193,"name":"DiffFormatter.received"}},{"id":208,"name":"unchanged","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/diff/NoOpDiffFormatter.ts","line":17,"character":4}],"signatures":[{"id":209,"name":"unchanged","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/diff/NoOpDiffFormatter.ts","line":17,"character":4}],"parameters":[{"id":210,"name":"line","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"},"implementationOf":{"type":"reference","target":197,"name":"DiffFormatter.unchanged"}}],"implementationOf":{"type":"reference","target":196,"name":"DiffFormatter.unchanged"}}],"groups":[{"title":"Constructors","children":[200]},{"title":"Methods","children":[202,205,208]}],"sources":[{"fileName":"packages/core/src/errors/diff/NoOpDiffFormatter.ts","line":8,"character":13}],"implementedTypes":[{"type":"reference","target":189,"name":"DiffFormatter","package":"@serenity-js/core"}],"permalink":"/api/core/class/NoOpDiffFormatter","categories":[],"previousId":189,"nextId":211},{"id":211,"name":"AssertionError","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Thrown to indicate that an assertion has failed."}]},"children":[{"id":212,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/AssertionError.ts","line":13,"character":11}],"signatures":[{"id":213,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/AssertionError.ts","line":13,"character":11}],"parameters":[{"id":214,"name":"serialised","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":211,"name":"AssertionError","package":"@serenity-js/core"}}]},{"id":225,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/AssertionError.ts","line":28,"character":4}],"signatures":[{"id":226,"name":"new AssertionError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/AssertionError.ts","line":28,"character":4}],"parameters":[{"id":227,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error and the difference between the expected and actual values"}]},"type":{"type":"intrinsic","name":"string"}},{"id":228,"name":"cause","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/), if any"}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}],"type":{"type":"reference","target":211,"name":"AssertionError","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"RuntimeError.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"RuntimeError.constructor"}},{"id":229,"name":"cause","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isOptional":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/), if any"}]},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":78,"character":24}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"},"inheritedFrom":{"type":"reference","target":386,"name":"RuntimeError.cause"}},{"id":230,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":103,"character":4}],"signatures":[{"id":231,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":103,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":388,"name":"RuntimeError.toString"}}],"inheritedFrom":{"type":"reference","target":387,"name":"RuntimeError.toString"}},{"id":232,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":107,"character":4}],"signatures":[{"id":233,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":107,"character":4}],"type":{"type":"intrinsic","name":"object"},"inheritedFrom":{"type":"reference","target":390,"name":"RuntimeError.toJSON"}}],"inheritedFrom":{"type":"reference","target":389,"name":"RuntimeError.toJSON"}},{"id":234,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":391,"name":"RuntimeError.name"}},{"id":235,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":392,"name":"RuntimeError.message"}},{"id":236,"name":"stack","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":393,"name":"RuntimeError.stack"}}],"groups":[{"title":"Constructors","children":[225]},{"title":"Properties","children":[229,234,235,236]},{"title":"Methods","children":[212,230,232]}],"sources":[{"fileName":"packages/core/src/errors/model/AssertionError.ts","line":11,"character":13}],"extendedTypes":[{"type":"reference","target":367,"name":"RuntimeError","package":"@serenity-js/core"}],"permalink":"/api/core/class/AssertionError","categories":[],"previousId":199,"nextId":237},{"id":237,"name":"ConfigurationError","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Thrown to indicate that a test framework or test suite configuration error occurred."}]},"children":[{"id":238,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/ConfigurationError.ts","line":13,"character":11}],"signatures":[{"id":239,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/ConfigurationError.ts","line":13,"character":11}],"parameters":[{"id":240,"name":"serialised","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":237,"name":"ConfigurationError","package":"@serenity-js/core"}}]},{"id":251,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/ConfigurationError.ts","line":28,"character":4}],"signatures":[{"id":252,"name":"new ConfigurationError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/ConfigurationError.ts","line":28,"character":4}],"parameters":[{"id":253,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"type":{"type":"intrinsic","name":"string"}},{"id":254,"name":"cause","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/), if any"}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}],"type":{"type":"reference","target":237,"name":"ConfigurationError","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"RuntimeError.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"RuntimeError.constructor"}},{"id":255,"name":"cause","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isOptional":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/), if any"}]},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":78,"character":24}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"},"inheritedFrom":{"type":"reference","target":386,"name":"RuntimeError.cause"}},{"id":256,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":103,"character":4}],"signatures":[{"id":257,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":103,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":388,"name":"RuntimeError.toString"}}],"inheritedFrom":{"type":"reference","target":387,"name":"RuntimeError.toString"}},{"id":258,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":107,"character":4}],"signatures":[{"id":259,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":107,"character":4}],"type":{"type":"intrinsic","name":"object"},"inheritedFrom":{"type":"reference","target":390,"name":"RuntimeError.toJSON"}}],"inheritedFrom":{"type":"reference","target":389,"name":"RuntimeError.toJSON"}},{"id":260,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":391,"name":"RuntimeError.name"}},{"id":261,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":392,"name":"RuntimeError.message"}},{"id":262,"name":"stack","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":393,"name":"RuntimeError.stack"}}],"groups":[{"title":"Constructors","children":[251]},{"title":"Properties","children":[255,260,261,262]},{"title":"Methods","children":[238,256,258]}],"sources":[{"fileName":"packages/core/src/errors/model/ConfigurationError.ts","line":11,"character":13}],"extendedTypes":[{"type":"reference","target":367,"name":"RuntimeError","package":"@serenity-js/core"}],"permalink":"/api/core/class/ConfigurationError","categories":[],"previousId":211,"nextId":263},{"id":263,"name":"ImplementationPendingError","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Thrown to indicate that the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) attempted to perform\\na ["},{"kind":"code","text":"`Task`"},{"kind":"text","text":"](/api/core/class/Task/) or ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/) that hasn\'t been implemented yet.\\n\\n## A pending Task\\n\\n"},{"kind":"code","text":"```ts\\nimport { Task } from \'@serenity-js/core\'\\n\\n// A pending Task is one that encapsulates no other activities\\nconst Authenticate = () =>\\n  Task.where(`#actor authenticates with the service up a test database` )\\n```"},{"kind":"text","text":"\\n\\n## A pending Interaction\\n\\n"},{"kind":"code","text":"```ts\\nimport { Interaction } from \'@serenity-js/core\'\\n\\n// A pending Interaction is one that doesn\'t perform any action\\nconst DoubleClick = () =>\\n  Interaction.where(`#actor double-clicks`)\\n```"}]},"children":[{"id":264,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/ImplementationPendingError.ts","line":34,"character":11}],"signatures":[{"id":265,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/ImplementationPendingError.ts","line":34,"character":11}],"parameters":[{"id":266,"name":"serialised","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":263,"name":"ImplementationPendingError","package":"@serenity-js/core"}}]},{"id":277,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/ImplementationPendingError.ts","line":49,"character":4}],"signatures":[{"id":278,"name":"new ImplementationPendingError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/ImplementationPendingError.ts","line":49,"character":4}],"parameters":[{"id":279,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"type":{"type":"intrinsic","name":"string"}},{"id":280,"name":"cause","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/), if any"}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}],"type":{"type":"reference","target":263,"name":"ImplementationPendingError","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"RuntimeError.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"RuntimeError.constructor"}},{"id":281,"name":"cause","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isOptional":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/), if any"}]},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":78,"character":24}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"},"inheritedFrom":{"type":"reference","target":386,"name":"RuntimeError.cause"}},{"id":282,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":103,"character":4}],"signatures":[{"id":283,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":103,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":388,"name":"RuntimeError.toString"}}],"inheritedFrom":{"type":"reference","target":387,"name":"RuntimeError.toString"}},{"id":284,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":107,"character":4}],"signatures":[{"id":285,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":107,"character":4}],"type":{"type":"intrinsic","name":"object"},"inheritedFrom":{"type":"reference","target":390,"name":"RuntimeError.toJSON"}}],"inheritedFrom":{"type":"reference","target":389,"name":"RuntimeError.toJSON"}},{"id":286,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":391,"name":"RuntimeError.name"}},{"id":287,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":392,"name":"RuntimeError.message"}},{"id":288,"name":"stack","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":393,"name":"RuntimeError.stack"}}],"groups":[{"title":"Constructors","children":[277]},{"title":"Properties","children":[281,286,287,288]},{"title":"Methods","children":[264,282,284]}],"sources":[{"fileName":"packages/core/src/errors/model/ImplementationPendingError.ts","line":32,"character":13}],"extendedTypes":[{"type":"reference","target":367,"name":"RuntimeError","package":"@serenity-js/core"}],"permalink":"/api/core/class/ImplementationPendingError","categories":[],"previousId":237,"nextId":289},{"id":289,"name":"ListItemNotFoundError","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Thrown to indicate that an ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/), a ["},{"kind":"code","text":"`Task`"},{"kind":"text","text":"](/api/core/class/Task/) or a test scenario\\ncan\'t be executed due to no items are found in a list.\\n\\nFor example, it\'s not possible to get the first() or the last() item of a list\\nif the list is empty."}]},"children":[{"id":290,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/ListItemNotFoundError.ts","line":17,"character":11}],"signatures":[{"id":291,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/ListItemNotFoundError.ts","line":17,"character":11}],"parameters":[{"id":292,"name":"serialised","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":289,"name":"ListItemNotFoundError","package":"@serenity-js/core"}}]},{"id":303,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/ListItemNotFoundError.ts","line":32,"character":4}],"signatures":[{"id":304,"name":"new ListItemNotFoundError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/ListItemNotFoundError.ts","line":32,"character":4}],"parameters":[{"id":305,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"type":{"type":"intrinsic","name":"string"}},{"id":306,"name":"cause","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this ["},{"kind":"code","text":"`ListItemNotFoundError`"},{"kind":"text","text":"](/api/core/class/ListItemNotFoundError/), if any"}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}],"type":{"type":"reference","target":289,"name":"ListItemNotFoundError","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"RuntimeError.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"RuntimeError.constructor"}},{"id":307,"name":"cause","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isOptional":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/), if any"}]},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":78,"character":24}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"},"inheritedFrom":{"type":"reference","target":386,"name":"RuntimeError.cause"}},{"id":308,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":103,"character":4}],"signatures":[{"id":309,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":103,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":388,"name":"RuntimeError.toString"}}],"inheritedFrom":{"type":"reference","target":387,"name":"RuntimeError.toString"}},{"id":310,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":107,"character":4}],"signatures":[{"id":311,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":107,"character":4}],"type":{"type":"intrinsic","name":"object"},"inheritedFrom":{"type":"reference","target":390,"name":"RuntimeError.toJSON"}}],"inheritedFrom":{"type":"reference","target":389,"name":"RuntimeError.toJSON"}},{"id":312,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":391,"name":"RuntimeError.name"}},{"id":313,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":392,"name":"RuntimeError.message"}},{"id":314,"name":"stack","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":393,"name":"RuntimeError.stack"}}],"groups":[{"title":"Constructors","children":[303]},{"title":"Properties","children":[307,312,313,314]},{"title":"Methods","children":[290,308,310]}],"sources":[{"fileName":"packages/core/src/errors/model/ListItemNotFoundError.ts","line":15,"character":13}],"extendedTypes":[{"type":"reference","target":367,"name":"RuntimeError","package":"@serenity-js/core"}],"permalink":"/api/core/class/ListItemNotFoundError","categories":[],"previousId":263,"nextId":315},{"id":315,"name":"LogicError","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Thrown to indicate that an ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/), a ["},{"kind":"code","text":"`Task`"},{"kind":"text","text":"](/api/core/class/Task/) or a test scenario\\ncan\'t be executed due to a logical error.\\n\\nFor example, it\'s not possible to assert on the last HTTP Response if the request\\nhasn\'t been performed yet."}]},"children":[{"id":316,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/LogicError.ts","line":17,"character":11}],"signatures":[{"id":317,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/LogicError.ts","line":17,"character":11}],"parameters":[{"id":318,"name":"serialised","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":315,"name":"LogicError","package":"@serenity-js/core"}}]},{"id":329,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/LogicError.ts","line":32,"character":4}],"signatures":[{"id":330,"name":"new LogicError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/LogicError.ts","line":32,"character":4}],"parameters":[{"id":331,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"type":{"type":"intrinsic","name":"string"}},{"id":332,"name":"cause","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/), if any"}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}],"type":{"type":"reference","target":315,"name":"LogicError","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"RuntimeError.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"RuntimeError.constructor"}},{"id":333,"name":"cause","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isOptional":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/), if any"}]},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":78,"character":24}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"},"inheritedFrom":{"type":"reference","target":386,"name":"RuntimeError.cause"}},{"id":334,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":103,"character":4}],"signatures":[{"id":335,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":103,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":388,"name":"RuntimeError.toString"}}],"inheritedFrom":{"type":"reference","target":387,"name":"RuntimeError.toString"}},{"id":336,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":107,"character":4}],"signatures":[{"id":337,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":107,"character":4}],"type":{"type":"intrinsic","name":"object"},"inheritedFrom":{"type":"reference","target":390,"name":"RuntimeError.toJSON"}}],"inheritedFrom":{"type":"reference","target":389,"name":"RuntimeError.toJSON"}},{"id":338,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":391,"name":"RuntimeError.name"}},{"id":339,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":392,"name":"RuntimeError.message"}},{"id":340,"name":"stack","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":393,"name":"RuntimeError.stack"}}],"groups":[{"title":"Constructors","children":[329]},{"title":"Properties","children":[333,338,339,340]},{"title":"Methods","children":[316,334,336]}],"sources":[{"fileName":"packages/core/src/errors/model/LogicError.ts","line":15,"character":13}],"extendedTypes":[{"type":"reference","target":367,"name":"RuntimeError","package":"@serenity-js/core"}],"permalink":"/api/core/class/LogicError","categories":[],"previousId":289,"nextId":341},{"id":341,"name":"OperationInterruptedError","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Thrown to indicate that a [scheduled operation](/api/core/class/Scheduler/)\\nhas been stopped before it was completed."}]},"children":[{"id":342,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/OperationInterruptedError.ts","line":14,"character":11}],"signatures":[{"id":343,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/OperationInterruptedError.ts","line":14,"character":11}],"parameters":[{"id":344,"name":"serialised","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":341,"name":"OperationInterruptedError","package":"@serenity-js/core"}}]},{"id":355,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/OperationInterruptedError.ts","line":32,"character":4}],"signatures":[{"id":356,"name":"new OperationInterruptedError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/OperationInterruptedError.ts","line":32,"character":4}],"parameters":[{"id":357,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"type":{"type":"intrinsic","name":"string"}},{"id":358,"name":"cause","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/), if any"}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}],"type":{"type":"reference","target":341,"name":"OperationInterruptedError","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"RuntimeError.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"RuntimeError.constructor"}},{"id":359,"name":"cause","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isOptional":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/), if any"}]},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":78,"character":24}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"},"inheritedFrom":{"type":"reference","target":386,"name":"RuntimeError.cause"}},{"id":360,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":103,"character":4}],"signatures":[{"id":361,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":103,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":388,"name":"RuntimeError.toString"}}],"inheritedFrom":{"type":"reference","target":387,"name":"RuntimeError.toString"}},{"id":362,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":107,"character":4}],"signatures":[{"id":363,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":107,"character":4}],"type":{"type":"intrinsic","name":"object"},"inheritedFrom":{"type":"reference","target":390,"name":"RuntimeError.toJSON"}}],"inheritedFrom":{"type":"reference","target":389,"name":"RuntimeError.toJSON"}},{"id":364,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":391,"name":"RuntimeError.name"}},{"id":365,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":392,"name":"RuntimeError.message"}},{"id":366,"name":"stack","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":393,"name":"RuntimeError.stack"}}],"groups":[{"title":"Constructors","children":[355]},{"title":"Properties","children":[359,364,365,366]},{"title":"Methods","children":[342,360,362]}],"sources":[{"fileName":"packages/core/src/errors/model/OperationInterruptedError.ts","line":12,"character":13}],"extendedTypes":[{"type":"reference","target":367,"name":"RuntimeError","package":"@serenity-js/core"}],"permalink":"/api/core/class/OperationInterruptedError","categories":[],"previousId":315,"nextId":367},{"id":367,"name":"RuntimeError","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"Base class for custom errors that may occur during execution of a test scenario.\\n\\n## Defining a custom error\\n\\n"},{"kind":"code","text":"```ts\\nimport { RuntimeError } from \'@serenity-js/core\'\\n\\nexport class CustomError extends RuntimeError {\\n  constructor(message: string, cause?: Error) {\\n      super(CustomError, message, cause);\\n  }\\n}\\n```"},{"kind":"text","text":"\\n\\n## Wrapping a sync error\\n\\n"},{"kind":"code","text":"```ts\\ntry {\\n    operationThatMightThrowAnError();\\n} catch(error) {\\n    // catch and re-throw\\n    throw new CustomError(\'operationThatMightThrowAnError has failed\', error);\\n}\\n```"},{"kind":"text","text":"\\n\\n## Wrapping an async error\\n\\n"},{"kind":"code","text":"```ts\\noperationThatMightRejectAPromise()\\n  .catch(error => {\\n    // catch and re-throw\\n    throw new CustomError(\'operationThatMightThrowAnError has failed\', error)\\n  })\\n```"},{"kind":"text","text":"\\n\\n## Registering a custom error with ["},{"kind":"code","text":"`ErrorSerialiser`"},{"kind":"text","text":"](/api/core/class/ErrorSerialiser/)\\n\\n"},{"kind":"code","text":"```ts\\nimport { RuntimeError } from \'@serenity-js/core\'\\nimport { ErrorSerialiser } from \'@serenity-js/core/lib/io\'\\n\\nexport class CustomError extends RuntimeError {\\n\\n   static fromJSON(serialised: JSONObject): CustomError {\\n        const error = new CustomError(\\n            serialised.message as string,\\n            ErrorSerialiser.deserialise(serialised.cause as string | undefined),\\n        );\\n\\n        error.stack = serialised.stack as string;\\n\\n        return error;\\n    }\\n\\n  constructor(message: string, cause?: Error) {\\n      super(CustomError, message, cause);\\n  }\\n}\\n\\nErrorSerialiser.registerErrorTypes(CustomError)\\n```"}]},"children":[{"id":386,"name":"cause","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isOptional":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/), if any"}]},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":78,"character":24}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"},"inheritedFrom":{"type":"reference","target":-1,"name":"Error.cause","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error/cause"}},{"id":387,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":103,"character":4}],"signatures":[{"id":388,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":103,"character":4}],"type":{"type":"intrinsic","name":"string"}}]},{"id":389,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":107,"character":4}],"signatures":[{"id":390,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":107,"character":4}],"type":{"type":"intrinsic","name":"object"}}]},{"id":391,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Error.name","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error/name"}},{"id":392,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Error.message","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error/message"}},{"id":393,"name":"stack","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Error.stack","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error/stack"}}],"groups":[{"title":"Properties","children":[386,391,392,393]},{"title":"Methods","children":[387,389]}],"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":68,"character":22}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}],"extendedBy":[{"type":"reference","target":211,"name":"AssertionError"},{"type":"reference","target":237,"name":"ConfigurationError"},{"type":"reference","target":263,"name":"ImplementationPendingError"},{"type":"reference","target":289,"name":"ListItemNotFoundError"},{"type":"reference","target":315,"name":"LogicError"},{"type":"reference","target":341,"name":"OperationInterruptedError"},{"type":"reference","target":394,"name":"TestCompromisedError"},{"type":"reference","target":420,"name":"TimeoutExpiredError"},{"type":"reference","target":446,"name":"UnknownError"}],"permalink":"/api/core/class/RuntimeError","categories":[],"previousId":341,"nextId":394},{"id":394,"name":"TestCompromisedError","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Thrown to indicate that the test can\'t be performed due to an issue with a downstream dependency.\\nFor example, it makes no sense to run a full-stack integration test if we already know that\\nthe database server is down.\\n\\n## Throwing a TestCompromisedError from a custom Interaction\\n\\n"},{"kind":"code","text":"```ts\\nimport { Interaction } from \'@serenity-js/core\';\\n\\nconst SetUpTestDatabase = () =>\\n  Interaction.where(`#actor sets up a test database`, actor => {\\n    return SomeCustomDatabaseSpecificAbility.as(actor).setUpTestDatabase().catch(error => {\\n      throw new TestCompromisedError(\'Could not set up the test database\', error)\\n    })\\n})\\n```"}]},"children":[{"id":395,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/TestCompromisedError.ts","line":28,"character":11}],"signatures":[{"id":396,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/TestCompromisedError.ts","line":28,"character":11}],"parameters":[{"id":397,"name":"serialised","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":394,"name":"TestCompromisedError","package":"@serenity-js/core"}}]},{"id":412,"name":"cause","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isOptional":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/), if any"}]},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":78,"character":24}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"},"inheritedFrom":{"type":"reference","target":386,"name":"RuntimeError.cause"}},{"id":413,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":103,"character":4}],"signatures":[{"id":414,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":103,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":388,"name":"RuntimeError.toString"}}],"inheritedFrom":{"type":"reference","target":387,"name":"RuntimeError.toString"}},{"id":415,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":107,"character":4}],"signatures":[{"id":416,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":107,"character":4}],"type":{"type":"intrinsic","name":"object"},"inheritedFrom":{"type":"reference","target":390,"name":"RuntimeError.toJSON"}}],"inheritedFrom":{"type":"reference","target":389,"name":"RuntimeError.toJSON"}},{"id":408,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/TestCompromisedError.ts","line":43,"character":4}],"signatures":[{"id":409,"name":"new TestCompromisedError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/TestCompromisedError.ts","line":43,"character":4}],"parameters":[{"id":410,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"type":{"type":"intrinsic","name":"string"}},{"id":411,"name":"cause","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/), if any"}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}],"type":{"type":"reference","target":394,"name":"TestCompromisedError","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"RuntimeError.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"RuntimeError.constructor"}},{"id":417,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":391,"name":"RuntimeError.name"}},{"id":418,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":392,"name":"RuntimeError.message"}},{"id":419,"name":"stack","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":393,"name":"RuntimeError.stack"}}],"groups":[{"title":"Constructors","children":[408]},{"title":"Properties","children":[412,417,418,419]},{"title":"Methods","children":[395,413,415]}],"sources":[{"fileName":"packages/core/src/errors/model/TestCompromisedError.ts","line":26,"character":13}],"extendedTypes":[{"type":"reference","target":367,"name":"RuntimeError","package":"@serenity-js/core"}],"permalink":"/api/core/class/TestCompromisedError","categories":[],"previousId":367,"nextId":420},{"id":420,"name":"TimeoutExpiredError","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Thrown to indicate that an ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/), a ["},{"kind":"code","text":"`Task`"},{"kind":"text","text":"](/api/core/class/Task/) or a test scenario\\ntook longer to execute than the expected timeout."}]},"children":[{"id":421,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/TimeoutExpiredError.ts","line":14,"character":11}],"signatures":[{"id":422,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/TimeoutExpiredError.ts","line":14,"character":11}],"parameters":[{"id":423,"name":"serialised","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":420,"name":"TimeoutExpiredError","package":"@serenity-js/core"}}]},{"id":438,"name":"cause","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isOptional":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/), if any"}]},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":78,"character":24}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"},"inheritedFrom":{"type":"reference","target":386,"name":"RuntimeError.cause"}},{"id":439,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":103,"character":4}],"signatures":[{"id":440,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":103,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":388,"name":"RuntimeError.toString"}}],"inheritedFrom":{"type":"reference","target":387,"name":"RuntimeError.toString"}},{"id":441,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":107,"character":4}],"signatures":[{"id":442,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":107,"character":4}],"type":{"type":"intrinsic","name":"object"},"inheritedFrom":{"type":"reference","target":390,"name":"RuntimeError.toJSON"}}],"inheritedFrom":{"type":"reference","target":389,"name":"RuntimeError.toJSON"}},{"id":434,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/TimeoutExpiredError.ts","line":32,"character":4}],"signatures":[{"id":435,"name":"new TimeoutExpiredError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/TimeoutExpiredError.ts","line":32,"character":4}],"parameters":[{"id":436,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"type":{"type":"intrinsic","name":"string"}},{"id":437,"name":"cause","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/), if any"}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}],"type":{"type":"reference","target":420,"name":"TimeoutExpiredError","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"RuntimeError.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"RuntimeError.constructor"}},{"id":443,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":391,"name":"RuntimeError.name"}},{"id":444,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":392,"name":"RuntimeError.message"}},{"id":445,"name":"stack","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":393,"name":"RuntimeError.stack"}}],"groups":[{"title":"Constructors","children":[434]},{"title":"Properties","children":[438,443,444,445]},{"title":"Methods","children":[421,439,441]}],"sources":[{"fileName":"packages/core/src/errors/model/TimeoutExpiredError.ts","line":12,"character":13}],"extendedTypes":[{"type":"reference","target":367,"name":"RuntimeError","package":"@serenity-js/core"}],"permalink":"/api/core/class/TimeoutExpiredError","categories":[],"previousId":394,"nextId":446},{"id":446,"name":"UnknownError","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Thrown to indicate that an unknown error has occurred."}]},"children":[{"id":447,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/UnknownError.ts","line":13,"character":11}],"signatures":[{"id":448,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/UnknownError.ts","line":13,"character":11}],"parameters":[{"id":449,"name":"serialised","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":446,"name":"UnknownError","package":"@serenity-js/core"}}]},{"id":464,"name":"cause","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isOptional":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/), if any"}]},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":78,"character":24}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"},"inheritedFrom":{"type":"reference","target":386,"name":"RuntimeError.cause"}},{"id":465,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":103,"character":4}],"signatures":[{"id":466,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":103,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":388,"name":"RuntimeError.toString"}}],"inheritedFrom":{"type":"reference","target":387,"name":"RuntimeError.toString"}},{"id":467,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":107,"character":4}],"signatures":[{"id":468,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":107,"character":4}],"type":{"type":"intrinsic","name":"object"},"inheritedFrom":{"type":"reference","target":390,"name":"RuntimeError.toJSON"}}],"inheritedFrom":{"type":"reference","target":389,"name":"RuntimeError.toJSON"}},{"id":460,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/UnknownError.ts","line":28,"character":4}],"signatures":[{"id":461,"name":"new UnknownError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/UnknownError.ts","line":28,"character":4}],"parameters":[{"id":462,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"type":{"type":"intrinsic","name":"string"}},{"id":463,"name":"cause","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/), if any"}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}],"type":{"type":"reference","target":446,"name":"UnknownError","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"RuntimeError.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"RuntimeError.constructor"}},{"id":469,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":391,"name":"RuntimeError.name"}},{"id":470,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":392,"name":"RuntimeError.message"}},{"id":471,"name":"stack","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":393,"name":"RuntimeError.stack"}}],"groups":[{"title":"Constructors","children":[460]},{"title":"Properties","children":[464,469,470,471]},{"title":"Methods","children":[447,465,467]}],"sources":[{"fileName":"packages/core/src/errors/model/UnknownError.ts","line":11,"character":13}],"extendedTypes":[{"type":"reference","target":367,"name":"RuntimeError","package":"@serenity-js/core"}],"permalink":"/api/core/class/UnknownError","categories":[],"previousId":420,"nextId":1150},{"id":507,"name":"serenity","variant":"declaration","kind":32,"flags":{"isExternal":true,"isConst":true},"comment":{"summary":[{"kind":"text","text":"Serenity object is the root object of the Serenity/JS framework."}]},"sources":[{"fileName":"packages/core/src/instance.ts","line":14,"character":13}],"type":{"type":"reference","target":1951,"name":"Serenity","package":"@serenity-js/core"},"defaultValue":"...","permalink":"/api/core#serenity","categories":[],"previousId":85,"nextId":496},{"id":496,"name":"configure","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/instance.ts","line":32,"character":16}],"signatures":[{"id":497,"name":"configure","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures Serenity/JS. Every call to this function\\nreplaces the previous configuration provided,\\nso this function should be called exactly once\\nin your test suite.\\n\\nThis function is an alias for ["},{"kind":"code","text":"`Serenity.configure`"},{"kind":"text","text":"](/api/core/class/Serenity/#configure).\\n\\n:::tip configure vs engage\\n * If you want to retain the configuration but reset the [cast of actors](/api/core/class/Cast/), use ["},{"kind":"code","text":"`engage`"},{"kind":"text","text":"](/api/core/function/engage/) instead.\\n:::"}]},"sources":[{"fileName":"packages/core/src/instance.ts","line":32,"character":16}],"parameters":[{"id":498,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":85,"name":"SerenityConfig","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"void"}}],"permalink":"/api/core/function/configure","categories":[],"previousId":507,"nextId":499},{"id":499,"name":"engage","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/instance.ts","line":145,"character":16}],"signatures":[{"id":500,"name":"engage","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Re-configures Serenity/JS with a new [cast](/api/core/class/Cast/) of [actors](/api/core/class/Actor/)\\nyou want to use in any subsequent calls to ["},{"kind":"code","text":"`actorCalled`"},{"kind":"text","text":"](/api/core/function/actorCalled/).\\n\\nThis function is an alias for ["},{"kind":"code","text":"`Serenity.engage`"},{"kind":"text","text":"](/api/core/class/Serenity/#engage),\\nwhich provides an alternative to calling ["},{"kind":"code","text":"`Actor.whoCan`"},{"kind":"text","text":"](/api/core/class/Actor/#whoCan) directly in your tests\\nand is typically invoked in a \\"before all\\" or \\"before each\\" hook of your test runner of choice.\\n\\n:::tip configure vs engage\\nCalling ["},{"kind":"code","text":"`engage`"},{"kind":"text","text":"](/api/core/function/engage/) replaces the currently configured [cast of actors](/api/core/class/Cast/),\\nbut doesn\'t affect any other configuration.\\nIf you want to reset the Serenity/JS configuration completely, use ["},{"kind":"code","text":"`configure`"},{"kind":"text","text":"](/api/core/function/configure/) instead.\\n:::\\n\\nIf your implementation of the [cast](/api/core/class/Cast/) interface is stateless,\\nyou can invoke this function just once before your entire test suite is executed, see\\n- ["},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":"](https://jasmine.github.io/api/3.6/global.html#beforeAll) in Jasmine,\\n- ["},{"kind":"code","text":"`before`"},{"kind":"text","text":"](https://mochajs.org/#hooks) in Mocha,\\n- ["},{"kind":"code","text":"`BeforeAll`"},{"kind":"text","text":"](https://github.com/cucumber/cucumber-js/blob/master/docs/support_files/hooks.md#beforeall--afterall) in Cucumber.js\\n\\nHowever, if your [cast](/api/core/class/Cast/) holds state that you want to reset before each scenario,\\nit\'s better to invoke "},{"kind":"code","text":"`engage`"},{"kind":"text","text":" before each test using:\\n- ["},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":"](https://jasmine.github.io/api/3.6/global.html#beforeEach) in Jasmine\\n- ["},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":"](https://mochajs.org/#hooks) in Mocha,\\n- ["},{"kind":"code","text":"`Before`"},{"kind":"text","text":"](https://github.com/cucumber/cucumber-js/blob/master/docs/support_files/hooks.md#hooks) in Cucumber.js\\n\\n## Engaging a cast of actors\\n\\n"},{"kind":"code","text":"```ts\\nimport { Actor, Cast } from \'@serenity-js/core\';\\n\\nclass Actors implements Cast {\\n  prepare(actor: Actor) {\\n    return actor.whoCan(\\n      // ... abilities you\'d like the Actor to have\\n    );\\n  }\\n}\\n\\nengage(new Actors());\\n```"},{"kind":"text","text":"\\n\\n### Using with Mocha test runner\\n\\n"},{"kind":"code","text":"```ts\\nimport { beforeEach } from \'mocha\'\\n\\nbeforeEach(() => engage(new Actors()))\\n```"},{"kind":"text","text":"\\n\\n### Using with Jasmine test runner\\n\\n"},{"kind":"code","text":"```typescript\\nimport \'jasmine\'\\n\\ndescribe(\'My feature\', () => {\\n  beforeEach(() => engage(new Actors()))\\n\\n\\n})\\n```"},{"kind":"text","text":"\\n\\n### Using with Cucumber.js test runner\\n\\nEngage "},{"kind":"code","text":"`Actors`"},{"kind":"text","text":" [before](https://github.com/cucumber/cucumber-js/blob/main/docs/support_files/hooks.md)\\neach test scenario:\\n\\n"},{"kind":"code","text":"```typescript\\nimport { Before } from \'@cucumber/cucumber\'\\n\\nBefore(() => engage(new Actors()))\\n```"},{"kind":"text","text":"\\n\\nEngage "},{"kind":"code","text":"`Actors`"},{"kind":"text","text":" before scenarios with [specific tags](https://github.com/cucumber/cucumber-js/blob/main/docs/support_files/hooks.md#tagged-hooks):\\n\\n"},{"kind":"code","text":"```typescript\\nimport { Before } from \'@cucumber/cucumber\'\\n\\nBefore(\'@web\', () => engage(new Actors()))\\n```"},{"kind":"text","text":"\\n\\n### Using with Playwright Test runner\\n\\n[Serenity/JS Playwright Test module](/api/playwright-test) will configure the cast on your behalf,\\nso you don\'t need to call ["},{"kind":"code","text":"`engage`"},{"kind":"text","text":"](/api/core/function/engage/).\\n\\n"},{"kind":"code","text":"```ts\\nimport { describe, it, test } from \'@serenity-js/playwright-test\'\\n\\ndescribe(\'My feature\', () => {\\n\\n  this.use({\\n    actors: new Actors()\\n  })\\n\\n  // test scenarios\\n\\n})\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`Cast`"},{"kind":"text","text":"](/api/core/class/Cast/)\\n- ["},{"kind":"code","text":"`Serenity.engage`"},{"kind":"text","text":"](/api/core/class/Serenity/#engage)"}]},"sources":[{"fileName":"packages/core/src/instance.ts","line":145,"character":16}],"parameters":[{"id":501,"name":"actors","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":2002,"name":"Cast","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"void"}}],"permalink":"/api/core/function/engage","categories":[],"previousId":496,"nextId":2002},{"id":502,"name":"actorCalled","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/instance.ts","line":232,"character":16}],"signatures":[{"id":503,"name":"actorCalled","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates or retrieves an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\ncalled "},{"kind":"code","text":"`name`"},{"kind":"text","text":" if one has already been instantiated.\\n\\nThis method is an alias for ["},{"kind":"code","text":"`Serenity.theActorCalled`"},{"kind":"text","text":"](/api/core/class/Serenity/#theActorCalled).\\n\\n## Usage with Cucumber\\n\\n"},{"kind":"code","text":"```typescript\\nimport { actorCalled } from \'@serenity-js/core\';\\nimport { Given } from \'@cucumber/cucumber\';\\n\\nGiven(/(.*?) is a registered user/, async (name: string) => {\\n  await actorCalled(name).attemptsTo(\\n    // ... activities\\n  )\\n})\\n```"},{"kind":"text","text":"\\n\\n## Usage with Jasmine\\n\\n"},{"kind":"code","text":"```typescript\\nimport \'jasmine\';\\nimport { actorCalled } from \'@serenity-js/core\';\\n\\ndescribe(\'Feature\', () => {\\n\\n    it(\'should have some behaviour\', async () {\\n        await actorCalled(\'James\').attemptsTo(\\n            // ... activities\\n        )\\n    })\\n})\\n```"},{"kind":"text","text":"\\n\\n## Usage with Mocha\\n\\n"},{"kind":"code","text":"```typescript\\nimport { describe, it } from \'mocha\';\\nimport { actorCalled } from \'@serenity-js/core\';\\n\\ndescribe(\'Feature\', () => {\\n\\n    it(\'should have some behaviour\', async () => {\\n        await actorCalled(\'James\').attemptsTo(\\n            // ... activities\\n        )\\n    })\\n})\\n```"},{"kind":"text","text":"\\n\\n## Usage with Playwright Test\\n\\nWhen using [Serenity/JS with Playwright Test](/api/playwright-test/), you should use either\\nthe default ["},{"kind":"code","text":"`actor`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityFixtures/#actorCalled) fixture\\nor the injected ["},{"kind":"code","text":"`actorCalled`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityFixtures/#actorCalled) function\\ninstead of importing it from "},{"kind":"code","text":"`@serenity-js/core`"},{"kind":"text","text":".\\n\\n"},{"kind":"code","text":"```typescript\\nimport { describe, it } from \'@serenity-js/playwright-test\';\\n\\ndescribe(\'Feature\', () => {\\n\\n    it(\'should have some behaviour\', async ({ actorCalled }) => {\\n        await actorCalled(\'James\').attemptsTo(\\n            // ... activities\\n        )\\n    })\\n})\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`engage`"},{"kind":"text","text":"](/api/core/function/engage/)\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`Cast`"},{"kind":"text","text":"](/api/core/class/Cast/)\\n- ["},{"kind":"code","text":"`Serenity.theActorCalled`"},{"kind":"text","text":"](/api/core/class/Serenity/#theActorCalled)"}]},"sources":[{"fileName":"packages/core/src/instance.ts","line":232,"character":16}],"parameters":[{"id":504,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The name of the actor to instantiate or retrieve"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":655,"name":"Actor","package":"@serenity-js/core"}}],"permalink":"/api/core/function/actorCalled","categories":[],"previousId":1080,"nextId":505},{"id":505,"name":"actorInTheSpotlight","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/instance.ts","line":270,"character":16}],"signatures":[{"id":506,"name":"actorInTheSpotlight","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Retrieves an actor who was last instantiated or retrieved\\nusing ["},{"kind":"code","text":"`actorCalled`"},{"kind":"text","text":"](/api/core/function/actorCalled/).\\n\\nThis function is particularly useful when automating Cucumber scenarios.\\n\\nThis function is an alias for ["},{"kind":"code","text":"`Serenity.theActorInTheSpotlight`"},{"kind":"text","text":"](/api/core/class/Serenity/#theActorInTheSpotlight).\\n\\n## Usage with Cucumber\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\';\\nimport { Given, When } from \'@cucumber/cucumber\';\\n\\nGiven(/(.*?) is a registered user/, (name: string) =>\\n  actorCalled(name).attemptsTo(\\n    // ... activities\\n  ))\\n\\nWhen(/(?:he|she|they) browse their recent orders/, () =>\\n  actorInTheSpotlight().attemptsTo(\\n    // ... activities\\n  ))\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`engage`"},{"kind":"text","text":"](/api/core/function/engage/)\\n- ["},{"kind":"code","text":"`actorCalled`"},{"kind":"text","text":"](/api/core/function/actorCalled/)\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`Cast`"},{"kind":"text","text":"](/api/core/class/Cast/)"}]},"sources":[{"fileName":"packages/core/src/instance.ts","line":270,"character":16}],"type":{"type":"reference","target":655,"name":"Actor","package":"@serenity-js/core"}}],"permalink":"/api/core/function/actorInTheSpotlight","categories":[],"previousId":502,"nextId":1637},{"id":75,"name":"format","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/io/format.ts","line":70,"character":16}],"signatures":[{"id":76,"name":"format","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"code","text":"`format`"},{"kind":"text","text":" is a factory function returning\\na [tag function](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#Tagged_template_literals)\\nthat produces a human-readable "},{"kind":"code","text":"`string`"},{"kind":"text","text":" description of a template containing\\none or more [answerables](/api/core/#Answerable).\\n\\nTypically, you\'ll want to use "},{"kind":"code","text":"`d`"},{"kind":"text","text":" and "},{"kind":"code","text":"`f`"},{"kind":"text","text":" shorthands instead, or the modern alternative - "},{"kind":"code","text":"`the`"},{"kind":"text","text":":\\n- the ["},{"kind":"code","text":"`d`"},{"kind":"text","text":"](/api/core/function/d/) function works best for generating a **static description** of a parameterised ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/)\\n- the ["},{"kind":"code","text":"`f`"},{"kind":"text","text":"](/api/core/function/f/) function is better suited for debugging\\n- the ["},{"kind":"code","text":"`the`"},{"kind":"text","text":"](/api/core/function/f/) function works best for generating a **dynamic description** of a parameterised ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/)\\n\\n:::tip Use "},{"kind":"code","text":"`the`"},{"kind":"text","text":" instead of "},{"kind":"code","text":"`format`"},{"kind":"text","text":"\\n"},{"kind":"code","text":"`format`"},{"kind":"text","text":", "},{"kind":"code","text":"`d`"},{"kind":"text","text":" and "},{"kind":"code","text":"`f`"},{"kind":"text","text":" are the original Serenity/JS string formatting functions,\\nstill present in the framework for backwards compatibility purposes.\\n\\nTo generate a dynamic description of a "},{"kind":"code","text":"`Question`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":",\\nuse ["},{"kind":"code","text":"`the`"},{"kind":"text","text":"](/api/core/function/the/) function instead.\\n:::\\n\\n## Using "},{"kind":"code","text":"`format`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport { format, Question } from \'@serenity-js/core\'\\n\\nconst someQuestion = () =>\\n  Question.about(\'some question\', actor => \'some value\')\\n\\nformat({ markQuestions: true }) `actor answers ${ question() }`\\n // returns: actor answers <<some question>>\\n\\nformat({ markQuestions: false }) `actor answers ${ question() }`\\n // returns: actor answers some question\\n```"},{"kind":"text","text":"\\n\\n## Using "},{"kind":"code","text":"`d`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport { d, Question } from \'@serenity-js/core\'\\n\\nconst someQuestion = () =>\\n  Question.about(\'some question\', actor => \'some value\')\\n\\nd`actor answers ${ question() }`\\n // returns: actor answers <<some question>>\\n```"},{"kind":"text","text":"\\n\\n## Using "},{"kind":"code","text":"`f`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport { f, Question } from \'@serenity-js/core\'\\n\\nconst someQuestion = () =>\\n  Question.about(\'some question\', actor => \'some value\')\\n\\nf`actor answers ${ question() }`\\n // returns: actor answers <<some question>>\\n\\nformat({ markQuestions: false }) `actor answers ${ question() }`\\n // returns: actor answers <<some question>>\\n```"}]},"sources":[{"fileName":"packages/core/src/io/format.ts","line":70,"character":16}],"parameters":[{"id":77,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"code","text":"`markQuestions`"},{"kind":"text","text":": boolean - if set to true, descriptions of questions passed in as arguments will be surrounded with double angled brackets, i.e. "},{"kind":"code","text":"`<<description>>`"}]},"type":{"type":"reflection","declaration":{"id":78,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":79,"name":"markQuestions","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/io/format.ts","line":70,"character":33}],"type":{"type":"intrinsic","name":"boolean"}}],"groups":[{"title":"Properties","children":[79]}],"sources":[{"fileName":"packages/core/src/io/format.ts","line":70,"character":31}]}}}],"type":{"type":"reflection","declaration":{"id":80,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/io/format.ts","line":70,"character":60}],"signatures":[{"id":81,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"parameters":[{"id":82,"name":"templates","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"TemplateStringsArray"},"name":"TemplateStringsArray","package":"typescript"}},{"id":83,"name":"placeholders","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Answerable","package":"@serenity-js/core"}}}],"type":{"type":"intrinsic","name":"string"}}]}}}],"permalink":"/api/core/function/format","categories":[],"previousId":926,"nextId":71},{"id":71,"name":"f","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/io/format.ts","line":82,"character":13}],"signatures":[{"id":72,"name":"f","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/io/format.ts","line":82,"character":13}],"parameters":[{"id":73,"name":"templates","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"TemplateStringsArray"},"name":"TemplateStringsArray","package":"typescript"}},{"id":74,"name":"placeholders","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/api/core/function/f","categories":[],"previousId":75,"nextId":67},{"id":67,"name":"d","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/io/format.ts","line":85,"character":13}],"signatures":[{"id":68,"name":"d","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/io/format.ts","line":85,"character":13}],"parameters":[{"id":69,"name":"templates","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"TemplateStringsArray"},"name":"TemplateStringsArray","package":"typescript"}},{"id":70,"name":"placeholders","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/api/core/function/d","categories":[],"previousId":71,"nextId":706},{"id":628,"name":"Activity","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"**Activities** represents [tasks](/api/core/class/Task/) and [interactions](/api/core/class/Interaction/) to be performed by an [actor](/api/core/class/Actor/).\\n\\nLearn more about:\\n- [Performing activities at multiple levels](/handbook/design/screenplay-pattern#performing-activities-at-multiple-levels)\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`PerformsActivities`"},{"kind":"text","text":"](/api/core/interface/PerformsActivities/)\\n- [Command design pattern on Wikipedia](https://en.wikipedia.org/wiki/Command_pattern)"}]},"children":[{"id":633,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":27,"character":4}],"signatures":[{"id":634,"name":"new Activity","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":27,"character":4}],"parameters":[{"id":635,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":636,"name":"location","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"defaultValue":"..."}],"type":{"type":"reference","target":628,"name":"Activity","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"Describable.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"Describable.constructor"}},{"id":638,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":38,"character":4}],"signatures":[{"id":639,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":38,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"}}]},{"id":640,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":53,"character":13}],"signatures":[{"id":641,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the provided ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to perform this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/)."}]},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":53,"character":13}],"parameters":[{"id":642,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"#### Learn more\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`PerformsActivities`"},{"kind":"text","text":"](/api/core/interface/PerformsActivities/)\\n- ["},{"kind":"code","text":"`UsesAbilities`"},{"kind":"text","text":"](/api/core/interface/UsesAbilities/)\\n- ["},{"kind":"code","text":"`AnswersQuestions`"},{"kind":"text","text":"](/api/core/interface/AnswersQuestions/)"}]},"type":{"type":"union","types":[{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":623,"name":"PerformsActivities","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":643,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"signatures":[{"id":644,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"parameters":[{"id":645,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":646,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":647,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":66}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[647]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":64}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":1136,"name":"Describable.describedBy"}}],"inheritedFrom":{"type":"reference","target":1135,"name":"Describable.describedBy"}},{"id":653,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"signatures":[{"id":654,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":1146,"name":"Describable.toString"}}],"inheritedFrom":{"type":"reference","target":1145,"name":"Describable.toString"}}],"groups":[{"title":"Constructors","children":[633]},{"title":"Methods","children":[638,640,643,653]}],"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":22,"character":22}],"extendedTypes":[{"type":"reference","target":1131,"name":"Describable","package":"@serenity-js/core"}],"extendedBy":[{"type":"reference","target":811,"name":"Interaction"},{"type":"reference","target":1640,"name":"Task"}],"permalink":"/api/core/class/Activity","categories":[],"previousId":1616,"nextId":655},{"id":655,"name":"Actor","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"**Actors** represent **people** and **external systems** interacting with the system under test.\\nTheir role is to perform [activities](/api/core/class/Activity/) that demonstrate how to accomplish a given goal.\\n\\nActors are the core building block of the [Screenplay Pattern](/handbook/design/screenplay-pattern),\\nalong with [abilities](/api/core/class/Ability/), [interactions](/api/core/class/Interaction/), [tasks](/api/core/class/Task/), and [questions](/api/core/class/Question/).\\nActors are also the first thing you see in a typical Serenity/JS test scenario.\\n\\n![Screenplay Pattern](/images/design/serenity-js-screenplay-pattern.png)\\n\\nLearn more about:\\n- ["},{"kind":"code","text":"`Cast`"},{"kind":"text","text":"](/api/core/class/Cast/)\\n- ["},{"kind":"code","text":"`Stage`"},{"kind":"text","text":"](/api/core/class/Stage/)\\n- ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/)\\n- ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/)\\n- ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/)\\n- ["},{"kind":"code","text":"`Task`"},{"kind":"text","text":"](/api/core/class/Task/)\\n- ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/)\\n\\n## Representing people and systems as actors\\n\\nTo use a Serenity/JS ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/), all you need is to say their name:\\n\\n"},{"kind":"code","text":"```typescript\\nimport { actorCalled } from \'@serenity-js/core\'\\n\\nactorCalled(\'Alice\')\\n// returns: Actor\\n```"},{"kind":"text","text":"\\n\\nSerenity/JS actors perform within the scope of a test scenario, so the first time you invoke ["},{"kind":"code","text":"`actorCalled`"},{"kind":"text","text":"](/api/core/function/actorCalled/),\\nSerenity/JS instantiates a new actor from the default [cast](/api/core/class/Cast/) of actors (or any custom cast you might have [configured](/api/core/function/configure/)).\\nAny subsequent invocations of this function within the scope of the same test scenario retrieve the already instantiated actor, identified by their name.\\n\\n"},{"kind":"code","text":"```typescript\\nimport { actorCalled } from \'@serenity-js/core\'\\n\\nactorCalled(\'Alice\')    // instantiates Alice\\nactorCalled(\'Bob\')      // instantiates Bob\\nactorCalled(\'Alice\')    // retrieves Alice, since she\'s already been instantiated\\n```"},{"kind":"text","text":"\\n\\nSerenity/JS scenarios can involve as many or as few actors as you need to model the given business workflow.\\nFor example, you might want to use **multiple actors** in test scenarios that model how **different people** perform different parts of a larger business process, such as reviewing and approving a loan application.\\nIt is also quite common to introduce **supporting actors** to perform **administrative tasks**, like setting up test data and environment, or **audit tasks**, like checking the logs or messages emitted to a message queue\\nby the system under test.\\n\\n:::info The Stan Lee naming convention\\nActor names can be much more than just simple identifiers like "},{"kind":"code","text":"`Alice`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Bob`"},{"kind":"text","text":". While you can give your actors any names you like, a good convention to follow is to give them\\nnames indicating the [personae](https://articles.uie.com/goodwin_interview/) they represent or the role they play in the system.\\n\\nJust like the characters in [Stan Lee](https://en.wikipedia.org/wiki/Stan_Lee) graphic novels,\\nactors in Serenity/JS test scenarios are often given alliterate names as a mnemonic device.\\nNames like \\"Adam the Admin\\", \\"Edna the Editor\\", \\"Trevor the Traveller\\", are far more memorable than a generic \\"UI user\\" or \\"API user\\".\\nThey\'re also much easier for people to associate with the context, constraints, and affordances of the given actor.\\n:::"}]},"children":[{"id":656,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":85,"character":4}],"signatures":[{"id":657,"name":"new Actor","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":85,"character":4}],"parameters":[{"id":658,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":659,"name":"stage","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":2158,"name":"Stage","package":"@serenity-js/core"}},{"id":660,"name":"abilities","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"reference","target":508,"name":"Ability","package":"@serenity-js/core"}},"defaultValue":"[]"}],"type":{"type":"reference","target":655,"name":"Actor","package":"@serenity-js/core"}}]},{"id":662,"name":"name","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":86,"character":24}],"type":{"type":"intrinsic","name":"string"}},{"id":664,"name":"abilityTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":108,"character":4}],"signatures":[{"id":665,"name":"abilityTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Retrieves actor\'s ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/) of "},{"kind":"code","text":"`abilityType`"},{"kind":"text","text":", or one that extends "},{"kind":"code","text":"`abilityType`"},{"kind":"text","text":".\\n\\nPlease note that this method performs an ["},{"kind":"code","text":"`instanceof`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/instanceof) check against abilities\\ngiven to this actor via ["},{"kind":"code","text":"`Actor.whoCan`"},{"kind":"text","text":"](/api/core/class/Actor/#whoCan).\\n\\nPlease also note that ["},{"kind":"code","text":"`Actor.whoCan`"},{"kind":"text","text":"](/api/core/class/Actor/#whoCan) performs the same check when abilities are assigned to the actor\\nto ensure the actor has at most one instance of a given ability type."}]},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":108,"character":4}],"typeParameter":[{"id":666,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":508,"name":"Ability","package":"@serenity-js/core"}}],"parameters":[{"id":667,"name":"abilityType","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":529,"typeArguments":[{"type":"reference","target":666,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"AbilityType","package":"@serenity-js/core"}}],"type":{"type":"reference","target":666,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true},"implementationOf":{"type":"reference","target":620,"name":"UsesAbilities.abilityTo"}}],"implementationOf":{"type":"reference","target":619,"name":"UsesAbilities.abilityTo"}},{"id":668,"name":"attemptsTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Makes the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) attempt to perform a sequence of [activities](/api/core/class/Activity/)."}]},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":129,"character":4}],"signatures":[{"id":669,"name":"attemptsTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the actor to attempt to perform a number of [activities](/api/core/class/Activity/),\\nso either [tasks](/api/core/class/Task/) or [interactions](/api/core/class/Interaction/)),\\none by one."}]},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":129,"character":4}],"parameters":[{"id":670,"name":"activities","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":628,"name":"Activity","package":"@serenity-js/core"}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"implementationOf":{"type":"reference","target":624,"name":"PerformsActivities.attemptsTo"}}],"implementationOf":{"type":"reference","target":624,"name":"PerformsActivities.attemptsTo"}},{"id":671,"name":"whoCan","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":150,"character":4}],"signatures":[{"id":672,"name":"whoCan","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Gives this Actor a list of [abilities](/api/core/class/Ability/) they can use\\nto interact with the system under test or the test environment."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"The actor with newly gained abilities"}]},{"tag":"@throws","content":[{"kind":"text","text":"["},{"kind":"code","text":"`ConfigurationError`"},{"kind":"text","text":"](/api/core/class/ConfigurationError/)\\n Throws a ConfigurationError if the actor already has an ability of this type."}]}]},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":150,"character":4}],"parameters":[{"id":673,"name":"abilities","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"comment":{"summary":[{"kind":"text","text":"A vararg list of abilities to give the actor"}]},"type":{"type":"array","elementType":{"type":"reference","target":508,"name":"Ability","package":"@serenity-js/core"}}}],"type":{"type":"reference","target":655,"name":"Actor","package":"@serenity-js/core"},"implementationOf":{"type":"reference","target":568,"name":"CanHaveAbilities.whoCan"}}],"implementationOf":{"type":"reference","target":567,"name":"CanHaveAbilities.whoCan"}},{"id":674,"name":"answer","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":163,"character":4}],"signatures":[{"id":675,"name":"answer","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"The answer to the Answerable"}]}]},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":163,"character":4}],"typeParameter":[{"id":676,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":677,"name":"answerable","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable) to answer (resolve the value of)."}]},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":676,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":676,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"implementationOf":{"type":"reference","target":1069,"name":"AnswersQuestions.answer"}}],"implementationOf":{"type":"reference","target":1068,"name":"AnswersQuestions.answer"}},{"id":678,"name":"collect","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":170,"character":4}],"signatures":[{"id":679,"name":"collect","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Makes the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) collect an artifact so that it can be included in the test report.\\n\\n#### Implementing a custom interaction to attach artifacts\\n\\n"},{"kind":"code","text":"```ts\\nimport * as fs from \'node:fs\'\\nimport { Answerable, Interaction, the } from \'@serenity-js/core\'\\nimport { Path } from \'@serenity-js/core/lib/io\'\\nimport { Name, TextData } from \'@serenity-js/core/lib/model\'\\n\\nexport class Attach {\\n\\n  static contentsOf = (pathToFile: Path): Interaction =>\\n    Interaction.where(`#actor attaches contents of ${ pathToFile.basename() }`, async actor => {\\n      const data = fs.readFileSync(pathToFile.value).toString(\'utf-8\');\\n\\n      actor.collect(\\n        TextData.fromJSON({ contentType: \'text/plain\', data }),\\n        new Name(pathToFile.basename()),\\n      )\\n    })\\n\\n  static textData = (contents: Answerable<string>, name?: string): Interaction =>\\n    Interaction.where(the`#actor attaches text data`, async actor => {\\n      const data = await actor.answer(contents);\\n\\n      actor.collect(\\n        TextData.fromJSON({ contentType: \'text/plain\', data }),\\n        name && new Name(name),\\n      )\\n    })\\n}\\n```"},{"kind":"text","text":"\\n\\n#### Attaching plain text\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Path } from \'@serenity-js/core/lib/io\'\\n\\nactorCalled(\'Alice\').attemptsTo(\\n  Attach.textData(\'some text\', \'some name\'),\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Attaching contents of a text file\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Log } from \'@serenity-js/core\'\\n\\nactorCalled(\'Alice\').attemptsTo(\\n  Attach.contentsOf(Path.from(__dirname, \'output/server.log\')),\\n)\\n```"}]},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":170,"character":4}],"parameters":[{"id":680,"name":"artifact","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The artifact to be collected, such as "},{"kind":"code","text":"`JSON`"},{"kind":"text","text":" data."}]},"type":{"type":"reference","name":"Artifact","package":"@serenity-js/core"}},{"id":681,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The name of the artifact to make it easy to recognise in the test report"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"Name","package":"@serenity-js/core"}]}}],"type":{"type":"intrinsic","name":"void"},"implementationOf":{"type":"reference","target":712,"name":"CollectsArtifacts.collect"}}],"implementationOf":{"type":"reference","target":711,"name":"CollectsArtifacts.collect"}},{"id":682,"name":"currentTime","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":183,"character":4}],"signatures":[{"id":683,"name":"currentTime","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns current time."}]},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":183,"character":4}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"},"implementationOf":{"type":"reference","target":1948,"name":"TellsTime.currentTime"}}],"implementationOf":{"type":"reference","target":1947,"name":"TellsTime.currentTime"}},{"id":684,"name":"dismiss","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":191,"character":4}],"signatures":[{"id":685,"name":"dismiss","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the actor to invoke ["},{"kind":"code","text":"`Discardable.discard`"},{"kind":"text","text":"](/api/core/interface/Discardable/#discard) method on any\\n[discardable](/api/core/interface/Discardable/) [ability](/api/core/class/Ability/) it\'s been configured with."}]},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":191,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":686,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":205,"character":4}],"signatures":[{"id":687,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable, string representation of this actor and their abilities.\\n\\n**PRO TIP:** To get the name of the actor, use ["},{"kind":"code","text":"`Actor.name`"},{"kind":"text","text":"](/api/core/class/Actor/#name)"}]},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":205,"character":4}],"type":{"type":"intrinsic","name":"string"}}]},{"id":688,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":217,"character":4}],"signatures":[{"id":689,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a JSON representation of the actor and its current state.\\n\\nThe purpose of this method is to enable reporting the state of the actor in a human-readable format,\\nrather than to serialise and deserialise the actor itself."}]},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":217,"character":4}],"type":{"type":"reference","target":1637,"name":"SerialisedActor","package":"@serenity-js/core"}}]}],"groups":[{"title":"Constructors","children":[656]},{"title":"Properties","children":[662]},{"title":"Methods","children":[664,668,671,674,678,682,684,686,688]}],"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":76,"character":13}],"implementedTypes":[{"type":"reference","target":623,"name":"PerformsActivities","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":566,"typeArguments":[{"type":"reference","target":655,"name":"Actor","package":"@serenity-js/core"}],"name":"CanHaveAbilities","package":"@serenity-js/core"},{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":710,"name":"CollectsArtifacts","package":"@serenity-js/core"},{"type":"reference","target":1946,"name":"TellsTime","package":"@serenity-js/core"}],"permalink":"/api/core/class/Actor","categories":[],"previousId":628,"nextId":811},{"id":706,"name":"Answerable","variant":"declaration","kind":2097152,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A union type that provides a convenient way to represent any value\\nthat can be resolved by ["},{"kind":"code","text":"`Actor.answer`"},{"kind":"text","text":"](/api/core/class/Actor/#answer)."}]},"sources":[{"fileName":"packages/core/src/screenplay/Answerable.ts","line":9,"character":12}],"typeParameters":[{"id":707,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"type":{"type":"union","types":[{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":707,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"},{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":707,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Question","package":"@serenity-js/core"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":707,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},{"type":"reference","target":707,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true}]},"permalink":"/api/core#Answerable","categories":[],"previousId":67,"nextId":708},{"id":708,"name":"Answered","variant":"declaration","kind":2097152,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Describes the type of answer a given ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable) would\\nresolve to when given to ["},{"kind":"code","text":"`Actor.answer`"},{"kind":"text","text":"](/api/core/class/Actor/#answer).\\n\\n"},{"kind":"code","text":"```ts\\nAnswered<Answerable<T>> === T\\n```"}]},"sources":[{"fileName":"packages/core/src/screenplay/Answered.ts","line":13,"character":12}],"typeParameters":[{"id":709,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"type":{"type":"conditional","checkType":{"type":"reference","target":709,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true},"extendsType":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"undefined"}]},"trueType":{"type":"reference","target":709,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true},"falseType":{"type":"conditional","checkType":{"type":"reference","target":709,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true},"extendsType":{"type":"union","types":[{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"inferred","name":"A"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"},{"type":"reference","target":957,"typeArguments":[{"type":"inferred","name":"A"}],"name":"Question","package":"@serenity-js/core"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"inferred","name":"A"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]},"trueType":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Awaited"},"typeArguments":[{"type":"reference","name":"A","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Awaited","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#awaitedtype"},"falseType":{"type":"reference","target":709,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true}}},"permalink":"/api/core#Answered","categories":[],"previousId":706,"nextId":954},{"id":811,"name":"Interaction","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"**Interactions** are low-level [activities](/api/core/class/Activity/) that encapsulate\\na handful of instructions for an [actor](/api/core/class/Actor/) on how to use their [abilities](/api/core/class/Ability/)\\nto perform an individual interaction with the given interface of the system under test.\\n\\n:::tip Tasks or interactions?\\nBecause of their low-level nature, interactions are named using the vocabulary of the [solution domain](https://blog.mattwynne.net/2013/01/17/the-problem-with-solutions/),\\nand represent an individual interaction with the given interface, e.g. ["},{"kind":"code","text":"`Click`"},{"kind":"text","text":"](/api/web/class/Click/), ["},{"kind":"code","text":"`Enter`"},{"kind":"text","text":"](/api/web/class/Enter/), or ["},{"kind":"code","text":"`Send`"},{"kind":"text","text":"](/api/rest/class/Send/).\\n\\nInteractions follow the [Single Responsibility Principle](https://en.wikipedia.org/wiki/Single_responsibility_principle) which means that they do _one thing and one thing only_.\\nIf you\'re considering implementing an \\"interaction\\" that performs more than one logical activity, e.g. checks if the button is visible and then clicks on it if is,\\nconsider using separate interactions for separate responsibilities and then composing them using a [task](/api/core/class/Task/).\\n:::\\n\\nInteractions are the core building block of the [Screenplay Pattern](/handbook/design/screenplay-pattern),\\nalong with [actors](/api/core/class/Actor/), [abilities](/api/core/class/Ability/), [questions](/api/core/class/Question/), and [tasks](/api/core/class/Task/).\\n\\n![Screenplay Pattern](/images/design/serenity-js-screenplay-pattern.png)\\n\\nLearn more about:\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- [Abilities](/api/core/class/Ability/)\\n- [Activities](/api/core/class/Activity/)\\n\\n## Writing a custom interaction\\n\\n[Serenity/JS modules](/handbook/architecture/) ship with dozens of interactions to help you compose your test scenarios.\\nHowever, if you need to interact with a non-standard interface, or want to create a flavour of a given interaction that behaves slightly differently than the built-in version,\\nyou can easily create your own implementations using the ["},{"kind":"code","text":"`Interaction.where`"},{"kind":"text","text":"](/api/core/class/Interaction/#where) factory method.\\n\\n"},{"kind":"code","text":"```ts\\nimport { Actor, Interaction, the } from \'@serenity-js/core\'\\nimport { BrowseTheWeb, Page } from \'@serenity-js/web\'\\n\\nexport const ClearLocalStorage = () =>\\n  Interaction.where(the`#actor clears local storage`, async (actor: Actor) => {\\n    // Interaction to ClearLocalStorage directly uses Actor\'s ability to BrowseTheWeb\\n    const page: Page = await BrowseTheWeb.as(actor).currentPage()\\n    await page.executeScript(() => window.localStorage.clear())\\n  })\\n```"},{"kind":"text","text":"\\n\\n## Using a custom interaction\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\';\\nimport { BrowseTheWebWithPlaywright } from \'@serenity-js/playwright\'\\nimport { By, Navigate, PageElement } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { Browser, chromium } from \'playwright\'\\n\\nconst browser = await chromium.launch({ headless: true })\\n\\nawait actorCalled(\'In\xeas\')\\n  .whoCan(BrowseTheWebWithPlaywright.using(browser))\\n  .attemptsTo(\\n    Navigate.to(`https://serenity-js.org`),\\n    ClearLocalStorage(), // reported as \\"In\xeas clears local storage\\"\\n  )\\n```"}]},"children":[{"id":812,"name":"where","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Interaction.ts","line":79,"character":11}],"signatures":[{"id":813,"name":"where","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Interaction.ts","line":79,"character":11}],"parameters":[{"id":814,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Description to be used when reporting this interaction, for example "},{"kind":"code","text":"`#actor clears local storage`"},{"kind":"text","text":".\\n Note that "},{"kind":"code","text":"`#actor`"},{"kind":"text","text":" will be replaced with the name of the actor performing this interaction."}]},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":815,"name":"interaction","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":816,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Interaction.ts","line":81,"character":21}],"signatures":[{"id":817,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Interaction.ts","line":81,"character":21}],"parameters":[{"id":818,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":710,"name":"CollectsArtifacts","package":"@serenity-js/core"}]}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"void"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":822,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":27,"character":4}],"signatures":[{"id":823,"name":"new Interaction","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":27,"character":4}],"parameters":[{"id":824,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":825,"name":"location","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"defaultValue":"..."}],"type":{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":634,"name":"Activity.constructor"}}],"inheritedFrom":{"type":"reference","target":633,"name":"Activity.constructor"}},{"id":830,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":38,"character":4}],"signatures":[{"id":831,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":38,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":639,"name":"Activity.instantiationLocation"}}],"inheritedFrom":{"type":"reference","target":638,"name":"Activity.instantiationLocation"}},{"id":826,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/core/src/screenplay/Interaction.ts","line":97,"character":13}],"signatures":[{"id":827,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the provided ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to perform this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/).\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`PerformsActivities`"},{"kind":"text","text":"](/api/core/interface/PerformsActivities/)\\n- ["},{"kind":"code","text":"`UsesAbilities`"},{"kind":"text","text":"](/api/core/interface/UsesAbilities/)\\n- ["},{"kind":"code","text":"`AnswersQuestions`"},{"kind":"text","text":"](/api/core/interface/AnswersQuestions/)"}]},"sources":[{"fileName":"packages/core/src/screenplay/Interaction.ts","line":97,"character":13}],"parameters":[{"id":828,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":641,"name":"Activity.performAs"}}],"overwrites":{"type":"reference","target":640,"name":"Activity.performAs"}},{"id":832,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"signatures":[{"id":833,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"parameters":[{"id":834,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":835,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":836,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":66}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[836]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":64}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":644,"name":"Activity.describedBy"}}],"inheritedFrom":{"type":"reference","target":643,"name":"Activity.describedBy"}},{"id":842,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"signatures":[{"id":843,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":654,"name":"Activity.toString"}}],"inheritedFrom":{"type":"reference","target":653,"name":"Activity.toString"}}],"groups":[{"title":"Constructors","children":[822]},{"title":"Methods","children":[812,830,826,832,842]}],"sources":[{"fileName":"packages/core/src/screenplay/Interaction.ts","line":70,"character":22}],"extendedTypes":[{"type":"reference","target":628,"name":"Activity","package":"@serenity-js/core"}],"extendedBy":[{"type":"reference","target":715,"name":"Debug"},{"type":"reference","target":775,"name":"Log"},{"type":"reference","target":1721,"name":"WaitUntil"}],"permalink":"/api/core/class/Interaction","categories":[],"previousId":655,"nextId":957},{"id":954,"name":"Optional","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"code","text":"`Optional`"},{"kind":"text","text":" is a container object, which holds a value that may or may not be \\"present\\",\\n\\nThe meaning of being \\"present\\" depends on the context and typically means a value that:\\n- is other than "},{"kind":"code","text":"`null`"},{"kind":"text","text":" or "},{"kind":"code","text":"`undefined`"},{"kind":"text","text":"\\n- is retrievable, so retrieving it doesn\'t throw any errors\\n\\nAdditionally, "},{"kind":"code","text":"`Optional`"},{"kind":"text","text":" can also have a context-specific meaning. For example, "},{"kind":"code","text":"`Optional#isPresent()`"},{"kind":"text","text":":\\n- in the context of a "},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":" means that the element exists in the DOM.\\n- in the context of a "},{"kind":"code","text":"`ModalWindow`"},{"kind":"text","text":" means that the modal window is open.\\n- in the case of a REST API response, "},{"kind":"code","text":"`LastResponse.body().books[0].author.name.isPresent()`"},{"kind":"text","text":"\\n  will inform us if a given entry exists (so "},{"kind":"code","text":"`books[0].author.name`"},{"kind":"text","text":"),\\n  and if all the links of the property chain leading to the entry of interest exist too\\n  (so "},{"kind":"code","text":"`books`"},{"kind":"text","text":" is present, and so is "},{"kind":"code","text":"`books[0]`"},{"kind":"text","text":", "},{"kind":"code","text":"`books[0].author`"},{"kind":"text","text":", "},{"kind":"code","text":"`books[0].author.name`"},{"kind":"text","text":")."}]},"children":[{"id":955,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Optional.ts","line":25,"character":4}],"signatures":[{"id":956,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns an ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable) that resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":" when the optional value\\nis present, "},{"kind":"code","text":"`false`"},{"kind":"text","text":" otherwise."}]},"sources":[{"fileName":"packages/core/src/screenplay/Optional.ts","line":25,"character":4}],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Answerable","package":"@serenity-js/core"}}]}],"groups":[{"title":"Methods","children":[955]}],"sources":[{"fileName":"packages/core/src/screenplay/Optional.ts","line":20,"character":17}],"permalink":"/api/core/interface/Optional","categories":[],"previousId":708,"nextId":1047},{"id":957,"name":"Question","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"**Questions** describe how [actors](/api/core/class/Actor/) should query the system under test or the test environment to retrieve some information.\\n\\nQuestions are the core building block of the [Screenplay Pattern](/handbook/design/screenplay-pattern),\\nalong with [actors](/api/core/class/Actor/), [abilities](/api/core/class/Ability/),\\n[interactions](/api/core/class/Interaction/),\\nand [tasks](/api/core/class/Task/).\\n\\n![Screenplay Pattern](/images/design/serenity-js-screenplay-pattern.png)\\n\\nLearn more about:\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/)\\n- ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/)\\n- ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter)\\n\\n## Implementing a basic custom Question\\n\\n"},{"kind":"code","text":"```ts\\n import { actorCalled, AnswersQuestions, UsesAbilities, Question } from \'@serenity-js/core\'\\n import { Ensure, equals } from \'@serenity-js/assertions\'\\n\\n const LastItemOf = <T>(list: T[]): Question<T> =>\\n   Question.about(\'last item from the list\', (actor: AnswersQuestions & UsesAbilities) => {\\n     return list[list.length - 1]\\n   });\\n\\n await actorCalled(\'Quentin\').attemptsTo(\\n   Ensure.that(LastItemOf([1,2,3]), equals(3)),\\n )\\n```"},{"kind":"text","text":"\\n\\n## Implementing a Question that uses an Ability\\n\\nJust like the [interactions](/api/core/class/Interaction/), a ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/)\\nalso can use [actor\'s](/api/core/class/Actor/) [abilities](/api/core/class/Ability/).\\n\\nHere, we use the ability to ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/) to retrieve a property of\\nan HTTP response.\\n\\n"},{"kind":"code","text":"```ts\\n import { AnswersQuestions, UsesAbilities, Question } from \'@serenity-js/core\'\\n import { CallAnApi } from \'@serenity-js/rest\'\\n\\n const TextOfLastResponseStatus = () =>\\n   Question.about<number>(`the text of the last response status`, actor => {\\n     return CallAnApi.as(actor).mapLastResponse(response => response.statusText)\\n   })\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/)\\n- ["},{"kind":"code","text":"`LastResponse`"},{"kind":"text","text":"](/api/rest/class/LastResponse/)\\n\\n## Mapping answers to other questions\\n\\nApart from retrieving information, [questions](/api/core/class/Question/) can be used to transform information retrieved by other questions.\\n\\nHere, we use the factory method ["},{"kind":"code","text":"`Question.about`"},{"kind":"text","text":"](/api/core/class/Question/#about) to produce a question that makes the received [actor](/api/core/class/Actor/)\\nanswer ["},{"kind":"code","text":"`LastResponse.status`"},{"kind":"text","text":"](/api/rest/class/LastResponse/#status) and then compare it against some expected value.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, AnswersQuestions, UsesAbilities, Question } from \'@serenity-js/core\'\\nimport { CallAnApi, LastResponse } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nconst RequestWasSuccessful = () =>\\n  Question.about<number>(`the text of the last response status`, async actor => {\\n    const status = await actor.answer(LastResponse.status());\\n\\n    return status === 200;\\n  })\\n\\nawait actorCalled(\'Quentin\')\\n  .whoCan(CallAnApi.at(\'https://api.example.org/\'));\\n  .attemptsTo(\\n    Send.a(GetRequest.to(\'/books/0-688-00230-7\')),\\n    Ensure.that(RequestWasSuccessful(), isTrue()),\\n  )\\n```"},{"kind":"text","text":"\\n\\nNote that the above example is for demonstration purposes only, Serenity/JS provides an easier way to\\nverify the response status of the ["},{"kind":"code","text":"`LastResponse`"},{"kind":"text","text":"](/api/rest/class/LastResponse/):\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, LastResponse } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Quentin\')\\n  .whoCan(CallAnApi.at(\'https://api.example.org/\'));\\n  .attemptsTo(\\n    Send.a(GetRequest.to(\'/books/0-688-00230-7\')),\\n    Ensure.that(LastResponse.status(), equals(200)),\\n  )\\n```"}]},"children":[{"id":958,"name":"about","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":137,"character":11},{"fileName":"packages/core/src/screenplay/Question.ts","line":143,"character":11},{"fileName":"packages/core/src/screenplay/Question.ts","line":148,"character":11}],"signatures":[{"id":959,"name":"about","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Factory method that simplifies the process of defining custom questions.\\n\\n#### Defining a custom question\\n\\n"},{"kind":"code","text":"```ts\\nimport { Question } from \'@serenity-js/core\'\\n\\nconst EnvVariable = (name: string) =>\\n  Question.about(`the ${ name } env variable`, actor => process.env[name])\\n```"}]},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":137,"character":11}],"typeParameter":[{"id":960,"name":"Answer_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":961,"name":"Supported_Context_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":962,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":963,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":964,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":139,"character":14}],"signatures":[{"id":965,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":139,"character":14}],"parameters":[{"id":966,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"}]}}],"type":{"type":"union","types":[{"type":"reference","target":960,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":960,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}},{"id":967,"name":"metaQuestionBody","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reflection","declaration":{"id":968,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":140,"character":26}],"signatures":[{"id":969,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":140,"character":26}],"parameters":[{"id":970,"name":"answerable","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":961,"name":"Supported_Context_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"union","types":[{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":960,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"},{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":960,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Question","package":"@serenity-js/core"}]}}]}}}],"type":{"type":"reference","target":1064,"typeArguments":[{"type":"reference","target":961,"name":"Supported_Context_Type","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Awaited"},"typeArguments":[{"type":"reference","target":960,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Awaited","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#awaitedtype"}],"name":"MetaQuestionAdapter","package":"@serenity-js/core"}},{"id":971,"name":"about","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":143,"character":11}],"typeParameter":[{"id":972,"name":"Answer_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":973,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":974,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":975,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":145,"character":14}],"signatures":[{"id":976,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":145,"character":14}],"parameters":[{"id":977,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"}]}}],"type":{"type":"union","types":[{"type":"reference","target":972,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":972,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Awaited"},"typeArguments":[{"type":"reference","target":972,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Awaited","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#awaitedtype"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":978,"name":"fromObject","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":225,"character":11}],"signatures":[{"id":979,"name":"fromObject","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Generates a ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter) that recursively resolves\\nany ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable) fields of the provided object,\\nincluding ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable) fields\\nof [nested objects](/api/core/#WithAnswerableProperties).\\n\\nOptionally, the method accepts "},{"kind":"code","text":"`overrides`"},{"kind":"text","text":" to be shallow-merged with the fields of the original "},{"kind":"code","text":"`source`"},{"kind":"text","text":",\\nproducing a new merged object.\\n\\nOverrides are applied from left to right, with subsequent objects overwriting property assignments of the previous ones.\\n\\n#### Resolving an object recursively using "},{"kind":"code","text":"`Question.fromObject`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Question } from \'@serenity-js/core\'\\nimport { Send, PostRequest } from \'@serenity-js/rest\'\\nimport { By, Text, PageElement } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Daisy\')\\n  .whoCan(CallAnApi.at(\'https://api.example.org\'))\\n  .attemptsTo(\\n    Send.a(\\n      PostRequest.to(\'/products/2\')\\n        .with(\\n          Question.fromObject({\\n            name: Text.of(PageElement.located(By.css(\'.name\'))),\\n          })\\n        )\\n      )\\n  );\\n```"},{"kind":"text","text":"\\n\\n#### Merging objects using "},{"kind":"code","text":"`Question.fromObject`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\n import { actorCalled, Question } from \'@serenity-js/core\'\\n import { Send, PostRequest } from \'@serenity-js/rest\'\\n import { By, Text, PageElement } from \'@serenity-js/web\'\\n\\n await actorCalled(\'Daisy\')\\n   .whoCan(CallAnApi.at(\'https://api.example.org\'))\\n   .attemptsTo(\\n     Send.a(\\n       PostRequest.to(\'/products/2\')\\n         .with(\\n           Question.fromObject({\\n             name: Text.of(PageElement.located(By.css(\'.name\'))),\\n             quantity: undefined,\\n           }, {\\n             quantity: 2,\\n           })\\n         )\\n       )\\n   );\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`WithAnswerableProperties`"},{"kind":"text","text":"](/api/core/#WithAnswerableProperties)\\n- ["},{"kind":"code","text":"`RecursivelyAnswered`"},{"kind":"text","text":"](/api/core/#RecursivelyAnswered)\\n- ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable)"}]},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":225,"character":11}],"typeParameter":[{"id":980,"name":"Source_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"object"}}],"parameters":[{"id":981,"name":"source","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":1949,"typeArguments":[{"type":"reference","target":980,"name":"Source_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"WithAnswerableProperties","package":"@serenity-js/core"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":982,"name":"overrides","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Partial"},"typeArguments":[{"type":"reference","target":1949,"typeArguments":[{"type":"reference","target":980,"name":"Source_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"WithAnswerableProperties","package":"@serenity-js/core"}],"name":"Partial","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#partialtype"}],"name":"Answerable","package":"@serenity-js/core"}}}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"reference","target":1635,"typeArguments":[{"type":"reference","target":980,"name":"Source_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"RecursivelyAnswered","package":"@serenity-js/core"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":983,"name":"fromArray","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":250,"character":11}],"signatures":[{"id":984,"name":"fromArray","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Generates a ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter) that resolves\\nany ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable) elements of the provided array."}]},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":250,"character":11}],"typeParameter":[{"id":985,"name":"Source_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":986,"name":"source","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":985,"name":"Source_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Answerable","package":"@serenity-js/core"}}},{"id":987,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1148,"name":"DescriptionFormattingOptions","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"array","elementType":{"type":"reference","target":985,"name":"Source_Type","package":"@serenity-js/core","refersToTypeParameter":true}}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":988,"name":"isAQuestion","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":276,"character":11}],"signatures":[{"id":989,"name":"isAQuestion","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Checks if the value is a ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/)."}]},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":276,"character":11}],"typeParameter":[{"id":990,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":991,"name":"maybeQuestion","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The value to check"}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"maybeQuestion","asserts":false,"targetType":{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":990,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Question","package":"@serenity-js/core"}}}]},{"id":992,"name":"isAMetaQuestion","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":287,"character":11}],"signatures":[{"id":993,"name":"isAMetaQuestion","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Checks if the value is a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/)."}]},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":287,"character":11}],"typeParameter":[{"id":994,"name":"CT","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":995,"name":"RQT","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":957,"typeArguments":[{"type":"intrinsic","name":"unknown"}],"name":"Question","package":"@serenity-js/core"}}],"parameters":[{"id":996,"name":"maybeMetaQuestion","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The value to check"}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"maybeMetaQuestion","asserts":false,"targetType":{"type":"reference","target":1561,"typeArguments":[{"type":"reference","target":994,"name":"CT","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":995,"name":"RQT","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"MetaQuestion","package":"@serenity-js/core"}}}]},{"id":997,"name":"formattedValue","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":314,"character":11}],"signatures":[{"id":998,"name":"formattedValue","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/) that can be composed with any ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable)\\nto produce a single-line description of its value.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Question } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nconst accountDetails = () =>\\n  Question.about(\'account details\', actor => ({ name: \'Alice\', age: 28 }))\\n\\nawait actorCalled(\'Alice\').attemptsTo(\\n  Ensure.that(\\n    Question.formattedValue().of(accountDetails()),\\n    equals(\'{ name: \\"Alice\\", age: 28 }\'),\\n  ),\\n)\\n```"}]},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":314,"character":11}],"parameters":[{"id":999,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1148,"name":"DescriptionFormattingOptions","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1561,"typeArguments":[{"type":"intrinsic","name":"any"},{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}}]},{"id":1000,"name":"value","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":345,"character":11}],"signatures":[{"id":1001,"name":"value","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/) that can be composed with any ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable)\\nto return its value when the answerable is a ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/),\\nor the answerable itself otherwise.\\n\\nThe description of the resulting question is produced by calling ["},{"kind":"code","text":"`Question.describedBy`"},{"kind":"text","text":"](/api/core/class/Question/#describedBy) on the\\nprovided answerable.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Question } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nconst accountDetails = () =>\\n  Question.about(\'account details\', actor => ({ name: \'Alice\', age: 28 }))\\n\\nawait actorCalled(\'Alice\').attemptsTo(\\n  Ensure.that(\\n    Question.description().of(accountDetails()),\\n    equals(\'account details\'),\\n  ),\\n  Ensure.that(\\n    Question.value().of(accountDetails()),\\n    equals({ name: \'Alice\', age: 28 }),\\n  ),\\n)\\n```"}]},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":345,"character":11}],"typeParameter":[{"id":1002,"name":"Answer_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"type":{"type":"reference","target":1561,"typeArguments":[{"type":"reference","target":1002,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":1002,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}}]},{"id":1021,"name":"answeredBy","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":483,"character":13}],"signatures":[{"id":1022,"name":"answeredBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the provided ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to use their [abilities](/api/core/class/Ability/)\\nto answer this question."}]},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":483,"character":13}],"parameters":[{"id":1023,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":1046,"name":"T","package":"@serenity-js/core","qualifiedName":"Question.T","refersToTypeParameter":true}}]},{"id":1024,"name":"describedAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":494,"character":4}],"signatures":[{"id":1025,"name":"describedAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Changes the description of this object, as returned by ["},{"kind":"code","text":"`Describable.describedBy`"},{"kind":"text","text":"](/api/core/class/Describable/#describedBy)\\nand ["},{"kind":"code","text":"`Describable.toString`"},{"kind":"text","text":"](/api/core/class/Describable/#toString)."}]},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":494,"character":4}],"parameters":[{"id":1026,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Replaces the current description according to the following rules:\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is an ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable), it replaces the current description\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/), the current description is passed as "},{"kind":"code","text":"`context`"},{"kind":"text","text":" to "},{"kind":"code","text":"`description.of(context)`"},{"kind":"text","text":", and the result replaces the current description"}]},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":1561,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Awaited"},"typeArguments":[{"type":"reference","target":1046,"name":"T","package":"@serenity-js/core","qualifiedName":"Question.T","refersToTypeParameter":true}],"name":"Awaited","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#awaitedtype"},{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}]}}],"type":{"type":"intrinsic","name":"this"}}]},{"id":1027,"name":"as","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":514,"character":11}],"signatures":[{"id":1028,"name":"as","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Maps this question to one of a different type.\\n\\n"},{"kind":"code","text":"```ts\\nQuestion.about(\'number returned as string\', actor => \'42\')   // returns: QuestionAdapter<string>\\n  .as(Number)                                                // returns: QuestionAdapter<number>\\n```"}]},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":514,"character":11}],"typeParameter":[{"id":1029,"name":"O","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":1030,"name":"mapping","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":1031,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":514,"character":26}],"signatures":[{"id":1032,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":514,"character":26}],"parameters":[{"id":1033,"name":"answer","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Awaited"},"typeArguments":[{"type":"reference","target":1046,"name":"T","package":"@serenity-js/core","qualifiedName":"Question.T","refersToTypeParameter":true}],"name":"Awaited","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#awaitedtype"}}],"type":{"type":"union","types":[{"type":"reference","target":1029,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":1029,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"reference","target":1029,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":1034,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"signatures":[{"id":1035,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"parameters":[{"id":1036,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":1037,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":1038,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":66}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[1038]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":64}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":1136,"name":"Describable.describedBy"}}],"inheritedFrom":{"type":"reference","target":1135,"name":"Describable.describedBy"}},{"id":1044,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"signatures":[{"id":1045,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":1146,"name":"Describable.toString"}}],"inheritedFrom":{"type":"reference","target":1145,"name":"Describable.toString"}}],"groups":[{"title":"Methods","children":[958,978,983,988,992,997,1000,1021,1024,1027,1034,1044]}],"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":119,"character":22}],"typeParameters":[{"id":1046,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"extendedTypes":[{"type":"reference","target":1131,"name":"Describable","package":"@serenity-js/core"}],"extendedBy":[{"type":"reference","target":1306,"name":"List"}],"permalink":"/api/core/class/Question","categories":[],"previousId":811,"nextId":1640},{"id":1047,"name":"QuestionAdapterFieldDecorator","variant":"declaration","kind":2097152,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Describes an object recursively wrapped in ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter) proxies, so that:\\n- both methods and fields of the wrapped object can be used as [questions](/api/core/class/Question/) or [interactions](/api/core/class/Interaction/)\\n- method parameters of the wrapped object will accept ["},{"kind":"code","text":"`Answerable<T>`"},{"kind":"text","text":"](/api/core/#Answerable)"}]},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":537,"character":12}],"typeParameters":[{"id":1058,"name":"Original_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"type":{"type":"mapped","parameter":"Field","parameterType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":1058,"name":"Original_Type","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"typeOperator","operator":"keyof","target":{"type":"reference","typeArguments":[{"type":"reference","target":1058,"name":"Original_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"QuestionStatement","package":"@serenity-js/core"}}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"}},"templateType":{"type":"conditional","checkType":{"type":"indexedAccess","indexType":{"type":"reference","name":"Field","package":"@serenity-js/core","refersToTypeParameter":true},"objectType":{"type":"reference","target":1058,"name":"Original_Type","package":"@serenity-js/core","refersToTypeParameter":true}},"extendsType":{"type":"reflection","declaration":{"id":1048,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":540,"character":37}],"signatures":[{"id":1049,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"parameters":[{"id":1050,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"inferred","name":"OriginalParameters"}}],"type":{"type":"inferred","name":"OriginalMethodResult"}}]}},"trueType":{"type":"conditional","checkType":{"type":"reference","name":"Field","package":"@serenity-js/core","refersToTypeParameter":true},"extendsType":{"type":"union","types":[{"type":"literal","value":"replace"},{"type":"literal","value":"replaceAll"}]},"trueType":{"type":"reflection","declaration":{"id":1051,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":543,"character":18}],"signatures":[{"id":1052,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"parameters":[{"id":1053,"name":"searchValue","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"RegExp"},"name":"RegExp","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/RegExp"}]}],"name":"Answerable","package":"@serenity-js/core"}},{"id":1054,"name":"replaceValue","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]}},"falseType":{"type":"reflection","declaration":{"id":1055,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":544,"character":18}],"signatures":[{"id":1056,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"parameters":[{"id":1057,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"mapped","parameter":"P","parameterType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","name":"OriginalParameters","package":"@serenity-js/core","refersToTypeParameter":true}},"templateType":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Awaited"},"typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","name":"P","package":"@serenity-js/core","refersToTypeParameter":true},"objectType":{"type":"reference","name":"OriginalParameters","package":"@serenity-js/core","refersToTypeParameter":true}}],"name":"Awaited","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#awaitedtype"}],"name":"Answerable","package":"@serenity-js/core"}}}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Awaited"},"typeArguments":[{"type":"reference","name":"OriginalMethodResult","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Awaited","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#awaitedtype"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]}}},"falseType":{"type":"conditional","checkType":{"type":"indexedAccess","indexType":{"type":"reference","name":"Field","package":"@serenity-js/core","refersToTypeParameter":true},"objectType":{"type":"reference","target":1058,"name":"Original_Type","package":"@serenity-js/core","refersToTypeParameter":true}},"extendsType":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"bigint"},{"type":"intrinsic","name":"boolean"},{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"},{"type":"intrinsic","name":"object"}]},"trueType":{"type":"reference","target":1059,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Awaited"},"typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","name":"Field","package":"@serenity-js/core","refersToTypeParameter":true},"objectType":{"type":"reference","target":1058,"name":"Original_Type","package":"@serenity-js/core","refersToTypeParameter":true}}],"name":"Awaited","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#awaitedtype"}],"name":"QuestionAdapter","package":"@serenity-js/core"},"falseType":{"type":"intrinsic","name":"any"}}}},"permalink":"/api/core#QuestionAdapterFieldDecorator","categories":[],"previousId":954,"nextId":1059},{"id":1059,"name":"QuestionAdapter","variant":"declaration","kind":2097152,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A union type representing a proxy object returned by ["},{"kind":"code","text":"`Question.about`"},{"kind":"text","text":"](/api/core/class/Question/#about).\\n\\n["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter) proxies the methods and fields of the wrapped object recursively,\\nallowing them to be used as either a ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/) or an ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/)."}]},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":561,"character":12}],"typeParameters":[{"id":1063,"name":"Answer_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"type":{"type":"intersection","types":[{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":1063,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"},{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":1060,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":1061,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":564,"character":8}],"signatures":[{"id":1062,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":564,"character":8}],"type":{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}}]}],"groups":[{"title":"Methods","children":[1061]}],"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":564,"character":6}]}},{"type":"reference","target":1047,"typeArguments":[{"type":"reference","target":1063,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"QuestionAdapterFieldDecorator","package":"@serenity-js/core"}]},"permalink":"/api/core#QuestionAdapter","categories":[],"previousId":1047,"nextId":1064},{"id":1064,"name":"MetaQuestionAdapter","variant":"declaration","kind":2097152,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An extension of ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter), that in addition to proxying methods and fields\\nof the wrapped object can also act as a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/)."}]},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":573,"character":12}],"typeParameters":[{"id":1065,"name":"Context_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":1066,"name":"Answer_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"type":{"type":"intersection","types":[{"type":"reference","target":1059,"typeArguments":[{"type":"reference","target":1066,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"},{"type":"reference","target":1561,"typeArguments":[{"type":"reference","target":1065,"name":"Context_Type","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":1059,"typeArguments":[{"type":"reference","target":1066,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}]},"permalink":"/api/core#MetaQuestionAdapter","categories":[],"previousId":1059,"nextId":1635},{"id":1635,"name":"RecursivelyAnswered","variant":"declaration","kind":2097152,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Describes a recursively resolved plain JavaScript object with [answerable properties](/api/core/#WithAnswerableProperties).\\n\\nTypically, used in conjunction with ["},{"kind":"code","text":"`Question.fromObject`"},{"kind":"text","text":"](/api/core/class/Question/#fromObject).\\n\\n## Using "},{"kind":"code","text":"`RecursivelyAnswered`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport {\\n  actorCalled, notes, q, Question, QuestionAdapter, WithAnswerableProperties\\n} from \'@serenity-js/core\';\\n\\ninterface RequestConfiguration {\\n  headers: Record<string, string>;\\n}\\n\\nconst requestConfiguration: WithAnswerableProperties<RequestConfiguration> = {\\n  headers: {\\n    Authorization: q`Bearer ${ notes().get(\'authDetails\').token }`\\n  }\\n}\\n\\nconst question: QuestionAdapter<RequestConfiguration> =\\n  Question.fromObject<RequestConfiguration>(requestConfiguration)\\n\\nconst answer = await actorCalled(\'Annie\').answer(question);\\n\\nconst a1: RequestConfiguration = answer;\\nconst a2: RecursivelyAnswered<WithAnswerableProperties<RequestConfiguration>> = answer;\\n\\n// RequestConfiguration === RecursivelyAnswered<WithAnswerableProperties<RequestConfiguration>>\\n```"}]},"sources":[{"fileName":"packages/core/src/screenplay/RecursivelyAnswered.ts","line":38,"character":12}],"typeParameters":[{"id":1636,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"type":{"type":"conditional","checkType":{"type":"reference","target":1636,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true},"extendsType":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"undefined"}]},"trueType":{"type":"reference","target":1636,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true},"falseType":{"type":"conditional","checkType":{"type":"reference","target":1636,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true},"extendsType":{"type":"union","types":[{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"inferred","name":"A"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"},{"type":"reference","target":957,"typeArguments":[{"type":"inferred","name":"A"}],"name":"Question","package":"@serenity-js/core"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"inferred","name":"A"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]},"trueType":{"type":"reference","target":1635,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Awaited"},"typeArguments":[{"type":"reference","name":"A","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Awaited","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#awaitedtype"}],"name":"RecursivelyAnswered","package":"@serenity-js/core"},"falseType":{"type":"conditional","checkType":{"type":"reference","target":1636,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true},"extendsType":{"type":"intrinsic","name":"object"},"trueType":{"type":"mapped","parameter":"K","parameterType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":1636,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true}},"templateType":{"type":"reference","target":1635,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","name":"K","package":"@serenity-js/core","refersToTypeParameter":true},"objectType":{"type":"reference","target":1636,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true}}],"name":"RecursivelyAnswered","package":"@serenity-js/core"}},"falseType":{"type":"reference","target":1636,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true}}}},"permalink":"/api/core#RecursivelyAnswered","categories":[],"previousId":1064,"nextId":1949},{"id":1637,"name":"SerialisedActor","variant":"declaration","kind":256,"flags":{"isExternal":true},"children":[{"id":1638,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/SerialisedActor.ts","line":7,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":1639,"name":"abilities","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/SerialisedActor.ts","line":8,"character":4}],"type":{"type":"array","elementType":{"type":"reference","target":614,"name":"SerialisedAbility","package":"@serenity-js/core"}}}],"groups":[{"title":"Properties","children":[1638,1639]}],"sources":[{"fileName":"packages/core/src/screenplay/SerialisedActor.ts","line":6,"character":17}],"permalink":"/api/core/interface/SerialisedActor","categories":[],"previousId":505,"nextId":566},{"id":1640,"name":"Task","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"**Tasks** model **[sequences of activities](/api/core/class/Activity/)**\\nand help you capture meaningful steps of an [actor](/api/core/class/Actor/) workflow\\nin your domain.\\n\\nTypically, tasks correspond to higher-level, business domain-specific activities\\nlike to "},{"kind":"code","text":"`BookAPlaneTicket`"},{"kind":"text","text":", "},{"kind":"code","text":"`PlaceATrade`"},{"kind":"text","text":", "},{"kind":"code","text":"`TransferFunds`"},{"kind":"text","text":", and so on.\\nHowever, higher-level tasks can and should be composed of lower-level tasks.\\nFor example, a task to "},{"kind":"code","text":"`SignUp`"},{"kind":"text","text":" could be composed of tasks to "},{"kind":"code","text":"`ProvideUsername`"},{"kind":"text","text":" and "},{"kind":"code","text":"`ProvidePassword`"},{"kind":"text","text":".\\n\\nThe lowest-level tasks in your abstraction hierarchy should be composed of [interactions](/api/core/class/Interaction/).\\nFor example, a low-level task to "},{"kind":"code","text":"`ProvideUsername`"},{"kind":"text","text":" could be composed of an interaction to [enter](/api/web/class/Enter/) the value\\ninto a form field and [press](/api/web/class/Press/) the ["},{"kind":"code","text":"`Key.Enter`"},{"kind":"text","text":"](/api/web/class/Key/#Enter).\\n\\nTasks are the core building block of the [Screenplay Pattern](/handbook/design/screenplay-pattern),\\nalong with [actors](/api/core/class/Actor/), [abilities](/api/core/class/Ability/), [interactions](/api/core/class/Interaction/), and [questions](/api/core/class/Question/).\\n\\n![Screenplay Pattern](/images/design/serenity-js-screenplay-pattern.png)\\n\\nLearn more about:\\n- [User-Centred Design: How a 50 year old technique became the key to scalable test automation](https://janmolak.com/user-centred-design-how-a-50-year-old-technique-became-the-key-to-scalable-test-automation-66a658a36555)\\n- [Actors](/api/core/class/Actor/)\\n- [Activities](/api/core/class/Activity/)\\n- [Interactions](/api/core/class/Interaction/)\\n\\n## Defining a task\\n\\n"},{"kind":"code","text":"```ts\\nimport { Answerable, Task, the } from \'@serenity-js/core\'\\nimport { By, Click, Enter, PageElement, Press, Key } from \'@serenity-js/web\'\\n\\nconst SignIn = (username: Answerable<string>, password: Answerable<string>) =>\\n  Task.where(the`#actor signs is as ${ username }`,\\n    Enter.theValue(username).into(PageElement.located(By.id(\'username\'))),\\n    Enter.theValue(password).into(PageElement.located(By.id(\'password\'))),\\n    Press.the(Key.Enter),\\n  );\\n```"},{"kind":"text","text":"\\n\\n## Defining a not implemented task\\n\\nNote that calling ["},{"kind":"code","text":"`Task.where`"},{"kind":"text","text":"](/api/core/class/Task/#where) method without providing the sequence of [activities](/api/core/class/Activity/)\\nproduces a Task that\'s marked as \\"pending\\" in the test report.\\n\\nThis feature is useful when you want to quickly write down a task that will be needed in the scenario,\\nbut you\'re not yet sure what activities it will involve.\\n\\n"},{"kind":"code","text":"```ts\\nimport { Task, the } from \'@serenity-js/core\'\\n\\nconst SignUp = () =>\\n    Task.where(the`#actor signs up for a newsletter`) // no activities provided\\n                                                      // => task marked as pending\\n```"},{"kind":"text","text":"\\n\\n## Composing activities into tasks\\n\\nThe purpose of **tasks** is to help you capture domain vocabulary by **associating domain meaning** with a **sequence of activities**.\\nFrom the implementation perspective, tasks help you give a **meaningful description** to such sequence\\nand provide a way to **easily reuse activities across your code base**.\\n\\n:::tip Remember\\n**Tasks** associate **domain meaning** with a sequence of **lower-level activities** and provide a mechanism for **code reuse**.\\n:::\\n\\nFor example, a task to _find a flight connection from London to New York_ could be modelled as a sequence of the following lower-level activities:\\n- specify origin city of \\"London\\"\\n- specify destination city of \\"New York\\"\\n\\nThe easiest way to implement such task, and any custom Serenity/JS task for this matter, is to use the ["},{"kind":"code","text":"`Task.where`"},{"kind":"text","text":"](/api/core/class/Task/#where) method to compose the lower-level activities:\\n\\n"},{"kind":"code","text":"```typescript\\nimport { Task, the } from \'@serenity-js/core\'\\n\\nconst findFlight = (originCity: string, destinationCity: string) =>\\n    Task.where(the`#actor finds a flight from ${ originCity } to ${ destinationCity }`,   // task goal\\n        specifyOriginCity(originCity),                                                  // activities\\n        specifyDestinationCity(originCity),\\n    )\\n```"},{"kind":"text","text":"\\n\\nFurthermore, if the actor was interacting with a web UI, a task to _specify origin city_ could again be composed of other activities:\\n- click on the "},{"kind":"code","text":"`origin airport`"},{"kind":"text","text":" widget\\n- enter city name of "},{"kind":"code","text":"`London`"},{"kind":"text","text":"\\n- pick the first suggested airport from the list\\n\\nConversely, a task to _specify destination city_ could be composed of:\\n- click on the "},{"kind":"code","text":"`destination airport`"},{"kind":"text","text":" widget\\n- enter city name of "},{"kind":"code","text":"`New York`"},{"kind":"text","text":"\\n- pick the first suggested airport from the list\\n\\nConveniently, [Serenity/JS modules](/handbook/architecture/) provide low-level activities that\\nallow actors to interact with the various interfaces of the system under test.\\nFor example, [Serenity/JS Web module](/api/web) ships with activities such as ["},{"kind":"code","text":"`Click`"},{"kind":"text","text":"](/api/web/class/Click/) or ["},{"kind":"code","text":"`Enter`"},{"kind":"text","text":"](/api/web/class/Enter/),\\nwhich we can incorporate into our task definitions just like any other activities:\\n\\n"},{"kind":"code","text":"```typescript\\nimport { Task, the } from \'@serenity-js/core\'\\nimport { Click, Enter, Key, Press } from \'@serenity-js/web\'\\n\\nimport { FlightFinder } from \'./ui/flight-finder\'\\n\\nconst specifyOriginCity = (originCity: string) =>\\n    Task.where(the`#actor specifies origin city of ${ originCity }`,\\n        Click.on(FlightFinder.originAirport),\\n        Enter.theValue(originCity).into(FlightFinder.originAirport),\\n        Press.the(Key.ArrowDown, Key.Enter).into(FlightFinder.originAirport),\\n    )\\n\\nconst specifyDestinationCity = (destinationCity: string) =>\\n    Task.where(the`#actor specifies destination city of ${ destinationCity }`,\\n        Click.on(FlightFinder.destinationAirport),\\n        Enter.theValue(destinationCity).into(FlightFinder.destinationAirport),\\n        Press.the(Key.ArrowDown, Key.Enter).into(FlightFinder.destinationAirport),\\n    )\\n```"},{"kind":"text","text":"\\n\\nAs you can already see, tasks to _specify origin city_ and _specify destination city_ are almost identical,\\nsave for the name of the widget and the text value the actor is supposed to enter.\\nSerenity/JS **task-based code reuse model** means that we can clean up such duplicated implementation\\nby **extracting a parameterised task**, in this case called "},{"kind":"code","text":"`specifyCity`"},{"kind":"text","text":":\\n\\n"},{"kind":"code","text":"```typescript\\nimport { Task, the } from \'@serenity-js/core\'\\nimport { Click, Enter, Key, PageElement, Press } from \'@serenity-js/web\'\\n\\nimport { FlightFinder } from \'./ui/flight-finder\'\\n\\nconst specifyOriginCity = (originCity: string) =>\\n    Task.where(the`#actor specifies origin city of ${ originCity }`,\\n        specifyCity(originCity, FlightFinder.originAirport)\\n    )\\n\\nconst specifyDestinationCity = (destinationCity: string) =>\\n    Task.where(the`#actor specifies destination city of ${ destinationCity }`,\\n        specifyCity(destinationCity, FlightFinder.destinationAirport),\\n    )\\n\\nconst specifyCity = (cityName: string, widget: PageElement) =>\\n    Task.where(the`#actor specifies city of ${ cityName } in ${ widget }`,\\n        Click.on(widget),\\n        Enter.theValue(cityName).into(widget),\\n        Press.the(Key.ArrowDown, Key.Enter).into(widget),\\n    )\\n```"},{"kind":"text","text":"\\n\\nAs you work with Serenity/JS, you\'ll notice that the ideas of **functional decomposition**, so thinking of tasks as sequences of lower-level activities,\\nas well as **functional composition**, so implementing reusable activities and composing them into higher-level tasks,\\nare at the heart of the Screenplay Pattern. You\'ll also notice that the entire Serenity/JS framework does it best to help your team follow this approach.\\n\\n:::info The power of the Serenity/JS task-based code reuse model\\nWhat makes the Serenity/JS task-based code reuse model so **powerful at scale** is the observation that:\\n- for most software systems, a vast number of **diverse test scenarios** can be composed of a relatively **small number of high-level activities**\\n- all **high-level activities** can be composed of a relatively **small number of lower-level activities**\\n- in a reasonably consistently-designed software system, most lower-level activities tend to be similar and rather consistent across the various aspects of a given interface.\\nIn particular, **there are only so many ways** one can interact with a UI button or send an HTTP request to a web service.\\n\\nWhat this means in practice is that by investing your time in properly designing **relatively few reusable tasks**\\nto test your system, you give your team a **significant productivity boost** and **leverage** when producing high-level test scenarios.\\n\\nOn top of that, this design approach results not only in **simpler test scenarios** that reduce\\nthe [cognitive load](https://en.wikipedia.org/wiki/Cognitive_load) on the reader as they require them to process\\nthe scenario only one level of abstraction at the time.\\nIt also allows for the test to **take shortcuts** in well-defined points of the workflow - use a REST API request to create\\na test user account instead of going through the registration form.\\n:::"}]},"children":[{"id":1641,"name":"where","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Task.ts","line":186,"character":11}],"signatures":[{"id":1642,"name":"where","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A factory method that makes defining custom tasks more convenient."}]},"sources":[{"fileName":"packages/core/src/screenplay/Task.ts","line":186,"character":11}],"parameters":[{"id":1643,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A description to be used when reporting this task"}]},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":1644,"name":"activities","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"comment":{"summary":[{"kind":"text","text":"A sequence of lower-level activities that constitute this task"}]},"type":{"type":"array","elementType":{"type":"reference","target":628,"name":"Activity","package":"@serenity-js/core"}}}],"type":{"type":"reference","target":1640,"name":"Task","package":"@serenity-js/core"}}]},{"id":1648,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":27,"character":4}],"signatures":[{"id":1649,"name":"new Task","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":27,"character":4}],"parameters":[{"id":1650,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":1651,"name":"location","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"defaultValue":"..."}],"type":{"type":"reference","target":1640,"name":"Task","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":634,"name":"Activity.constructor"}}],"inheritedFrom":{"type":"reference","target":633,"name":"Activity.constructor"}},{"id":1656,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":38,"character":4}],"signatures":[{"id":1657,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":38,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":639,"name":"Activity.instantiationLocation"}}],"inheritedFrom":{"type":"reference","target":638,"name":"Activity.instantiationLocation"}},{"id":1652,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/core/src/screenplay/Task.ts","line":202,"character":13}],"signatures":[{"id":1653,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the provided ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to perform this ["},{"kind":"code","text":"`Task`"},{"kind":"text","text":"](/api/core/class/Task/)."}]},"sources":[{"fileName":"packages/core/src/screenplay/Task.ts","line":202,"character":13}],"parameters":[{"id":1654,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"#### Learn more\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`PerformsActivities`"},{"kind":"text","text":"](/api/core/interface/PerformsActivities/)\\n- ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/)"}]},"type":{"type":"reference","target":623,"name":"PerformsActivities","package":"@serenity-js/core"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":641,"name":"Activity.performAs"}}],"overwrites":{"type":"reference","target":640,"name":"Activity.performAs"}},{"id":1658,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"signatures":[{"id":1659,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"parameters":[{"id":1660,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":1661,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":1662,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":66}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[1662]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":64}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":644,"name":"Activity.describedBy"}}],"inheritedFrom":{"type":"reference","target":643,"name":"Activity.describedBy"}},{"id":1668,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"signatures":[{"id":1669,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":654,"name":"Activity.toString"}}],"inheritedFrom":{"type":"reference","target":653,"name":"Activity.toString"}}],"groups":[{"title":"Constructors","children":[1648]},{"title":"Methods","children":[1641,1656,1652,1658,1668]}],"sources":[{"fileName":"packages/core/src/screenplay/Task.ts","line":175,"character":22}],"extendedTypes":[{"type":"reference","target":628,"name":"Activity","package":"@serenity-js/core"}],"extendedBy":[{"type":"reference","target":1080,"name":"Check"}],"permalink":"/api/core/class/Task","categories":[],"previousId":957,"nextId":508},{"id":1949,"name":"WithAnswerableProperties","variant":"declaration","kind":2097152,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Describes a plain JavaScript object with ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable) properties.\\nTypically, used in conjunction with ["},{"kind":"code","text":"`RecursivelyAnswered`"},{"kind":"text","text":"](/api/core/#RecursivelyAnswered) and ["},{"kind":"code","text":"`Question.fromObject`"},{"kind":"text","text":"](/api/core/class/Question/#fromObject).\\n\\n"},{"kind":"code","text":"```ts\\nimport {\\n  actorCalled, notes, q, Question, QuestionAdapter, WithAnswerableProperties\\n} from \'@serenity-js/core\';\\n\\ninterface RequestConfiguration {\\n  headers: Record<string, string>;\\n}\\n\\nconst requestConfiguration: WithAnswerableProperties<RequestConfiguration> = {\\n  headers: {\\n    Authorization: q`Bearer ${ notes().get(\'authDetails\').token }`\\n  }\\n}\\n\\nconst question: QuestionAdapter<RequestConfiguration> =\\n    Question.fromObject<RequestConfiguration>(requestConfiguration)\\n\\nconst answer: RequestConfiguration = await actorCalled(\'Annie\').answer(question);\\n```"}]},"sources":[{"fileName":"packages/core/src/screenplay/WithAnswerableProperties.ts","line":31,"character":12}],"typeParameters":[{"id":1950,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"type":{"type":"conditional","checkType":{"type":"reference","target":1950,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true},"extendsType":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"undefined"}]},"trueType":{"type":"reference","target":1950,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true},"falseType":{"type":"conditional","checkType":{"type":"reference","target":1950,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true},"extendsType":{"type":"union","types":[{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"inferred","name":"A"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"},{"type":"reference","target":957,"typeArguments":[{"type":"inferred","name":"A"}],"name":"Question","package":"@serenity-js/core"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"inferred","name":"A"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]},"trueType":{"type":"reference","target":706,"typeArguments":[{"type":"reference","name":"A","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Answerable","package":"@serenity-js/core"},"falseType":{"type":"conditional","checkType":{"type":"reference","target":1950,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true},"extendsType":{"type":"intrinsic","name":"object"},"trueType":{"type":"mapped","parameter":"K","parameterType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":1950,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true}},"templateType":{"type":"reference","target":1949,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","name":"K","package":"@serenity-js/core","refersToTypeParameter":true},"objectType":{"type":"reference","target":1950,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true}}],"name":"WithAnswerableProperties","package":"@serenity-js/core"}},"falseType":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":1950,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Answerable","package":"@serenity-js/core"}}}},"permalink":"/api/core#WithAnswerableProperties","categories":[],"previousId":1635,"nextId":1072},{"id":508,"name":"Ability","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"**Abilities** enable [actors](/api/core/class/Actor/)\\nto perform [interactions](/api/core/class/Interaction/) with the system under test\\nand answer [questions](/api/core/class/Question/) about its state.\\n\\nFrom the technical perspective, **abilities** act as **wrappers** around any **integration libraries** required\\nto communicate with the external interfaces of system under test,\\nsuch as [web browser drivers](/api/web/class/BrowseTheWeb/) or an [HTTP client](/api/rest/class/CallAnApi/).\\nThey also enable [portability](/handbook/design/portable-test-code)\\nof your test code across such integration libraries.\\n\\nAbilities are the core building block of the [Screenplay Pattern](/handbook/design/screenplay-pattern),\\nalong with [actors](/api/core/class/Actor/), [interactions](/api/core/class/Interaction/),\\n[questions](/api/core/class/Question/), and [tasks](/api/core/class/Task/).\\n\\n![Screenplay Pattern](/images/design/serenity-js-screenplay-pattern.png)\\n\\nLearn more about:\\n- [Actors](/api/core/class/Actor/)\\n- [Configuring actors using Casts](/api/core/class/Cast/)\\n- [Interactions](/api/core/class/Interaction/)\\n- [Questions](/api/core/class/Question/)\\n- [Web testing](/handbook/web-testing/)\\n- [API testing](/handbook/api-testing/)\\n- [Mobile testing](/handbook/mobile-testing/)\\n\\n## Giving actors the abilities to interact\\n\\nSerenity/JS actors are capable of interacting with **any interface** of the system under test,\\nbe it a [web UI](/handbook/web-testing/), a [mobile app](/handbook/mobile-testing/), a [web service](/handbook/api-testing/),\\nor [anything else](/api/core/class/Ability/) that a Node.js program can talk to.\\nThis flexibility is enabled by a mechanism called _**abilities**_\\nand achieved without introducing any unnecessary dependencies to your code base thanks to the [modular architecture](/handbook/architecture/) of Serenity/JS.\\n\\n:::tip Remember\\n**Actors** have **abilities** that enable them to **perform interactions** and **answer questions**.\\n:::\\n\\nFrom the technical perspective, an **ability** is an [adapter](https://en.wikipedia.org/wiki/Adapter_pattern)\\naround an interface-specific integration library, such as a web browser driver, an HTTP client, a database client, and so on.\\nYou give an actor an ability, and it\'s the ability\'s responsibility to provide a consistent API around the integration library and deal with any of its quirks.\\nAbilities **encapsulate integration libraries** and handle their [configuration and initialisation](/api/core/interface/Initialisable/),\\nthe process of [freeing up any resources](/api/core/interface/Discardable/) they hold,\\nas well as managing any state associated with the library.\\n\\n### Portable interactions with web interfaces\\n\\nTo make your Serenity/JS actors interact with web interfaces,\\nyou call the ["},{"kind":"code","text":"`Actor.whoCan`"},{"kind":"text","text":"](/api/core/class/Actor#whoCan) method and give them an implementation of the ability to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb),\\nspecific to your web integration tool of choice.\\n\\nNote how ["},{"kind":"code","text":"`BrowseTheWebWithPlaywright`"},{"kind":"text","text":"](/api/playwright/class/BrowseTheWebWithPlaywright/), ["},{"kind":"code","text":"`BrowseTheWebWithWebdriverIO`"},{"kind":"text","text":"](/api/webdriverio/class/BrowseTheWebWithWebdriverIO/), and ["},{"kind":"code","text":"`BrowseTheWebWithProtractor`"},{"kind":"text","text":"](/api/protractor/class/BrowseTheWebWithProtractor/)\\nall **extend** the base ability to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/).\\n\\n#### Playwright\\n\\n"},{"kind":"code","text":"```typescript\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { BrowseTheWebWithPlaywright } from \'@serenity-js/playwright\'   // Serenity/JS integration module\\nimport { chromium } from \'playwright\'\\n\\nconst browser = await chromium.launch({ headless: true })              // integration library\\n\\nawait actorCalled(\'Trevor\')                                            // generic actor\\n  .whoCan(BrowseTheWebWithPlaywright.using(browser))                   // tool-specific ability\\n```"},{"kind":"text","text":"\\n\\n#### WebdriverIO\\n\\n"},{"kind":"code","text":"```typescript\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { BrowseTheWebWithWebdriverIO } from \'@serenity-js/webdriverio\' // Serenity/JS integration module\\n\\nawait actorCalled(\'Trevor\')                                            // generic actor\\n  .whoCan(BrowseTheWebWithWebdriverIO.using(browser))                  // tool-specific ability\\n```"},{"kind":"text","text":"\\n\\n#### Protractor\\n\\n"},{"kind":"code","text":"```typescript\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { BrowseTheWebWithProtractor } from \'@serenity-js/protractor\'   // Serenity/JS integration module\\nimport { protractor } from \'protractor\'                                // integration library\\n\\nawait actorCalled(\'Trevor\')                                            // generic actor\\n  .whoCan(BrowseTheWebWithProtractor.using(protractor.browser))        // tool-specific ability\\n```"},{"kind":"text","text":"\\n\\n### Retrieving an ability\\n\\nUse ["},{"kind":"code","text":"`PerformActivities`"},{"kind":"text","text":"](/api/core/class/PerformActivities/)} to retrieve an ability in a custom ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/) or ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/) implementation.\\n\\nHere, "},{"kind":"code","text":"`Ability`"},{"kind":"text","text":" can be the integration library-specific class, for example ["},{"kind":"code","text":"`BrowseTheWebWithPlaywright`"},{"kind":"text","text":"](/api/playwright/class/BrowseTheWebWithPlaywright/),\\nor its library-agnostic parent class, like ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/).\\n\\nTo make your code portable across the various integration libraries, retrieve the ability\\nusing the library-agnostic parent class:\\n\\n"},{"kind":"code","text":"```typescript\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { BrowseTheWeb } from \'@serenity-js/web\' // Serenity/JS web module\\n\\nconst actor    = actorCalled(\'Trevor\')\\nconst ability  = await BrowseTheWeb.as(actor)   // retrieve implementation of BrowseTheWeb\\n```"},{"kind":"text","text":"\\n\\nAs you can already see, providing **encapsulation** and a **cleaner API** around the integration libraries are not the only reasons why you\'d want to use the abilities.\\n\\nAnother reason is that the Serenity/JS implementation of the Screenplay Pattern lets you **completely decouple the actor from the integration libraries**\\nand make the abilities of the same type **interchangeable**.\\nFor example, [Serenity/JS web modules](/handbook/web-testing/serenity-js-web-modules) offer an abstraction that lets you switch between web integration libraries\\nas vastly different as Selenium, WebdriverIO, or Playwright without having to change _anything whatsoever_ in your test scenarios.\\n\\nWhat this means is that your test code can become [portable and reusable across projects and teams](/handbook/design/portable-test-code),\\neven if they don\'t use the same low-level integration tools. It also helps you to **avoid vendor lock-in**, as you can wrap any third-party integration library\\ninto an ability and swap it out for another implementation if you need to.\\n\\nHowever, Serenity/JS **doesn\'t prevent you** from using the integration libraries directly.\\nWhen you need to, you can use a library-specific ability like ["},{"kind":"code","text":"`BrowseTheWebWithPlaywright`"},{"kind":"text","text":"](/api/playwright/class/BrowseTheWebWithPlaywright/)\\nto trade portability for access to library-specific low-level methods:\\n\\n"},{"kind":"code","text":"```typescript\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { BrowseTheWebWithPlaywright, PlaywrightPage } from \'@serenity-js/playwright\'\\n\\nconst actor          = actorCalled(\'Trevor\')\\nconst ability        = await BrowseTheWebWithPlaywright.as(actor)\\nconst page           = (await ability.currentPage()) as PlaywrightPage;\\nconst playwrightPage = await page.nativePage();\\n// use any Playwright-specific APIs on playwrightPage\\n```"},{"kind":"text","text":"\\n\\n:::warning Using integration library-specific APIs reduces portability\\nWhile Serenity/JS provides you with escape hatches and ways to access the low-level APIs of your integration libraries,\\ndoing so can reduce the portability of your code. Only do it when you have a good reason to trade portability for low-level access.\\n:::\\n\\n\\n## Associating actors with data\\n\\nOne more reason to use abilities is that abilities can also help you to **associate actors with data** they need to perform their activities.\\nFor example, a commonly used ability is one to ["},{"kind":"code","text":"`TakeNotes`"},{"kind":"text","text":"](/api/core/class/TakeNotes), which allows your actors to start the test scenario\\nequipped with some data set, or record information about what they see in the test scenario so that they can act upon it later:\\n\\n"},{"kind":"code","text":"```typescript\\nimport { actorCalled, Notepad, TakeNotes } from \'@serenity-js/core\'\\n\\ninterface MyNotes {\\n  firstName: string;\\n  lastName: string;\\n  emailAddress: string;\\n}\\n\\nawait actorCalled(\'Trevor\')\\n  .whoCan(\\n    TakeNotes.using(Notepad.with<MyNotes>({\\n      firstName: \'Trevor\',\\n      lastName: \'Traveller\',\\n      emailAddress: \'Trevor.Traveller@example.org\',\\n    }))\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Actors with multiple abilities\\n\\nOf course, an actor can have **any number of abilities** they need to play their role.\\nFor example, it is quite common for an actor to be able to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb), ["},{"kind":"code","text":"`TakeNotes`"},{"kind":"text","text":"](/api/core/class/TakeNotes), and ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi):\\n\\n"},{"kind":"code","text":"```typescript\\nimport { actorCalled, Notepad, TakeNotes } from \'@serenity-js/core\'\\nimport { BrowseTheWebWithPlaywright } from \'@serenity-js/playwright\'\\nimport { CallAnApi } from \'@serenity-js/rest\'\\nimport { chromium } from \'playwright\'\\n\\nconst browser = await chromium.launch({ headless: true })\\nconst baseURL = \'https://example.org\'\\n\\ninterface MyNotes {\\n  firstName: string;\\n  lastName: string;\\n  emailAddress: string;\\n}\\n\\nawait actorCalled(\'Trevor\')\\n  .whoCan(\\n    BrowseTheWebWithPlaywright.using(browser, { baseURL }),\\n    CallAnApi.at(`${ baseURL }/api`),\\n    TakeNotes.using(Notepad.with<MyNotes>({\\n      firstName: \'Trevor\',\\n      lastName: \'Traveller\',\\n      emailAddress: \'Trevor.Traveller@example.org\',\\n    }))\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Writing custom abilities\\n\\nIf your system under test provides a type of interface that Serenity/JS doesn\'t support yet,\\nyou might want to implement a custom ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/), as well as [interactions](/api/core/class/Interaction/)\\nand [questions](/api/core/class/Question/) to interact with it.\\n\\nThe best way to start with that is for you to review the examples in the [Screenplay Pattern API docs](/api/core/class/Ability/),\\nas well as the [Serenity/JS code base on GitHub](https://github.com/serenity-js/serenity-js/tree/main/packages).\\nAlso note that all the [Serenity/JS modules](/handbook/architecture/)\\nhave their automated tests written in such a way to not only provide an **extremely high test coverage** for the framework itself,\\nbut to be **accessible** and act as a **reference implementation for you** to create your own integrations.\\n\\nIf you believe that the custom integration you\'ve developed could benefit the wider Serenity/JS community,\\nplease consider open-sourcing it yourself, or [contributing it](/community/contributing/) to the main framework.\\n\\n[![Join Serenity/JS Community Chat](https://img.shields.io/badge/Chat-Serenity%2FJS%20Community-FBD30B?logo=matrix)](https://matrix.to/#/#serenity-js:gitter.im)\\n\\n### Defining a custom ability to "},{"kind":"code","text":"`MakePhoneCalls`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport { Ability, actorCalled, Interaction } from \'@serenity-js/core\'\\n\\nclass MakePhoneCalls extends Ability {\\n\\n  // A static method is typically used to inject a client of a given interface\\n  // and instantiate the ability, for example:\\n  //   actorCalled(\'Phil\').whoCan(MakePhoneCalls.using(phone))\\n  static using(phone: Phone) {\\n    return new MakePhoneCalls(phone);\\n  }\\n\\n  // Abilities can hold state, for example: the client of a given interface,\\n  // additional configuration, or the result of the last interaction with a given interface.\\n  protected constructor(private readonly phone: Phone) {\\n  }\\n\\n  // Abilities expose methods that enable Interactions to call the system under test,\\n  // and Questions to retrieve information about its state.\\n  dial(phoneNumber: string): Promise<void> {\\n    // ...\\n  }\\n}\\n```"},{"kind":"text","text":"\\n\\n### Defining a custom interaction using the custom ability\\n\\n"},{"kind":"code","text":"```ts\\nimport { Answerable, Interaction, the } from \'@serenity-js/core\'\\n\\n// A custom interaction using the actor\'s ability:\\nconst Call = (phoneNumber: Answerable<string>) =>\\n  Interaction.where(the`#actor calls ${ phoneNumber }`, async actor => {\\n    await MakePhoneCalls.as(actor).dial(phoneNumber)\\n  })\\n```"},{"kind":"text","text":"\\n\\n### Using the custom ability and interaction in a test scenario\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\n\\nawait actorCalled(\'Connie\')\\n  .whoCan(MakePhoneCalls.using(phone))\\n  .attemptsTo(\\n    Call(phoneNumber)\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Using auto-initialisable and auto-discardable abilities\\n\\nAbilities that rely on resources that need to be initialised before they can be used,\\nor discarded before the actor is dismissed can implement\\nthe ["},{"kind":"code","text":"`Initialisable`"},{"kind":"text","text":"](/api/core/interface/Initialisable/)\\nor ["},{"kind":"code","text":"`Discardable`"},{"kind":"text","text":"](/api/core/interface/Discardable/) interfaces, respectively.\\n\\n### Defining a custom ability to "},{"kind":"code","text":"`QueryPostgresDB`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport {\\n  Ability, actorCalled, Discardable, Initialisable, Question, UsesAbilities,\\n} from \'@serenity-js/core\'\\n\\n// Some low-level interface-specific client we want the Actor to use,\\n// for example a PostgreSQL database client:\\nconst { Client } = require(\'pg\');\\n\\n// A custom Ability to give an Actor access to the low-level client:\\nclass QueryPostgresDB\\n  extends Ability\\n  implements Initialisable, Discardable\\n{\\n  constructor(private readonly client) {\\n  }\\n\\n  // Invoked by Serenity/JS upon the first invocation of `actor.attemptsTo`\\n  initialise(): Promise<void> | void {\\n    return this.client.connect();\\n  }\\n\\n  // Used to ensure that the Ability is not initialised more than once\\n  isInitialised(): boolean {\\n    return this.client._connected;\\n  }\\n\\n  // Discards any resources the Ability uses when the Actor is dismissed,\\n  // so when the Stage receives a SceneFinishes event for scenario-scoped actor,\\n  // or TestRunFinishes for cross-scenario-scoped actors\\n  discard(): Promise<void> | void {\\n    return this.client.end();\\n  }\\n\\n  // Any custom integration APIs the Ability, should make available to the Actor.\\n  // Here, we want the ability to enable the actor to query the database.\\n  query(query: string) {\\n    return this.client.query(query);\\n  }\\n\\n  // ... other custom integration APIs\\n}\\n```"},{"kind":"text","text":"\\n\\n### Defining a custom question using the custom ability\\n\\n"},{"kind":"code","text":"```ts\\n// A custom Question to allow the Actor query the database\\nconst CurrentDBUser = () =>\\n  Question.about(\'current db user\', actor =>\\n    QueryPostgresDB.as(actor)\\n      .query(\'SELECT current_user\')\\n      .then(result => result.rows[0].current_user)\\n  );\\n```"},{"kind":"text","text":"\\n\\n### Using the custom ability and question in a test scenario\\n\\n"},{"kind":"code","text":"```ts\\n// Example test scenario where the Actor uses the Ability to QueryPostgresDB\\n// to assert on the username the connection has been established with\\n\\nimport { describe, it } from \'mocha\'\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\ndescribe(\'Serenity/JS\', () => {\\n  it(\'can initialise and discard abilities automatically\', () =>\\n    actorCalled(\'Debbie\')\\n      .whoCan(new QueryPostgresDB(new Client()))\\n      .attemptsTo(\\n        Ensure.that(CurrentDBUser(), equals(\'jan\'))\\n      ))\\n})\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`AbilityType`"},{"kind":"text","text":"](/api/core/#AbilityType)\\n- ["},{"kind":"code","text":"`Initialisable`"},{"kind":"text","text":"](/api/core/interface/Initialisable/)\\n- ["},{"kind":"code","text":"`Discardable`"},{"kind":"text","text":"](/api/core/interface/Discardable/)\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\n- ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/)\\n- ["},{"kind":"code","text":"`TakeNotes`"},{"kind":"text","text":"](/api/core/class/TakeNotes/)"}]},"children":[{"id":509,"name":"as","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Ability.ts","line":402,"character":11}],"signatures":[{"id":510,"name":"as","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Used to access an [actor\'s](/api/core/class/Actor/) [ability](/api/core/class/Ability/) of the given type\\nfrom within the ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/) and ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/) classes.\\n\\n#### Retrieving an ability in an interaction definition\\n\\n"},{"kind":"code","text":"```ts\\nimport { Actor, Interaction } from \'@serenity-js/core\'\\nimport { BrowseTheWeb, Page } from \'@serenity-js/web\'\\n\\nexport const ClearLocalStorage = () =>\\n  Interaction.where(`#actor clears local storage`, async (actor: Actor) => {\\n    const browseTheWeb: BrowseTheWeb = BrowseTheWeb.as(actor)    // retrieve an ability\\n    const page: Page = await browseTheWeb.currentPage()\\n    await page.executeScript(() => window.localStorage.clear())\\n  })\\n```"},{"kind":"text","text":"\\n\\n#### Retrieving an ability in a question definition\\n\\n"},{"kind":"code","text":"```ts\\nimport { Actor, Question } from \'@serenity-js/core\'\\nimport { BrowseTheWeb, Page } from \'@serenity-js/web\'\\nimport { CallAnApi } from \'@serenity-js/rest\'\\n\\nconst LocalStorage = {\\n  numberOfItems: () =>\\n    Question.about<number>(`number of items in local storage`, async (actor: Actor) => {\\n      const browseTheWeb: BrowseTheWeb = BrowseTheWeb.as(actor)    // retrieve an ability\\n      const page: Page = await browseTheWeb.currentPage()\\n      return page.executeScript(() => window.localStorage.length)\\n    })\\n}\\n```"}]},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Ability.ts","line":402,"character":11}],"typeParameter":[{"id":511,"name":"A","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":508,"name":"Ability","package":"@serenity-js/core"}}],"parameters":[{"id":512,"name":"this","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":529,"typeArguments":[{"type":"reference","target":511,"name":"A","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"AbilityType","package":"@serenity-js/core"}},{"id":513,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"}}],"type":{"type":"reference","target":511,"name":"A","package":"@serenity-js/core","refersToTypeParameter":true}}]},{"id":514,"name":"abilityType","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Ability.ts","line":443,"character":11}],"signatures":[{"id":515,"name":"abilityType","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the most abstract type of this Ability class,\\nspecifically the first class in the inheritance hierarchy that directly extends the "},{"kind":"code","text":"`Ability`"},{"kind":"text","text":" class.\\n\\n"},{"kind":"code","text":"```ts\\nimport { Ability } from \'@serenity-js/core\';\\n\\nclass MyAbility extends Ability {}\\nclass MySpecialisedAbility extends MyAbility {}\\n\\nMyAbility.abilityType();            // returns MyAbility\\nMySpecialisedAbility.abilityType(); // returns MyAbility\\n```"}]},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Ability.ts","line":443,"character":11}],"type":{"type":"reference","target":529,"typeArguments":[{"type":"reference","target":508,"name":"Ability","package":"@serenity-js/core"}],"name":"AbilityType","package":"@serenity-js/core"}}]},{"id":523,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":524,"name":"new Ability","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":508,"name":"Ability","package":"@serenity-js/core"}}]},{"id":525,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Ability.ts","line":414,"character":4}],"signatures":[{"id":526,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a JSON representation of the ability and its current state, if available.\\nThe purpose of this method is to enable reporting the state of the ability in a human-readable format,\\nrather than to serialise and deserialise the ability itself."}]},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Ability.ts","line":414,"character":4}],"type":{"type":"reference","target":614,"name":"SerialisedAbility","package":"@serenity-js/core"}}]},{"id":527,"name":"abilityType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Ability.ts","line":461,"character":4}],"signatures":[{"id":528,"name":"abilityType","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the most abstract type of this Ability instance,\\nspecifically the first class in the inheritance hierarchy that directly extends the "},{"kind":"code","text":"`Ability`"},{"kind":"text","text":" class.\\n\\n"},{"kind":"code","text":"```ts\\nimport { Ability } from \'@serenity-js/core\';\\n\\nclass MyAbility extends Ability {}\\nclass MySpecialisedAbility extends MyAbility {}\\n\\nnew MyAbility().abilityType();            // returns MyAbility\\nnew MySpecialisedAbility().abilityType(); // returns MyAbility\\n```"}]},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Ability.ts","line":461,"character":4}],"type":{"type":"reference","target":529,"typeArguments":[{"type":"reference","target":508,"name":"Ability","package":"@serenity-js/core"}],"name":"AbilityType","package":"@serenity-js/core"}}]}],"groups":[{"title":"Constructors","children":[523]},{"title":"Methods","children":[509,514,525,527]}],"sources":[{"fileName":"packages/core/src/screenplay/abilities/Ability.ts","line":363,"character":22}],"extendedBy":[{"type":"reference","target":472,"name":"RaiseErrors"},{"type":"reference","target":542,"name":"AnswerQuestions"},{"type":"reference","target":579,"name":"PerformActivities"},{"type":"reference","target":929,"name":"TakeNotes"},{"type":"reference","target":1670,"name":"ScheduleWork"}],"permalink":"/api/core/class/Ability","categories":[],"previousId":1640,"nextId":1951},{"id":529,"name":"AbilityType","variant":"declaration","kind":2097152,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An interface describing the static access method that every ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/) class\\nneeds to provide in order to be accessible from within the [interactions](/api/core/class/Interaction/).\\n\\n#### Retrieving an ability from an interaction\\n\\n"},{"kind":"code","text":"```ts\\nimport { Ability, Answerable, actorCalled, Interaction, the } from \'@serenity-js/core\';\\n\\nclass MakePhoneCalls extends Ability {\\n  static using(phone: Phone) {\\n    return new MakePhoneCalls(phone);\\n  }\\n\\n  protected constructor(private readonly phone: Phone) {\\n  }\\n\\n  // some method that allows us to interact with the external interface of the system under test\\n  dial(phoneNumber: string): Promise<void> {\\n    // ...\\n  }\\n}\\n\\nconst Call = (phoneNumber: Answerable<string>) =>\\n  Interaction.where(the`#actor calls ${ phoneNumber }`, async actor => {\\n    await MakePhoneCalls.as(actor).dial(phoneNumber)\\n  });\\n\\nawait actorCalled(\'Connie\')\\n  .whoCan(MakePhoneCalls.using(phone))\\n  .attemptsTo(\\n    Call(phoneNumber),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/)\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/)"}]},"sources":[{"fileName":"packages/core/src/screenplay/abilities/AbilityType.ts","line":46,"character":12}],"typeParameters":[{"id":541,"name":"A","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":508,"name":"Ability","package":"@serenity-js/core"}}],"type":{"type":"intersection","types":[{"type":"reflection","declaration":{"id":530,"name":"__type","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/AbilityType.ts","line":47,"character":5}],"signatures":[{"id":531,"name":"__type","variant":"signature","kind":16384,"flags":{"isExternal":true,"isAbstract":true},"parameters":[{"id":532,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"reference","target":541,"name":"A","package":"@serenity-js/core","refersToTypeParameter":true}}]}},{"type":"reflection","declaration":{"id":533,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":534,"name":"as","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/AbilityType.ts","line":48,"character":8}],"signatures":[{"id":535,"name":"as","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/AbilityType.ts","line":48,"character":8}],"typeParameter":[{"id":536,"name":"S","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":508,"name":"Ability","package":"@serenity-js/core"}}],"parameters":[{"id":537,"name":"this","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":529,"typeArguments":[{"type":"reference","target":536,"name":"S","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"AbilityType","package":"@serenity-js/core"}},{"id":538,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"}}],"type":{"type":"reference","target":536,"name":"S","package":"@serenity-js/core","refersToTypeParameter":true}}]},{"id":539,"name":"abilityType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/AbilityType.ts","line":52,"character":8}],"signatures":[{"id":540,"name":"abilityType","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/AbilityType.ts","line":52,"character":8}],"type":{"type":"reference","target":529,"typeArguments":[{"type":"reference","target":508,"name":"Ability","package":"@serenity-js/core"}],"name":"AbilityType","package":"@serenity-js/core"}}]}],"groups":[{"title":"Methods","children":[534,539]}],"sources":[{"fileName":"packages/core/src/screenplay/abilities/AbilityType.ts","line":47,"character":44}]}}]},"permalink":"/api/core#AbilityType","categories":[],"nextId":542},{"id":542,"name":"AnswerQuestions","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"This ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/) enables an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to resolve the value of a given ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable).\\n\\n"},{"kind":"code","text":"`AnswerQuestions`"},{"kind":"text","text":" is used internally by ["},{"kind":"code","text":"`Actor.answer`"},{"kind":"text","text":"](/api/core/class/Actor/#answer), and it is unlikely you\'ll ever need to use it directly in your code.\\nThat is, unless you\'re building a custom Serenity/JS extension and want to override the default behaviour of the framework,\\nin which case you should check out the [Contributor\'s Guide](/community/contributing/)."}]},"children":[{"id":562,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Ability.ts","line":414,"character":4}],"signatures":[{"id":563,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a JSON representation of the ability and its current state, if available.\\nThe purpose of this method is to enable reporting the state of the ability in a human-readable format,\\nrather than to serialise and deserialise the ability itself."}]},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Ability.ts","line":414,"character":4}],"type":{"type":"reference","target":614,"name":"SerialisedAbility","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":526,"name":"Ability.toJSON"}}],"inheritedFrom":{"type":"reference","target":525,"name":"Ability.toJSON"}},{"id":564,"name":"abilityType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Ability.ts","line":461,"character":4}],"signatures":[{"id":565,"name":"abilityType","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the most abstract type of this Ability instance,\\nspecifically the first class in the inheritance hierarchy that directly extends the "},{"kind":"code","text":"`Ability`"},{"kind":"text","text":" class.\\n\\n"},{"kind":"code","text":"```ts\\nimport { Ability } from \'@serenity-js/core\';\\n\\nclass MyAbility extends Ability {}\\nclass MySpecialisedAbility extends MyAbility {}\\n\\nnew MyAbility().abilityType();            // returns MyAbility\\nnew MySpecialisedAbility().abilityType(); // returns MyAbility\\n```"}]},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Ability.ts","line":461,"character":4}],"type":{"type":"reference","target":529,"typeArguments":[{"type":"reference","target":508,"name":"Ability","package":"@serenity-js/core"}],"name":"AbilityType","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":528,"name":"Ability.abilityType"}}],"inheritedFrom":{"type":"reference","target":527,"name":"Ability.abilityType"}},{"id":554,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/AnswerQuestions.ts","line":18,"character":4}],"signatures":[{"id":555,"name":"new AnswerQuestions","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/AnswerQuestions.ts","line":18,"character":4}],"parameters":[{"id":556,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":542,"name":"AnswerQuestions","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":524,"name":"Ability.constructor"}}],"overwrites":{"type":"reference","target":523,"name":"Ability.constructor"}},{"id":558,"name":"answer","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/AnswerQuestions.ts","line":22,"character":4}],"signatures":[{"id":559,"name":"answer","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/AnswerQuestions.ts","line":22,"character":4}],"typeParameter":[{"id":560,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":561,"name":"answerable","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":560,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":560,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]}],"groups":[{"title":"Constructors","children":[554]},{"title":"Methods","children":[562,564,558]}],"sources":[{"fileName":"packages/core/src/screenplay/abilities/AnswerQuestions.ts","line":17,"character":13}],"extendedTypes":[{"type":"reference","target":508,"name":"Ability","package":"@serenity-js/core"}],"permalink":"/api/core/class/AnswerQuestions","categories":[],"previousId":529,"nextId":571},{"id":566,"name":"CanHaveAbilities","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Describes an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) who can have an ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/) to perform some ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/).\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/)\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)"}]},"children":[{"id":567,"name":"whoCan","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/CanHaveAbilities.ts","line":19,"character":4}],"signatures":[{"id":568,"name":"whoCan","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Assigns an ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/) or several abilities to the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)"}]},"sources":[{"fileName":"packages/core/src/screenplay/abilities/CanHaveAbilities.ts","line":19,"character":4}],"parameters":[{"id":569,"name":"abilities","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":508,"name":"Ability","package":"@serenity-js/core"}}}],"type":{"type":"reference","target":570,"name":"Returned_Type","package":"@serenity-js/core","qualifiedName":"CanHaveAbilities.Returned_Type","refersToTypeParameter":true}}]}],"groups":[{"title":"Methods","children":[567]}],"sources":[{"fileName":"packages/core/src/screenplay/abilities/CanHaveAbilities.ts","line":14,"character":17}],"typeParameters":[{"id":570,"name":"Returned_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"}}],"implementedBy":[{"type":"reference","target":655,"name":"Actor"}],"permalink":"/api/core/interface/CanHaveAbilities","categories":[],"previousId":1637,"nextId":618},{"id":571,"name":"Discardable","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An interface to be implemented by any ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/) that needs to free up\\nthe resources it uses, e.g. disconnect from a database.\\n\\nThis ["},{"kind":"code","text":"`Discardable.discard`"},{"kind":"text","text":"](/api/core/interface/Discardable/#discard) method is invoked directly by the [actor](/api/core/class/Actor/), and indirectly by the [stage](/api/core/class/Stage/):\\n- when [SceneFinishes](/api/core-events/class/SceneFinishes/), for actors instantiated after [SceneStarts](/api/core-events/class/SceneStarts/) - e.g. within a test scenario or in a \\"before each\\" hook\\n- when ["},{"kind":"code","text":"`TestRunFinishes`"},{"kind":"text","text":"](/api/core-events/class/TestRunFinishes/), for actors instantiated before [SceneStarts](/api/core-events/class/SceneStarts/) - e.g. in a \\"before all\\" hook\\n\\nNote that events such as [SceneFinishes](/api/core-events/class/SceneFinishes/) and ["},{"kind":"code","text":"`TestRunFinishes`"},{"kind":"text","text":"](/api/core-events/class/TestRunFinishes/) are emitted by Serenity/JS test runner adapters,\\nsuch as "},{"kind":"code","text":"`@serenity-js/cucumber`"},{"kind":"text","text":", "},{"kind":"code","text":"`@serenity-js/mocha`"},{"kind":"text","text":", "},{"kind":"code","text":"`@serenity-js/jasmine`"},{"kind":"text","text":", and so on.\\nConsult their respective readmes to learn how to register them with your test runner of choice.\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/)\\n- ["},{"kind":"code","text":"`AbilityType`"},{"kind":"text","text":"](/api/core/#AbilityType)\\n- ["},{"kind":"code","text":"`Initialisable`"},{"kind":"text","text":"](/api/core/interface/Initialisable/)"}]},"children":[{"id":572,"name":"discard","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Discardable.ts","line":25,"character":4}],"signatures":[{"id":573,"name":"discard","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Discards the resources associated with this ability."}]},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Discardable.ts","line":25,"character":4}],"type":{"type":"union","types":[{"type":"intrinsic","name":"void"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}],"groups":[{"title":"Methods","children":[572]}],"sources":[{"fileName":"packages/core/src/screenplay/abilities/Discardable.ts","line":20,"character":17}],"implementedBy":[{"type":"reference","target":1670,"name":"ScheduleWork"}],"permalink":"/api/core/interface/Discardable","categories":[],"previousId":542,"nextId":574},{"id":574,"name":"Initialisable","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An interface to be implemented by any ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/) that needs to initialise\\nthe resources it uses, e.g. establish a database connection.\\n\\nThe ["},{"kind":"code","text":"`Initialisable.initialise`"},{"kind":"text","text":"](/api/core/interface/Initialisable/#initialise) method is invoked whenever ["},{"kind":"code","text":"`Actor.attemptsTo`"},{"kind":"text","text":"](/api/core/class/Actor/#attemptsTo) method is called,\\nbut **only when** ["},{"kind":"code","text":"`Initialisable.isInitialised`"},{"kind":"text","text":"](/api/core/interface/Initialisable/#isInitialised) returns false. This is to avoid initialising abilities more than once.\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/)\\n- ["},{"kind":"code","text":"`AbilityType`"},{"kind":"text","text":"](/api/core/#AbilityType)\\n- ["},{"kind":"code","text":"`Discardable`"},{"kind":"text","text":"](/api/core/interface/Discardable/)"}]},"children":[{"id":575,"name":"initialise","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Initialisable.ts","line":24,"character":4}],"signatures":[{"id":576,"name":"initialise","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Initialises the ability. Invoked whenever ["},{"kind":"code","text":"`Actor.attemptsTo`"},{"kind":"text","text":"](/api/core/class/Actor/#attemptsTo) method is called,\\nbut **only when** ["},{"kind":"code","text":"`Initialisable.isInitialised`"},{"kind":"text","text":"](/api/core/interface/Initialisable/#isInitialised) returns false.\\n\\nMake sure to implement ["},{"kind":"code","text":"`Initialisable.isInitialised`"},{"kind":"text","text":"](/api/core/interface/Initialisable/#isInitialised) so that it returns "},{"kind":"code","text":"`true`"},{"kind":"text","text":"\\nwhen the ability has been successfully initialised."}]},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Initialisable.ts","line":24,"character":4}],"type":{"type":"union","types":[{"type":"intrinsic","name":"void"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]},{"id":577,"name":"isInitialised","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Initialisable.ts","line":33,"character":4}],"signatures":[{"id":578,"name":"isInitialised","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Should return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" when all the resources that the given ability needs\\nhave been initialised. Should return "},{"kind":"code","text":"`false`"},{"kind":"text","text":" if the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) should\\ninitialise them again when ["},{"kind":"code","text":"`Actor.attemptsTo`"},{"kind":"text","text":"](/api/core/class/Actor/#attemptsTo) is called."}],"blockTags":[{"tag":"@returns","content":[]}]},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Initialisable.ts","line":33,"character":4}],"type":{"type":"intrinsic","name":"boolean"}}]}],"groups":[{"title":"Methods","children":[575,577]}],"sources":[{"fileName":"packages/core/src/screenplay/abilities/Initialisable.ts","line":15,"character":17}],"permalink":"/api/core/interface/Initialisable","categories":[],"previousId":571,"nextId":579},{"id":579,"name":"PerformActivities","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/) that enables an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to perform a given ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/).\\n\\n["},{"kind":"code","text":"`PerformActivities`"},{"kind":"text","text":"](/api/core/class/PerformActivities/) is used internally by ["},{"kind":"code","text":"`Actor.attemptsTo`"},{"kind":"text","text":"](/api/core/class/Actor/#attemptsTo), and it is unlikely you\'ll ever need to use it directly in your code.\\nThat is, unless you\'re building a custom Serenity/JS extension and want to override the default behaviour of the framework,\\nin which case you should check out the [Contributor\'s Guide](/community/contributing)."}]},"children":[{"id":610,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Ability.ts","line":414,"character":4}],"signatures":[{"id":611,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a JSON representation of the ability and its current state, if available.\\nThe purpose of this method is to enable reporting the state of the ability in a human-readable format,\\nrather than to serialise and deserialise the ability itself."}]},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Ability.ts","line":414,"character":4}],"type":{"type":"reference","target":614,"name":"SerialisedAbility","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":526,"name":"Ability.toJSON"}}],"inheritedFrom":{"type":"reference","target":525,"name":"Ability.toJSON"}},{"id":612,"name":"abilityType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Ability.ts","line":461,"character":4}],"signatures":[{"id":613,"name":"abilityType","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the most abstract type of this Ability instance,\\nspecifically the first class in the inheritance hierarchy that directly extends the "},{"kind":"code","text":"`Ability`"},{"kind":"text","text":" class.\\n\\n"},{"kind":"code","text":"```ts\\nimport { Ability } from \'@serenity-js/core\';\\n\\nclass MyAbility extends Ability {}\\nclass MySpecialisedAbility extends MyAbility {}\\n\\nnew MyAbility().abilityType();            // returns MyAbility\\nnew MySpecialisedAbility().abilityType(); // returns MyAbility\\n```"}]},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Ability.ts","line":461,"character":4}],"type":{"type":"reference","target":529,"typeArguments":[{"type":"reference","target":508,"name":"Ability","package":"@serenity-js/core"}],"name":"AbilityType","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":528,"name":"Ability.abilityType"}}],"inheritedFrom":{"type":"reference","target":527,"name":"Ability.abilityType"}},{"id":587,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/PerformActivities.ts","line":34,"character":4}],"signatures":[{"id":588,"name":"new PerformActivities","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/PerformActivities.ts","line":34,"character":4}],"parameters":[{"id":589,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":623,"name":"PerformsActivities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":590,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":591,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/PerformActivities.ts","line":35,"character":92}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[591]}],"sources":[{"fileName":"packages/core/src/screenplay/abilities/PerformActivities.ts","line":35,"character":90}]}}]}},{"id":592,"name":"stage","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":2642,"name":"EmitsDomainEvents","package":"@serenity-js/core"}}],"type":{"type":"reference","target":579,"name":"PerformActivities","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":524,"name":"Ability.constructor"}}],"overwrites":{"type":"reference","target":523,"name":"Ability.constructor"}},{"id":597,"name":"perform","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/PerformActivities.ts","line":41,"character":10}],"signatures":[{"id":598,"name":"perform","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/PerformActivities.ts","line":41,"character":10}],"parameters":[{"id":599,"name":"activity","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":628,"name":"Activity","package":"@serenity-js/core"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]}],"groups":[{"title":"Constructors","children":[587]},{"title":"Methods","children":[610,612,597]}],"sources":[{"fileName":"packages/core/src/screenplay/abilities/PerformActivities.ts","line":33,"character":13}],"extendedTypes":[{"type":"reference","target":508,"name":"Ability","package":"@serenity-js/core"}],"permalink":"/api/core/class/PerformActivities","categories":[],"previousId":574,"nextId":614},{"id":614,"name":"SerialisedAbility","variant":"declaration","kind":256,"flags":{"isExternal":true},"children":[{"id":615,"name":"type","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/SerialisedAbility.ts","line":7,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":616,"name":"class","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/SerialisedAbility.ts","line":8,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":617,"name":"options","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/SerialisedAbility.ts","line":9,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"}}],"groups":[{"title":"Properties","children":[615,616,617]}],"sources":[{"fileName":"packages/core/src/screenplay/abilities/SerialisedAbility.ts","line":6,"character":17}],"permalink":"/api/core/interface/SerialisedAbility","categories":[],"previousId":579,"nextId":715},{"id":618,"name":"UsesAbilities","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Describes an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) who can use their [abilities](/api/core/class/Ability/) to perform an ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/)\\nor answer a ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/).\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/)\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)"}]},"children":[{"id":619,"name":"abilityTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/UsesAbilities.ts","line":23,"character":4}],"signatures":[{"id":620,"name":"abilityTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Provides access to the [actor\'s](/api/core/class/Actor/) ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/) to do something"}]},"sources":[{"fileName":"packages/core/src/screenplay/abilities/UsesAbilities.ts","line":23,"character":4}],"typeParameter":[{"id":621,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":508,"name":"Ability","package":"@serenity-js/core"}}],"parameters":[{"id":622,"name":"doSomething","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The type of ability to look up, e.g. ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/) or ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/)"}]},"type":{"type":"reference","target":529,"typeArguments":[{"type":"reference","target":621,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"AbilityType","package":"@serenity-js/core"}}],"type":{"type":"reference","target":621,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true}}]}],"groups":[{"title":"Methods","children":[619]}],"sources":[{"fileName":"packages/core/src/screenplay/abilities/UsesAbilities.ts","line":15,"character":17}],"implementedBy":[{"type":"reference","target":655,"name":"Actor"}],"permalink":"/api/core/interface/UsesAbilities","categories":[],"previousId":566,"nextId":623},{"id":623,"name":"PerformsActivities","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Describes an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) who can perform a sequence of [activities](/api/core/class/Activity/),\\nsuch as [tasks](/api/core/class/Task/) or [interactions](/api/core/class/Interaction/).\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/)\\n- ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/)\\n- ["},{"kind":"code","text":"`Task`"},{"kind":"text","text":"](/api/core/class/Task/)\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)"}]},"children":[{"id":624,"name":"attemptsTo","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Makes the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) attempt to perform a sequence of [activities](/api/core/class/Activity/)."}]},"sources":[{"fileName":"packages/core/src/screenplay/activities/PerformsActivities.ts","line":20,"character":4}],"type":{"type":"reflection","declaration":{"id":625,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/activities/PerformsActivities.ts","line":20,"character":16}],"signatures":[{"id":626,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/activities/PerformsActivities.ts","line":20,"character":16}],"parameters":[{"id":627,"name":"activities","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":628,"name":"Activity","package":"@serenity-js/core"}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]}}}],"groups":[{"title":"Properties","children":[624]}],"sources":[{"fileName":"packages/core/src/screenplay/activities/PerformsActivities.ts","line":15,"character":17}],"implementedBy":[{"type":"reference","target":655,"name":"Actor"}],"permalink":"/api/core/interface/PerformsActivities","categories":[],"previousId":618,"nextId":710},{"id":710,"name":"CollectsArtifacts","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Describes an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) who can collect artifacts, such as photos or "},{"kind":"code","text":"`JSON`"},{"kind":"text","text":" data.,\\nwhile the scenario is being executed\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)"}]},"children":[{"id":711,"name":"collect","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/artifacts/CollectsArtifacts.ts","line":77,"character":4}],"signatures":[{"id":712,"name":"collect","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Makes the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) collect an artifact so that it can be included in the test report.\\n\\n#### Implementing a custom interaction to attach artifacts\\n\\n"},{"kind":"code","text":"```ts\\nimport * as fs from \'node:fs\'\\nimport { Answerable, Interaction, the } from \'@serenity-js/core\'\\nimport { Path } from \'@serenity-js/core/lib/io\'\\nimport { Name, TextData } from \'@serenity-js/core/lib/model\'\\n\\nexport class Attach {\\n\\n  static contentsOf = (pathToFile: Path): Interaction =>\\n    Interaction.where(`#actor attaches contents of ${ pathToFile.basename() }`, async actor => {\\n      const data = fs.readFileSync(pathToFile.value).toString(\'utf-8\');\\n\\n      actor.collect(\\n        TextData.fromJSON({ contentType: \'text/plain\', data }),\\n        new Name(pathToFile.basename()),\\n      )\\n    })\\n\\n  static textData = (contents: Answerable<string>, name?: string): Interaction =>\\n    Interaction.where(the`#actor attaches text data`, async actor => {\\n      const data = await actor.answer(contents);\\n\\n      actor.collect(\\n        TextData.fromJSON({ contentType: \'text/plain\', data }),\\n        name && new Name(name),\\n      )\\n    })\\n}\\n```"},{"kind":"text","text":"\\n\\n#### Attaching plain text\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Path } from \'@serenity-js/core/lib/io\'\\n\\nactorCalled(\'Alice\').attemptsTo(\\n  Attach.textData(\'some text\', \'some name\'),\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Attaching contents of a text file\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Log } from \'@serenity-js/core\'\\n\\nactorCalled(\'Alice\').attemptsTo(\\n  Attach.contentsOf(Path.from(__dirname, \'output/server.log\')),\\n)\\n```"}]},"sources":[{"fileName":"packages/core/src/screenplay/artifacts/CollectsArtifacts.ts","line":77,"character":4}],"parameters":[{"id":713,"name":"artifact","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The artifact to be collected, such as "},{"kind":"code","text":"`JSON`"},{"kind":"text","text":" data."}]},"type":{"type":"reference","name":"Artifact","package":"@serenity-js/core"}},{"id":714,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The name of the artifact to make it easy to recognise in the test report"}]},"type":{"type":"reference","name":"Name","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"void"}}]}],"groups":[{"title":"Methods","children":[711]}],"sources":[{"fileName":"packages/core/src/screenplay/artifacts/CollectsArtifacts.ts","line":12,"character":17}],"implementedBy":[{"type":"reference","target":655,"name":"Actor"}],"permalink":"/api/core/interface/CollectsArtifacts","categories":[],"previousId":623,"nextId":1067},{"id":715,"name":"Debug","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the [actor](/api/core/class/Actor/) to evaluate and [log](/api/core/class/Log/) the provided [answerable](/api/core/#Answerable) values.\\n\\nSince this interaction **accepts a callback function** that receives the evaluated results,\\nthe best way to use it is while **running the test scenario via a Node.js debugger**.\\nSee the links below to learn how to do it in popular IDEs.\\n\\n## Debugging Answerable values\\n\\n["},{"kind":"code","text":"`Debug.values`"},{"kind":"text","text":"](/api/core/class/Debug/#values) accepts a callback function that receives an array of ["},{"kind":"code","text":"`DebuggingResult`"},{"kind":"text","text":"](/api/core/interface/DebuggingResult/) objects,\\nas well as the result of evaluating each provided [answerable](/api/core/#Answerable) with ["},{"kind":"code","text":"`Actor.answer`"},{"kind":"text","text":"](/api/core/class/Actor/#answer).\\n\\n"},{"kind":"code","text":"```typescript\\nimport { actorCalled, Debug } from \'@serenity-js/core\'\\nimport { Navigate, Page } from \'@serenity-js/web\'\\n\\n// Running the below through the Node.js debugger makes the actor resolve the provided values\\n// and return them to the debugger function, where you can investigate their contents,\\n// or inspect any Errors the evaluation has resulted with.\\nawait actorCalled(\'Debbie\').attemptsTo(\\n    Navigate.to(\'http://example.org\'),\\n    Debug.values((results, title, url) => {\\n        // set a breakpoint here to view `results`, `title` and `url` in your IDE debugger\\n    }, Page.current().title(), Page.current().url()), // accepts multiple values\\n);\\n```"},{"kind":"text","text":"\\n\\n## Accessing Playwright Page\\n\\n[Playwright Test for VSCode](https://marketplace.visualstudio.com/items?itemName=ms-playwright.playwright)\\nprovides features that allow for [experimenting with web UI locators](https://marketplace.visualstudio.com/items?itemName=ms-playwright.playwright#tune-locators)\\nwhile the test is paused at breakpoint.\\n\\nSince this functionality is specific to [Playwright](/api/playwright),\\nyou can use it by passing ["},{"kind":"code","text":"`PlaywrightPage.current().nativePage()`"},{"kind":"text","text":"](/api/playwright/class/PlaywrightPage/#current)\\nto Serenity/JS ["},{"kind":"code","text":"`Debug.values`"},{"kind":"text","text":"](/api/core/class/Debug/#values). Also make sure to name the evaluated value "},{"kind":"code","text":"`page`"},{"kind":"text","text":", as this is the variable name that the Playwright VSCode extension expects.\\n\\n"},{"kind":"code","text":"```typescript\\nimport { actorCalled, Debug } from \'@serenity-js/core\'\\nimport { PlaywrightPage } from \'@serenity-js/playwright\'\\n\\n// Running the below through the Node.js debugger makes the actor resolve the provided values\\n// and return them to the debugger function, where you can investigate their contents,\\n// or inspect any Errors the evaluation has resulted with.\\nawait actorCalled(\'Debbie\').attemptsTo(\\n    Navigate.to(\'http://example.org\'),\\n    Debug.values((results, page) => {\\n        // set a breakpoint here to use Playwright locator debugging features\\n        page.locator(\'.example-css-class\')\\n        // note that you can change this selector while having the test paused at breakpoint\\n    }, PlaywrightPage.current().nativePage()),\\n);\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- [Node.js debugging - Getting started](https://nodejs.org/en/docs/guides/debugging-getting-started/)\\n- [Node.js debugging in VS Code](https://code.visualstudio.com/docs/nodejs/nodejs-debugging)\\n- [Running and debugging Node.js in WebStorm](https://www.jetbrains.com/help/webstorm/running-and-debugging-node-js.html)\\n- [Playwright Test for VSCode](https://marketplace.visualstudio.com/items?itemName=ms-playwright.playwright)"}]},"children":[{"id":716,"name":"values","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/debugging/Debug.ts","line":87,"character":11}],"signatures":[{"id":717,"name":"values","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the [actor](/api/core/class/Actor/) to evaluate the provided "},{"kind":"code","text":"`values`"},{"kind":"text","text":",\\nlog the results, and then pass them to your "},{"kind":"code","text":"`debuggerFunction`"},{"kind":"text","text":".\\n\\nTo use this interaction, run your test scenario in the Node.js debugger\\nand set a breakpoint inside the "},{"kind":"code","text":"`debuggerFunction`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/src/screenplay/debugging/Debug.ts","line":87,"character":11}],"typeParameter":[{"id":718,"name":"Values","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"unknown"}}}],"parameters":[{"id":719,"name":"debuggerFunction","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":720,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/debugging/Debug.ts","line":87,"character":79}],"signatures":[{"id":721,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/debugging/Debug.ts","line":87,"character":79}],"parameters":[{"id":722,"name":"results","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"mapped","parameter":"Index","parameterType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]},"templateType":{"type":"reference","target":770,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","typeArguments":[{"type":"reference","name":"Index","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Index","package":"@serenity-js/core","refersToTypeParameter":true},"objectType":{"type":"reference","target":718,"name":"Values","package":"@serenity-js/core","refersToTypeParameter":true}}],"name":"DebuggingResult","package":"@serenity-js/core"}}},{"id":723,"name":"answers","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"mapped","parameter":"Index","parameterType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]},"templateType":{"type":"reference","target":708,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","typeArguments":[{"type":"reference","name":"Index","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Index","package":"@serenity-js/core","refersToTypeParameter":true},"objectType":{"type":"reference","target":718,"name":"Values","package":"@serenity-js/core","refersToTypeParameter":true}}],"name":"Answered","package":"@serenity-js/core"}}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"void"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}},{"id":724,"name":"values","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"reference","target":718,"name":"Values","package":"@serenity-js/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":755,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":38,"character":4}],"signatures":[{"id":756,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":38,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":831,"name":"Interaction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","target":830,"name":"Interaction.instantiationLocation"}},{"id":751,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/debugging/Debug.ts","line":122,"character":10}],"signatures":[{"id":752,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the provided ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to perform this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/).\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`PerformsActivities`"},{"kind":"text","text":"](/api/core/interface/PerformsActivities/)\\n- ["},{"kind":"code","text":"`UsesAbilities`"},{"kind":"text","text":"](/api/core/interface/UsesAbilities/)\\n- ["},{"kind":"code","text":"`AnswersQuestions`"},{"kind":"text","text":"](/api/core/interface/AnswersQuestions/)"}]},"sources":[{"fileName":"packages/core/src/screenplay/debugging/Debug.ts","line":122,"character":10}],"parameters":[{"id":753,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":710,"name":"CollectsArtifacts","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":827,"name":"Interaction.performAs"}}],"overwrites":{"type":"reference","target":826,"name":"Interaction.performAs"}},{"id":757,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"signatures":[{"id":758,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"parameters":[{"id":759,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":760,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":761,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":66}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[761]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":64}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":833,"name":"Interaction.describedBy"}}],"inheritedFrom":{"type":"reference","target":832,"name":"Interaction.describedBy"}},{"id":767,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"signatures":[{"id":768,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":843,"name":"Interaction.toString"}}],"inheritedFrom":{"type":"reference","target":842,"name":"Interaction.toString"}}],"groups":[{"title":"Methods","children":[716,755,751,757,767]}],"sources":[{"fileName":"packages/core/src/screenplay/debugging/Debug.ts","line":75,"character":13}],"typeParameters":[{"id":769,"name":"Values","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"unknown"}],"name":"Answerable","package":"@serenity-js/core"}}}],"extendedTypes":[{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}],"permalink":"/api/core/class/Debug","categories":[],"previousId":614,"nextId":770},{"id":770,"name":"DebuggingResult","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An interface describing debugging data received by the callback function passed to ["},{"kind":"code","text":"`Debug.values`"},{"kind":"text","text":"](/api/core/class/Debug/#values)."}]},"children":[{"id":771,"name":"description","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/debugging/DebuggingResult.ts","line":7,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":772,"name":"value","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/debugging/DebuggingResult.ts","line":8,"character":4}],"type":{"type":"reference","target":774,"name":"T","package":"@serenity-js/core","qualifiedName":"DebuggingResult.T","refersToTypeParameter":true}},{"id":773,"name":"error","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/debugging/DebuggingResult.ts","line":9,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}],"groups":[{"title":"Properties","children":[771,772,773]}],"sources":[{"fileName":"packages/core/src/screenplay/debugging/DebuggingResult.ts","line":6,"character":17}],"typeParameters":[{"id":774,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"permalink":"/api/core/interface/DebuggingResult","categories":[],"previousId":715,"nextId":775},{"id":775,"name":"Log","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\nto [collect](/api/core/interface/CollectsArtifacts/) arbitrary static values\\nand answers to [answerables](/api/core/#Answerable),\\nso that they can be sent to the [stage crew members](/api/core/interface/StageCrewMember/)\\nand printed to the terminal by the ["},{"kind":"code","text":"`ConsoleReporter`"},{"kind":"text","text":"](/api/console-reporter/class/ConsoleReporter/)\\nor attached to the HTML report by the ["},{"kind":"code","text":"`SerenityBDDReporter`"},{"kind":"text","text":"](/api/serenity-bdd/class/SerenityBDDReporter/).\\n\\n## Logging static and "},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":" values\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Log } from \'@serenity-js/core\'\\nimport { Page } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Laura\').attemptsTo(\\n  Log.the(\'Current page\', Page.current().title(), Page.current().url()),\\n)\\n```"}]},"children":[{"id":776,"name":"the","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/debugging/Log.ts","line":42,"character":11}],"signatures":[{"id":777,"name":"the","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a new [interaction](/api/core/class/Interaction/) to ["},{"kind":"code","text":"`Log`"},{"kind":"text","text":"](/api/core/class/Log/)\\n\\nNote that this method accepts [variable number of arguments](https://www.typescriptlang.org/docs/handbook/functions.html#rest-parameters),\\nso that you can easily log several values at the same time."}]},"sources":[{"fileName":"packages/core/src/screenplay/debugging/Log.ts","line":42,"character":11}],"parameters":[{"id":778,"name":"items","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"comment":{"summary":[{"kind":"text","text":"The items to be logged"}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":797,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":38,"character":4}],"signatures":[{"id":798,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":38,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":831,"name":"Interaction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","target":830,"name":"Interaction.instantiationLocation"}},{"id":793,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/debugging/Log.ts","line":59,"character":10}],"signatures":[{"id":794,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the provided ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to perform this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/).\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`PerformsActivities`"},{"kind":"text","text":"](/api/core/interface/PerformsActivities/)\\n- ["},{"kind":"code","text":"`UsesAbilities`"},{"kind":"text","text":"](/api/core/interface/UsesAbilities/)\\n- ["},{"kind":"code","text":"`AnswersQuestions`"},{"kind":"text","text":"](/api/core/interface/AnswersQuestions/)"}]},"sources":[{"fileName":"packages/core/src/screenplay/debugging/Log.ts","line":59,"character":10}],"parameters":[{"id":795,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":710,"name":"CollectsArtifacts","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":827,"name":"Interaction.performAs"}}],"overwrites":{"type":"reference","target":826,"name":"Interaction.performAs"}},{"id":799,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"signatures":[{"id":800,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"parameters":[{"id":801,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":802,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":803,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":66}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[803]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":64}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":833,"name":"Interaction.describedBy"}}],"inheritedFrom":{"type":"reference","target":832,"name":"Interaction.describedBy"}},{"id":809,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"signatures":[{"id":810,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":843,"name":"Interaction.toString"}}],"inheritedFrom":{"type":"reference","target":842,"name":"Interaction.toString"}}],"groups":[{"title":"Methods","children":[776,797,793,799,809]}],"sources":[{"fileName":"packages/core/src/screenplay/debugging/Log.ts","line":31,"character":13}],"extendedTypes":[{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}],"permalink":"/api/core/class/Log","categories":[],"previousId":770,"nextId":1080},{"id":844,"name":"ChainableSetter","variant":"declaration","kind":256,"flags":{"isExternal":true},"children":[{"id":845,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/ChainableSetter.ts","line":8,"character":4}],"signatures":[{"id":846,"name":"set","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/ChainableSetter.ts","line":8,"character":4}],"typeParameter":[{"id":847,"name":"K","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":848,"name":"key","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":847,"name":"K","package":"@serenity-js/core","refersToTypeParameter":true}},{"id":849,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","target":847,"name":"K","package":"@serenity-js/core","refersToTypeParameter":true},"objectType":{"type":"reference","target":850,"name":"T","package":"@serenity-js/core","qualifiedName":"ChainableSetter.T","refersToTypeParameter":true}}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"intersection","types":[{"type":"reference","target":844,"typeArguments":[{"type":"reference","target":850,"name":"T","package":"@serenity-js/core","qualifiedName":"ChainableSetter.T","refersToTypeParameter":true}],"name":"ChainableSetter","package":"@serenity-js/core"},{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}]}}]}],"groups":[{"title":"Methods","children":[845]}],"sources":[{"fileName":"packages/core/src/screenplay/notes/ChainableSetter.ts","line":7,"character":17}],"typeParameters":[{"id":850,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"}}],"implementedBy":[{"type":"reference","target":896,"name":"NotepadAdapter"}],"permalink":"/api/core/interface/ChainableSetter","categories":[],"previousId":1288,"nextId":851},{"id":851,"name":"Notepad","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Stores notes recorded by an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/).\\n\\nSee ["},{"kind":"code","text":"`TakeNotes`"},{"kind":"text","text":"](/api/core/class/TakeNotes/) and [notes](/api/core/function/notes) for more usage examples.\\n\\n## Sharing a notepad between actors\\n\\n"},{"kind":"code","text":"```ts\\nimport { Actor, Cast, Notepad, TakeNotes } from \'@serenity-js/core\'\\n\\ninterface MyNotes {\\n  auth: {\\n    username: string;\\n    password: string;\\n  }\\n}\\n\\nexport class Actors implements Cast {\\n\\n  // initialise a shared notepad when the Actors class is initialised\\n  private readonly sharedNotepad = Notepad.with<MyNotes>({\\n    auth: {\\n      username: \'test-user\',\\n      password: \'SuperSecretP@ssword!\',\\n    }\\n  });\\n\\n  prepare(actor: Actor): Actor {\\n    switch (actor.name) {\\n      case \'Alice\':\\n      case \'Bob\':\\n        // Alice and Bob will share their notepad\\n        return actor.whoCan(TakeNotes.using(this.sharedNotepad));\\n      default:\\n        // other actors will get their own notepads\\n        return actor.whoCan(TakeNotes.using(Notepad.empty<AuthCredentials>()));\\n    }\\n  }\\n}\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`TakeNotes`"},{"kind":"text","text":"](/api/core/class/TakeNotes/)\\n- [notes](/api/core/function/notes)\\n- ["},{"kind":"code","text":"`Cast`"},{"kind":"text","text":"](/api/core/class/Cast/)"}]},"children":[{"id":852,"name":"empty","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/Notepad.ts","line":61,"character":11}],"signatures":[{"id":853,"name":"empty","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a new empty Notepad."}]},"sources":[{"fileName":"packages/core/src/screenplay/notes/Notepad.ts","line":61,"character":11}],"typeParameter":[{"id":854,"name":"N","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"}}],"type":{"type":"reference","target":851,"typeArguments":[{"type":"reference","target":854,"name":"N","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Notepad","package":"@serenity-js/core"}}]},{"id":855,"name":"with","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/Notepad.ts","line":100,"character":11}],"signatures":[{"id":856,"name":"with","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a new Notepad with an initial state.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Notepad, notes, TakeNotes } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\ninterface MyNotes {\\n  personalDetails: {\\n    firstName: string;\\n    lastName: string;\\n  }\\n}\\n\\nactorCalled(\'Leonard\')\\n  .whoCan(\\n    TakeNotes.using(\\n      Notepad.with<MyNotes>({\\n        personalDetails: {\\n          firstName: \'Leonard\',\\n          lastName: \'McLaud\',\\n        }\\n      })\\n    )\\n  )\\n  .attemptsTo(\\n    Ensure.that(\\n      notes<MyNotes>().get(\'personalDetails\').firstName,\\n      equals(\'Leonard\')\\n    ),\\n  )\\n```"}]},"sources":[{"fileName":"packages/core/src/screenplay/notes/Notepad.ts","line":100,"character":11}],"typeParameter":[{"id":857,"name":"N","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"}}],"parameters":[{"id":858,"name":"notes","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":857,"name":"N","package":"@serenity-js/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":851,"typeArguments":[{"type":"reference","target":857,"name":"N","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Notepad","package":"@serenity-js/core"}}]},{"id":859,"name":"notes","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/Notepad.ts","line":113,"character":11}],"signatures":[{"id":860,"name":"notes","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates a ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter) that simplifies access to the notes\\nstored in this notepad. Allows the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to record, read, and remove notes.\\n\\n#### Learn more\\n- [notes](/api/core/function/notes)\\n- ["},{"kind":"code","text":"`TakeNotes`"},{"kind":"text","text":"](/api/core/class/TakeNotes/)\\n- ["},{"kind":"code","text":"`Notepad`"},{"kind":"text","text":"](/api/core/class/Notepad/)"}]},"sources":[{"fileName":"packages/core/src/screenplay/notes/Notepad.ts","line":113,"character":11}],"typeParameter":[{"id":861,"name":"N","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"}}],"type":{"type":"reference","target":896,"typeArguments":[{"type":"reference","target":861,"name":"N","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"NotepadAdapter","package":"@serenity-js/core"}}]},{"id":867,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/Notepad.ts","line":136,"character":4}],"signatures":[{"id":868,"name":"has","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Checks if a note identified by "},{"kind":"code","text":"`subject`"},{"kind":"text","text":" exists in the notepad."}],"blockTags":[{"tag":"@returns","content":[{"kind":"code","text":"`true`"},{"kind":"text","text":" if the note exists, "},{"kind":"code","text":"`false`"},{"kind":"text","text":" otherwise"}]}]},"sources":[{"fileName":"packages/core/src/screenplay/notes/Notepad.ts","line":136,"character":4}],"typeParameter":[{"id":869,"name":"Subject","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":870,"name":"subject","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A subject (name) that uniquely identifies a given note"}]},"type":{"type":"reference","target":869,"name":"Subject","package":"@serenity-js/core","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":871,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/Notepad.ts","line":153,"character":4}],"signatures":[{"id":872,"name":"get","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Retrieves a note, identified by "},{"kind":"code","text":"`subject`"},{"kind":"text","text":", from the notepad."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"The value of the previously recorded note."}]},{"tag":"@throws","content":[{"kind":"text","text":"["},{"kind":"code","text":"`LogicError`"},{"kind":"text","text":"](/api/core/class/LogicError/)\\n Throws a ["},{"kind":"code","text":"`LogicError`"},{"kind":"text","text":"](/api/core/class/LogicError/) if the note with a given "},{"kind":"code","text":"`subject`"},{"kind":"text","text":"\\n has never been recorded."}]}]},"sources":[{"fileName":"packages/core/src/screenplay/notes/Notepad.ts","line":153,"character":4}],"typeParameter":[{"id":873,"name":"Subject","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":874,"name":"subject","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A subject (name) that uniquely identifies a given note"}]},"type":{"type":"reference","target":873,"name":"Subject","package":"@serenity-js/core","refersToTypeParameter":true}}],"type":{"type":"indexedAccess","indexType":{"type":"reference","target":873,"name":"Subject","package":"@serenity-js/core","refersToTypeParameter":true},"objectType":{"type":"reference","target":895,"name":"Notes","package":"@serenity-js/core","qualifiedName":"Notepad.Notes","refersToTypeParameter":true}}}]},{"id":875,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/Notepad.ts","line":170,"character":4}],"signatures":[{"id":876,"name":"set","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Stores a given "},{"kind":"code","text":"`value`"},{"kind":"text","text":" uniquely identified by "},{"kind":"code","text":"`subject`"},{"kind":"text","text":" in the notepad."}]},"sources":[{"fileName":"packages/core/src/screenplay/notes/Notepad.ts","line":170,"character":4}],"typeParameter":[{"id":877,"name":"Subject","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":878,"name":"subject","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A subject (name) that uniquely identifies a given note"}]},"type":{"type":"reference","target":877,"name":"Subject","package":"@serenity-js/core","refersToTypeParameter":true}},{"id":879,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The value to record."}]},"type":{"type":"indexedAccess","indexType":{"type":"reference","target":877,"name":"Subject","package":"@serenity-js/core","refersToTypeParameter":true},"objectType":{"type":"reference","target":895,"name":"Notes","package":"@serenity-js/core","qualifiedName":"Notepad.Notes","refersToTypeParameter":true}}}],"type":{"type":"reference","target":851,"typeArguments":[{"type":"reference","target":895,"name":"Notes","package":"@serenity-js/core","qualifiedName":"Notepad.Notes","refersToTypeParameter":true}],"name":"Notepad","package":"@serenity-js/core"}}]},{"id":880,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/Notepad.ts","line":184,"character":4}],"signatures":[{"id":881,"name":"delete","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Removes the note identified by "},{"kind":"code","text":"`subject`"},{"kind":"text","text":" from the notepad."}],"blockTags":[{"tag":"@returns","content":[{"kind":"code","text":"`true`"},{"kind":"text","text":" if the item in the Notepad object existed and has been removed,\\n "},{"kind":"code","text":"`false`"},{"kind":"text","text":" otherwise."}]}]},"sources":[{"fileName":"packages/core/src/screenplay/notes/Notepad.ts","line":184,"character":4}],"typeParameter":[{"id":882,"name":"Subject","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":883,"name":"subject","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":882,"name":"Subject","package":"@serenity-js/core","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":884,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/Notepad.ts","line":194,"character":4}],"signatures":[{"id":885,"name":"clear","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Deletes all the notes stored in this notepad."}]},"sources":[{"fileName":"packages/core/src/screenplay/notes/Notepad.ts","line":194,"character":4}],"type":{"type":"intrinsic","name":"void"}}]},{"id":886,"name":"size","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/Notepad.ts","line":205,"character":4}],"signatures":[{"id":887,"name":"size","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the number of notes stored in the notepad."}]},"sources":[{"fileName":"packages/core/src/screenplay/notes/Notepad.ts","line":205,"character":4}],"type":{"type":"intrinsic","name":"number"}}]},{"id":888,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":889,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":890,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.equals"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.equals"}},{"id":891,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":892,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.toString"}},{"id":893,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":894,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.toJSON"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.toJSON"}}],"groups":[{"title":"Methods","children":[852,855,859,867,871,875,880,884,886,888,891,893]}],"sources":[{"fileName":"packages/core/src/screenplay/notes/Notepad.ts","line":56,"character":13}],"typeParameters":[{"id":895,"name":"Notes","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"}}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}],"permalink":"/api/core/class/Notepad","categories":[],"previousId":844,"nextId":896},{"id":896,"name":"NotepadAdapter","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Serenity/JS Screenplay Pattern-style adapter for the ["},{"kind":"code","text":"`Notepad`"},{"kind":"text","text":"](/api/core/class/Notepad/),\\nthat makes it easier for the [actors](/api/core/class/Actor/) to access its APIs.\\n\\nSee ["},{"kind":"code","text":"`TakeNotes`"},{"kind":"text","text":"](/api/core/class/TakeNotes/), ["},{"kind":"code","text":"`Notepad`"},{"kind":"text","text":"](/api/core/class/Notepad/) and ["},{"kind":"code","text":"`notes`"},{"kind":"text","text":"](/api/core/function/notes/) for more examples."}]},"children":[{"id":897,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":898,"name":"new NotepadAdapter","variant":"signature","kind":16384,"flags":{"isExternal":true},"typeParameter":[{"id":899,"name":"Notes","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"}}],"type":{"type":"reference","target":896,"typeArguments":[{"type":"reference","target":899,"name":"Notes","package":"@serenity-js/core","qualifiedName":"NotepadAdapter.Notes","refersToTypeParameter":true}],"name":"NotepadAdapter","package":"@serenity-js/core"}}]},{"id":900,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/NotepadAdapter.ts","line":36,"character":4}],"signatures":[{"id":901,"name":"has","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Checks if a note identified by "},{"kind":"code","text":"`subject`"},{"kind":"text","text":" exists in the notepad.\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Notepad.has`"},{"kind":"text","text":"](/api/core/class/Notepad/#has)}"}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Question that resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the note exists, "},{"kind":"code","text":"`false`"},{"kind":"text","text":" otherwise"}]}]},"sources":[{"fileName":"packages/core/src/screenplay/notes/NotepadAdapter.ts","line":36,"character":4}],"typeParameter":[{"id":902,"name":"Subject","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":903,"name":"subject","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A subject (name) that uniquely identifies a given note"}]},"type":{"type":"reference","target":902,"name":"Subject","package":"@serenity-js/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":904,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/NotepadAdapter.ts","line":58,"character":4}],"signatures":[{"id":905,"name":"get","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Retrieves a note, identified by "},{"kind":"code","text":"`subject`"},{"kind":"text","text":", from the notepad.\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Notepad.get`"},{"kind":"text","text":"](/api/core/class/Notepad/#get)}"}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"The value of the previously recorded note."}]},{"tag":"@throws","content":[{"kind":"text","text":"Throws a ["},{"kind":"code","text":"`LogicError`"},{"kind":"text","text":"](/api/core/class/LogicError/) if the note with a given "},{"kind":"code","text":"`subject`"},{"kind":"text","text":"\\n has never been recorded."}]}]},"sources":[{"fileName":"packages/core/src/screenplay/notes/NotepadAdapter.ts","line":58,"character":4}],"typeParameter":[{"id":906,"name":"Subject","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":907,"name":"subject","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A subject (name) that uniquely identifies a given note"}]},"type":{"type":"reference","target":906,"name":"Subject","package":"@serenity-js/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","target":906,"name":"Subject","package":"@serenity-js/core","refersToTypeParameter":true},"objectType":{"type":"reference","target":899,"name":"Notes","package":"@serenity-js/core","qualifiedName":"NotepadAdapter.Notes","refersToTypeParameter":true}}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":908,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/NotepadAdapter.ts","line":110,"character":4}],"signatures":[{"id":909,"name":"set","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves a given "},{"kind":"code","text":"`Answerable<value>`"},{"kind":"text","text":" and stores it in the notepad,\\nuniquely identified by its "},{"kind":"code","text":"`subject`"},{"kind":"text","text":".\\n\\n**Pro tip:** calls to "},{"kind":"code","text":"`set`"},{"kind":"text","text":" can be chained and result in an accumulation\\nof values to be recorded in the ["},{"kind":"code","text":"`Notepad`"},{"kind":"text","text":"](/api/core/class/Notepad/).\\nThose values are resolved and recorded when the ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/)\\nreturned by this method is performed by an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/).\\n\\nIf a note identified by a given "},{"kind":"code","text":"`subject`"},{"kind":"text","text":" is set multiple times,\\nthe last call wins.\\n\\n"},{"kind":"code","text":"```ts\\n import { actorCalled, notes, TakeNotes } from \'@serenity-js/core\'\\n import { Ensure, equals } from \'@serenity-js/assertions\'\\n\\n interface MyNotes {\\n     stringNote: string;\\n     numberNote: number;\\n }\\n\\nawait actorCalled(\'Alice\')\\n  .whoCan(TakeNotes.usingAnEmptyNotepad<MyNotes>());\\n  .attemptsTo(\\n\\n    notes<MyNotes>()\\n      .set(\'stringNote\', \'example\')\\n      .set(\'numberNote\', Promise.resolve(42))\\n      .set(\'stringNote\', \'another example\'),\\n\\n    Ensure.equal(notes().toJSON(), {\\n      firstNote: \'another example\',\\n      secondNote: 42,\\n    })\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Notepad.set`"},{"kind":"text","text":"](/api/core/class/Notepad/#set)"}]},"sources":[{"fileName":"packages/core/src/screenplay/notes/NotepadAdapter.ts","line":110,"character":4}],"typeParameter":[{"id":910,"name":"Subject","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":911,"name":"subject","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A subject (name) that uniquely identifies a given note"}]},"type":{"type":"reference","target":910,"name":"Subject","package":"@serenity-js/core","refersToTypeParameter":true}},{"id":912,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The value to record"}]},"type":{"type":"reference","target":706,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","target":910,"name":"Subject","package":"@serenity-js/core","refersToTypeParameter":true},"objectType":{"type":"reference","target":899,"name":"Notes","package":"@serenity-js/core","qualifiedName":"NotepadAdapter.Notes","refersToTypeParameter":true}}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"intersection","types":[{"type":"reference","target":844,"typeArguments":[{"type":"reference","target":899,"name":"Notes","package":"@serenity-js/core","qualifiedName":"NotepadAdapter.Notes","refersToTypeParameter":true}],"name":"ChainableSetter","package":"@serenity-js/core"},{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}]},"implementationOf":{"type":"reference","target":846,"name":"ChainableSetter.set"}}],"implementationOf":{"type":"reference","target":845,"name":"ChainableSetter.set"}},{"id":913,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/NotepadAdapter.ts","line":180,"character":4}],"signatures":[{"id":914,"name":"delete","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Removes the note identified by "},{"kind":"code","text":"`subject`"},{"kind":"text","text":" from the notepad.\\n\\n#### Using as an "},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Check, Log, notes } from \'@serenity-js/core\'\\nimport { isPresent } from \'@serenity-js/assertions\'\\n\\ninterface MyNotes {\\n  myNote: string;\\n}\\n\\nawait actorCalled(\'Alice\')\\n  .whoCan(TakeNotes.using(Notepad.empty<MyNotes>()))\\n  .attemptsTo(\\n    notes<MyNotes>().set(\'myNote\', \'example value\'),\\n\\n    notes<MyNotes>().delete(\'myNote\'),\\n\\n    Check.whether(notes<MyNotes>().get(\'myNote\'), isPresent())\\n      .andIfSo(\\n        Log.the(\'myNote is present\'),\\n      )\\n      .otherwise(\\n        Log.the(\'myNote was deleted\'),\\n      )\\n  )\\n  // logs: myNote was deleted\\n```"},{"kind":"text","text":"\\n\\n#### Using as a "},{"kind":"code","text":"`Question`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Check, Log, notes } from \'@serenity-js/core\'\\nimport { isTrue } from \'@serenity-js/assertions\'\\n\\ninterface MyNotes {\\n  myNote: string;\\n}\\n\\nawait actorCalled(\'Alice\')\\n  .whoCan(TakeNotes.using(Notepad.empty<MyNotes>()))\\n  .attemptsTo(\\n    notes<MyNotes>().set(\'myNote\', \'example value\'),\\n\\n    Check.whether(notes<MyNotes>().delete(\'myNote\'), isTrue())\\n      .andIfSo(\\n        Log.the(\'myNote was deleted\'),\\n      )\\n      .otherwise(\\n        Log.the(\'myNote could not be deleted because it was not set\'),\\n      )\\n  )\\n  // logs: myNote was deleted\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Notepad.delete`"},{"kind":"text","text":"](/api/core/class/Notepad/#delete)"}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"When used as a "},{"kind":"code","text":"`Question`"},{"kind":"text","text":", resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the item in the Notepad object existed and has been removed,\\n "},{"kind":"code","text":"`false`"},{"kind":"text","text":" otherwise."}]}]},"sources":[{"fileName":"packages/core/src/screenplay/notes/NotepadAdapter.ts","line":180,"character":4}],"typeParameter":[{"id":915,"name":"Subject","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":916,"name":"subject","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":915,"name":"Subject","package":"@serenity-js/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":917,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/NotepadAdapter.ts","line":210,"character":4}],"signatures":[{"id":918,"name":"clear","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Deletes all the notes stored in this notepad.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, notes } from \'@serenity-js/core\'\\nimport { isTrue } from \'@serenity-js/assertions\'\\n\\ninterface MyNotes {\\n  myNote: string;\\n}\\n\\nawait actorCalled(\'Alice\')\\n  .whoCan(TakeNotes.using(Notepad.empty<MyNotes>()))\\n  .attemptsTo(\\n    notes<MyNotes>().set(\'myNote\', \'example value\'),\\n    Log.the(notes<MyNotes>().size()),   // emits 1\\n    notes<MyNotes>().clear(),\\n    Log.the(notes<MyNotes>().size()),   // emits 0\\n  )\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Notepad.clear`"},{"kind":"text","text":"](/api/core/class/Notepad/#clear)"}]},"sources":[{"fileName":"packages/core/src/screenplay/notes/NotepadAdapter.ts","line":210,"character":4}],"type":{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":919,"name":"size","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/NotepadAdapter.ts","line":239,"character":4}],"signatures":[{"id":920,"name":"size","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the number of notes stored in the notepad.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, notes } from \'@serenity-js/core\'\\nimport { isTrue } from \'@serenity-js/assertions\'\\n\\ninterface MyNotes {\\n  myNote: string;\\n}\\n\\nawait actorCalled(\'Alice\')\\n  .whoCan(TakeNotes.using(Notepad.empty<MyNotes>()))\\n  .attemptsTo(\\n    Log.the(notes<MyNotes>().size()),   // emits 0\\n    notes<MyNotes>().set(\'myNote\', \'example value\'),\\n    Log.the(notes<MyNotes>().size()),   // emits 1\\n  )\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Notepad.size`"},{"kind":"text","text":"](/api/core/class/Notepad/#size)"}]},"sources":[{"fileName":"packages/core/src/screenplay/notes/NotepadAdapter.ts","line":239,"character":4}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":921,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/NotepadAdapter.ts","line":276,"character":4}],"signatures":[{"id":922,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Produces a ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter) that resolves to a "},{"kind":"code","text":"`JSONObject`"},{"kind":"text","text":"\\nrepresenting the resolved notes stored in the notepad.\\n\\nNote that serialisation to JSON will simplify some data types that might not be serialisable by default,\\nbut are commonly used in data structures representing actor\'s notes.\\nFor example a ["},{"kind":"code","text":"`Map`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map) will be serialised as a regular JSON object, a ["},{"kind":"code","text":"`Set`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set) will be serialised as ["},{"kind":"code","text":"`Array`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array).\\n\\nAdditionally, notepad assumes that the data structure you use it with does not contain cyclic references.\\n\\nTo learn more about the serialisation mechanism used by the notepad, please refer to [TinyTypes documentation](https://jan-molak.github.io/tiny-types/).\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, notes } from \'@serenity-js/core\'\\n\\nawait actorCalled(\'Alice\')\\n  .whoCan(TakeNotes.using(Notepad.with({\\n    aSet: new Set([\'apples\', \'bananas\', \'cucumbers\']),\\n    aPromisedValue: Promise.resolve(42),\\n    aString: \'example\'\\n  })))\\n  .attemptsTo(\\n    Log.the(notes().toJSON()),\\n  )\\n  // emits: {\\n  //    aSet: [\'apples\', \'bananas\', \'cucumbers\']\\n  //    aPromisedValue: 42,\\n  //    aString: \'example\',\\n  // }\\n```"}]},"sources":[{"fileName":"packages/core/src/screenplay/notes/NotepadAdapter.ts","line":276,"character":4}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":923,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/NotepadAdapter.ts","line":285,"character":4}],"signatures":[{"id":924,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/core/src/screenplay/notes/NotepadAdapter.ts","line":285,"character":4}],"type":{"type":"intrinsic","name":"string"}}]}],"groups":[{"title":"Constructors","children":[897]},{"title":"Methods","children":[900,904,908,913,917,919,921,923]}],"sources":[{"fileName":"packages/core/src/screenplay/notes/NotepadAdapter.ts","line":22,"character":13}],"typeParameters":[{"id":925,"name":"Notes","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"}}],"implementedTypes":[{"type":"reference","target":844,"typeArguments":[{"type":"reference","target":899,"name":"Notes","package":"@serenity-js/core","qualifiedName":"NotepadAdapter.Notes","refersToTypeParameter":true}],"name":"ChainableSetter","package":"@serenity-js/core"}],"permalink":"/api/core/class/NotepadAdapter","categories":[],"previousId":851,"nextId":929},{"id":929,"name":"TakeNotes","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/) that enables an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to remember information\\nto be recalled during a test scenario.\\n\\nUnder the hood, ["},{"kind":"code","text":"`TakeNotes`"},{"kind":"text","text":"](/api/core/class/TakeNotes/) uses a ["},{"kind":"code","text":"`Notepad`"},{"kind":"text","text":"](/api/core/class/Notepad/), which state\\ncan be populated both during initialisation or while the test scenario is executed.\\nPopulating the notepad when it\'s initialised can be useful to associate authentication credentials\\nor personal details with a given actor, while dynamic recording of notes during a test scenario\\ncan be useful when the data to be recorded is not known upfront - for example when we want\\nthe actor to remember a JWT stored in the browser and then use it when sending API requests.\\n\\n**Pro tip:** ["},{"kind":"code","text":"`TakeNotes`"},{"kind":"text","text":"](/api/core/class/TakeNotes/), ["},{"kind":"code","text":"`Notepad`"},{"kind":"text","text":"](/api/core/class/Notepad/) and ["},{"kind":"code","text":"`notes`"},{"kind":"text","text":"](/api/core/function/notes/) can be typed\\nusing [TypeScript generics](https://www.typescriptlang.org/docs/handbook/2/generics.html)\\nto help you avoid typos when specifying note names.\\n\\nSee [notes](/api/core/function/notes) and ["},{"kind":"code","text":"`Notepad`"},{"kind":"text","text":"](/api/core/class/Notepad/) for more usage examples.\\n\\n## Remembering and retrieving a value\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Log, notes, TakeNotes } from \'@serenity-js/core\'\\n\\nawait actorCalled(\'Leonard\')\\n  .whoCan(TakeNotes.usingAnEmptyNotepad())\\n  .attemptsTo(\\n    notes().set(\'my_note\', \'some value\'),\\n    Log.the(notes().get(\'my_note\')),\\n    // emits \'some value\'\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Using generics\\n\\n"},{"kind":"code","text":"```ts\\n import { actorCalled, Log, notes, TakeNotes } from \'@serenity-js/core\'\\n\\n interface MyNotes {\\n   personalDetails: {\\n     firstName: string;\\n     lastName: string;\\n   }\\n }\\n\\nawait actorCalled(\'Leonard\')\\n  .whoCan(TakeNotes.usingAnEmptyNotepad<MyNotes>())\\n  .attemptsTo(\\n    Log.the(notes<MyNotes>().has(\'personalDetails\')),\\n    // emits false\\n\\n    Log.the(notes<MyNotes>().get(\'personalDetails\').isPresent()),\\n    // emits false\\n\\n    notes<MyNotes>().set(\'personalDetails\', { firstName: \'Leonard\', lastName: \'McLaud\' }),\\n\\n    Log.the(notes<MyNotes>().has(\'personalDetails\')),\\n    // emits true\\n\\n    Log.the(notes<MyNotes>().get(\'personalDetails\').isPresent()),\\n    // emits true\\n\\n    Log.the(notes().get(\'personalDetails\').firstName),\\n    // emits \'Leonard\'\\n\\n    Log.the(notes().get(\'personalDetails\').firstName.toLocaleUpperCase()),\\n    // emits \'LEONARD\'\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Populating the notepad with initial state\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Log, Note, Notepad, TakeNotes } from \'@serenity-js/core\'\\n\\ninterface MyNotes {\\n  firstName: string;\\n  lastName: string;\\n}\\n\\nawait actorCalled(\'Leonard\')\\n  .whoCan(\\n    TakeNotes.using(Notepad.with<MyNotes>({\\n      firstName: \'Leonard\',\\n      lastName: \'McLaud\',\\n    }))\\n  )\\n  .attemptsTo(\\n    notes<MyNotes>().set(\'lastName\', \'Shelby\'),\\n    Log.the(notes().get(\'firstName\')),\\n    // emits \'Leonard\'\\n\\n    Log.the(notes().get(\'lastName\')),\\n    // emits \'Shelby\'\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Recording a dynamic note\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Log, Notepad, notes, TakeNotes } from \'@serenity-js/core\'\\nimport { By, Text, PageElement } from \'@serenity-js/web\'\\nimport { BrowseTheWebWithWebdriverIO } from \'@serenity-js/webdriverio\'\\n\\ninterface OnlineShoppingNotes {\\n  promoCode: string;\\n}\\n\\nconst promoCodeBanner = () =>\\n  PageElement.located(By.css(\'[data-testid=\\"promo-code\\"]\'))\\n    .describedAs(\'promo code\');\\n\\nconst promoCodeInput = () =>\\n  PageElement.located(By.css(\'[data-testid=\\"promo-code-input\\"]\'))\\n    .describedAs(\'promo code field\');\\n\\nawait actorCalled(\'Leonard\')\\n  .whoCan(\\n    BrowseTheWebWithWebdriverIO.using(browser),\\n    TakeNotes.using(Notepad.empty<OnlineShoppingNotes>())\\n  )\\n  .attemptsTo(\\n    notes<OnlineShoppingNotes>().set(\'promoCode\', Text.of(promoCode()),\\n    // ...\\n    Enter.theValue(notes<OnlineShoppingNotes>().get(\'promoCode\'))\\n      .into(promoCodeInput())\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Clearing a notepad before each test scenario (Mocha)\\n\\n"},{"kind":"code","text":"```ts\\nimport \'mocha\';\\n\\nbeforeEach(() =>\\n  actorCalled(\'Leonard\')\\n    .attemptsTo(\\n      notes().clear(),\\n    ))\\n```"},{"kind":"text","text":"\\n\\n## Clearing a notepad before each test scenario (Cucumber)\\n\\n"},{"kind":"code","text":"```ts\\nimport { Before } from \'@cucumber/cucumber\'\\n\\nBefore(() =>\\n  actorCalled(\'Leonard\')\\n    .attemptsTo(\\n      notes().clear(),\\n    ));\\n```"},{"kind":"text","text":"\\n\\n## Importing notes from an API response\\n\\n"},{"kind":"code","text":"```ts\\n // given an example API:\\n //   GET /generate-test-user\\n // which returns:\\n //   { \\"first_name\\": \\"Leonard\\", \\"last_name\\": \\"Shelby\\" }\\n\\nimport { actorCalled, Log, Notepad, notes, TakeNotes } from \'@serenity-js/core\'\\nimport { CallAnApi, GetRequest, Send } from \'@serenity-js/rest\'\\n\\ninterface PersonalDetails {\\n  first_name: string;\\n  last_name: string;\\n}\\n\\ninterface MyNotes {\\n  personalDetails?: PersonalDetails;\\n}\\n\\nawait actorCalled(\'Leonard\')\\n  .whoCan(\\n    CallAnApi.at(\'https://api.example.org/\'),\\n    TakeNotes.using(Notepad.empty<MyNotes>())\\n  )\\n  .attemptsTo(\\n     Send.a(GetRequest.to(\'/generate-test-user\')),\\n     notes<MyNotes>().set(\'personalDetails\', LastResponse.body<PersonalDetails>()),\\n\\n     Log.the(notes<MyNotes>().get(\'personalDetails\').first_name),    // emits \'Leonard\'\\n     Log.the(notes<MyNotes>().get(\'personalDetails\').last_name),     // emits \'Shelby\'\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Using the QuestionAdapter\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Log, Notepad, notes, TakeNotes } from \'@serenity-js/core\'\\n\\ninterface AuthCredentials {\\n  username?: string;\\n  password?: string;\\n}\\n\\ninterface MyNotes {\\n  auth: AuthCredentials;\\n}\\n\\nawait actorCalled(\'Leonard\')\\n  .whoCan(\\n    TakeNotes.using(\\n      Notepad.with<MyNotes>({     // typed initial state\\n        auth: {\\n          username: \'leonard@example.org\',\\n          password: \'SuperSecretP@ssword!\',\\n        }\\n      })\\n    )\\n  )\\n  .attemptsTo(\\n    Log.the(\\n      notes<MyNotes>()          // typed notes\\n        .get(\'auth\')            // returns QuestionAdapter<AuthCredentials>\\n        .password               // returns QuestionAdapter<string>\\n        .charAt(0)\\n        .toLocaleLowerCase(),   // emits \\"s\\"\\n    ),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- [notes](/api/core/function/notes)\\n- ["},{"kind":"code","text":"`Notepad`"},{"kind":"text","text":"](/api/core/class/Notepad/)"}]},"children":[{"id":930,"name":"usingAnEmptyNotepad","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/TakeNotes.ts","line":237,"character":11}],"signatures":[{"id":931,"name":"usingAnEmptyNotepad","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Initialises an ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/) to ["},{"kind":"code","text":"`TakeNotes`"},{"kind":"text","text":"](/api/core/class/TakeNotes/) with ["},{"kind":"code","text":"`Notepad.empty`"},{"kind":"text","text":"](/api/core/class/Notepad/#empty)."}]},"sources":[{"fileName":"packages/core/src/screenplay/notes/TakeNotes.ts","line":237,"character":11}],"typeParameter":[{"id":932,"name":"N","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"}}],"type":{"type":"reference","target":929,"typeArguments":[{"type":"reference","target":932,"name":"N","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"TakeNotes","package":"@serenity-js/core"}}]},{"id":933,"name":"using","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/TakeNotes.ts","line":247,"character":11}],"signatures":[{"id":934,"name":"using","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Initialises an ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/) to ["},{"kind":"code","text":"`TakeNotes`"},{"kind":"text","text":"](/api/core/class/TakeNotes/) using\\na ["},{"kind":"code","text":"`Notepad.with`"},{"kind":"text","text":"](/api/core/class/Notepad/#with) some initial state."}]},"sources":[{"fileName":"packages/core/src/screenplay/notes/TakeNotes.ts","line":247,"character":11}],"typeParameter":[{"id":935,"name":"N","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"}}],"parameters":[{"id":936,"name":"notepad","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":851,"typeArguments":[{"type":"reference","target":935,"name":"N","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Notepad","package":"@serenity-js/core"}}],"type":{"type":"reference","target":929,"typeArguments":[{"type":"reference","target":935,"name":"N","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"TakeNotes","package":"@serenity-js/core"}}]},{"id":951,"name":"abilityType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Ability.ts","line":461,"character":4}],"signatures":[{"id":952,"name":"abilityType","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the most abstract type of this Ability instance,\\nspecifically the first class in the inheritance hierarchy that directly extends the "},{"kind":"code","text":"`Ability`"},{"kind":"text","text":" class.\\n\\n"},{"kind":"code","text":"```ts\\nimport { Ability } from \'@serenity-js/core\';\\n\\nclass MyAbility extends Ability {}\\nclass MySpecialisedAbility extends MyAbility {}\\n\\nnew MyAbility().abilityType();            // returns MyAbility\\nnew MySpecialisedAbility().abilityType(); // returns MyAbility\\n```"}]},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Ability.ts","line":461,"character":4}],"type":{"type":"reference","target":529,"typeArguments":[{"type":"reference","target":508,"name":"Ability","package":"@serenity-js/core"}],"name":"AbilityType","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":528,"name":"Ability.abilityType"}}],"inheritedFrom":{"type":"reference","target":527,"name":"Ability.abilityType"}},{"id":944,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/TakeNotes.ts","line":254,"character":4}],"signatures":[{"id":945,"name":"new TakeNotes","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/TakeNotes.ts","line":254,"character":4}],"typeParameter":[{"id":946,"name":"Notes_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"}}],"parameters":[{"id":947,"name":"notepad","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":851,"typeArguments":[{"type":"reference","target":946,"name":"Notes_Type","package":"@serenity-js/core","qualifiedName":"TakeNotes.Notes_Type","refersToTypeParameter":true}],"name":"Notepad","package":"@serenity-js/core"}}],"type":{"type":"reference","target":929,"typeArguments":[{"type":"reference","target":946,"name":"Notes_Type","package":"@serenity-js/core","qualifiedName":"TakeNotes.Notes_Type","refersToTypeParameter":true}],"name":"TakeNotes","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":524,"name":"Ability.constructor"}}],"overwrites":{"type":"reference","target":523,"name":"Ability.constructor"}},{"id":948,"name":"notepad","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/TakeNotes.ts","line":254,"character":32}],"type":{"type":"reference","target":851,"typeArguments":[{"type":"reference","target":946,"name":"Notes_Type","package":"@serenity-js/core","qualifiedName":"TakeNotes.Notes_Type","refersToTypeParameter":true}],"name":"Notepad","package":"@serenity-js/core"}},{"id":949,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/TakeNotes.ts","line":258,"character":4}],"signatures":[{"id":950,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a JSON representation of the ability and its current state, if available.\\nThe purpose of this method is to enable reporting the state of the ability in a human-readable format,\\nrather than to serialise and deserialise the ability itself."}]},"sources":[{"fileName":"packages/core/src/screenplay/notes/TakeNotes.ts","line":258,"character":4}],"type":{"type":"reference","target":614,"name":"SerialisedAbility","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":526,"name":"Ability.toJSON"}}],"overwrites":{"type":"reference","target":525,"name":"Ability.toJSON"}}],"groups":[{"title":"Constructors","children":[944]},{"title":"Properties","children":[948]},{"title":"Methods","children":[930,933,951,949]}],"sources":[{"fileName":"packages/core/src/screenplay/notes/TakeNotes.ts","line":232,"character":13}],"typeParameters":[{"id":953,"name":"Notes_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"}}],"extendedTypes":[{"type":"reference","target":508,"name":"Ability","package":"@serenity-js/core"}],"permalink":"/api/core/class/TakeNotes","categories":[],"previousId":896,"nextId":926},{"id":926,"name":"notes","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/notes.ts","line":118,"character":16}],"signatures":[{"id":927,"name":"notes","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Alias for ["},{"kind":"code","text":"`Notepad.notes`"},{"kind":"text","text":"](/api/core/class/Notepad/#notes).\\n\\n**Pro tip:** "},{"kind":"code","text":"`notes<T>().get(subject)`"},{"kind":"text","text":" returns a ["},{"kind":"code","text":"`NotepadAdapter`"},{"kind":"text","text":"](/api/core/class/NotepadAdapter/) to make accessing the APIs\\nof the underlying type easier. Check ["},{"kind":"code","text":"`NotepadAdapter`"},{"kind":"text","text":"](/api/core/class/NotepadAdapter/) for more examples.\\n\\n## Working with untyped notes\\n\\nYou can use "},{"kind":"code","text":"`notes<T>()`"},{"kind":"text","text":" without parameterising it with an [interface](https://www.typescriptlang.org/docs/handbook/interfaces.html)\\ndescribing the structure of your notes.\\n\\n**Note:** this approach _is not type-safe_ and the type-safe alternative presented below should be used in most cases.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Log, notes, TakeNotes } from \'@serenity-js/core\';\\n\\nawait actorCalled(\'Leonard\')\\n  .whoCan(TakeNotes.usingAnEmptyNotepad())\\n  .attemptsTo(\\n    notes().set(\'my_note\', \'some value\'),\\n\\n    Log.the(notes().get(\'my_note\')),\\n    // emits \\"some value\\"\\n\\n    Log.the(notes().get(\'my_note\').toLocaleUpperCase()),\\n    // emits \\"SOME VALUE\\"\\n  );\\n```"},{"kind":"text","text":"\\n\\n## Working with typed notes\\n\\nThe **recommended** way to use "},{"kind":"code","text":"`notes<T>()`"},{"kind":"text","text":" is to parameterise it\\nwith an [interface](https://www.typescriptlang.org/docs/handbook/interfaces.html)\\ndescribing the structure of your notes.\\n\\n**Note:** this approach _is type-safe_.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Log, notes, TakeNotes } from \'@serenity-js/core\';\\n\\ninterface MyNotes {\\n  username: string;\\n  token?: string;     // optional value\\n}\\n\\nawait actorCalled(\'Leonard\')\\n  .whoCan(TakeNotes.using(Notepad.with<MyNotes>({\\n    username: \'Leonard.McLaud@example.org\',\\n  }))\\n  .attemptsTo(\\n    notes<MyNotes>().set(\'token\', \'my-auth-token\')\\n\\n    Log.the(notes<MyNotes>().get(\'token\').length),\\n    // emits 13\\n\\n    Log.the(notes<MyNotes>().get(\'username\').toLocaleLowerCase()),\\n    // emits \'leonard.mclaud@example.org\'\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Checking if a note is present\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Check, notes, TakeNotes } from \'@serenity-js/core\'\\nimport { isPresent } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Leonard\')\\n  .whoCan(TakeNotes.using(Notepad.empty()))\\n  .attemptsTo(\\n    Check.whether(notes().get(\'token\'), isPresent())\\n     .andIfSo(\\n       Authenticate.using(notes().get(\'token\')),\\n     )\\n     .otherwise(\\n       SignIn.using(\'username\', \'password\'),\\n     )\\n   )\\n```"},{"kind":"text","text":"\\n\\n## Working with complex data structures\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Log, notes, TakeNotes } from \'@serenity-js/core\'\\n\\ninterface MyNotes {\\n  recordedItems: string[];\\n}\\n\\nawait actorCalled(\'Leonard\')\\n  .whoCan(TakeNotes.using(Notepad.with<MyNotes>({\\n    recordedItems: [],\\n  }))\\n  .attemptsTo(\\n     // push 3 items\\n     notes().get(\'recordedItems\').push(\'apples\'),\\n     notes().get(\'recordedItems\').push(\'cucumbers\'),\\n     notes().get(\'recordedItems\').push(\'bananas\'),\\n\\n     // use QuestionAdapter to access Array.sort()\\n     notes().get(\'recordedItems\').sort(),\\n\\n     Log.the(notes().get(\'recordedItems\')),\\n     // emits \'apples\', \'bananas\', \'cucumbers\'\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`NotepadAdapter`"},{"kind":"text","text":"](/api/core/class/NotepadAdapter/)\\n- ["},{"kind":"code","text":"`Notepad.notes`"},{"kind":"text","text":"](/api/core/class/Notepad/#notes)\\n- ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter)"}]},"sources":[{"fileName":"packages/core/src/screenplay/notes/notes.ts","line":118,"character":16}],"typeParameter":[{"id":928,"name":"N","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"}}],"type":{"type":"reference","target":896,"typeArguments":[{"type":"reference","target":928,"name":"N","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"NotepadAdapter","package":"@serenity-js/core"}}],"permalink":"/api/core/function/notes","categories":[],"previousId":929,"nextId":75},{"id":1067,"name":"AnswersQuestions","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Describes an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) who can answer a ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/) about the system under test.\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/)\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)"}]},"children":[{"id":1068,"name":"answer","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/AnswersQuestions.ts","line":19,"character":4}],"signatures":[{"id":1069,"name":"answer","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Makes the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) evaluate an ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable)\\nand return the value it holds."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/AnswersQuestions.ts","line":19,"character":4}],"typeParameter":[{"id":1070,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":1071,"name":"answerable","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":1070,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":1070,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]}],"groups":[{"title":"Methods","children":[1068]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/AnswersQuestions.ts","line":13,"character":17}],"implementedBy":[{"type":"reference","target":655,"name":"Actor"}],"permalink":"/api/core/interface/AnswersQuestions","categories":[],"previousId":710,"nextId":144},{"id":1072,"name":"ChainableMetaQuestion","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A chainable meta-question is a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/) that can be answered\\nin the context of another ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable),\\nand form a chain of transformations.\\n\\n[Meta-questions](/api/core/interface/MetaQuestion/) are typically used when filtering a ["},{"kind":"code","text":"`List`"},{"kind":"text","text":"](/api/core/class/List/).\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`List`"},{"kind":"text","text":"](/api/core/class/List/)"}]},"children":[{"id":1073,"name":"of","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/ChainableMetaQuestion.ts","line":29,"character":4}],"signatures":[{"id":1074,"name":"of","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Answers the given "},{"kind":"code","text":"`ChainableMetaQuestion`"},{"kind":"text","text":" in the context of another ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable)\\nand returns another "},{"kind":"code","text":"`ChainableMetaQuestion`"},{"kind":"text","text":" ready for further chaining.\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`List`"},{"kind":"text","text":"](/api/core/class/List/)"}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/ChainableMetaQuestion.ts","line":29,"character":4}],"parameters":[{"id":1075,"name":"context","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":1078,"name":"Supported_Context_Type","package":"@serenity-js/core","qualifiedName":"ChainableMetaQuestion.Supported_Context_Type","refersToTypeParameter":true}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"intersection","types":[{"type":"reference","target":1079,"name":"Returned_Question_Type","package":"@serenity-js/core","qualifiedName":"ChainableMetaQuestion.Returned_Question_Type","refersToTypeParameter":true},{"type":"reference","target":1072,"typeArguments":[{"type":"reference","target":1078,"name":"Supported_Context_Type","package":"@serenity-js/core","qualifiedName":"ChainableMetaQuestion.Supported_Context_Type","refersToTypeParameter":true},{"type":"reference","target":1079,"name":"Returned_Question_Type","package":"@serenity-js/core","qualifiedName":"ChainableMetaQuestion.Returned_Question_Type","refersToTypeParameter":true}],"name":"ChainableMetaQuestion","package":"@serenity-js/core"}]},"overwrites":{"type":"reference","target":1563,"name":"MetaQuestion.of"}}],"overwrites":{"type":"reference","target":1562,"name":"MetaQuestion.of"}},{"id":1076,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/MetaQuestion.ts","line":36,"character":4}],"signatures":[{"id":1077,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of this ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/),\\ntypically involving the description of the subject.\\n\\nFor example, a description of a meta question obout \\"the text of an element\\"\\nwould be "},{"kind":"code","text":"`text of ${ element.toString() }`"}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/MetaQuestion.ts","line":36,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":1566,"name":"MetaQuestion.toString"}}],"inheritedFrom":{"type":"reference","target":1565,"name":"MetaQuestion.toString"}}],"groups":[{"title":"Methods","children":[1073,1076]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/ChainableMetaQuestion.ts","line":17,"character":17}],"typeParameters":[{"id":1078,"name":"Supported_Context_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":1079,"name":"Returned_Question_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":957,"typeArguments":[{"type":"intrinsic","name":"unknown"}],"name":"Question","package":"@serenity-js/core"}}],"extendedTypes":[{"type":"reference","target":1561,"typeArguments":[{"type":"reference","target":1078,"name":"Supported_Context_Type","package":"@serenity-js/core","qualifiedName":"ChainableMetaQuestion.Supported_Context_Type","refersToTypeParameter":true},{"type":"intersection","types":[{"type":"reference","target":1079,"name":"Returned_Question_Type","package":"@serenity-js/core","qualifiedName":"ChainableMetaQuestion.Returned_Question_Type","refersToTypeParameter":true},{"type":"reference","target":1072,"typeArguments":[{"type":"reference","target":1078,"name":"Supported_Context_Type","package":"@serenity-js/core","qualifiedName":"ChainableMetaQuestion.Supported_Context_Type","refersToTypeParameter":true},{"type":"reference","target":1079,"name":"Returned_Question_Type","package":"@serenity-js/core","qualifiedName":"ChainableMetaQuestion.Returned_Question_Type","refersToTypeParameter":true}],"name":"ChainableMetaQuestion","package":"@serenity-js/core"}]}],"name":"MetaQuestion","package":"@serenity-js/core"}],"implementedBy":[{"type":"reference","target":1426,"name":"MetaList"}],"permalink":"/api/core/interface/ChainableMetaQuestion","categories":[],"previousId":1949,"nextId":1131},{"id":1080,"name":"Check","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A [flow control statement](https://en.wikipedia.org/wiki/Control_flow)\\nthat enables an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to decide between two alternate series of [activities](/api/core/class/Activity/).\\n\\nThink of it as a Screenplay Pattern equivalent of the traditional "},{"kind":"code","text":"`if`"},{"kind":"text","text":" statement.\\n\\n## Choose between two alternative sequences of activities\\n\\n"},{"kind":"code","text":"```ts\\nimport { equals } from \'@serenity-js/assertions\'\\nimport { actorCalled, Check } from \'@serenity-js/core\'\\n\\nawait actorCalled(\'Chuck\').attemptsTo(\\n  Check.whether(process.env.MODE, equals(\'prod\'))\\n    .andIfSo(\\n      LogInAsProdUser(),\\n    )\\n    .otherwise(\\n      LogInAsTestUser(),\\n    )\\n)\\n```"},{"kind":"text","text":"\\n\\n## Perform a sequence of activities when a condition is met\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Check } from \'@serenity-js/core\'\\nimport { isVisible } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Chuck\').attemptsTo(\\n  Check.whether(CookieConsentBanner(), isVisible())\\n    .andIfSo(\\n        AcceptNecessaryCookies(),\\n    )\\n)\\n```"}]},"children":[{"id":1081,"name":"whether","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Check.ts","line":51,"character":11}],"signatures":[{"id":1082,"name":"whether","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Check.ts","line":51,"character":11}],"typeParameter":[{"id":1083,"name":"Actual_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":1084,"name":"actual","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":1083,"name":"Actual_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Answerable","package":"@serenity-js/core"}},{"id":1085,"name":"expectation","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1156,"typeArguments":[{"type":"reference","target":1083,"name":"Actual_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}],"type":{"type":"reflection","declaration":{"id":1086,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":1087,"name":"andIfSo","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Check.ts","line":51,"character":107}],"type":{"type":"reflection","declaration":{"id":1088,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Check.ts","line":51,"character":116}],"signatures":[{"id":1089,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Check.ts","line":51,"character":116}],"parameters":[{"id":1090,"name":"activities","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":628,"name":"Activity","package":"@serenity-js/core"}}}],"type":{"type":"reference","target":1080,"typeArguments":[{"type":"reference","target":1083,"name":"Actual_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Check","package":"@serenity-js/core"}}]}}}],"groups":[{"title":"Properties","children":[1087]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/Check.ts","line":51,"character":105}]}}}]},{"id":1116,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":38,"character":4}],"signatures":[{"id":1117,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":38,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":1657,"name":"Task.instantiationLocation"}}],"inheritedFrom":{"type":"reference","target":1656,"name":"Task.instantiationLocation"}},{"id":1109,"name":"otherwise","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Check.ts","line":71,"character":4}],"signatures":[{"id":1110,"name":"otherwise","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Check.ts","line":71,"character":4}],"parameters":[{"id":1111,"name":"alternativeActivities","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"comment":{"summary":[{"kind":"text","text":"A sequence of [activities](/api/core/class/Activity/) to perform when the ["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/) is not met."}]},"type":{"type":"array","elementType":{"type":"reference","target":628,"name":"Activity","package":"@serenity-js/core"}}}],"type":{"type":"reference","target":1640,"name":"Task","package":"@serenity-js/core"}}]},{"id":1112,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Check.ts","line":78,"character":10}],"signatures":[{"id":1113,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the provided ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to perform this ["},{"kind":"code","text":"`Task`"},{"kind":"text","text":"](/api/core/class/Task/)."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Check.ts","line":78,"character":10}],"parameters":[{"id":1114,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"#### Learn more\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`PerformsActivities`"},{"kind":"text","text":"](/api/core/interface/PerformsActivities/)\\n- ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/)"}]},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":623,"name":"PerformsActivities","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":1653,"name":"Task.performAs"}}],"overwrites":{"type":"reference","target":1652,"name":"Task.performAs"}},{"id":1118,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"signatures":[{"id":1119,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"parameters":[{"id":1120,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":1121,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":1122,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":66}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[1122]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":64}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":1659,"name":"Task.describedBy"}}],"inheritedFrom":{"type":"reference","target":1658,"name":"Task.describedBy"}},{"id":1128,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"signatures":[{"id":1129,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":1669,"name":"Task.toString"}}],"inheritedFrom":{"type":"reference","target":1668,"name":"Task.toString"}}],"groups":[{"title":"Methods","children":[1081,1116,1109,1112,1118,1128]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/Check.ts","line":49,"character":13}],"typeParameters":[{"id":1130,"name":"Actual","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"extendedTypes":[{"type":"reference","target":1640,"name":"Task","package":"@serenity-js/core"}],"permalink":"/api/core/class/Check","categories":[],"previousId":775,"nextId":502},{"id":1131,"name":"Describable","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"children":[{"id":1135,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"signatures":[{"id":1136,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"parameters":[{"id":1137,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":1138,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":1139,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":66}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[1139]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":64}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":1145,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"signatures":[{"id":1146,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"type":{"type":"intrinsic","name":"string"}}]}],"groups":[{"title":"Methods","children":[1135,1145]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":11,"character":22}],"extendedBy":[{"type":"reference","target":628,"name":"Activity"},{"type":"reference","target":957,"name":"Question"},{"type":"reference","target":1156,"name":"Expectation"}],"permalink":"/api/core/class/Describable","categories":[],"previousId":1072,"nextId":1148},{"id":1148,"name":"DescriptionFormattingOptions","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configuration options for ["},{"kind":"code","text":"`Question.formattedValue`"},{"kind":"text","text":"](/api/core/class/Question/#formattedValue) and\\nthe ["},{"kind":"code","text":"`the`"},{"kind":"text","text":"](/api/core/function/the/) function."}]},"children":[{"id":1149,"name":"maxLength","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The maximum length of the string representation of the value.\\nString representations longer than this value will be truncated and appended with an ellipsis."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/DescriptionFormattingOptions.ts","line":12,"character":4}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[1149]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/DescriptionFormattingOptions.ts","line":7,"character":17}],"permalink":"/api/core/interface/DescriptionFormattingOptions","categories":[],"previousId":1131,"nextId":1306},{"id":1150,"name":"Predicate","variant":"declaration","kind":2097152,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":14,"character":12}],"typeParameters":[{"id":1155,"name":"Actual","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"type":{"type":"reflection","declaration":{"id":1151,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":14,"character":32}],"signatures":[{"id":1152,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"parameters":[{"id":1153,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"}},{"id":1154,"name":"actual","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":1155,"name":"Actual","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"union","types":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":1288,"name":"ExpectationOutcome","package":"@serenity-js/core"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},{"type":"reference","target":1288,"name":"ExpectationOutcome","package":"@serenity-js/core"}]}}]}},"permalink":"/api/core#Predicate","categories":[],"previousId":446,"nextId":1156},{"id":1156,"name":"Expectation","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Defines an expectation to be used with ["},{"kind":"code","text":"`Wait.until`"},{"kind":"text","text":"](/api/core/class/Wait/#until),\\n["},{"kind":"code","text":"`Check.whether`"},{"kind":"text","text":"](/api/core/class/Check/#whether),\\n["},{"kind":"code","text":"`Ensure.that`"},{"kind":"text","text":"](/api/assertions/class/Ensure/#that)\\nand as part of the Page Element Query Language with ["},{"kind":"code","text":"`PageElements.where`"},{"kind":"text","text":"](/api/web/class/PageElements/#where)\\nand ["},{"kind":"code","text":"`List.where`"},{"kind":"text","text":"](/api/core/class/List/#where)."}]},"children":[{"id":1157,"name":"define","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":115,"character":11}],"signatures":[{"id":1158,"name":"define","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A factory method to that makes defining custom [expectations](/api/core/class/Expectation/) easier\\n\\n#### Defining a custom expectation\\n\\n"},{"kind":"code","text":"```ts\\nimport { Expectation } from \'@serenity-js/core\'\\nimport { PageElement } from \'@serenity-js/web\'\\n\\nconst isEmpty = Expectation.define(\\n  \'isEmpty\',         // name of the expectation function to be used when producing an AssertionError\\n  \'become empty\',    // human-readable description of the relationship between expected and actual values\\n  async (actual: PageElement) => {\\n    const value = await actual.value();\\n    return value.length === 0;\\n  }\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Using a custom expectation in an assertion\\n\\n"},{"kind":"code","text":"```ts\\nimport { Ensure } from \'@serenity-js/assertions\'\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { By, Clear, PageElement } from \'@serenity-js/web\'\\n\\nconst nameField = () =>\\n  PageElement.located(By.css(\'[data-test-id=\\"name\\"]\')).describedAs(\'name field\');\\n\\nawait actorCalled(\'Izzy\').attemptsTo(\\n  Clear.the(nameField()),\\n  Ensure.that(nameField(), isEmpty())\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Using a custom expectation in a control flow statement\\n\\n"},{"kind":"code","text":"```ts\\nimport { not } from \'@serenity-js/assertions\'\\nimport { actorCalled, Check, Duration, Wait } from \'@serenity-js/core\'\\nimport { By, PageElement } from \'@serenity-js/web\'\\n\\nconst nameField = () =>\\n  PageElement.located(By.css(\'[data-test-id=\\"name\\"]\')).describedAs(\'name field\');\\n\\nawait actorCalled(\'Izzy\').attemptsTo(\\n  Check.whether(nameField(), isEmpty())\\n    .andIfSo(\\n      Enter.theValue(actorInTheSpotlight().name).into(nameField()),\\n    ),\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Using a custom expectation in a synchronisation statement\\n\\n"},{"kind":"code","text":"```ts\\nimport { not } from \'@serenity-js/assertions\'\\nimport { actorCalled, Duration, Wait } from \'@serenity-js/core\'\\nimport { By, PageElement } from \'@serenity-js/web\'\\n\\nconst nameField = () =>\\n  PageElement.located(By.css(\'[data-test-id=\\"name\\"]\')).describedAs(\'name field\');\\n\\nawait actorCalled(\'Izzy\').attemptsTo(\\n  Enter.theValue(actorInTheSpotlight().name).into(nameField()),\\n\\n  Wait.upTo(Duration.ofSeconds(2))\\n    .until(nameField(), not(isEmpty())),\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Ensure`"},{"kind":"text","text":"](/api/assertions/class/Ensure/)\\n- ["},{"kind":"code","text":"`Check`"},{"kind":"text","text":"](/api/core/class/Check/)\\n- ["},{"kind":"code","text":"`Wait`"},{"kind":"text","text":"](/api/core/class/Wait/)"}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":115,"character":11}],"typeParameter":[{"id":1159,"name":"Actual_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":1160,"name":"PredicateArguments","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"unknown"}}}],"parameters":[{"id":1161,"name":"functionName","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Name of the expectation function to be used when producing an ["},{"kind":"code","text":"`AssertionError`"},{"kind":"text","text":"](/api/core/class/AssertionError/)"}]},"type":{"type":"intrinsic","name":"string"}},{"id":1162,"name":"relationship","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the relationship between the "},{"kind":"code","text":"`expected`"},{"kind":"text","text":" and the "},{"kind":"code","text":"`actual`"},{"kind":"text","text":" values.\\n Used when reporting [activities](/api/core/class/Activity/) performed by an [actor](/api/core/class/Actor/)"}]},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":1163,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":117,"character":23}],"signatures":[{"id":1164,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":117,"character":23}],"parameters":[{"id":1165,"name":"answerableArguments","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"reference","typeArguments":[{"type":"reference","target":1160,"name":"PredicateArguments","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"AnswerableArguments","package":"@serenity-js/core"}}],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}}]}},{"id":1166,"name":"predicate","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":1167,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":118,"character":19}],"signatures":[{"id":1168,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":118,"character":19}],"parameters":[{"id":1169,"name":"actual","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1159,"name":"Actual_Type","package":"@serenity-js/core","refersToTypeParameter":true}},{"id":1170,"name":"predicateArguments","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"reference","target":1160,"name":"PredicateArguments","package":"@serenity-js/core","refersToTypeParameter":true}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"boolean"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reflection","declaration":{"id":1171,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":119,"character":7}],"signatures":[{"id":1172,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":119,"character":7}],"parameters":[{"id":1173,"name":"answerableArguments","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"reference","typeArguments":[{"type":"reference","target":1160,"name":"PredicateArguments","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"AnswerableArguments","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1156,"typeArguments":[{"type":"reference","target":1159,"name":"Actual_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}]}}}]},{"id":1174,"name":"thatActualShould","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":180,"character":11}],"signatures":[{"id":1175,"name":"thatActualShould","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Used to define a simple ["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/)\\n\\n#### Simple parameterised expectation\\n\\n"},{"kind":"code","text":"```ts\\n import { actorCalled, Expectation } from \'@serenity-js/core\'\\n import { Ensure } from \'@serenity-js/assertions\'\\n\\n function isDivisibleBy(expected: Answerable<number>): Expectation<number> {\\n     return Expectation.thatActualShould<number, number>(\'have value divisible by\', expected)\\n         .soThat((actualValue, expectedValue) => actualValue % expectedValue === 0);\\n }\\n\\n await actorCalled(\'Erica\').attemptsTo(\\n     Ensure.that(4, isDivisibleBy(2)),\\n )\\n```"}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":180,"character":11}],"typeParameter":[{"id":1176,"name":"Expected_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":1177,"name":"Actual_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":1178,"name":"relationshipName","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Name of the relationship between the "},{"kind":"code","text":"`actual`"},{"kind":"text","text":" and the "},{"kind":"code","text":"`expected`"},{"kind":"text","text":". Use format "},{"kind":"code","text":"`have value <adjective>`"},{"kind":"text","text":"\\n so that the description works in both positive and negative contexts, e.g. "},{"kind":"code","text":"`Waited until 5 does have value greater than 2`"},{"kind":"text","text":",\\n "},{"kind":"code","text":"`Expected 5 to not have value greater than 2`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"string"}},{"id":1179,"name":"expectedValue","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":1176,"name":"Expected_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reflection","declaration":{"id":1180,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":1181,"name":"soThat","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":181,"character":8}],"type":{"type":"reflection","declaration":{"id":1182,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":181,"character":16}],"signatures":[{"id":1183,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":181,"character":16}],"parameters":[{"id":1184,"name":"simplifiedPredicate","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":1185,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":181,"character":38}],"signatures":[{"id":1186,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":181,"character":38}],"parameters":[{"id":1187,"name":"actualValue","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1177,"name":"Actual_Type","package":"@serenity-js/core","refersToTypeParameter":true}},{"id":1188,"name":"expectedValue","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1176,"name":"Expected_Type","package":"@serenity-js/core","refersToTypeParameter":true}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"boolean"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reference","target":1156,"typeArguments":[{"type":"reference","target":1177,"name":"Actual_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}]}}}],"groups":[{"title":"Properties","children":[1181]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":180,"character":126}]}}}]},{"id":1189,"name":"to","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":236,"character":11}],"signatures":[{"id":1190,"name":"to","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Used to compose [expectations](/api/core/class/Expectation/).\\n\\n#### Composing [expectations](/api/core/class/Expectation/)\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Expectation } from \'@serenity-js/core\'\\nimport { Ensure, and, or, isGreaterThan, isLessThan, equals  } from \'@serenity-js/assertions\'\\n\\nfunction isWithin(lowerBound: number, upperBound: number) {\\n  return Expectation\\n    .to(`have value within ${ lowerBound } and ${ upperBound }`)\\n    .soThatActual(\\n      and(\\n        or(isGreaterThan(lowerBound), equals(lowerBound)),\\n        or(isLessThan(upperBound), equals(upperBound)),\\n      )\\n    )\\n }\\n\\n await actorCalled(\'Erica\').attemptsTo(\\n     Ensure.that(5, isWithin(3, 6)),\\n )\\n```"}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":236,"character":11}],"typeParameter":[{"id":1191,"name":"Actual_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":1192,"name":"relationshipName","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Name of the relationship between the "},{"kind":"code","text":"`actual`"},{"kind":"text","text":" and the "},{"kind":"code","text":"`expected`"},{"kind":"text","text":". Use format "},{"kind":"code","text":"`have value <adjective>`"},{"kind":"text","text":"\\n so that the description works in both positive and negative contexts, e.g. "},{"kind":"code","text":"`Waited until 5 does have value greater than 2`"},{"kind":"text","text":",\\n "},{"kind":"code","text":"`Expected 5 to not have value greater than 2`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reflection","declaration":{"id":1193,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":1194,"name":"soThatActual","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":237,"character":8}],"type":{"type":"reflection","declaration":{"id":1195,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":237,"character":22}],"signatures":[{"id":1196,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":237,"character":22}],"parameters":[{"id":1197,"name":"expectation","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1156,"typeArguments":[{"type":"reference","target":1191,"name":"Actual_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1156,"typeArguments":[{"type":"reference","target":1191,"name":"Actual_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}]}}}],"groups":[{"title":"Properties","children":[1194]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":236,"character":54}]}}}]},{"id":1212,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"signatures":[{"id":1213,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"parameters":[{"id":1214,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":1215,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":1216,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":66}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[1216]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":64}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":1136,"name":"Describable.describedBy"}}],"inheritedFrom":{"type":"reference","target":1135,"name":"Describable.describedBy"}},{"id":1222,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"signatures":[{"id":1223,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":1146,"name":"Describable.toString"}}],"inheritedFrom":{"type":"reference","target":1145,"name":"Describable.toString"}},{"id":1206,"name":"isMetFor","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":267,"character":4}],"signatures":[{"id":1207,"name":"isMetFor","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter) that resolves to ["},{"kind":"code","text":"`ExpectationOutcome`"},{"kind":"text","text":"](/api/core/class/ExpectationOutcome/)\\nindicating that the [expectation was met](/api/core/class/ExpectationMet/)\\nor that the [expectation was not met](/api/core/class/ExpectationNotMet/)"}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":267,"character":4}],"parameters":[{"id":1208,"name":"actual","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":1224,"name":"Actual","package":"@serenity-js/core","qualifiedName":"Expectation.Actual","refersToTypeParameter":true}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"reference","target":1288,"name":"ExpectationOutcome","package":"@serenity-js/core"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":1209,"name":"describedAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":274,"character":4}],"signatures":[{"id":1210,"name":"describedAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":274,"character":4}],"parameters":[{"id":1211,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"this"}}]}],"groups":[{"title":"Methods","children":[1157,1174,1189,1212,1222,1206,1209]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":28,"character":13}],"typeParameters":[{"id":1224,"name":"Actual","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"extendedTypes":[{"type":"reference","target":1131,"name":"Describable","package":"@serenity-js/core"}],"permalink":"/api/core/class/Expectation","categories":[],"previousId":1150,"nextId":1225},{"id":1306,"name":"List","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"Serenity/JS Screenplay Pattern-style wrapper around ["},{"kind":"code","text":"`Array`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array)\\nand array-like structures - see ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElements/)."}]},"children":[{"id":1307,"name":"of","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":22,"character":11},{"fileName":"packages/core/src/screenplay/questions/List.ts","line":23,"character":11},{"fileName":"packages/core/src/screenplay/questions/List.ts","line":24,"character":11}],"signatures":[{"id":1308,"name":"of","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":22,"character":11}],"typeParameter":[{"id":1309,"name":"IT","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":1310,"name":"CT","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":1311,"name":"RQT","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":1309,"name":"IT","package":"@serenity-js/core","refersToTypeParameter":true}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"},{"type":"reference","target":957,"typeArguments":[{"type":"array","elementType":{"type":"reference","target":1309,"name":"IT","package":"@serenity-js/core","refersToTypeParameter":true}}],"name":"Question","package":"@serenity-js/core"}]}}],"parameters":[{"id":1312,"name":"collection","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":706,"typeArguments":[{"type":"array","elementType":{"type":"reference","target":1309,"name":"IT","package":"@serenity-js/core","refersToTypeParameter":true}}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":1072,"typeArguments":[{"type":"reference","target":1310,"name":"CT","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":1311,"name":"RQT","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"ChainableMetaQuestion","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":1426,"typeArguments":[{"type":"reference","target":1310,"name":"CT","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":1309,"name":"IT","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"MetaList","package":"@serenity-js/core"}},{"id":1313,"name":"of","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":23,"character":11}],"typeParameter":[{"id":1314,"name":"IT","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":1315,"name":"collection","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"array","elementType":{"type":"reference","target":1314,"name":"IT","package":"@serenity-js/core","refersToTypeParameter":true}}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1306,"typeArguments":[{"type":"reference","target":1314,"name":"IT","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"List","package":"@serenity-js/core"}}]},{"id":1403,"name":"describedAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":494,"character":4}],"signatures":[{"id":1404,"name":"describedAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Changes the description of this object, as returned by ["},{"kind":"code","text":"`Describable.describedBy`"},{"kind":"text","text":"](/api/core/class/Describable/#describedBy)\\nand ["},{"kind":"code","text":"`Describable.toString`"},{"kind":"text","text":"](/api/core/class/Describable/#toString)."}]},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":494,"character":4}],"parameters":[{"id":1405,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Replaces the current description according to the following rules:\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is an ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable), it replaces the current description\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/), the current description is passed as "},{"kind":"code","text":"`context`"},{"kind":"text","text":" to "},{"kind":"code","text":"`description.of(context)`"},{"kind":"text","text":", and the result replaces the current description"}]},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":1561,"typeArguments":[{"type":"array","elementType":{"type":"reference","target":1367,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"List.Item_Type","refersToTypeParameter":true}},{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}]}}],"type":{"type":"intrinsic","name":"this"},"inheritedFrom":{"type":"reference","target":1025,"name":"Question.describedAs"}}],"inheritedFrom":{"type":"reference","target":1024,"name":"Question.describedAs"}},{"id":1406,"name":"as","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":514,"character":11}],"signatures":[{"id":1407,"name":"as","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Maps this question to one of a different type.\\n\\n"},{"kind":"code","text":"```ts\\nQuestion.about(\'number returned as string\', actor => \'42\')   // returns: QuestionAdapter<string>\\n  .as(Number)                                                // returns: QuestionAdapter<number>\\n```"}]},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":514,"character":11}],"typeParameter":[{"id":1408,"name":"O","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":1409,"name":"mapping","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":1410,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":514,"character":26}],"signatures":[{"id":1411,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":514,"character":26}],"parameters":[{"id":1412,"name":"answer","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"reference","target":1367,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"List.Item_Type","refersToTypeParameter":true}}}],"type":{"type":"union","types":[{"type":"reference","target":1029,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":1029,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"reference","target":1029,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":1028,"name":"Question.as"}}],"inheritedFrom":{"type":"reference","target":1027,"name":"Question.as"}},{"id":1413,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"signatures":[{"id":1414,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"parameters":[{"id":1415,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":1416,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":1417,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":66}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[1417]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":64}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":1035,"name":"Question.describedBy"}}],"inheritedFrom":{"type":"reference","target":1034,"name":"Question.describedBy"}},{"id":1423,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"signatures":[{"id":1424,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":1045,"name":"Question.toString"}}],"inheritedFrom":{"type":"reference","target":1044,"name":"Question.toString"}},{"id":1365,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":32,"character":4}],"signatures":[{"id":1366,"name":"new List","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":32,"character":4}],"typeParameter":[{"id":1367,"name":"Item_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":1368,"name":"collection","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"array","elementType":{"type":"reference","target":1367,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"List.Item_Type","refersToTypeParameter":true}}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1306,"typeArguments":[{"type":"reference","target":1367,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"List.Item_Type","refersToTypeParameter":true}],"name":"List","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"Question<Promise<Array<Item_Type>>>.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"Question<Promise<Array<Item_Type>>>.constructor"}},{"id":1371,"name":"forEach","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":36,"character":4}],"signatures":[{"id":1372,"name":"forEach","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":36,"character":4}],"parameters":[{"id":1373,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":1374,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":36,"character":22}],"signatures":[{"id":1375,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":36,"character":22}],"parameters":[{"id":1376,"name":"current","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1551,"typeArguments":[{"type":"reference","target":1367,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"List.Item_Type","refersToTypeParameter":true}],"name":"CurrentItem","package":"@serenity-js/core"}},{"id":1377,"name":"index","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}},{"id":1378,"name":"items","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"reference","target":1367,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"List.Item_Type","refersToTypeParameter":true}}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"void"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reference","target":1640,"name":"Task","package":"@serenity-js/core"}}]},{"id":1379,"name":"eachMappedTo","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":40,"character":13}],"signatures":[{"id":1380,"name":"eachMappedTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":40,"character":13}],"typeParameter":[{"id":1381,"name":"Mapped_Item_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":1382,"name":"question","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1561,"typeArguments":[{"type":"reference","target":1367,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"List.Item_Type","refersToTypeParameter":true},{"type":"reference","target":957,"typeArguments":[{"type":"union","types":[{"type":"reference","target":1381,"name":"Mapped_Item_Type","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":1381,"name":"Mapped_Item_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1306,"typeArguments":[{"type":"reference","target":1381,"name":"Mapped_Item_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"List","package":"@serenity-js/core"}}]},{"id":1383,"name":"where","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":44,"character":13}],"signatures":[{"id":1384,"name":"where","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":44,"character":13}],"typeParameter":[{"id":1385,"name":"Answer_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":1386,"name":"question","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1561,"typeArguments":[{"type":"reference","target":1367,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"List.Item_Type","refersToTypeParameter":true},{"type":"reference","target":957,"typeArguments":[{"type":"union","types":[{"type":"reference","target":1385,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":1385,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}},{"id":1387,"name":"expectation","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1156,"typeArguments":[{"type":"reference","target":1385,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1306,"typeArguments":[{"type":"reference","target":1367,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"List.Item_Type","refersToTypeParameter":true}],"name":"List","package":"@serenity-js/core"}}]},{"id":1388,"name":"count","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":49,"character":13}],"signatures":[{"id":1389,"name":"count","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":49,"character":13}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":1390,"name":"first","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":51,"character":13}],"signatures":[{"id":1391,"name":"first","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":51,"character":13}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"reference","target":1367,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"List.Item_Type","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":1392,"name":"last","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":53,"character":13}],"signatures":[{"id":1393,"name":"last","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":53,"character":13}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"reference","target":1367,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"List.Item_Type","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":1394,"name":"nth","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":55,"character":13}],"signatures":[{"id":1395,"name":"nth","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":55,"character":13}],"parameters":[{"id":1396,"name":"index","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"reference","target":1367,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"List.Item_Type","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":1397,"name":"answeredBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":57,"character":10}],"signatures":[{"id":1398,"name":"answeredBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the provided ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to use their [abilities](/api/core/class/Ability/)\\nto answer this question."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":57,"character":10}],"parameters":[{"id":1399,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":1367,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"List.Item_Type","refersToTypeParameter":true}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":1022,"name":"Question.answeredBy"}}],"overwrites":{"type":"reference","target":1021,"name":"Question.answeredBy"}}],"groups":[{"title":"Constructors","children":[1365]},{"title":"Methods","children":[1307,1403,1406,1413,1423,1371,1379,1383,1388,1390,1392,1394,1397]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":19,"character":22}],"typeParameters":[{"id":1425,"name":"Item_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"extendedTypes":[{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":1367,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"List.Item_Type","refersToTypeParameter":true}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"extendedBy":[{"type":"reference","target":1426,"name":"MetaList"}],"permalink":"/api/core/class/List","categories":[],"previousId":1148,"nextId":1426},{"id":1426,"name":"MetaList","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Serenity/JS Screenplay Pattern-style wrapper around\\na ["},{"kind":"code","text":"`ChainableMetaQuestion`"},{"kind":"text","text":"](/api/core/interface/ChainableMetaQuestion/) representing a collection\\nthat can be resolved in "},{"kind":"code","text":"`Supported_Context_Type`"},{"kind":"text","text":" of another ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/).\\n\\nFor example, ["},{"kind":"code","text":"`PageElements.located`"},{"kind":"text","text":"](/api/web/class/PageElements/#located) returns "},{"kind":"code","text":"`MetaList<PageElement>`"},{"kind":"text","text":",\\nwhich allows for the collection of page elements to be resolved in the context\\nof dynamically-provided root element.\\n\\n"},{"kind":"code","text":"```typescript\\nimport { By, PageElements, PageElement } from \'@serenity-js/web\'\\n\\nconst firstLabel = () =>\\n  PageElements.located(By.css(\'label\'))\\n     .first()\\n     .describedAs(\'first label\')\\n\\nconst exampleForm = () =>\\n  PageElement.located(By.css(\'form#example1\'))\\n     .describedAs(\'example form\')\\n\\nconst anotherExampleForm = () =>\\n  PageElement.located(By.css(\'form#example2\'))\\n     .describedAs(\'another example form\')\\n\\n// Next, you can compose the above questions dynamically with various \\"contexts\\":\\n//   firstLabel().of(exampleForm())\\n//   firstLabel().of(anotherExampleForm())\\n```"}]},"children":[{"id":1527,"name":"describedAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":494,"character":4}],"signatures":[{"id":1528,"name":"describedAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Changes the description of this object, as returned by ["},{"kind":"code","text":"`Describable.describedBy`"},{"kind":"text","text":"](/api/core/class/Describable/#describedBy)\\nand ["},{"kind":"code","text":"`Describable.toString`"},{"kind":"text","text":"](/api/core/class/Describable/#toString)."}]},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":494,"character":4}],"parameters":[{"id":1529,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Replaces the current description according to the following rules:\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is an ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable), it replaces the current description\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/), the current description is passed as "},{"kind":"code","text":"`context`"},{"kind":"text","text":" to "},{"kind":"code","text":"`description.of(context)`"},{"kind":"text","text":", and the result replaces the current description"}]},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":1561,"typeArguments":[{"type":"array","elementType":{"type":"reference","target":1488,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Item_Type","refersToTypeParameter":true}},{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}]}}],"type":{"type":"intrinsic","name":"this"},"inheritedFrom":{"type":"reference","target":1404,"name":"List.describedAs"}}],"inheritedFrom":{"type":"reference","target":1403,"name":"List.describedAs"}},{"id":1530,"name":"as","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":514,"character":11}],"signatures":[{"id":1531,"name":"as","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Maps this question to one of a different type.\\n\\n"},{"kind":"code","text":"```ts\\nQuestion.about(\'number returned as string\', actor => \'42\')   // returns: QuestionAdapter<string>\\n  .as(Number)                                                // returns: QuestionAdapter<number>\\n```"}]},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":514,"character":11}],"typeParameter":[{"id":1532,"name":"O","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":1533,"name":"mapping","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":1534,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":514,"character":26}],"signatures":[{"id":1535,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":514,"character":26}],"parameters":[{"id":1536,"name":"answer","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"reference","target":1488,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Item_Type","refersToTypeParameter":true}}}],"type":{"type":"union","types":[{"type":"reference","target":1029,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":1029,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"reference","target":1029,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":1407,"name":"List.as"}}],"inheritedFrom":{"type":"reference","target":1406,"name":"List.as"}},{"id":1537,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"signatures":[{"id":1538,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"parameters":[{"id":1539,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":1540,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":1541,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":66}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[1541]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":64}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":1414,"name":"List.describedBy"}}],"inheritedFrom":{"type":"reference","target":1413,"name":"List.describedBy"}},{"id":1547,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"signatures":[{"id":1548,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":1424,"name":"List.toString"},"implementationOf":{"type":"reference","target":1077,"name":"ChainableMetaQuestion.toString"}}],"inheritedFrom":{"type":"reference","target":1423,"name":"List.toString"},"implementationOf":{"type":"reference","target":1076,"name":"ChainableMetaQuestion.toString"}},{"id":1513,"name":"forEach","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":36,"character":4}],"signatures":[{"id":1514,"name":"forEach","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":36,"character":4}],"parameters":[{"id":1515,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":1516,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":36,"character":22}],"signatures":[{"id":1517,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":36,"character":22}],"parameters":[{"id":1518,"name":"current","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1551,"typeArguments":[{"type":"reference","target":1488,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Item_Type","refersToTypeParameter":true}],"name":"CurrentItem","package":"@serenity-js/core"}},{"id":1519,"name":"index","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}},{"id":1520,"name":"items","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"reference","target":1488,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Item_Type","refersToTypeParameter":true}}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"void"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reference","target":1640,"name":"Task","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":1372,"name":"List.forEach"}}],"inheritedFrom":{"type":"reference","target":1371,"name":"List.forEach"}},{"id":1521,"name":"answeredBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":57,"character":10}],"signatures":[{"id":1522,"name":"answeredBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the provided ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to use their [abilities](/api/core/class/Ability/)\\nto answer this question."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":57,"character":10}],"parameters":[{"id":1523,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":1488,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Item_Type","refersToTypeParameter":true}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":1398,"name":"List.answeredBy"}}],"inheritedFrom":{"type":"reference","target":1397,"name":"List.answeredBy"}},{"id":1485,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":190,"character":4}],"signatures":[{"id":1486,"name":"new MetaList","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":190,"character":4}],"typeParameter":[{"id":1487,"name":"Supported_Context_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":1488,"name":"Item_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":1489,"name":"collection","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":706,"typeArguments":[{"type":"array","elementType":{"type":"reference","target":1488,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Item_Type","refersToTypeParameter":true}}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":1072,"typeArguments":[{"type":"reference","target":1487,"name":"Supported_Context_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Supported_Context_Type","refersToTypeParameter":true},{"type":"union","types":[{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":1488,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Item_Type","refersToTypeParameter":true}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"},{"type":"reference","target":957,"typeArguments":[{"type":"array","elementType":{"type":"reference","target":1488,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Item_Type","refersToTypeParameter":true}}],"name":"Question","package":"@serenity-js/core"}]}],"name":"ChainableMetaQuestion","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":1426,"typeArguments":[{"type":"reference","target":1487,"name":"Supported_Context_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Supported_Context_Type","refersToTypeParameter":true},{"type":"reference","target":1488,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Item_Type","refersToTypeParameter":true}],"name":"MetaList","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":1366,"name":"List.constructor"}}],"overwrites":{"type":"reference","target":1365,"name":"List.constructor"}},{"id":1491,"name":"of","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":196,"character":4}],"signatures":[{"id":1492,"name":"of","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Answers the given "},{"kind":"code","text":"`ChainableMetaQuestion`"},{"kind":"text","text":" in the context of another ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable)\\nand returns another "},{"kind":"code","text":"`ChainableMetaQuestion`"},{"kind":"text","text":" ready for further chaining.\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`List`"},{"kind":"text","text":"](/api/core/class/List/)"}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":196,"character":4}],"parameters":[{"id":1493,"name":"context","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":1487,"name":"Supported_Context_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Supported_Context_Type","refersToTypeParameter":true}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1426,"typeArguments":[{"type":"reference","target":1487,"name":"Supported_Context_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Supported_Context_Type","refersToTypeParameter":true},{"type":"reference","target":1488,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Item_Type","refersToTypeParameter":true}],"name":"MetaList","package":"@serenity-js/core"},"implementationOf":{"type":"reference","target":1074,"name":"ChainableMetaQuestion.of"}}],"implementationOf":{"type":"reference","target":1073,"name":"ChainableMetaQuestion.of"}},{"id":1494,"name":"eachMappedTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":202,"character":13}],"signatures":[{"id":1495,"name":"eachMappedTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":202,"character":13}],"typeParameter":[{"id":1496,"name":"Mapped_Item_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":1497,"name":"question","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1561,"typeArguments":[{"type":"reference","target":1488,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Item_Type","refersToTypeParameter":true},{"type":"reference","target":957,"typeArguments":[{"type":"union","types":[{"type":"reference","target":1496,"name":"Mapped_Item_Type","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":1496,"name":"Mapped_Item_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1426,"typeArguments":[{"type":"reference","target":1487,"name":"Supported_Context_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Supported_Context_Type","refersToTypeParameter":true},{"type":"reference","target":1496,"name":"Mapped_Item_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"MetaList","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":1380,"name":"List.eachMappedTo"}}],"overwrites":{"type":"reference","target":1379,"name":"List.eachMappedTo"}},{"id":1498,"name":"where","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":210,"character":13}],"signatures":[{"id":1499,"name":"where","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":210,"character":13}],"typeParameter":[{"id":1500,"name":"Answer_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":1501,"name":"question","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1561,"typeArguments":[{"type":"reference","target":1488,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Item_Type","refersToTypeParameter":true},{"type":"reference","target":957,"typeArguments":[{"type":"union","types":[{"type":"reference","target":1500,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":1500,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}},{"id":1502,"name":"expectation","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1156,"typeArguments":[{"type":"reference","target":1500,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1426,"typeArguments":[{"type":"reference","target":1487,"name":"Supported_Context_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Supported_Context_Type","refersToTypeParameter":true},{"type":"reference","target":1488,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Item_Type","refersToTypeParameter":true}],"name":"MetaList","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":1384,"name":"List.where"}}],"overwrites":{"type":"reference","target":1383,"name":"List.where"}},{"id":1503,"name":"count","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":219,"character":13}],"signatures":[{"id":1504,"name":"count","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":219,"character":13}],"type":{"type":"reference","target":1064,"typeArguments":[{"type":"reference","target":1487,"name":"Supported_Context_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Supported_Context_Type","refersToTypeParameter":true},{"type":"intrinsic","name":"number"}],"name":"MetaQuestionAdapter","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":1389,"name":"List.count"}}],"overwrites":{"type":"reference","target":1388,"name":"List.count"}},{"id":1505,"name":"first","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":229,"character":13}],"signatures":[{"id":1506,"name":"first","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":229,"character":13}],"type":{"type":"reference","target":1064,"typeArguments":[{"type":"reference","target":1487,"name":"Supported_Context_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Supported_Context_Type","refersToTypeParameter":true},{"type":"reference","target":1488,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Item_Type","refersToTypeParameter":true}],"name":"MetaQuestionAdapter","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":1391,"name":"List.first"}}],"overwrites":{"type":"reference","target":1390,"name":"List.first"}},{"id":1507,"name":"last","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":244,"character":13}],"signatures":[{"id":1508,"name":"last","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":244,"character":13}],"type":{"type":"reference","target":1064,"typeArguments":[{"type":"reference","target":1487,"name":"Supported_Context_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Supported_Context_Type","refersToTypeParameter":true},{"type":"reference","target":1488,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Item_Type","refersToTypeParameter":true}],"name":"MetaQuestionAdapter","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":1393,"name":"List.last"}}],"overwrites":{"type":"reference","target":1392,"name":"List.last"}},{"id":1509,"name":"nth","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":259,"character":13}],"signatures":[{"id":1510,"name":"nth","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":259,"character":13}],"parameters":[{"id":1511,"name":"index","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":1064,"typeArguments":[{"type":"reference","target":1487,"name":"Supported_Context_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Supported_Context_Type","refersToTypeParameter":true},{"type":"reference","target":1488,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Item_Type","refersToTypeParameter":true}],"name":"MetaQuestionAdapter","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":1395,"name":"List.nth"}}],"overwrites":{"type":"reference","target":1394,"name":"List.nth"}}],"groups":[{"title":"Constructors","children":[1485]},{"title":"Methods","children":[1527,1530,1537,1547,1513,1521,1491,1494,1498,1503,1505,1507,1509]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":186,"character":13}],"typeParameters":[{"id":1549,"name":"Supported_Context_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":1550,"name":"Item_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"extendedTypes":[{"type":"reference","target":1306,"typeArguments":[{"type":"reference","target":1488,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Item_Type","refersToTypeParameter":true}],"name":"List","package":"@serenity-js/core"}],"implementedTypes":[{"type":"reference","target":1072,"typeArguments":[{"type":"reference","target":1487,"name":"Supported_Context_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Supported_Context_Type","refersToTypeParameter":true},{"type":"reference","target":1426,"typeArguments":[{"type":"reference","target":1487,"name":"Supported_Context_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Supported_Context_Type","refersToTypeParameter":true},{"type":"reference","target":1488,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Item_Type","refersToTypeParameter":true}],"name":"MetaList","package":"@serenity-js/core"}],"name":"ChainableMetaQuestion","package":"@serenity-js/core"}],"permalink":"/api/core/class/MetaList","categories":[],"previousId":1306,"nextId":1551},{"id":1551,"name":"CurrentItem","variant":"declaration","kind":256,"flags":{"isExternal":true},"children":[{"id":1552,"name":"item","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":400,"character":4}],"type":{"type":"reference","target":1554,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"CurrentItem.Item_Type","refersToTypeParameter":true}},{"id":1553,"name":"actor","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":401,"character":4}],"type":{"type":"reference","target":655,"name":"Actor","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[1552,1553]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":399,"character":17}],"typeParameters":[{"id":1554,"name":"Item_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"permalink":"/api/core/interface/CurrentItem","categories":[],"previousId":1426,"nextId":1555},{"id":1555,"name":"Masked","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"This question masks sensitive data handled by the actors and prevents\\nit from being shown in Serenity/JS reports and console logs.\\nYou should use it to wrap passwords, secret tokens, phone numbers,\\ncredit card numbers, or any other personally identifiable information (PII).\\nHowever, even though the wrapped value is masked in the output,\\nyou can still retrieve the unmasked value by making the actor answer\\nthe question in your custom interactions."}]},"children":[{"id":1556,"name":"valueOf","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Masked.ts","line":37,"character":11}],"signatures":[{"id":1557,"name":"valueOf","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Retrieves the value of a sensitive parameter and mask it in any report.\\n\\n#### Example\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Masked } from \'@serenity-js/core\';\\nimport { Ensure, equals } from \'@serenity-js/assertions\';\\n\\nawait actorCalled(\'John\')\\n  .attemptsTo(\\n    Enter.theValue(Masked.valueOf(\'your little secret\')).into(Form.exampleInput())\\n  );\\n```"}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter) representing the masked value."}]}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Masked.ts","line":37,"character":11}],"parameters":[{"id":1558,"name":"parameter","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable) representing the masked value."}]},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":1559,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":1560,"name":"new Masked","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":1555,"name":"Masked","package":"@serenity-js/core"}}]}],"groups":[{"title":"Constructors","children":[1559]},{"title":"Methods","children":[1556]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/Masked.ts","line":15,"character":13}],"permalink":"/api/core/class/Masked","categories":[],"previousId":1551,"nextId":1561},{"id":1561,"name":"MetaQuestion","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A meta-question is a ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/) that can be answered\\nin the context of another ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable),\\ntypically to transform its value.\\n\\nFor example, the question ["},{"kind":"code","text":"`Text.of`"},{"kind":"text","text":"](/api/web/class/Text/#of) can be answered in the context\\nof a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) to return its text content.\\n\\n[Meta-questions](/api/core/interface/MetaQuestion/) are typically used when filtering a ["},{"kind":"code","text":"`List`"},{"kind":"text","text":"](/api/core/class/List/).\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`List`"},{"kind":"text","text":"](/api/core/class/List/)"}]},"children":[{"id":1562,"name":"of","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/MetaQuestion.ts","line":27,"character":4}],"signatures":[{"id":1563,"name":"of","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Answers the given "},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":" in the context of another ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable).\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`List`"},{"kind":"text","text":"](/api/core/class/List/)"}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/MetaQuestion.ts","line":27,"character":4}],"parameters":[{"id":1564,"name":"context","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":1567,"name":"Supported_Context_Type","package":"@serenity-js/core","qualifiedName":"MetaQuestion.Supported_Context_Type","refersToTypeParameter":true}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1568,"name":"Returned_Question_Type","package":"@serenity-js/core","qualifiedName":"MetaQuestion.Returned_Question_Type","refersToTypeParameter":true}}]},{"id":1565,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/MetaQuestion.ts","line":36,"character":4}],"signatures":[{"id":1566,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of this ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/),\\ntypically involving the description of the subject.\\n\\nFor example, a description of a meta question obout \\"the text of an element\\"\\nwould be "},{"kind":"code","text":"`text of ${ element.toString() }`"}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/MetaQuestion.ts","line":36,"character":4}],"type":{"type":"intrinsic","name":"string"}}]}],"groups":[{"title":"Methods","children":[1562,1565]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/MetaQuestion.ts","line":19,"character":17}],"typeParameters":[{"id":1567,"name":"Supported_Context_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":1568,"name":"Returned_Question_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":957,"typeArguments":[{"type":"intrinsic","name":"unknown"}],"name":"Question","package":"@serenity-js/core"}}],"extendedBy":[{"type":"reference","target":1072,"name":"ChainableMetaQuestion"}],"permalink":"/api/core/interface/MetaQuestion","categories":[],"previousId":1555,"nextId":1569},{"id":1569,"name":"Numeric","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Provides methods to perform calculations on numeric values returned by other [questions](/api/core/class/Question/).\\n\\n## Example\\n\\nThe examples in this section demonstrate interacting with an HTML widget representing a price list.\\n\\n"},{"kind":"code","text":"```html\\n<ul id=\\"price-list\\">\\n    <li class=\\"item\\">\\n        <span class=\\"name\\">apples</span>\\n        <span class=\\"quantity\\">5</span>\\n        <span class=\\"price\\">\xa32.25</span>\\n    </li>\\n    <li class=\\"item\\">\\n        <span class=\\"name\\">apricots</span>\\n        <span class=\\"quantity\\">4</span>\\n        <span class=\\"price\\">\xa33.70</span>\\n    </li>\\n    <li class=\\"item\\">\\n        <span class=\\"name\\">bananas</span>\\n        <span class=\\"quantity\\">2</span>\\n        <span class=\\"price\\">\xa31.50</span>\\n    </li>\\n</ul>\\n```"},{"kind":"text","text":"\\n\\n### Lean Page Objects\\n\\nTo represent our example HTML widget,\\nwe follow the [Lean Page Objects pattern](/handbook/web-testing/page-objects-pattern/)\\nto define the "},{"kind":"code","text":"`PriceList`"},{"kind":"text","text":" and "},{"kind":"code","text":"`PriceListItem`"},{"kind":"text","text":" classes\\nand use the Serenity/JS [Page Element Query Language (PEQL)](/handbook/web-testing/page-element-query-language/)\\nto identify the elements of interest.\\n\\n"},{"kind":"code","text":"```ts\\n// ui/price-list.ts\\n\\nimport { PageElement, PageElements, By } from \'@serenity-js/web\'\\n\\nexport class PriceList {\\n  static container = () =>\\n     PageElement.located(By.id(\'price-list\'))\\n         .describedAs(\'price list\')\\n\\n  static items = () =>\\n     PageElements.located(PriceListItem.containerSelector())\\n         .of(this.container())\\n         .describedAs(\'items\')\\n}\\n\\nexport class PriceListItem {\\n  static containerSelector = () =>\\n    By.css(\'.item\')\\n\\n  static container = () =>\\n    PageElement.located(this.containerSelector())\\n      .describedAs(\'item\')\\n\\n  static name = () =>\\n    PageElement.located(By.css(\'.name\'))\\n      .of(this.container())\\n      .describedAs(\'name\')\\n\\n  static quantity = () =>\\n    PageElement.located(By.css(\'.quantity\'))\\n      .of(this.container())\\n      .describedAs(\'quantity\')\\n\\n  static price = () =>\\n    PageElement.located(By.css(\'.price\'))\\n      .of(this.container())\\n      .describedAs(\'price\')\\n}\\n```"}]},"children":[{"id":1570,"name":"sum","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Numeric.ts","line":276,"character":11}],"signatures":[{"id":1571,"name":"sum","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/) that sums up the values provided\\nand throws if any of the values is not a "},{"kind":"code","text":"`number`"},{"kind":"text","text":".\\n\\n#### Adding static numbers\\n\\nThe most basic example of using the "},{"kind":"code","text":"`Numeric.sum`"},{"kind":"text","text":" method is to add up a few numbers.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Numeric } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Zo\xe9\').attemptsTo(\\n  Ensure.that(\\n    Numeric.sum(1, 2, 3),\\n    equals(6),\\n  )\\n)\\n```"},{"kind":"text","text":"\\n\\nThe numbers can be provided individually, as an array, or as a combination of both.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Numeric } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Zo\xe9\').attemptsTo(\\n  Ensure.that(\\n    Numeric.sum([ 1, 2 ], 3, [ 4, 5 ]),\\n    equals(15),\\n  )\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Adding numbers returned by other questions\\n\\nApart from adding static numbers, you can also add numbers returned by other questions.\\nThis is particularly useful when you need to calculate the sum of numbers extracted from a list of UI elements\\nor from an API response.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Numeric, Question } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nconst myNumber = () =>\\n  Question.about(\'my number\', actor => 42)\\n\\nconst myArrayOfNumbers = () =>\\n  Question.about(\'my array of numbers\', actor => [ 1, 2, 3 ])\\n\\nconst myObjectWithNumbers = () =>\\n  Question.about(\'my object with numbers\', actor => ({ a: 1, b: 2, c: 3 }))\\n\\nawait actorCalled(\'Zo\xe9\').attemptsTo(\\n  Ensure.that(\\n    Numeric.sum(\\n      myNumber(),            // a question returning a number\\n      myArrayOfNumbers(),    // a question returning an array of numbers\\n    ),\\n    equals(48),\\n  ),\\n  Ensure.that(\\n    Numeric.sum(\\n      myObjectWithNumbers()  // a question returning an object with numbers\\n         .as(Object.values), // from which we extract the numeric values\\n    ),\\n    equals(6),\\n  ),\\n)\\n```"},{"kind":"text","text":"\\n\\nOf course, you can also mix and match static numbers with numbers returned by questions.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Numeric, Question } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nconst myObjectWithNumbers = () =>\\n  Question.about(\'my object with numbers\', actor => ({ a: 1, b: 2, c: 3 }))\\n\\nawait actorCalled(\'Zo\xe9\').attemptsTo(\\n  Ensure.that(\\n    Numeric.sum(\\n      myObjectWithNumbers().as(Object.values),\\n      [ 4, 5 ],\\n      6,\\n    ),\\n    equals(21),\\n  ),\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Adding numbers extracted from a UI\\n\\nTo add numbers extracted from a UI:\\n- use the ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement) and ["},{"kind":"code","text":"`PageElements`"},{"kind":"text","text":"](/api/web/class/PageElements) classes to identify the elements of interest,\\n- use the ["},{"kind":"code","text":"`Text.of`"},{"kind":"text","text":"](/api/web/class/Text/) or ["},{"kind":"code","text":"`Text.ofAll`"},{"kind":"text","text":"](/api/web/class/Text/) questions to extract the text of the element or elements,\\n- and then interpret this text as number using either the ["},{"kind":"code","text":"`.as(Number)`"},{"kind":"text","text":"](/api/core/class/Question/#as) mapping function,\\n  or the ["},{"kind":"code","text":"`Numeric.intValue()`"},{"kind":"text","text":"](/api/core/class/Numeric/#intValue) or ["},{"kind":"code","text":"`Numeric.floatValue()`"},{"kind":"text","text":"](/api/core/class/Numeric/#floatValue) meta-questions.\\n\\nFor example, we could calculate the sum of quantities of items in our example price list by specifying each element explicitly\\nand mapping its text to ["},{"kind":"code","text":"`Number`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number):\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Numeric } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { Text } from \'@serenity-js/web\'\\nimport { PriceList, PriceListItem } from \'./ui/price-list\'\\n\\nawait actorCalled(\'Zo\xe9\').attemptsTo(\\n  Ensure.that(\\n    Numeric.sum(\\n      Text.of(PriceListItem.quantity().of(PriceList.items().first())).as(Number),\\n      Text.of(PriceListItem.quantity().of(PriceList.items().at(1))).as(Number),\\n      Text.of(PriceListItem.quantity().of(PriceList.items().last())).as(Number),\\n    ),\\n    equals(11),\\n  ),\\n)\\n```"},{"kind":"text","text":"\\n\\nA more elegant approach would be to use the Serenity/JS [Page Element Query Language (PEQL)](/handbook/web-testing/page-element-query-language/#mapping-page-elements-in-a-collection)\\nto map each item in the collection to its quantity and then calculate the sum.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Numeric } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { Text } from \'@serenity-js/web\'\\nimport { PriceList, PriceListItem } from \'./ui/price-list\'\\n\\nawait actorCalled(\'Zo\xe9\').attemptsTo(\\n  Ensure.that(\\n    Numeric.sum(\\n      PriceList.items()                      // get all the li.item elements\\n        .eachMappedTo(\\n          Text.of(PriceListItem.quantity())  // extract the text of the .quantity element\\n        )\\n        .eachMappedTo(                       // interpret the quantity as an integer value\\n          Numeric.intValue(),\\n        ),\\n    ),\\n    equals(11),                              // 5 apples, 4 apricots, 2 bananas\\n  )\\n)\\n```"},{"kind":"text","text":"\\n\\nUsing PEQL allows us to express the intent more concisely and, for example,\\nintroduce helper functions that limit the scope of the operation to a subset of elements.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Expectation, Numeric, the } from \'@serenity-js/core\'\\nimport { Ensure, equals, startsWith } from \'@serenity-js/assertions\'\\nimport { PriceList, PriceListItem } from \'./ui/price-list\'\\n\\nconst quantitiesOfItemsWhichName = (expectation: Expectation<string>) =>\\n  PriceList.items()                      // get all the li.item elements\\n    .where(                              // leave only those which name matches the expectation\\n       Text.of(PriceListItem.name()),\\n       expectation\\n    )\\n    .eachMappedTo(\\n      Text.of(PriceListItem.quantity())  // extract the text of the .quantity element\\n    )\\n    .eachMappedTo(                       // interpret the quantity as an integer value\\n      Numeric.intValue(),\\n    )\\n    .describedAs(the`quantities of items which name does ${ expectation }`)\\n\\nawait actorCalled(\'Zo\xe9\').attemptsTo(\\n  Ensure.that(\\n    Numeric.sum(\\n      quantitiesOfItemsWhichName(startsWith(\'ap\')),  // apples and apricots\\n    ),\\n    equals(9),                                       // 5 apples, 4 apricots\\n  )\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n\\nView the ["},{"kind":"code","text":"`Numeric`"},{"kind":"text","text":" API documentation](/api/core/class/Numeric) for more details\\nand examples."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Numeric.ts","line":276,"character":11}],"parameters":[{"id":1572,"name":"values","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"intrinsic","name":"number"}}]}],"name":"Answerable","package":"@serenity-js/core"}}}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":1573,"name":"difference","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Numeric.ts","line":316,"character":11}],"signatures":[{"id":1574,"name":"difference","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/)  that calculates the difference between\\ntwo numbers and throws if any of the values is not a "},{"kind":"code","text":"`number`"},{"kind":"text","text":".\\n\\n#### Subtracting numbers\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Numeric } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { Text } from \'@serenity-js/web\'\\nimport { PriceList, PriceListItem } from \'./ui/price-list\'\\n\\nawait actorCalled(\'Zo\xe9\').attemptsTo(\\n  Ensure.that(\\n    Numeric.difference(\\n      Text.of(PriceListItem.quantity().of(PriceList.items().first())).as(Number),    // 5 (apples)\\n      2,                                                                             // - 2\\n    ),\\n    equals(3),\\n  ),\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n\\nView the ["},{"kind":"code","text":"`Numeric`"},{"kind":"text","text":" API documentation](/api/core/class/Numeric) for more details\\nand examples."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Numeric.ts","line":316,"character":11}],"parameters":[{"id":1575,"name":"minuend","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":1576,"name":"subtrahend","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":1577,"name":"ceiling","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Numeric.ts","line":355,"character":11}],"signatures":[{"id":1578,"name":"ceiling","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/) that calculates\\nthe ceiling of a number and throws if the value is not a "},{"kind":"code","text":"`number`"},{"kind":"text","text":".\\n\\n#### Calculating the ceiling of a number\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Numeric } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { Text } from \'@serenity-js/web\'\\nimport { PriceList, PriceListItem } from \'./ui/price-list\'\\n\\nawait actorCalled(\'Zo\xe9\').attemptsTo(\\n  Ensure.that(\\n    Numeric.ceiling().of(\\n      Text.of(PriceListItem.price().of(PriceList.items().first()))   // \'\xa32.25\' (apples)\\n         .replace(\'\xa3\', \'\')                                           // \'2.25\'\\n         .as(Number.parseFloat),                                     // 2.25\\n    ),\\n    equals(3),\\n  ),\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n\\nView the ["},{"kind":"code","text":"`Numeric`"},{"kind":"text","text":" API documentation](/api/core/class/Numeric) for more details\\nand examples."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Numeric.ts","line":355,"character":11}],"type":{"type":"reference","target":1561,"typeArguments":[{"type":"intrinsic","name":"number"},{"type":"reference","target":1059,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"QuestionAdapter","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}}]},{"id":1579,"name":"floor","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Numeric.ts","line":395,"character":11}],"signatures":[{"id":1580,"name":"floor","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/) that calculates\\nthe floor of a number and throws if the value is not a "},{"kind":"code","text":"`number`"},{"kind":"text","text":".\\n\\n#### Calculating the floor of a number\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Numeric } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { Text } from \'@serenity-js/web\'\\nimport { PriceList, PriceListItem } from \'./ui/price-list\'\\n\\nawait actorCalled(\'Zo\xe9\').attemptsTo(\\n  Ensure.that(\\n    Numeric.floor().of(\\n      Text.of(PriceListItem.price().of(PriceList.items().first()))   // \'\xa32.25\' (apples)\\n         .replace(\'\xa3\', \'\')                                           // \'2.25\'\\n         .as(Number.parseFloat),                                     // 2.25\\n    ),\\n    equals(2),\\n  ),\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n\\nView the ["},{"kind":"code","text":"`Numeric`"},{"kind":"text","text":" API documentation](/api/core/class/Numeric) for more details\\nand examples."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Numeric.ts","line":395,"character":11}],"type":{"type":"reference","target":1561,"typeArguments":[{"type":"intrinsic","name":"number"},{"type":"reference","target":1059,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"QuestionAdapter","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}}]},{"id":1581,"name":"max","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Numeric.ts","line":441,"character":11}],"signatures":[{"id":1582,"name":"max","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/) that calculates\\nthe maximum value in the lists of numbers provided and throws if any of the values is not a "},{"kind":"code","text":"`number`"},{"kind":"text","text":".\\n\\n#### Calculating the maximum value\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Numeric } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { Text } from \'@serenity-js/web\'\\nimport { PriceList, PriceListItem } from \'./ui/price-list\'\\n\\nawait actorCalled(\'Zo\xe9\').attemptsTo(\\n  Ensure.that(\\n    Numeric.max(\\n      PriceList.items()                      // get all the li.item elements\\n        .eachMappedTo(\\n          Text.of(PriceListItem.quantity())  // extract the text of the .quantity element\\n        )\\n        .eachMappedTo(                       // interpret the quantity as an integer value\\n          Numeric.intValue(),\\n        ),\\n    ),\\n    equals(5),                               // 5 (apples)\\n  )\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n\\nView the ["},{"kind":"code","text":"`Numeric`"},{"kind":"text","text":" API documentation](/api/core/class/Numeric) for more details\\nand examples."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Numeric.ts","line":441,"character":11}],"parameters":[{"id":1583,"name":"values","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"intrinsic","name":"number"}}]}],"name":"Answerable","package":"@serenity-js/core"}}}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":1584,"name":"min","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Numeric.ts","line":484,"character":11}],"signatures":[{"id":1585,"name":"min","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/) that calculates\\nthe minimum value in the lists of numbers provided and throws if any of the values is not a "},{"kind":"code","text":"`number`"},{"kind":"text","text":".\\n\\n#### Calculating the minimum value\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Numeric } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { Text } from \'@serenity-js/web\'\\nimport { PriceList, PriceListItem } from \'./ui/price-list\'\\n\\nawait actorCalled(\'Zo\xe9\').attemptsTo(\\n  Ensure.that(\\n    Numeric.min(\\n      PriceList.items()                      // get all the li.item elements\\n        .eachMappedTo(\\n          Text.of(PriceListItem.quantity())  // extract the text of the .quantity element\\n        )\\n        .eachMappedTo(                       // interpret the quantity as an integer value\\n          Numeric.intValue(),\\n        ),\\n    ),\\n    equals(2),                               // 2 (bananas)\\n  )\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n\\nView the ["},{"kind":"code","text":"`Numeric`"},{"kind":"text","text":" API documentation](/api/core/class/Numeric) for more details\\nand examples."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Numeric.ts","line":484,"character":11}],"parameters":[{"id":1586,"name":"values","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"intrinsic","name":"number"}}]}],"name":"Answerable","package":"@serenity-js/core"}}}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":1587,"name":"intValue","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Numeric.ts","line":528,"character":11}],"signatures":[{"id":1588,"name":"intValue","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/) that parses a string "},{"kind":"code","text":"`value`"},{"kind":"text","text":"\\nand returns an integer of the specified "},{"kind":"code","text":"`base`"},{"kind":"text","text":".\\nLeading whitespace in the value to parse argument is ignored.\\n\\n#### Parsing a string as an integer\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Numeric } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { Text } from \'@serenity-js/web\'\\nimport { PriceList, PriceListItem } from \'./ui/price-list\'\\n\\nawait actorCalled(\'Zo\xe9\').attemptsTo(\\n  Ensure.that(\\n    Numeric.intValue().of(\\n      Text.of(                           // \'5\' (apples)\\n        PriceListItem.quantity().of(\\n          PriceList.items().first()\\n        )\\n      )\\n    ),\\n    equals(5),\\n  ),\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n\\nView the ["},{"kind":"code","text":"`Numeric`"},{"kind":"text","text":" API documentation](/api/core/class/Numeric) for more details\\nand examples."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Numeric.ts","line":528,"character":11}],"parameters":[{"id":1589,"name":"base","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"An integer between 2 and 36 that represents the base in mathematical numeral systems of the string.\\n If base is undefined or 0, it is assumed to be 10 except when the number begins with the code unit pairs 0x or 0X, in which case a radix of 16 is assumed."}]},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1561,"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reference","target":1059,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"QuestionAdapter","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}}]},{"id":1590,"name":"bigIntValue","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Numeric.ts","line":586,"character":11}],"signatures":[{"id":1591,"name":"bigIntValue","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/) that parses a string "},{"kind":"code","text":"`value`"},{"kind":"text","text":"\\nand returns a ["},{"kind":"code","text":"`BigInt`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt).\\nLeading whitespace in the value to parse argument is ignored.\\n\\n#### Parsing a string as a bigint\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Numeric } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { Text } from \'@serenity-js/web\'\\nimport { PriceList, PriceListItem } from \'./ui/price-list\'\\n\\nawait actorCalled(\'Zo\xe9\').attemptsTo(\\n  Ensure.that(\\n    Numeric.bigIntValue().of(\\n      Text.of(                                                  // \'5\' (apples)\\n        PriceListItem.quantity().of(PriceList.items().first())\\n      )\\n    ),\\n    equals(BigInt(\'5\')),\\n  ),\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n\\nView the ["},{"kind":"code","text":"`Numeric`"},{"kind":"text","text":" API documentation](/api/core/class/Numeric) for more details\\nand examples."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Numeric.ts","line":586,"character":11}],"type":{"type":"reference","target":1561,"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reference","target":1059,"typeArguments":[{"type":"intrinsic","name":"bigint"}],"name":"QuestionAdapter","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}}]},{"id":1592,"name":"floatValue","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Numeric.ts","line":636,"character":11}],"signatures":[{"id":1593,"name":"floatValue","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/) that parses a string "},{"kind":"code","text":"`value`"},{"kind":"text","text":"\\nand returns a floating-point number.\\n\\n#### Parsing a string as a floating point number\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Numeric } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { Text } from \'@serenity-js/web\'\\nimport { PriceList, PriceListItem } from \'./ui/price-list\'\\n\\nawait actorCalled(\'Zo\xe9\').attemptsTo(\\n  Ensure.that(\\n    Numeric.floatValue().of(\\n      Text.of(                                                  // \'\xa32.25\'\\n          PriceListItem.price().of(PriceList.items().first())\\n      ).replace(\'\xa3\', \'\')                                        // \'2.25\'\\n    ),\\n    equals(2.25),\\n  ),\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n\\nView the ["},{"kind":"code","text":"`Numeric`"},{"kind":"text","text":" API documentation](/api/core/class/Numeric) for more details\\nand examples."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Numeric.ts","line":636,"character":11}],"type":{"type":"reference","target":1561,"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reference","target":1059,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"QuestionAdapter","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}}]},{"id":1602,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":1603,"name":"new Numeric","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":1569,"name":"Numeric","package":"@serenity-js/core"}}]}],"groups":[{"title":"Constructors","children":[1602]},{"title":"Methods","children":[1570,1573,1577,1579,1581,1584,1587,1590,1592]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/Numeric.ts","line":89,"character":13}],"permalink":"/api/core/class/Numeric","categories":[],"previousId":1561,"nextId":1620},{"id":1620,"name":"Unanswered","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A placeholder value signifying that a ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/)\\nhas not been answered by an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) when producing an ["},{"kind":"code","text":"`ExpectationOutcome`"},{"kind":"text","text":"](/api/core/class/ExpectationOutcome/).\\nThis happens when Serenity/JS decides that answering a given question\\nwon\'t affect the outcome.\\n\\nFor example, making the actor answer questions about the expected value\\nand the actual value of each list item is unnecessary if we already know that the list itself is empty."}]},"children":[{"id":1621,"name":"isUnanswered","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Unanswered.ts","line":17,"character":11}],"signatures":[{"id":1622,"name":"isUnanswered","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Unanswered.ts","line":17,"character":11}],"parameters":[{"id":1623,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"value","asserts":false,"targetType":{"type":"reference","target":1620,"name":"Unanswered","package":"@serenity-js/core"}}}]},{"id":1624,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":1625,"name":"new Unanswered","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":1620,"name":"Unanswered","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.constructor"}},{"id":1630,"name":"[custom]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Unanswered.ts","line":21,"character":4}],"signatures":[{"id":1631,"name":"[custom]","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Unanswered.ts","line":21,"character":4}],"type":{"type":"intrinsic","name":"string"}}]},{"id":1626,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Unanswered.ts","line":25,"character":4}],"signatures":[{"id":1627,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Unanswered.ts","line":25,"character":4}],"type":{"type":"intrinsic","name":"string"},"overwrites":{"type":"reference","target":-1,"name":"TinyType.toString"}}],"overwrites":{"type":"reference","target":-1,"name":"TinyType.toString"}},{"id":1628,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Unanswered.ts","line":29,"character":4}],"signatures":[{"id":1629,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Unanswered.ts","line":29,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"overwrites":{"type":"reference","target":-1,"name":"TinyType.toJSON"}}],"overwrites":{"type":"reference","target":-1,"name":"TinyType.toJSON"}},{"id":1632,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":1633,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":1634,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.equals"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.equals"}}],"groups":[{"title":"Constructors","children":[1624]},{"title":"Methods","children":[1621,1630,1626,1628,1632]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/Unanswered.ts","line":16,"character":13}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}],"permalink":"/api/core/class/Unanswered","categories":[],"previousId":1569,"nextId":1604},{"id":1225,"name":"ExpectationDetails","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Used with ["},{"kind":"code","text":"`ExpectationOutcome`"},{"kind":"text","text":"](/api/core/class/ExpectationOutcome/) to describe an ["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/) and the arguments it\'s been executed with."}]},"children":[{"id":1226,"name":"of","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts","line":15,"character":11}],"signatures":[{"id":1227,"name":"of","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts","line":15,"character":11}],"parameters":[{"id":1228,"name":"functionName","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":1229,"name":"functionArguments","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"union","types":[{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},{"type":"reference","target":1225,"name":"ExpectationDetails","package":"@serenity-js/core"},{"type":"reference","target":1620,"name":"Unanswered","package":"@serenity-js/core"}]}}}],"type":{"type":"reference","target":1225,"name":"ExpectationDetails","package":"@serenity-js/core"}}]},{"id":1230,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts","line":19,"character":11}],"signatures":[{"id":1231,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts","line":19,"character":11}],"parameters":[{"id":1232,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":1225,"name":"ExpectationDetails","package":"@serenity-js/core"}}]},{"id":1237,"name":"name","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts","line":36,"character":24}],"type":{"type":"reference","name":"Name","package":"@serenity-js/core"}},{"id":1238,"name":"args","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts","line":37,"character":24}],"type":{"type":"array","elementType":{"type":"union","types":[{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},{"type":"reference","target":1225,"name":"ExpectationDetails","package":"@serenity-js/core"},{"type":"reference","target":1620,"name":"Unanswered","package":"@serenity-js/core"}]}}},{"id":1239,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts","line":44,"character":4}],"signatures":[{"id":1240,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts","line":44,"character":4}],"type":{"type":"intrinsic","name":"string"},"overwrites":{"type":"reference","target":-1,"name":"TinyType.toString"}}],"overwrites":{"type":"reference","target":-1,"name":"TinyType.toString"}},{"id":1241,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts","line":54,"character":4}],"signatures":[{"id":1242,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts","line":54,"character":4}],"type":{"type":"reflection","declaration":{"id":1243,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":1244,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts","line":54,"character":16}],"type":{"type":"intrinsic","name":"string"}},{"id":1245,"name":"args","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts","line":54,"character":30}],"type":{"type":"array","elementType":{"type":"reflection","declaration":{"id":1246,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":1247,"name":"type","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts","line":54,"character":44}],"type":{"type":"intrinsic","name":"string"}},{"id":1248,"name":"value","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts","line":54,"character":58}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"}}],"groups":[{"title":"Properties","children":[1247,1248]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts","line":54,"character":42}]}}}}],"groups":[{"title":"Properties","children":[1244,1245]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts","line":54,"character":14}]}},"overwrites":{"type":"reference","target":-1,"name":"TinyType.toJSON"}}],"overwrites":{"type":"reference","target":-1,"name":"TinyType.toJSON"}},{"id":1249,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":1250,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":1251,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.equals"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.equals"}}],"groups":[{"title":"Properties","children":[1237,1238]},{"title":"Methods","children":[1226,1230,1239,1241,1249]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts","line":13,"character":13}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}],"permalink":"/api/core/class/ExpectationDetails","categories":[],"previousId":1156,"nextId":1252},{"id":1252,"name":"ExpectationMet","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Indicates that an ["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/) was met."}]},"children":[{"id":1253,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":12,"character":4}],"signatures":[{"id":1254,"name":"new ExpectationMet","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":12,"character":4}],"parameters":[{"id":1255,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":1256,"name":"expectation","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1225,"name":"ExpectationDetails","package":"@serenity-js/core"}},{"id":1257,"name":"expected","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"unknown"}},{"id":1258,"name":"actual","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":1252,"name":"ExpectationMet","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":1290,"name":"ExpectationOutcome.constructor"}}],"inheritedFrom":{"type":"reference","target":1289,"name":"ExpectationOutcome.constructor"}},{"id":1259,"name":"message","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":13,"character":24}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":1295,"name":"ExpectationOutcome.message"}},{"id":1260,"name":"expectation","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":14,"character":24}],"type":{"type":"reference","target":1225,"name":"ExpectationDetails","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":1296,"name":"ExpectationOutcome.expectation"}},{"id":1261,"name":"expected","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":15,"character":24}],"type":{"type":"intrinsic","name":"unknown"},"inheritedFrom":{"type":"reference","target":1297,"name":"ExpectationOutcome.expected"}},{"id":1262,"name":"actual","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":16,"character":24}],"type":{"type":"intrinsic","name":"unknown"},"inheritedFrom":{"type":"reference","target":1298,"name":"ExpectationOutcome.actual"}},{"id":1263,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":1264,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":1265,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":1300,"name":"ExpectationOutcome.equals"}}],"inheritedFrom":{"type":"reference","target":1299,"name":"ExpectationOutcome.equals"}},{"id":1266,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":1267,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":1303,"name":"ExpectationOutcome.toString"}}],"inheritedFrom":{"type":"reference","target":1302,"name":"ExpectationOutcome.toString"}},{"id":1268,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":1269,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":1305,"name":"ExpectationOutcome.toJSON"}}],"inheritedFrom":{"type":"reference","target":1304,"name":"ExpectationOutcome.toJSON"}}],"groups":[{"title":"Constructors","children":[1253]},{"title":"Properties","children":[1259,1260,1261,1262]},{"title":"Methods","children":[1263,1266,1268]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationMet.ts","line":8,"character":13}],"extendedTypes":[{"type":"reference","target":1288,"name":"ExpectationOutcome","package":"@serenity-js/core"}],"permalink":"/api/core/class/ExpectationMet","categories":[],"previousId":1225,"nextId":1270},{"id":1270,"name":"ExpectationNotMet","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Indicates that an ["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/) was not met."}]},"children":[{"id":1271,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":12,"character":4}],"signatures":[{"id":1272,"name":"new ExpectationNotMet","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":12,"character":4}],"parameters":[{"id":1273,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":1274,"name":"expectation","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1225,"name":"ExpectationDetails","package":"@serenity-js/core"}},{"id":1275,"name":"expected","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"unknown"}},{"id":1276,"name":"actual","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":1270,"name":"ExpectationNotMet","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":1290,"name":"ExpectationOutcome.constructor"}}],"inheritedFrom":{"type":"reference","target":1289,"name":"ExpectationOutcome.constructor"}},{"id":1277,"name":"message","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":13,"character":24}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":1295,"name":"ExpectationOutcome.message"}},{"id":1278,"name":"expectation","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":14,"character":24}],"type":{"type":"reference","target":1225,"name":"ExpectationDetails","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":1296,"name":"ExpectationOutcome.expectation"}},{"id":1279,"name":"expected","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":15,"character":24}],"type":{"type":"intrinsic","name":"unknown"},"inheritedFrom":{"type":"reference","target":1297,"name":"ExpectationOutcome.expected"}},{"id":1280,"name":"actual","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":16,"character":24}],"type":{"type":"intrinsic","name":"unknown"},"inheritedFrom":{"type":"reference","target":1298,"name":"ExpectationOutcome.actual"}},{"id":1281,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":1282,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":1283,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":1300,"name":"ExpectationOutcome.equals"}}],"inheritedFrom":{"type":"reference","target":1299,"name":"ExpectationOutcome.equals"}},{"id":1284,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":1285,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":1303,"name":"ExpectationOutcome.toString"}}],"inheritedFrom":{"type":"reference","target":1302,"name":"ExpectationOutcome.toString"}},{"id":1286,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":1287,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":1305,"name":"ExpectationOutcome.toJSON"}}],"inheritedFrom":{"type":"reference","target":1304,"name":"ExpectationOutcome.toJSON"}}],"groups":[{"title":"Constructors","children":[1271]},{"title":"Properties","children":[1277,1278,1279,1280]},{"title":"Methods","children":[1281,1284,1286]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationNotMet.ts","line":8,"character":13}],"extendedTypes":[{"type":"reference","target":1288,"name":"ExpectationOutcome","package":"@serenity-js/core"}],"permalink":"/api/core/class/ExpectationNotMet","categories":[],"previousId":1252,"nextId":1288},{"id":1288,"name":"ExpectationOutcome","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An outcome of an ["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/),\\nwhich could be either [met](/api/core/class/ExpectationMet/) or [not met](/api/core/class/ExpectationNotMet/)."}]},"children":[{"id":1289,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":12,"character":4}],"signatures":[{"id":1290,"name":"new ExpectationOutcome","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":12,"character":4}],"parameters":[{"id":1291,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":1292,"name":"expectation","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1225,"name":"ExpectationDetails","package":"@serenity-js/core"}},{"id":1293,"name":"expected","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"unknown"}},{"id":1294,"name":"actual","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":1288,"name":"ExpectationOutcome","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"TinyType.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"TinyType.constructor"}},{"id":1295,"name":"message","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":13,"character":24}],"type":{"type":"intrinsic","name":"string"}},{"id":1296,"name":"expectation","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":14,"character":24}],"type":{"type":"reference","target":1225,"name":"ExpectationDetails","package":"@serenity-js/core"}},{"id":1297,"name":"expected","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":15,"character":24}],"type":{"type":"intrinsic","name":"unknown"}},{"id":1298,"name":"actual","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":16,"character":24}],"type":{"type":"intrinsic","name":"unknown"}},{"id":1299,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":1300,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":1301,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.equals"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.equals"}},{"id":1302,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":1303,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.toString"}},{"id":1304,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":1305,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.toJSON"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.toJSON"}}],"groups":[{"title":"Constructors","children":[1289]},{"title":"Properties","children":[1295,1296,1297,1298]},{"title":"Methods","children":[1299,1302,1304]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":11,"character":13}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}],"extendedBy":[{"type":"reference","target":1252,"name":"ExpectationMet"},{"type":"reference","target":1270,"name":"ExpectationNotMet"}],"permalink":"/api/core/class/ExpectationOutcome","categories":[],"previousId":1270,"nextId":844},{"id":1604,"name":"the","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/tag-functions.ts","line":171,"character":16},{"fileName":"packages/core/src/screenplay/questions/tag-functions.ts","line":172,"character":16},{"fileName":"packages/core/src/screenplay/questions/tag-functions.ts","line":173,"character":16}],"signatures":[{"id":1605,"name":"the","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates a single-line description of an ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) by transforming\\na [template literal](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#Tagged_templates),\\nparameterised with [primitive data types](https://developer.mozilla.org/en-US/docs/Glossary/Primitive),\\n[complex data structures](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#objects),\\nor any other [answerables](/api/core/#Answerable),\\ninto a ["},{"kind":"code","text":"`QuestionAdapter<string>`"},{"kind":"text","text":"](/api/core/#QuestionAdapter)\\nthat can be used with ["},{"kind":"code","text":"`Task.where`"},{"kind":"text","text":"](/api/core/class/Task/#where) and ["},{"kind":"code","text":"`Interaction.where`"},{"kind":"text","text":"](/api/core/class/Interaction/#where) methods.\\n\\n"},{"kind":"code","text":"```ts\\nconst dial = (phoneNumber: Answerable<string>) =>\\n Task.where(the `#actor dials ${ phoneNumber }`, /* */)\\n\\nawait actorCalled(\'Alice\').attemptsTo(\\n  dial(\'(555) 123-4567\'),\\n  // reported as: Alice dials \\"(555) 123-4567\\"\\n)\\n```"},{"kind":"text","text":"\\n\\n## Trimming the output\\n\\nUse ["},{"kind":"code","text":"`DescriptionFormattingOptions`"},{"kind":"text","text":"](http://serenity-js.org/api/core/interface/DescriptionFormattingOptions/)\\nto trim the descriptions of template parameters.\\nBy default, the output is displayed in full.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Task, the } from \'@serenity-js/core\'\\n\\nconst dial = (phoneNumber: Answerable<string>) =>\\n Task.where(dial({ maxLength: 10 }) `#actor dials ${ phoneNumber }`, /* */)\\n\\nawait actorCalled(\'Alice\').attemptsTo(\\n  dial(\'(555) 123-4567\'),\\n  // reported as: Alice dials \\"(555) 123-...\'\\n)\\n```"},{"kind":"text","text":"\\n\\n## Using with Questions\\n\\nWhen "},{"kind":"code","text":"`the`"},{"kind":"text","text":" is parameterised with [questions](/api/core/class/Question/),\\nit retrieves their description by calling ["},{"kind":"code","text":"`Question.describedBy`"},{"kind":"text","text":"](/api/core/class/Question/#describedBy)\\nin the context of the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) performing the ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/).\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Question, Task, the } from \'@serenity-js/core\'\\n\\nconst phoneNumber = (areaCode: string, centralOfficeCode: string, lineNumber: string) =>\\n Question.about(\'phone number\', actor => {\\n    return `(${ this.areaCode }) ${ this.centralOfficeCode }-${ this.lineNumber }`\\n  })\\n\\nconst dial = (phoneNumber: Answerable<string>) =>\\n Task.where(dial({ maxLength: 10 }) `#actor dials ${ phoneNumber }`, /* */)\\n\\nawait actorCalled(\'Alice\').attemptsTo(\\n  dial(phoneNumber(\'555\', \'123\', \'4567\'),\\n  // reported as: Alice dials phone number\\n)\\n```"},{"kind":"text","text":"\\n\\nIf you\'d like the question to be described using its formatted value instead of its description, use ["},{"kind":"code","text":"`Question.formattedValue`"},{"kind":"text","text":"](/api/core/class/Question/#formattedValue).\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Question, Task, the } from \'@serenity-js/core\'\\n\\nconst phoneNumber = (areaCode: string, centralOfficeCode: string, lineNumber: string) =>\\n  Question.about(\'phone number\', actor => {\\n    return `(${ this.areaCode }) ${ this.centralOfficeCode }-${ this.lineNumber }`\\n  }).describedAs(Question.formattedValue())\\n\\nconst dial = (phoneNumber: Answerable<string>) =>\\n Task.where(dial({ maxLength: 10 }) `#actor dials ${ phoneNumber }`, /* */)\\n\\nawait actorCalled(\'Alice\').attemptsTo(\\n  dial(phoneNumber(\'555\', \'123\', \'4567\'),\\n  // reported as: Alice dials \\"(555) 123-4567\\"\\n)\\n```"},{"kind":"text","text":"\\n\\n## Using with objects with a custom "},{"kind":"code","text":"`toString`"},{"kind":"text","text":" method\\n\\nWhen "},{"kind":"code","text":"`the`"},{"kind":"text","text":" is parameterised with objects that have\\na custom ["},{"kind":"code","text":"`toString()`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toString) method,\\nor [answerables](/api/core/#Answerable) resolving to such objects, the "},{"kind":"code","text":"`toString()`"},{"kind":"text","text":" method is called to produce the resulting description.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, description, Task } from \'@serenity-js/core\'\\n\\nclass PhoneNumber {\\n  constructor(\\n    private readonly areaCode: string,\\n    private readonly centralOfficeCode: string,\\n    private readonly lineNumber: string,\\n  ) {}\\n\\n  toString() {\\n    return `(${ this.areaCode }) ${ this.centralOfficeCode }-${ this.lineNumber }`\\n  }\\n}\\n\\nconst dial = (phoneNumber: Answerable<PhoneNumber>) =>\\n Task.where(description `#actor dials ${ phoneNumber }`, /* */)\\n\\nawait actorCalled(\'Alice\').attemptsTo(\\n  dial(new PhoneNumber(\'555\', \'123\', \'4567\')),\\n  // reported as: Alice dials (555) 123-4567\\n)\\n```"},{"kind":"text","text":"\\n\\n## Using with objects without a custom "},{"kind":"code","text":"`toString`"},{"kind":"text","text":" method\\n\\nWhen "},{"kind":"code","text":"`the`"},{"kind":"text","text":" is parameterised with complex objects that don\'t have a custom "},{"kind":"code","text":"`toString()`"},{"kind":"text","text":" method,\\nor ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable)s resolving to such objects,\\nthe resulting description will contain a JSON-like string representation of the object.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, description, Task } from \'@serenity-js/core\'\\n\\ninterface PhoneNumber {\\n  areaCode: string;\\n  centralOfficeCode: string;\\n  lineNumber: string;\\n}\\n\\nconst dial = (phoneNumber: Answerable<PhoneNumber>) =>\\n Task.where(the `#actor dials ${ phoneNumber }`, /* */)\\n\\nawait actorCalled(\'Alice\').attemptsTo(\\n  dial({ areaCode: \'555\', centralOfficeCode: \'123\', lineNumber: \'4567\' }),\\n  // reported as: Alice dials { areaCode: \\"555\\", centralOfficeCode: \\"123\\", lineNumber: \\"4567\\" }\\n)\\n```"},{"kind":"text","text":"\\n\\n## Using with masked values\\n\\nWhen "},{"kind":"code","text":"`the`"},{"kind":"text","text":" is parameterised with [masked values](/api/core/class/Masked/),\\nthe resulting description will contain a masked representation of the values.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, description, Task } from \'@serenity-js/core\'\\n\\nconst dial = (phoneNumber: Answerable<string>) =>\\n Task.where(description `#actor dials ${ phoneNumber }`, /* */)\\n\\nawait actorCalled(\'Alice\').attemptsTo(\\n  dial(Masked.valueOf(\'(555) 123-4567\')),\\n  // reported as: Alice dials [a masked value]\\n)\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable)\\n- ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/)\\n- ["},{"kind":"code","text":"`Question.describedAs`"},{"kind":"text","text":"](/api/core/class/Question/#describedAs)\\n- ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter)\\n- ["},{"kind":"code","text":"`Masked`"},{"kind":"text","text":"](/api/core/class/Masked/)"}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/tag-functions.ts","line":171,"character":16}],"parameters":[{"id":1606,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1148,"name":"DescriptionFormattingOptions","package":"@serenity-js/core"}}],"type":{"type":"reflection","declaration":{"id":1607,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/tag-functions.ts","line":171,"character":60}],"signatures":[{"id":1608,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"typeParameter":[{"id":1611,"name":"Supported_Context_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":1609,"name":"templates","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"TemplateStringsArray"},"name":"TemplateStringsArray","package":"typescript"}},{"id":1610,"name":"placeholders","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"union","types":[{"type":"reference","target":1561,"typeArguments":[{"type":"reference","target":1611,"name":"Supported_Context_Type","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"intrinsic","name":"any"}],"name":"MetaQuestion","package":"@serenity-js/core"},{"type":"intrinsic","name":"any"}]}}}],"type":{"type":"reference","target":1064,"typeArguments":[{"type":"reference","target":1611,"name":"Supported_Context_Type","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"intrinsic","name":"string"}],"name":"MetaQuestionAdapter","package":"@serenity-js/core"}}]}}},{"id":1612,"name":"the","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/tag-functions.ts","line":172,"character":16}],"typeParameter":[{"id":1613,"name":"Supported_Context_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":1614,"name":"templates","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"TemplateStringsArray"},"name":"TemplateStringsArray","package":"typescript"}},{"id":1615,"name":"parameters","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"reference","target":1064,"typeArguments":[{"type":"reference","target":1613,"name":"Supported_Context_Type","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"intrinsic","name":"string"}],"name":"MetaQuestionAdapter","package":"@serenity-js/core"}}],"permalink":"/api/core/function/the","categories":[],"previousId":1620,"nextId":1616},{"id":1616,"name":"q","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/tag-functions.ts","line":246,"character":16}],"signatures":[{"id":1617,"name":"q","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A Serenity/JS Screenplay Pattern-flavour\\nof a [tagged template literal](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#Tagged_templates),\\n"},{"kind":"code","text":"`q`"},{"kind":"text","text":" is a tag function capable of resolving any "},{"kind":"code","text":"`Answerable<string>`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Answerable<number>`"},{"kind":"text","text":"\\nyou parametrise it with, and returning a "},{"kind":"code","text":"`QuestionAdapter<string>`"},{"kind":"text","text":".\\n\\nUse "},{"kind":"code","text":"`q`"},{"kind":"text","text":" to concatenate "},{"kind":"code","text":"`string`"},{"kind":"text","text":" and "},{"kind":"code","text":"`number`"},{"kind":"text","text":" values returned from synchronous an asynchronous sources.\\n\\n## Interpolating questions\\n\\n"},{"kind":"code","text":"```ts\\nimport { q, actorCalled } from \'@serenity-js/core\'\\nimport { Send, DeleteRequest } from \'@serenity-js/rest\'\\nimport { Text } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Alice\').attemptsTo(\\n  Send.a(DeleteRequest.to(\\n    q `/articles/${ Text.of(Article.id()) }`\\n  ))\\n)\\n```"},{"kind":"text","text":"\\n\\n## Using a custom description\\n\\n"},{"kind":"code","text":"```ts\\nimport { q, actorCalled } from \'@serenity-js/core\'\\nimport { Send, DeleteRequest } from \'@serenity-js/rest\'\\n\\nawait actorCalled(\'Alice\').attemptsTo(\\n  Send.a(DeleteRequest.to(\\n    q `/articles/${ Text.of(Article.id()) }`.describedAs(\'/articles/:id\')\\n  ))\\n)\\n```"},{"kind":"text","text":"\\n\\n## Transforming the interpolated string\\n\\nThe mechanism presented below relies on ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter).\\n\\n"},{"kind":"code","text":"```ts\\nimport { q, actorCalled } from \'@serenity-js/core\'\\nimport { Send, DeleteRequest } from \'@serenity-js/rest\'\\n\\nawait actorCalled(\'Alice\').attemptsTo(\\n  Send.a(DeleteRequest.to(\\n    q `/articles/${ Text.of(Article.id()) }`.toLocaleLowerCase()\\n  ))\\n)\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable)\\n- ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/)\\n- ["},{"kind":"code","text":"`Question.describedAs`"},{"kind":"text","text":"](/api/core/class/Question/#describedAs)\\n- ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter)"}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/tag-functions.ts","line":246,"character":16}],"parameters":[{"id":1618,"name":"templates","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"TemplateStringsArray"},"name":"TemplateStringsArray","package":"typescript"}},{"id":1619,"name":"parameters","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]}],"name":"Answerable","package":"@serenity-js/core"}}}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}],"permalink":"/api/core/function/q","categories":[],"previousId":1604,"nextId":628},{"id":1946,"name":"TellsTime","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Describes an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) or a supporting class capable of telling\\nthe current wall clock time.\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`Serenity`"},{"kind":"text","text":"](/api/core/class/Serenity/)\\n- ["},{"kind":"code","text":"`Stage`"},{"kind":"text","text":"](/api/core/class/Stage/)"}]},"children":[{"id":1947,"name":"currentTime","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/TellsTime.ts","line":18,"character":4}],"signatures":[{"id":1948,"name":"currentTime","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns current wall clock time."}]},"sources":[{"fileName":"packages/core/src/screenplay/time/TellsTime.ts","line":18,"character":4}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}]}],"groups":[{"title":"Methods","children":[1947]}],"sources":[{"fileName":"packages/core/src/screenplay/time/TellsTime.ts","line":14,"character":17}],"extendedBy":[{"type":"reference","target":2642,"name":"EmitsDomainEvents"}],"implementedBy":[{"type":"reference","target":655,"name":"Actor"},{"type":"reference","target":2257,"name":"StageManager"}],"permalink":"/api/core/interface/TellsTime","categories":[],"previousId":2116,"nextId":1670},{"id":1670,"name":"ScheduleWork","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/) that enables an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to schedule a callback function\\nto be executed with a delay, or until some condition is met.\\n\\nUsed internally by the [interaction](/api/core/class/Interaction/) to ["},{"kind":"code","text":"`Wait`"},{"kind":"text","text":"](/api/core/class/Wait/)."}],"modifierTags":["@experimental"]},"children":[{"id":1695,"name":"abilityType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Ability.ts","line":461,"character":4}],"signatures":[{"id":1696,"name":"abilityType","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the most abstract type of this Ability instance,\\nspecifically the first class in the inheritance hierarchy that directly extends the "},{"kind":"code","text":"`Ability`"},{"kind":"text","text":" class.\\n\\n"},{"kind":"code","text":"```ts\\nimport { Ability } from \'@serenity-js/core\';\\n\\nclass MyAbility extends Ability {}\\nclass MySpecialisedAbility extends MyAbility {}\\n\\nnew MyAbility().abilityType();            // returns MyAbility\\nnew MySpecialisedAbility().abilityType(); // returns MyAbility\\n```"}]},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Ability.ts","line":461,"character":4}],"type":{"type":"reference","target":529,"typeArguments":[{"type":"reference","target":508,"name":"Ability","package":"@serenity-js/core"}],"name":"AbilityType","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":528,"name":"Ability.abilityType"}}],"inheritedFrom":{"type":"reference","target":527,"name":"Ability.abilityType"}},{"id":1678,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/abilities/ScheduleWork.ts","line":20,"character":4}],"signatures":[{"id":1679,"name":"new ScheduleWork","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/abilities/ScheduleWork.ts","line":20,"character":4}],"parameters":[{"id":1680,"name":"clock","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1765,"name":"Clock","package":"@serenity-js/core"}},{"id":1681,"name":"interactionTimeout","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1795,"name":"Duration","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1670,"name":"ScheduleWork","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":524,"name":"Ability.constructor"}}],"overwrites":{"type":"reference","target":523,"name":"Ability.constructor"}},{"id":1683,"name":"repeatUntil","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/abilities/ScheduleWork.ts","line":29,"character":4}],"signatures":[{"id":1684,"name":"repeatUntil","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/abilities/ScheduleWork.ts","line":29,"character":4}],"typeParameter":[{"id":1685,"name":"Result","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":1686,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1788,"typeArguments":[{"type":"reference","target":1685,"name":"Result","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"DelayedCallback","package":"@serenity-js/core"}},{"id":1687,"name":"limits","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1852,"typeArguments":[{"type":"reference","target":1685,"name":"Result","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"RepeatUntilLimits","package":"@serenity-js/core"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":1685,"name":"Result","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":1688,"name":"waitFor","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/abilities/ScheduleWork.ts","line":36,"character":4}],"signatures":[{"id":1689,"name":"waitFor","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/abilities/ScheduleWork.ts","line":36,"character":4}],"parameters":[{"id":1690,"name":"delay","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1795,"name":"Duration","package":"@serenity-js/core"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":1691,"name":"discard","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/abilities/ScheduleWork.ts","line":40,"character":4}],"signatures":[{"id":1692,"name":"discard","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Discards the resources associated with this ability."}]},"sources":[{"fileName":"packages/core/src/screenplay/time/abilities/ScheduleWork.ts","line":40,"character":4}],"type":{"type":"intrinsic","name":"void"},"implementationOf":{"type":"reference","target":573,"name":"Discardable.discard"}}],"implementationOf":{"type":"reference","target":572,"name":"Discardable.discard"}},{"id":1693,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/abilities/ScheduleWork.ts","line":44,"character":13}],"signatures":[{"id":1694,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a JSON representation of the ability and its current state, if available.\\nThe purpose of this method is to enable reporting the state of the ability in a human-readable format,\\nrather than to serialise and deserialise the ability itself."}]},"sources":[{"fileName":"packages/core/src/screenplay/time/abilities/ScheduleWork.ts","line":44,"character":13}],"type":{"type":"reference","target":614,"name":"SerialisedAbility","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":526,"name":"Ability.toJSON"}}],"overwrites":{"type":"reference","target":525,"name":"Ability.toJSON"}}],"groups":[{"title":"Constructors","children":[1678]},{"title":"Methods","children":[1695,1683,1688,1691,1693]}],"sources":[{"fileName":"packages/core/src/screenplay/time/abilities/ScheduleWork.ts","line":16,"character":13}],"extendedTypes":[{"type":"reference","target":508,"name":"Ability","package":"@serenity-js/core"}],"implementedTypes":[{"type":"reference","target":571,"name":"Discardable","package":"@serenity-js/core"}],"permalink":"/api/core/class/ScheduleWork","categories":[],"previousId":1946,"nextId":1697},{"id":1697,"name":"Wait","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"code","text":"`Wait`"},{"kind":"text","text":" is a synchronisation statement that instructs the [actor](/api/core/class/Actor/)\\nto wait before proceeding with their next [activity](/api/core/class/Activity/),\\neither for a set [duration](/api/core/class/Duration/), or until a given [expectation](/api/core/class/Expectation/) is met.\\n\\nYou can configure the timeout of the interaction to ["},{"kind":"code","text":"`Wait.until`"},{"kind":"text","text":"](/api/core/class/Wait/#until):\\n- globally, using ["},{"kind":"code","text":"`SerenityConfig.interactionTimeout`"},{"kind":"text","text":"](/api/core/class/SerenityConfig/#interactionTimeout)\\n- locally, on a per-interaction basis using ["},{"kind":"code","text":"`Wait.upTo`"},{"kind":"text","text":"](/api/core/class/Wait/#upTo)\\n\\n:::tip Portable waiting\\nSerenity/JS implements "},{"kind":"code","text":"`Wait`"},{"kind":"text","text":" from scratch, so that the behaviour is consistent no matter the integration tool you use (Playwright, WebdriverIO, Selenium, etc.)\\nor the type of testing you do (Web, REST API, component testing, etc.)\\n:::\\n\\n## Wait with Web-based tests\\n\\n### Example widget\\n\\n"},{"kind":"code","text":"```html\\n\x3c!--\\n    After about 1 second, the text will change from \'Loading...\' to \'Ready!\'\\n--\x3e\\n<h1 id=\\"status\\">Loading...</h1>\\n<script>\\n    (function () {\\n        setTimeout(function () {\\n            document.getElementById(\'status\').textContent = \'Ready!\'\\n        }, 1000);\\n    })();\\n<\/script>\\n```"},{"kind":"text","text":"\\n\\n### Lean Page Object describing the widget\\n\\n"},{"kind":"code","text":"```ts\\nimport { By, PageElement, Text } from \'@serenity-js/web\'\\n\\nclass App {\\n  static status = () =>\\n     Text.of(PageElement.located(By.id(\'status\'))\\n         .describedAs(\'status widget\'))\\n }\\n```"},{"kind":"text","text":"\\n\\n### Waiting for a set duration\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Duration, Wait } from \'@serenity-js/core\'\\nimport { BrowseTheWebWithPlaywright } from \'@serenity-js/playwright\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { Browser, chromium } from \'playwright\'\\n\\nconst browser = await chromium.launch({ headless: true })\\n\\nawait actorCalled(\'In\xeas\')\\n  .whoCan(BrowseTheWebWithPlaywright.using(browser))\\n  .attemptsTo(\\n      Wait.for(Duration.ofMilliseconds(1_500)),\\n      Ensure.that(App.status(), equals(\'Ready!\')),\\n  );\\n```"},{"kind":"text","text":"\\n\\n**Please note** that while the above implementation works,\\nthis approach is inefficient because at best\\nthe actor might wait too long and at worst the test\\nmight become \\"flaky\\" if any external interference\\n(like network glitches, animations taking a bit too long etc.)\\nmakes the actor wait not long enough.\\n\\n### Waiting until a condition is met\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Wait } from \'@serenity-js/core\'\\nimport { BrowseTheWebWithPlaywright } from \'@serenity-js/playwright\'\\nimport { equals } from \'@serenity-js/assertions\'\\nimport { Browser, chromium } from \'playwright\'\\n\\nconst browser = await chromium.launch({ headless: true })\\n\\nawait actorCalled(\'Wendy\')\\n    .whoCan(BrowseTheWebWithPlaywright.using(browser))\\n    .attemptsTo(\\n        Wait.until(App.status(), equals(\'Ready!\')),\\n        // app is ready, proceed with the scenario\\n    );\\n```"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"`Wait.until`"},{"kind":"text","text":" makes the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\nkeep asking the ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/),\\nin this case "},{"kind":"code","text":"`Text.of(App.status)`"},{"kind":"text","text":", until the answer meets\\nthe expectation, or a timeout expires (default: 5s).\\n\\n**Please note** that both Ensure and Wait can be used with\\nthe same expectations, like "},{"kind":"code","text":"`equals`"},{"kind":"text","text":" or "},{"kind":"code","text":"`includes`"},{"kind":"text","text":".\\n\\n### Changing the default timeout\\n\\n"},{"kind":"code","text":"```ts\\n import { actorCalled, Duration, Wait } from \'@serenity-js/core\';\\n import { BrowseTheWebWithPlaywright } from \'@serenity-js/playwright\';\\n import { equals } from \'@serenity-js/assertions\';\\n import { Browser, chromium } from \'playwright\';\\n\\n const browser: Browser = await chromium.launch({ headless: true });\\n\\n await actorCalled(\'Polly\')\\n     .whoCan(BrowseTheWebWithPlaywright.using(browser))\\n     .attemptsTo(\\n         Wait.upTo(Duration.ofSeconds(3))\\n             .until(App.status(), equals(\'Ready!\')),\\n         // app is ready, proceed with the scenario\\n     );\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`SerenityConfig.interactionTimeout`"},{"kind":"text","text":"](/api/core/class/SerenityConfig/#interactionTimeout)\\n- ["},{"kind":"code","text":"`Duration`"},{"kind":"text","text":"](/api/core/class/Duration/)\\n- ["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/)"}]},"children":[{"id":1698,"name":"minimumTimeout","variant":"declaration","kind":1024,"flags":{"isStatic":true,"isExternal":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Minimum timeout that can be used with ["},{"kind":"code","text":"`Wait.until`"},{"kind":"text","text":"](/api/core/class/Wait/#until),\\ndefaults to 250 milliseconds,"}]},"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":141,"character":20}],"type":{"type":"reference","target":1795,"name":"Duration","package":"@serenity-js/core"},"defaultValue":"..."},{"id":1699,"name":"defaultPollingInterval","variant":"declaration","kind":1024,"flags":{"isStatic":true,"isExternal":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The amount of time ["},{"kind":"code","text":"`Wait.until`"},{"kind":"text","text":"](/api/core/class/Wait/#until) should wait between condition checks,\\ndefaults to 500ms.\\n\\nUse ["},{"kind":"code","text":"`WaitUntil.pollingEvery`"},{"kind":"text","text":"](/api/core/class/WaitUntil/#pollingEvery) to override it for a given interaction."}]},"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":151,"character":20}],"type":{"type":"reference","target":1795,"name":"Duration","package":"@serenity-js/core"},"defaultValue":"..."},{"id":1700,"name":"minimumPollingInterval","variant":"declaration","kind":1024,"flags":{"isStatic":true,"isExternal":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Minimum polling interval of 50ms between condition checks, used with ["},{"kind":"code","text":"`Wait.until`"},{"kind":"text","text":"](/api/core/class/Wait/#until)."}]},"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":156,"character":20}],"type":{"type":"reference","target":1795,"name":"Duration","package":"@serenity-js/core"},"defaultValue":"..."},{"id":1701,"name":"for","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":165,"character":11}],"signatures":[{"id":1702,"name":"for","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a version of this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/)\\nconfigured to wait for a set duration."}]},"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":165,"character":11}],"parameters":[{"id":1703,"name":"duration","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A set duration the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) should wait for before proceeding."}]},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":1795,"name":"Duration","package":"@serenity-js/core"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":1704,"name":"upTo","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":177,"character":11}],"signatures":[{"id":1705,"name":"upTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a version of this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/)\\nconfigured to wait until the answer to the question "},{"kind":"code","text":"`actual`"},{"kind":"text","text":" meets the "},{"kind":"code","text":"`expectation`"},{"kind":"text","text":",\\nor the "},{"kind":"code","text":"`timeout`"},{"kind":"text","text":" expires."}]},"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":177,"character":11}],"parameters":[{"id":1706,"name":"timeout","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Custom timeout to override ["},{"kind":"code","text":"`SerenityConfig.interactionTimeout`"},{"kind":"text","text":"](/api/core/class/SerenityConfig/#interactionTimeout)"}]},"type":{"type":"reference","target":1795,"name":"Duration","package":"@serenity-js/core"}}],"type":{"type":"reflection","declaration":{"id":1707,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":1708,"name":"until","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":177,"character":38}],"type":{"type":"reflection","declaration":{"id":1709,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":177,"character":45}],"signatures":[{"id":1710,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":177,"character":45}],"typeParameter":[{"id":1711,"name":"Actual","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":1712,"name":"actual","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":1711,"name":"Actual","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Answerable","package":"@serenity-js/core"}},{"id":1713,"name":"expectation","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1156,"typeArguments":[{"type":"reference","target":1711,"name":"Actual","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1721,"typeArguments":[{"type":"reference","target":1711,"name":"Actual","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"WaitUntil","package":"@serenity-js/core"}}]}}}],"groups":[{"title":"Properties","children":[1708]}],"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":177,"character":36}]}}}]},{"id":1714,"name":"until","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":197,"character":11}],"signatures":[{"id":1715,"name":"until","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a version of this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/) configured to\\npoll every ["},{"kind":"code","text":"`Wait.defaultPollingInterval`"},{"kind":"text","text":"](/api/core/class/Wait/#defaultPollingInterval) for the result of the provided\\nquestion ("},{"kind":"code","text":"`actual`"},{"kind":"text","text":") until it meets the "},{"kind":"code","text":"`expectation`"},{"kind":"text","text":",\\nor the timeout expires."}]},"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":197,"character":11}],"typeParameter":[{"id":1716,"name":"Actual","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":1717,"name":"actual","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable) that the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) will keep answering\\n until the answer meets the ["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/) provided, or the timeout expires."}]},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":1716,"name":"Actual","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Answerable","package":"@serenity-js/core"}},{"id":1718,"name":"expectation","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An ["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/) to be met before proceeding"}]},"type":{"type":"reference","target":1156,"typeArguments":[{"type":"reference","target":1716,"name":"Actual","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1721,"typeArguments":[{"type":"reference","target":1716,"name":"Actual","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"WaitUntil","package":"@serenity-js/core"}}]},{"id":1719,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":1720,"name":"new Wait","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":1697,"name":"Wait","package":"@serenity-js/core"}}]}],"groups":[{"title":"Constructors","children":[1719]},{"title":"Properties","children":[1698,1699,1700]},{"title":"Methods","children":[1701,1704,1714]}],"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":135,"character":13}],"permalink":"/api/core/class/Wait","categories":[],"previousId":1670,"nextId":1721},{"id":1721,"name":"WaitUntil","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Synchronisation statement that instructs the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to wait before proceeding until a given ["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/) is met.\\n\\n:::tip\\nTo instantiate the [interaction](/api/core/class/Interaction/) to ["},{"kind":"code","text":"`WaitUntil`"},{"kind":"text","text":"](/api/core/class/WaitUntil/),\\nuse the factory method ["},{"kind":"code","text":"`Wait.until`"},{"kind":"text","text":"](/api/core/class/Wait/#until).\\n:::\\n\\n## Learn more\\n* ["},{"kind":"code","text":"`Wait.until`"},{"kind":"text","text":"](/api/core/class/Wait/#until)"}]},"children":[{"id":1750,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":38,"character":4}],"signatures":[{"id":1751,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":38,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":831,"name":"Interaction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","target":830,"name":"Interaction.instantiationLocation"}},{"id":1752,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"signatures":[{"id":1753,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"parameters":[{"id":1754,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":1755,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":1756,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":66}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[1756]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":64}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":833,"name":"Interaction.describedBy"}}],"inheritedFrom":{"type":"reference","target":832,"name":"Interaction.describedBy"}},{"id":1762,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"signatures":[{"id":1763,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":843,"name":"Interaction.toString"}}],"inheritedFrom":{"type":"reference","target":842,"name":"Interaction.toString"}},{"id":1732,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":231,"character":4}],"signatures":[{"id":1733,"name":"new WaitUntil","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":231,"character":4}],"typeParameter":[{"id":1734,"name":"Actual","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":1735,"name":"actual","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":1734,"name":"Actual","package":"@serenity-js/core","qualifiedName":"WaitUntil.Actual","refersToTypeParameter":true}],"name":"Answerable","package":"@serenity-js/core"}},{"id":1736,"name":"expectation","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1156,"typeArguments":[{"type":"reference","target":1734,"name":"Actual","package":"@serenity-js/core","qualifiedName":"WaitUntil.Actual","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}},{"id":1737,"name":"pollingInterval","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1795,"name":"Duration","package":"@serenity-js/core"}},{"id":1738,"name":"timeout","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1795,"name":"Duration","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1721,"typeArguments":[{"type":"reference","target":1734,"name":"Actual","package":"@serenity-js/core","qualifiedName":"WaitUntil.Actual","refersToTypeParameter":true}],"name":"WaitUntil","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":823,"name":"Interaction.constructor"}}],"overwrites":{"type":"reference","target":822,"name":"Interaction.constructor"}},{"id":1743,"name":"pollingEvery","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":256,"character":4}],"signatures":[{"id":1744,"name":"pollingEvery","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configure how frequently the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) should check if the answer meets the expectation.\\n\\nNote that the polling interval defines the delay between subsequent attempts\\nto evaluate the expected value, and doesn\'t include the amount of time\\nit take the actor to evaluate the value itself."}]},"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":256,"character":4}],"parameters":[{"id":1745,"name":"interval","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1795,"name":"Duration","package":"@serenity-js/core"}}],"type":{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":1746,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":263,"character":10}],"signatures":[{"id":1747,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the provided ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to perform this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/).\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`PerformsActivities`"},{"kind":"text","text":"](/api/core/interface/PerformsActivities/)\\n- ["},{"kind":"code","text":"`UsesAbilities`"},{"kind":"text","text":"](/api/core/interface/UsesAbilities/)\\n- ["},{"kind":"code","text":"`AnswersQuestions`"},{"kind":"text","text":"](/api/core/interface/AnswersQuestions/)"}]},"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":263,"character":10}],"parameters":[{"id":1748,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":827,"name":"Interaction.performAs"}}],"overwrites":{"type":"reference","target":826,"name":"Interaction.performAs"}}],"groups":[{"title":"Constructors","children":[1732]},{"title":"Methods","children":[1750,1752,1762,1743,1746]}],"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":230,"character":13}],"typeParameters":[{"id":1764,"name":"Actual","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"extendedTypes":[{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}],"permalink":"/api/core/class/WaitUntil","categories":[],"previousId":1697,"nextId":1765},{"id":1765,"name":"Clock","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A ["},{"kind":"code","text":"`Clock`"},{"kind":"text","text":"](/api/core/class/Clock/) tells the time. This abstraction allows Serenity/JS to have a single place\\nin the framework responsible for telling the time, and one that can be easily mocked for internal testing.\\n\\n"},{"kind":"code","text":"```ts\\nconst now: Timestamp = new Clock().now()\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Timestamp`"},{"kind":"text","text":"](/api/core/class/Timestamp/)\\n- ["},{"kind":"code","text":"`Duration`"},{"kind":"text","text":"](/api/core/class/Duration/)"}]},"children":[{"id":1767,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Clock.ts","line":24,"character":4}],"signatures":[{"id":1768,"name":"new Clock","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Clock.ts","line":24,"character":4}],"parameters":[{"id":1769,"name":"checkTime","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":1770,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Clock.ts","line":24,"character":44}],"signatures":[{"id":1771,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Clock.ts","line":24,"character":44}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Date"},"name":"Date","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Date"}}]}},"defaultValue":"..."}],"type":{"type":"reference","target":1765,"name":"Clock","package":"@serenity-js/core"}}]},{"id":1776,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Clock.ts","line":27,"character":4}],"signatures":[{"id":1777,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Clock.ts","line":27,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}]},{"id":1778,"name":"setAhead","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Clock.ts","line":41,"character":4}],"signatures":[{"id":1779,"name":"setAhead","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Sets the clock ahead to force early resolution of promises\\nreturned by ["},{"kind":"code","text":"`Clock.waitFor`"},{"kind":"text","text":"](/api/core/class/Clock/#waitFor).\\n\\nUseful for test purposes to avoid unnecessary delays."}]},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Clock.ts","line":41,"character":4}],"parameters":[{"id":1780,"name":"duration","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1795,"name":"Duration","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":1781,"name":"tick","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Clock.ts","line":50,"character":10}],"signatures":[{"id":1782,"name":"tick","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a Promise that resolves after one tick of the clock.\\n\\nUseful for test purposes to avoid unnecessary delays."}]},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Clock.ts","line":50,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":1783,"name":"now","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Clock.ts","line":57,"character":4}],"signatures":[{"id":1784,"name":"now","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns current time"}]},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Clock.ts","line":57,"character":4}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}]},{"id":1785,"name":"waitFor","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Clock.ts","line":66,"character":10}],"signatures":[{"id":1786,"name":"waitFor","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a Promise that will be resolved after the given duration"}]},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Clock.ts","line":66,"character":10}],"parameters":[{"id":1787,"name":"duration","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1795,"name":"Duration","package":"@serenity-js/core"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]}],"groups":[{"title":"Constructors","children":[1767]},{"title":"Methods","children":[1776,1778,1781,1783,1785]}],"sources":[{"fileName":"packages/core/src/screenplay/time/models/Clock.ts","line":20,"character":13}],"permalink":"/api/core/class/Clock","categories":[],"previousId":1721,"nextId":1788},{"id":1788,"name":"DelayedCallback","variant":"declaration","kind":256,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/DelayedCallback.ts","line":6,"character":17}],"typeParameters":[{"id":1789,"name":"Result","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"signatures":[{"id":1790,"name":"DelayedCallback","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/DelayedCallback.ts","line":7,"character":4}],"parameters":[{"id":1791,"name":"stats","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":1792,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":1793,"name":"currentTime","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/DelayedCallback.ts","line":7,"character":14}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}},{"id":1794,"name":"i","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/DelayedCallback.ts","line":7,"character":38}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[1793,1794]}],"sources":[{"fileName":"packages/core/src/screenplay/time/models/DelayedCallback.ts","line":7,"character":12}]}}}],"type":{"type":"union","types":[{"type":"reference","target":1789,"name":"Result","package":"@serenity-js/core","qualifiedName":"DelayedCallback.Result","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":1789,"name":"Result","package":"@serenity-js/core","qualifiedName":"DelayedCallback.Result","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}],"permalink":"/api/core/interface/DelayedCallback","categories":[],"previousId":1765,"nextId":1795},{"id":1795,"name":"Duration","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Represents a duration in milliseconds between two [timestamps](/api/core/class/Timestamp/)."}]},"children":[{"id":1801,"name":"ofMilliseconds","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":17,"character":11}],"signatures":[{"id":1802,"name":"ofMilliseconds","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":17,"character":30}],"parameters":[{"id":1803,"name":"milliseconds","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":1795,"name":"Duration","package":"@serenity-js/core"}}]},{"id":1804,"name":"ofSeconds","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":18,"character":11}],"signatures":[{"id":1805,"name":"ofSeconds","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":18,"character":30}],"parameters":[{"id":1806,"name":"seconds","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":1795,"name":"Duration","package":"@serenity-js/core"}}]},{"id":1807,"name":"ofMinutes","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":19,"character":11}],"signatures":[{"id":1808,"name":"ofMinutes","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":19,"character":30}],"parameters":[{"id":1809,"name":"minutes","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":1795,"name":"Duration","package":"@serenity-js/core"}}]},{"id":1810,"name":"ofHours","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":20,"character":11}],"signatures":[{"id":1811,"name":"ofHours","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":20,"character":30}],"parameters":[{"id":1812,"name":"hours","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":1795,"name":"Duration","package":"@serenity-js/core"}}]},{"id":1813,"name":"ofDays","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":21,"character":11}],"signatures":[{"id":1814,"name":"ofDays","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":21,"character":30}],"parameters":[{"id":1815,"name":"days","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":1795,"name":"Duration","package":"@serenity-js/core"}}]},{"id":1816,"name":"ofYears","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":22,"character":11}],"signatures":[{"id":1817,"name":"ofYears","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":22,"character":30}],"parameters":[{"id":1818,"name":"years","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":1795,"name":"Duration","package":"@serenity-js/core"}}]},{"id":1819,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":24,"character":11}],"signatures":[{"id":1820,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":24,"character":11}],"parameters":[{"id":1821,"name":"__namedParameters","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":1822,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":1823,"name":"milliseconds","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":24,"character":40}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[1823]}],"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":24,"character":38}]}}}],"type":{"type":"reference","target":1795,"name":"Duration","package":"@serenity-js/core"}}]},{"id":1824,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":28,"character":4}],"signatures":[{"id":1825,"name":"new Duration","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":28,"character":4}],"parameters":[{"id":1826,"name":"milliseconds","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":1795,"name":"Duration","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"TinyType.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"TinyType.constructor"}},{"id":1828,"name":"isLessThan","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":33,"character":4}],"signatures":[{"id":1829,"name":"isLessThan","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":33,"character":4}],"parameters":[{"id":1830,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1795,"name":"Duration","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":1831,"name":"isLessThanOrEqualTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":37,"character":4}],"signatures":[{"id":1832,"name":"isLessThanOrEqualTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":37,"character":4}],"parameters":[{"id":1833,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1795,"name":"Duration","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":1834,"name":"isGreaterThan","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":41,"character":4}],"signatures":[{"id":1835,"name":"isGreaterThan","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":41,"character":4}],"parameters":[{"id":1836,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1795,"name":"Duration","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":1837,"name":"isGreaterThanOrEqualTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":45,"character":4}],"signatures":[{"id":1838,"name":"isGreaterThanOrEqualTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":45,"character":4}],"parameters":[{"id":1839,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1795,"name":"Duration","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":1840,"name":"plus","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":49,"character":4}],"signatures":[{"id":1841,"name":"plus","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":49,"character":4}],"parameters":[{"id":1842,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1795,"name":"Duration","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1795,"name":"Duration","package":"@serenity-js/core"}}]},{"id":1843,"name":"inMilliseconds","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":53,"character":4}],"signatures":[{"id":1844,"name":"inMilliseconds","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":53,"character":4}],"type":{"type":"intrinsic","name":"number"}}]},{"id":1845,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":57,"character":4}],"signatures":[{"id":1846,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":57,"character":4}],"type":{"type":"intrinsic","name":"string"},"overwrites":{"type":"reference","target":-1,"name":"TinyType.toString"}}],"overwrites":{"type":"reference","target":-1,"name":"TinyType.toString"}},{"id":1847,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":75,"character":4}],"signatures":[{"id":1848,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":75,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"},"overwrites":{"type":"reference","target":-1,"name":"TinyType.toJSON"}}],"overwrites":{"type":"reference","target":-1,"name":"TinyType.toJSON"}},{"id":1849,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":1850,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":1851,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.equals"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.equals"}}],"groups":[{"title":"Constructors","children":[1824]},{"title":"Methods","children":[1801,1804,1807,1810,1813,1816,1819,1828,1831,1834,1837,1840,1843,1845,1847,1849]}],"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":9,"character":13}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}],"permalink":"/api/core/class/Duration","categories":[],"previousId":1788,"nextId":1852},{"id":1852,"name":"RepeatUntilLimits","variant":"declaration","kind":256,"flags":{"isExternal":true},"children":[{"id":1853,"name":"exitCondition","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/RepeatUntilLimits.ts","line":7,"character":4}],"type":{"type":"reflection","declaration":{"id":1854,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/RepeatUntilLimits.ts","line":7,"character":20}],"signatures":[{"id":1855,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/RepeatUntilLimits.ts","line":7,"character":20}],"parameters":[{"id":1856,"name":"result","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1868,"name":"Result","package":"@serenity-js/core","qualifiedName":"RepeatUntilLimits.Result","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"boolean"}}]}}},{"id":1857,"name":"maxInvocations","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/RepeatUntilLimits.ts","line":8,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":1858,"name":"delayBetweenInvocations","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/RepeatUntilLimits.ts","line":9,"character":4}],"type":{"type":"reflection","declaration":{"id":1859,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/RepeatUntilLimits.ts","line":9,"character":30}],"signatures":[{"id":1860,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/RepeatUntilLimits.ts","line":9,"character":30}],"parameters":[{"id":1861,"name":"i","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":1795,"name":"Duration","package":"@serenity-js/core"}}]}}},{"id":1862,"name":"timeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/RepeatUntilLimits.ts","line":10,"character":4}],"type":{"type":"reference","target":1795,"name":"Duration","package":"@serenity-js/core"}},{"id":1863,"name":"errorHandler","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/RepeatUntilLimits.ts","line":11,"character":4}],"type":{"type":"reflection","declaration":{"id":1864,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/RepeatUntilLimits.ts","line":11,"character":19}],"signatures":[{"id":1865,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/RepeatUntilLimits.ts","line":11,"character":19}],"parameters":[{"id":1866,"name":"error","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}},{"id":1867,"name":"result","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1868,"name":"Result","package":"@serenity-js/core","qualifiedName":"RepeatUntilLimits.Result","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"groups":[{"title":"Properties","children":[1853,1857,1858,1862,1863]}],"sources":[{"fileName":"packages/core/src/screenplay/time/models/RepeatUntilLimits.ts","line":6,"character":17}],"typeParameters":[{"id":1868,"name":"Result","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"permalink":"/api/core/interface/RepeatUntilLimits","categories":[],"previousId":1795,"nextId":1869},{"id":1869,"name":"Scheduler","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":1870,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Scheduler.ts","line":22,"character":4}],"signatures":[{"id":1871,"name":"new Scheduler","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Scheduler.ts","line":22,"character":4}],"parameters":[{"id":1872,"name":"clock","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1765,"name":"Clock","package":"@serenity-js/core"}},{"id":1873,"name":"interactionTimeout","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The maximum amount of time to give to a callback to complete before throwing an error"}]},"type":{"type":"reference","target":1795,"name":"Duration","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1869,"name":"Scheduler","package":"@serenity-js/core"}}]},{"id":1877,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Scheduler.ts","line":28,"character":4}],"signatures":[{"id":1878,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Scheduler.ts","line":28,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}]},{"id":1879,"name":"after","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Scheduler.ts","line":41,"character":4}],"signatures":[{"id":1880,"name":"after","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Schedules a callback function to be invoked after a delay"}]},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Scheduler.ts","line":41,"character":4}],"typeParameter":[{"id":1881,"name":"Result","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":1882,"name":"delay","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1795,"name":"Duration","package":"@serenity-js/core"}},{"id":1883,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1788,"typeArguments":[{"type":"reference","target":1881,"name":"Result","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"DelayedCallback","package":"@serenity-js/core"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":1881,"name":"Result","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":1884,"name":"waitFor","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Scheduler.ts","line":57,"character":4}],"signatures":[{"id":1885,"name":"waitFor","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a "},{"kind":"code","text":"`Promise`"},{"kind":"text","text":" to be resolved after a "},{"kind":"code","text":"`delay`"}]},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Scheduler.ts","line":57,"character":4}],"parameters":[{"id":1886,"name":"delay","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1795,"name":"Duration","package":"@serenity-js/core"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":1887,"name":"repeatUntil","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Scheduler.ts","line":76,"character":10}],"signatures":[{"id":1888,"name":"repeatUntil","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Schedules a callback function to be repeated, according to configured limits."}]},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Scheduler.ts","line":76,"character":10}],"typeParameter":[{"id":1889,"name":"Result","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":1890,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1788,"typeArguments":[{"type":"reference","target":1889,"name":"Result","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"DelayedCallback","package":"@serenity-js/core"}},{"id":1891,"name":"limits","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1852,"typeArguments":[{"type":"reference","target":1889,"name":"Result","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"RepeatUntilLimits","package":"@serenity-js/core"},"defaultValue":"{}"}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":1889,"name":"Result","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":1892,"name":"stop","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Scheduler.ts","line":105,"character":4}],"signatures":[{"id":1893,"name":"stop","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Scheduler.ts","line":105,"character":4}],"type":{"type":"intrinsic","name":"void"}}]}],"groups":[{"title":"Constructors","children":[1870]},{"title":"Methods","children":[1877,1879,1884,1887,1892]}],"sources":[{"fileName":"packages/core/src/screenplay/time/models/Scheduler.ts","line":13,"character":13}],"permalink":"/api/core/class/Scheduler","categories":[],"previousId":1852,"nextId":1894},{"id":1894,"name":"Timestamp","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Represents a point in time.\\n\\n"},{"kind":"code","text":"`Timestamp`"},{"kind":"text","text":" makes it easier for you to work with information related to time, like [Serenity/JS domain events](/api/core-events/class/DomainEvent/).\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Duration`"},{"kind":"text","text":"](/api/core/class/Duration/)\\n- [Date](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date)"}]},"children":[{"id":1895,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":18,"character":11}],"signatures":[{"id":1896,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":18,"character":11}],"parameters":[{"id":1897,"name":"v","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}]},{"id":1898,"name":"fromTimestampInSeconds","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":22,"character":11}],"signatures":[{"id":1899,"name":"fromTimestampInSeconds","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":22,"character":11}],"parameters":[{"id":1900,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}]},{"id":1901,"name":"fromTimestampInMilliseconds","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":26,"character":11}],"signatures":[{"id":1902,"name":"fromTimestampInMilliseconds","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":26,"character":11}],"parameters":[{"id":1903,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}]},{"id":1904,"name":"now","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":30,"character":11}],"signatures":[{"id":1905,"name":"now","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":30,"character":11}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}]},{"id":1906,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":34,"character":4}],"signatures":[{"id":1907,"name":"new Timestamp","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":34,"character":4}],"parameters":[{"id":1908,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Date"},"name":"Date","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Date"},"defaultValue":"..."}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"TinyType.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"TinyType.constructor"}},{"id":1909,"name":"value","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":34,"character":32}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Date"},"name":"Date","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Date"},"defaultValue":"..."},{"id":1910,"name":"diff","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":39,"character":4}],"signatures":[{"id":1911,"name":"diff","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":39,"character":4}],"parameters":[{"id":1912,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1795,"name":"Duration","package":"@serenity-js/core"}}]},{"id":1913,"name":"plus","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":44,"character":4}],"signatures":[{"id":1914,"name":"plus","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":44,"character":4}],"parameters":[{"id":1915,"name":"duration","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1795,"name":"Duration","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}]},{"id":1916,"name":"less","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":49,"character":4}],"signatures":[{"id":1917,"name":"less","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":49,"character":4}],"parameters":[{"id":1918,"name":"duration","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1795,"name":"Duration","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}]},{"id":1919,"name":"isBefore","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":54,"character":4}],"signatures":[{"id":1920,"name":"isBefore","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":54,"character":4}],"parameters":[{"id":1921,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":1922,"name":"isBeforeOrEqual","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":59,"character":4}],"signatures":[{"id":1923,"name":"isBeforeOrEqual","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":59,"character":4}],"parameters":[{"id":1924,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":1925,"name":"isAfter","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":64,"character":4}],"signatures":[{"id":1926,"name":"isAfter","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":64,"character":4}],"parameters":[{"id":1927,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":1928,"name":"isAfterOrEqual","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":69,"character":4}],"signatures":[{"id":1929,"name":"isAfterOrEqual","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":69,"character":4}],"parameters":[{"id":1930,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":1931,"name":"toMilliseconds","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":74,"character":4}],"signatures":[{"id":1932,"name":"toMilliseconds","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":74,"character":4}],"type":{"type":"intrinsic","name":"number"}}]},{"id":1933,"name":"toSeconds","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":78,"character":4}],"signatures":[{"id":1934,"name":"toSeconds","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":78,"character":4}],"type":{"type":"intrinsic","name":"number"}}]},{"id":1935,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":82,"character":4}],"signatures":[{"id":1936,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":82,"character":4}],"type":{"type":"intrinsic","name":"string"},"overwrites":{"type":"reference","target":-1,"name":"TinyType.toJSON"}}],"overwrites":{"type":"reference","target":-1,"name":"TinyType.toJSON"}},{"id":1937,"name":"toISOString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":86,"character":4}],"signatures":[{"id":1938,"name":"toISOString","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":86,"character":4}],"type":{"type":"intrinsic","name":"string"}}]},{"id":1939,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":90,"character":4}],"signatures":[{"id":1940,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":90,"character":4}],"type":{"type":"intrinsic","name":"string"},"overwrites":{"type":"reference","target":-1,"name":"TinyType.toString"}}],"overwrites":{"type":"reference","target":-1,"name":"TinyType.toString"}},{"id":1941,"name":"[custom]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":94,"character":4}],"signatures":[{"id":1942,"name":"[custom]","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":94,"character":4}],"type":{"type":"intrinsic","name":"string"}}]},{"id":1943,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":1944,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":1945,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.equals"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.equals"}}],"groups":[{"title":"Constructors","children":[1906]},{"title":"Properties","children":[1909]},{"title":"Methods","children":[1895,1898,1901,1904,1910,1913,1916,1919,1922,1925,1928,1931,1933,1935,1937,1939,1941,1943]}],"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":17,"character":13}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}],"permalink":"/api/core/class/Timestamp","categories":[],"previousId":1869},{"id":2002,"name":"Cast","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"Serenity/JS uses the concept of a _**cast of actors**_ to centralise the process of configuring the [actors](/api/core/class/Actor/) and assigning their [abilities](/api/core/class/Ability/).\\n\\nWhen you invoke ["},{"kind":"code","text":"`actorCalled`"},{"kind":"text","text":"](/api/core/function/actorCalled/) for the first time in a test scenario,\\nSerenity/JS [instantiates a new actor](/api/core/class/Actor/)\\nand passes it through the ["},{"kind":"code","text":"`Cast.prepare`"},{"kind":"text","text":"](/api/core/class/Cast/#prepare) method.\\nSpecifying a **custom cast** gives you an opportunity to configure the actor with the abilities\\nthey need before it\'s returned to the caller,\\nor configure the actors differently **depending on their name**.\\nIt also helps you to avoid having to configure abilities individually in every test scenario.\\n\\n:::tip Remember\\nA **cast** is responsible for assigning **abilities** to **actors** in a central location.\\n:::\\n\\n## Configuring a cast of actors for the entire test suite\\n\\nWhen working with relatively **simple scenarios** where all the actors should always receive the same set of abilities,\\nyou can ["},{"kind":"code","text":"`engage`"},{"kind":"text","text":"](/api/core/function/engage/) Serenity/JS to use a generic ["},{"kind":"code","text":"`Cast.where`"},{"kind":"text","text":"](/api/core/class/Cast/#where):\\n\\n"},{"kind":"code","text":"```typescript\\nimport { Cast, configure } from \'@serenity-js/core\'\\nimport { CallAnApi } from \'@serenity-js/rest\'\\n\\nconfigure({\\n  actors: Cast.where(actor => actor.whoCan(\\n    CallAnApi.at(\'http://api.example.org\'),\\n    // other abilities\\n  ))\\n})\\n```"},{"kind":"text","text":"\\n\\nIf you\'re using Serenity/JS with one of the [supported test runners](/handbook/test-runners/),\\nyou might prefer to use your test runner\'s native configuration mechanism\\ninstead of invoking ["},{"kind":"code","text":"`engage`"},{"kind":"text","text":"](/api/core/function/engage/) explicitly.\\n\\n:::tip configure vs engage\\nCalling ["},{"kind":"code","text":"`configure`"},{"kind":"text","text":"](/api/core/function/configure/) resets the entire Serenity/JS configuration\\nand should be done exactly once in your entire test suite.\\nIf you want to retain the configuration but reset the cast, use ["},{"kind":"code","text":"`engage`"},{"kind":"text","text":"](/api/core/function/engage/) instead.\\n:::\\n\\nLearn more about configuring Serenity/JS with:\\n- [Cucumber.js](/handbook/test-runners/cucumber)\\n- [Jasmine](/handbook/test-runners/jasmine)\\n- [Mocha](/handbook/test-runners/mocha)\\n- [Playwright Test](/handbook/test-runners/playwright-test)\\n- [Protractor](/handbook/test-runners/protractor)\\n- [WebdriverIO](/handbook/test-runners/webdriverio)\\n\\n## Engaging a cast of actors for the specific scenario\\n\\nIf you want to retain Serenity/JS configuration, but set a different [cast](/api/core/class/Cast/)\\nfor the given test scenario you should use ["},{"kind":"code","text":"`engage`"},{"kind":"text","text":"](/api/core/function/engage/) instead of ["},{"kind":"code","text":"`configure`"},{"kind":"text","text":"](/api/core/function/configure/).\\n\\nThis approach is useful for example when your entire test suite is dedicated to interacting with the system\\nunder test via its REST APIs, and you have a handful of scenarios that need a web browser.\\n\\n"},{"kind":"code","text":"```ts\\nimport { describe, beforeEach } from \'mocha\'\\nimport { engage, Cast } from \'@serenity-js/core\';\\nimport { BrowseTheWebWithPlaywright } from \'@serenity-js/playwright\'\\nimport { Browser, chromium } from \'playwright\'\\n\\ndescribe(\'My UI feature\', () => {\\n  beforeEach(async () => {\\n    const browser = await chromium.launch({ headless: true })\\n    engage(Cast.where(actor => actor.whoCan(BrowseTheWebWithPlaywright.using(browser))))\\n  })\\n\\n  // test scenarios\\n})\\n```"},{"kind":"text","text":"\\n\\n## Writing custom casts for complex scenarios\\n\\nIn **complex scenarios** that involve multiple **actors with different abilities**,\\nyou should create a custom implementation of the [cast](/api/core/class/Cast/).\\n\\nExamples of such scenarios include those where actors use separate browser instances, interact with different REST APIs,\\nor start with different data in their [notepads](/api/core/class/Notepad/).\\n\\n### Defining a custom cast of actors interacting with a Web UI\\n\\n"},{"kind":"code","text":"```ts\\nimport { beforeEach } from \'mocha\'\\nimport { engage, Actor, Cast } from \'@serenity-js/core\'\\nimport { BrowseTheWebWithPlaywright, ExtraBrowserContextOptions } from \'@serenity-js/playwright\'\\nimport { Browser, chromium } from \'playwright\'\\n\\nexport class UIActors implements Cast {\\n  constructor(\\n    private readonly browser: Browser,\\n    private readonly options?: ExtraBrowserContextOptions,\\n  ) {\\n  }\\n\\n  prepare(actor: Actor): Actor {\\n    return actor.whoCan(\\n      BrowseTheWebWithPlaywright.using(this.browser, this.options),\\n    )\\n  }\\n}\\n\\nbeforeEach(async () => {\\n  const browser = await chromium.launch({ headless: true })\\n  engage(new UIActors(browser));\\n});\\n```"},{"kind":"text","text":"\\n\\n### Preparing actors differently based on their name\\n\\n"},{"kind":"code","text":"```ts\\nimport { beforeEach } from \'mocha\'\\nimport { actorCalled, engage, Cast } from \'@serenity-js/core\'\\nimport { BrowseTheWebWithPlaywright, ExtraBrowserContextOptions } from \'@serenity-js/playwright\'\\nimport { CallAnApi } from \'@serenity-js/rest\'\\nimport { Browser, BrowserContextOptions, chromium } from \'playwright\'\\n\\nclass Actors implements Cast {\\n  constructor(\\n    private readonly browser: Browser,\\n    private readonly contextOptions: BrowserContextOptions,\\n    private readonly extraContextOptions: ExtraBrowserContextOptions,\\n  ) {\\n  }\\n\\n  prepare(actor: Actor) {\\n    switch (actor.name) {\\n      case \'James\':\\n        return actor.whoCan(BrowseTheWebWithPlaywright.using(\\n          this.browser,\\n          this.contextOptions,\\n          this.extraContextOptions\\n        ));\\n      default:\\n        return actor.whoCan(CallAnApi.at(this.contextOptions.baseURL));\\n    }\\n  }\\n}\\n\\nbeforeEach(async () => {\\n  const browser = await chromium.launch({ headless: true })\\n  engage(new Actors(browser, { baseURL: \'https://example.org\' }));\\n});\\n\\nactorCalled(\'James\') // returns an actor using a browser\\nactorCalled(\'Alice\') // returns an actor interacting with an API\\n```"}]},"children":[{"id":2003,"name":"where","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/Cast.ts","line":163,"character":11}],"signatures":[{"id":2004,"name":"where","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates a generic "},{"kind":"code","text":"`Cast`"},{"kind":"text","text":" implementation, where new actors receive the abilities\\nconfigured by the "},{"kind":"code","text":"`prepareFunction`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/src/stage/Cast.ts","line":163,"character":11}],"parameters":[{"id":2005,"name":"prepareFunction","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":2006,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/Cast.ts","line":163,"character":34}],"signatures":[{"id":2007,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/Cast.ts","line":163,"character":34}],"parameters":[{"id":2008,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":655,"name":"Actor","package":"@serenity-js/core"}}],"type":{"type":"reference","target":655,"name":"Actor","package":"@serenity-js/core"}}]}}}],"type":{"type":"reference","target":2002,"name":"Cast","package":"@serenity-js/core"}}]},{"id":2009,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":2010,"name":"new Cast","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":2002,"name":"Cast","package":"@serenity-js/core"}}]},{"id":2011,"name":"prepare","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/core/src/stage/Cast.ts","line":179,"character":13}],"signatures":[{"id":2012,"name":"prepare","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) instantiated when ["},{"kind":"code","text":"`Stage.actor`"},{"kind":"text","text":"](/api/core/class/Stage/#actor) is invoked."}]},"sources":[{"fileName":"packages/core/src/stage/Cast.ts","line":179,"character":13}],"parameters":[{"id":2013,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"#### Learn more\\n- ["},{"kind":"code","text":"`engage`"},{"kind":"text","text":"](/api/core/function/engage/)"}]},"type":{"type":"reference","target":655,"name":"Actor","package":"@serenity-js/core"}}],"type":{"type":"reference","target":655,"name":"Actor","package":"@serenity-js/core"}}]}],"groups":[{"title":"Constructors","children":[2009]},{"title":"Methods","children":[2003,2011]}],"sources":[{"fileName":"packages/core/src/stage/Cast.ts","line":155,"character":22}],"permalink":"/api/core/class/Cast","categories":[],"previousId":499,"nextId":2076},{"id":2076,"name":"ListensToDomainEvents","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/) that can listen and react to [Serenity/JS domain events](/api/core-events/class/DomainEvent/)\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/)\\n- ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMemberBuilder/)\\n- ["},{"kind":"code","text":"`engage`"},{"kind":"text","text":"](/api/core/function/engage/)\\n- ["},{"kind":"code","text":"`SerenityConfig.crew`"},{"kind":"text","text":"](/api/core/class/SerenityConfig/#crew)"}]},"children":[{"id":2077,"name":"notifyOf","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/ListensToDomainEvents.ts","line":23,"character":4}],"signatures":[{"id":2078,"name":"notifyOf","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Handles ["},{"kind":"code","text":"`DomainEvent`"},{"kind":"text","text":"](/api/core-events/class/DomainEvent/) objects emitted by the ["},{"kind":"code","text":"`Stage`"},{"kind":"text","text":"](/api/core/class/Stage/)\\nthat this ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/) is assigned to."}]},"sources":[{"fileName":"packages/core/src/stage/ListensToDomainEvents.ts","line":23,"character":4}],"parameters":[{"id":2079,"name":"event","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":2630,"name":"DomainEvent","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"void"}}]}],"groups":[{"title":"Methods","children":[2077]}],"sources":[{"fileName":"packages/core/src/stage/ListensToDomainEvents.ts","line":15,"character":17}],"extendedBy":[{"type":"reference","target":2241,"name":"StageCrewMember"}],"permalink":"/api/core/interface/ListensToDomainEvents","categories":[],"previousId":2002,"nextId":2158},{"id":2158,"name":"Stage","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Stage is the place where [actors](/api/core/class/Actor/) perform.\\n\\nIn more technical terms, the Stage is the main event bus propagating [Serenity/JS domain events](/api/core-events/class/DomainEvent/)\\nto [actors](/api/core/class/Actor/) it instantiates and [stage crew members](/api/core/interface/StageCrewMember/) that have been registered with it.\\n\\nIt is unlikely that you\'ll ever need to interact with the "},{"kind":"code","text":"`Stage`"},{"kind":"text","text":" directly in your tests. Instead, you\'ll use functions like\\n["},{"kind":"code","text":"`actorCalled`"},{"kind":"text","text":"](/api/core/function/actorCalled/) and ["},{"kind":"code","text":"`actorInTheSpotlight`"},{"kind":"text","text":"](/api/core/function/actorInTheSpotlight/).\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`configure`"},{"kind":"text","text":"](/api/core/function/configure/)\\n- ["},{"kind":"code","text":"`engage`"},{"kind":"text","text":"](/api/core/function/engage/)\\n- ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/)"}]},"children":[{"id":2159,"name":"unknownSceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":48,"character":27}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"},"defaultValue":"..."},{"id":2160,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":81,"character":4}],"signatures":[{"id":2161,"name":"new Stage","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":81,"character":4}],"parameters":[{"id":2162,"name":"cast","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":2002,"name":"Cast","package":"@serenity-js/core"}},{"id":2163,"name":"manager","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":2257,"name":"StageManager","package":"@serenity-js/core"}},{"id":2164,"name":"errors","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":144,"name":"ErrorFactory","package":"@serenity-js/core"}},{"id":2165,"name":"clock","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1765,"name":"Clock","package":"@serenity-js/core"}},{"id":2166,"name":"interactionTimeout","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1795,"name":"Duration","package":"@serenity-js/core"}},{"id":2167,"name":"sceneIdFactory","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationIdFactory","package":"@serenity-js/core"},"defaultValue":"CorrelationId"}],"type":{"type":"reference","target":2158,"name":"Stage","package":"@serenity-js/core"}}]},{"id":2183,"name":"configure","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":97,"character":4}],"signatures":[{"id":2184,"name":"configure","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":97,"character":4}],"parameters":[{"id":2185,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Pick"},"typeArguments":[{"type":"reference","target":85,"name":"SerenityConfig","package":"@serenity-js/core"},{"type":"union","types":[{"type":"literal","value":"actors"},{"type":"literal","value":"cueTimeout"},{"type":"literal","value":"interactionTimeout"},{"type":"literal","value":"diffFormatter"}]}],"name":"Pick","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#picktype-keys"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":2186,"name":"theActorCalled","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":118,"character":4}],"signatures":[{"id":2187,"name":"theActorCalled","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An alias for ["},{"kind":"code","text":"`Stage.actor`"},{"kind":"text","text":"](/api/core/class/Stage/#actor)"}]},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":118,"character":4}],"parameters":[{"id":2188,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":655,"name":"Actor","package":"@serenity-js/core"}}]},{"id":2189,"name":"actor","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":129,"character":4}],"signatures":[{"id":2190,"name":"actor","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a new ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) or fetches an existing one\\nidentified by their name if they\'ve already been instantiated."}]},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":129,"character":4}],"parameters":[{"id":2191,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Case-sensitive name of the Actor, e.g. "},{"kind":"code","text":"`Alice`"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":655,"name":"Actor","package":"@serenity-js/core"}}]},{"id":2192,"name":"theActorInTheSpotlight","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":179,"character":4}],"signatures":[{"id":2193,"name":"theActorInTheSpotlight","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the last ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) instantiated via ["},{"kind":"code","text":"`Stage.actor`"},{"kind":"text","text":"](/api/core/class/Stage/#actor).\\nUseful when you don\'t can\'t or choose not to reference the actor by their name."}],"blockTags":[{"tag":"@throws","content":[{"kind":"text","text":"["},{"kind":"code","text":"`LogicError`"},{"kind":"text","text":"](/api/core/class/LogicError/)\\n If no ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) has been activated yet"}]}]},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":179,"character":4}],"type":{"type":"reference","target":655,"name":"Actor","package":"@serenity-js/core"}}]},{"id":2194,"name":"theShowHasStarted","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":190,"character":4}],"signatures":[{"id":2195,"name":"theShowHasStarted","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if there is an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) in the spotlight, "},{"kind":"code","text":"`false`"},{"kind":"text","text":" otherwise."}]},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":190,"character":4}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":2196,"name":"engage","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":200,"character":4}],"signatures":[{"id":2197,"name":"engage","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the Stage to prepare [actors](/api/core/class/Actor/)\\ninstantiated via ["},{"kind":"code","text":"`Stage.actor`"},{"kind":"text","text":"](/api/core/class/Stage/#actor) using the provided [cast](/api/core/class/Cast/)."}]},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":200,"character":4}],"parameters":[{"id":2198,"name":"actors","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":2002,"name":"Cast","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":2199,"name":"assign","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":210,"character":4}],"signatures":[{"id":2200,"name":"assign","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Assigns listeners to be notified of [Serenity/JS domain events](/api/core-events/class/DomainEvent/)\\nemitted via ["},{"kind":"code","text":"`Stage.announce`"},{"kind":"text","text":"](/api/core/class/Stage/#announce).s"}]},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":210,"character":4}],"parameters":[{"id":2201,"name":"listeners","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":2076,"name":"ListensToDomainEvents","package":"@serenity-js/core"}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":2202,"name":"announce","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":220,"character":4}],"signatures":[{"id":2203,"name":"announce","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Notifies all the assigned listeners of the events,\\nemitting them one by one."}]},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":220,"character":4}],"parameters":[{"id":2204,"name":"events","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":2630,"name":"DomainEvent","package":"@serenity-js/core"}}}],"type":{"type":"intrinsic","name":"void"},"implementationOf":{"type":"reference","target":2649,"name":"EmitsDomainEvents.announce"}}],"implementationOf":{"type":"reference","target":2648,"name":"EmitsDomainEvents.announce"}},{"id":2208,"name":"currentTime","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":252,"character":4}],"signatures":[{"id":2209,"name":"currentTime","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns current time. This method should be used whenever\\n["},{"kind":"code","text":"`DomainEvent`"},{"kind":"text","text":"](/api/core-events/class/DomainEvent/) objects are instantiated by you programmatically."}]},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":252,"character":4}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"},"implementationOf":{"type":"reference","target":2654,"name":"EmitsDomainEvents.currentTime"}}],"implementationOf":{"type":"reference","target":2653,"name":"EmitsDomainEvents.currentTime"}},{"id":2210,"name":"assignNewSceneId","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":266,"character":4}],"signatures":[{"id":2211,"name":"assignNewSceneId","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Generates and remembers a "},{"kind":"code","text":"`CorrelationId`"},{"kind":"text","text":"\\nfor the current scene.\\n\\nThis method should be used in custom test runner adapters\\nwhen instantiating a [SceneStarts](/api/core-events/class/SceneStarts/) event.\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Stage.currentSceneId`"},{"kind":"text","text":"](/api/core/class/Stage/#currentSceneId)"}]},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":266,"character":4}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}]},{"id":2212,"name":"currentSceneId","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":278,"character":4}],"signatures":[{"id":2213,"name":"currentSceneId","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the "},{"kind":"code","text":"`CorrelationId`"},{"kind":"text","text":" for the current scene.\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Stage.assignNewSceneId`"},{"kind":"text","text":"](/api/core/class/Stage/#assignNewSceneId)"}]},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":278,"character":4}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"},"implementationOf":{"type":"reference","target":2644,"name":"EmitsDomainEvents.currentSceneId"}}],"implementationOf":{"type":"reference","target":2643,"name":"EmitsDomainEvents.currentSceneId"}},{"id":2214,"name":"assignNewActivityId","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":292,"character":4}],"signatures":[{"id":2215,"name":"assignNewActivityId","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Generates and remembers a "},{"kind":"code","text":"`CorrelationId`"},{"kind":"text","text":"\\nfor the current ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/).\\n\\nThis method should be used in custom test runner adapters\\nwhen instantiating the [ActivityStarts](/api/core-events/class/ActivityStarts/) event.\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Stage.currentActivityId`"},{"kind":"text","text":"](/api/core/class/Stage/#currentActivityId)"}]},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":292,"character":4}],"parameters":[{"id":2216,"name":"activityDetails","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"ActivityDetails","package":"@serenity-js/core"}}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"},"implementationOf":{"type":"reference","target":2646,"name":"EmitsDomainEvents.assignNewActivityId"}}],"implementationOf":{"type":"reference","target":2645,"name":"EmitsDomainEvents.assignNewActivityId"}},{"id":2217,"name":"currentActivityId","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":307,"character":4}],"signatures":[{"id":2218,"name":"currentActivityId","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the "},{"kind":"code","text":"`CorrelationId`"},{"kind":"text","text":" for the current ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/).\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Stage.assignNewSceneId`"},{"kind":"text","text":"](/api/core/class/Stage/#assignNewSceneId)"}]},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":307,"character":4}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}]},{"id":2219,"name":"waitForNextCue","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":323,"character":4}],"signatures":[{"id":2220,"name":"waitForNextCue","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a Promise that will be resolved when any asynchronous\\npost-processing activities performed by Serenity/JS are completed.\\n\\nInvoked in Serenity/JS test runner adapters to inform the test runner when\\nthe scenario has finished and when it\'s safe for the test runner to proceed\\nwith the next test, or finish execution."}]},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":323,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"implementationOf":{"type":"reference","target":2652,"name":"EmitsDomainEvents.waitForNextCue"}}],"implementationOf":{"type":"reference","target":2651,"name":"EmitsDomainEvents.waitForNextCue"}},{"id":2221,"name":"createError","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":327,"character":4}],"signatures":[{"id":2222,"name":"createError","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":327,"character":4}],"typeParameter":[{"id":2223,"name":"RE","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":367,"name":"RuntimeError","package":"@serenity-js/core"}}],"parameters":[{"id":2224,"name":"errorType","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":2225,"name":"__type","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":327,"character":52}],"signatures":[{"id":2226,"name":"new errorType","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":327,"character":52}],"parameters":[{"id":2227,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"reference","target":2223,"name":"RE","package":"@serenity-js/core","refersToTypeParameter":true}}]}}},{"id":2228,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":166,"name":"ErrorOptions","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2223,"name":"RE","package":"@serenity-js/core","refersToTypeParameter":true}}]}],"groups":[{"title":"Constructors","children":[2160]},{"title":"Properties","children":[2159]},{"title":"Methods","children":[2183,2186,2189,2192,2194,2196,2199,2202,2208,2210,2212,2214,2217,2219,2221]}],"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":46,"character":13}],"implementedTypes":[{"type":"reference","target":2642,"name":"EmitsDomainEvents","package":"@serenity-js/core"}],"permalink":"/api/core/class/Stage","categories":[],"previousId":2076,"nextId":2241},{"id":2241,"name":"StageCrewMember","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"You can think of the ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/) as an in-memory microservice that reacts to [Serenity/JS domain events](/api/core-events/class/DomainEvent/),\\npublished by the ["},{"kind":"code","text":"`StageManager`"},{"kind":"text","text":"](/api/core/class/StageManager/), and originally emitted by [actors](/api/core/class/Actor/) performing activities and Serenity/JS\\ntest runner adapters notifying the framework about test scenario-specific events like [SceneStarts](/api/core-events/class/SceneStarts/) or [SceneFinishes](/api/core-events/class/SceneFinishes/).\\n\\nEvery [stage crew member](/api/core/interface/StageCrewMember/) receives a reference to the [stage](/api/core/class/Stage/),\\nand therefore the [stage manager](/api/core/class/StageManager/), which enables them to emit [domain events](/api/core-events/class/DomainEvent/) back.\\n\\nThis interface is useful when you\'re interested in implementing custom Serenity/JS reporters or supporting services.\\n\\n## Implementing a custom StageCrewMember\\n\\n"},{"kind":"code","text":"```ts\\nimport { Stage, StageCrewMember } from \'@serenity-js/core\'\\nimport * as events from \'@serenity-js/core/lib/events\'\\nimport { ArbitraryTag } from \'@serenity-js/core/lib/model\'\\n\\nexport class TestRunnerTagger implements StageCrewMember {\\n\\n  static using(tagName: string) {\\n    return new TestRunnerTagger(tagName);\\n  }\\n\\n  protected constructor(\\n    private readonly tagName: string,\\n    private stage?: Stage,\\n  ) {\\n  }\\n\\n  assignedTo(stage: Stage): StageCrewMember {\\n    this.stage = stage;\\n    return this;\\n  }\\n\\n  notifyOf(event: events.DomainEvent): void {\\n    if (event instanceof events.TestRunnerDetected) {\\n      this.stage.announce(\\n        new events.SceneTagged(\\n          this.stage.currentSceneId(),\\n          new ArbitraryTag(this.tagName),\\n          this.stage.currentTime()\\n        )\\n      )\\n    }\\n  }\\n}\\n```"},{"kind":"text","text":"\\n\\n## Using the custom StageCrewMember\\n\\n"},{"kind":"code","text":"```ts\\nimport { configure } from \'@serenity-js/core\'\\n\\nconfigure({\\n  crew: [\\n    TestRunnerTagger.using(`Node:${ process.version }`),\\n  ]\\n})\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`SerenityConfig.crew`"},{"kind":"text","text":"](/api/core/class/SerenityConfig/#crew)\\n- ["},{"kind":"code","text":"`configure`"},{"kind":"text","text":"](/api/core/function/configure/)\\n- ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMemberBuilder/)\\n- ["},{"kind":"code","text":"`ListensToDomainEvents`"},{"kind":"text","text":"](/api/core/interface/ListensToDomainEvents/)\\n- ["},{"kind":"code","text":"`DomainEvent`"},{"kind":"text","text":"](/api/core-events/class/DomainEvent/)"}]},"children":[{"id":2245,"name":"notifyOf","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/ListensToDomainEvents.ts","line":23,"character":4}],"signatures":[{"id":2246,"name":"notifyOf","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Handles ["},{"kind":"code","text":"`DomainEvent`"},{"kind":"text","text":"](/api/core-events/class/DomainEvent/) objects emitted by the ["},{"kind":"code","text":"`Stage`"},{"kind":"text","text":"](/api/core/class/Stage/)\\nthat this ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/) is assigned to."}]},"sources":[{"fileName":"packages/core/src/stage/ListensToDomainEvents.ts","line":23,"character":4}],"parameters":[{"id":2247,"name":"event","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":2630,"name":"DomainEvent","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","target":2078,"name":"ListensToDomainEvents.notifyOf"}}],"inheritedFrom":{"type":"reference","target":2077,"name":"ListensToDomainEvents.notifyOf"}},{"id":2242,"name":"assignedTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/StageCrewMember.ts","line":78,"character":4}],"signatures":[{"id":2243,"name":"assignedTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Assigns a ["},{"kind":"code","text":"`Stage`"},{"kind":"text","text":"](/api/core/class/Stage/) to this ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/)"}]},"sources":[{"fileName":"packages/core/src/stage/StageCrewMember.ts","line":78,"character":4}],"parameters":[{"id":2244,"name":"stage","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":2158,"name":"Stage","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2241,"name":"StageCrewMember","package":"@serenity-js/core"}}]}],"groups":[{"title":"Methods","children":[2245,2242]}],"sources":[{"fileName":"packages/core/src/stage/StageCrewMember.ts","line":73,"character":17}],"extendedTypes":[{"type":"reference","target":2076,"name":"ListensToDomainEvents","package":"@serenity-js/core"}],"implementedBy":[{"type":"reference","target":2014,"name":"ArtifactArchiver"},{"type":"reference","target":2057,"name":"StreamReporter"}],"permalink":"/api/core/interface/StageCrewMember","categories":[],"previousId":2158,"nextId":2248},{"id":2248,"name":"StageCrewMemberBuilder","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Use a ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMemberBuilder/) to configure complex ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/) objects.\\n\\nUseful when you\'re interested in implementing custom reporters with multiple configuration options.\\nSee ["},{"kind":"code","text":"`ConsoleReporter`"},{"kind":"text","text":"](/api/console-reporter/class/ConsoleReporter/) for an example.\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/)\\n- ["},{"kind":"code","text":"`StageCrewMemberBuilderDependencies`"},{"kind":"text","text":"](/api/core/interface/StageCrewMemberBuilderDependencies/)\\n- ["},{"kind":"code","text":"`SerenityConfig.crew`"},{"kind":"text","text":"](/api/core/class/SerenityConfig/#crew)"}]},"children":[{"id":2249,"name":"build","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/StageCrewMemberBuilder.ts","line":23,"character":4}],"signatures":[{"id":2250,"name":"build","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/), giving it access to shared dependencies\\nsuch as ["},{"kind":"code","text":"`Stage`"},{"kind":"text","text":"](/api/core/class/Stage/) or ["},{"kind":"code","text":"`OutputStream`"},{"kind":"text","text":"](/api/core-adapter/interface/OutputStream/)"}]},"sources":[{"fileName":"packages/core/src/stage/StageCrewMemberBuilder.ts","line":23,"character":4}],"parameters":[{"id":2251,"name":"dependencies","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":2253,"name":"StageCrewMemberBuilderDependencies","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2252,"name":"T","package":"@serenity-js/core","qualifiedName":"StageCrewMemberBuilder.T","refersToTypeParameter":true}}]}],"groups":[{"title":"Methods","children":[2249]}],"sources":[{"fileName":"packages/core/src/stage/StageCrewMemberBuilder.ts","line":17,"character":17}],"typeParameters":[{"id":2252,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":2076,"name":"ListensToDomainEvents","package":"@serenity-js/core"},"default":{"type":"reference","target":2076,"name":"ListensToDomainEvents","package":"@serenity-js/core"}}],"permalink":"/api/core/interface/StageCrewMemberBuilder","categories":[],"previousId":2241,"nextId":2253},{"id":2253,"name":"StageCrewMemberBuilderDependencies","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Dependencies injected by ["},{"kind":"code","text":"`Serenity.configure`"},{"kind":"text","text":"](/api/core/class/Serenity/#configure) into ["},{"kind":"code","text":"`StageCrewMemberBuilder.build`"},{"kind":"text","text":"](/api/core/interface/StageCrewMemberBuilder/#build)\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMemberBuilder/)"}]},"children":[{"id":2254,"name":"stage","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/StageCrewMemberBuilderDependencies.ts","line":14,"character":4}],"type":{"type":"reference","target":2158,"name":"Stage","package":"@serenity-js/core"}},{"id":2255,"name":"fileSystem","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/StageCrewMemberBuilderDependencies.ts","line":15,"character":4}],"type":{"type":"reference","name":"FileSystem","package":"@serenity-js/core"}},{"id":2256,"name":"outputStream","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/StageCrewMemberBuilderDependencies.ts","line":16,"character":4}],"type":{"type":"reference","target":2286,"name":"OutputStream","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[2254,2255,2256]}],"sources":[{"fileName":"packages/core/src/stage/StageCrewMemberBuilderDependencies.ts","line":13,"character":17}],"permalink":"/api/core/interface/StageCrewMemberBuilderDependencies","categories":[],"previousId":2248,"nextId":2257},{"id":2257,"name":"StageManager","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2258,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/StageManager.ts","line":14,"character":4}],"signatures":[{"id":2259,"name":"new StageManager","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/StageManager.ts","line":14,"character":4}],"parameters":[{"id":2260,"name":"cueTimeout","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1795,"name":"Duration","package":"@serenity-js/core"}},{"id":2261,"name":"clock","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1765,"name":"Clock","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2257,"name":"StageManager","package":"@serenity-js/core"}}]},{"id":2266,"name":"configure","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/StageManager.ts","line":18,"character":4}],"signatures":[{"id":2267,"name":"configure","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/StageManager.ts","line":18,"character":4}],"parameters":[{"id":2268,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":2269,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":2270,"name":"cueTimeout","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/StageManager.ts","line":18,"character":25}],"type":{"type":"reference","target":1795,"name":"Duration","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[2270]}],"sources":[{"fileName":"packages/core/src/stage/StageManager.ts","line":18,"character":23}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":2271,"name":"register","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/StageManager.ts","line":23,"character":4}],"signatures":[{"id":2272,"name":"register","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/StageManager.ts","line":23,"character":4}],"parameters":[{"id":2273,"name":"subscribers","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":2076,"name":"ListensToDomainEvents","package":"@serenity-js/core"}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":2274,"name":"deregister","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/StageManager.ts","line":27,"character":4}],"signatures":[{"id":2275,"name":"deregister","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/StageManager.ts","line":27,"character":4}],"parameters":[{"id":2276,"name":"subscriber","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":2076,"name":"ListensToDomainEvents","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":2277,"name":"notifyOf","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/StageManager.ts","line":31,"character":4}],"signatures":[{"id":2278,"name":"notifyOf","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/StageManager.ts","line":31,"character":4}],"parameters":[{"id":2279,"name":"event","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":2630,"name":"DomainEvent","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":2280,"name":"waitForAsyncOperationsToComplete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/StageManager.ts","line":37,"character":4}],"signatures":[{"id":2281,"name":"waitForAsyncOperationsToComplete","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/StageManager.ts","line":37,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":2282,"name":"waitForNextCue","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/StageManager.ts","line":57,"character":10}],"signatures":[{"id":2283,"name":"waitForNextCue","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/StageManager.ts","line":57,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":2284,"name":"currentTime","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/StageManager.ts","line":74,"character":4}],"signatures":[{"id":2285,"name":"currentTime","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns current wall clock time."}]},"sources":[{"fileName":"packages/core/src/stage/StageManager.ts","line":74,"character":4}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"},"implementationOf":{"type":"reference","target":1948,"name":"TellsTime.currentTime"}}],"implementationOf":{"type":"reference","target":1947,"name":"TellsTime.currentTime"}}],"groups":[{"title":"Constructors","children":[2258]},{"title":"Methods","children":[2266,2271,2274,2277,2280,2282,2284]}],"sources":[{"fileName":"packages/core/src/stage/StageManager.ts","line":10,"character":13}],"implementedTypes":[{"type":"reference","target":1946,"name":"TellsTime","package":"@serenity-js/core"}],"permalink":"/api/core/class/StageManager","categories":[],"previousId":2253,"nextId":2014},{"id":2014,"name":"ArtifactArchiver","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Stores any artifacts emitted via ["},{"kind":"code","text":"`ArtifactGenerated`"},{"kind":"text","text":"](/api/core-events/class/ArtifactGenerated/) events on the file system.\\n\\n## Registering Artifact Archiver programmatically\\n\\n"},{"kind":"code","text":"```ts\\nimport { ArtifactArchiver, configure } from \'@serenity-js/core\'\\n\\nconfigure({\\n  crew: [\\n    ArtifactArchiver.storingArtifactsAt(`/target/site/serenity`),\\n  ]\\n  // other Serenity/JS config\\n})\\n```"},{"kind":"text","text":"\\n\\n## Using Artifact Archiver with Playwright Test\\n\\n"},{"kind":"code","text":"```ts\\n// playwright.config.ts\\nimport type { PlaywrightTestConfig } from \'@serenity-js/playwright-test\'\\n\\nconst config: PlaywrightTestConfig = {\\n  testDir: \'./spec\',\\n\\n  reporter: [\\n    [ \'@serenity-js/playwright-test\', {\\n      crew: [\\n        \'@serenity-js/serenity-bdd\',\\n        [ \'@serenity-js/core:ArtifactArchiver\', { outputDirectory: \'target/site/serenity\' } ],\\n      ]\\n      // other Serenity/JS config\\n    }]\\n  ],\\n  // other Playwright Test config\\n}\\n```"},{"kind":"text","text":"\\n\\n## Using Artifact Archiver with WebdriverIO\\n\\n"},{"kind":"code","text":"```ts\\n// wdio.conf.ts\\nimport { WebdriverIOConfig } from \'@serenity-js/webdriverio\'\\n\\nexport const config: WebdriverIOConfig = {\\n\\n  framework: \'@serenity-js/webdriverio\',\\n\\n  serenity: {\\n    crew: [\\n     \'@serenity-js/serenity-bdd\',\\n      [ \'@serenity-js/core:ArtifactArchiver\', { outputDirectory: \'target/site/serenity\' } ],\\n    ]\\n    // other Serenity/JS config\\n  },\\n  // other WebdriverIO config\\n}\\n```"},{"kind":"text","text":"\\n\\n## Using Artifact Archiver with Protractor\\n\\n"},{"kind":"code","text":"```js\\n// protractor.conf.js\\nexports.config = {\\n  framework:     \'custom\',\\n  frameworkPath: require.resolve(\'@serenity-js/protractor/adapter\'),\\n\\n  serenity: {\\n    crew: [\\n      \'@serenity-js/serenity-bdd\',\\n      [ \'@serenity-js/core:ArtifactArchiver\', { outputDirectory: \'target/site/serenity\' } ],\\n    ],\\n    // other Serenity/JS config\\n  },\\n  // other Protractor config\\n}\\n```"}]},"children":[{"id":2015,"name":"storingArtifactsAt","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/crew/artifact-archiver/ArtifactArchiver.ts","line":110,"character":11}],"signatures":[{"id":2016,"name":"storingArtifactsAt","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates an "},{"kind":"code","text":"`ArtifactArchiver`"},{"kind":"text","text":" storing artifacts in a given "},{"kind":"code","text":"`destination`"},{"kind":"text","text":".\\nThe "},{"kind":"code","text":"`destination`"},{"kind":"text","text":" directory will be created automatically and recursively if it doesn\'t exist."}]},"sources":[{"fileName":"packages/core/src/stage/crew/artifact-archiver/ArtifactArchiver.ts","line":110,"character":11}],"parameters":[{"id":2017,"name":"destination","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"type":{"type":"reference","target":2241,"name":"StageCrewMember","package":"@serenity-js/core"}}]},{"id":2018,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/crew/artifact-archiver/ArtifactArchiver.ts","line":124,"character":11}],"signatures":[{"id":2019,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates an "},{"kind":"code","text":"`ArtifactArchiver`"},{"kind":"text","text":" storing artifacts in a given "},{"kind":"code","text":"`outputDirectory`"},{"kind":"text","text":".\\nThe "},{"kind":"code","text":"`outputDirectory`"},{"kind":"text","text":" will be created automatically and recursively if it doesn\'t exist."}]},"sources":[{"fileName":"packages/core/src/stage/crew/artifact-archiver/ArtifactArchiver.ts","line":124,"character":11}],"parameters":[{"id":2020,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":2021,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":2022,"name":"outputDirectory","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/crew/artifact-archiver/ArtifactArchiver.ts","line":124,"character":30}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[2022]}],"sources":[{"fileName":"packages/core/src/stage/crew/artifact-archiver/ArtifactArchiver.ts","line":124,"character":28}]}}}],"type":{"type":"reference","target":2241,"name":"StageCrewMember","package":"@serenity-js/core"}}]},{"id":2023,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/crew/artifact-archiver/ArtifactArchiver.ts","line":135,"character":4}],"signatures":[{"id":2024,"name":"new ArtifactArchiver","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/crew/artifact-archiver/ArtifactArchiver.ts","line":135,"character":4}],"parameters":[{"id":2025,"name":"fileSystem","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"FileSystem","package":"@serenity-js/core"}},{"id":2026,"name":"stage","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The stage this ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/) should be assigned to"}]},"type":{"type":"reference","target":2158,"name":"Stage","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2014,"name":"ArtifactArchiver","package":"@serenity-js/core"}}]},{"id":2029,"name":"assignedTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/crew/artifact-archiver/ArtifactArchiver.ts","line":141,"character":4}],"signatures":[{"id":2030,"name":"assignedTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Assigns a ["},{"kind":"code","text":"`Stage`"},{"kind":"text","text":"](/api/core/class/Stage/) to this ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/)"}]},"sources":[{"fileName":"packages/core/src/stage/crew/artifact-archiver/ArtifactArchiver.ts","line":141,"character":4}],"parameters":[{"id":2031,"name":"stage","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":2158,"name":"Stage","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2241,"name":"StageCrewMember","package":"@serenity-js/core"},"implementationOf":{"type":"reference","target":2243,"name":"StageCrewMember.assignedTo"}}],"implementationOf":{"type":"reference","target":2242,"name":"StageCrewMember.assignedTo"}},{"id":2032,"name":"notifyOf","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/crew/artifact-archiver/ArtifactArchiver.ts","line":156,"character":4}],"signatures":[{"id":2033,"name":"notifyOf","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Handles ["},{"kind":"code","text":"`DomainEvent`"},{"kind":"text","text":"](/api/core-events/class/DomainEvent/) objects emitted by the ["},{"kind":"code","text":"`StageManager`"},{"kind":"text","text":"](/api/core/class/StageManager/)."}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/)"}]},{"tag":"@listens","content":[]},{"tag":"@emits","content":[]}]},"sources":[{"fileName":"packages/core/src/stage/crew/artifact-archiver/ArtifactArchiver.ts","line":156,"character":4}],"parameters":[{"id":2034,"name":"event","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":2630,"name":"DomainEvent","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"void"},"implementationOf":{"type":"reference","target":2246,"name":"StageCrewMember.notifyOf"}}],"implementationOf":{"type":"reference","target":2245,"name":"StageCrewMember.notifyOf"}}],"groups":[{"title":"Constructors","children":[2023]},{"title":"Methods","children":[2015,2018,2029,2032]}],"sources":[{"fileName":"packages/core/src/stage/crew/artifact-archiver/ArtifactArchiver.ts","line":102,"character":13}],"implementedTypes":[{"type":"reference","target":2241,"name":"StageCrewMember","package":"@serenity-js/core"}],"permalink":"/api/core/class/ArtifactArchiver","categories":[],"previousId":2257,"nextId":2057},{"id":2057,"name":"StreamReporter","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Serialises all the ["},{"kind":"code","text":"`DomainEvent`"},{"kind":"text","text":"](/api/core-events/class/DomainEvent/) objects it receives and streams\\nthem as [ndjson](http://ndjson.org/) to the output stream or file.\\n\\nUseful when debugging issues related to custom Serenity/JS test runner adapters.\\n\\n## Registering Stream Reporter programmatically\\n\\n"},{"kind":"code","text":"```ts\\nimport { configure, StreamReporter } from \'@serenity-js/core\'\\n\\nconfigure({\\n  crew: [\\n    new StreamReporter(process.stdout)\\n  ],\\n})\\n```"},{"kind":"text","text":"\\n\\n## Writing Domain Events to a file\\n\\n"},{"kind":"code","text":"```ts\\nimport { configure, StreamReporter } from \'@serenity-js/core\'\\nimport fs = require(\'fs\')\\n\\nconfigure({\\n  crew: [\\n    new StreamReporter(fs.createWriteStream(\'./events.ndjson\'))\\n  ],\\n})\\n```"},{"kind":"text","text":"\\n\\n## Using Stream Reporter with Playwright Test\\n\\n"},{"kind":"code","text":"```ts\\n// playwright.config.ts\\nimport type { PlaywrightTestConfig } from \'@serenity-js/playwright-test\'\\n\\nconst config: PlaywrightTestConfig = {\\n\\n  reporter: [\\n    [ \'@serenity-js/playwright-test\', {\\n      crew: [\\n        [ \'@serenity-js/core:StreamReporter\', { outputFile: \'./events.ndjson\' } ]\\n      ]\\n      // other Serenity/JS config\\n    }]\\n  ],\\n  // other Playwright Test config\\n}\\n```"},{"kind":"text","text":"\\n\\n## Using Stream Reporter with WebdriverIO\\n\\n"},{"kind":"code","text":"```ts\\n// wdio.conf.ts\\nimport { WebdriverIOConfig } from \'@serenity-js/webdriverio\'\\n\\nexport const config: WebdriverIOConfig = {\\n\\n  framework: \'@serenity-js/webdriverio\',\\n\\n  serenity: {\\n    crew: [\\n      \'@serenity-js/serenity-bdd\',\\n      [ \'@serenity-js/core:StreamReporter\', { outputFile: \'./events.ndjson\' }]\\n    ]\\n    // other Serenity/JS config\\n  },\\n  // other WebdriverIO config\\n}\\n```"},{"kind":"text","text":"\\n\\n## Using Stream Reporter with Protractor\\n\\n"},{"kind":"code","text":"```js\\n// protractor.conf.js\\nexports.config = {\\n  framework:     \'custom\',\\n  frameworkPath: require.resolve(\'@serenity-js/protractor/adapter\'),\\n\\n  serenity: {\\n    crew: [\\n      [ \'@serenity-js/core:StreamReporter\', { outputFile: \'./events.ndjson\' }]\\n    ],\\n    // other Serenity/JS config\\n  },\\n  // other Protractor config\\n}\\n```"}]},"children":[{"id":2058,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/crew/stream-reporter/StreamReporter.ts","line":109,"character":11}],"signatures":[{"id":2059,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a "},{"kind":"code","text":"`StreamReporter`"},{"kind":"text","text":" outputting a stream of [Serenity/JS domain events](/api/core-events/class/DomainEvent/)\\nto an "},{"kind":"code","text":"`outputFile`"},{"kind":"text","text":" at the given location."}]},"sources":[{"fileName":"packages/core/src/stage/crew/stream-reporter/StreamReporter.ts","line":109,"character":11}],"parameters":[{"id":2060,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":2061,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":2062,"name":"outputFile","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/crew/stream-reporter/StreamReporter.ts","line":109,"character":30}],"type":{"type":"intrinsic","name":"string"}},{"id":2063,"name":"cwd","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/core/src/stage/crew/stream-reporter/StreamReporter.ts","line":109,"character":50}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[2062,2063]}],"sources":[{"fileName":"packages/core/src/stage/crew/stream-reporter/StreamReporter.ts","line":109,"character":28}]}}}],"type":{"type":"reference","target":2241,"name":"StageCrewMember","package":"@serenity-js/core"}}]},{"id":2064,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/crew/stream-reporter/StreamReporter.ts","line":125,"character":4}],"signatures":[{"id":2065,"name":"new StreamReporter","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/crew/stream-reporter/StreamReporter.ts","line":125,"character":4}],"parameters":[{"id":2066,"name":"output","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A Writable stream that should receive the output"}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/stream.d.ts","qualifiedName":"Stream.Writable"},"name":"Writable","package":"@types/node","qualifiedName":"Stream.Writable"},"defaultValue":"process.stdout"},{"id":2067,"name":"stage","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The stage this ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/) should be assigned to"}]},"type":{"type":"reference","target":2158,"name":"Stage","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2057,"name":"StreamReporter","package":"@serenity-js/core"}}]},{"id":2070,"name":"assignedTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/crew/stream-reporter/StreamReporter.ts","line":140,"character":4}],"signatures":[{"id":2071,"name":"assignedTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates a new instance of this ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/) and assigns it to a given ["},{"kind":"code","text":"`Stage`"},{"kind":"text","text":"](/api/core/class/Stage/)."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A new instance of this ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/)"}]}]},"sources":[{"fileName":"packages/core/src/stage/crew/stream-reporter/StreamReporter.ts","line":140,"character":4}],"parameters":[{"id":2072,"name":"stage","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An instance of a ["},{"kind":"code","text":"`Stage`"},{"kind":"text","text":"](/api/core/class/Stage/) this ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/) will be assigned to"}]},"type":{"type":"reference","target":2158,"name":"Stage","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2241,"name":"StageCrewMember","package":"@serenity-js/core"},"implementationOf":{"type":"reference","target":2243,"name":"StageCrewMember.assignedTo"}}],"implementationOf":{"type":"reference","target":2242,"name":"StageCrewMember.assignedTo"}},{"id":2073,"name":"notifyOf","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/crew/stream-reporter/StreamReporter.ts","line":151,"character":4}],"signatures":[{"id":2074,"name":"notifyOf","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Handles ["},{"kind":"code","text":"`DomainEvent`"},{"kind":"text","text":"](/api/core-events/class/DomainEvent/) objects emitted by the ["},{"kind":"code","text":"`StageManager`"},{"kind":"text","text":"](/api/core/class/StageManager/)."}],"blockTags":[{"tag":"@listens","content":[]}]},"sources":[{"fileName":"packages/core/src/stage/crew/stream-reporter/StreamReporter.ts","line":151,"character":4}],"parameters":[{"id":2075,"name":"event","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":2630,"name":"DomainEvent","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"void"},"implementationOf":{"type":"reference","target":2246,"name":"StageCrewMember.notifyOf"}}],"implementationOf":{"type":"reference","target":2245,"name":"StageCrewMember.notifyOf"}}],"groups":[{"title":"Constructors","children":[2064]},{"title":"Methods","children":[2058,2070,2073]}],"sources":[{"fileName":"packages/core/src/stage/crew/stream-reporter/StreamReporter.ts","line":101,"character":13}],"implementedTypes":[{"type":"reference","target":2241,"name":"StageCrewMember","package":"@serenity-js/core"}],"permalink":"/api/core/class/StreamReporter","categories":[],"previousId":2014,"nextId":2080},{"id":2080,"name":"DomainEventQueue","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2081,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":12,"character":4}],"signatures":[{"id":2082,"name":"new DomainEventQueue","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":12,"character":4}],"parameters":[{"id":2083,"name":"items","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"intersection","types":[{"type":"reference","target":2630,"name":"DomainEvent","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":2084,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":2085,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":12,"character":48}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[2085]}],"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":12,"character":46}]}}]}}}],"type":{"type":"reference","target":2080,"name":"DomainEventQueue","package":"@serenity-js/core"}}]},{"id":2089,"name":"sceneId","variant":"declaration","kind":262144,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":16,"character":8}],"getSignature":{"id":2090,"name":"sceneId","variant":"signature","kind":524288,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":16,"character":8}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}},{"id":2091,"name":"first","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":22,"character":4}],"signatures":[{"id":2092,"name":"first","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":22,"character":4}],"type":{"type":"intersection","types":[{"type":"reference","target":2630,"name":"DomainEvent","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":2093,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":2094,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":22,"character":29}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[2094]}],"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":22,"character":27}]}}]}}]},{"id":2095,"name":"enqueue","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":26,"character":4}],"signatures":[{"id":2096,"name":"enqueue","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":26,"character":4}],"parameters":[{"id":2097,"name":"event","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":2630,"name":"DomainEvent","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":2098,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":2099,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":26,"character":35}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[2099]}],"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":26,"character":33}]}}]}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":2100,"name":"drain","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":30,"character":4}],"signatures":[{"id":2101,"name":"drain","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":30,"character":4}],"type":{"type":"array","elementType":{"type":"intersection","types":[{"type":"reference","target":2630,"name":"DomainEvent","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":2102,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":2103,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":30,"character":35}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[2103]}],"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":30,"character":33}]}}]}}}]},{"id":2104,"name":"reduce","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":34,"character":4}],"signatures":[{"id":2105,"name":"reduce","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":34,"character":4}],"typeParameter":[{"id":2106,"name":"U","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":2107,"name":"fn","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":2108,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":34,"character":18}],"signatures":[{"id":2109,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":34,"character":18}],"parameters":[{"id":2110,"name":"previousValue","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":2106,"name":"U","package":"@serenity-js/core","refersToTypeParameter":true}},{"id":2111,"name":"currentValue","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":2630,"name":"DomainEvent","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":2112,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":2113,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":34,"character":67}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[2113]}],"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":34,"character":65}]}}]}},{"id":2114,"name":"currentIndex","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":2106,"name":"U","package":"@serenity-js/core","refersToTypeParameter":true}}]}}},{"id":2115,"name":"initialValue","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":2106,"name":"U","package":"@serenity-js/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":2106,"name":"U","package":"@serenity-js/core","refersToTypeParameter":true}}]}],"groups":[{"title":"Constructors","children":[2081]},{"title":"Accessors","children":[2089]},{"title":"Methods","children":[2091,2095,2100,2104]}],"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":9,"character":13}],"permalink":"/api/core/class/DomainEventQueue","categories":[],"previousId":2057,"nextId":2116},{"id":2116,"name":"DomainEventQueues","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2117,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":2118,"name":"new DomainEventQueues","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":2116,"name":"DomainEventQueues","package":"@serenity-js/core"}}]},{"id":2126,"name":"enqueue","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueues.ts","line":18,"character":4}],"signatures":[{"id":2127,"name":"enqueue","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueues.ts","line":18,"character":4}],"parameters":[{"id":2128,"name":"event","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":2630,"name":"DomainEvent","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":2129,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":2130,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueues.ts","line":18,"character":35}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[2130]}],"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueues.ts","line":18,"character":33}]}}]}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":2131,"name":"forEach","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueues.ts","line":29,"character":4}],"signatures":[{"id":2132,"name":"forEach","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueues.ts","line":29,"character":4}],"parameters":[{"id":2133,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":2134,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueues.ts","line":29,"character":22}],"signatures":[{"id":2135,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueues.ts","line":29,"character":22}],"parameters":[{"id":2136,"name":"queue","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":2080,"name":"DomainEventQueue","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":2137,"name":"drainQueueFor","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueues.ts","line":33,"character":4}],"signatures":[{"id":2138,"name":"drainQueueFor","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueues.ts","line":33,"character":4}],"parameters":[{"id":2139,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}],"type":{"type":"array","elementType":{"type":"intersection","types":[{"type":"reference","target":2630,"name":"DomainEvent","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":2140,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":2141,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueues.ts","line":33,"character":65}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[2141]}],"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueues.ts","line":33,"character":63}]}}]}}}]}],"groups":[{"title":"Constructors","children":[2117]},{"title":"Methods","children":[2126,2131,2137]}],"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueues.ts","line":11,"character":13}],"permalink":"/api/core/class/DomainEventQueues","categories":[],"previousId":2080,"nextId":1946}],"groups":[{"title":"Abilities","children":[529,542,571,574,579,614]},{"title":"Activities","children":[715,770,775,1080]},{"title":"Actors","children":[502,505,1637,566,618,623,710,1067]},{"title":"Errors","children":[144,166,94,138,472,175,189,199,211,237,263,289,315,341,367,394,420,446]},{"title":"Expectations","children":[1150,1156,1225,1252,1270,1288]},{"title":"Notes","children":[844,851,896,929,926]},{"title":"Questions","children":[75,71,67,706,708,954,1047,1059,1064,1635,1949,1072,1131,1148,1306,1426,1551,1555,1561,1569,1620,1604,1616]},{"title":"Screenplay Pattern","children":[628,655,811,957,1640,508]},{"title":"Serenity","children":[1951,84,85,507,496,499]},{"title":"Stage","children":[2002,2076,2158,2241,2248,2253,2257,2014,2057,2080,2116]},{"title":"Time","children":[1946,1670,1697,1721,1765,1788,1795,1852,1869,1894]}],"sources":[{"fileName":"packages/core/src/index.ts","line":1,"character":0}],"permalink":"/api/core"},"urlSlug":"core"}],"packageName":"@serenity-js/core","packageVersion":"3.32.1"},{"entryPoints":[{"index":false,"label":"Test runner adapter","reflection":{"id":57,"name":"@serenity-js/cucumber/adapter","variant":"declaration","kind":2,"flags":{"isExternal":true},"children":[{"id":24578,"name":"CucumberCLIAdapter","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Allows for programmatic execution of Cucumber test scenarios.\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`TestRunnerAdapter`"},{"kind":"text","text":"](/api/core-adapter/interface/TestRunnerAdapter/)"}]},"children":[{"id":24579,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberCLIAdapter.ts","line":26,"character":4}],"signatures":[{"id":24580,"name":"new CucumberCLIAdapter","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberCLIAdapter.ts","line":26,"character":4}],"parameters":[{"id":24581,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":24643,"name":"CucumberConfig","package":"@serenity-js/cucumber"}},{"id":24582,"name":"loader","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"ModuleLoader","package":"@serenity-js/core"}},{"id":24583,"name":"fileSystem","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"FileSystem","package":"@serenity-js/core"}},{"id":24584,"name":"output","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":24678,"name":"SerenityFormatterOutput","package":"@serenity-js/cucumber"}}],"type":{"type":"reference","target":24578,"name":"CucumberCLIAdapter","package":"@serenity-js/cucumber"}}]},{"id":24589,"name":"successThreshold","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberCLIAdapter.ts","line":38,"character":4}],"signatures":[{"id":24590,"name":"successThreshold","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Scenario success threshold for this test runner, calculated based on ["},{"kind":"code","text":"`CucumberConfig`"},{"kind":"text","text":"](/api/cucumber-adapter/interface/CucumberConfig/)"}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberCLIAdapter.ts","line":38,"character":4}],"type":{"type":"union","types":[{"type":"reference","name":"Outcome","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":24591,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":24592,"name":"Code","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberCLIAdapter.ts","line":38,"character":36}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[24592]}],"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberCLIAdapter.ts","line":38,"character":34}]}}]},"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.successThreshold"}}],"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.successThreshold"}},{"id":24593,"name":"load","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberCLIAdapter.ts","line":50,"character":10}],"signatures":[{"id":24594,"name":"load","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Loads feature files."}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberCLIAdapter.ts","line":50,"character":10}],"parameters":[{"id":24595,"name":"pathsToScenarios","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Absolute or relative paths to feature files"}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.load"}}],"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.load"}},{"id":24596,"name":"scenarioCount","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberCLIAdapter.ts","line":68,"character":4}],"signatures":[{"id":24597,"name":"scenarioCount","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the number of loaded scenarios"}],"blockTags":[{"tag":"@throws","content":[{"kind":"text","text":"["},{"kind":"code","text":"`LogicError`"},{"kind":"text","text":"](/api/core/class/LogicError/)\\n If called before "},{"kind":"code","text":"`load`"}]}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberCLIAdapter.ts","line":68,"character":4}],"type":{"type":"intrinsic","name":"number"},"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.scenarioCount"}}],"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.scenarioCount"}},{"id":24598,"name":"run","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberCLIAdapter.ts","line":83,"character":10}],"signatures":[{"id":24599,"name":"run","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs Cucumber to execute feature files located at "},{"kind":"code","text":"`pathsToScenarios`"}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberCLIAdapter.ts","line":83,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.run"}}],"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.run"}}],"groups":[{"title":"Constructors","children":[24579]},{"title":"Methods","children":[24589,24593,24596,24598]}],"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberCLIAdapter.ts","line":20,"character":13}],"implementedTypes":[{"type":"reference","target":2290,"name":"TestRunnerAdapter","package":"@serenity-js/core"}],"permalink":"/api/cucumber-adapter/class/CucumberCLIAdapter","categories":[],"previousId":24643,"nextId":24663},{"id":24643,"name":"CucumberConfig","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configuration options to be passed to [Cucumber CLI](https://github.com/cucumber/cucumber-js/blob/master/docs/cli.md).\\nYou can specify the options using either camelCase (i.e. "},{"kind":"code","text":"`retryTagFilter`"},{"kind":"text","text":") or kebab-case (i.e. "},{"kind":"code","text":"`retry-tag-filter`"},{"kind":"text","text":")\\nas Serenity/JS will convert them to an appropriate format for you."}]},"children":[{"id":24644,"name":"paths","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Paths to where your feature files are. Note that you don\'t need to specify the paths when\\nusing Serenity/JS with WebdriverIO or Protractor, as their respective adapters will do it for you.\\n\\n#### Learn more\\n- [Cucumber docs: configuration](https://github.com/cucumber/cucumber-js/blob/main/docs/configuration.md)"}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":17,"character":4}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":24645,"name":"dryRun","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Prepare a test run but don\'t run it\\n\\n#### Learn more\\n- [Cucumber docs: configuration](https://github.com/cucumber/cucumber-js/blob/main/docs/configuration.md)\\n- [Cucumber docs: dry run mode](https://github.com/cucumber/cucumber-js/blob/main/docs/dry_run.md)"}],"blockTags":[{"tag":"@version","content":[{"kind":"text","text":"8.x"}]}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":28,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":24646,"name":"failFast","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Stop running tests when a test fails\\n\\n#### Learn more\\n- [Cucumber docs: configuration](https://github.com/cucumber/cucumber-js/blob/main/docs/configuration.md)\\n- [Cucumber docs: fail fast](https://github.com/cucumber/cucumber-js/blob/main/docs/fail_fast.md)"}],"blockTags":[{"tag":"@version","content":[{"kind":"text","text":"8.x"}]}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":39,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":24647,"name":"colors","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Enable/disable colors in output. Cucumber 1.x only!\\nFor Cucumber 2.x and above use "},{"kind":"code","text":"`formatOptions: { colorsEnabled: false }`"},{"kind":"text","text":"\\n\\n**Note** For Cucumber 2.x and above use the ["},{"kind":"code","text":"`CucumberConfig.formatOptions`"},{"kind":"text","text":"](/api/cucumber-adapter/interface/CucumberConfig/#formatOptions) instead.\\n\\n#### Disable colors in output in Cucumber 1.x\\n\\n"},{"kind":"code","text":"```ts\\ncolors: false\\n```"},{"kind":"text","text":"\\n\\n#### Disable colors in output in Cucumber 2.x and above\\n\\n "},{"kind":"code","text":"```ts\\n formatOptions: { colorsEnabled: false }\\n ```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- [Cucumber 1.x CLI options](https://github.com/cucumber/cucumber-js/blob/1.x/lib/cucumber/cli.js#L38)"}],"blockTags":[{"tag":"@version","content":[{"kind":"text","text":"1.x"}]}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":64,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":24648,"name":"compiler","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Step definitions and support files can be written in languages that transpile to JavaScript.\\nTo do set the "},{"kind":"code","text":"`compiler`"},{"kind":"text","text":" option to "},{"kind":"code","text":"`<file_extension>:<module_name>`"},{"kind":"text","text":"\\n\\n**NoteL** For Cucumber 4.x and above use the ["},{"kind":"code","text":"`CucumberConfig.require`"},{"kind":"text","text":"](/api/cucumber-adapter/interface/CucumberConfig/#require) option instead.\\n\\n#### Enable TypeScript support in Cucumber 1.x - 3.x\\n"},{"kind":"code","text":"```ts\\ncompiler: \'ts:ts-node/register\'\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- [Cucumber 3.x documentation](https://github.com/cucumber/cucumber-js/blob/3.x/docs/cli.md#transpilers)"}],"blockTags":[{"tag":"@version","content":[{"kind":"text","text":"1.x - 3.x"}]}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":82,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":24649,"name":"format","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Specify additional output formats, optionally supply PATH to redirect formatter output\\n\\n#### Learn more\\n- [Cucumber output formats](https://github.com/cucumber/cucumber-js/blob/master/docs/cli.md#formats)"}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":90,"character":4}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"array","elementType":{"type":"intrinsic","name":"string"}}]}},{"id":24650,"name":"formatOptions","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Provide options for formatters\\n\\n#### Cucumber 1.x\\n"},{"kind":"code","text":"```ts\\nformatOptions: JSON.stringify({ option: \'value\' })\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- [Cucumber format options](https://github.com/cucumber/cucumber-js/blob/master/docs/cli.md#format-options)"}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":103,"character":4}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"object"}]}},{"id":24651,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Only execute the scenarios with name matching the expression.\\n\\n#### Learn more\\n- [Cucumber docs: running specific features](https://github.com/cucumber/cucumber-js/blob/master/docs/cli.md#running-specific-features)"}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":111,"character":4}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":24652,"name":"profile","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"In order to store and reuse commonly used CLI options,\\nyou can add a "},{"kind":"code","text":"`cucumber.js`"},{"kind":"text","text":" file to your project root directory.\\nThe file should export an object where the key is the profile name\\nand the value is a string of CLI options.\\n\\nThe profile can be applied with "},{"kind":"code","text":"`-p <NAME>`"},{"kind":"text","text":" or "},{"kind":"code","text":"`--profile <NAME>`"},{"kind":"text","text":".\\nThis will prepend the profile\'s CLI options to the ones provided by the command line.\\nMultiple profiles can be specified at a time.\\n\\nIf no profile is specified and a profile named default exists,\\nit will be applied.\\n\\n#### Learn more\\n- [Cucumber profiles](https://github.com/cucumber/cucumber-js/blob/master/docs/cli.md#profiles)"}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":129,"character":4}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":24653,"name":"retry","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The number of times to retry a failing scenario before marking it as failed.\\n\\n#### Cucumber 7.x\\n\\n"},{"kind":"code","text":"```ts\\nretry: 3\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- [Cucumber docs: retry failing tests](https://github.com/cucumber/cucumber-js/blob/master/docs/cli.md#retry-failing-tests)"}],"blockTags":[{"tag":"@version","content":[{"kind":"text","text":"7.x"}]}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":145,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":24654,"name":"rerun","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Relative path to an output file produced by Cucumber.js ["},{"kind":"code","text":"`rerun`"},{"kind":"text","text":" formatter](https://github.com/cucumber/cucumber-js/blob/master/features/rerun_formatter.feature).\\n\\n**Note:** that the name of the output file *must* start with an "},{"kind":"code","text":"`@`"},{"kind":"text","text":" symbol.\\n\\n#### Saving details of failed scenarios to "},{"kind":"code","text":"`@rerun-output.txt`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nformat: [ \'rerun:@rerun-output.txt\' ]\\n```"},{"kind":"text","text":"\\n\\n#### Re-running scenarios saved to "},{"kind":"code","text":"`@rerun-output.txt`"},{"kind":"text","text":"\\n"},{"kind":"code","text":"```ts\\nrerun: \'@rerun-output.txt\'\\n```"}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":163,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":24655,"name":"retryTagFilter","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Only retry tests matching the given [tag expression](https://github.com/cucumber/cucumber/tree/master/tag-expressions).\\n\\n#### Cucumber 7.x\\n"},{"kind":"code","text":"```ts\\nretry: 3,\\nretryTagFilter: \'@flaky\',\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- [Cucumber docs: retry failing tests](https://github.com/cucumber/cucumber-js/blob/master/docs/cli.md#retry-failing-tests)"}],"blockTags":[{"tag":"@version","content":[{"kind":"text","text":"7.x"}]}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":179,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":24656,"name":"require","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Require files or node modules before executing features\\n\\n#### Enable TypeScript support in Cucumber 4.x and above\\n"},{"kind":"code","text":"```ts\\nrequire: \'ts:ts-node/register\'\\n```"},{"kind":"text","text":"\\n#### Learn more\\n- [Cucumber docs: requiring support files](https://github.com/cucumber/cucumber-js/blob/master/docs/cli.md#requiring-support-files)"}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":191,"character":4}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":24657,"name":"import","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Paths to where your support code is.\\n\\n#### Learn more\\n- [Cucumber docs: configuration](https://github.com/cucumber/cucumber-js/blob/main/docs/configuration.md)"}],"blockTags":[{"tag":"@version","content":[{"kind":"text","text":"8.x"}]}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":201,"character":4}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":24658,"name":"requireModule","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Names of transpilation modules to load, loaded via require()\\n\\n#### Learn more\\n- [Cucumber docs: transpiling](https://github.com/cucumber/cucumber-js/blob/main/docs/transpiling.md)"}],"blockTags":[{"tag":"@version","content":[{"kind":"text","text":"8.x"}]}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":211,"character":4}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":24659,"name":"language","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Default language for your feature files\\n\\n#### Learn more\\n- [Cucumber docs: configuration](https://github.com/cucumber/cucumber-js/blob/main/docs/configuration.md)"}],"blockTags":[{"tag":"@version","content":[{"kind":"text","text":"8.x"}]}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":221,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":24660,"name":"tags","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Only run scenarios that match the given tags.\\n\\n**Note**: Cucumber 1.x requires the "},{"kind":"code","text":"`tags`"},{"kind":"text","text":" option to be an array of Cucumber tags,\\nwhile Cucumber 2.x and above uses a "},{"kind":"code","text":"`string`"},{"kind":"text","text":"\\nwith a [tag expression](https://github.com/cucumber/cucumber/tree/master/tag-expressions).\\n\\n#### Cucumber 1.x\\n"},{"kind":"code","text":"```ts\\n// Run all scenarios tagged with `@smoketest`, but not with `@wip`:\\ntag: [ \'@smoketest\', \'~@wip\' ]\\n```"},{"kind":"text","text":"\\n\\n#### Cucumber >= 2.x\\n"},{"kind":"code","text":"```ts\\n// Run all scenarios tagged with `@smoketest`, but not with `@wip`:\\ntag: \'@smoketest and not @wip\'\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n\\n- [Cucumber 1.x docs: tags](https://github.com/cucumber/cucumber-js/blob/1.x/docs/cli.md#tags)\\n- [Cucumber 2.x docs: tags](https://github.com/cucumber/cucumber-js/blob/2.x/docs/cli.md#tags)\\n- [Cucumber docs: tag expressions](https://github.com/cucumber/cucumber/tree/master/tag-expressions)"}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":248,"character":4}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"array","elementType":{"type":"intrinsic","name":"string"}}]}},{"id":24661,"name":"strict","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Fail if there are any undefined or pending steps"}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":253,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":24662,"name":"worldParameters","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Provide parameters that will be passed to the world constructor\\n\\n#### Specifying "},{"kind":"code","text":"`worldParameters`"},{"kind":"text","text":" as "},{"kind":"code","text":"`string`"},{"kind":"text","text":"\\n"},{"kind":"code","text":"```ts\\nworldParameters: JSON.stringify({ isDev: process.env.NODE_ENV !== \'production\' })\\n```"},{"kind":"text","text":"\\n\\n#### Specifying "},{"kind":"code","text":"`worldParameters`"},{"kind":"text","text":" as "},{"kind":"code","text":"`object`"},{"kind":"text","text":"\\n"},{"kind":"code","text":"```ts\\nworldParameters: { isDev: process.env.NODE_ENV !== \'production\' }\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n\\n- [Cucumber docs: world parameters](https://github.com/cucumber/cucumber-js/blob/master/docs/cli.md#world-parameters)"}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":272,"character":4}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"object"}]}}],"groups":[{"title":"Properties","children":[24644,24645,24646,24647,24648,24649,24650,24651,24652,24653,24654,24655,24656,24657,24658,24659,24660,24661,24662]}],"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":8,"character":17}],"permalink":"/api/cucumber-adapter/interface/CucumberConfig","categories":[],"nextId":24578},{"id":24663,"name":"CucumberFormat","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Represents a Cucumber.js formatter\\n\\n## Learn more\\n\\n- [Cucumber formatters](https://github.com/cucumber/cucumber-js/blob/master/docs/cli.md#built-in-formatters)"}]},"children":[{"id":24670,"name":"formatter","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberFormat.ts","line":13,"character":20}],"type":{"type":"intrinsic","name":"string"}},{"id":24671,"name":"output","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberFormat.ts","line":14,"character":20}],"type":{"type":"intrinsic","name":"string"}},{"id":24667,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberFormat.ts","line":20,"character":4}],"signatures":[{"id":24668,"name":"new CucumberFormat","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberFormat.ts","line":20,"character":4}],"parameters":[{"id":24669,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Cucumber format expression, like "},{"kind":"code","text":"`pretty`"},{"kind":"text","text":" or "},{"kind":"code","text":"`json:out.json`"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":24663,"name":"CucumberFormat","package":"@serenity-js/cucumber"}}]},{"id":24672,"name":"value","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Cucumber format expression, like "},{"kind":"code","text":"`pretty`"},{"kind":"text","text":" or "},{"kind":"code","text":"`json:out.json`"}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberFormat.ts","line":20,"character":32}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Constructors","children":[24667]},{"title":"Properties","children":[24670,24671,24672]}],"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberFormat.ts","line":12,"character":13}],"permalink":"/api/cucumber-adapter/class/CucumberFormat","categories":[],"previousId":24578,"nextId":24673},{"id":24673,"name":"OutputDescriptor","variant":"declaration","kind":256,"flags":{"isExternal":true},"children":[{"id":24674,"name":"value","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/cucumber/src/adapter/output/OutputDescriptor.ts","line":5,"character":4}],"signatures":[{"id":24675,"name":"value","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/cucumber/src/adapter/output/OutputDescriptor.ts","line":5,"character":4}],"type":{"type":"intrinsic","name":"string"}}]},{"id":24676,"name":"cleanUp","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/cucumber/src/adapter/output/OutputDescriptor.ts","line":6,"character":4}],"signatures":[{"id":24677,"name":"cleanUp","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/cucumber/src/adapter/output/OutputDescriptor.ts","line":6,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]}],"groups":[{"title":"Methods","children":[24674,24676]}],"sources":[{"fileName":"packages/cucumber/src/adapter/output/OutputDescriptor.ts","line":4,"character":17}],"permalink":"/api/cucumber-adapter/interface/OutputDescriptor","categories":[],"previousId":24663,"nextId":24678},{"id":24678,"name":"SerenityFormatterOutput","variant":"declaration","kind":256,"flags":{"isExternal":true},"children":[{"id":24679,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/cucumber/src/adapter/output/SerenityFormatterOutput.ts","line":7,"character":4}],"signatures":[{"id":24680,"name":"get","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/cucumber/src/adapter/output/SerenityFormatterOutput.ts","line":7,"character":4}],"type":{"type":"reference","target":24673,"name":"OutputDescriptor","package":"@serenity-js/cucumber"}}]}],"groups":[{"title":"Methods","children":[24679]}],"sources":[{"fileName":"packages/cucumber/src/adapter/output/SerenityFormatterOutput.ts","line":6,"character":17}],"implementedBy":[{"type":"reference","target":24681,"name":"StandardOutput"},{"type":"reference","target":24686,"name":"TempFileOutput"}],"permalink":"/api/cucumber-adapter/interface/SerenityFormatterOutput","categories":[],"previousId":24673,"nextId":24681},{"id":24681,"name":"StandardOutput","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":24682,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":24683,"name":"new StandardOutput","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":24681,"name":"StandardOutput","package":"@serenity-js/cucumber"}}]},{"id":24684,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/cucumber/src/adapter/output/StandardOutput.ts","line":9,"character":4}],"signatures":[{"id":24685,"name":"get","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/cucumber/src/adapter/output/StandardOutput.ts","line":9,"character":4}],"type":{"type":"reference","target":24673,"name":"OutputDescriptor","package":"@serenity-js/cucumber"},"implementationOf":{"type":"reference","target":24680,"name":"SerenityFormatterOutput.get"}}],"implementationOf":{"type":"reference","target":24679,"name":"SerenityFormatterOutput.get"}}],"groups":[{"title":"Constructors","children":[24682]},{"title":"Methods","children":[24684]}],"sources":[{"fileName":"packages/cucumber/src/adapter/output/StandardOutput.ts","line":8,"character":13}],"implementedTypes":[{"type":"reference","target":24678,"name":"SerenityFormatterOutput","package":"@serenity-js/cucumber"}],"permalink":"/api/cucumber-adapter/class/StandardOutput","categories":[],"previousId":24678,"nextId":24686},{"id":24686,"name":"TempFileOutput","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":24687,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/cucumber/src/adapter/output/TempFileOutput.ts","line":12,"character":4}],"signatures":[{"id":24688,"name":"new TempFileOutput","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/cucumber/src/adapter/output/TempFileOutput.ts","line":12,"character":4}],"parameters":[{"id":24689,"name":"fs","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"FileSystem","package":"@serenity-js/core"}}],"type":{"type":"reference","target":24686,"name":"TempFileOutput","package":"@serenity-js/cucumber"}}]},{"id":24691,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/cucumber/src/adapter/output/TempFileOutput.ts","line":15,"character":4}],"signatures":[{"id":24692,"name":"get","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/cucumber/src/adapter/output/TempFileOutput.ts","line":15,"character":4}],"type":{"type":"reference","target":24673,"name":"OutputDescriptor","package":"@serenity-js/cucumber"},"implementationOf":{"type":"reference","target":24680,"name":"SerenityFormatterOutput.get"}}],"implementationOf":{"type":"reference","target":24679,"name":"SerenityFormatterOutput.get"}}],"groups":[{"title":"Constructors","children":[24687]},{"title":"Methods","children":[24691]}],"sources":[{"fileName":"packages/cucumber/src/adapter/output/TempFileOutput.ts","line":11,"character":13}],"implementedTypes":[{"type":"reference","target":24678,"name":"SerenityFormatterOutput","package":"@serenity-js/cucumber"}],"permalink":"/api/cucumber-adapter/class/TempFileOutput","categories":[],"previousId":24681}],"groups":[{"title":"Configuration","children":[24643]},{"title":"Integration","children":[24578,24663,24673,24678,24681,24686]}],"sources":[{"fileName":"packages/cucumber/src/adapter/index.ts","line":1,"character":0}],"permalink":"/api/cucumber-adapter"},"urlSlug":"cucumber-adapter"},{"index":true,"label":"index","reflection":{"id":55,"name":"@serenity-js/cucumber","variant":"declaration","kind":2,"flags":{"isExternal":true},"children":[{"id":56,"name":"export=","variant":"declaration","kind":32,"flags":{"isExternal":true,"isConst":true},"comment":{"summary":[{"kind":"text","text":"Registers a Cucumber reporter that emits [Serenity/JS domain events](/api/core-events/class/DomainEvent/)\\nand informs Serenity/JS when test scenarios and Cucumber steps start, finish, and with what result."}]},"sources":[{"fileName":"packages/cucumber/src/index.ts","line":16,"character":6}],"type":{"type":"intrinsic","name":"unknown"},"defaultValue":"...","permalink":"/api/cucumber#export=","categories":[]}],"groups":[{"title":"Variables","children":[56]}],"sources":[{"fileName":"packages/cucumber/src/index.ts","line":1,"character":0}],"permalink":"/api/cucumber"},"urlSlug":"cucumber"}],"packageName":"@serenity-js/cucumber","packageVersion":"3.32.1"},{"entryPoints":[{"index":false,"label":"Test runner adapter","reflection":{"id":59,"name":"@serenity-js/jasmine/adapter","variant":"declaration","kind":2,"flags":{"isExternal":true},"children":[{"id":24697,"name":"JasmineAdapter","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Allows for programmatic execution of Jasmine test scenarios,\\nusing ["},{"kind":"code","text":"`SerenityReporterForJasmine`"},{"kind":"text","text":"](/api/jasmine/function/default/) to report progress.\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`TestRunnerAdapter`"},{"kind":"text","text":"](/api/core-adapter/interface/TestRunnerAdapter/)"}]},"children":[{"id":24703,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineAdapter.ts","line":45,"character":4}],"signatures":[{"id":24704,"name":"new JasmineAdapter","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineAdapter.ts","line":45,"character":4}],"parameters":[{"id":24705,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":24732,"name":"JasmineConfig","package":"@serenity-js/jasmine"}},{"id":24706,"name":"loader","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"ModuleLoader","package":"@serenity-js/core"}}],"type":{"type":"reference","target":24697,"name":"JasmineAdapter","package":"@serenity-js/jasmine"}}]},{"id":24711,"name":"successThreshold","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineAdapter.ts","line":54,"character":4}],"signatures":[{"id":24712,"name":"successThreshold","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Scenario success threshold for this test runner."}]},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineAdapter.ts","line":54,"character":4}],"type":{"type":"union","types":[{"type":"reference","name":"Outcome","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":24713,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":24714,"name":"Code","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineAdapter.ts","line":54,"character":36}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[24714]}],"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineAdapter.ts","line":54,"character":34}]}}]},"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.successThreshold"}}],"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.successThreshold"}},{"id":24715,"name":"load","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineAdapter.ts","line":63,"character":10}],"signatures":[{"id":24716,"name":"load","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Loads test scenarios."}]},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineAdapter.ts","line":63,"character":10}],"parameters":[{"id":24717,"name":"pathsToScenarios","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.load"}}],"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.load"}},{"id":24725,"name":"scenarioCount","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineAdapter.ts","line":133,"character":4}],"signatures":[{"id":24726,"name":"scenarioCount","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the number of loaded scenarios"}]},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineAdapter.ts","line":133,"character":4}],"type":{"type":"intrinsic","name":"number"},"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.scenarioCount"}}],"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.scenarioCount"}},{"id":24730,"name":"run","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineAdapter.ts","line":151,"character":10}],"signatures":[{"id":24731,"name":"run","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Runs loaded test scenarios."}]},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineAdapter.ts","line":151,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.run"}}],"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.run"}}],"groups":[{"title":"Constructors","children":[24703]},{"title":"Methods","children":[24711,24715,24725,24730]}],"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineAdapter.ts","line":21,"character":13}],"implementedTypes":[{"type":"reference","target":2290,"name":"TestRunnerAdapter","package":"@serenity-js/core"}],"permalink":"/api/jasmine-adapter/class/JasmineAdapter","categories":[],"previousId":24732},{"id":24732,"name":"JasmineConfig","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configuration object that will be passed to the JasmineRunner.\\n\\n## Learn more\\n- [Jasmine configuration](https://jasmine.github.io/setup/nodejs.html)"}]},"children":[{"id":24733,"name":"specDir","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Spec dir is used as a prefix for all spec files and helpers"}]},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineConfig.ts","line":16,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":24734,"name":"helpers","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A list of paths to helper files that should be loaded and executed before the "},{"kind":"code","text":"`requires`"},{"kind":"text","text":" and the "},{"kind":"code","text":"`specs`"},{"kind":"text","text":".\\nAccepts relative and absolute paths as well as glob expressions.\\n\\n#### Learn more\\n- [Jasmine tutorial](https://jasmine.github.io/tutorials/react_with_npm)"}]},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineConfig.ts","line":25,"character":4}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":24735,"name":"requires","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A list of paths to files that should be required after the "},{"kind":"code","text":"`helpers`"},{"kind":"text","text":", but before the "},{"kind":"code","text":"`specs`"},{"kind":"text","text":".\\nThe paths need to be compatible with Node "},{"kind":"code","text":"`require`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineConfig.ts","line":31,"character":4}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":24736,"name":"random","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether or not the tests should be executed in a pseudo-random order."}]},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineConfig.ts","line":36,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":24737,"name":"grep","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Used to exclude any test scenarios which name doesn\'t match the pattern from the run."}]},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineConfig.ts","line":41,"character":4}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"RegExp"},"name":"RegExp","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/RegExp"}]}},{"id":24738,"name":"invertGrep","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Inverts \'grep\' matches, defaults to "},{"kind":"code","text":"`false`"}]},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineConfig.ts","line":46,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":24739,"name":"specFilter","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Receives the full name of a test scenario and returns "},{"kind":"code","text":"`true`"},{"kind":"text","text":"\\nfor those that should be executed.\\n\\nTakes precedence over "},{"kind":"code","text":"`grep`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineConfig.ts","line":54,"character":4}],"type":{"type":"reflection","declaration":{"id":24740,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineConfig.ts","line":54,"character":17}],"signatures":[{"id":24741,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineConfig.ts","line":54,"character":17}],"parameters":[{"id":24742,"name":"specName","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"boolean"}}]}}},{"id":24743,"name":"seed","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The randomisation seed that will be used to determine the pseudo-random order of execution,\\nif "},{"kind":"code","text":"`random`"},{"kind":"text","text":" is set to "},{"kind":"code","text":"`true`"}]},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineConfig.ts","line":60,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":24744,"name":"defaultTimeoutInterval","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Sets the global "},{"kind":"code","text":"`jasmine.DEFAULT_TIMEOUT_INTERVAL`"},{"kind":"text","text":",\\nwhich defines the default number of milliseconds Jasmine will wait for an asynchronous spec to complete.\\n\\n#### Learn more\\n- [Jasmine default timeout interval](https://jasmine.github.io/api/edge/jasmine#.DEFAULT_TIMEOUT_INTERVAL)"}]},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineConfig.ts","line":69,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":24745,"name":"reporters","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A list of Jasmine reporters to be added to the test runner.\\n\\nUseful for situations like configuring ReportPortal, because you cannot use "},{"kind":"code","text":"`jasmine.addReporter()`"},{"kind":"text","text":" in the Protractor config.\\n\\n**Note:** reporters must be instantiated before adding them to the configuration.\\n\\n#### Using ReportPortal with Protractor and Jasmine\\n\\n"},{"kind":"code","text":"```js\\n// protractor.conf.js\\nconst AgentJasmine = require(\'@reportportal/agent-js-jasmine\')\\nconst agent = new AgentJasmine(require(\'./reportportalConf\'))\\n// ...\\njasmineNodeOpts: {\\n  // ...\\n  reporters: [ agent.getJasmineReporter() ],\\n}\\n\\nafterLaunch:() => {\\n  return agent.getExitPromise();\\n},\\n```"}]},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineConfig.ts","line":95,"character":4}],"type":{"type":"array","elementType":{"type":"reference","name":"JasmineReporter","package":"@serenity-js/jasmine"}}}],"groups":[{"title":"Properties","children":[24733,24734,24735,24736,24737,24738,24739,24743,24744,24745]}],"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineConfig.ts","line":11,"character":17}],"permalink":"/api/jasmine-adapter/interface/JasmineConfig","categories":[],"nextId":24697}],"groups":[{"title":"Configuration","children":[24732]},{"title":"Integration","children":[24697]}],"sources":[{"fileName":"packages/jasmine/src/adapter/index.ts","line":1,"character":0}],"permalink":"/api/jasmine-adapter"},"urlSlug":"jasmine-adapter"},{"index":true,"label":"index","reflection":{"id":58,"name":"@serenity-js/jasmine","variant":"declaration","kind":2,"flags":{"isExternal":true},"children":[{"id":24693,"name":"default","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/jasmine/src/bootstrap.ts","line":29,"character":16}],"signatures":[{"id":24694,"name":"default","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Monkey-patches Jasmine\'s Suite and Spec so that they provide more accurate information,\\nand returns a bootstrapped instance of the ["},{"kind":"code","text":"`SerenityReporterForJasmine`"},{"kind":"text","text":"](/api/jasmine/function/default/) to be registered with Jasmine.\\n\\n## Registering the reporter from the command line\\n\\n"},{"kind":"code","text":"```terminal\\njasmine --reporter=@serenity-js/jasmine\\n```"},{"kind":"text","text":"\\n\\n## Registering the reporter programmatically\\n\\n"},{"kind":"code","text":"```ts\\nimport serenityReporterForJasmine = require(\'@serenity-js/jasmine\');\\n\\njasmine.getEnv().addReporter(serenityReporterForJasmine);\\n```"}]},"sources":[{"fileName":"packages/jasmine/src/bootstrap.ts","line":29,"character":16}],"parameters":[{"id":24695,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"SerenityReporterForJasmineConfig","package":"@serenity-js/jasmine"},"defaultValue":"{}"},{"id":24696,"name":"jasmine","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"the global.jasmine instance"}]},"type":{"type":"intrinsic","name":"any"},"defaultValue":"..."}],"type":{"type":"reference","name":"SerenityReporterForJasmine","package":"@serenity-js/jasmine"}}],"permalink":"/api/jasmine/function/default","categories":[]}],"groups":[{"title":"Functions","children":[24693]}],"sources":[{"fileName":"packages/jasmine/src/index.ts","line":1,"character":0}],"permalink":"/api/jasmine"},"urlSlug":"jasmine"}],"packageName":"@serenity-js/jasmine","packageVersion":"3.32.1"},{"entryPoints":[{"index":true,"label":"Index","reflection":{"id":46,"name":"@serenity-js/local-server","variant":"declaration","kind":2,"flags":{"isExternal":true},"children":[{"id":24376,"name":"ManageALocalServer","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/) that enables an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\nto manage a local [Node.js](https://nodejs.org/) server.\\n\\n## Managing a raw Node.js server\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, GetRequest, Send } from \'@serenity-js/rest\'\\nimport { ManageALocalServer, LocalTestServer, StartLocalTestServer, StopLocalTestServer } from \'@serenity-js/local-server\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nimport * as axios from \'axios\'\\nimport * as http from \'http\'\\n\\nconst server = http.createServer(function (request, response) {\\n  response.setHeader(\'Connection\', \'close\');\\n  response.end(\'Hello!\');\\n})\\n\\nawait actorCalled(\'Apisit\')\\n  .whoCan(\\n    ManageALocalServer.using(server),\\n    CallAnApi.using(axios.create()),\\n  )\\n  .attemptsTo(\\n    StartLocalTestServer.onRandomPort(),\\n    Send.a(GetRequest.to(LocalServer.url())),\\n    Ensure.that(LastResponse.status(), equals(200)),\\n    Ensure.that(LastResponse.body<string>(), equals(\'Hello!\')),\\n    StopLocalTestServer.ifRunning(),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- [Anatomy of an HTTP transaction](https://nodejs.org/en/docs/guides/anatomy-of-an-http-transaction/)\\n- [Node.js HTTP server](https://nodejs.org/api/http.html#http_class_http_server)"}]},"children":[{"id":24377,"name":"runningAHttpListener","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":57,"character":11}],"signatures":[{"id":24378,"name":"runningAHttpListener","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/) to manage a Node.js HTTP server using the provided "},{"kind":"code","text":"`requestListener`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":57,"character":11}],"parameters":[{"id":24379,"name":"listener","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":24413,"name":"RequestListener","package":"@serenity-js/local-server"},{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/net.d.ts","qualifiedName":"\\"net\\".Server"},"name":"Server","package":"@types/node","qualifiedName":"\\"net\\".Server"}]}}],"type":{"type":"reference","target":24376,"name":"ManageALocalServer","package":"@serenity-js/local-server"}}]},{"id":24380,"name":"runningAHttpsListener","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":74,"character":11}],"signatures":[{"id":24381,"name":"runningAHttpsListener","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/) to manage a Node.js HTTPS server using the provided server "},{"kind":"code","text":"`requestListener`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://nodejs.org/api/https.html#https_https_createserver_options_requestlistener"}]}]},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":74,"character":11}],"parameters":[{"id":24382,"name":"listener","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":24413,"name":"RequestListener","package":"@serenity-js/local-server"},{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/https.d.ts","qualifiedName":"\\"https\\".Server"},"typeArguments":[{"type":"query","queryType":{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/http.d.ts","qualifiedName":"\\"http\\".IncomingMessage"},"name":"IncomingMessage","package":"@types/node","qualifiedName":"\\"http\\".IncomingMessage","preferValues":true}},{"type":"query","queryType":{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/http.d.ts","qualifiedName":"\\"http\\".ServerResponse"},"name":"ServerResponse","package":"@types/node","qualifiedName":"\\"http\\".ServerResponse","preferValues":true}}],"name":"Server","package":"@types/node","qualifiedName":"\\"https\\".Server"}]}},{"id":24383,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Accepts an options object from "},{"kind":"code","text":"`tls.createServer()`"},{"kind":"text","text":", "},{"kind":"code","text":"`tls.createSecureContext()`"},{"kind":"text","text":" and "},{"kind":"code","text":"`http.createServer()`"},{"kind":"text","text":"."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/https.d.ts","qualifiedName":"\\"https\\".ServerOptions"},"typeArguments":[{"type":"query","queryType":{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/http.d.ts","qualifiedName":"\\"http\\".IncomingMessage"},"name":"IncomingMessage","package":"@types/node","qualifiedName":"\\"http\\".IncomingMessage","preferValues":true}},{"type":"query","queryType":{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/http.d.ts","qualifiedName":"\\"http\\".ServerResponse"},"name":"ServerResponse","package":"@types/node","qualifiedName":"\\"http\\".ServerResponse","preferValues":true}}],"name":"ServerOptions","package":"@types/node","qualifiedName":"\\"https\\".ServerOptions"},"defaultValue":"{}"}],"type":{"type":"reference","target":24376,"name":"ManageALocalServer","package":"@serenity-js/local-server"}}]},{"id":24409,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/abilities/Ability.ts","line":406,"character":4}],"signatures":[{"id":24410,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a JSON representation of the ability and its current state, if available.\\nThe purpose of this method is to enable reporting the state of the ability in a human-readable format,\\nrather than to serialise and deserialise the ability itself."}]},"sources":[{"fileName":"packages/core/lib/screenplay/abilities/Ability.ts","line":406,"character":4}],"type":{"type":"reference","target":614,"name":"SerialisedAbility","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Ability.toJSON"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Ability.toJSON"}},{"id":24411,"name":"abilityType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/abilities/Ability.ts","line":436,"character":4}],"signatures":[{"id":24412,"name":"abilityType","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the most abstract type of this Ability instance,\\nspecifically the first class in the inheritance hierarchy that directly extends the "},{"kind":"code","text":"`Ability`"},{"kind":"text","text":" class.\\n\\n"},{"kind":"code","text":"```ts\\nimport { Ability } from \'@serenity-js/core\';\\n\\nclass MyAbility extends Ability {}\\nclass MySpecialisedAbility extends MyAbility {}\\n\\nnew MyAbility().abilityType();            // returns MyAbility\\nnew MySpecialisedAbility().abilityType(); // returns MyAbility\\n```"}]},"sources":[{"fileName":"packages/core/lib/screenplay/abilities/Ability.ts","line":436,"character":4}],"type":{"type":"reference","target":529,"typeArguments":[{"type":"reference","target":508,"name":"Ability","package":"@serenity-js/core"}],"name":"AbilityType","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Ability.abilityType"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Ability.abilityType"}},{"id":24391,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":91,"character":4}],"signatures":[{"id":24392,"name":"new ManageALocalServer","variant":"signature","kind":16384,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://www.npmjs.com/package/http-shutdown"}]}]},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":91,"character":4}],"parameters":[{"id":24393,"name":"protocol","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Protocol to be used when communicating with the running server; "},{"kind":"code","text":"`http`"},{"kind":"text","text":" or "},{"kind":"code","text":"`https`"}]},"type":{"type":"reference","target":24434,"name":"SupportedProtocols","package":"@serenity-js/local-server"}},{"id":24394,"name":"server","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A Node.js server requestListener, with support for [server shutdown](https://www.npmjs.com/package/http-shutdown)."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/net.d.ts","qualifiedName":"\\"net\\".Server"},"name":"Server","package":"@types/node","qualifiedName":"\\"net\\".Server"}}],"type":{"type":"reference","target":24376,"name":"ManageALocalServer","package":"@serenity-js/local-server"},"overwrites":{"type":"reference","target":-1,"name":"Ability.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"Ability.constructor"}},{"id":24397,"name":"listen","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":105,"character":4}],"signatures":[{"id":24398,"name":"listen","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Starts the server on the first free port between "},{"kind":"code","text":"`preferredPort`"},{"kind":"text","text":" and "},{"kind":"code","text":"`highestPort`"},{"kind":"text","text":", inclusive."}]},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":105,"character":4}],"parameters":[{"id":24399,"name":"preferredPort","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Lower bound of the preferred port range"}]},"type":{"type":"intrinsic","name":"number"},"defaultValue":"8000"},{"id":24400,"name":"highestPort","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"highestPort\\n Upper bound of the preferred port range"}]},"type":{"type":"intrinsic","name":"number"},"defaultValue":"65535"}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":24401,"name":"mapInstance","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":131,"character":4}],"signatures":[{"id":24402,"name":"mapInstance","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Provides access to the server "},{"kind":"code","text":"`requestListener`"}]},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":131,"character":4}],"typeParameter":[{"id":24403,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":24404,"name":"fn","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":24405,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":131,"character":23}],"signatures":[{"id":24406,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":131,"character":23}],"parameters":[{"id":24407,"name":"server","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":24418,"name":"ServerWithShutdown","package":"@serenity-js/local-server"}},{"id":24408,"name":"protocol","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":24434,"name":"SupportedProtocols","package":"@serenity-js/local-server"}}],"type":{"type":"reference","target":24403,"name":"T","package":"@serenity-js/local-server","refersToTypeParameter":true}}]}}}],"type":{"type":"reference","target":24403,"name":"T","package":"@serenity-js/local-server","refersToTypeParameter":true}}]}],"groups":[{"title":"Constructors","children":[24391]},{"title":"Methods","children":[24377,24380,24409,24411,24397,24401]}],"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":48,"character":13}],"extendedTypes":[{"type":"reference","target":508,"name":"Ability","package":"@serenity-js/core"}],"permalink":"/api/local-server/class/ManageALocalServer","categories":[],"nextId":24437},{"id":24413,"name":"RequestListener","variant":"declaration","kind":2097152,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A "},{"kind":"code","text":"`requestListener`"},{"kind":"text","text":" function accepted by Node\'s\\n["},{"kind":"code","text":"`http.createServer`"},{"kind":"text","text":"](https://nodejs.org/api/http.html#http_http_createserver_options_requestlistener)\\nor ["},{"kind":"code","text":"`https.createServer`"},{"kind":"text","text":"](https://nodejs.org/api/https.html#https_https_createserver_options_requestlistener)."}]},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":141,"character":12}],"type":{"type":"reflection","declaration":{"id":24414,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":141,"character":30}],"signatures":[{"id":24415,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"parameters":[{"id":24416,"name":"request","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/http.d.ts","qualifiedName":"\\"http\\".IncomingMessage"},"name":"http.IncomingMessage","package":"@types/node","qualifiedName":"\\"http\\".IncomingMessage"}},{"id":24417,"name":"response","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/http.d.ts","qualifiedName":"\\"http\\".ServerResponse"},"name":"http.ServerResponse","package":"@types/node","qualifiedName":"\\"http\\".ServerResponse"}}],"type":{"type":"intrinsic","name":"void"}}]}},"permalink":"/api/local-server#RequestListener","categories":[],"previousId":24484,"nextId":24418},{"id":24418,"name":"ServerWithShutdown","variant":"declaration","kind":2097152,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A ["},{"kind":"code","text":"`net.Server`"},{"kind":"text","text":"](https://nodejs.org/api/net.html#class-netserver) with an added shutdown method."}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://www.npmjs.com/package/http-shutdown"}]}]},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":148,"character":12}],"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/net.d.ts","qualifiedName":"\\"net\\".Server"},"name":"net.Server","package":"@types/node","qualifiedName":"\\"net\\".Server"},{"type":"reflection","declaration":{"id":24419,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":24420,"name":"shutdown","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":149,"character":4}],"type":{"type":"reflection","declaration":{"id":24421,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":149,"character":14}],"signatures":[{"id":24422,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"parameters":[{"id":24423,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":24424,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":149,"character":25}],"signatures":[{"id":24425,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"parameters":[{"id":24426,"name":"error","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"id":24427,"name":"forceShutdown","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":150,"character":4}],"type":{"type":"reflection","declaration":{"id":24428,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":150,"character":19}],"signatures":[{"id":24429,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"parameters":[{"id":24430,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":24431,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":150,"character":30}],"signatures":[{"id":24432,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"parameters":[{"id":24433,"name":"error","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"groups":[{"title":"Properties","children":[24420,24427]}],"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":148,"character":46}]}}]},"permalink":"/api/local-server#ServerWithShutdown","categories":[],"previousId":24413},{"id":24434,"name":"SupportedProtocols","variant":"declaration","kind":8,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The protocol supported by the instance of the ["},{"kind":"code","text":"`ServerWithShutdown`"},{"kind":"text","text":"](/api/local-server/#ServerWithShutdown),\\nwrapped by the [ability](/api/core/class/Ability/)\\nto ["},{"kind":"code","text":"`ManageALocalServer`"},{"kind":"text","text":"](/api/local-server/class/ManageALocalServer/)."}]},"children":[{"id":24435,"name":"HTTP","variant":"declaration","kind":16,"flags":{"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":161,"character":4}],"type":{"type":"literal","value":"http"}},{"id":24436,"name":"HTTPS","variant":"declaration","kind":16,"flags":{"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":162,"character":4}],"type":{"type":"literal","value":"https"}}],"groups":[{"title":"Enumeration Members","children":[24435,24436]}],"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":160,"character":12}],"permalink":"/api/local-server/enum/SupportedProtocols","categories":[],"previousId":24449,"nextId":24484},{"id":24437,"name":"StartLocalServer","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Starts local server so that a test can interact with it."}]},"children":[{"id":24438,"name":"onRandomPort","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/interactions/StartLocalServer.ts","line":16,"character":11}],"signatures":[{"id":24439,"name":"onRandomPort","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Starts local test server on a random available ports."}]},"sources":[{"fileName":"packages/local-server/src/screenplay/interactions/StartLocalServer.ts","line":16,"character":11}],"type":{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":24440,"name":"onPort","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/interactions/StartLocalServer.ts","line":26,"character":11}],"signatures":[{"id":24441,"name":"onPort","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to start a local test server on a "},{"kind":"code","text":"`preferredPort`"},{"kind":"text","text":",\\nor a random one if that\'s not available."}]},"sources":[{"fileName":"packages/local-server/src/screenplay/interactions/StartLocalServer.ts","line":26,"character":11}],"parameters":[{"id":24442,"name":"preferredPort","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":24443,"name":"onRandomPortBetween","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/interactions/StartLocalServer.ts","line":40,"character":11}],"signatures":[{"id":24444,"name":"onRandomPortBetween","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to start a local test server on a random port\\nbetween "},{"kind":"code","text":"`lowestPort`"},{"kind":"text","text":" and "},{"kind":"code","text":"`highestPort`"},{"kind":"text","text":", inclusive."}]},"sources":[{"fileName":"packages/local-server/src/screenplay/interactions/StartLocalServer.ts","line":40,"character":11}],"parameters":[{"id":24445,"name":"lowestPort","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Lower bound of the preferred port range"}]},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":24446,"name":"highestPort","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Upper bound of the preferred port range"}]},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":24447,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":24448,"name":"new StartLocalServer","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":24437,"name":"StartLocalServer","package":"@serenity-js/local-server"}}]}],"groups":[{"title":"Constructors","children":[24447]},{"title":"Methods","children":[24438,24440,24443]}],"sources":[{"fileName":"packages/local-server/src/screenplay/interactions/StartLocalServer.ts","line":11,"character":13}],"permalink":"/api/local-server/class/StartLocalServer","categories":[],"previousId":24376,"nextId":24449},{"id":24449,"name":"StopLocalServer","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Stops the local server. Should be used in "},{"kind":"code","text":"`afterEach`"},{"kind":"text","text":" block to make sure that the server\\nis correctly shut down even when the test fails."}]},"children":[{"id":24450,"name":"ifRunning","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/interactions/StopLocalServer.ts","line":17,"character":11}],"signatures":[{"id":24451,"name":"ifRunning","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Stops the server if it\'s running. If the server hasn\'t been started, this interaction does nothing."}]},"sources":[{"fileName":"packages/local-server/src/screenplay/interactions/StopLocalServer.ts","line":17,"character":11}],"type":{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":24462,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":21,"character":4}],"signatures":[{"id":24463,"name":"new StopLocalServer","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":21,"character":4}],"parameters":[{"id":24464,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":24465,"name":"location","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"}}],"type":{"type":"reference","target":24449,"name":"StopLocalServer","package":"@serenity-js/local-server"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.constructor"}},{"id":24470,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"signatures":[{"id":24471,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.instantiationLocation"}},{"id":24472,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":24473,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":24474,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":24475,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":24476,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[24476]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.describedBy"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.describedBy"}},{"id":24482,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":24483,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.toString"}},{"id":24466,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/interactions/StopLocalServer.ts","line":24,"character":4}],"signatures":[{"id":24467,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/local-server/src/screenplay/interactions/StopLocalServer.ts","line":24,"character":4}],"parameters":[{"id":24468,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":710,"name":"CollectsArtifacts","package":"@serenity-js/core"},{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Interaction.performAs"}}],"overwrites":{"type":"reference","target":-1,"name":"Interaction.performAs"}}],"groups":[{"title":"Constructors","children":[24462]},{"title":"Methods","children":[24450,24470,24472,24482,24466]}],"sources":[{"fileName":"packages/local-server/src/screenplay/interactions/StopLocalServer.ts","line":12,"character":13}],"extendedTypes":[{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}],"permalink":"/api/local-server/class/StopLocalServer","categories":[],"previousId":24437,"nextId":24434},{"id":24484,"name":"LocalServer","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":24485,"name":"url","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/questions/LocalServer.ts","line":17,"character":11}],"signatures":[{"id":24486,"name":"url","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Retrieves the URL of the local server started\\nusing the ["},{"kind":"code","text":"`StartLocalServer`"},{"kind":"text","text":"](/api/local-server/class/StartLocalServer/) [interaction](/api/core/class/Interaction/)."}]},"sources":[{"fileName":"packages/local-server/src/screenplay/questions/LocalServer.ts","line":17,"character":11}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":24487,"name":"port","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/questions/LocalServer.ts","line":45,"character":11}],"signatures":[{"id":24488,"name":"port","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Retrieves the port number of the local server started\\nusing the ["},{"kind":"code","text":"`StartLocalServer`"},{"kind":"text","text":"](/api/local-server/class/StartLocalServer/) [interaction](/api/core/class/Interaction/)."}]},"sources":[{"fileName":"packages/local-server/src/screenplay/questions/LocalServer.ts","line":45,"character":11}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":24489,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":24490,"name":"new LocalServer","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":24484,"name":"LocalServer","package":"@serenity-js/local-server"}}]}],"groups":[{"title":"Constructors","children":[24489]},{"title":"Methods","children":[24485,24487]}],"sources":[{"fileName":"packages/local-server/src/screenplay/questions/LocalServer.ts","line":11,"character":13}],"permalink":"/api/local-server/class/LocalServer","categories":[],"previousId":24434,"nextId":24413}],"groups":[{"title":"Abilities","children":[24376]},{"title":"Activities","children":[24437,24449]},{"title":"Models","children":[24434]},{"title":"Questions","children":[24484]},{"title":"Type Aliases","children":[24413,24418]}],"sources":[{"fileName":"packages/local-server/src/index.ts","line":1,"character":0}],"permalink":"/api/local-server"},"urlSlug":"local-server"}],"packageName":"@serenity-js/local-server","packageVersion":"3.32.1"},{"entryPoints":[{"index":false,"label":"Test runner adapter","reflection":{"id":65,"name":"@serenity-js/mocha/adapter","variant":"declaration","kind":2,"flags":{"isExternal":true},"children":[{"id":24746,"name":"MochaAdapter","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Allows for programmatic execution of Mocha test scenarios,\\nusing ["},{"kind":"code","text":"`SerenityReporterForMocha`"},{"kind":"text","text":"](/api/mocha/function/export=/) to report progress.\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`TestRunnerAdapter`"},{"kind":"text","text":"](/api/core-adapter/interface/TestRunnerAdapter/)"}]},"children":[{"id":24747,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/mocha/src/adapter/MochaAdapter.ts","line":26,"character":4}],"signatures":[{"id":24748,"name":"new MochaAdapter","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/mocha/src/adapter/MochaAdapter.ts","line":26,"character":4}],"parameters":[{"id":24749,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":24769,"name":"MochaConfig","package":"@serenity-js/mocha"}},{"id":24750,"name":"loader","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"ModuleLoader","package":"@serenity-js/core"}}],"type":{"type":"reference","target":24746,"name":"MochaAdapter","package":"@serenity-js/mocha"}}]},{"id":24755,"name":"successThreshold","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/mocha/src/adapter/MochaAdapter.ts","line":35,"character":4}],"signatures":[{"id":24756,"name":"successThreshold","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Scenario success threshold for this test runner."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaAdapter.ts","line":35,"character":4}],"type":{"type":"union","types":[{"type":"reference","name":"Outcome","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":24757,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":24758,"name":"Code","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/mocha/src/adapter/MochaAdapter.ts","line":35,"character":36}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[24758]}],"sources":[{"fileName":"packages/mocha/src/adapter/MochaAdapter.ts","line":35,"character":34}]}}]},"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.successThreshold"}}],"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.successThreshold"}},{"id":24759,"name":"load","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/mocha/src/adapter/MochaAdapter.ts","line":46,"character":10}],"signatures":[{"id":24760,"name":"load","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Loads test scenarios."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaAdapter.ts","line":46,"character":10}],"parameters":[{"id":24761,"name":"pathsToScenarios","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.load"}}],"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.load"}},{"id":24762,"name":"scenarioCount","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/mocha/src/adapter/MochaAdapter.ts","line":81,"character":4}],"signatures":[{"id":24763,"name":"scenarioCount","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the number of loaded scenarios"}],"blockTags":[{"tag":"@throws","content":[{"kind":"text","text":"["},{"kind":"code","text":"`LogicError`"},{"kind":"text","text":"](/api/core/class/LogicError/)\\n If called before "},{"kind":"code","text":"`load`"}]}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaAdapter.ts","line":81,"character":4}],"type":{"type":"intrinsic","name":"number"},"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.scenarioCount"}}],"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.scenarioCount"}},{"id":24764,"name":"run","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/mocha/src/adapter/MochaAdapter.ts","line":95,"character":4}],"signatures":[{"id":24765,"name":"run","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Runs loaded test scenarios."}],"blockTags":[{"tag":"@throws","content":[{"kind":"text","text":"["},{"kind":"code","text":"`LogicError`"},{"kind":"text","text":"](/api/core/class/LogicError/)\\n If called before "},{"kind":"code","text":"`load`"}]}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaAdapter.ts","line":95,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.run"}}],"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.run"}}],"groups":[{"title":"Constructors","children":[24747]},{"title":"Methods","children":[24755,24759,24762,24764]}],"sources":[{"fileName":"packages/mocha/src/adapter/MochaAdapter.ts","line":21,"character":13}],"implementedTypes":[{"type":"reference","target":2290,"name":"TestRunnerAdapter","package":"@serenity-js/core"}],"permalink":"/api/mocha-adapter/class/MochaAdapter","categories":[],"previousId":24769},{"id":24769,"name":"MochaConfig","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configuration object for the Mocha test runner.\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`.mocharc.yml`"},{"kind":"text","text":" example](https://github.com/mochajs/mocha/blob/v8.0.1/example/config/.mocharc.yml)"}]},"children":[{"id":24770,"name":"config","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Path to config file.\\n\\n#### Learn more\\n- [Mocha configuration examples](https://github.com/mochajs/mocha/tree/v8.0.1/example/config)"}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":18,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":24771,"name":"allow-uncaught","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Allow uncaught errors to propagate."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":23,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":24772,"name":"async-only","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Require all tests to use a callback (async) or return a Promise."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":28,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":24773,"name":"bail","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Abort (\\"bail\\") after first test failure."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":33,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":24774,"name":"check-leaks","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Check for global variable leaks."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":38,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":24775,"name":"delay","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Delay initial execution of root suite."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":43,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":24776,"name":"fgrep","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Only run tests containing this string.\\n\\n**Note:** ["},{"kind":"code","text":"`MochaConfig.fgrep`"},{"kind":"text","text":"](/api/mocha-adapter/interface/MochaConfig/#fgrep) and ["},{"kind":"code","text":"`MochaConfig.grep`"},{"kind":"text","text":"](/api/mocha-adapter/interface/MochaConfig/#grep) are mutually exclusive."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":50,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":24777,"name":"file","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Files to be loaded prior to root suite execution."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":55,"character":4}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":24778,"name":"forbid-only","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Fail if exclusive test(s) encountered."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":60,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":24779,"name":"forbid-pending","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Fail if pending test(s) encountered."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":65,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":24780,"name":"global","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"List of allowed global variables."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":70,"character":4}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":24781,"name":"grep","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Only run tests matching this string or regexp.\\n\\n**Note:** ["},{"kind":"code","text":"`MochaConfig.grep`"},{"kind":"text","text":"](/api/mocha-adapter/interface/MochaConfig/#grep) and ["},{"kind":"code","text":"`MochaConfig.fgrep`"},{"kind":"text","text":"](/api/mocha-adapter/interface/MochaConfig/#fgrep) are mutually exclusive."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":77,"character":4}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"RegExp"},"name":"RegExp","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/RegExp"}]}},{"id":24782,"name":"growl","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Enable Growl notifications."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":82,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":24783,"name":"invert","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Inverts ["},{"kind":"code","text":"`MochaConfig.grep`"},{"kind":"text","text":"](/api/mocha-adapter/interface/MochaConfig/#grep) and ["},{"kind":"code","text":"`MochaConfig.fgrep`"},{"kind":"text","text":"](/api/mocha-adapter/interface/MochaConfig/#fgrep) matches."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":87,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":24784,"name":"require","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Require module."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":92,"character":4}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":24785,"name":"retries","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Retry failed tests this many times."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":97,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":24786,"name":"slow","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Specify \\"slow\\" test threshold (in milliseconds)."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":102,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":24787,"name":"timeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Specify test timeout threshold (in milliseconds).\\n\\n**Note:** setting this property to 0 means \\"no timeout\\"."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":109,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":24788,"name":"ui","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Specify user interface. Defaults to "},{"kind":"code","text":"`bdd`"},{"kind":"text","text":".\\n\\n#### Learn more\\n\\n- [Mocha interfaces](https://mochajs.org/#interfaces)"}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":118,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":24789,"name":"strict","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"When set to "},{"kind":"code","text":"`true`"},{"kind":"text","text":", a skipped test is considered a failure."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":123,"character":4}],"type":{"type":"intrinsic","name":"boolean"}}],"groups":[{"title":"Properties","children":[24770,24771,24772,24773,24774,24775,24776,24777,24778,24779,24780,24781,24782,24783,24784,24785,24786,24787,24788,24789]}],"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":10,"character":17}],"permalink":"/api/mocha-adapter/interface/MochaConfig","categories":[],"nextId":24746}],"groups":[{"title":"Configuration","children":[24769]},{"title":"Integration","children":[24746]}],"sources":[{"fileName":"packages/mocha/src/adapter/index.ts","line":1,"character":0}],"permalink":"/api/mocha-adapter"},"urlSlug":"mocha-adapter"},{"index":true,"label":"index","reflection":{"id":60,"name":"@serenity-js/mocha","variant":"declaration","kind":2,"flags":{"isExternal":true},"children":[{"id":61,"name":"export=","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/mocha/src/index.ts","line":11,"character":9}],"signatures":[{"id":62,"name":"export=","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Registers a Mocha reporter that emits [Serenity/JS domain events](/api/core-events/class/DomainEvent/)\\nand informs Serenity/JS when a test scenario starts, finishes, and with what result."}]},"sources":[{"fileName":"packages/mocha/src/index.ts","line":11,"character":9}],"parameters":[{"id":63,"name":"runner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"","qualifiedName":"Runner"},"name":"Runner"}},{"id":64,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":{"sourceFileName":"","qualifiedName":"MochaOptions"},"name":"MochaOptions"}}],"type":{"type":"reference","name":"SerenityReporterForMocha","package":"@serenity-js/mocha"}}],"permalink":"/api/mocha/function/export=","categories":[]}],"groups":[{"title":"Functions","children":[61]}],"sources":[{"fileName":"packages/mocha/src/index.ts","line":1,"character":0}],"permalink":"/api/mocha"},"urlSlug":"mocha"}],"packageName":"@serenity-js/mocha","packageVersion":"3.32.1"},{"entryPoints":[{"index":true,"label":"Index","reflection":{"id":6,"name":"@serenity-js/playwright","variant":"declaration","kind":2,"flags":{"isExternal":true},"children":[{"id":5181,"name":"ExtraBrowserContextOptions","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Playwright-specific options used to configure the ability to ["},{"kind":"code","text":"`BrowseTheWebWithPlaywright`"},{"kind":"text","text":"](/api/playwright/class/BrowseTheWebWithPlaywright/)\\n\\n## Learn more\\n- [Playwright "},{"kind":"code","text":"`Browser.newContext`"},{"kind":"text","text":" options](https://playwright.dev/docs/api/class-browser#browser-new-context)"}]},"children":[{"id":5182,"name":"defaultNavigationTimeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Changes the default maximum navigation time for the browser context used by ["},{"kind":"code","text":"`BrowseTheWebWithPlaywright`"},{"kind":"text","text":"](/api/playwright/class/BrowseTheWebWithPlaywright/)\\n\\n#### Learn more\\n- [Playwright "},{"kind":"code","text":"`browserContext.setDefaultNavigationTimeout(timeout)`"},{"kind":"text","text":"](https://playwright.dev/docs/api/class-browsercontext#browser-context-set-default-navigation-timeout)"}]},"sources":[{"fileName":"packages/playwright/src/ExtraBrowserContextOptions.ts","line":17,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":5183,"name":"defaultNavigationWaitUntil","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"When to consider navigation operation succeeded, defaults to "},{"kind":"code","text":"`load`"},{"kind":"text","text":". Events can be either:\\n- "},{"kind":"code","text":"`\'domcontentloaded\'`"},{"kind":"text","text":" - consider operation to be finished when the "},{"kind":"code","text":"`DOMContentLoaded`"},{"kind":"text","text":" event is fired.\\n- "},{"kind":"code","text":"`\'load\'`"},{"kind":"text","text":" - consider operation to be finished when the "},{"kind":"code","text":"`load`"},{"kind":"text","text":" event is fired.\\n- "},{"kind":"code","text":"`\'networkidle\'`"},{"kind":"text","text":" - consider operation to be finished when there are no network connections for at least "},{"kind":"code","text":"`500`"},{"kind":"text","text":" ms.\\n- "},{"kind":"code","text":"`\'commit\'`"},{"kind":"text","text":" - consider operation to be finished when network response is received and the document started loading.\\n\\n#### Learn more\\n- [Playwright "},{"kind":"code","text":"`page.goto(url[, options])`"},{"kind":"text","text":"](https://playwright.dev/docs/api/class-page#page-goto-option-wait-until)"}]},"sources":[{"fileName":"packages/playwright/src/ExtraBrowserContextOptions.ts","line":29,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"load"},{"type":"literal","value":"domcontentloaded"},{"type":"literal","value":"networkidle"},{"type":"literal","value":"commit"}]}},{"id":5184,"name":"defaultTimeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"This setting will change the default maximum time for all Playwright methods accepting "},{"kind":"code","text":"`timeout`"},{"kind":"text","text":" option.\\n\\n#### Learn more\\n- [Playwright "},{"kind":"code","text":"`page.setDefaultTimeout(timeout)`"},{"kind":"text","text":"](https://playwright.dev/docs/api/class-page#page-set-default-timeout)"}]},"sources":[{"fileName":"packages/playwright/src/ExtraBrowserContextOptions.ts","line":37,"character":4}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[5182,5183,5184]}],"sources":[{"fileName":"packages/playwright/src/ExtraBrowserContextOptions.ts","line":9,"character":17}],"permalink":"/api/playwright/interface/ExtraBrowserContextOptions","categories":[],"previousId":5185,"nextId":5343},{"id":5185,"name":"BrowseTheWebWithPlaywright","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"This implementation of the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\nenables the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to interact with web front-ends using [Playwright](https://playwright.dev/).\\n\\n## Using Playwright to "},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"\\n\\nIn the example below, we configure the ability to ["},{"kind":"code","text":"`BrowseTheWebWithPlaywright`"},{"kind":"text","text":"](/api/playwright/class/BrowseTheWebWithPlaywright/) with a Playwright\\n["},{"kind":"code","text":"`Browser`"},{"kind":"text","text":"](https://playwright.dev/docs/api/class-browser) so that Serenity/JS [actors](/api/core/class/Actor/)\\ncan create a new ["},{"kind":"code","text":"`BrowserContext`"},{"kind":"text","text":"](https://playwright.dev/docs/api/class-browsercontext) and\\ninstantiate Playwright ["},{"kind":"code","text":"`page`"},{"kind":"text","text":"s](https://playwright.dev/docs/api/class-page) as and when needed.\\n\\nThis configuration allows Serenity/JS to control the process of launching and shutting down browser instances\\nand is useful when your test runner, e.g. [Cucumber.js](/api/cucumber), doesn\'t offer this functionality.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { BrowseTheWebWithPlaywright } from \'@serenity-js/playwright\'\\nimport { By, Navigate, PageElement, Text } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { Browser, chromium } from \'playwright\'\\n\\nconst HomePage = {\\n  title: () =>\\n    PageElement.located(By.css(\'h1\')).describedAs(\'title\')\\n}\\n\\nconst browser = await chromium.launch({ headless: true });\\n\\nawait actorCalled(\'Wendy\')\\n  .whoCan(BrowseTheWebWithPlaywright.using(browser))\\n  .attemptsTo(\\n    Navigate.to(`https://serenity-js.org`),\\n    Ensure.that(Text.of(HomePage.title()), equals(\'Serenity/JS\')),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Using "},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":" with an existing Playwright "},{"kind":"code","text":"`page`"},{"kind":"text","text":"\\n\\nTest runners like [Playwright Test](/api/playwright-test/) manage Playwright browsers for you\\nand offer a ["},{"kind":"code","text":"`page`"},{"kind":"text","text":"](https://playwright.dev/docs/api/class-page) instance you can\\ninject into the ability to ["},{"kind":"code","text":"`BrowseTheWebWithPlaywright`"},{"kind":"text","text":"](/api/playwright/class/BrowseTheWebWithPlaywright/).\\n\\nNote that [Serenity/JS Playwright Test module](/api/playwright-test/)\\nautomatically configures all your [actors](/api/core/class/Actor/)\\nwith an ability to ["},{"kind":"code","text":"`BrowseTheWebWithPlaywright`"},{"kind":"text","text":"](/api/playwright/class/BrowseTheWebWithPlaywright/),\\nso you don\'t need to do it by hand unless you want to override the [default configuration](/api/playwright-test/interface/SerenityFixtures/).\\n\\nThe example below demonstrates how to use the ["},{"kind":"code","text":"`BrowseTheWebWithPlaywright.usingPage`"},{"kind":"text","text":"](/api/playwright/class/BrowseTheWebWithPlaywright/#usingPage) API and\\noverride the default [cast](/api/core/class/Cast/) of actors.\\n\\n"},{"kind":"code","text":"```ts\\nimport { describe, it, test } from \'@playwright/playwright-test\'\\nimport { BrowseTheWebWithPlaywright } from \'@serenity-js/playwright\'\\nimport { By, Navigate, PageElement, Text } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nconst HomePage = {\\n  title: () =>\\n    PageElement.located(By.css(\'h1\')).describedAs(\'title\')\\n}\\n\\ndescribe(\'Serenity/JS with Playwright\', () => {\\n\\n  test.use({\\n    actors: async ({ page, contextOptions }, use) => {\\n      await use(\\n        Cast.where((actorName: string) => {\\n          return actor.whoCan(\\n            BrowseTheWebWithPlaywright.usingPage(page),\\n            // ... add any other abilities\\n          )\\n        })\\n      )\\n    }\\n  })\\n\\n  it(\'lets you reuse an existing page\', async ({ actor }) => {\\n    await actor.attemptsTo(\\n      Navigate.to(`https://serenity-js.org`),\\n      Ensure.that(Text.of(HomePage.title()), equals(\'Serenity/JS\')),\\n    )\\n  })\\n})\\n```"},{"kind":"text","text":"\\n\\n## Configuring Playwright\\n\\nIf you\'re using Serenity/JS with [Playwright Test](/handbook/test-runners/playwright-test/),\\nSerenity/JS will automatically pick up your configuration from the ["},{"kind":"code","text":"`playwright.config.ts`"},{"kind":"text","text":"](https://playwright.dev/docs/test-configuration) file.\\n\\nWith other [test runners](/handbook/test-runners/), you can configure Playwright by:\\n- providing the browser-level configuration when calling ["},{"kind":"code","text":"`BrowserType.launch`"},{"kind":"text","text":"](https://playwright.dev/docs/api/class-browsertype#browser-type-launch),\\n- providing the browser context-level ["},{"kind":"code","text":"`ExtraBrowserContextOptions`"},{"kind":"text","text":"](/api/playwright/interface/ExtraBrowserContextOptions/)\\nwhen initialising the ability to "},{"kind":"code","text":"`BrowseTheWebWithPlaywright`"},{"kind":"text","text":".\\n\\nThe code snippet below demonstrates how to configure the browser and some popular browser context options,\\nsuch as\\n["},{"kind":"code","text":"`viewport`"},{"kind":"text","text":" size](https://playwright.dev/docs/api/class-browser#browser-new-context-option-viewport),\\n["},{"kind":"code","text":"`geolocation`"},{"kind":"text","text":"](https://playwright.dev/docs/api/class-browser#browser-new-page-option-geolocation),\\nand ["},{"kind":"code","text":"`permissions`"},{"kind":"text","text":"](https://playwright.dev/docs/api/class-browser#browser-new-page-option-permissions),\\nbut you can use it to configure any other option available in Playwright, like\\n["},{"kind":"code","text":"`userAgent`"},{"kind":"text","text":"](https://playwright.dev/docs/api/class-browser#browser-new-context-option-user-agent)\\nor ["},{"kind":"code","text":"`storageState`"},{"kind":"text","text":"](https://playwright.dev/docs/api/class-browser#browser-new-context-option-storage-state).\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { BrowseTheWebWithPlaywright } from \'@serenity-js/playwright\'\\nimport { Navigate } from \'@serenity-js/web\'\\nimport { Browser, chromium } from \'playwright\'\\n\\n// specify browser launch options\\nconst browser = await chromium.launch({\\n  headless: true\\n});\\n\\nawait actorCalled(\'Wendy\')\\n  .whoCan(BrowseTheWebWithPlaywright.using(browser, {\\n     // specify browser context options\\n     viewport:    { width: 1600, height: 1200 },\\n     geolocation: { longitude: 51.50084271042897, latitude: -0.12462540129500639 },\\n     permissions: [ \'geolocation\' ],\\n  }, {\\n     defaultNavigationTimeout: 30_000,\\n     defaultTimeout: 10_000\\n  }))\\n  .attemptsTo(\\n    Navigate.to(`https://serenity-js.org`),\\n    // ...\\n  )\\n```"},{"kind":"text","text":"\\n\\nNote that in addition to all the standard Playwright BrowserContextOptions,\\nyou can also provide several others defined in Serenity/JS ["},{"kind":"code","text":"`ExtraBrowserContextOptions`"},{"kind":"text","text":"](/api/playwright/interface/ExtraBrowserContextOptions/),\\nsuch as:\\n- "},{"kind":"code","text":"`defaultNavigationTimeout`"},{"kind":"text","text":", which changes the default maximum navigation timeout for the browser context,\\n- "},{"kind":"code","text":"`defaultTimeout`"},{"kind":"text","text":", which changes the default maximum time for all Playwright methods accepting the "},{"kind":"code","text":"`timeout`"},{"kind":"text","text":" option.\\n\\n## Learn more\\n- [Full list of Playwright "},{"kind":"code","text":"`BrowserContextOptions`"},{"kind":"text","text":"](https://playwright.dev/docs/api/class-browser#browser-new-context)\\n- [Playwright website](https://playwright.dev/)\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\n- ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/)\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)"}]},"children":[{"id":5186,"name":"using","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/abilities/BrowseTheWebWithPlaywright.ts","line":159,"character":11}],"signatures":[{"id":5187,"name":"using","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/abilities/BrowseTheWebWithPlaywright.ts","line":159,"character":11}],"parameters":[{"id":5188,"name":"browser","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Browser"},"name":"Browser","package":"playwright-core"}},{"id":5189,"name":"browserContextOptions","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"BrowserContextOptions"},"name":"BrowserContextOptions","package":"playwright-core"}},{"id":5190,"name":"extraBrowserContextOptions","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":5181,"name":"ExtraBrowserContextOptions","package":"@serenity-js/playwright"}}],"type":{"type":"reference","target":5185,"name":"BrowseTheWebWithPlaywright","package":"@serenity-js/playwright"}}]},{"id":5191,"name":"usingPage","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/abilities/BrowseTheWebWithPlaywright.ts","line":163,"character":11}],"signatures":[{"id":5192,"name":"usingPage","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/abilities/BrowseTheWebWithPlaywright.ts","line":163,"character":11}],"parameters":[{"id":5193,"name":"page","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Page"},"name":"Page","package":"playwright-core"}},{"id":5194,"name":"extraBrowserContextOptions","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":5181,"name":"ExtraBrowserContextOptions","package":"@serenity-js/playwright"}}],"type":{"type":"reference","target":5185,"name":"BrowseTheWebWithPlaywright","package":"@serenity-js/playwright"}}]},{"id":5214,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/abilities/Ability.ts","line":406,"character":4}],"signatures":[{"id":5215,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a JSON representation of the ability and its current state, if available.\\nThe purpose of this method is to enable reporting the state of the ability in a human-readable format,\\nrather than to serialise and deserialise the ability itself."}]},"sources":[{"fileName":"packages/core/lib/screenplay/abilities/Ability.ts","line":406,"character":4}],"type":{"type":"reference","target":614,"name":"SerialisedAbility","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.toJSON"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.toJSON"}},{"id":5216,"name":"abilityType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/abilities/Ability.ts","line":436,"character":4}],"signatures":[{"id":5217,"name":"abilityType","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the most abstract type of this Ability instance,\\nspecifically the first class in the inheritance hierarchy that directly extends the "},{"kind":"code","text":"`Ability`"},{"kind":"text","text":" class.\\n\\n"},{"kind":"code","text":"```ts\\nimport { Ability } from \'@serenity-js/core\';\\n\\nclass MyAbility extends Ability {}\\nclass MySpecialisedAbility extends MyAbility {}\\n\\nnew MyAbility().abilityType();            // returns MyAbility\\nnew MySpecialisedAbility().abilityType(); // returns MyAbility\\n```"}]},"sources":[{"fileName":"packages/core/lib/screenplay/abilities/Ability.ts","line":436,"character":4}],"type":{"type":"reference","target":529,"typeArguments":[{"type":"reference","target":508,"name":"Ability","package":"@serenity-js/core"}],"name":"AbilityType","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.abilityType"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.abilityType"}},{"id":5205,"name":"discard","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/abilities/BrowseTheWebWithPlaywright.ts","line":174,"character":10}],"signatures":[{"id":5206,"name":"discard","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Automatically closes any open [pages](/api/web/class/Page/) when the [SceneFinishes](/api/core-events/class/SceneFinishes/)\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`PlaywrightBrowsingSession.closeAllPages`"},{"kind":"text","text":"](/api/playwright/class/PlaywrightBrowsingSession/#closeAllPages)\\n- ["},{"kind":"code","text":"`Discardable`"},{"kind":"text","text":"](/api/core/interface/Discardable/)"}]},"sources":[{"fileName":"packages/playwright/src/screenplay/abilities/BrowseTheWebWithPlaywright.ts","line":174,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"implementationOf":{"type":"reference","target":-1,"name":"Discardable.discard"}}],"implementationOf":{"type":"reference","target":-1,"name":"Discardable.discard"}},{"id":5202,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":83,"character":4}],"signatures":[{"id":5203,"name":"new BrowseTheWebWithPlaywright","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":83,"character":4}],"parameters":[{"id":5204,"name":"session","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":3932,"typeArguments":[{"type":"reference","target":4302,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"}],"name":"Page","package":"@serenity-js/web"}],"name":"BrowsingSession","package":"@serenity-js/web"}}],"type":{"type":"reference","target":5185,"name":"BrowseTheWebWithPlaywright","package":"@serenity-js/playwright"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb<playwright.Locator>.constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb<playwright.Locator>.constructor"}},{"id":5208,"name":"currentPage","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":87,"character":4}],"signatures":[{"id":5209,"name":"currentPage","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/) representing the currently active browser tab."}]},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":87,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4302,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"}],"name":"Page","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.currentPage"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.currentPage"}},{"id":5210,"name":"allPages","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":92,"character":4}],"signatures":[{"id":5211,"name":"allPages","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns an array of [pages](/api/web/class/Page/) representing all the browser tabs\\navailable in the current ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/)."}]},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":92,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4302,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"}],"name":"Page","package":"@serenity-js/web"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.allPages"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.allPages"}},{"id":5212,"name":"browserCapabilities","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":96,"character":4}],"signatures":[{"id":5213,"name":"browserCapabilities","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns [basic meta-data](/api/web/interface/BrowserCapabilities/) about the browser associated with this ability."}]},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":96,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":3928,"name":"BrowserCapabilities","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.browserCapabilities"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.browserCapabilities"}}],"groups":[{"title":"Constructors","children":[5202]},{"title":"Methods","children":[5186,5191,5214,5216,5205,5208,5210,5212]}],"sources":[{"fileName":"packages/playwright/src/screenplay/abilities/BrowseTheWebWithPlaywright.ts","line":157,"character":13}],"extendedTypes":[{"type":"reference","target":3316,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"playwright.Locator","package":"playwright-core","qualifiedName":"Locator"}],"name":"BrowseTheWeb","package":"@serenity-js/web"}],"implementedTypes":[{"type":"reference","target":571,"name":"Discardable","package":"@serenity-js/core"}],"permalink":"/api/playwright/class/BrowseTheWebWithPlaywright","categories":[],"nextId":5181},{"id":5343,"name":"PlaywrightBrowsingSession","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"Playwright-specific implementation of ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/)."}]},"children":[{"id":5352,"name":"browserCapabilities","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":34,"character":20}],"signatures":[{"id":5353,"name":"browserCapabilities","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns [basic meta-data](/api/web/interface/BrowserCapabilities/) about the browser associated with this ability.\\n\\n**Please note** that since Playwright does not expose information about the operating system\\nthe tests are running on, **Serenity/JS assumes that the tests are running locally**\\nand therefore returns the value of Node.js "},{"kind":"code","text":"`process.platform`"},{"kind":"text","text":" for "},{"kind":"code","text":"`platformName`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":34,"character":20}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":3928,"name":"BrowserCapabilities","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession.browserCapabilities"}}],"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession.browserCapabilities"}},{"id":5354,"name":"cookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":36,"character":10}],"signatures":[{"id":5355,"name":"cookie","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":36,"character":10}],"parameters":[{"id":5356,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":3963,"name":"Cookie","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":5357,"name":"setCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":41,"character":10}],"signatures":[{"id":5358,"name":"setCookie","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":41,"character":10}],"parameters":[{"id":5359,"name":"cookie","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4069,"name":"CookieData","package":"@serenity-js/web"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":5360,"name":"deleteAllCookies","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":47,"character":10}],"signatures":[{"id":5361,"name":"deleteAllCookies","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":47,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":5368,"name":"closePagesOtherThan","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":15,"character":4}],"signatures":[{"id":5369,"name":"closePagesOtherThan","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":15,"character":4}],"parameters":[{"id":5370,"name":"pageOfInterest","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":5594,"name":"PlaywrightPage","package":"@serenity-js/playwright"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.closePagesOtherThan"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.closePagesOtherThan"}},{"id":5373,"name":"currentPage","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":27,"character":4}],"signatures":[{"id":5374,"name":"currentPage","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/) representing the currently active top-level browsing context."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":27,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":5594,"name":"PlaywrightPage","package":"@serenity-js/playwright"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.currentPage"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.currentPage"}},{"id":5375,"name":"register","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":33,"character":4}],"signatures":[{"id":5376,"name":"register","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Registers specified [pages](/api/web/class/Page/) to be managed by this ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/)."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":33,"character":4}],"parameters":[{"id":5377,"name":"pages","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":5594,"name":"PlaywrightPage","package":"@serenity-js/playwright"}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.register"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.register"}},{"id":5378,"name":"deregister","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":40,"character":4}],"signatures":[{"id":5379,"name":"deregister","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Informs this ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/) that it should no longer manage [pages](/api/web/class/Page/)\\nidentified by the given "},{"kind":"code","text":"`pageIds`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":40,"character":4}],"parameters":[{"id":5380,"name":"pageIds","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.deregister"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.deregister"}},{"id":5381,"name":"allPages","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":45,"character":4}],"signatures":[{"id":5382,"name":"allPages","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a [pages](/api/web/class/Page/) representing all the available\\ntop-level browsing context, e.g. all the open browser tabs."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":45,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":5594,"name":"PlaywrightPage","package":"@serenity-js/playwright"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.allPages"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.allPages"}},{"id":5383,"name":"registeredPageIds","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":49,"character":4}],"signatures":[{"id":5384,"name":"registeredPageIds","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the ids of any [pages](/api/web/class/Page/) this ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/) is aware of."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":49,"character":4}],"type":{"type":"array","elementType":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.registeredPageIds"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.registeredPageIds"}},{"id":5385,"name":"changeCurrentPageTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":68,"character":4}],"signatures":[{"id":5386,"name":"changeCurrentPageTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Informs the ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/) that the \\"current page\\" has changed to "},{"kind":"code","text":"`page`"},{"kind":"text","text":".\\n\\nPlease note that different Web integration tools have a different definition of what a \\"current page\\" is.\\nFor example, Selenium or WebdriverIO use a single \\"focused\\" window that a developer\\nneeds to explicitly \\"switch to\\" in their tests in order to interact with it.\\nThis is similar to how a regular user would interact with Web pages;\\nswitching from one tab to another, but not interacting with more than one\\nwindow/tab simultaneously.\\n\\nPlaywright and Puppeteer, on the other hand, don\'t have a concept of the \\"current\\" page at all, since they\\nallow the developer to interact with multiple open tabs/windows at the same time.\\n\\nWeb integration-specific implementations of this class should override this method to define\\nhow the concept of the \\"current page\\" should be interpreted by Serenity/JS."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":68,"character":4}],"parameters":[{"id":5387,"name":"page","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":5594,"name":"PlaywrightPage","package":"@serenity-js/playwright"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.changeCurrentPageTo"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.changeCurrentPageTo"}},{"id":5388,"name":"closeAllPages","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":72,"character":4}],"signatures":[{"id":5389,"name":"closeAllPages","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Closes all the pages available in this browsing context"}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":72,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.closeAllPages"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.closeAllPages"}}],"groups":[{"title":"Methods","children":[5352,5354,5357,5360,5368,5373,5375,5378,5381,5383,5385,5388]}],"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":15,"character":22}],"extendedTypes":[{"type":"reference","target":3932,"typeArguments":[{"type":"reference","target":5594,"name":"PlaywrightPage","package":"@serenity-js/playwright"}],"name":"BrowsingSession","package":"@serenity-js/web"}],"extendedBy":[{"type":"reference","target":5390,"name":"PlaywrightBrowsingSessionWithBrowser"},{"type":"reference","target":5440,"name":"PlaywrightBrowsingSessionWithPage"}],"permalink":"/api/playwright/class/PlaywrightBrowsingSession","categories":[],"previousId":5181,"nextId":5390},{"id":5390,"name":"PlaywrightBrowsingSessionWithBrowser","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":5410,"name":"cookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":36,"character":10}],"signatures":[{"id":5411,"name":"cookie","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":36,"character":10}],"parameters":[{"id":5412,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":3963,"name":"Cookie","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":5355,"name":"PlaywrightBrowsingSession.cookie"}}],"inheritedFrom":{"type":"reference","target":5354,"name":"PlaywrightBrowsingSession.cookie"}},{"id":5413,"name":"setCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":41,"character":10}],"signatures":[{"id":5414,"name":"setCookie","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":41,"character":10}],"parameters":[{"id":5415,"name":"cookie","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4069,"name":"CookieData","package":"@serenity-js/web"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":5358,"name":"PlaywrightBrowsingSession.setCookie"}}],"inheritedFrom":{"type":"reference","target":5357,"name":"PlaywrightBrowsingSession.setCookie"}},{"id":5416,"name":"deleteAllCookies","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":47,"character":10}],"signatures":[{"id":5417,"name":"deleteAllCookies","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":47,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":5361,"name":"PlaywrightBrowsingSession.deleteAllCookies"}}],"inheritedFrom":{"type":"reference","target":5360,"name":"PlaywrightBrowsingSession.deleteAllCookies"}},{"id":5391,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSessionWithBrowser.ts","line":13,"character":4}],"signatures":[{"id":5392,"name":"new PlaywrightBrowsingSessionWithBrowser","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSessionWithBrowser.ts","line":13,"character":4}],"parameters":[{"id":5393,"name":"browser","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Browser"},"name":"Browser","package":"playwright-core"}},{"id":5394,"name":"browserContextOptions","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"BrowserContextOptions"},"name":"BrowserContextOptions","package":"playwright-core"}},{"id":5395,"name":"extraBrowserContextOptions","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":5181,"name":"ExtraBrowserContextOptions","package":"@serenity-js/playwright"}},{"id":5396,"name":"selectors","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Selectors"},"name":"Selectors","package":"playwright-core"}}],"type":{"type":"reference","target":5390,"name":"PlaywrightBrowsingSessionWithBrowser","package":"@serenity-js/playwright"},"overwrites":{"type":"reference","target":-1,"name":"PlaywrightBrowsingSession.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"PlaywrightBrowsingSession.constructor"}},{"id":5403,"name":"closeAllPages","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSessionWithBrowser.ts","line":40,"character":19}],"signatures":[{"id":5404,"name":"closeAllPages","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Closes all the pages available in this browsing context"}]},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSessionWithBrowser.ts","line":40,"character":19}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":5389,"name":"PlaywrightBrowsingSession.closeAllPages"}}],"overwrites":{"type":"reference","target":5388,"name":"PlaywrightBrowsingSession.closeAllPages"}},{"id":5405,"name":"browserCapabilities","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSessionWithBrowser.ts","line":47,"character":19}],"signatures":[{"id":5406,"name":"browserCapabilities","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns [basic meta-data](/api/web/interface/BrowserCapabilities/) about the browser associated with this ability.\\n\\n**Please note** that since Playwright does not expose information about the operating system\\nthe tests are running on, **Serenity/JS assumes that the tests are running locally**\\nand therefore returns the value of Node.js "},{"kind":"code","text":"`process.platform`"},{"kind":"text","text":" for "},{"kind":"code","text":"`platformName`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSessionWithBrowser.ts","line":47,"character":19}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":3928,"name":"BrowserCapabilities","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":5353,"name":"PlaywrightBrowsingSession.browserCapabilities"}}],"overwrites":{"type":"reference","target":5352,"name":"PlaywrightBrowsingSession.browserCapabilities"}},{"id":5422,"name":"closePagesOtherThan","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":15,"character":4}],"signatures":[{"id":5423,"name":"closePagesOtherThan","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":15,"character":4}],"parameters":[{"id":5424,"name":"pageOfInterest","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":5594,"name":"PlaywrightPage","package":"@serenity-js/playwright"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":5369,"name":"PlaywrightBrowsingSession.closePagesOtherThan"}}],"inheritedFrom":{"type":"reference","target":5368,"name":"PlaywrightBrowsingSession.closePagesOtherThan"}},{"id":5425,"name":"currentPage","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":27,"character":4}],"signatures":[{"id":5426,"name":"currentPage","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/) representing the currently active top-level browsing context."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":27,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":5594,"name":"PlaywrightPage","package":"@serenity-js/playwright"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":5374,"name":"PlaywrightBrowsingSession.currentPage"}}],"inheritedFrom":{"type":"reference","target":5373,"name":"PlaywrightBrowsingSession.currentPage"}},{"id":5427,"name":"register","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":33,"character":4}],"signatures":[{"id":5428,"name":"register","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Registers specified [pages](/api/web/class/Page/) to be managed by this ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/)."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":33,"character":4}],"parameters":[{"id":5429,"name":"pages","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":5594,"name":"PlaywrightPage","package":"@serenity-js/playwright"}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","target":5376,"name":"PlaywrightBrowsingSession.register"}}],"inheritedFrom":{"type":"reference","target":5375,"name":"PlaywrightBrowsingSession.register"}},{"id":5430,"name":"deregister","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":40,"character":4}],"signatures":[{"id":5431,"name":"deregister","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Informs this ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/) that it should no longer manage [pages](/api/web/class/Page/)\\nidentified by the given "},{"kind":"code","text":"`pageIds`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":40,"character":4}],"parameters":[{"id":5432,"name":"pageIds","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","target":5379,"name":"PlaywrightBrowsingSession.deregister"}}],"inheritedFrom":{"type":"reference","target":5378,"name":"PlaywrightBrowsingSession.deregister"}},{"id":5433,"name":"allPages","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":45,"character":4}],"signatures":[{"id":5434,"name":"allPages","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a [pages](/api/web/class/Page/) representing all the available\\ntop-level browsing context, e.g. all the open browser tabs."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":45,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":5594,"name":"PlaywrightPage","package":"@serenity-js/playwright"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":5382,"name":"PlaywrightBrowsingSession.allPages"}}],"inheritedFrom":{"type":"reference","target":5381,"name":"PlaywrightBrowsingSession.allPages"}},{"id":5435,"name":"registeredPageIds","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":49,"character":4}],"signatures":[{"id":5436,"name":"registeredPageIds","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the ids of any [pages](/api/web/class/Page/) this ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/) is aware of."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":49,"character":4}],"type":{"type":"array","elementType":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},"inheritedFrom":{"type":"reference","target":5384,"name":"PlaywrightBrowsingSession.registeredPageIds"}}],"inheritedFrom":{"type":"reference","target":5383,"name":"PlaywrightBrowsingSession.registeredPageIds"}},{"id":5437,"name":"changeCurrentPageTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":68,"character":4}],"signatures":[{"id":5438,"name":"changeCurrentPageTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Informs the ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/) that the \\"current page\\" has changed to "},{"kind":"code","text":"`page`"},{"kind":"text","text":".\\n\\nPlease note that different Web integration tools have a different definition of what a \\"current page\\" is.\\nFor example, Selenium or WebdriverIO use a single \\"focused\\" window that a developer\\nneeds to explicitly \\"switch to\\" in their tests in order to interact with it.\\nThis is similar to how a regular user would interact with Web pages;\\nswitching from one tab to another, but not interacting with more than one\\nwindow/tab simultaneously.\\n\\nPlaywright and Puppeteer, on the other hand, don\'t have a concept of the \\"current\\" page at all, since they\\nallow the developer to interact with multiple open tabs/windows at the same time.\\n\\nWeb integration-specific implementations of this class should override this method to define\\nhow the concept of the \\"current page\\" should be interpreted by Serenity/JS."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":68,"character":4}],"parameters":[{"id":5439,"name":"page","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":5594,"name":"PlaywrightPage","package":"@serenity-js/playwright"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":5386,"name":"PlaywrightBrowsingSession.changeCurrentPageTo"}}],"inheritedFrom":{"type":"reference","target":5385,"name":"PlaywrightBrowsingSession.changeCurrentPageTo"}}],"groups":[{"title":"Constructors","children":[5391]},{"title":"Methods","children":[5410,5413,5416,5403,5405,5422,5425,5427,5430,5433,5435,5437]}],"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSessionWithBrowser.ts","line":11,"character":13}],"extendedTypes":[{"type":"reference","target":5343,"name":"PlaywrightBrowsingSession","package":"@serenity-js/playwright"}],"permalink":"/api/playwright/class/PlaywrightBrowsingSessionWithBrowser","categories":[],"previousId":5343,"nextId":5440},{"id":5440,"name":"PlaywrightBrowsingSessionWithPage","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":5459,"name":"cookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":36,"character":10}],"signatures":[{"id":5460,"name":"cookie","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":36,"character":10}],"parameters":[{"id":5461,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":3963,"name":"Cookie","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":5355,"name":"PlaywrightBrowsingSession.cookie"}}],"inheritedFrom":{"type":"reference","target":5354,"name":"PlaywrightBrowsingSession.cookie"}},{"id":5462,"name":"setCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":41,"character":10}],"signatures":[{"id":5463,"name":"setCookie","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":41,"character":10}],"parameters":[{"id":5464,"name":"cookie","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4069,"name":"CookieData","package":"@serenity-js/web"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":5358,"name":"PlaywrightBrowsingSession.setCookie"}}],"inheritedFrom":{"type":"reference","target":5357,"name":"PlaywrightBrowsingSession.setCookie"}},{"id":5465,"name":"deleteAllCookies","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":47,"character":10}],"signatures":[{"id":5466,"name":"deleteAllCookies","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":47,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":5361,"name":"PlaywrightBrowsingSession.deleteAllCookies"}}],"inheritedFrom":{"type":"reference","target":5360,"name":"PlaywrightBrowsingSession.deleteAllCookies"}},{"id":5441,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSessionWithPage.ts","line":15,"character":4}],"signatures":[{"id":5442,"name":"new PlaywrightBrowsingSessionWithPage","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSessionWithPage.ts","line":15,"character":4}],"parameters":[{"id":5443,"name":"page","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Page"},"name":"Page","package":"playwright-core"}},{"id":5444,"name":"browserContextOptions","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":5181,"name":"ExtraBrowserContextOptions","package":"@serenity-js/playwright"}},{"id":5445,"name":"selectors","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Selectors"},"name":"Selectors","package":"playwright-core"}}],"type":{"type":"reference","target":5440,"name":"PlaywrightBrowsingSessionWithPage","package":"@serenity-js/playwright"},"overwrites":{"type":"reference","target":-1,"name":"PlaywrightBrowsingSession.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"PlaywrightBrowsingSession.constructor"}},{"id":5452,"name":"closeAllPages","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSessionWithPage.ts","line":40,"character":10}],"signatures":[{"id":5453,"name":"closeAllPages","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Closes any newly opened pages, leaving only the original one managed by Playwright Test."}]},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSessionWithPage.ts","line":40,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":5389,"name":"PlaywrightBrowsingSession.closeAllPages"}}],"overwrites":{"type":"reference","target":5388,"name":"PlaywrightBrowsingSession.closeAllPages"}},{"id":5454,"name":"browserCapabilities","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSessionWithPage.ts","line":51,"character":19}],"signatures":[{"id":5455,"name":"browserCapabilities","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns [basic meta-data](/api/web/interface/BrowserCapabilities/) about the browser associated with this ability.\\n\\n**Please note** that since Playwright does not expose information about the operating system\\nthe tests are running on, **Serenity/JS assumes that the tests are running locally**\\nand therefore returns the value of Node.js "},{"kind":"code","text":"`process.platform`"},{"kind":"text","text":" for "},{"kind":"code","text":"`platformName`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSessionWithPage.ts","line":51,"character":19}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":3928,"name":"BrowserCapabilities","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":5353,"name":"PlaywrightBrowsingSession.browserCapabilities"}}],"overwrites":{"type":"reference","target":5352,"name":"PlaywrightBrowsingSession.browserCapabilities"}},{"id":5471,"name":"closePagesOtherThan","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":15,"character":4}],"signatures":[{"id":5472,"name":"closePagesOtherThan","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":15,"character":4}],"parameters":[{"id":5473,"name":"pageOfInterest","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":5594,"name":"PlaywrightPage","package":"@serenity-js/playwright"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":5369,"name":"PlaywrightBrowsingSession.closePagesOtherThan"}}],"inheritedFrom":{"type":"reference","target":5368,"name":"PlaywrightBrowsingSession.closePagesOtherThan"}},{"id":5474,"name":"currentPage","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":27,"character":4}],"signatures":[{"id":5475,"name":"currentPage","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/) representing the currently active top-level browsing context."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":27,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":5594,"name":"PlaywrightPage","package":"@serenity-js/playwright"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":5374,"name":"PlaywrightBrowsingSession.currentPage"}}],"inheritedFrom":{"type":"reference","target":5373,"name":"PlaywrightBrowsingSession.currentPage"}},{"id":5476,"name":"register","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":33,"character":4}],"signatures":[{"id":5477,"name":"register","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Registers specified [pages](/api/web/class/Page/) to be managed by this ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/)."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":33,"character":4}],"parameters":[{"id":5478,"name":"pages","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":5594,"name":"PlaywrightPage","package":"@serenity-js/playwright"}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","target":5376,"name":"PlaywrightBrowsingSession.register"}}],"inheritedFrom":{"type":"reference","target":5375,"name":"PlaywrightBrowsingSession.register"}},{"id":5479,"name":"deregister","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":40,"character":4}],"signatures":[{"id":5480,"name":"deregister","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Informs this ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/) that it should no longer manage [pages](/api/web/class/Page/)\\nidentified by the given "},{"kind":"code","text":"`pageIds`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":40,"character":4}],"parameters":[{"id":5481,"name":"pageIds","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","target":5379,"name":"PlaywrightBrowsingSession.deregister"}}],"inheritedFrom":{"type":"reference","target":5378,"name":"PlaywrightBrowsingSession.deregister"}},{"id":5482,"name":"allPages","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":45,"character":4}],"signatures":[{"id":5483,"name":"allPages","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a [pages](/api/web/class/Page/) representing all the available\\ntop-level browsing context, e.g. all the open browser tabs."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":45,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":5594,"name":"PlaywrightPage","package":"@serenity-js/playwright"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":5382,"name":"PlaywrightBrowsingSession.allPages"}}],"inheritedFrom":{"type":"reference","target":5381,"name":"PlaywrightBrowsingSession.allPages"}},{"id":5484,"name":"registeredPageIds","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":49,"character":4}],"signatures":[{"id":5485,"name":"registeredPageIds","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the ids of any [pages](/api/web/class/Page/) this ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/) is aware of."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":49,"character":4}],"type":{"type":"array","elementType":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},"inheritedFrom":{"type":"reference","target":5384,"name":"PlaywrightBrowsingSession.registeredPageIds"}}],"inheritedFrom":{"type":"reference","target":5383,"name":"PlaywrightBrowsingSession.registeredPageIds"}},{"id":5486,"name":"changeCurrentPageTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":68,"character":4}],"signatures":[{"id":5487,"name":"changeCurrentPageTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Informs the ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/) that the \\"current page\\" has changed to "},{"kind":"code","text":"`page`"},{"kind":"text","text":".\\n\\nPlease note that different Web integration tools have a different definition of what a \\"current page\\" is.\\nFor example, Selenium or WebdriverIO use a single \\"focused\\" window that a developer\\nneeds to explicitly \\"switch to\\" in their tests in order to interact with it.\\nThis is similar to how a regular user would interact with Web pages;\\nswitching from one tab to another, but not interacting with more than one\\nwindow/tab simultaneously.\\n\\nPlaywright and Puppeteer, on the other hand, don\'t have a concept of the \\"current\\" page at all, since they\\nallow the developer to interact with multiple open tabs/windows at the same time.\\n\\nWeb integration-specific implementations of this class should override this method to define\\nhow the concept of the \\"current page\\" should be interpreted by Serenity/JS."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":68,"character":4}],"parameters":[{"id":5488,"name":"page","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":5594,"name":"PlaywrightPage","package":"@serenity-js/playwright"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":5386,"name":"PlaywrightBrowsingSession.changeCurrentPageTo"}}],"inheritedFrom":{"type":"reference","target":5385,"name":"PlaywrightBrowsingSession.changeCurrentPageTo"}}],"groups":[{"title":"Constructors","children":[5441]},{"title":"Methods","children":[5459,5462,5465,5452,5454,5471,5474,5476,5479,5482,5484,5486]}],"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSessionWithPage.ts","line":12,"character":13}],"extendedTypes":[{"type":"reference","target":5343,"name":"PlaywrightBrowsingSession","package":"@serenity-js/playwright"}],"permalink":"/api/playwright/class/PlaywrightBrowsingSessionWithPage","categories":[],"previousId":5390,"nextId":5489},{"id":5489,"name":"PlaywrightCookie","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Playwright-specific implementation of ["},{"kind":"code","text":"`Cookie`"},{"kind":"text","text":"](/api/web/class/Cookie/)."}]},"children":[{"id":5568,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightCookie.ts","line":14,"character":4}],"signatures":[{"id":5569,"name":"new PlaywrightCookie","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightCookie.ts","line":14,"character":4}],"parameters":[{"id":5570,"name":"context","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"BrowserContext"},"name":"BrowserContext","package":"playwright-core"}},{"id":5571,"name":"cookieName","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":5489,"name":"PlaywrightCookie","package":"@serenity-js/playwright"},"overwrites":{"type":"reference","target":-1,"name":"Cookie.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"Cookie.constructor"}},{"id":5573,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightCookie.ts","line":22,"character":10}],"signatures":[{"id":5574,"name":"delete","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightCookie.ts","line":22,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Cookie.delete"}}],"overwrites":{"type":"reference","target":-1,"name":"Cookie.delete"}},{"id":5578,"name":"name","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":99,"character":4}],"signatures":[{"id":5579,"name":"name","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the name of this cookie."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":99,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.name"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.name"}},{"id":5580,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":106,"character":4}],"signatures":[{"id":5581,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Checks if a given cookie is set.\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Optional`"},{"kind":"text","text":"](/api/core/interface/Optional/)"}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":106,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.isPresent"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.isPresent"}},{"id":5582,"name":"value","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":110,"character":4}],"signatures":[{"id":5583,"name":"value","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the value of a given cookie."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":110,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.value"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.value"}},{"id":5584,"name":"path","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":114,"character":4}],"signatures":[{"id":5585,"name":"path","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the path of a given cookie, if any was set."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":114,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.path"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.path"}},{"id":5586,"name":"domain","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":118,"character":4}],"signatures":[{"id":5587,"name":"domain","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the domain of a given cookie, if any was set."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":118,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.domain"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.domain"}},{"id":5588,"name":"isHttpOnly","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":125,"character":4}],"signatures":[{"id":5589,"name":"isHttpOnly","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Checks if a given cookie is HTTP-only.\\n\\n#### Learn more\\n- [Mozilla Developer Network: Restricting access to cookies](https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies#restrict_access_to_cookies)"}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":125,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.isHttpOnly"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.isHttpOnly"}},{"id":5590,"name":"isSecure","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":132,"character":4}],"signatures":[{"id":5591,"name":"isSecure","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Checks if a given cookie is secure.\\n\\n#### Learn more\\n- [Mozilla Developer Network: Restricting access to cookies](https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies#restrict_access_to_cookies)"}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":132,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.isSecure"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.isSecure"}},{"id":5592,"name":"expiry","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":139,"character":4}],"signatures":[{"id":5593,"name":"expiry","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the expiry date of a given cookie\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Timestamp`"},{"kind":"text","text":"](/api/core/class/Timestamp/)"}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":139,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.expiry"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.expiry"}}],"groups":[{"title":"Constructors","children":[5568]},{"title":"Methods","children":[5573,5578,5580,5582,5584,5586,5588,5590,5592]}],"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightCookie.ts","line":12,"character":13}],"extendedTypes":[{"type":"reference","target":3963,"name":"Cookie","package":"@serenity-js/web"}],"permalink":"/api/playwright/class/PlaywrightCookie","categories":[],"previousId":5440,"nextId":5594},{"id":5594,"name":"PlaywrightPage","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Playwright-specific implementation of ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/)."}]},"children":[{"id":5595,"name":"current","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":35,"character":20}],"signatures":[{"id":5596,"name":"current","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":35,"character":20}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"reference","target":5594,"name":"PlaywrightPage","package":"@serenity-js/playwright"}],"name":"QuestionAdapter","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"Page.current"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.current"}},{"id":5606,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":39,"character":4}],"signatures":[{"id":5607,"name":"new PlaywrightPage","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":39,"character":4}],"parameters":[{"id":5608,"name":"session","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":5343,"name":"PlaywrightBrowsingSession","package":"@serenity-js/playwright"}},{"id":5609,"name":"page","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Page"},"name":"Page","package":"playwright-core"}},{"id":5610,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Partial"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Pick"},"typeArguments":[{"type":"reference","target":5181,"name":"ExtraBrowserContextOptions","package":"@serenity-js/playwright"},{"type":"literal","value":"defaultNavigationWaitUntil"}],"name":"Pick","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#picktype-keys"}],"name":"Partial","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#partialtype"}},{"id":5611,"name":"pageId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}],"type":{"type":"reference","target":5594,"name":"PlaywrightPage","package":"@serenity-js/playwright"},"overwrites":{"type":"reference","target":-1,"name":"Page<playwright.Locator>.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"Page<playwright.Locator>.constructor"}},{"id":5616,"name":"createPageElement","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":53,"character":4}],"signatures":[{"id":5617,"name":"createPageElement","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":53,"character":4}],"parameters":[{"id":5618,"name":"nativeElement","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"}}],"type":{"type":"reference","target":4418,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"}],"name":"PageElement","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"Page.createPageElement"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.createPageElement"}},{"id":5619,"name":"locate","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":63,"character":4}],"signatures":[{"id":5620,"name":"locate","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":63,"character":4}],"parameters":[{"id":5621,"name":"selector","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4853,"name":"Selector","package":"@serenity-js/web"}}],"type":{"type":"reference","target":4418,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"}],"name":"PageElement","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"Page.locate"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.locate"}},{"id":5622,"name":"locateAll","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":72,"character":4}],"signatures":[{"id":5623,"name":"locateAll","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":72,"character":4}],"parameters":[{"id":5624,"name":"selector","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4853,"name":"Selector","package":"@serenity-js/web"}}],"type":{"type":"reference","target":4494,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"}],"name":"PageElements","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"Page.locateAll"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.locateAll"}},{"id":5625,"name":"navigateTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":83,"character":10}],"signatures":[{"id":5626,"name":"navigateTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":83,"character":10}],"parameters":[{"id":5627,"name":"destination","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.navigateTo"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.navigateTo"}},{"id":5628,"name":"navigateBack","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":88,"character":10}],"signatures":[{"id":5629,"name":"navigateBack","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":88,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.navigateBack"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.navigateBack"}},{"id":5630,"name":"navigateForward","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":93,"character":10}],"signatures":[{"id":5631,"name":"navigateForward","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":93,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.navigateForward"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.navigateForward"}},{"id":5632,"name":"reload","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":98,"character":10}],"signatures":[{"id":5633,"name":"reload","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":98,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.reload"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.reload"}},{"id":5634,"name":"sendKeys","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":103,"character":10}],"signatures":[{"id":5635,"name":"sendKeys","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":103,"character":10}],"parameters":[{"id":5636,"name":"keys","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":4186,"name":"Key","package":"@serenity-js/web"}]}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.sendKeys"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.sendKeys"}},{"id":5637,"name":"executeScript","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":117,"character":10}],"signatures":[{"id":5638,"name":"executeScript","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":117,"character":10}],"typeParameter":[{"id":5639,"name":"Result","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":5640,"name":"InnerArguments","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"parameters":[{"id":5641,"name":"script","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reflection","declaration":{"id":5642,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":118,"character":26}],"signatures":[{"id":5643,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":118,"character":26}],"parameters":[{"id":5644,"name":"parameters","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"reference","target":5640,"name":"InnerArguments","package":"@serenity-js/playwright","refersToTypeParameter":true}}],"type":{"type":"reference","target":5639,"name":"Result","package":"@serenity-js/playwright","refersToTypeParameter":true}}]}}]}},{"id":5645,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"reference","target":5640,"name":"InnerArguments","package":"@serenity-js/playwright","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":5639,"name":"Result","package":"@serenity-js/playwright","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.executeScript"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.executeScript"}},{"id":5646,"name":"executeAsyncScript","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":145,"character":10}],"signatures":[{"id":5647,"name":"executeAsyncScript","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":145,"character":10}],"typeParameter":[{"id":5648,"name":"Result","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":5649,"name":"InnerArguments","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"parameters":[{"id":5650,"name":"script","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reflection","declaration":{"id":5651,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":145,"character":85}],"signatures":[{"id":5652,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":145,"character":85}],"parameters":[{"id":5653,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"tuple","elements":[{"type":"rest","elementType":{"type":"namedTupleMember","name":"parameters","isOptional":false,"element":{"type":"array","elementType":{"type":"reference","target":5649,"name":"InnerArguments","package":"@serenity-js/playwright","refersToTypeParameter":true}}}},{"type":"namedTupleMember","name":"callback","isOptional":false,"element":{"type":"reflection","declaration":{"id":5654,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":145,"character":137}],"signatures":[{"id":5655,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":145,"character":137}],"parameters":[{"id":5656,"name":"result","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":5648,"name":"Result","package":"@serenity-js/playwright","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"void"}}]}}}]}}],"type":{"type":"intrinsic","name":"void"}}]}}]}},{"id":5657,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"reference","target":5649,"name":"InnerArguments","package":"@serenity-js/playwright","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":5648,"name":"Result","package":"@serenity-js/playwright","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.executeAsyncScript"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.executeAsyncScript"}},{"id":5658,"name":"lastScriptExecutionResult","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":177,"character":4}],"signatures":[{"id":5659,"name":"lastScriptExecutionResult","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":177,"character":4}],"typeParameter":[{"id":5660,"name":"Result","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"any"}}],"type":{"type":"reference","target":5660,"name":"Result","package":"@serenity-js/playwright","refersToTypeParameter":true},"overwrites":{"type":"reference","target":-1,"name":"Page.lastScriptExecutionResult"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.lastScriptExecutionResult"}},{"id":5661,"name":"takeScreenshot","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":185,"character":10}],"signatures":[{"id":5662,"name":"takeScreenshot","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":185,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.takeScreenshot"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.takeScreenshot"}},{"id":5663,"name":"cookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":204,"character":10}],"signatures":[{"id":5664,"name":"cookie","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":204,"character":10}],"parameters":[{"id":5665,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":3963,"name":"Cookie","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.cookie"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.cookie"}},{"id":5666,"name":"setCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":208,"character":10}],"signatures":[{"id":5667,"name":"setCookie","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":208,"character":10}],"parameters":[{"id":5668,"name":"cookieData","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4069,"name":"CookieData","package":"@serenity-js/web"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.setCookie"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.setCookie"}},{"id":5669,"name":"deleteAllCookies","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":230,"character":10}],"signatures":[{"id":5670,"name":"deleteAllCookies","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":230,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.deleteAllCookies"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.deleteAllCookies"}},{"id":5671,"name":"title","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":234,"character":10}],"signatures":[{"id":5672,"name":"title","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":234,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.title"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.title"}},{"id":5673,"name":"name","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":239,"character":10}],"signatures":[{"id":5674,"name":"name","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":239,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.name"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.name"}},{"id":5675,"name":"url","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":246,"character":10}],"signatures":[{"id":5676,"name":"url","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":246,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/url.d.ts","qualifiedName":"\\"url\\".URL"},"name":"URL","package":"@types/node","qualifiedName":"\\"url\\".URL"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.url"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.url"}},{"id":5677,"name":"viewportSize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":251,"character":10}],"signatures":[{"id":5678,"name":"viewportSize","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":251,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reflection","declaration":{"id":5679,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":5680,"name":"width","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":251,"character":36}],"type":{"type":"intrinsic","name":"number"}},{"id":5681,"name":"height","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":251,"character":51}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[5680,5681]}],"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":251,"character":34}]}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.viewportSize"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.viewportSize"}},{"id":5682,"name":"setViewportSize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":255,"character":10}],"signatures":[{"id":5683,"name":"setViewportSize","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":255,"character":10}],"parameters":[{"id":5684,"name":"size","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":5685,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":5686,"name":"width","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":255,"character":34}],"type":{"type":"intrinsic","name":"number"}},{"id":5687,"name":"height","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":255,"character":49}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[5686,5687]}],"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":255,"character":32}]}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.setViewportSize"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.setViewportSize"}},{"id":5688,"name":"close","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":259,"character":10}],"signatures":[{"id":5689,"name":"close","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":259,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.close"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.close"}},{"id":5690,"name":"closeOthers","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":265,"character":10}],"signatures":[{"id":5691,"name":"closeOthers","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":265,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.closeOthers"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.closeOthers"}},{"id":5692,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":269,"character":4}],"signatures":[{"id":5693,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":269,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.isPresent"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.isPresent"}},{"id":5694,"name":"nativePage","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":273,"character":10}],"signatures":[{"id":5695,"name":"nativePage","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":273,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Page"},"name":"Page","package":"playwright-core"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":5703,"name":"id","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":132,"character":13}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Page.id"}},{"id":5704,"name":"switchTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":432,"character":4}],"signatures":[{"id":5705,"name":"switchTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Switches the current browsing context to the given page\\nand returns an object that allows the caller to switch back\\nto the previous context when needed.\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Switch`"},{"kind":"text","text":"](/api/web/class/Switch/)\\n- ["},{"kind":"code","text":"`Switchable`"},{"kind":"text","text":"](/api/web/interface/Switchable/)"}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":432,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4866,"name":"SwitchableOrigin","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Page.switchTo"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Page.switchTo"}},{"id":5706,"name":"modalDialog","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":444,"character":4}],"signatures":[{"id":5707,"name":"modalDialog","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the ["},{"kind":"code","text":"`ModalDialogHandler`"},{"kind":"text","text":"](/api/web/class/ModalDialogHandler/) for the current ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/)."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":444,"character":4}],"type":{"type":"reference","target":4170,"name":"ModalDialogHandler","package":"@serenity-js/web"},"inheritedFrom":{"type":"reference","target":-1,"name":"Page.modalDialog"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Page.modalDialog"}},{"id":5708,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":448,"character":4}],"signatures":[{"id":5709,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a description of this Page and its ID."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":448,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Page.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Page.toString"}}],"groups":[{"title":"Constructors","children":[5606]},{"title":"Properties","children":[5703]},{"title":"Methods","children":[5595,5616,5619,5622,5625,5628,5630,5632,5634,5637,5646,5658,5661,5663,5666,5669,5671,5673,5675,5677,5682,5688,5690,5692,5694,5704,5706,5708]}],"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":21,"character":13}],"extendedTypes":[{"type":"reference","target":4302,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"playwright.Locator","package":"playwright-core","qualifiedName":"Locator"}],"name":"Page","package":"@serenity-js/web"}],"permalink":"/api/playwright/class/PlaywrightPage","categories":[],"previousId":5489,"nextId":5710},{"id":5710,"name":"PlaywrightPageElement","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Playwright-specific implementation of ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)."}]},"children":[{"id":5730,"name":"of","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":16,"character":4}],"signatures":[{"id":5731,"name":"of","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":16,"character":4}],"parameters":[{"id":5732,"name":"parent","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4418,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"}],"name":"PageElement","package":"@serenity-js/web"}}],"type":{"type":"reference","target":4418,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"}],"name":"PageElement","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.of"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.of"}},{"id":5733,"name":"closestTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":20,"character":4}],"signatures":[{"id":5734,"name":"closestTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":20,"character":4}],"parameters":[{"id":5735,"name":"child","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4418,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"}],"name":"PageElement","package":"@serenity-js/web"}}],"type":{"type":"reference","target":4418,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"}],"name":"PageElement","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.closestTo"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.closestTo"}},{"id":5736,"name":"enterValue","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":24,"character":10}],"signatures":[{"id":5737,"name":"enterValue","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":24,"character":10}],"parameters":[{"id":5738,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.enterValue"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.enterValue"}},{"id":5739,"name":"clearValue","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":31,"character":10}],"signatures":[{"id":5740,"name":"clearValue","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":31,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.clearValue"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.clearValue"}},{"id":5741,"name":"click","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":41,"character":10}],"signatures":[{"id":5742,"name":"click","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":41,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.click"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.click"}},{"id":5743,"name":"doubleClick","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":46,"character":10}],"signatures":[{"id":5744,"name":"doubleClick","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":46,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.doubleClick"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.doubleClick"}},{"id":5745,"name":"scrollIntoView","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":51,"character":10}],"signatures":[{"id":5746,"name":"scrollIntoView","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":51,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.scrollIntoView"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.scrollIntoView"}},{"id":5747,"name":"hoverOver","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":56,"character":10}],"signatures":[{"id":5748,"name":"hoverOver","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":56,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.hoverOver"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.hoverOver"}},{"id":5749,"name":"rightClick","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":61,"character":10}],"signatures":[{"id":5750,"name":"rightClick","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":61,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.rightClick"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.rightClick"}},{"id":5751,"name":"selectOptions","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":66,"character":10}],"signatures":[{"id":5752,"name":"selectOptions","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":66,"character":10}],"parameters":[{"id":5753,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":4733,"name":"SelectOption","package":"@serenity-js/web"}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.selectOptions"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.selectOptions"}},{"id":5754,"name":"selectedOptions","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":79,"character":10}],"signatures":[{"id":5755,"name":"selectedOptions","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":79,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4733,"name":"SelectOption","package":"@serenity-js/web"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.selectedOptions"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.selectedOptions"}},{"id":5756,"name":"attribute","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":101,"character":10}],"signatures":[{"id":5757,"name":"attribute","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":101,"character":10}],"parameters":[{"id":5758,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.attribute"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.attribute"}},{"id":5759,"name":"text","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":106,"character":10}],"signatures":[{"id":5760,"name":"text","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":106,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.text"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.text"}},{"id":5761,"name":"value","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":111,"character":10}],"signatures":[{"id":5762,"name":"value","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":111,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.value"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.value"}},{"id":5763,"name":"html","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":116,"character":10}],"signatures":[{"id":5764,"name":"html","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":116,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.html"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.html"}},{"id":5765,"name":"switchTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":121,"character":10}],"signatures":[{"id":5766,"name":"switchTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":121,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4866,"name":"SwitchableOrigin","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.switchTo"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.switchTo"}},{"id":5767,"name":"isActive","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":156,"character":10}],"signatures":[{"id":5768,"name":"isActive","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":156,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.isActive"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.isActive"}},{"id":5769,"name":"isClickable","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":167,"character":10}],"signatures":[{"id":5770,"name":"isClickable","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":167,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.isClickable"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.isClickable"}},{"id":5771,"name":"isEnabled","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":178,"character":10}],"signatures":[{"id":5772,"name":"isEnabled","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":178,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.isEnabled"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.isEnabled"}},{"id":5773,"name":"isSelected","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":187,"character":10}],"signatures":[{"id":5774,"name":"isSelected","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":187,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.isSelected"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.isSelected"}},{"id":5775,"name":"isVisible","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":205,"character":10}],"signatures":[{"id":5776,"name":"isVisible","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":205,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.isVisible"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.isVisible"}},{"id":5777,"name":"locator","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":19,"character":13}],"type":{"type":"reference","target":4252,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"},{"type":"intrinsic","name":"any"}],"name":"Locator","package":"@serenity-js/web"},"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement.locator"}},{"id":5727,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":46,"character":4}],"signatures":[{"id":5728,"name":"new PlaywrightPageElement","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":46,"character":4}],"parameters":[{"id":5729,"name":"locator","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4252,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"},{"type":"intrinsic","name":"any"}],"name":"Locator","package":"@serenity-js/web"}}],"type":{"type":"reference","target":5710,"name":"PlaywrightPageElement","package":"@serenity-js/playwright"},"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement<playwright.Locator>.constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement<playwright.Locator>.constructor"}},{"id":5778,"name":"nativeElement","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":107,"character":4}],"signatures":[{"id":5779,"name":"nativeElement","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An \\"escape hatch\\" providing access to the integration tool-specific implementation of a Web element."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":107,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement.nativeElement"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement.nativeElement"}},{"id":5780,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":108,"character":4}],"signatures":[{"id":5781,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":108,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement.toString"}},{"id":5782,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":181,"character":4}],"signatures":[{"id":5783,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a ["},{"kind":"code","text":"`Promise`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise) that resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":" when the element\\nis present in the [Document Object Model (DOM)](https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model),\\n"},{"kind":"code","text":"`false`"},{"kind":"text","text":" otherwise."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":181,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement.isPresent"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement.isPresent"}}],"groups":[{"title":"Constructors","children":[5727]},{"title":"Properties","children":[5777]},{"title":"Methods","children":[5730,5733,5736,5739,5741,5743,5745,5747,5749,5751,5754,5756,5759,5761,5763,5765,5767,5769,5771,5773,5775,5778,5780,5782]}],"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":15,"character":13}],"extendedTypes":[{"type":"reference","target":4418,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"playwright.Locator","package":"playwright-core","qualifiedName":"Locator"}],"name":"PageElement","package":"@serenity-js/web"}],"permalink":"/api/playwright/class/PlaywrightPageElement","categories":[],"previousId":5594,"nextId":5218},{"id":5218,"name":"PlaywrightLocator","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Playwright-specific implementation of ["},{"kind":"code","text":"`Locator`"},{"kind":"text","text":"](/api/web/class/Locator/)."}]},"children":[{"id":5219,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts","line":18,"character":4}],"signatures":[{"id":5220,"name":"new PlaywrightLocator","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts","line":18,"character":4}],"parameters":[{"id":5221,"name":"parent","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4709,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"}],"name":"RootLocator","package":"@serenity-js/web"}},{"id":5222,"name":"selector","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4853,"name":"Selector","package":"@serenity-js/web"}}],"type":{"type":"reference","target":5218,"name":"PlaywrightLocator","package":"@serenity-js/playwright"},"overwrites":{"type":"reference","target":-1,"name":"Locator<playwright.Locator, string>.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"Locator<playwright.Locator, string>.constructor"}},{"id":5225,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts","line":54,"character":10}],"signatures":[{"id":5226,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts","line":54,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Locator.isPresent"}}],"overwrites":{"type":"reference","target":-1,"name":"Locator.isPresent"}},{"id":5227,"name":"nativeElement","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts","line":76,"character":10}],"signatures":[{"id":5228,"name":"nativeElement","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts","line":76,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Locator.nativeElement"}}],"overwrites":{"type":"reference","target":-1,"name":"Locator.nativeElement"}},{"id":5229,"name":"allNativeElements","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts","line":82,"character":10}],"signatures":[{"id":5230,"name":"allNativeElements","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts","line":82,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Locator.allNativeElements"}}],"overwrites":{"type":"reference","target":-1,"name":"Locator.allNativeElements"}},{"id":5231,"name":"of","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts","line":92,"character":4}],"signatures":[{"id":5232,"name":"of","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts","line":92,"character":4}],"parameters":[{"id":5233,"name":"parent","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":5312,"name":"PlaywrightRootLocator","package":"@serenity-js/playwright"}}],"type":{"type":"reference","target":4252,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"},{"type":"intrinsic","name":"string"}],"name":"Locator","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"Locator.of"}}],"overwrites":{"type":"reference","target":-1,"name":"Locator.of"}},{"id":5234,"name":"closestTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts","line":96,"character":4}],"signatures":[{"id":5235,"name":"closestTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts","line":96,"character":4}],"parameters":[{"id":5236,"name":"child","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":5218,"name":"PlaywrightLocator","package":"@serenity-js/playwright"}}],"type":{"type":"reference","target":4252,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"},{"type":"intrinsic","name":"string"}],"name":"Locator","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"Locator.closestTo"}}],"overwrites":{"type":"reference","target":-1,"name":"Locator.closestTo"}},{"id":5237,"name":"locate","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts","line":100,"character":4}],"signatures":[{"id":5238,"name":"locate","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts","line":100,"character":4}],"parameters":[{"id":5239,"name":"child","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":5218,"name":"PlaywrightLocator","package":"@serenity-js/playwright"}}],"type":{"type":"reference","target":4252,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"},{"type":"intrinsic","name":"string"}],"name":"Locator","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"Locator.locate"}}],"overwrites":{"type":"reference","target":-1,"name":"Locator.locate"}},{"id":5240,"name":"element","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts","line":104,"character":4}],"signatures":[{"id":5241,"name":"element","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts","line":104,"character":4}],"type":{"type":"reference","target":4418,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"}],"name":"PageElement","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"Locator.element"}}],"overwrites":{"type":"reference","target":-1,"name":"Locator.element"}},{"id":5242,"name":"allElements","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts","line":108,"character":10}],"signatures":[{"id":5243,"name":"allElements","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts","line":108,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4418,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"}],"name":"PageElement","package":"@serenity-js/web"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Locator.allElements"}}],"overwrites":{"type":"reference","target":-1,"name":"Locator.allElements"}},{"id":5245,"name":"selector","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Locator.ts","line":19,"character":13}],"type":{"type":"reference","target":4853,"name":"Selector","package":"@serenity-js/web"},"inheritedFrom":{"type":"reference","target":-1,"name":"Locator.selector"}},{"id":5246,"name":"switchToFrame","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Locator.ts","line":23,"character":4}],"signatures":[{"id":5247,"name":"switchToFrame","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Locator.ts","line":23,"character":4}],"parameters":[{"id":5248,"name":"element","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Locator.switchToFrame"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Locator.switchToFrame"}},{"id":5249,"name":"switchToParentFrame","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Locator.ts","line":24,"character":4}],"signatures":[{"id":5250,"name":"switchToParentFrame","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Locator.ts","line":24,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Locator.switchToParentFrame"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Locator.switchToParentFrame"}},{"id":5251,"name":"switchToMainFrame","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Locator.ts","line":25,"character":4}],"signatures":[{"id":5252,"name":"switchToMainFrame","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Locator.ts","line":25,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Locator.switchToMainFrame"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Locator.switchToMainFrame"}},{"id":5256,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Locator.ts","line":42,"character":4}],"signatures":[{"id":5257,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Locator.ts","line":42,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Locator.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Locator.toString"}},{"id":5258,"name":"[custom]","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Custom [Node.js inspection method](https://nodejs.org/api/util.html#utilinspectcustom)."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Locator.ts","line":46,"character":4}],"type":{"type":"reflection","declaration":{"id":5259,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Locator.ts","line":46,"character":27}],"signatures":[{"id":5260,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Locator.ts","line":46,"character":27}],"parameters":[{"id":5261,"name":"depth","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}},{"id":5262,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/util.d.ts","qualifiedName":"\\"util\\".InspectOptionsStylized"},"name":"InspectOptionsStylized","package":"@types/node","qualifiedName":"\\"util\\".InspectOptionsStylized"}},{"id":5263,"name":"inspect","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"query","queryType":{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/util.d.ts","qualifiedName":"\\"util\\".inspect"},"name":"inspect","package":"@types/node","qualifiedName":"\\"util\\".inspect","preferValues":true}}}],"type":{"type":"intrinsic","name":"string"}}]}},"inheritedFrom":{"type":"reference","target":-1,"name":"Locator.[custom]"}}],"groups":[{"title":"Constructors","children":[5219]},{"title":"Properties","children":[5245,5258]},{"title":"Methods","children":[5225,5227,5229,5231,5234,5237,5240,5242,5246,5249,5251,5256]}],"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts","line":16,"character":13}],"extendedTypes":[{"type":"reference","target":4252,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"playwright.Locator","package":"playwright-core","qualifiedName":"Locator"},{"type":"intrinsic","name":"string"}],"name":"Locator","package":"@serenity-js/web"}],"permalink":"/api/playwright/class/PlaywrightLocator","categories":[],"previousId":5710,"nextId":5312},{"id":5312,"name":"PlaywrightRootLocator","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Playwright-specific implementation of ["},{"kind":"code","text":"`RootLocator`"},{"kind":"text","text":"](/api/web/class/RootLocator/)."}]},"children":[{"id":5313,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightRootLocator.ts","line":17,"character":4}],"signatures":[{"id":5314,"name":"new PlaywrightRootLocator","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightRootLocator.ts","line":17,"character":4}],"parameters":[{"id":5315,"name":"page","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Page"},"name":"Page","package":"playwright-core"}}],"type":{"type":"reference","target":5312,"name":"PlaywrightRootLocator","package":"@serenity-js/playwright"},"overwrites":{"type":"reference","target":-1,"name":"RootLocator<playwright.Locator>.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"RootLocator<playwright.Locator>.constructor"}},{"id":5318,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightRootLocator.ts","line":22,"character":10}],"signatures":[{"id":5319,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightRootLocator.ts","line":22,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"RootLocator.isPresent"}}],"overwrites":{"type":"reference","target":-1,"name":"RootLocator.isPresent"}},{"id":5320,"name":"nativeElement","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightRootLocator.ts","line":26,"character":4}],"signatures":[{"id":5321,"name":"nativeElement","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightRootLocator.ts","line":26,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Pick"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"},{"type":"literal","value":"locator"}],"name":"Pick","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#picktype-keys"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"RootLocator.nativeElement"}}],"overwrites":{"type":"reference","target":-1,"name":"RootLocator.nativeElement"}},{"id":5322,"name":"evaluate","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightRootLocator.ts","line":37,"character":4},{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightRootLocator.ts","line":38,"character":4}],"signatures":[{"id":5323,"name":"evaluate","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Evaluates the given "},{"kind":"code","text":"`pageFunction`"},{"kind":"text","text":" in the context of the current frame.\\nSee ["},{"kind":"code","text":"`playwright.Frame.evaluate`"},{"kind":"text","text":"](https://playwright.dev/docs/api/class-frame#frame-evaluate)."}]},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightRootLocator.ts","line":37,"character":4}],"typeParameter":[{"id":5324,"name":"R","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":5325,"name":"Arguments","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":5326,"name":"pageFunction","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/structs.d.ts","qualifiedName":"PageFunction"},"typeArguments":[{"type":"reference","target":5325,"name":"Arguments","package":"@serenity-js/playwright","refersToTypeParameter":true},{"type":"reference","target":5324,"name":"R","package":"@serenity-js/playwright","refersToTypeParameter":true}],"name":"PageFunction","package":"playwright-core"}},{"id":5327,"name":"arg","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":5325,"name":"Arguments","package":"@serenity-js/playwright","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":5324,"name":"R","package":"@serenity-js/playwright","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":5328,"name":"switchToFrame","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightRootLocator.ts","line":47,"character":10}],"signatures":[{"id":5329,"name":"switchToFrame","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Switches the current context to the frame identified by the given locator."}]},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightRootLocator.ts","line":47,"character":10}],"parameters":[{"id":5330,"name":"frame","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"RootLocator.switchToFrame"}}],"overwrites":{"type":"reference","target":-1,"name":"RootLocator.switchToFrame"}},{"id":5331,"name":"switchToParentFrame","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightRootLocator.ts","line":55,"character":10}],"signatures":[{"id":5332,"name":"switchToParentFrame","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Switches the current context to the parent frame of the current frame."}]},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightRootLocator.ts","line":55,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"RootLocator.switchToParentFrame"}}],"overwrites":{"type":"reference","target":-1,"name":"RootLocator.switchToParentFrame"}},{"id":5333,"name":"switchToMainFrame","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightRootLocator.ts","line":62,"character":10}],"signatures":[{"id":5334,"name":"switchToMainFrame","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Switches the context to the top-level frame."}]},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightRootLocator.ts","line":62,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"RootLocator.switchToMainFrame"}}],"overwrites":{"type":"reference","target":-1,"name":"RootLocator.switchToMainFrame"}},{"id":5335,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/RootLocator.ts","line":21,"character":4}],"signatures":[{"id":5336,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/RootLocator.ts","line":21,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"RootLocator.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"RootLocator.toString"}},{"id":5337,"name":"[custom]","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/RootLocator.ts","line":22,"character":4}],"type":{"type":"reflection","declaration":{"id":5338,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/RootLocator.ts","line":22,"character":27}],"signatures":[{"id":5339,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/RootLocator.ts","line":22,"character":27}],"parameters":[{"id":5340,"name":"depth","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}},{"id":5341,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/util.d.ts","qualifiedName":"\\"util\\".InspectOptionsStylized"},"name":"InspectOptionsStylized","package":"@types/node","qualifiedName":"\\"util\\".InspectOptionsStylized"}},{"id":5342,"name":"inspect","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"query","queryType":{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/util.d.ts","qualifiedName":"\\"util\\".inspect"},"name":"inspect","package":"@types/node","qualifiedName":"\\"util\\".inspect","preferValues":true}}}],"type":{"type":"intrinsic","name":"string"}}]}},"inheritedFrom":{"type":"reference","target":-1,"name":"RootLocator.[custom]"}}],"groups":[{"title":"Constructors","children":[5313]},{"title":"Properties","children":[5337]},{"title":"Methods","children":[5318,5320,5322,5328,5331,5333,5335]}],"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightRootLocator.ts","line":13,"character":13}],"extendedTypes":[{"type":"reference","target":4709,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"playwright.Locator","package":"playwright-core","qualifiedName":"Locator"}],"name":"RootLocator","package":"@serenity-js/web"}],"permalink":"/api/playwright/class/PlaywrightRootLocator","categories":[],"previousId":5218}],"groups":[{"title":"Abilities","children":[5185]},{"title":"Configuration","children":[5181]},{"title":"Models","children":[5343,5390,5440,5489,5594,5710,5218,5312]}],"sources":[{"fileName":"packages/playwright/src/index.ts","line":1,"character":0}],"permalink":"/api/playwright"},"urlSlug":"playwright"}],"packageName":"@serenity-js/playwright","packageVersion":"3.32.1"},{"entryPoints":[{"index":true,"label":"index","reflection":{"id":66,"name":"@serenity-js/playwright-test","variant":"declaration","kind":2,"flags":{"isExternal":true},"children":[{"id":24793,"name":"PlaywrightTestConfig","variant":"declaration","kind":2097152,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Convenience alias for [PlaywrightTestConfig](https://playwright.dev/docs/test-configuration) object\\nthat includes ["},{"kind":"code","text":"`SerenityFixtures`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityFixtures/) and\\n["},{"kind":"code","text":"`SerenityWorkerFixtures`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityWorkerFixtures/) and allows for any other custom options when needed.\\n\\n#### Example\\nConfiguring Playwright Test using the standard "},{"kind":"code","text":"`PlaywrightTestConfig`"},{"kind":"text","text":" from "},{"kind":"code","text":"`@playwright/test`"},{"kind":"text","text":":\\n\\n"},{"kind":"code","text":"```typescript\\n// playwright.config.ts\\nimport type { PlaywrightTestConfig } from \'@playwright/test\'\\nimport type { SerenityFixtures, SerenityWorkerFixtures } from \'@serenity-js/playwright-test\'\\n\\nconst config: PlaywrightTestConfig<SerenityFixtures & MyCustomOptions, SerenityWorkerFixtures> = {\\n    // ...\\n}\\n\\nexport default config\\n```"},{"kind":"text","text":"\\n\\nSimplified configuration using Serenity/JS "},{"kind":"code","text":"`PlaywrightTestConfig`"},{"kind":"text","text":" from "},{"kind":"code","text":"`@serenity-js/playwright-test`"},{"kind":"text","text":":\\n\\n"},{"kind":"code","text":"```typescript\\n// playwright.config.ts\\nimport type { PlaywrightTestConfig } from \'@serenity-js/playwright-test\'\\n\\nconst config: PlaywrightTestConfig<MyCustomOptions> = {\\n   // ...\\n}\\nexport default config\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`SerenityFixtures`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityFixtures/)\\n- ["},{"kind":"code","text":"`SerenityWorkerFixtures`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityWorkerFixtures/)\\n- ["},{"kind":"code","text":"`SerenityReporterForPlaywrightTestConfig`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityReporterForPlaywrightTestConfig/)\\n- [Playwright Test configuration](https://playwright.dev/docs/test-configuration)"}]},"sources":[{"fileName":"packages/playwright-test/src/api/PlaywrightTestConfig.ts","line":43,"character":12}],"typeParameters":[{"id":24794,"name":"TestArgs","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"object"}},{"id":24795,"name":"WorkerArgs","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"object"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestConfig"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":24796,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":24794,"name":"TestArgs","package":"@serenity-js/playwright-test","refersToTypeParameter":true}]},{"type":"intersection","types":[{"type":"reference","target":24804,"name":"SerenityWorkerFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":24795,"name":"WorkerArgs","package":"@serenity-js/playwright-test","refersToTypeParameter":true}]}],"name":"BasePlaywrightTestConfig","package":"playwright","qualifiedName":"PlaywrightTestConfig"},"permalink":"/api/playwright-test#PlaywrightTestConfig","categories":[],"previousId":24790,"nextId":24820},{"id":24796,"name":"SerenityFixtures","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Serenity/JS-specific [Playwright Test fixtures](https://playwright.dev/docs/test-fixtures)\\ninjected into your [test scenarios](/api/playwright-test/function/it/).\\n\\n### Configuring Serenity/JS using a test file\\n\\n"},{"kind":"code","text":"```typescript\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { describe, it, test } from \'@serenity-js/playwright-test\'\\nimport { Photographer, TakePhotosOfFailures } from \'@serenity-js/web\'\\n\\ndescribe(`Recording items`, () => {\\n\\n    test.use({\\n        defaultActorName: \'Serena\',\\n        crew: [\\n            Photographer.whoWill(TakePhotosOfFailures),\\n        ],\\n\\n        // Register a custom cast of Serenity/JS actors to replace the default one\\n        actors: async ({ browser, contextOptions, extraContextOptions, baseURL }, use) => {\\n             const cast = Cast.where(actor =>\\n                 actor.whoCan(\\n                     BrowseTheWebWithPlaywright.using(browser, contextOptions, extraContextOptions),\\n                     TakeNotes.usingAnEmptyNotepad(),\\n                     CallAnApi.at(baseURL),\\n                 )\\n             )\\n\\n             await use(cast)\\n        },\\n    })\\n\\n    describe(`Todo List App`, () => {\\n\\n        it(`should allow me to add a todo item`, async ({ actor }) => {\\n            await actor.attemptsTo(\\n                startWithAnEmptyList(),\\n\\n                recordItem(\'Buy some milk\'),\\n\\n                Ensure.that(itemNames(), equals([\\n                    \'Buy some milk\',\\n                ])),\\n            )\\n        })\\n    })\\n})\\n```"},{"kind":"text","text":"\\n\\n### Configuring Serenity/JS using Playwright configuration file\\n\\n"},{"kind":"code","text":"```typescript\\n// playwright.config.ts\\nimport { defineConfig } from \'@playwright/test\'\\nimport type { Cast, TakeNotes } from \'@serenity-js/core\'\\nimport type { BrowseTheWebWithPlaywright } from \'@serenity-js/playwright\'\\nimport type { SerenityFixtures, SerenityWorkerFixtures } from \'@serenity-js/playwright-test\'\\nimport type { CallAnApi } from \'@serenity-js/rest\'\\n\\nexport default defineConfig<SerenityFixtures & MyCustomOptions, SerenityWorkerFixtures> = {\\n\\n    // Register Serenity/JS reporter for Playwright Test\\n    // to enable integration with Serenity/JS stage crew members\\n    // and have them instantiated in the Playwright reporter process\\n    reporter: [\\n        [ \'@serenity-js/playwright-test\', {\\n            // Stage crew members instantiated in the test reporter process\\n            crew: [\\n                \'@serenity-js/serenity-bdd\',\\n                \'@serenity-js/console-reporter\',\\n                [ \'@serenity-js/core:ArtifactArchiver\', { outputDirectory: \'target/site/serenity\' } ],\\n            ]\\n        }]\\n    ],\\n\\n    use: {\\n\\n        // Register Serenity/JS stage crew members\\n        // and have them instantiated in Playwright Test worker processes\\n        crew: [\\n            [ \'@serenity-js/web:Photographer\', { strategy: \'TakePhotosOfFailures\' } ]\\n        ],\\n\\n        // Name to be given to an actor injected via `actor` fixture\\n        defaultActorName: \'Alice\',\\n\\n        // Any other Playwright options\\n        baseURL: \'https://todo-app.serenity-js.org/\',\\n        video: \'on-first-retry\',\\n        trace: \'on-first-retry\',\\n    },\\n})\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- [Using Serenity/JS with Playwright Test](/handbook/test-runners/playwright-test/)\\n- ["},{"kind":"code","text":"`PlaywrightTestConfig`"},{"kind":"text","text":"](/api/playwright-test/#PlaywrightTestConfig)\\n- ["},{"kind":"code","text":"`Cast`"},{"kind":"text","text":"](/api/core/class/Cast/)\\n- ["},{"kind":"code","text":"`SerenityFixtures`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityFixtures/)"}]},"children":[{"id":24797,"name":"defaultActorName","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the name given to the default Serenity/JS ["},{"kind":"code","text":"`actor`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityFixtures/#actor)\\ninjected into a [test scenario](/api/playwright-test/function/it/).\\n\\n#### Learn more\\n- Declaring a Serenity/JS [test scenario](/api/playwright-test/function/it/)\\n- ["},{"kind":"code","text":"`SerenityFixtures`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityFixtures/)"}]},"sources":[{"fileName":"packages/playwright-test/src/api/serenity-fixtures.ts","line":123,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":24798,"name":"crew","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the [stage crew members](/api/core/class/SerenityConfig/#crew)\\nto be instantiated in Playwright Test worker processes.\\n\\n:::info Did you know?\\nBy default, Serenity/JS registers a ["},{"kind":"code","text":"`Photographer`"},{"kind":"text","text":"](/api/web/class/Photographer/).whoWill(["},{"kind":"code","text":"`TakePhotosOfFailures`"},{"kind":"text","text":"](/api/web/class/TakePhotosOfFailures/)),\\nso that any test failures are automatically accompanied by a screenshot.\\n\\nIf you prefer a different behaviour, you can configure the "},{"kind":"code","text":"`crew`"},{"kind":"text","text":" with an empty array to disable taking screenshots altogether ("},{"kind":"code","text":"`crew: []`"},{"kind":"text","text":"),\\nor with a ["},{"kind":"code","text":"`Photographer`"},{"kind":"text","text":"](/api/web/class/Photographer/) who uses a different ["},{"kind":"code","text":"`PhotoTakingStrategy`"},{"kind":"text","text":"](/api/web/class/PhotoTakingStrategy/), like to ["},{"kind":"code","text":"`TakePhotosOfInteractions`"},{"kind":"text","text":"](/api/web/class/TakePhotosOfInteractions/).\\n:::\\n\\n#### Example\\n\\n"},{"kind":"code","text":"```typescript\\n// playwright.config.ts\\nimport type { SerenityFixtures, SerenityWorkerFixtures } from \'@serenity-js/playwright-test\'\\nimport { defineConfig } from \'@playwright/test\'\\n\\nexport default defineConfig<SerenityFixtures, SerenityWorkerFixtures>({\\n    use: {\\n        crew: [\\n            [ \'@serenity-js/web:Photographer\', { strategy: \'TakePhotosOfFailures\' } ]\\n        ],\\n    },\\n});\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`SerenityConfig.crew`"},{"kind":"text","text":"](/api/core/class/SerenityConfig/#crew)"}]},"sources":[{"fileName":"packages/playwright-test/src/api/serenity-fixtures.ts","line":156,"character":4}],"type":{"type":"array","elementType":{"type":"union","types":[{"type":"reference","target":2241,"name":"StageCrewMember","package":"@serenity-js/core"},{"type":"reference","target":2248,"typeArguments":[{"type":"reference","target":2076,"name":"ListensToDomainEvents","package":"@serenity-js/core"}],"name":"StageCrewMemberBuilder","package":"@serenity-js/core"},{"type":"reference","target":84,"name":"ClassDescription","package":"@serenity-js/core"}]}}},{"id":24799,"name":"cueTimeout","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Sets the ["},{"kind":"code","text":"`cueTimeout`"},{"kind":"text","text":"](/api/core/class/SerenityConfig/#cueTimeout) to a given [duration](/api/core/class/Duration/) or a numeric value in milliseconds.\\nDefaults to **5 seconds**.\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`SerenityConfig.cueTimeout`"},{"kind":"text","text":"](/api/core/class/SerenityConfig/#cueTimeout)\\n- ["},{"kind":"code","text":"`Discardable`"},{"kind":"text","text":"](/api/core/interface/Discardable/)\\n- ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/)"}]},"sources":[{"fileName":"packages/playwright-test/src/api/serenity-fixtures.ts","line":167,"character":4}],"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"reference","target":1795,"name":"Duration","package":"@serenity-js/core"}]}},{"id":24800,"name":"interactionTimeout","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The maximum default amount of time allowed for interactions such as ["},{"kind":"code","text":"`Wait.until`"},{"kind":"text","text":"](/api/core/class/Wait/#until)\\nto complete.\\n\\nDefaults to **5 seconds**, can be overridden per interaction.\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Wait.until`"},{"kind":"text","text":"](/api/core/class/Wait/#until)"}]},"sources":[{"fileName":"packages/playwright-test/src/api/serenity-fixtures.ts","line":178,"character":4}],"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"reference","target":1795,"name":"Duration","package":"@serenity-js/core"}]}},{"id":24801,"name":"extraContextOptions","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Convenience properties to be used with the [ability](/api/core/class/Ability/)\\nto ["},{"kind":"code","text":"`BrowseTheWebWithPlaywright`"},{"kind":"text","text":"](/api/playwright/class/BrowseTheWebWithPlaywright/),\\nin addition to Playwright [BrowserContextOptions](https://playwright.dev/docs/api/class-testoptions#test-options-context-options):\\n\\n- ["},{"kind":"code","text":"`defaultNavigationTimeout`"},{"kind":"text","text":"](/api/playwright/interface/ExtraBrowserContextOptions/#defaultNavigationTimeout)\\n- ["},{"kind":"code","text":"`defaultNavigationWaitUntil`"},{"kind":"text","text":"](/api/playwright/interface/ExtraBrowserContextOptions/#defaultNavigationWaitUntil)\\n- ["},{"kind":"code","text":"`defaultTimeout`"},{"kind":"text","text":"](/api/playwright/interface/ExtraBrowserContextOptions/#defaultTimeout)\\n\\n#### Using "},{"kind":"code","text":"`extraContextOptions`"},{"kind":"text","text":" with the default cast of Serenity/JS actors\\n\\n"},{"kind":"code","text":"```typescript\\n// playwright.config.ts\\nimport type { SerenityFixtures, SerenityWorkerFixtures } from \'@serenity-js/playwright-test\'\\nimport { defineConfig } from \'@playwright/test\'\\n\\nexport default defineConfig<SerenityFixtures, SerenityWorkerFixtures>({\\n    use: {\\n        extraContextOptions: {\\n            defaultNavigationTimeout: 30_000,\\n        }\\n\\n        // Since `actors` property is not defined,\\n        // `extraContextOptions` will be passed to the default cast of Serenity/JS actors\\n        // and injected into the ability to `BrowseTheWebWithPlaywright`\\n        // that each actor receives.\\n    },\\n})\\n```"},{"kind":"text","text":"\\n\\n#### Using "},{"kind":"code","text":"`extraContextOptions`"},{"kind":"text","text":" with a custom cast of Serenity/JS actors\\n\\n"},{"kind":"code","text":"```typescript\\n// playwright.config.ts\\nimport type { SerenityFixtures, SerenityWorkerFixtures } from \'@serenity-js/playwright-test\'\\nimport { defineConfig } from \'@playwright/test\'\\n\\nexport default defineConfig<SerenityFixtures, SerenityWorkerFixtures>({\\n    use: {\\n        extraContextOptions: {\\n            defaultNavigationTimeout: 30_000,\\n        }\\n\\n        // Custom cast of actors receives the default `contextOptions` and\\n        // the `extraContextOptions` with the additional Serenity/JS properties.\\n        actors: async ({ browser, contextOptions, extraContextOptions }, use) => {\\n            const cast = Cast.where(actor => actor.whoCan(\\n                BrowseTheWebWithPlaywright.using(browser, contextOptions, extraContextOptions),\\n                TakeNotes.usingAnEmptyNotepad(),\\n            ))\\n\\n            await use(cast)\\n        },\\n    },\\n})\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`SerenityFixtures`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityFixtures/)\\n- [Playwright Browser Context options](https://playwright.dev/docs/api/class-testoptions#test-options-context-options)\\n- [Playwright Test fixtures](https://playwright.dev/docs/test-fixtures)"}]},"sources":[{"fileName":"packages/playwright-test/src/api/serenity-fixtures.ts","line":242,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Partial"},"typeArguments":[{"type":"reference","target":5181,"name":"ExtraBrowserContextOptions","package":"@serenity-js/playwright"}],"name":"Partial","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#partialtype"}},{"id":24802,"name":"actors","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A cast of Serenity/JS actors to be used instead of the default cast\\nwhen instantiating ["},{"kind":"code","text":"`actor`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityFixtures/#actor)\\nand invoking ["},{"kind":"code","text":"`actorCalled`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityFixtures/#actorCalled).\\n\\n:::info Did you know?\\nWhen you use "},{"kind":"code","text":"`@serenity-js/playwright-test`"},{"kind":"text","text":" [test APIs](/api/playwright-test/function/it/), Serenity/JS already provides a default cast of actors for you.\\nEach one of the default actors receives [abilities](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWebWithPlaywright`"},{"kind":"text","text":"](/api/playwright/class/BrowseTheWebWithPlaywright/) and ["},{"kind":"code","text":"`TakeNotes.usingAnEmptyNotepad`"},{"kind":"text","text":"](/api/core/class/TakeNotes/#usingAnEmptyNotepad).\\n\\nThe default abilities should be sufficient in most web testing scenarios. However, you might want to override this default configuration\\nwhen you need your actors to [interact with REST APIs](/api/rest/class/CallAnApi/),\\n[manage local servers](/api/local-server/class/ManageALocalServer/),\\nstart with a notepad that has some [initial state](/api/core/class/TakeNotes/#using),\\nor receive [custom abilities](/api/core/class/Ability/).\\n:::\\n\\n\\n#### Overriding the default cast of Serenity/JS actors\\n\\n"},{"kind":"code","text":"```typescript\\nimport { Cast, TakeNotes } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { BrowseTheWebWithPlaywright } from \'@serenity-js/playwright\'\\nimport { describe, it, test } from \'@serenity-js/playwright-test\'\\n\\ndescribe(`Recording items`, () => {\\n\\n    test.use({\\n        extraContextOptions: {\\n            defaultNavigationTimeout: 30_000,\\n        },\\n\\n        defaultActorName: \'Serena\',\\n        actors: async ({ browser, contextOptions, extraContextOptions }, use) => {\\n            const cast = Cast.where(actor =>\\n                actor.whoCan(\\n                    BrowseTheWebWithPlaywright.using(browser, contextOptions, extraContextOptions),\\n                    TakeNotes.usingAnEmptyNotepad(),\\n                )\\n            )\\n\\n            // Make sure to pass your custom cast to Playwright `use` callback\\n            await use(cast)\\n        },\\n    })\\n\\n    describe(`Todo List App`, () => {\\n\\n        it(`should allow me to add a todo item`, async ({ actor }) => {\\n            await actor.attemptsTo(\\n                startWithAnEmptyList(),\\n\\n                recordItem(\'Buy some milk\'),\\n\\n                Ensure.that(itemNames(), equals([\\n                    \'Buy some milk\',\\n                ])),\\n            )\\n        })\\n    })\\n})\\n\\n\\n#### Learn more\\n- Declaring a Serenity/JS [test scenario](/api/playwright-test/function/it/)\\n- [`SerenityFixtures`](/api/playwright-test/interface/SerenityFixtures/)"}]},"sources":[{"fileName":"packages/playwright-test/src/api/serenity-fixtures.ts","line":311,"character":4}],"type":{"type":"reference","target":2002,"name":"Cast","package":"@serenity-js/core"}},{"id":24803,"name":"actor","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Default ["},{"kind":"code","text":"`actor`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityFixtures/#actor) injected into a [test scenario](/api/playwright-test/function/it/).\\n\\nUsing "},{"kind":"code","text":"`actor`"},{"kind":"text","text":" fixture is equivalent to invoking ["},{"kind":"code","text":"`actorCalled`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityFixtures/#actorCalled)\\nwith ["},{"kind":"code","text":"`defaultActorName`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityFixtures/#defaultActorName).\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`actorCalled`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityWorkerFixtures/#actorCalled)\\n- ["},{"kind":"code","text":"`defaultActorName`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityFixtures/#defaultActorName)\\n- Declaring a Serenity/JS [test scenario](/api/playwright-test/function/it/)"}]},"sources":[{"fileName":"packages/playwright-test/src/api/serenity-fixtures.ts","line":324,"character":4}],"type":{"type":"reference","target":655,"name":"Actor","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[24797,24798,24799,24800,24801,24802,24803]}],"sources":[{"fileName":"packages/playwright-test/src/api/serenity-fixtures.ts","line":113,"character":17}],"permalink":"/api/playwright-test/interface/SerenityFixtures","categories":[],"previousId":24814,"nextId":24804},{"id":24804,"name":"SerenityWorkerFixtures","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Serenity/JS-specific [Playwright Test fixtures](https://playwright.dev/docs/test-fixtures)\\ninjected into your [test scenarios](/api/playwright-test/function/it/).\\n\\n## Example test scenario\\n\\n"},{"kind":"code","text":"```typescript\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { describe, it, test } from \'@serenity-js/playwright-test\'\\nimport { Photographer, TakePhotosOfFailures } from \'@serenity-js/web\'\\n\\ndescribe(`Recording items`, () => {\\n\\n    test.use({\\n        defaultActorName: \'Serena\',\\n        crew: [\\n            Photographer.whoWill(TakePhotosOfFailures),\\n        ],\\n    })\\n\\n    describe(`Todo List App`, () => {\\n\\n        it(`should allow me to add a todo item`, async ({ actor }) => {\\n            await actor.attemptsTo(\\n                startWithAnEmptyList(),\\n\\n                recordItem(\'Buy some milk\'),\\n\\n                Ensure.that(itemNames(), equals([\\n                    \'Buy some milk\',\\n                ])),\\n            )\\n        })\\n    })\\n})\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- [Using Serenity/JS with Playwright Test](/handbook/test-runners/playwright-test/)"}]},"children":[{"id":24805,"name":"platform","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Name and version of the operating system that Playwright Test worker process runs on."}]},"sources":[{"fileName":"packages/playwright-test/src/api/serenity-fixtures.ts","line":371,"character":4}],"type":{"type":"reflection","declaration":{"id":24806,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":24807,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/serenity-fixtures.ts","line":371,"character":16}],"type":{"type":"intrinsic","name":"string"}},{"id":24808,"name":"version","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/serenity-fixtures.ts","line":371,"character":30}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[24807,24808]}],"sources":[{"fileName":"packages/playwright-test/src/api/serenity-fixtures.ts","line":371,"character":14}]}}},{"id":24809,"name":"serenity","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Retrieves the root object of the Serenity/JS framework."}]},"sources":[{"fileName":"packages/playwright-test/src/api/serenity-fixtures.ts","line":376,"character":4}],"type":{"type":"reference","target":1951,"name":"Serenity","package":"@serenity-js/core"}},{"id":24810,"name":"actorCalled","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Uses the provided [cast](/api/core/class/Cast/) of ["},{"kind":"code","text":"`actors`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityFixtures/#actors) to instantiate an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) called "},{"kind":"code","text":"`name`"},{"kind":"text","text":"\\nand inject it into a [test scenario](/api/playwright-test/function/it/).\\n\\nRetrieves an existing actor if one has already been instantiated.\\n\\n#### Learn more\\n- Declaring a Serenity/JS [test scenario](/api/playwright-test/function/it/)\\n- ["},{"kind":"code","text":"`SerenityFixtures.actors`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityFixtures/#actors)"}]},"sources":[{"fileName":"packages/playwright-test/src/api/serenity-fixtures.ts","line":390,"character":4}],"type":{"type":"reflection","declaration":{"id":24811,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/serenity-fixtures.ts","line":390,"character":17}],"signatures":[{"id":24812,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/serenity-fixtures.ts","line":390,"character":17}],"parameters":[{"id":24813,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":655,"name":"Actor","package":"@serenity-js/core"}}]}}}],"groups":[{"title":"Properties","children":[24805,24809,24810]}],"sources":[{"fileName":"packages/playwright-test/src/api/serenity-fixtures.ts","line":367,"character":17}],"permalink":"/api/playwright-test/interface/SerenityWorkerFixtures","categories":[],"previousId":24796,"nextId":24790},{"id":24819,"name":"fixtures","variant":"declaration","kind":32,"flags":{"isExternal":true,"isConst":true},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":44,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"Fixtures"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":24796,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","name":"SerenityInternalFixtures","package":"@serenity-js/playwright-test"}]},{"type":"intersection","types":[{"type":"reference","target":24804,"name":"SerenityWorkerFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","name":"SerenityInternalWorkerFixtures","package":"@serenity-js/playwright-test"}]},{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"}]},{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"}]}],"name":"Fixtures","package":"playwright"},"defaultValue":"...","permalink":"/api/playwright-test#fixtures","categories":[],"previousId":24820},{"id":24820,"name":"TestApi","variant":"declaration","kind":2097152,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Serenity/JS BDD-style test API created by ["},{"kind":"code","text":"`useBase`"},{"kind":"text","text":"](/api/playwright-test/function/useBase/)."}]},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":250,"character":12}],"typeParameters":[{"id":24830,"name":"TestArgs","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"}},{"id":24831,"name":"WorkerArgs","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"}}],"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Pick"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestType"},"typeArguments":[{"type":"reference","target":24830,"name":"TestArgs","package":"@serenity-js/playwright-test","refersToTypeParameter":true},{"type":"reference","target":24831,"name":"WorkerArgs","package":"@serenity-js/playwright-test","refersToTypeParameter":true}],"name":"TestType","package":"playwright"},{"type":"union","types":[{"type":"literal","value":"describe"},{"type":"literal","value":"beforeAll"},{"type":"literal","value":"beforeEach"},{"type":"literal","value":"afterEach"},{"type":"literal","value":"afterAll"},{"type":"literal","value":"expect"}]}],"name":"Pick","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#picktype-keys"},{"type":"reflection","declaration":{"id":24821,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":24822,"name":"useFixtures","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates a Serenity/JS BDD-style test API around the default Playwright [base test](https://playwright.dev/docs/test-fixtures)\\nand using custom test fixtures.\\n\\n"},{"kind":"code","text":"```typescript\\nimport { useFixtures } from \'@serenity-js/playwright-test\'\\nimport { Log } from \'@serenity-js/core\'\\n\\nconst { describe, it } = useFixtures<{ message: string }>({\\n  message: \'Hello world!\'\\n})\\n\\ndescribe(\'Serenity/JS useFixtures\', () => {\\n\\n  it(\'enables injecting custom test fixtures into test scenarios\', async ({ actor, message }) => {\\n    await actor.attemptsTo(\\n      Log.the(message),\\n    )\\n  })\\n})\\n```"},{"kind":"text","text":"\\n\\nShorthand for ["},{"kind":"code","text":"`useBase`"},{"kind":"text","text":"](/api/playwright-test/function/useBase/)"}]},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":277,"character":8}],"type":{"type":"reflection","declaration":{"id":24823,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":277,"character":21}],"signatures":[{"id":24824,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"typeParameter":[{"id":24826,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"}},{"id":24827,"name":"W","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"},"default":{"type":"intrinsic","name":"object"}}],"parameters":[{"id":24825,"name":"customFixtures","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"Fixtures"},"typeArguments":[{"type":"reference","target":24826,"name":"T","package":"@serenity-js/playwright-test","refersToTypeParameter":true},{"type":"reference","target":24827,"name":"W","package":"@serenity-js/playwright-test","refersToTypeParameter":true},{"type":"reference","target":24830,"name":"TestArgs","package":"@serenity-js/playwright-test","refersToTypeParameter":true},{"type":"reference","target":24831,"name":"WorkerArgs","package":"@serenity-js/playwright-test","refersToTypeParameter":true}],"name":"Fixtures","package":"playwright"}}],"type":{"type":"reference","target":24820,"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":24830,"name":"TestArgs","package":"@serenity-js/playwright-test","refersToTypeParameter":true},{"type":"reference","target":24826,"name":"T","package":"@serenity-js/playwright-test","refersToTypeParameter":true}]},{"type":"intersection","types":[{"type":"reference","target":24831,"name":"WorkerArgs","package":"@serenity-js/playwright-test","refersToTypeParameter":true},{"type":"reference","target":24827,"name":"W","package":"@serenity-js/playwright-test","refersToTypeParameter":true}]}],"name":"TestApi","package":"@serenity-js/playwright-test"}}]}}},{"id":24828,"name":"it","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":281,"character":8}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestType"},"typeArguments":[{"type":"reference","target":24830,"name":"TestArgs","package":"@serenity-js/playwright-test","refersToTypeParameter":true},{"type":"reference","target":24831,"name":"WorkerArgs","package":"@serenity-js/playwright-test","refersToTypeParameter":true}],"name":"TestType","package":"playwright"}},{"id":24829,"name":"test","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":282,"character":8}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestType"},"typeArguments":[{"type":"reference","target":24830,"name":"TestArgs","package":"@serenity-js/playwright-test","refersToTypeParameter":true},{"type":"reference","target":24831,"name":"WorkerArgs","package":"@serenity-js/playwright-test","refersToTypeParameter":true}],"name":"TestType","package":"playwright"}}],"groups":[{"title":"Properties","children":[24822,24828,24829]}],"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":252,"character":4}]}}]},"permalink":"/api/playwright-test#TestApi","categories":[],"previousId":24793,"nextId":24819},{"id":24832,"name":"it","variant":"declaration","kind":64,"flags":{"isExternal":true},"children":[{"id":24840,"name":"only","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":24841,"name":"only","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a focused test. If there are some focused tests or suites, all of them will be run but nothing else.\\n- "},{"kind":"code","text":"`test.only(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.only(title, details, body)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.only(\'focus this test\', async ({ page }) => {\\n  // Run only focused tests in the entire project.\\n});\\n```"}]},"sources":[],"parameters":[{"id":24842,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":24843,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test body that takes one or two arguments: an object with fixtures and optional\\n[TestInfo](https://playwright.dev/docs/api/class-testinfo)."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestBody"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":24796,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"reference","target":24804,"name":"SerenityWorkerFixtures","package":"@serenity-js/playwright-test"}]}],"name":"TestBody","package":"playwright"}}],"type":{"type":"intrinsic","name":"void"}},{"id":24844,"name":"only","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a focused test. If there are some focused tests or suites, all of them will be run but nothing else.\\n- "},{"kind":"code","text":"`test.only(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.only(title, details, body)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.only(\'focus this test\', async ({ page }) => {\\n  // Run only focused tests in the entire project.\\n});\\n```"}]},"sources":[],"parameters":[{"id":24845,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":24846,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"See [test.(call)(title[, details, body])](https://playwright.dev/docs/api/class-test#test-call) for test details\\ndescription."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestDetails"},"name":"TestDetails","package":"playwright"}},{"id":24847,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test body that takes one or two arguments: an object with fixtures and optional\\n[TestInfo](https://playwright.dev/docs/api/class-testinfo)."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestBody"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":24796,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"reference","target":24804,"name":"SerenityWorkerFixtures","package":"@serenity-js/playwright-test"}]}],"name":"TestBody","package":"playwright"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":24848,"name":"describe","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a group of tests.\\n- "},{"kind":"code","text":"`test.describe(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe(callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a group of tests with a title. The title will be visible in the test report as a part of each\\ntest\'s title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe(\'two tests\', () => {\\n  test(\'one\', async ({ page }) => {\\n    // ...\\n  });\\n\\n  test(\'two\', async ({ page }) => {\\n    // ...\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\n**Anonymous group**\\n\\nYou can also declare a test group without a title. This is convenient to give a group of tests a common option with\\n[test.use(options)](https://playwright.dev/docs/api/class-test#test-use).\\n\\n"},{"kind":"code","text":"```js\\ntest.describe(() => {\\n  test.use({ colorScheme: \'dark\' });\\n\\n  test(\'one\', async ({ page }) => {\\n    // ...\\n  });\\n\\n  test(\'two\', async ({ page }) => {\\n    // ...\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\n**Tags**\\n\\nYou can tag all tests in a group by providing additional details. Note that each tag must start with "},{"kind":"code","text":"`@`"},{"kind":"text","text":" symbol.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.describe(\'two tagged tests\', {\\n  tag: \'@smoke\',\\n}, () => {\\n  test(\'one\', async ({ page }) => {\\n    // ...\\n  });\\n\\n  test(\'two\', async ({ page }) => {\\n    // ...\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\nLearn more about [tagging](https://playwright.dev/docs/test-annotations#tag-tests).\\n\\n**Annotations**\\n\\nYou can annotate all tests in a group by providing additional details.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.describe(\'two annotated tests\', {\\n  annotation: {\\n    type: \'issue\',\\n    description: \'https://github.com/microsoft/playwright/issues/23180\',\\n  },\\n}, () => {\\n  test(\'one\', async ({ page }) => {\\n    // ...\\n  });\\n\\n  test(\'two\', async ({ page }) => {\\n    // ...\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\nLearn more about [test annotations](https://playwright.dev/docs/test-annotations)."}]},"sources":[],"type":{"type":"reflection","declaration":{"id":24849,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":24850,"name":"only","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":24851,"name":"only","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a focused group of tests. If there are some focused tests or suites, all of them will be run but nothing\\nelse.\\n- "},{"kind":"code","text":"`test.describe.only(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.only(callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.only(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.only(\'focused group\', () => {\\n  test(\'in the focused group\', async ({ page }) => {\\n    // This test will run\\n  });\\n});\\ntest(\'not in the focused group\', async ({ page }) => {\\n  // This test will not run\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.only(() => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":24852,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Group title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":24853,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.only([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-only).\\nAny tests added in this callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":24854,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":24855,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":24856,"name":"only","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a focused group of tests. If there are some focused tests or suites, all of them will be run but nothing\\nelse.\\n- "},{"kind":"code","text":"`test.describe.only(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.only(callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.only(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.only(\'focused group\', () => {\\n  test(\'in the focused group\', async ({ page }) => {\\n    // This test will run\\n  });\\n});\\ntest(\'not in the focused group\', async ({ page }) => {\\n  // This test will not run\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.only(() => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":24857,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.only([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-only).\\nAny tests added in this callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":24858,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":24859,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":24860,"name":"only","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a focused group of tests. If there are some focused tests or suites, all of them will be run but nothing\\nelse.\\n- "},{"kind":"code","text":"`test.describe.only(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.only(callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.only(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.only(\'focused group\', () => {\\n  test(\'in the focused group\', async ({ page }) => {\\n    // This test will run\\n  });\\n});\\ntest(\'not in the focused group\', async ({ page }) => {\\n  // This test will not run\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.only(() => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":24861,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Group title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":24862,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"See [test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) for\\ndetails description."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestDetails"},"name":"TestDetails","package":"playwright"}},{"id":24863,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.only([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-only).\\nAny tests added in this callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":24864,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":24865,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":24866,"name":"skip","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":24867,"name":"skip","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a skipped test group, similarly to\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe). Tests in the\\nskipped group are never run.\\n- "},{"kind":"code","text":"`test.describe.skip(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.skip(title)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.skip(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.skip(\'skipped group\', () => {\\n  test(\'example\', async ({ page }) => {\\n    // This test will not run\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.skip(() => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":24868,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Group title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":24869,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.skip(title[, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-skip).\\nAny tests added in this callback will belong to the group, and will not be run."}]},"type":{"type":"reflection","declaration":{"id":24870,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":24871,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":24872,"name":"skip","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a skipped test group, similarly to\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe). Tests in the\\nskipped group are never run.\\n- "},{"kind":"code","text":"`test.describe.skip(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.skip(title)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.skip(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.skip(\'skipped group\', () => {\\n  test(\'example\', async ({ page }) => {\\n    // This test will not run\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.skip(() => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":24873,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.skip(title[, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-skip).\\nAny tests added in this callback will belong to the group, and will not be run."}]},"type":{"type":"reflection","declaration":{"id":24874,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":24875,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":24876,"name":"skip","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a skipped test group, similarly to\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe). Tests in the\\nskipped group are never run.\\n- "},{"kind":"code","text":"`test.describe.skip(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.skip(title)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.skip(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.skip(\'skipped group\', () => {\\n  test(\'example\', async ({ page }) => {\\n    // This test will not run\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.skip(() => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":24877,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Group title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":24878,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"See [test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) for\\ndetails description."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestDetails"},"name":"TestDetails","package":"playwright"}},{"id":24879,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.skip(title[, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-skip).\\nAny tests added in this callback will belong to the group, and will not be run."}]},"type":{"type":"reflection","declaration":{"id":24880,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":24881,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":24882,"name":"fixme","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":24883,"name":"fixme","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a test group similarly to\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe). Tests in\\nthis group are marked as \\"fixme\\" and will not be executed.\\n- "},{"kind":"code","text":"`test.describe.fixme(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.fixme(callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.fixme(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.fixme(\'broken tests that should be fixed\', () => {\\n  test(\'example\', async ({ page }) => {\\n    // This test will not run\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.fixme(() => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":24884,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Group title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":24885,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.fixme([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-fixme).\\nAny tests added in this callback will belong to the group, and will not be run."}]},"type":{"type":"reflection","declaration":{"id":24886,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":24887,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":24888,"name":"fixme","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a test group similarly to\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe). Tests in\\nthis group are marked as \\"fixme\\" and will not be executed.\\n- "},{"kind":"code","text":"`test.describe.fixme(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.fixme(callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.fixme(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.fixme(\'broken tests that should be fixed\', () => {\\n  test(\'example\', async ({ page }) => {\\n    // This test will not run\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.fixme(() => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":24889,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.fixme([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-fixme).\\nAny tests added in this callback will belong to the group, and will not be run."}]},"type":{"type":"reflection","declaration":{"id":24890,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":24891,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":24892,"name":"fixme","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a test group similarly to\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe). Tests in\\nthis group are marked as \\"fixme\\" and will not be executed.\\n- "},{"kind":"code","text":"`test.describe.fixme(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.fixme(callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.fixme(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.fixme(\'broken tests that should be fixed\', () => {\\n  test(\'example\', async ({ page }) => {\\n    // This test will not run\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.fixme(() => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":24893,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Group title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":24894,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"See [test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) for\\ndetails description."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestDetails"},"name":"TestDetails","package":"playwright"}},{"id":24895,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.fixme([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-fixme).\\nAny tests added in this callback will belong to the group, and will not be run."}]},"type":{"type":"reflection","declaration":{"id":24896,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":24897,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":24898,"name":"serial","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"**NOTE** See [test.describe.configure([options])](https://playwright.dev/docs/api/class-test#test-describe-configure) for\\nthe preferred way of configuring the execution mode.\\n\\nDeclares a group of tests that should always be run serially. If one of the tests fails, all subsequent tests are\\nskipped. All tests in a group are retried together.\\n\\n**NOTE** Using serial is not recommended. It is usually better to make your tests isolated, so they can be run\\nindependently.\\n\\n- "},{"kind":"code","text":"`test.describe.serial(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.serial(title)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.serial(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.serial(\'group\', () => {\\n  test(\'runs first\', async ({ page }) => {});\\n  test(\'runs second\', async ({ page }) => {});\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.serial(() => {\\n  // ...\\n});\\n```"}]},"sources":[],"type":{"type":"reflection","declaration":{"id":24899,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":24900,"name":"only","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":24901,"name":"only","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"**NOTE** See [test.describe.configure([options])](https://playwright.dev/docs/api/class-test#test-describe-configure) for\\nthe preferred way of configuring the execution mode.\\n\\nDeclares a focused group of tests that should always be run serially. If one of the tests fails, all subsequent\\ntests are skipped. All tests in a group are retried together. If there are some focused tests or suites, all of\\nthem will be run but nothing else.\\n\\n**NOTE** Using serial is not recommended. It is usually better to make your tests isolated, so they can be run\\nindependently.\\n\\n- "},{"kind":"code","text":"`test.describe.serial.only(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.serial.only(title)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.serial.only(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.serial.only(\'group\', () => {\\n  test(\'runs first\', async ({ page }) => {\\n  });\\n  test(\'runs second\', async ({ page }) => {\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.serial.only(() => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":24902,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Group title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":24903,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.serial.only(title[, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-serial-only).\\nAny tests added in this callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":24904,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":24905,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":24906,"name":"only","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"**NOTE** See [test.describe.configure([options])](https://playwright.dev/docs/api/class-test#test-describe-configure) for\\nthe preferred way of configuring the execution mode.\\n\\nDeclares a focused group of tests that should always be run serially. If one of the tests fails, all subsequent\\ntests are skipped. All tests in a group are retried together. If there are some focused tests or suites, all of\\nthem will be run but nothing else.\\n\\n**NOTE** Using serial is not recommended. It is usually better to make your tests isolated, so they can be run\\nindependently.\\n\\n- "},{"kind":"code","text":"`test.describe.serial.only(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.serial.only(title)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.serial.only(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.serial.only(\'group\', () => {\\n  test(\'runs first\', async ({ page }) => {\\n  });\\n  test(\'runs second\', async ({ page }) => {\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.serial.only(() => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":24907,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.serial.only(title[, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-serial-only).\\nAny tests added in this callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":24908,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":24909,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":24910,"name":"only","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"**NOTE** See [test.describe.configure([options])](https://playwright.dev/docs/api/class-test#test-describe-configure) for\\nthe preferred way of configuring the execution mode.\\n\\nDeclares a focused group of tests that should always be run serially. If one of the tests fails, all subsequent\\ntests are skipped. All tests in a group are retried together. If there are some focused tests or suites, all of\\nthem will be run but nothing else.\\n\\n**NOTE** Using serial is not recommended. It is usually better to make your tests isolated, so they can be run\\nindependently.\\n\\n- "},{"kind":"code","text":"`test.describe.serial.only(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.serial.only(title)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.serial.only(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.serial.only(\'group\', () => {\\n  test(\'runs first\', async ({ page }) => {\\n  });\\n  test(\'runs second\', async ({ page }) => {\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.serial.only(() => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":24911,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Group title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":24912,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"See [test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) for\\ndetails description."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestDetails"},"name":"TestDetails","package":"playwright"}},{"id":24913,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.serial.only(title[, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-serial-only).\\nAny tests added in this callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":24914,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":24915,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]}],"groups":[{"title":"Methods","children":[24900]}],"sources":[],"signatures":[{"id":24916,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":24917,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Group title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":24918,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.serial([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-serial).\\nAny tests added in this callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":24919,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":24920,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":24921,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":24922,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.serial([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-serial).\\nAny tests added in this callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":24923,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":24924,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":24925,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":24926,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Group title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":24927,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"See [test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) for\\ndetails description."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestDetails"},"name":"TestDetails","package":"playwright"}},{"id":24928,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.serial([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-serial).\\nAny tests added in this callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":24929,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":24930,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"id":24931,"name":"parallel","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"**NOTE** See [test.describe.configure([options])](https://playwright.dev/docs/api/class-test#test-describe-configure) for\\nthe preferred way of configuring the execution mode.\\n\\nDeclares a group of tests that could be run in parallel. By default, tests in a single test file run one after\\nanother, but using\\n[test.describe.parallel([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-parallel)\\nallows them to run in parallel.\\n- "},{"kind":"code","text":"`test.describe.parallel(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.parallel(callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.parallel(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.parallel(\'group\', () => {\\n  test(\'runs in parallel 1\', async ({ page }) => {});\\n  test(\'runs in parallel 2\', async ({ page }) => {});\\n});\\n```"},{"kind":"text","text":"\\n\\nNote that parallel tests are executed in separate processes and cannot share any state or global variables. Each of\\nthe parallel tests executes all relevant hooks.\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.parallel(() => {\\n  // ...\\n});\\n```"}]},"sources":[],"type":{"type":"reflection","declaration":{"id":24932,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":24933,"name":"only","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":24934,"name":"only","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"**NOTE** See [test.describe.configure([options])](https://playwright.dev/docs/api/class-test#test-describe-configure) for\\nthe preferred way of configuring the execution mode.\\n\\nDeclares a focused group of tests that could be run in parallel. This is similar to\\n[test.describe.parallel([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-parallel),\\nbut focuses the group. If there are some focused tests or suites, all of them will be run but nothing else.\\n- "},{"kind":"code","text":"`test.describe.parallel.only(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.parallel.only(callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.parallel.only(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.parallel.only(\'group\', () => {\\n  test(\'runs in parallel 1\', async ({ page }) => {});\\n  test(\'runs in parallel 2\', async ({ page }) => {});\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.parallel.only(() => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":24935,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Group title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":24936,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.parallel.only([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-parallel-only).\\nAny tests added in this callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":24937,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":24938,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":24939,"name":"only","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"**NOTE** See [test.describe.configure([options])](https://playwright.dev/docs/api/class-test#test-describe-configure) for\\nthe preferred way of configuring the execution mode.\\n\\nDeclares a focused group of tests that could be run in parallel. This is similar to\\n[test.describe.parallel([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-parallel),\\nbut focuses the group. If there are some focused tests or suites, all of them will be run but nothing else.\\n- "},{"kind":"code","text":"`test.describe.parallel.only(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.parallel.only(callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.parallel.only(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.parallel.only(\'group\', () => {\\n  test(\'runs in parallel 1\', async ({ page }) => {});\\n  test(\'runs in parallel 2\', async ({ page }) => {});\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.parallel.only(() => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":24940,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.parallel.only([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-parallel-only).\\nAny tests added in this callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":24941,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":24942,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":24943,"name":"only","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"**NOTE** See [test.describe.configure([options])](https://playwright.dev/docs/api/class-test#test-describe-configure) for\\nthe preferred way of configuring the execution mode.\\n\\nDeclares a focused group of tests that could be run in parallel. This is similar to\\n[test.describe.parallel([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-parallel),\\nbut focuses the group. If there are some focused tests or suites, all of them will be run but nothing else.\\n- "},{"kind":"code","text":"`test.describe.parallel.only(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.parallel.only(callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.parallel.only(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.parallel.only(\'group\', () => {\\n  test(\'runs in parallel 1\', async ({ page }) => {});\\n  test(\'runs in parallel 2\', async ({ page }) => {});\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.parallel.only(() => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":24944,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Group title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":24945,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"See [test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) for\\ndetails description."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestDetails"},"name":"TestDetails","package":"playwright"}},{"id":24946,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.parallel.only([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-parallel-only).\\nAny tests added in this callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":24947,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":24948,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]}],"groups":[{"title":"Methods","children":[24933]}],"sources":[],"signatures":[{"id":24949,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":24950,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Group title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":24951,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.parallel([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-parallel).\\nAny tests added in this callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":24952,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":24953,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":24954,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":24955,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.parallel([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-parallel).\\nAny tests added in this callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":24956,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":24957,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":24958,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":24959,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Group title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":24960,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"See [test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) for\\ndetails description."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestDetails"},"name":"TestDetails","package":"playwright"}},{"id":24961,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.parallel([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-parallel).\\nAny tests added in this callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":24962,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":24963,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"id":24964,"name":"configure","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the enclosing scope. Can be executed either on the top level or inside a describe. Configuration applies\\nto the entire scope, regardless of whether it run before or after the test declaration.\\n\\nLearn more about the execution modes [here](https://playwright.dev/docs/test-parallel).\\n\\n**Usage**\\n- Running tests in parallel.\\n\\n  "},{"kind":"code","text":"```js\\n  // Run all the tests in the file concurrently using parallel workers.\\n  test.describe.configure({ mode: \'parallel\' });\\n  test(\'runs in parallel 1\', async ({ page }) => {});\\n  test(\'runs in parallel 2\', async ({ page }) => {});\\n  ```"},{"kind":"text","text":"\\n\\n- Running tests in order, retrying each failed test independently.\\n\\n  This is the default mode. It can be useful to set it explicitly to override project configuration that uses\\n  "},{"kind":"code","text":"`fullyParallel`"},{"kind":"text","text":".\\n\\n  "},{"kind":"code","text":"```js\\n  // Tests in this file run in order. Retries, if any, run independently.\\n  test.describe.configure({ mode: \'default\' });\\n  test(\'runs first\', async ({ page }) => {});\\n  test(\'runs second\', async ({ page }) => {});\\n  ```"},{"kind":"text","text":"\\n\\n- Running tests serially, retrying from the start. If one of the serial tests fails, all subsequent tests are\\n  skipped.\\n\\n  **NOTE** Running serially is not recommended. It is usually better to make your tests isolated, so they can be\\n  run independently.\\n\\n  "},{"kind":"code","text":"```js\\n  // Annotate tests as inter-dependent.\\n  test.describe.configure({ mode: \'serial\' });\\n  test(\'runs first\', async ({ page }) => {});\\n  test(\'runs second\', async ({ page }) => {});\\n  ```"},{"kind":"text","text":"\\n\\n- Configuring retries and timeout for each test.\\n\\n  "},{"kind":"code","text":"```js\\n  // Each test in the file will be retried twice and have a timeout of 20 seconds.\\n  test.describe.configure({ retries: 2, timeout: 20_000 });\\n  test(\'runs first\', async ({ page }) => {});\\n  test(\'runs second\', async ({ page }) => {});\\n  ```"},{"kind":"text","text":"\\n\\n- Run multiple describes in parallel, but tests inside each describe in order.\\n\\n  "},{"kind":"code","text":"```js\\n  test.describe.configure({ mode: \'parallel\' });\\n\\n  test.describe(\'A, runs in parallel with B\', () => {\\n    test.describe.configure({ mode: \'default\' });\\n    test(\'in order A1\', async ({ page }) => {});\\n    test(\'in order A2\', async ({ page }) => {});\\n  });\\n\\n  test.describe(\'B, runs in parallel with A\', () => {\\n    test.describe.configure({ mode: \'default\' });\\n    test(\'in order B1\', async ({ page }) => {});\\n    test(\'in order B2\', async ({ page }) => {});\\n  });\\n  ```"}]},"sources":[],"type":{"type":"reflection","declaration":{"id":24965,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":24966,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":24967,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":24968,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":24969,"name":"mode","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"literal","value":"default"},{"type":"literal","value":"parallel"},{"type":"literal","value":"serial"}]}},{"id":24970,"name":"retries","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"number"}},{"id":24971,"name":"timeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[24969,24970,24971]}],"sources":[]}}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"groups":[{"title":"Properties","children":[24898,24931,24964]},{"title":"Methods","children":[24850,24866,24882]}],"sources":[],"signatures":[{"id":24972,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":24973,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Group title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":24974,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe). Any tests\\ndeclared in this callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":24975,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":24976,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":24977,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":24978,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe). Any tests\\ndeclared in this callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":24979,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":24980,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":24981,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":24982,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Group title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":24983,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Additional details for all tests in the group."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestDetails"},"name":"TestDetails","package":"playwright"}},{"id":24984,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe). Any tests\\ndeclared in this callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":24985,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":24986,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"id":24987,"name":"skip","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":24988,"name":"skip","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Skip a test. Playwright will not run the test past the "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":" call.\\n\\nSkipped tests are not supposed to be ever run. If you intent to fix the test, use\\n[test.fixme([title, details, body, condition, callback, description])](https://playwright.dev/docs/api/class-test#test-fixme)\\ninstead.\\n\\nTo declare a skipped test:\\n- "},{"kind":"code","text":"`test.skip(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip(title, details, body)`"},{"kind":"text","text":"\\n\\nTo skip a test at runtime:\\n- "},{"kind":"code","text":"`test.skip(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a skipped test, and Playwright will not run it.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.skip(\'never run\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test should be skipped in some configurations, but not all, you can skip the test inside the test body\\nbased on some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case. Playwright will run the test,\\nbut abort it immediately after the "},{"kind":"code","text":"`test.skip`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'Safari-only test\', async ({ page, browserName }) => {\\n  test.skip(browserName !== \'webkit\', \'This feature is Safari-only\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can skip all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group based\\non some condition with a single "},{"kind":"code","text":"`test.skip(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.skip(({ browserName }) => browserName !== \'webkit\', \'Safari-only\');\\n\\ntest(\'Safari-only test 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'Safari-only test 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend using "},{"kind":"code","text":"`test.skip(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.skip();\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":24989,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":24990,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test body that takes one or two arguments: an object with fixtures and optional\\n[TestInfo](https://playwright.dev/docs/api/class-testinfo)."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestBody"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":24796,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"reference","target":24804,"name":"SerenityWorkerFixtures","package":"@serenity-js/playwright-test"}]}],"name":"TestBody","package":"playwright"}}],"type":{"type":"intrinsic","name":"void"}},{"id":24991,"name":"skip","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Skip a test. Playwright will not run the test past the "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":" call.\\n\\nSkipped tests are not supposed to be ever run. If you intent to fix the test, use\\n[test.fixme([title, details, body, condition, callback, description])](https://playwright.dev/docs/api/class-test#test-fixme)\\ninstead.\\n\\nTo declare a skipped test:\\n- "},{"kind":"code","text":"`test.skip(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip(title, details, body)`"},{"kind":"text","text":"\\n\\nTo skip a test at runtime:\\n- "},{"kind":"code","text":"`test.skip(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a skipped test, and Playwright will not run it.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.skip(\'never run\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test should be skipped in some configurations, but not all, you can skip the test inside the test body\\nbased on some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case. Playwright will run the test,\\nbut abort it immediately after the "},{"kind":"code","text":"`test.skip`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'Safari-only test\', async ({ page, browserName }) => {\\n  test.skip(browserName !== \'webkit\', \'This feature is Safari-only\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can skip all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group based\\non some condition with a single "},{"kind":"code","text":"`test.skip(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.skip(({ browserName }) => browserName !== \'webkit\', \'Safari-only\');\\n\\ntest(\'Safari-only test 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'Safari-only test 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend using "},{"kind":"code","text":"`test.skip(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.skip();\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":24992,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":24993,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"See [test.(call)(title[, details, body])](https://playwright.dev/docs/api/class-test#test-call) for test details\\ndescription."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestDetails"},"name":"TestDetails","package":"playwright"}},{"id":24994,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test body that takes one or two arguments: an object with fixtures and optional\\n[TestInfo](https://playwright.dev/docs/api/class-testinfo)."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestBody"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":24796,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"reference","target":24804,"name":"SerenityWorkerFixtures","package":"@serenity-js/playwright-test"}]}],"name":"TestBody","package":"playwright"}}],"type":{"type":"intrinsic","name":"void"}},{"id":24995,"name":"skip","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Skip a test. Playwright will not run the test past the "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":" call.\\n\\nSkipped tests are not supposed to be ever run. If you intent to fix the test, use\\n[test.fixme([title, details, body, condition, callback, description])](https://playwright.dev/docs/api/class-test#test-fixme)\\ninstead.\\n\\nTo declare a skipped test:\\n- "},{"kind":"code","text":"`test.skip(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip(title, details, body)`"},{"kind":"text","text":"\\n\\nTo skip a test at runtime:\\n- "},{"kind":"code","text":"`test.skip(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a skipped test, and Playwright will not run it.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.skip(\'never run\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test should be skipped in some configurations, but not all, you can skip the test inside the test body\\nbased on some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case. Playwright will run the test,\\nbut abort it immediately after the "},{"kind":"code","text":"`test.skip`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'Safari-only test\', async ({ page, browserName }) => {\\n  test.skip(browserName !== \'webkit\', \'This feature is Safari-only\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can skip all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group based\\non some condition with a single "},{"kind":"code","text":"`test.skip(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.skip(({ browserName }) => browserName !== \'webkit\', \'Safari-only\');\\n\\ntest(\'Safari-only test 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'Safari-only test 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend using "},{"kind":"code","text":"`test.skip(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.skip();\\n  // ...\\n});\\n```"}]},"sources":[],"type":{"type":"intrinsic","name":"void"}},{"id":24996,"name":"skip","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Skip a test. Playwright will not run the test past the "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":" call.\\n\\nSkipped tests are not supposed to be ever run. If you intent to fix the test, use\\n[test.fixme([title, details, body, condition, callback, description])](https://playwright.dev/docs/api/class-test#test-fixme)\\ninstead.\\n\\nTo declare a skipped test:\\n- "},{"kind":"code","text":"`test.skip(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip(title, details, body)`"},{"kind":"text","text":"\\n\\nTo skip a test at runtime:\\n- "},{"kind":"code","text":"`test.skip(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a skipped test, and Playwright will not run it.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.skip(\'never run\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test should be skipped in some configurations, but not all, you can skip the test inside the test body\\nbased on some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case. Playwright will run the test,\\nbut abort it immediately after the "},{"kind":"code","text":"`test.skip`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'Safari-only test\', async ({ page, browserName }) => {\\n  test.skip(browserName !== \'webkit\', \'This feature is Safari-only\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can skip all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group based\\non some condition with a single "},{"kind":"code","text":"`test.skip(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.skip(({ browserName }) => browserName !== \'webkit\', \'Safari-only\');\\n\\ntest(\'Safari-only test 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'Safari-only test 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend using "},{"kind":"code","text":"`test.skip(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.skip();\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":24997,"name":"condition","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test is marked as \\"should fail\\" when the condition is "},{"kind":"code","text":"`true`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"boolean"}},{"id":24998,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional description that will be reflected in a test report."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}},{"id":24999,"name":"skip","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Skip a test. Playwright will not run the test past the "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":" call.\\n\\nSkipped tests are not supposed to be ever run. If you intent to fix the test, use\\n[test.fixme([title, details, body, condition, callback, description])](https://playwright.dev/docs/api/class-test#test-fixme)\\ninstead.\\n\\nTo declare a skipped test:\\n- "},{"kind":"code","text":"`test.skip(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip(title, details, body)`"},{"kind":"text","text":"\\n\\nTo skip a test at runtime:\\n- "},{"kind":"code","text":"`test.skip(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a skipped test, and Playwright will not run it.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.skip(\'never run\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test should be skipped in some configurations, but not all, you can skip the test inside the test body\\nbased on some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case. Playwright will run the test,\\nbut abort it immediately after the "},{"kind":"code","text":"`test.skip`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'Safari-only test\', async ({ page, browserName }) => {\\n  test.skip(browserName !== \'webkit\', \'This feature is Safari-only\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can skip all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group based\\non some condition with a single "},{"kind":"code","text":"`test.skip(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.skip(({ browserName }) => browserName !== \'webkit\', \'Safari-only\');\\n\\ntest(\'Safari-only test 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'Safari-only test 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend using "},{"kind":"code","text":"`test.skip(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.skip();\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":25000,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A function that returns whether to mark as \\"should fail\\", based on test fixtures. Test or tests are marked as\\n\\"should fail\\" when the return value is "},{"kind":"code","text":"`true`"},{"kind":"text","text":"."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"ConditionBody"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":24796,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"reference","target":24804,"name":"SerenityWorkerFixtures","package":"@serenity-js/playwright-test"}]}],"name":"ConditionBody","package":"playwright"}},{"id":25001,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional description that will be reflected in a test report."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":25002,"name":"fixme","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25003,"name":"fixme","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Mark a test as \\"fixme\\", with the intention to fix it. Playwright will not run the test past the "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":"\\ncall.\\n\\nTo declare a \\"fixme\\" test:\\n- "},{"kind":"code","text":"`test.fixme(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme(title, details, body)`"},{"kind":"text","text":"\\n\\nTo annotate test as \\"fixme\\" at runtime:\\n- "},{"kind":"code","text":"`test.fixme(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a test as to be fixed, and Playwright will not run it.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fixme(\'to be fixed\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test should be fixed in some configurations, but not all, you can mark the test as \\"fixme\\" inside the test\\nbody based on some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case. Playwright will run the\\ntest, but abort it immediately after the "},{"kind":"code","text":"`test.fixme`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'to be fixed in Safari\', async ({ page, browserName }) => {\\n  test.fixme(browserName === \'webkit\', \'This feature breaks in Safari for some reason\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can mark all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group as\\n\\"fixme\\" based on some condition with a single "},{"kind":"code","text":"`test.fixme(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fixme(({ browserName }) => browserName === \'webkit\', \'Should figure out the issue\');\\n\\ntest(\'to be fixed in Safari 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'to be fixed in Safari 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend using "},{"kind":"code","text":"`test.fixme(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.fixme();\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":25004,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":25005,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test body that takes one or two arguments: an object with fixtures and optional\\n[TestInfo](https://playwright.dev/docs/api/class-testinfo)."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestBody"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":24796,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"reference","target":24804,"name":"SerenityWorkerFixtures","package":"@serenity-js/playwright-test"}]}],"name":"TestBody","package":"playwright"}}],"type":{"type":"intrinsic","name":"void"}},{"id":25006,"name":"fixme","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Mark a test as \\"fixme\\", with the intention to fix it. Playwright will not run the test past the "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":"\\ncall.\\n\\nTo declare a \\"fixme\\" test:\\n- "},{"kind":"code","text":"`test.fixme(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme(title, details, body)`"},{"kind":"text","text":"\\n\\nTo annotate test as \\"fixme\\" at runtime:\\n- "},{"kind":"code","text":"`test.fixme(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a test as to be fixed, and Playwright will not run it.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fixme(\'to be fixed\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test should be fixed in some configurations, but not all, you can mark the test as \\"fixme\\" inside the test\\nbody based on some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case. Playwright will run the\\ntest, but abort it immediately after the "},{"kind":"code","text":"`test.fixme`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'to be fixed in Safari\', async ({ page, browserName }) => {\\n  test.fixme(browserName === \'webkit\', \'This feature breaks in Safari for some reason\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can mark all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group as\\n\\"fixme\\" based on some condition with a single "},{"kind":"code","text":"`test.fixme(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fixme(({ browserName }) => browserName === \'webkit\', \'Should figure out the issue\');\\n\\ntest(\'to be fixed in Safari 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'to be fixed in Safari 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend using "},{"kind":"code","text":"`test.fixme(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.fixme();\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":25007,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":25008,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"See [test.(call)(title[, details, body])](https://playwright.dev/docs/api/class-test#test-call) for test details\\ndescription."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestDetails"},"name":"TestDetails","package":"playwright"}},{"id":25009,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test body that takes one or two arguments: an object with fixtures and optional\\n[TestInfo](https://playwright.dev/docs/api/class-testinfo)."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestBody"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":24796,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"reference","target":24804,"name":"SerenityWorkerFixtures","package":"@serenity-js/playwright-test"}]}],"name":"TestBody","package":"playwright"}}],"type":{"type":"intrinsic","name":"void"}},{"id":25010,"name":"fixme","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Mark a test as \\"fixme\\", with the intention to fix it. Playwright will not run the test past the "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":"\\ncall.\\n\\nTo declare a \\"fixme\\" test:\\n- "},{"kind":"code","text":"`test.fixme(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme(title, details, body)`"},{"kind":"text","text":"\\n\\nTo annotate test as \\"fixme\\" at runtime:\\n- "},{"kind":"code","text":"`test.fixme(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a test as to be fixed, and Playwright will not run it.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fixme(\'to be fixed\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test should be fixed in some configurations, but not all, you can mark the test as \\"fixme\\" inside the test\\nbody based on some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case. Playwright will run the\\ntest, but abort it immediately after the "},{"kind":"code","text":"`test.fixme`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'to be fixed in Safari\', async ({ page, browserName }) => {\\n  test.fixme(browserName === \'webkit\', \'This feature breaks in Safari for some reason\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can mark all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group as\\n\\"fixme\\" based on some condition with a single "},{"kind":"code","text":"`test.fixme(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fixme(({ browserName }) => browserName === \'webkit\', \'Should figure out the issue\');\\n\\ntest(\'to be fixed in Safari 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'to be fixed in Safari 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend using "},{"kind":"code","text":"`test.fixme(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.fixme();\\n  // ...\\n});\\n```"}]},"sources":[],"type":{"type":"intrinsic","name":"void"}},{"id":25011,"name":"fixme","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Mark a test as \\"fixme\\", with the intention to fix it. Playwright will not run the test past the "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":"\\ncall.\\n\\nTo declare a \\"fixme\\" test:\\n- "},{"kind":"code","text":"`test.fixme(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme(title, details, body)`"},{"kind":"text","text":"\\n\\nTo annotate test as \\"fixme\\" at runtime:\\n- "},{"kind":"code","text":"`test.fixme(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a test as to be fixed, and Playwright will not run it.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fixme(\'to be fixed\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test should be fixed in some configurations, but not all, you can mark the test as \\"fixme\\" inside the test\\nbody based on some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case. Playwright will run the\\ntest, but abort it immediately after the "},{"kind":"code","text":"`test.fixme`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'to be fixed in Safari\', async ({ page, browserName }) => {\\n  test.fixme(browserName === \'webkit\', \'This feature breaks in Safari for some reason\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can mark all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group as\\n\\"fixme\\" based on some condition with a single "},{"kind":"code","text":"`test.fixme(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fixme(({ browserName }) => browserName === \'webkit\', \'Should figure out the issue\');\\n\\ntest(\'to be fixed in Safari 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'to be fixed in Safari 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend using "},{"kind":"code","text":"`test.fixme(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.fixme();\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":25012,"name":"condition","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test is marked as \\"should fail\\" when the condition is "},{"kind":"code","text":"`true`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"boolean"}},{"id":25013,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional description that will be reflected in a test report."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}},{"id":25014,"name":"fixme","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Mark a test as \\"fixme\\", with the intention to fix it. Playwright will not run the test past the "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":"\\ncall.\\n\\nTo declare a \\"fixme\\" test:\\n- "},{"kind":"code","text":"`test.fixme(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme(title, details, body)`"},{"kind":"text","text":"\\n\\nTo annotate test as \\"fixme\\" at runtime:\\n- "},{"kind":"code","text":"`test.fixme(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a test as to be fixed, and Playwright will not run it.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fixme(\'to be fixed\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test should be fixed in some configurations, but not all, you can mark the test as \\"fixme\\" inside the test\\nbody based on some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case. Playwright will run the\\ntest, but abort it immediately after the "},{"kind":"code","text":"`test.fixme`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'to be fixed in Safari\', async ({ page, browserName }) => {\\n  test.fixme(browserName === \'webkit\', \'This feature breaks in Safari for some reason\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can mark all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group as\\n\\"fixme\\" based on some condition with a single "},{"kind":"code","text":"`test.fixme(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fixme(({ browserName }) => browserName === \'webkit\', \'Should figure out the issue\');\\n\\ntest(\'to be fixed in Safari 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'to be fixed in Safari 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend using "},{"kind":"code","text":"`test.fixme(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.fixme();\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":25015,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A function that returns whether to mark as \\"should fail\\", based on test fixtures. Test or tests are marked as\\n\\"should fail\\" when the return value is "},{"kind":"code","text":"`true`"},{"kind":"text","text":"."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"ConditionBody"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":24796,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"reference","target":24804,"name":"SerenityWorkerFixtures","package":"@serenity-js/playwright-test"}]}],"name":"ConditionBody","package":"playwright"}},{"id":25016,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional description that will be reflected in a test report."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":25017,"name":"fail","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Marks a test as \\"should fail\\". Playwright runs this test and ensures that it is actually failing. This is useful\\nfor documentation purposes to acknowledge that some functionality is broken until it is fixed.\\n\\nTo declare a \\"failing\\" test:\\n- "},{"kind":"code","text":"`test.fail(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fail(title, details, body)`"},{"kind":"text","text":"\\n\\nTo annotate test as \\"failing\\" at runtime:\\n- "},{"kind":"code","text":"`test.fail(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fail(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fail()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a test as failing, so that Playwright ensures it actually fails.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fail(\'not yet ready\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test fails in some configurations, but not all, you can mark the test as failing inside the test body based\\non some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'fail in WebKit\', async ({ page, browserName }) => {\\n  test.fail(browserName === \'webkit\', \'This feature is not implemented for Mac yet\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can mark all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group as\\n\\"should fail\\" based on some condition with a single "},{"kind":"code","text":"`test.fail(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fail(({ browserName }) => browserName === \'webkit\', \'not implemented yet\');\\n\\ntest(\'fail in WebKit 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'fail in WebKit 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.fail()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend declaring a failing test with "},{"kind":"code","text":"`test.fail(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.fail();\\n  // ...\\n});\\n```"}]},"sources":[],"type":{"type":"reflection","declaration":{"id":25018,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":25019,"name":"only","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25020,"name":"only","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"You can use "},{"kind":"code","text":"`test.fail.only`"},{"kind":"text","text":" to focus on a specific test that is expected to fail. This is particularly useful when\\ndebugging a failing test or working on a specific issue.\\n\\nTo declare a focused \\"failing\\" test:\\n- "},{"kind":"code","text":"`test.fail.only(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fail.only(title, details, body)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a focused failing test, so that Playwright runs only this test and ensures it actually fails.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fail.only(\'focused failing test\', async ({ page }) => {\\n  // This test is expected to fail\\n});\\ntest(\'not in the focused group\', async ({ page }) => {\\n  // This test will not run\\n});\\n```"}]},"sources":[],"parameters":[{"id":25021,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":25022,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test body that takes one or two arguments: an object with fixtures and optional\\n[TestInfo](https://playwright.dev/docs/api/class-testinfo)."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestBody"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":24796,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"reference","target":24804,"name":"SerenityWorkerFixtures","package":"@serenity-js/playwright-test"}]}],"name":"TestBody","package":"playwright"}}],"type":{"type":"intrinsic","name":"void"}},{"id":25023,"name":"only","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"You can use "},{"kind":"code","text":"`test.fail.only`"},{"kind":"text","text":" to focus on a specific test that is expected to fail. This is particularly useful when\\ndebugging a failing test or working on a specific issue.\\n\\nTo declare a focused \\"failing\\" test:\\n- "},{"kind":"code","text":"`test.fail.only(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fail.only(title, details, body)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a focused failing test, so that Playwright runs only this test and ensures it actually fails.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fail.only(\'focused failing test\', async ({ page }) => {\\n  // This test is expected to fail\\n});\\ntest(\'not in the focused group\', async ({ page }) => {\\n  // This test will not run\\n});\\n```"}]},"sources":[],"parameters":[{"id":25024,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":25025,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"See [test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) for test\\ndetails description."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestDetails"},"name":"TestDetails","package":"playwright"}},{"id":25026,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test body that takes one or two arguments: an object with fixtures and optional\\n[TestInfo](https://playwright.dev/docs/api/class-testinfo)."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestBody"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":24796,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"reference","target":24804,"name":"SerenityWorkerFixtures","package":"@serenity-js/playwright-test"}]}],"name":"TestBody","package":"playwright"}}],"type":{"type":"intrinsic","name":"void"}}]}],"groups":[{"title":"Methods","children":[25019]}],"sources":[],"signatures":[{"id":25027,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":25028,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":25029,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test body that takes one or two arguments: an object with fixtures and optional\\n[TestInfo](https://playwright.dev/docs/api/class-testinfo)."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestBody"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":24796,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"reference","target":24804,"name":"SerenityWorkerFixtures","package":"@serenity-js/playwright-test"}]}],"name":"TestBody","package":"playwright"}}],"type":{"type":"intrinsic","name":"void"}},{"id":25030,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":25031,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":25032,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"See [test.(call)(title[, details, body])](https://playwright.dev/docs/api/class-test#test-call) for test details\\ndescription."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestDetails"},"name":"TestDetails","package":"playwright"}},{"id":25033,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test body that takes one or two arguments: an object with fixtures and optional\\n[TestInfo](https://playwright.dev/docs/api/class-testinfo)."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestBody"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":24796,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"reference","target":24804,"name":"SerenityWorkerFixtures","package":"@serenity-js/playwright-test"}]}],"name":"TestBody","package":"playwright"}}],"type":{"type":"intrinsic","name":"void"}},{"id":25034,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":25035,"name":"condition","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test is marked as \\"should fail\\" when the condition is "},{"kind":"code","text":"`true`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"boolean"}},{"id":25036,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional description that will be reflected in a test report."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}},{"id":25037,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":25038,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A function that returns whether to mark as \\"should fail\\", based on test fixtures. Test or tests are marked as\\n\\"should fail\\" when the return value is "},{"kind":"code","text":"`true`"},{"kind":"text","text":"."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"ConditionBody"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":24796,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"reference","target":24804,"name":"SerenityWorkerFixtures","package":"@serenity-js/playwright-test"}]}],"name":"ConditionBody","package":"playwright"}},{"id":25039,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional description that will be reflected in a test report."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}},{"id":25040,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}},{"id":25041,"name":"slow","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25042,"name":"slow","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Marks a test as \\"slow\\". Slow test will be given triple the default timeout.\\n\\nNote that [test.slow([condition, callback, description])](https://playwright.dev/docs/api/class-test#test-slow)\\ncannot be used in a "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" or "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hook. Use\\n[test.setTimeout(timeout)](https://playwright.dev/docs/api/class-test#test-set-timeout) instead.\\n- "},{"kind":"code","text":"`test.slow()`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.slow(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.slow(callback, description)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can mark a test as slow by calling "},{"kind":"code","text":"`test.slow()`"},{"kind":"text","text":" inside the test body.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'slow test\', async ({ page }) => {\\n  test.slow();\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test is slow in some configurations, but not all, you can mark it as slow based on a condition. We\\nrecommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'slow in Safari\', async ({ page, browserName }) => {\\n  test.slow(browserName === \'webkit\', \'This feature is slow in Safari\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can mark all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group as\\n\\"slow\\" based on some condition by passing a callback.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.slow(({ browserName }) => browserName === \'webkit\', \'all tests are slow in Safari\');\\n\\ntest(\'slow in Safari 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'fail in Safari 2\', async ({ page }) => {\\n  // ...\\n});\\n```"}]},"sources":[],"type":{"type":"intrinsic","name":"void"}},{"id":25043,"name":"slow","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Marks a test as \\"slow\\". Slow test will be given triple the default timeout.\\n\\nNote that [test.slow([condition, callback, description])](https://playwright.dev/docs/api/class-test#test-slow)\\ncannot be used in a "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" or "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hook. Use\\n[test.setTimeout(timeout)](https://playwright.dev/docs/api/class-test#test-set-timeout) instead.\\n- "},{"kind":"code","text":"`test.slow()`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.slow(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.slow(callback, description)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can mark a test as slow by calling "},{"kind":"code","text":"`test.slow()`"},{"kind":"text","text":" inside the test body.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'slow test\', async ({ page }) => {\\n  test.slow();\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test is slow in some configurations, but not all, you can mark it as slow based on a condition. We\\nrecommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'slow in Safari\', async ({ page, browserName }) => {\\n  test.slow(browserName === \'webkit\', \'This feature is slow in Safari\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can mark all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group as\\n\\"slow\\" based on some condition by passing a callback.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.slow(({ browserName }) => browserName === \'webkit\', \'all tests are slow in Safari\');\\n\\ntest(\'slow in Safari 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'fail in Safari 2\', async ({ page }) => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":25044,"name":"condition","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test is marked as \\"slow\\" when the condition is "},{"kind":"code","text":"`true`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"boolean"}},{"id":25045,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional description that will be reflected in a test report."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}},{"id":25046,"name":"slow","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Marks a test as \\"slow\\". Slow test will be given triple the default timeout.\\n\\nNote that [test.slow([condition, callback, description])](https://playwright.dev/docs/api/class-test#test-slow)\\ncannot be used in a "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" or "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hook. Use\\n[test.setTimeout(timeout)](https://playwright.dev/docs/api/class-test#test-set-timeout) instead.\\n- "},{"kind":"code","text":"`test.slow()`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.slow(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.slow(callback, description)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can mark a test as slow by calling "},{"kind":"code","text":"`test.slow()`"},{"kind":"text","text":" inside the test body.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'slow test\', async ({ page }) => {\\n  test.slow();\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test is slow in some configurations, but not all, you can mark it as slow based on a condition. We\\nrecommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'slow in Safari\', async ({ page, browserName }) => {\\n  test.slow(browserName === \'webkit\', \'This feature is slow in Safari\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can mark all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group as\\n\\"slow\\" based on some condition by passing a callback.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.slow(({ browserName }) => browserName === \'webkit\', \'all tests are slow in Safari\');\\n\\ntest(\'slow in Safari 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'fail in Safari 2\', async ({ page }) => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":25047,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A function that returns whether to mark as \\"slow\\", based on test fixtures. Test or tests are marked as \\"slow\\" when\\nthe return value is "},{"kind":"code","text":"`true`"},{"kind":"text","text":"."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"ConditionBody"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":24796,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"reference","target":24804,"name":"SerenityWorkerFixtures","package":"@serenity-js/playwright-test"}]}],"name":"ConditionBody","package":"playwright"}},{"id":25048,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional description that will be reflected in a test report."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":25049,"name":"setTimeout","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25050,"name":"setTimeout","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Changes the timeout for the test. Zero means no timeout. Learn more about [various timeouts](https://playwright.dev/docs/test-timeouts).\\n\\nTimeout for the currently running test is available through\\n[testInfo.timeout](https://playwright.dev/docs/api/class-testinfo#test-info-timeout).\\n\\n**Usage**\\n- Changing test timeout.\\n\\n  "},{"kind":"code","text":"```js\\n  test(\'very slow test\', async ({ page }) => {\\n    test.setTimeout(120000);\\n    // ...\\n  });\\n  ```"},{"kind":"text","text":"\\n\\n- Changing timeout from a slow "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":" hook. Note that this affects the test timeout that is shared with\\n  "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":" hooks.\\n\\n  "},{"kind":"code","text":"```js\\n  test.beforeEach(async ({ page }, testInfo) => {\\n    // Extend timeout for all tests running this hook by 30 seconds.\\n    test.setTimeout(testInfo.timeout + 30000);\\n  });\\n  ```"},{"kind":"text","text":"\\n\\n- Changing timeout for a "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" or "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hook. Note this affects the hook\'s timeout, not the test\\n  timeout.\\n\\n  "},{"kind":"code","text":"```js\\n  test.beforeAll(async () => {\\n    // Set timeout for this hook.\\n    test.setTimeout(60000);\\n  });\\n  ```"},{"kind":"text","text":"\\n\\n- Changing timeout for all tests in a\\n  [test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group.\\n\\n  "},{"kind":"code","text":"```js\\n  test.describe(\'group\', () => {\\n    // Applies to all tests in this group.\\n    test.describe.configure({ timeout: 60000 });\\n\\n    test(\'test one\', async () => { /* ... */ });\\n    test(\'test two\', async () => { /* ... */ });\\n    test(\'test three\', async () => { /* ... */ });\\n  });\\n  ```"}]},"sources":[],"parameters":[{"id":25051,"name":"timeout","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Timeout in milliseconds."}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":25052,"name":"beforeEach","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25053,"name":"beforeEach","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":" hook that is executed before each test.\\n\\nWhen called in the scope of a test file, runs before each test in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nbefore each test in the group.\\n\\nYou can access all the same [Fixtures](https://playwright.dev/docs/api/class-fixtures) as the test body itself, and\\nalso the [TestInfo](https://playwright.dev/docs/api/class-testinfo) object that gives a lot of useful information.\\nFor example, you can navigate the page before starting the test.\\n\\nYou can use [test.afterEach([title, hookFunction])](https://playwright.dev/docs/api/class-test#test-after-each) to\\nteardown any resources set up in "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":".\\n- "},{"kind":"code","text":"`test.beforeEach(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.beforeEach(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.beforeEach(async ({ page }) => {\\n  console.log(`Running ${test.info().title}`);\\n  await page.goto(\'https://my.start.url/\');\\n});\\n\\ntest(\'my test\', async ({ page }) => {\\n  expect(page.url()).toBe(\'https://my.start.url/\');\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\ntest.beforeEach(\'Open start URL\', async ({ page }) => {\\n  console.log(`Running ${test.info().title}`);\\n  await page.goto(\'https://my.start.url/\');\\n});\\n```"}]},"sources":[],"parameters":[{"id":25054,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":25055,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25056,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":25057,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":24796,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"reference","target":24804,"name":"SerenityWorkerFixtures","package":"@serenity-js/playwright-test"}]}},{"id":25058,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":25059,"name":"beforeEach","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":" hook that is executed before each test.\\n\\nWhen called in the scope of a test file, runs before each test in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nbefore each test in the group.\\n\\nYou can access all the same [Fixtures](https://playwright.dev/docs/api/class-fixtures) as the test body itself, and\\nalso the [TestInfo](https://playwright.dev/docs/api/class-testinfo) object that gives a lot of useful information.\\nFor example, you can navigate the page before starting the test.\\n\\nYou can use [test.afterEach([title, hookFunction])](https://playwright.dev/docs/api/class-test#test-after-each) to\\nteardown any resources set up in "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":".\\n- "},{"kind":"code","text":"`test.beforeEach(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.beforeEach(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.beforeEach(async ({ page }) => {\\n  console.log(`Running ${test.info().title}`);\\n  await page.goto(\'https://my.start.url/\');\\n});\\n\\ntest(\'my test\', async ({ page }) => {\\n  expect(page.url()).toBe(\'https://my.start.url/\');\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\ntest.beforeEach(\'Open start URL\', async ({ page }) => {\\n  console.log(`Running ${test.info().title}`);\\n  await page.goto(\'https://my.start.url/\');\\n});\\n```"}]},"sources":[],"parameters":[{"id":25060,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Hook title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":25061,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":25062,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25063,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":25064,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":24796,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"reference","target":24804,"name":"SerenityWorkerFixtures","package":"@serenity-js/playwright-test"}]}},{"id":25065,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":25066,"name":"afterEach","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25067,"name":"afterEach","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares an "},{"kind":"code","text":"`afterEach`"},{"kind":"text","text":" hook that is executed after each test.\\n\\nWhen called in the scope of a test file, runs after each test in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nafter each test in the group.\\n\\nYou can access all the same [Fixtures](https://playwright.dev/docs/api/class-fixtures) as the test body itself, and\\nalso the [TestInfo](https://playwright.dev/docs/api/class-testinfo) object that gives a lot of useful information.\\nFor example, you can check whether the test succeeded or failed.\\n- "},{"kind":"code","text":"`test.afterEach(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.afterEach(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`afterEach`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.afterEach(async ({ page }) => {\\n  console.log(`Finished ${test.info().title} with status ${test.info().status}`);\\n\\n  if (test.info().status !== test.info().expectedStatus)\\n    console.log(`Did not run as expected, ended up at ${page.url()}`);\\n});\\n\\ntest(\'my test\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\ntest.afterEach(\'Status check\', async ({ page }) => {\\n  if (test.info().status !== test.info().expectedStatus)\\n    console.log(`Did not run as expected, ended up at ${page.url()}`);\\n});\\n```"}]},"sources":[],"parameters":[{"id":25068,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":25069,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25070,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":25071,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":24796,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"reference","target":24804,"name":"SerenityWorkerFixtures","package":"@serenity-js/playwright-test"}]}},{"id":25072,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":25073,"name":"afterEach","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares an "},{"kind":"code","text":"`afterEach`"},{"kind":"text","text":" hook that is executed after each test.\\n\\nWhen called in the scope of a test file, runs after each test in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nafter each test in the group.\\n\\nYou can access all the same [Fixtures](https://playwright.dev/docs/api/class-fixtures) as the test body itself, and\\nalso the [TestInfo](https://playwright.dev/docs/api/class-testinfo) object that gives a lot of useful information.\\nFor example, you can check whether the test succeeded or failed.\\n- "},{"kind":"code","text":"`test.afterEach(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.afterEach(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`afterEach`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.afterEach(async ({ page }) => {\\n  console.log(`Finished ${test.info().title} with status ${test.info().status}`);\\n\\n  if (test.info().status !== test.info().expectedStatus)\\n    console.log(`Did not run as expected, ended up at ${page.url()}`);\\n});\\n\\ntest(\'my test\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\ntest.afterEach(\'Status check\', async ({ page }) => {\\n  if (test.info().status !== test.info().expectedStatus)\\n    console.log(`Did not run as expected, ended up at ${page.url()}`);\\n});\\n```"}]},"sources":[],"parameters":[{"id":25074,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Hook title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":25075,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":25076,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25077,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":25078,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":24796,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"reference","target":24804,"name":"SerenityWorkerFixtures","package":"@serenity-js/playwright-test"}]}},{"id":25079,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":25080,"name":"beforeAll","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25081,"name":"beforeAll","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" hook that is executed once per worker process before all tests.\\n\\nWhen called in the scope of a test file, runs before all tests in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nbefore all tests in the group.\\n\\nYou can use [test.afterAll([title, hookFunction])](https://playwright.dev/docs/api/class-test#test-after-all) to\\nteardown any resources set up in "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":".\\n- "},{"kind":"code","text":"`test.beforeAll(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.beforeAll(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nNote that worker process is restarted on test failures, and "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" hook runs again in the new worker. Learn\\nmore about [workers and failures](https://playwright.dev/docs/test-retries).\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.beforeAll(async () => {\\n  console.log(\'Before tests\');\\n});\\n\\ntest.afterAll(async () => {\\n  console.log(\'After tests\');\\n});\\n\\ntest(\'my test\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\ntest.beforeAll(\'Setup\', async () => {\\n  console.log(\'Before tests\');\\n});\\n```"}]},"sources":[],"parameters":[{"id":25082,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":25083,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25084,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":25085,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":24796,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"reference","target":24804,"name":"SerenityWorkerFixtures","package":"@serenity-js/playwright-test"}]}},{"id":25086,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":25087,"name":"beforeAll","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" hook that is executed once per worker process before all tests.\\n\\nWhen called in the scope of a test file, runs before all tests in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nbefore all tests in the group.\\n\\nYou can use [test.afterAll([title, hookFunction])](https://playwright.dev/docs/api/class-test#test-after-all) to\\nteardown any resources set up in "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":".\\n- "},{"kind":"code","text":"`test.beforeAll(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.beforeAll(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nNote that worker process is restarted on test failures, and "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" hook runs again in the new worker. Learn\\nmore about [workers and failures](https://playwright.dev/docs/test-retries).\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.beforeAll(async () => {\\n  console.log(\'Before tests\');\\n});\\n\\ntest.afterAll(async () => {\\n  console.log(\'After tests\');\\n});\\n\\ntest(\'my test\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\ntest.beforeAll(\'Setup\', async () => {\\n  console.log(\'Before tests\');\\n});\\n```"}]},"sources":[],"parameters":[{"id":25088,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Hook title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":25089,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":25090,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25091,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":25092,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":24796,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"reference","target":24804,"name":"SerenityWorkerFixtures","package":"@serenity-js/playwright-test"}]}},{"id":25093,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":25094,"name":"afterAll","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25095,"name":"afterAll","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares an "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hook that is executed once per worker after all tests.\\n\\nWhen called in the scope of a test file, runs after all tests in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nafter all tests in the group.\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nNote that worker process is restarted on test failures, and "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hook runs again in the new worker. Learn\\nmore about [workers and failures](https://playwright.dev/docs/test-retries).\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n- "},{"kind":"code","text":"`test.afterAll(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.afterAll(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.afterAll(async () => {\\n  console.log(\'Done with tests\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\ntest.afterAll(\'Teardown\', async () => {\\n  console.log(\'Done with tests\');\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":25096,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":25097,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25098,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":25099,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":24796,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"reference","target":24804,"name":"SerenityWorkerFixtures","package":"@serenity-js/playwright-test"}]}},{"id":25100,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":25101,"name":"afterAll","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares an "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hook that is executed once per worker after all tests.\\n\\nWhen called in the scope of a test file, runs after all tests in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nafter all tests in the group.\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nNote that worker process is restarted on test failures, and "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hook runs again in the new worker. Learn\\nmore about [workers and failures](https://playwright.dev/docs/test-retries).\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n- "},{"kind":"code","text":"`test.afterAll(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.afterAll(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.afterAll(async () => {\\n  console.log(\'Done with tests\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\ntest.afterAll(\'Teardown\', async () => {\\n  console.log(\'Done with tests\');\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":25102,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Hook title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":25103,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":25104,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25105,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":25106,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":24796,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"reference","target":24804,"name":"SerenityWorkerFixtures","package":"@serenity-js/playwright-test"}]}},{"id":25107,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":25108,"name":"use","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25109,"name":"use","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Specifies options or fixtures to use in a single test file or a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group. Most\\nuseful to set an option, for example set "},{"kind":"code","text":"`locale`"},{"kind":"text","text":" to configure "},{"kind":"code","text":"`context`"},{"kind":"text","text":" fixture.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.use({ locale: \'en-US\' });\\n\\ntest(\'test with locale\', async ({ page }) => {\\n  // Default context and page have locale as specified\\n});\\n```"},{"kind":"text","text":"\\n\\n**Details**\\n\\n"},{"kind":"code","text":"`test.use`"},{"kind":"text","text":" can be called either in the global scope or inside "},{"kind":"code","text":"`test.describe`"},{"kind":"text","text":". It is an error to call it within\\n"},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":" or "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":".\\n\\nIt is also possible to override a fixture by providing a function.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.use({\\n  locale: async ({}, use) => {\\n    // Read locale from some configuration file.\\n    const locale = await fs.promises.readFile(\'test-locale\', \'utf-8\');\\n    await use(locale);\\n  },\\n});\\n\\ntest(\'test with locale\', async ({ page }) => {\\n  // Default context and page have locale as specified\\n});\\n```"}]},"sources":[],"parameters":[{"id":25110,"name":"fixtures","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"Fixtures"},"typeArguments":[{"type":"reflection","declaration":{"id":25111,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true}}},{"type":"reflection","declaration":{"id":25112,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true}}},{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":24796,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"}]},{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"reference","target":24804,"name":"SerenityWorkerFixtures","package":"@serenity-js/playwright-test"}]}],"name":"Fixtures","package":"playwright"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":25113,"name":"step","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a test step that is shown in the report.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'test\', async ({ page }) => {\\n  await test.step(\'Log in\', async () => {\\n    // ...\\n  });\\n\\n  await test.step(\'Outer step\', async () => {\\n    // ...\\n    // You can nest steps inside each other.\\n    await test.step(\'Inner step\', async () => {\\n      // ...\\n    });\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\n**Details**\\n\\nThe method returns the value returned by the step callback.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'test\', async ({ page }) => {\\n  const user = await test.step(\'Log in\', async () => {\\n    // ...\\n    return \'john\';\\n  });\\n  expect(user).toBe(\'john\');\\n});\\n```"},{"kind":"text","text":"\\n\\n**Decorator**\\n\\nYou can use TypeScript method decorators to turn a method into a step. Each call to the decorated method will show\\nup as a step in the report.\\n\\n"},{"kind":"code","text":"```js\\nfunction step(target: Function, context: ClassMethodDecoratorContext) {\\n  return function replacementMethod(...args: any) {\\n    const name = this.constructor.name + \'.\' + (context.name as string);\\n    return test.step(name, async () => {\\n      return await target.call(this, ...args);\\n    });\\n  };\\n}\\n\\nclass LoginPage {\\n  constructor(readonly page: Page) {}\\n\\n  @step\\n  async login() {\\n    const account = { username: \'Alice\', password: \'s3cr3t\' };\\n    await this.page.getByLabel(\'Username or email address\').fill(account.username);\\n    await this.page.getByLabel(\'Password\').fill(account.password);\\n    await this.page.getByRole(\'button\', { name: \'Sign in\' }).click();\\n    await expect(this.page.getByRole(\'button\', { name: \'View profile and more\' })).toBeVisible();\\n  }\\n}\\n\\ntest(\'example\', async ({ page }) => {\\n  const loginPage = new LoginPage(page);\\n  await loginPage.login();\\n});\\n```"},{"kind":"text","text":"\\n\\n**Boxing**\\n\\nWhen something inside a step fails, you would usually see the error pointing to the exact action that failed. For\\nexample, consider the following login step:\\n\\n"},{"kind":"code","text":"```js\\nasync function login(page) {\\n  await test.step(\'login\', async () => {\\n    const account = { username: \'Alice\', password: \'s3cr3t\' };\\n    await page.getByLabel(\'Username or email address\').fill(account.username);\\n    await page.getByLabel(\'Password\').fill(account.password);\\n    await page.getByRole(\'button\', { name: \'Sign in\' }).click();\\n    await expect(page.getByRole(\'button\', { name: \'View profile and more\' })).toBeVisible();\\n  });\\n}\\n\\ntest(\'example\', async ({ page }) => {\\n  await page.goto(\'https://github.com/login\');\\n  await login(page);\\n});\\n```"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```txt\\nError: Timed out 5000ms waiting for expect(locator).toBeVisible()\\n  ... error details omitted ...\\n\\n   8 |     await page.getByRole(\'button\', { name: \'Sign in\' }).click();\\n>  9 |     await expect(page.getByRole(\'button\', { name: \'View profile and more\' })).toBeVisible();\\n     |                                                                               ^\\n  10 |   });\\n```"},{"kind":"text","text":"\\n\\nAs we see above, the test may fail with an error pointing inside the step. If you would like the error to highlight\\nthe \\"login\\" step instead of its internals, use the "},{"kind":"code","text":"`box`"},{"kind":"text","text":" option. An error inside a boxed step points to the step\\ncall site.\\n\\n"},{"kind":"code","text":"```js\\nasync function login(page) {\\n  await test.step(\'login\', async () => {\\n    // ...\\n  }, { box: true });  // Note the \\"box\\" option here.\\n}\\n```"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```txt\\nError: Timed out 5000ms waiting for expect(locator).toBeVisible()\\n  ... error details omitted ...\\n\\n  14 |   await page.goto(\'https://github.com/login\');\\n> 15 |   await login(page);\\n     |         ^\\n  16 | });\\n```"},{"kind":"text","text":"\\n\\nYou can also create a TypeScript decorator for a boxed step, similar to a regular step decorator above:\\n\\n"},{"kind":"code","text":"```js\\nfunction boxedStep(target: Function, context: ClassMethodDecoratorContext) {\\n  return function replacementMethod(...args: any) {\\n    const name = this.constructor.name + \'.\' + (context.name as string);\\n    return test.step(name, async () => {\\n      return await target.call(this, ...args);\\n    }, { box: true });  // Note the \\"box\\" option here.\\n  };\\n}\\n\\nclass LoginPage {\\n  constructor(readonly page: Page) {}\\n\\n  @boxedStep\\n  async login() {\\n    // ....\\n  }\\n}\\n\\ntest(\'example\', async ({ page }) => {\\n  const loginPage = new LoginPage(page);\\n  await loginPage.login();  // <-- Error will be reported on this line.\\n});\\n```"}]},"sources":[],"type":{"type":"reflection","declaration":{"id":25114,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":25115,"name":"skip","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25116,"name":"skip","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Mark a test step as \\"skip\\" to temporarily disable its execution, useful for steps that are currently failing and\\nplanned for a near-term fix. Playwright will not run the step. See also\\n[testStepInfo.skip(condition[, description])](https://playwright.dev/docs/api/class-teststepinfo#test-step-info-skip-2).\\n\\nWe recommend [testStepInfo.skip()](https://playwright.dev/docs/api/class-teststepinfo#test-step-info-skip-1)\\ninstead.\\n\\n**Usage**\\n\\nYou can declare a skipped step, and Playwright will not run it.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'my test\', async ({ page }) => {\\n  // ...\\n  await test.step.skip(\'not yet ready\', async () => {\\n    // ...\\n  });\\n});\\n```"}]},"sources":[],"parameters":[{"id":25117,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Step name."}]},"type":{"type":"intrinsic","name":"string"}},{"id":25118,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Step body."}]},"type":{"type":"reflection","declaration":{"id":25119,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25120,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":25121,"name":"step","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestStepInfo"},"name":"TestStepInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}},{"id":25122,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reflection","declaration":{"id":25123,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":25124,"name":"box","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"boolean"}},{"id":25125,"name":"location","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"Location"},"name":"Location","package":"playwright"}},{"id":25126,"name":"timeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[25124,25125,25126]}],"sources":[]}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]}],"groups":[{"title":"Methods","children":[25115]}],"sources":[],"signatures":[{"id":25127,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"typeParameter":[{"id":25128,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":25129,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Step name."}]},"type":{"type":"intrinsic","name":"string"}},{"id":25130,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Step body."}]},"type":{"type":"reflection","declaration":{"id":25131,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25132,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":25133,"name":"step","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestStepInfo"},"name":"TestStepInfo","package":"playwright"}}],"type":{"type":"union","types":[{"type":"reference","target":25128,"name":"T","package":"playwright","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":25128,"name":"T","package":"playwright","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}},{"id":25134,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reflection","declaration":{"id":25135,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":25136,"name":"box","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"boolean"}},{"id":25137,"name":"location","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"Location"},"name":"Location","package":"playwright"}},{"id":25138,"name":"timeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[25136,25137,25138]}],"sources":[]}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":25128,"name":"T","package":"playwright","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]}}},{"id":25139,"name":"expect","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"code","text":"`expect`"},{"kind":"text","text":" function can be used to create test assertions. Read more about [test assertions](https://playwright.dev/docs/test-assertions).\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest(\'example\', async ({ page }) => {\\n  await test.expect(page).toHaveTitle(\'Title\');\\n});\\n```"}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"Expect"},"typeArguments":[{"type":"reflection","declaration":{"id":25140,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true}}}],"name":"Expect","package":"playwright"}},{"id":25141,"name":"extend","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25142,"name":"extend","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Extends the "},{"kind":"code","text":"`test`"},{"kind":"text","text":" object by defining fixtures and/or options that can be used in the tests.\\n\\n**Usage**\\n\\nFirst define a fixture and/or an option.\\n\\n"},{"kind":"code","text":"```js\\nimport { test as base } from \'@playwright/test\';\\nimport { TodoPage } from \'./todo-page\';\\n\\nexport type Options = { defaultItem: string };\\n\\n// Extend basic test by providing a \\"defaultItem\\" option and a \\"todoPage\\" fixture.\\nexport const test = base.extend<Options & { todoPage: TodoPage }>({\\n  // Define an option and provide a default value.\\n  // We can later override it in the config.\\n  defaultItem: [\'Do stuff\', { option: true }],\\n\\n  // Define a fixture. Note that it can use built-in fixture \\"page\\"\\n  // and a new option \\"defaultItem\\".\\n  todoPage: async ({ page, defaultItem }, use) => {\\n    const todoPage = new TodoPage(page);\\n    await todoPage.goto();\\n    await todoPage.addToDo(defaultItem);\\n    await use(todoPage);\\n    await todoPage.removeAll();\\n  },\\n});\\n```"},{"kind":"text","text":"\\n\\nThen use the fixture in the test.\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\nimport { test } from \'./my-test\';\\n\\ntest(\'test 1\', async ({ todoPage }) => {\\n  await todoPage.addToDo(\'my todo\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nConfigure the option in config file.\\n\\n"},{"kind":"code","text":"```js\\n// playwright.config.ts\\nimport { defineConfig } from \'@playwright/test\';\\nimport type { Options } from \'./my-test\';\\n\\nexport default defineConfig<Options>({\\n  projects: [\\n    {\\n      name: \'shopping\',\\n      use: { defaultItem: \'Buy milk\' },\\n    },\\n    {\\n      name: \'wellbeing\',\\n      use: { defaultItem: \'Exercise!\' },\\n    },\\n  ]\\n});\\n```"},{"kind":"text","text":"\\n\\nLearn more about [fixtures](https://playwright.dev/docs/test-fixtures) and [parametrizing tests](https://playwright.dev/docs/test-parameterize)."}]},"sources":[],"typeParameter":[{"id":25143,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":25144,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true}}}},{"id":25145,"name":"W","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":25146,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true}}},"default":{"type":"reflection","declaration":{"id":25147,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true}}}}],"parameters":[{"id":25148,"name":"fixtures","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An object containing fixtures and/or options. Learn more about [fixtures format](https://playwright.dev/docs/test-fixtures)."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"Fixtures"},"typeArguments":[{"type":"reference","target":25143,"name":"T","package":"playwright","refersToTypeParameter":true},{"type":"reference","target":25145,"name":"W","package":"playwright","refersToTypeParameter":true},{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":24796,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"}]},{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"reference","target":24804,"name":"SerenityWorkerFixtures","package":"@serenity-js/playwright-test"}]}],"name":"Fixtures","package":"playwright"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestType"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":24796,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":25143,"name":"T","package":"playwright","refersToTypeParameter":true}]},{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"reference","target":24804,"name":"SerenityWorkerFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":25145,"name":"W","package":"playwright","refersToTypeParameter":true}]}],"name":"TestType","package":"playwright"}}]},{"id":25149,"name":"info","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25150,"name":"info","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns information about the currently running test. This method can only be called during the test execution,\\notherwise it throws.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest(\'example test\', async ({ page }) => {\\n  // ...\\n  await test.info().attach(\'screenshot\', {\\n    body: await page.screenshot(),\\n    contentType: \'image/png\',\\n  });\\n});\\n```"}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}]}],"groups":[{"title":"Properties","children":[24848,25017,25113,25139]},{"title":"Methods","children":[24840,24987,25002,25041,25049,25052,25066,25080,25094,25108,25141,25149]}],"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":360,"character":13}],"signatures":[{"id":24833,"name":"it","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a single test scenario.\\n\\n## Example\\n\\n"},{"kind":"code","text":"```typescript\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { describe, it } from \'@serenity-js/playwright-test\'\\n\\ndescribe(`Todo List App`, () => {\\n\\n  it(`should allow me to add a todo item`, async ({ actor }) => {\\n    await actor.attemptsTo(\\n      startWithAnEmptyList(),\\n\\n      recordItem(\'Buy some milk\'),\\n\\n      Ensure.that(itemNames(), equals([\\n        \'Buy some milk\',\\n      ])),\\n    )\\n  })\\n\\n  it(\'supports multiple actors using separate browsers\', async ({ actorCalled }) => {\\n    await actorCalled(\'Alice\').attemptsTo(\\n      startWithAListContaining(\\n        \'Feed the cat\'\\n      ),\\n    )\\n\\n    await actorCalled(\'Bob\').attemptsTo(\\n      startWithAListContaining(\\n        \'Walk the dog\'\\n      ),\\n    )\\n\\n    await actorCalled(\'Alice\').attemptsTo(\\n      Ensure.that(itemNames(), equals([\\n        \'Feed the cat\'\\n      ])),\\n    )\\n\\n    await actorCalled(\'Bob\').attemptsTo(\\n      Ensure.that(itemNames(), equals([\\n        \'Walk the dog\'\\n      ])),\\n    )\\n  })\\n})\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- [Grouping test scenarios](/api/playwright-test/function/describe/)\\n- ["},{"kind":"code","text":"`SerenityFixtures`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityFixtures/)\\n- [Playwright Test "},{"kind":"code","text":"`test`"},{"kind":"text","text":" function](https://playwright.dev/docs/api/class-test#test-call)\\n- [Serenity/JS + Playwright Test project template](https://github.com/serenity-js/serenity-js-playwright-test-template/)"}]},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":360,"character":13}],"parameters":[{"id":24834,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":24835,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestBody"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":24796,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"reference","target":24804,"name":"SerenityWorkerFixtures","package":"@serenity-js/playwright-test"}]}],"name":"TestBody","package":"playwright"}}],"type":{"type":"intrinsic","name":"void"}},{"id":24836,"name":"it","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a single test scenario.\\n\\n## Example\\n\\n"},{"kind":"code","text":"```typescript\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { describe, it } from \'@serenity-js/playwright-test\'\\n\\ndescribe(`Todo List App`, () => {\\n\\n  it(`should allow me to add a todo item`, async ({ actor }) => {\\n    await actor.attemptsTo(\\n      startWithAnEmptyList(),\\n\\n      recordItem(\'Buy some milk\'),\\n\\n      Ensure.that(itemNames(), equals([\\n        \'Buy some milk\',\\n      ])),\\n    )\\n  })\\n\\n  it(\'supports multiple actors using separate browsers\', async ({ actorCalled }) => {\\n    await actorCalled(\'Alice\').attemptsTo(\\n      startWithAListContaining(\\n        \'Feed the cat\'\\n      ),\\n    )\\n\\n    await actorCalled(\'Bob\').attemptsTo(\\n      startWithAListContaining(\\n        \'Walk the dog\'\\n      ),\\n    )\\n\\n    await actorCalled(\'Alice\').attemptsTo(\\n      Ensure.that(itemNames(), equals([\\n        \'Feed the cat\'\\n      ])),\\n    )\\n\\n    await actorCalled(\'Bob\').attemptsTo(\\n      Ensure.that(itemNames(), equals([\\n        \'Walk the dog\'\\n      ])),\\n    )\\n  })\\n})\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- [Grouping test scenarios](/api/playwright-test/function/describe/)\\n- ["},{"kind":"code","text":"`SerenityFixtures`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityFixtures/)\\n- [Playwright Test "},{"kind":"code","text":"`test`"},{"kind":"text","text":" function](https://playwright.dev/docs/api/class-test#test-call)\\n- [Serenity/JS + Playwright Test project template](https://github.com/serenity-js/serenity-js-playwright-test-template/)"}]},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":360,"character":13}],"parameters":[{"id":24837,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":24838,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestDetails"},"name":"TestDetails","package":"playwright"}},{"id":24839,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestBody"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":24796,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"reference","target":24804,"name":"SerenityWorkerFixtures","package":"@serenity-js/playwright-test"}]}],"name":"TestBody","package":"playwright"}}],"type":{"type":"intrinsic","name":"void"}}],"permalink":"/api/playwright-test/function/it","categories":[],"previousId":25742,"nextId":25151},{"id":25151,"name":"test","variant":"declaration","kind":64,"flags":{"isExternal":true},"children":[{"id":25159,"name":"only","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25160,"name":"only","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a focused test. If there are some focused tests or suites, all of them will be run but nothing else.\\n- "},{"kind":"code","text":"`test.only(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.only(title, details, body)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.only(\'focus this test\', async ({ page }) => {\\n  // Run only focused tests in the entire project.\\n});\\n```"}]},"sources":[],"parameters":[{"id":25161,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":25162,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test body that takes one or two arguments: an object with fixtures and optional\\n[TestInfo](https://playwright.dev/docs/api/class-testinfo)."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestBody"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":24796,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"reference","target":24804,"name":"SerenityWorkerFixtures","package":"@serenity-js/playwright-test"}]}],"name":"TestBody","package":"playwright"}}],"type":{"type":"intrinsic","name":"void"}},{"id":25163,"name":"only","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a focused test. If there are some focused tests or suites, all of them will be run but nothing else.\\n- "},{"kind":"code","text":"`test.only(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.only(title, details, body)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.only(\'focus this test\', async ({ page }) => {\\n  // Run only focused tests in the entire project.\\n});\\n```"}]},"sources":[],"parameters":[{"id":25164,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":25165,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"See [test.(call)(title[, details, body])](https://playwright.dev/docs/api/class-test#test-call) for test details\\ndescription."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestDetails"},"name":"TestDetails","package":"playwright"}},{"id":25166,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test body that takes one or two arguments: an object with fixtures and optional\\n[TestInfo](https://playwright.dev/docs/api/class-testinfo)."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestBody"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":24796,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"reference","target":24804,"name":"SerenityWorkerFixtures","package":"@serenity-js/playwright-test"}]}],"name":"TestBody","package":"playwright"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":25167,"name":"describe","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a group of tests.\\n- "},{"kind":"code","text":"`test.describe(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe(callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a group of tests with a title. The title will be visible in the test report as a part of each\\ntest\'s title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe(\'two tests\', () => {\\n  test(\'one\', async ({ page }) => {\\n    // ...\\n  });\\n\\n  test(\'two\', async ({ page }) => {\\n    // ...\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\n**Anonymous group**\\n\\nYou can also declare a test group without a title. This is convenient to give a group of tests a common option with\\n[test.use(options)](https://playwright.dev/docs/api/class-test#test-use).\\n\\n"},{"kind":"code","text":"```js\\ntest.describe(() => {\\n  test.use({ colorScheme: \'dark\' });\\n\\n  test(\'one\', async ({ page }) => {\\n    // ...\\n  });\\n\\n  test(\'two\', async ({ page }) => {\\n    // ...\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\n**Tags**\\n\\nYou can tag all tests in a group by providing additional details. Note that each tag must start with "},{"kind":"code","text":"`@`"},{"kind":"text","text":" symbol.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.describe(\'two tagged tests\', {\\n  tag: \'@smoke\',\\n}, () => {\\n  test(\'one\', async ({ page }) => {\\n    // ...\\n  });\\n\\n  test(\'two\', async ({ page }) => {\\n    // ...\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\nLearn more about [tagging](https://playwright.dev/docs/test-annotations#tag-tests).\\n\\n**Annotations**\\n\\nYou can annotate all tests in a group by providing additional details.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.describe(\'two annotated tests\', {\\n  annotation: {\\n    type: \'issue\',\\n    description: \'https://github.com/microsoft/playwright/issues/23180\',\\n  },\\n}, () => {\\n  test(\'one\', async ({ page }) => {\\n    // ...\\n  });\\n\\n  test(\'two\', async ({ page }) => {\\n    // ...\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\nLearn more about [test annotations](https://playwright.dev/docs/test-annotations)."}]},"sources":[],"type":{"type":"reflection","declaration":{"id":25168,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":25169,"name":"only","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25170,"name":"only","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a focused group of tests. If there are some focused tests or suites, all of them will be run but nothing\\nelse.\\n- "},{"kind":"code","text":"`test.describe.only(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.only(callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.only(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.only(\'focused group\', () => {\\n  test(\'in the focused group\', async ({ page }) => {\\n    // This test will run\\n  });\\n});\\ntest(\'not in the focused group\', async ({ page }) => {\\n  // This test will not run\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.only(() => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":25171,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Group title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":25172,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.only([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-only).\\nAny tests added in this callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":25173,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25174,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":25175,"name":"only","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a focused group of tests. If there are some focused tests or suites, all of them will be run but nothing\\nelse.\\n- "},{"kind":"code","text":"`test.describe.only(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.only(callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.only(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.only(\'focused group\', () => {\\n  test(\'in the focused group\', async ({ page }) => {\\n    // This test will run\\n  });\\n});\\ntest(\'not in the focused group\', async ({ page }) => {\\n  // This test will not run\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.only(() => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":25176,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.only([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-only).\\nAny tests added in this callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":25177,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25178,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":25179,"name":"only","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a focused group of tests. If there are some focused tests or suites, all of them will be run but nothing\\nelse.\\n- "},{"kind":"code","text":"`test.describe.only(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.only(callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.only(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.only(\'focused group\', () => {\\n  test(\'in the focused group\', async ({ page }) => {\\n    // This test will run\\n  });\\n});\\ntest(\'not in the focused group\', async ({ page }) => {\\n  // This test will not run\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.only(() => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":25180,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Group title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":25181,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"See [test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) for\\ndetails description."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestDetails"},"name":"TestDetails","package":"playwright"}},{"id":25182,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.only([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-only).\\nAny tests added in this callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":25183,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25184,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":25185,"name":"skip","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25186,"name":"skip","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a skipped test group, similarly to\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe). Tests in the\\nskipped group are never run.\\n- "},{"kind":"code","text":"`test.describe.skip(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.skip(title)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.skip(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.skip(\'skipped group\', () => {\\n  test(\'example\', async ({ page }) => {\\n    // This test will not run\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.skip(() => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":25187,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Group title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":25188,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.skip(title[, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-skip).\\nAny tests added in this callback will belong to the group, and will not be run."}]},"type":{"type":"reflection","declaration":{"id":25189,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25190,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":25191,"name":"skip","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a skipped test group, similarly to\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe). Tests in the\\nskipped group are never run.\\n- "},{"kind":"code","text":"`test.describe.skip(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.skip(title)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.skip(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.skip(\'skipped group\', () => {\\n  test(\'example\', async ({ page }) => {\\n    // This test will not run\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.skip(() => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":25192,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.skip(title[, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-skip).\\nAny tests added in this callback will belong to the group, and will not be run."}]},"type":{"type":"reflection","declaration":{"id":25193,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25194,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":25195,"name":"skip","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a skipped test group, similarly to\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe). Tests in the\\nskipped group are never run.\\n- "},{"kind":"code","text":"`test.describe.skip(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.skip(title)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.skip(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.skip(\'skipped group\', () => {\\n  test(\'example\', async ({ page }) => {\\n    // This test will not run\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.skip(() => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":25196,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Group title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":25197,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"See [test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) for\\ndetails description."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestDetails"},"name":"TestDetails","package":"playwright"}},{"id":25198,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.skip(title[, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-skip).\\nAny tests added in this callback will belong to the group, and will not be run."}]},"type":{"type":"reflection","declaration":{"id":25199,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25200,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":25201,"name":"fixme","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25202,"name":"fixme","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a test group similarly to\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe). Tests in\\nthis group are marked as \\"fixme\\" and will not be executed.\\n- "},{"kind":"code","text":"`test.describe.fixme(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.fixme(callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.fixme(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.fixme(\'broken tests that should be fixed\', () => {\\n  test(\'example\', async ({ page }) => {\\n    // This test will not run\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.fixme(() => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":25203,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Group title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":25204,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.fixme([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-fixme).\\nAny tests added in this callback will belong to the group, and will not be run."}]},"type":{"type":"reflection","declaration":{"id":25205,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25206,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":25207,"name":"fixme","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a test group similarly to\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe). Tests in\\nthis group are marked as \\"fixme\\" and will not be executed.\\n- "},{"kind":"code","text":"`test.describe.fixme(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.fixme(callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.fixme(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.fixme(\'broken tests that should be fixed\', () => {\\n  test(\'example\', async ({ page }) => {\\n    // This test will not run\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.fixme(() => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":25208,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.fixme([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-fixme).\\nAny tests added in this callback will belong to the group, and will not be run."}]},"type":{"type":"reflection","declaration":{"id":25209,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25210,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":25211,"name":"fixme","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a test group similarly to\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe). Tests in\\nthis group are marked as \\"fixme\\" and will not be executed.\\n- "},{"kind":"code","text":"`test.describe.fixme(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.fixme(callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.fixme(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.fixme(\'broken tests that should be fixed\', () => {\\n  test(\'example\', async ({ page }) => {\\n    // This test will not run\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.fixme(() => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":25212,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Group title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":25213,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"See [test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) for\\ndetails description."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestDetails"},"name":"TestDetails","package":"playwright"}},{"id":25214,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.fixme([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-fixme).\\nAny tests added in this callback will belong to the group, and will not be run."}]},"type":{"type":"reflection","declaration":{"id":25215,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25216,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":25217,"name":"serial","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"**NOTE** See [test.describe.configure([options])](https://playwright.dev/docs/api/class-test#test-describe-configure) for\\nthe preferred way of configuring the execution mode.\\n\\nDeclares a group of tests that should always be run serially. If one of the tests fails, all subsequent tests are\\nskipped. All tests in a group are retried together.\\n\\n**NOTE** Using serial is not recommended. It is usually better to make your tests isolated, so they can be run\\nindependently.\\n\\n- "},{"kind":"code","text":"`test.describe.serial(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.serial(title)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.serial(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.serial(\'group\', () => {\\n  test(\'runs first\', async ({ page }) => {});\\n  test(\'runs second\', async ({ page }) => {});\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.serial(() => {\\n  // ...\\n});\\n```"}]},"sources":[],"type":{"type":"reflection","declaration":{"id":25218,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":25219,"name":"only","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25220,"name":"only","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"**NOTE** See [test.describe.configure([options])](https://playwright.dev/docs/api/class-test#test-describe-configure) for\\nthe preferred way of configuring the execution mode.\\n\\nDeclares a focused group of tests that should always be run serially. If one of the tests fails, all subsequent\\ntests are skipped. All tests in a group are retried together. If there are some focused tests or suites, all of\\nthem will be run but nothing else.\\n\\n**NOTE** Using serial is not recommended. It is usually better to make your tests isolated, so they can be run\\nindependently.\\n\\n- "},{"kind":"code","text":"`test.describe.serial.only(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.serial.only(title)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.serial.only(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.serial.only(\'group\', () => {\\n  test(\'runs first\', async ({ page }) => {\\n  });\\n  test(\'runs second\', async ({ page }) => {\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.serial.only(() => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":25221,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Group title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":25222,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.serial.only(title[, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-serial-only).\\nAny tests added in this callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":25223,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25224,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":25225,"name":"only","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"**NOTE** See [test.describe.configure([options])](https://playwright.dev/docs/api/class-test#test-describe-configure) for\\nthe preferred way of configuring the execution mode.\\n\\nDeclares a focused group of tests that should always be run serially. If one of the tests fails, all subsequent\\ntests are skipped. All tests in a group are retried together. If there are some focused tests or suites, all of\\nthem will be run but nothing else.\\n\\n**NOTE** Using serial is not recommended. It is usually better to make your tests isolated, so they can be run\\nindependently.\\n\\n- "},{"kind":"code","text":"`test.describe.serial.only(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.serial.only(title)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.serial.only(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.serial.only(\'group\', () => {\\n  test(\'runs first\', async ({ page }) => {\\n  });\\n  test(\'runs second\', async ({ page }) => {\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.serial.only(() => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":25226,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.serial.only(title[, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-serial-only).\\nAny tests added in this callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":25227,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25228,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":25229,"name":"only","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"**NOTE** See [test.describe.configure([options])](https://playwright.dev/docs/api/class-test#test-describe-configure) for\\nthe preferred way of configuring the execution mode.\\n\\nDeclares a focused group of tests that should always be run serially. If one of the tests fails, all subsequent\\ntests are skipped. All tests in a group are retried together. If there are some focused tests or suites, all of\\nthem will be run but nothing else.\\n\\n**NOTE** Using serial is not recommended. It is usually better to make your tests isolated, so they can be run\\nindependently.\\n\\n- "},{"kind":"code","text":"`test.describe.serial.only(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.serial.only(title)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.serial.only(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.serial.only(\'group\', () => {\\n  test(\'runs first\', async ({ page }) => {\\n  });\\n  test(\'runs second\', async ({ page }) => {\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.serial.only(() => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":25230,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Group title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":25231,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"See [test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) for\\ndetails description."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestDetails"},"name":"TestDetails","package":"playwright"}},{"id":25232,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.serial.only(title[, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-serial-only).\\nAny tests added in this callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":25233,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25234,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]}],"groups":[{"title":"Methods","children":[25219]}],"sources":[],"signatures":[{"id":25235,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":25236,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Group title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":25237,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.serial([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-serial).\\nAny tests added in this callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":25238,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25239,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":25240,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":25241,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.serial([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-serial).\\nAny tests added in this callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":25242,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25243,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":25244,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":25245,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Group title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":25246,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"See [test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) for\\ndetails description."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestDetails"},"name":"TestDetails","package":"playwright"}},{"id":25247,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.serial([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-serial).\\nAny tests added in this callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":25248,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25249,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"id":25250,"name":"parallel","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"**NOTE** See [test.describe.configure([options])](https://playwright.dev/docs/api/class-test#test-describe-configure) for\\nthe preferred way of configuring the execution mode.\\n\\nDeclares a group of tests that could be run in parallel. By default, tests in a single test file run one after\\nanother, but using\\n[test.describe.parallel([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-parallel)\\nallows them to run in parallel.\\n- "},{"kind":"code","text":"`test.describe.parallel(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.parallel(callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.parallel(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.parallel(\'group\', () => {\\n  test(\'runs in parallel 1\', async ({ page }) => {});\\n  test(\'runs in parallel 2\', async ({ page }) => {});\\n});\\n```"},{"kind":"text","text":"\\n\\nNote that parallel tests are executed in separate processes and cannot share any state or global variables. Each of\\nthe parallel tests executes all relevant hooks.\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.parallel(() => {\\n  // ...\\n});\\n```"}]},"sources":[],"type":{"type":"reflection","declaration":{"id":25251,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":25252,"name":"only","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25253,"name":"only","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"**NOTE** See [test.describe.configure([options])](https://playwright.dev/docs/api/class-test#test-describe-configure) for\\nthe preferred way of configuring the execution mode.\\n\\nDeclares a focused group of tests that could be run in parallel. This is similar to\\n[test.describe.parallel([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-parallel),\\nbut focuses the group. If there are some focused tests or suites, all of them will be run but nothing else.\\n- "},{"kind":"code","text":"`test.describe.parallel.only(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.parallel.only(callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.parallel.only(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.parallel.only(\'group\', () => {\\n  test(\'runs in parallel 1\', async ({ page }) => {});\\n  test(\'runs in parallel 2\', async ({ page }) => {});\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.parallel.only(() => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":25254,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Group title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":25255,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.parallel.only([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-parallel-only).\\nAny tests added in this callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":25256,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25257,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":25258,"name":"only","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"**NOTE** See [test.describe.configure([options])](https://playwright.dev/docs/api/class-test#test-describe-configure) for\\nthe preferred way of configuring the execution mode.\\n\\nDeclares a focused group of tests that could be run in parallel. This is similar to\\n[test.describe.parallel([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-parallel),\\nbut focuses the group. If there are some focused tests or suites, all of them will be run but nothing else.\\n- "},{"kind":"code","text":"`test.describe.parallel.only(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.parallel.only(callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.parallel.only(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.parallel.only(\'group\', () => {\\n  test(\'runs in parallel 1\', async ({ page }) => {});\\n  test(\'runs in parallel 2\', async ({ page }) => {});\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.parallel.only(() => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":25259,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.parallel.only([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-parallel-only).\\nAny tests added in this callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":25260,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25261,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":25262,"name":"only","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"**NOTE** See [test.describe.configure([options])](https://playwright.dev/docs/api/class-test#test-describe-configure) for\\nthe preferred way of configuring the execution mode.\\n\\nDeclares a focused group of tests that could be run in parallel. This is similar to\\n[test.describe.parallel([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-parallel),\\nbut focuses the group. If there are some focused tests or suites, all of them will be run but nothing else.\\n- "},{"kind":"code","text":"`test.describe.parallel.only(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.parallel.only(callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.parallel.only(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.parallel.only(\'group\', () => {\\n  test(\'runs in parallel 1\', async ({ page }) => {});\\n  test(\'runs in parallel 2\', async ({ page }) => {});\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.parallel.only(() => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":25263,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Group title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":25264,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"See [test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) for\\ndetails description."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestDetails"},"name":"TestDetails","package":"playwright"}},{"id":25265,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.parallel.only([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-parallel-only).\\nAny tests added in this callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":25266,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25267,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]}],"groups":[{"title":"Methods","children":[25252]}],"sources":[],"signatures":[{"id":25268,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":25269,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Group title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":25270,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.parallel([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-parallel).\\nAny tests added in this callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":25271,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25272,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":25273,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":25274,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.parallel([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-parallel).\\nAny tests added in this callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":25275,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25276,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":25277,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":25278,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Group title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":25279,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"See [test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) for\\ndetails description."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestDetails"},"name":"TestDetails","package":"playwright"}},{"id":25280,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.parallel([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-parallel).\\nAny tests added in this callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":25281,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25282,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"id":25283,"name":"configure","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the enclosing scope. Can be executed either on the top level or inside a describe. Configuration applies\\nto the entire scope, regardless of whether it run before or after the test declaration.\\n\\nLearn more about the execution modes [here](https://playwright.dev/docs/test-parallel).\\n\\n**Usage**\\n- Running tests in parallel.\\n\\n  "},{"kind":"code","text":"```js\\n  // Run all the tests in the file concurrently using parallel workers.\\n  test.describe.configure({ mode: \'parallel\' });\\n  test(\'runs in parallel 1\', async ({ page }) => {});\\n  test(\'runs in parallel 2\', async ({ page }) => {});\\n  ```"},{"kind":"text","text":"\\n\\n- Running tests in order, retrying each failed test independently.\\n\\n  This is the default mode. It can be useful to set it explicitly to override project configuration that uses\\n  "},{"kind":"code","text":"`fullyParallel`"},{"kind":"text","text":".\\n\\n  "},{"kind":"code","text":"```js\\n  // Tests in this file run in order. Retries, if any, run independently.\\n  test.describe.configure({ mode: \'default\' });\\n  test(\'runs first\', async ({ page }) => {});\\n  test(\'runs second\', async ({ page }) => {});\\n  ```"},{"kind":"text","text":"\\n\\n- Running tests serially, retrying from the start. If one of the serial tests fails, all subsequent tests are\\n  skipped.\\n\\n  **NOTE** Running serially is not recommended. It is usually better to make your tests isolated, so they can be\\n  run independently.\\n\\n  "},{"kind":"code","text":"```js\\n  // Annotate tests as inter-dependent.\\n  test.describe.configure({ mode: \'serial\' });\\n  test(\'runs first\', async ({ page }) => {});\\n  test(\'runs second\', async ({ page }) => {});\\n  ```"},{"kind":"text","text":"\\n\\n- Configuring retries and timeout for each test.\\n\\n  "},{"kind":"code","text":"```js\\n  // Each test in the file will be retried twice and have a timeout of 20 seconds.\\n  test.describe.configure({ retries: 2, timeout: 20_000 });\\n  test(\'runs first\', async ({ page }) => {});\\n  test(\'runs second\', async ({ page }) => {});\\n  ```"},{"kind":"text","text":"\\n\\n- Run multiple describes in parallel, but tests inside each describe in order.\\n\\n  "},{"kind":"code","text":"```js\\n  test.describe.configure({ mode: \'parallel\' });\\n\\n  test.describe(\'A, runs in parallel with B\', () => {\\n    test.describe.configure({ mode: \'default\' });\\n    test(\'in order A1\', async ({ page }) => {});\\n    test(\'in order A2\', async ({ page }) => {});\\n  });\\n\\n  test.describe(\'B, runs in parallel with A\', () => {\\n    test.describe.configure({ mode: \'default\' });\\n    test(\'in order B1\', async ({ page }) => {});\\n    test(\'in order B2\', async ({ page }) => {});\\n  });\\n  ```"}]},"sources":[],"type":{"type":"reflection","declaration":{"id":25284,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25285,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":25286,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":25287,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":25288,"name":"mode","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"literal","value":"default"},{"type":"literal","value":"parallel"},{"type":"literal","value":"serial"}]}},{"id":25289,"name":"retries","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"number"}},{"id":25290,"name":"timeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[25288,25289,25290]}],"sources":[]}}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"groups":[{"title":"Properties","children":[25217,25250,25283]},{"title":"Methods","children":[25169,25185,25201]}],"sources":[],"signatures":[{"id":25291,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":25292,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Group title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":25293,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe). Any tests\\ndeclared in this callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":25294,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25295,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":25296,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":25297,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe). Any tests\\ndeclared in this callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":25298,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25299,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":25300,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":25301,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Group title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":25302,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Additional details for all tests in the group."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestDetails"},"name":"TestDetails","package":"playwright"}},{"id":25303,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe). Any tests\\ndeclared in this callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":25304,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25305,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"id":25306,"name":"skip","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25307,"name":"skip","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Skip a test. Playwright will not run the test past the "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":" call.\\n\\nSkipped tests are not supposed to be ever run. If you intent to fix the test, use\\n[test.fixme([title, details, body, condition, callback, description])](https://playwright.dev/docs/api/class-test#test-fixme)\\ninstead.\\n\\nTo declare a skipped test:\\n- "},{"kind":"code","text":"`test.skip(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip(title, details, body)`"},{"kind":"text","text":"\\n\\nTo skip a test at runtime:\\n- "},{"kind":"code","text":"`test.skip(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a skipped test, and Playwright will not run it.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.skip(\'never run\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test should be skipped in some configurations, but not all, you can skip the test inside the test body\\nbased on some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case. Playwright will run the test,\\nbut abort it immediately after the "},{"kind":"code","text":"`test.skip`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'Safari-only test\', async ({ page, browserName }) => {\\n  test.skip(browserName !== \'webkit\', \'This feature is Safari-only\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can skip all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group based\\non some condition with a single "},{"kind":"code","text":"`test.skip(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.skip(({ browserName }) => browserName !== \'webkit\', \'Safari-only\');\\n\\ntest(\'Safari-only test 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'Safari-only test 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend using "},{"kind":"code","text":"`test.skip(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.skip();\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":25308,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":25309,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test body that takes one or two arguments: an object with fixtures and optional\\n[TestInfo](https://playwright.dev/docs/api/class-testinfo)."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestBody"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":24796,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"reference","target":24804,"name":"SerenityWorkerFixtures","package":"@serenity-js/playwright-test"}]}],"name":"TestBody","package":"playwright"}}],"type":{"type":"intrinsic","name":"void"}},{"id":25310,"name":"skip","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Skip a test. Playwright will not run the test past the "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":" call.\\n\\nSkipped tests are not supposed to be ever run. If you intent to fix the test, use\\n[test.fixme([title, details, body, condition, callback, description])](https://playwright.dev/docs/api/class-test#test-fixme)\\ninstead.\\n\\nTo declare a skipped test:\\n- "},{"kind":"code","text":"`test.skip(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip(title, details, body)`"},{"kind":"text","text":"\\n\\nTo skip a test at runtime:\\n- "},{"kind":"code","text":"`test.skip(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a skipped test, and Playwright will not run it.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.skip(\'never run\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test should be skipped in some configurations, but not all, you can skip the test inside the test body\\nbased on some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case. Playwright will run the test,\\nbut abort it immediately after the "},{"kind":"code","text":"`test.skip`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'Safari-only test\', async ({ page, browserName }) => {\\n  test.skip(browserName !== \'webkit\', \'This feature is Safari-only\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can skip all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group based\\non some condition with a single "},{"kind":"code","text":"`test.skip(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.skip(({ browserName }) => browserName !== \'webkit\', \'Safari-only\');\\n\\ntest(\'Safari-only test 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'Safari-only test 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend using "},{"kind":"code","text":"`test.skip(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.skip();\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":25311,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":25312,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"See [test.(call)(title[, details, body])](https://playwright.dev/docs/api/class-test#test-call) for test details\\ndescription."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestDetails"},"name":"TestDetails","package":"playwright"}},{"id":25313,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test body that takes one or two arguments: an object with fixtures and optional\\n[TestInfo](https://playwright.dev/docs/api/class-testinfo)."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestBody"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":24796,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"reference","target":24804,"name":"SerenityWorkerFixtures","package":"@serenity-js/playwright-test"}]}],"name":"TestBody","package":"playwright"}}],"type":{"type":"intrinsic","name":"void"}},{"id":25314,"name":"skip","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Skip a test. Playwright will not run the test past the "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":" call.\\n\\nSkipped tests are not supposed to be ever run. If you intent to fix the test, use\\n[test.fixme([title, details, body, condition, callback, description])](https://playwright.dev/docs/api/class-test#test-fixme)\\ninstead.\\n\\nTo declare a skipped test:\\n- "},{"kind":"code","text":"`test.skip(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip(title, details, body)`"},{"kind":"text","text":"\\n\\nTo skip a test at runtime:\\n- "},{"kind":"code","text":"`test.skip(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a skipped test, and Playwright will not run it.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.skip(\'never run\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test should be skipped in some configurations, but not all, you can skip the test inside the test body\\nbased on some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case. Playwright will run the test,\\nbut abort it immediately after the "},{"kind":"code","text":"`test.skip`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'Safari-only test\', async ({ page, browserName }) => {\\n  test.skip(browserName !== \'webkit\', \'This feature is Safari-only\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can skip all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group based\\non some condition with a single "},{"kind":"code","text":"`test.skip(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.skip(({ browserName }) => browserName !== \'webkit\', \'Safari-only\');\\n\\ntest(\'Safari-only test 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'Safari-only test 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend using "},{"kind":"code","text":"`test.skip(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.skip();\\n  // ...\\n});\\n```"}]},"sources":[],"type":{"type":"intrinsic","name":"void"}},{"id":25315,"name":"skip","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Skip a test. Playwright will not run the test past the "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":" call.\\n\\nSkipped tests are not supposed to be ever run. If you intent to fix the test, use\\n[test.fixme([title, details, body, condition, callback, description])](https://playwright.dev/docs/api/class-test#test-fixme)\\ninstead.\\n\\nTo declare a skipped test:\\n- "},{"kind":"code","text":"`test.skip(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip(title, details, body)`"},{"kind":"text","text":"\\n\\nTo skip a test at runtime:\\n- "},{"kind":"code","text":"`test.skip(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a skipped test, and Playwright will not run it.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.skip(\'never run\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test should be skipped in some configurations, but not all, you can skip the test inside the test body\\nbased on some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case. Playwright will run the test,\\nbut abort it immediately after the "},{"kind":"code","text":"`test.skip`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'Safari-only test\', async ({ page, browserName }) => {\\n  test.skip(browserName !== \'webkit\', \'This feature is Safari-only\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can skip all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group based\\non some condition with a single "},{"kind":"code","text":"`test.skip(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.skip(({ browserName }) => browserName !== \'webkit\', \'Safari-only\');\\n\\ntest(\'Safari-only test 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'Safari-only test 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend using "},{"kind":"code","text":"`test.skip(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.skip();\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":25316,"name":"condition","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test is marked as \\"should fail\\" when the condition is "},{"kind":"code","text":"`true`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"boolean"}},{"id":25317,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional description that will be reflected in a test report."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}},{"id":25318,"name":"skip","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Skip a test. Playwright will not run the test past the "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":" call.\\n\\nSkipped tests are not supposed to be ever run. If you intent to fix the test, use\\n[test.fixme([title, details, body, condition, callback, description])](https://playwright.dev/docs/api/class-test#test-fixme)\\ninstead.\\n\\nTo declare a skipped test:\\n- "},{"kind":"code","text":"`test.skip(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip(title, details, body)`"},{"kind":"text","text":"\\n\\nTo skip a test at runtime:\\n- "},{"kind":"code","text":"`test.skip(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a skipped test, and Playwright will not run it.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.skip(\'never run\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test should be skipped in some configurations, but not all, you can skip the test inside the test body\\nbased on some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case. Playwright will run the test,\\nbut abort it immediately after the "},{"kind":"code","text":"`test.skip`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'Safari-only test\', async ({ page, browserName }) => {\\n  test.skip(browserName !== \'webkit\', \'This feature is Safari-only\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can skip all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group based\\non some condition with a single "},{"kind":"code","text":"`test.skip(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.skip(({ browserName }) => browserName !== \'webkit\', \'Safari-only\');\\n\\ntest(\'Safari-only test 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'Safari-only test 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend using "},{"kind":"code","text":"`test.skip(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.skip();\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":25319,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A function that returns whether to mark as \\"should fail\\", based on test fixtures. Test or tests are marked as\\n\\"should fail\\" when the return value is "},{"kind":"code","text":"`true`"},{"kind":"text","text":"."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"ConditionBody"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":24796,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"reference","target":24804,"name":"SerenityWorkerFixtures","package":"@serenity-js/playwright-test"}]}],"name":"ConditionBody","package":"playwright"}},{"id":25320,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional description that will be reflected in a test report."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":25321,"name":"fixme","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25322,"name":"fixme","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Mark a test as \\"fixme\\", with the intention to fix it. Playwright will not run the test past the "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":"\\ncall.\\n\\nTo declare a \\"fixme\\" test:\\n- "},{"kind":"code","text":"`test.fixme(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme(title, details, body)`"},{"kind":"text","text":"\\n\\nTo annotate test as \\"fixme\\" at runtime:\\n- "},{"kind":"code","text":"`test.fixme(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a test as to be fixed, and Playwright will not run it.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fixme(\'to be fixed\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test should be fixed in some configurations, but not all, you can mark the test as \\"fixme\\" inside the test\\nbody based on some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case. Playwright will run the\\ntest, but abort it immediately after the "},{"kind":"code","text":"`test.fixme`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'to be fixed in Safari\', async ({ page, browserName }) => {\\n  test.fixme(browserName === \'webkit\', \'This feature breaks in Safari for some reason\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can mark all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group as\\n\\"fixme\\" based on some condition with a single "},{"kind":"code","text":"`test.fixme(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fixme(({ browserName }) => browserName === \'webkit\', \'Should figure out the issue\');\\n\\ntest(\'to be fixed in Safari 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'to be fixed in Safari 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend using "},{"kind":"code","text":"`test.fixme(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.fixme();\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":25323,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":25324,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test body that takes one or two arguments: an object with fixtures and optional\\n[TestInfo](https://playwright.dev/docs/api/class-testinfo)."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestBody"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":24796,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"reference","target":24804,"name":"SerenityWorkerFixtures","package":"@serenity-js/playwright-test"}]}],"name":"TestBody","package":"playwright"}}],"type":{"type":"intrinsic","name":"void"}},{"id":25325,"name":"fixme","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Mark a test as \\"fixme\\", with the intention to fix it. Playwright will not run the test past the "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":"\\ncall.\\n\\nTo declare a \\"fixme\\" test:\\n- "},{"kind":"code","text":"`test.fixme(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme(title, details, body)`"},{"kind":"text","text":"\\n\\nTo annotate test as \\"fixme\\" at runtime:\\n- "},{"kind":"code","text":"`test.fixme(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a test as to be fixed, and Playwright will not run it.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fixme(\'to be fixed\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test should be fixed in some configurations, but not all, you can mark the test as \\"fixme\\" inside the test\\nbody based on some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case. Playwright will run the\\ntest, but abort it immediately after the "},{"kind":"code","text":"`test.fixme`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'to be fixed in Safari\', async ({ page, browserName }) => {\\n  test.fixme(browserName === \'webkit\', \'This feature breaks in Safari for some reason\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can mark all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group as\\n\\"fixme\\" based on some condition with a single "},{"kind":"code","text":"`test.fixme(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fixme(({ browserName }) => browserName === \'webkit\', \'Should figure out the issue\');\\n\\ntest(\'to be fixed in Safari 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'to be fixed in Safari 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend using "},{"kind":"code","text":"`test.fixme(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.fixme();\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":25326,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":25327,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"See [test.(call)(title[, details, body])](https://playwright.dev/docs/api/class-test#test-call) for test details\\ndescription."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestDetails"},"name":"TestDetails","package":"playwright"}},{"id":25328,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test body that takes one or two arguments: an object with fixtures and optional\\n[TestInfo](https://playwright.dev/docs/api/class-testinfo)."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestBody"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":24796,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"reference","target":24804,"name":"SerenityWorkerFixtures","package":"@serenity-js/playwright-test"}]}],"name":"TestBody","package":"playwright"}}],"type":{"type":"intrinsic","name":"void"}},{"id":25329,"name":"fixme","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Mark a test as \\"fixme\\", with the intention to fix it. Playwright will not run the test past the "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":"\\ncall.\\n\\nTo declare a \\"fixme\\" test:\\n- "},{"kind":"code","text":"`test.fixme(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme(title, details, body)`"},{"kind":"text","text":"\\n\\nTo annotate test as \\"fixme\\" at runtime:\\n- "},{"kind":"code","text":"`test.fixme(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a test as to be fixed, and Playwright will not run it.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fixme(\'to be fixed\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test should be fixed in some configurations, but not all, you can mark the test as \\"fixme\\" inside the test\\nbody based on some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case. Playwright will run the\\ntest, but abort it immediately after the "},{"kind":"code","text":"`test.fixme`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'to be fixed in Safari\', async ({ page, browserName }) => {\\n  test.fixme(browserName === \'webkit\', \'This feature breaks in Safari for some reason\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can mark all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group as\\n\\"fixme\\" based on some condition with a single "},{"kind":"code","text":"`test.fixme(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fixme(({ browserName }) => browserName === \'webkit\', \'Should figure out the issue\');\\n\\ntest(\'to be fixed in Safari 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'to be fixed in Safari 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend using "},{"kind":"code","text":"`test.fixme(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.fixme();\\n  // ...\\n});\\n```"}]},"sources":[],"type":{"type":"intrinsic","name":"void"}},{"id":25330,"name":"fixme","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Mark a test as \\"fixme\\", with the intention to fix it. Playwright will not run the test past the "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":"\\ncall.\\n\\nTo declare a \\"fixme\\" test:\\n- "},{"kind":"code","text":"`test.fixme(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme(title, details, body)`"},{"kind":"text","text":"\\n\\nTo annotate test as \\"fixme\\" at runtime:\\n- "},{"kind":"code","text":"`test.fixme(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a test as to be fixed, and Playwright will not run it.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fixme(\'to be fixed\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test should be fixed in some configurations, but not all, you can mark the test as \\"fixme\\" inside the test\\nbody based on some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case. Playwright will run the\\ntest, but abort it immediately after the "},{"kind":"code","text":"`test.fixme`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'to be fixed in Safari\', async ({ page, browserName }) => {\\n  test.fixme(browserName === \'webkit\', \'This feature breaks in Safari for some reason\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can mark all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group as\\n\\"fixme\\" based on some condition with a single "},{"kind":"code","text":"`test.fixme(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fixme(({ browserName }) => browserName === \'webkit\', \'Should figure out the issue\');\\n\\ntest(\'to be fixed in Safari 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'to be fixed in Safari 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend using "},{"kind":"code","text":"`test.fixme(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.fixme();\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":25331,"name":"condition","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test is marked as \\"should fail\\" when the condition is "},{"kind":"code","text":"`true`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"boolean"}},{"id":25332,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional description that will be reflected in a test report."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}},{"id":25333,"name":"fixme","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Mark a test as \\"fixme\\", with the intention to fix it. Playwright will not run the test past the "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":"\\ncall.\\n\\nTo declare a \\"fixme\\" test:\\n- "},{"kind":"code","text":"`test.fixme(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme(title, details, body)`"},{"kind":"text","text":"\\n\\nTo annotate test as \\"fixme\\" at runtime:\\n- "},{"kind":"code","text":"`test.fixme(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a test as to be fixed, and Playwright will not run it.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fixme(\'to be fixed\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test should be fixed in some configurations, but not all, you can mark the test as \\"fixme\\" inside the test\\nbody based on some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case. Playwright will run the\\ntest, but abort it immediately after the "},{"kind":"code","text":"`test.fixme`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'to be fixed in Safari\', async ({ page, browserName }) => {\\n  test.fixme(browserName === \'webkit\', \'This feature breaks in Safari for some reason\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can mark all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group as\\n\\"fixme\\" based on some condition with a single "},{"kind":"code","text":"`test.fixme(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fixme(({ browserName }) => browserName === \'webkit\', \'Should figure out the issue\');\\n\\ntest(\'to be fixed in Safari 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'to be fixed in Safari 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend using "},{"kind":"code","text":"`test.fixme(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.fixme();\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":25334,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A function that returns whether to mark as \\"should fail\\", based on test fixtures. Test or tests are marked as\\n\\"should fail\\" when the return value is "},{"kind":"code","text":"`true`"},{"kind":"text","text":"."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"ConditionBody"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":24796,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"reference","target":24804,"name":"SerenityWorkerFixtures","package":"@serenity-js/playwright-test"}]}],"name":"ConditionBody","package":"playwright"}},{"id":25335,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional description that will be reflected in a test report."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":25336,"name":"fail","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Marks a test as \\"should fail\\". Playwright runs this test and ensures that it is actually failing. This is useful\\nfor documentation purposes to acknowledge that some functionality is broken until it is fixed.\\n\\nTo declare a \\"failing\\" test:\\n- "},{"kind":"code","text":"`test.fail(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fail(title, details, body)`"},{"kind":"text","text":"\\n\\nTo annotate test as \\"failing\\" at runtime:\\n- "},{"kind":"code","text":"`test.fail(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fail(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fail()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a test as failing, so that Playwright ensures it actually fails.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fail(\'not yet ready\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test fails in some configurations, but not all, you can mark the test as failing inside the test body based\\non some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'fail in WebKit\', async ({ page, browserName }) => {\\n  test.fail(browserName === \'webkit\', \'This feature is not implemented for Mac yet\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can mark all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group as\\n\\"should fail\\" based on some condition with a single "},{"kind":"code","text":"`test.fail(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fail(({ browserName }) => browserName === \'webkit\', \'not implemented yet\');\\n\\ntest(\'fail in WebKit 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'fail in WebKit 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.fail()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend declaring a failing test with "},{"kind":"code","text":"`test.fail(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.fail();\\n  // ...\\n});\\n```"}]},"sources":[],"type":{"type":"reflection","declaration":{"id":25337,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":25338,"name":"only","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25339,"name":"only","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"You can use "},{"kind":"code","text":"`test.fail.only`"},{"kind":"text","text":" to focus on a specific test that is expected to fail. This is particularly useful when\\ndebugging a failing test or working on a specific issue.\\n\\nTo declare a focused \\"failing\\" test:\\n- "},{"kind":"code","text":"`test.fail.only(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fail.only(title, details, body)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a focused failing test, so that Playwright runs only this test and ensures it actually fails.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fail.only(\'focused failing test\', async ({ page }) => {\\n  // This test is expected to fail\\n});\\ntest(\'not in the focused group\', async ({ page }) => {\\n  // This test will not run\\n});\\n```"}]},"sources":[],"parameters":[{"id":25340,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":25341,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test body that takes one or two arguments: an object with fixtures and optional\\n[TestInfo](https://playwright.dev/docs/api/class-testinfo)."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestBody"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":24796,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"reference","target":24804,"name":"SerenityWorkerFixtures","package":"@serenity-js/playwright-test"}]}],"name":"TestBody","package":"playwright"}}],"type":{"type":"intrinsic","name":"void"}},{"id":25342,"name":"only","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"You can use "},{"kind":"code","text":"`test.fail.only`"},{"kind":"text","text":" to focus on a specific test that is expected to fail. This is particularly useful when\\ndebugging a failing test or working on a specific issue.\\n\\nTo declare a focused \\"failing\\" test:\\n- "},{"kind":"code","text":"`test.fail.only(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fail.only(title, details, body)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a focused failing test, so that Playwright runs only this test and ensures it actually fails.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fail.only(\'focused failing test\', async ({ page }) => {\\n  // This test is expected to fail\\n});\\ntest(\'not in the focused group\', async ({ page }) => {\\n  // This test will not run\\n});\\n```"}]},"sources":[],"parameters":[{"id":25343,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":25344,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"See [test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) for test\\ndetails description."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestDetails"},"name":"TestDetails","package":"playwright"}},{"id":25345,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test body that takes one or two arguments: an object with fixtures and optional\\n[TestInfo](https://playwright.dev/docs/api/class-testinfo)."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestBody"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":24796,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"reference","target":24804,"name":"SerenityWorkerFixtures","package":"@serenity-js/playwright-test"}]}],"name":"TestBody","package":"playwright"}}],"type":{"type":"intrinsic","name":"void"}}]}],"groups":[{"title":"Methods","children":[25338]}],"sources":[],"signatures":[{"id":25346,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":25347,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":25348,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test body that takes one or two arguments: an object with fixtures and optional\\n[TestInfo](https://playwright.dev/docs/api/class-testinfo)."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestBody"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":24796,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"reference","target":24804,"name":"SerenityWorkerFixtures","package":"@serenity-js/playwright-test"}]}],"name":"TestBody","package":"playwright"}}],"type":{"type":"intrinsic","name":"void"}},{"id":25349,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":25350,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":25351,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"See [test.(call)(title[, details, body])](https://playwright.dev/docs/api/class-test#test-call) for test details\\ndescription."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestDetails"},"name":"TestDetails","package":"playwright"}},{"id":25352,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test body that takes one or two arguments: an object with fixtures and optional\\n[TestInfo](https://playwright.dev/docs/api/class-testinfo)."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestBody"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":24796,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"reference","target":24804,"name":"SerenityWorkerFixtures","package":"@serenity-js/playwright-test"}]}],"name":"TestBody","package":"playwright"}}],"type":{"type":"intrinsic","name":"void"}},{"id":25353,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":25354,"name":"condition","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test is marked as \\"should fail\\" when the condition is "},{"kind":"code","text":"`true`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"boolean"}},{"id":25355,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional description that will be reflected in a test report."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}},{"id":25356,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":25357,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A function that returns whether to mark as \\"should fail\\", based on test fixtures. Test or tests are marked as\\n\\"should fail\\" when the return value is "},{"kind":"code","text":"`true`"},{"kind":"text","text":"."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"ConditionBody"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":24796,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"reference","target":24804,"name":"SerenityWorkerFixtures","package":"@serenity-js/playwright-test"}]}],"name":"ConditionBody","package":"playwright"}},{"id":25358,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional description that will be reflected in a test report."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}},{"id":25359,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}},{"id":25360,"name":"slow","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25361,"name":"slow","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Marks a test as \\"slow\\". Slow test will be given triple the default timeout.\\n\\nNote that [test.slow([condition, callback, description])](https://playwright.dev/docs/api/class-test#test-slow)\\ncannot be used in a "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" or "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hook. Use\\n[test.setTimeout(timeout)](https://playwright.dev/docs/api/class-test#test-set-timeout) instead.\\n- "},{"kind":"code","text":"`test.slow()`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.slow(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.slow(callback, description)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can mark a test as slow by calling "},{"kind":"code","text":"`test.slow()`"},{"kind":"text","text":" inside the test body.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'slow test\', async ({ page }) => {\\n  test.slow();\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test is slow in some configurations, but not all, you can mark it as slow based on a condition. We\\nrecommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'slow in Safari\', async ({ page, browserName }) => {\\n  test.slow(browserName === \'webkit\', \'This feature is slow in Safari\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can mark all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group as\\n\\"slow\\" based on some condition by passing a callback.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.slow(({ browserName }) => browserName === \'webkit\', \'all tests are slow in Safari\');\\n\\ntest(\'slow in Safari 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'fail in Safari 2\', async ({ page }) => {\\n  // ...\\n});\\n```"}]},"sources":[],"type":{"type":"intrinsic","name":"void"}},{"id":25362,"name":"slow","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Marks a test as \\"slow\\". Slow test will be given triple the default timeout.\\n\\nNote that [test.slow([condition, callback, description])](https://playwright.dev/docs/api/class-test#test-slow)\\ncannot be used in a "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" or "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hook. Use\\n[test.setTimeout(timeout)](https://playwright.dev/docs/api/class-test#test-set-timeout) instead.\\n- "},{"kind":"code","text":"`test.slow()`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.slow(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.slow(callback, description)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can mark a test as slow by calling "},{"kind":"code","text":"`test.slow()`"},{"kind":"text","text":" inside the test body.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'slow test\', async ({ page }) => {\\n  test.slow();\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test is slow in some configurations, but not all, you can mark it as slow based on a condition. We\\nrecommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'slow in Safari\', async ({ page, browserName }) => {\\n  test.slow(browserName === \'webkit\', \'This feature is slow in Safari\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can mark all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group as\\n\\"slow\\" based on some condition by passing a callback.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.slow(({ browserName }) => browserName === \'webkit\', \'all tests are slow in Safari\');\\n\\ntest(\'slow in Safari 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'fail in Safari 2\', async ({ page }) => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":25363,"name":"condition","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test is marked as \\"slow\\" when the condition is "},{"kind":"code","text":"`true`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"boolean"}},{"id":25364,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional description that will be reflected in a test report."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}},{"id":25365,"name":"slow","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Marks a test as \\"slow\\". Slow test will be given triple the default timeout.\\n\\nNote that [test.slow([condition, callback, description])](https://playwright.dev/docs/api/class-test#test-slow)\\ncannot be used in a "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" or "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hook. Use\\n[test.setTimeout(timeout)](https://playwright.dev/docs/api/class-test#test-set-timeout) instead.\\n- "},{"kind":"code","text":"`test.slow()`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.slow(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.slow(callback, description)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can mark a test as slow by calling "},{"kind":"code","text":"`test.slow()`"},{"kind":"text","text":" inside the test body.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'slow test\', async ({ page }) => {\\n  test.slow();\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test is slow in some configurations, but not all, you can mark it as slow based on a condition. We\\nrecommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'slow in Safari\', async ({ page, browserName }) => {\\n  test.slow(browserName === \'webkit\', \'This feature is slow in Safari\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can mark all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group as\\n\\"slow\\" based on some condition by passing a callback.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.slow(({ browserName }) => browserName === \'webkit\', \'all tests are slow in Safari\');\\n\\ntest(\'slow in Safari 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'fail in Safari 2\', async ({ page }) => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":25366,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A function that returns whether to mark as \\"slow\\", based on test fixtures. Test or tests are marked as \\"slow\\" when\\nthe return value is "},{"kind":"code","text":"`true`"},{"kind":"text","text":"."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"ConditionBody"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":24796,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"reference","target":24804,"name":"SerenityWorkerFixtures","package":"@serenity-js/playwright-test"}]}],"name":"ConditionBody","package":"playwright"}},{"id":25367,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional description that will be reflected in a test report."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":25368,"name":"setTimeout","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25369,"name":"setTimeout","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Changes the timeout for the test. Zero means no timeout. Learn more about [various timeouts](https://playwright.dev/docs/test-timeouts).\\n\\nTimeout for the currently running test is available through\\n[testInfo.timeout](https://playwright.dev/docs/api/class-testinfo#test-info-timeout).\\n\\n**Usage**\\n- Changing test timeout.\\n\\n  "},{"kind":"code","text":"```js\\n  test(\'very slow test\', async ({ page }) => {\\n    test.setTimeout(120000);\\n    // ...\\n  });\\n  ```"},{"kind":"text","text":"\\n\\n- Changing timeout from a slow "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":" hook. Note that this affects the test timeout that is shared with\\n  "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":" hooks.\\n\\n  "},{"kind":"code","text":"```js\\n  test.beforeEach(async ({ page }, testInfo) => {\\n    // Extend timeout for all tests running this hook by 30 seconds.\\n    test.setTimeout(testInfo.timeout + 30000);\\n  });\\n  ```"},{"kind":"text","text":"\\n\\n- Changing timeout for a "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" or "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hook. Note this affects the hook\'s timeout, not the test\\n  timeout.\\n\\n  "},{"kind":"code","text":"```js\\n  test.beforeAll(async () => {\\n    // Set timeout for this hook.\\n    test.setTimeout(60000);\\n  });\\n  ```"},{"kind":"text","text":"\\n\\n- Changing timeout for all tests in a\\n  [test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group.\\n\\n  "},{"kind":"code","text":"```js\\n  test.describe(\'group\', () => {\\n    // Applies to all tests in this group.\\n    test.describe.configure({ timeout: 60000 });\\n\\n    test(\'test one\', async () => { /* ... */ });\\n    test(\'test two\', async () => { /* ... */ });\\n    test(\'test three\', async () => { /* ... */ });\\n  });\\n  ```"}]},"sources":[],"parameters":[{"id":25370,"name":"timeout","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Timeout in milliseconds."}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":25371,"name":"beforeEach","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25372,"name":"beforeEach","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":" hook that is executed before each test.\\n\\nWhen called in the scope of a test file, runs before each test in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nbefore each test in the group.\\n\\nYou can access all the same [Fixtures](https://playwright.dev/docs/api/class-fixtures) as the test body itself, and\\nalso the [TestInfo](https://playwright.dev/docs/api/class-testinfo) object that gives a lot of useful information.\\nFor example, you can navigate the page before starting the test.\\n\\nYou can use [test.afterEach([title, hookFunction])](https://playwright.dev/docs/api/class-test#test-after-each) to\\nteardown any resources set up in "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":".\\n- "},{"kind":"code","text":"`test.beforeEach(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.beforeEach(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.beforeEach(async ({ page }) => {\\n  console.log(`Running ${test.info().title}`);\\n  await page.goto(\'https://my.start.url/\');\\n});\\n\\ntest(\'my test\', async ({ page }) => {\\n  expect(page.url()).toBe(\'https://my.start.url/\');\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\ntest.beforeEach(\'Open start URL\', async ({ page }) => {\\n  console.log(`Running ${test.info().title}`);\\n  await page.goto(\'https://my.start.url/\');\\n});\\n```"}]},"sources":[],"parameters":[{"id":25373,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":25374,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25375,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":25376,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":24796,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"reference","target":24804,"name":"SerenityWorkerFixtures","package":"@serenity-js/playwright-test"}]}},{"id":25377,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":25378,"name":"beforeEach","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":" hook that is executed before each test.\\n\\nWhen called in the scope of a test file, runs before each test in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nbefore each test in the group.\\n\\nYou can access all the same [Fixtures](https://playwright.dev/docs/api/class-fixtures) as the test body itself, and\\nalso the [TestInfo](https://playwright.dev/docs/api/class-testinfo) object that gives a lot of useful information.\\nFor example, you can navigate the page before starting the test.\\n\\nYou can use [test.afterEach([title, hookFunction])](https://playwright.dev/docs/api/class-test#test-after-each) to\\nteardown any resources set up in "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":".\\n- "},{"kind":"code","text":"`test.beforeEach(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.beforeEach(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.beforeEach(async ({ page }) => {\\n  console.log(`Running ${test.info().title}`);\\n  await page.goto(\'https://my.start.url/\');\\n});\\n\\ntest(\'my test\', async ({ page }) => {\\n  expect(page.url()).toBe(\'https://my.start.url/\');\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\ntest.beforeEach(\'Open start URL\', async ({ page }) => {\\n  console.log(`Running ${test.info().title}`);\\n  await page.goto(\'https://my.start.url/\');\\n});\\n```"}]},"sources":[],"parameters":[{"id":25379,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Hook title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":25380,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":25381,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25382,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":25383,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":24796,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"reference","target":24804,"name":"SerenityWorkerFixtures","package":"@serenity-js/playwright-test"}]}},{"id":25384,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":25385,"name":"afterEach","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25386,"name":"afterEach","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares an "},{"kind":"code","text":"`afterEach`"},{"kind":"text","text":" hook that is executed after each test.\\n\\nWhen called in the scope of a test file, runs after each test in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nafter each test in the group.\\n\\nYou can access all the same [Fixtures](https://playwright.dev/docs/api/class-fixtures) as the test body itself, and\\nalso the [TestInfo](https://playwright.dev/docs/api/class-testinfo) object that gives a lot of useful information.\\nFor example, you can check whether the test succeeded or failed.\\n- "},{"kind":"code","text":"`test.afterEach(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.afterEach(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`afterEach`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.afterEach(async ({ page }) => {\\n  console.log(`Finished ${test.info().title} with status ${test.info().status}`);\\n\\n  if (test.info().status !== test.info().expectedStatus)\\n    console.log(`Did not run as expected, ended up at ${page.url()}`);\\n});\\n\\ntest(\'my test\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\ntest.afterEach(\'Status check\', async ({ page }) => {\\n  if (test.info().status !== test.info().expectedStatus)\\n    console.log(`Did not run as expected, ended up at ${page.url()}`);\\n});\\n```"}]},"sources":[],"parameters":[{"id":25387,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":25388,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25389,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":25390,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":24796,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"reference","target":24804,"name":"SerenityWorkerFixtures","package":"@serenity-js/playwright-test"}]}},{"id":25391,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":25392,"name":"afterEach","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares an "},{"kind":"code","text":"`afterEach`"},{"kind":"text","text":" hook that is executed after each test.\\n\\nWhen called in the scope of a test file, runs after each test in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nafter each test in the group.\\n\\nYou can access all the same [Fixtures](https://playwright.dev/docs/api/class-fixtures) as the test body itself, and\\nalso the [TestInfo](https://playwright.dev/docs/api/class-testinfo) object that gives a lot of useful information.\\nFor example, you can check whether the test succeeded or failed.\\n- "},{"kind":"code","text":"`test.afterEach(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.afterEach(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`afterEach`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.afterEach(async ({ page }) => {\\n  console.log(`Finished ${test.info().title} with status ${test.info().status}`);\\n\\n  if (test.info().status !== test.info().expectedStatus)\\n    console.log(`Did not run as expected, ended up at ${page.url()}`);\\n});\\n\\ntest(\'my test\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\ntest.afterEach(\'Status check\', async ({ page }) => {\\n  if (test.info().status !== test.info().expectedStatus)\\n    console.log(`Did not run as expected, ended up at ${page.url()}`);\\n});\\n```"}]},"sources":[],"parameters":[{"id":25393,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Hook title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":25394,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":25395,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25396,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":25397,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":24796,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"reference","target":24804,"name":"SerenityWorkerFixtures","package":"@serenity-js/playwright-test"}]}},{"id":25398,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":25399,"name":"beforeAll","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25400,"name":"beforeAll","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" hook that is executed once per worker process before all tests.\\n\\nWhen called in the scope of a test file, runs before all tests in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nbefore all tests in the group.\\n\\nYou can use [test.afterAll([title, hookFunction])](https://playwright.dev/docs/api/class-test#test-after-all) to\\nteardown any resources set up in "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":".\\n- "},{"kind":"code","text":"`test.beforeAll(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.beforeAll(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nNote that worker process is restarted on test failures, and "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" hook runs again in the new worker. Learn\\nmore about [workers and failures](https://playwright.dev/docs/test-retries).\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.beforeAll(async () => {\\n  console.log(\'Before tests\');\\n});\\n\\ntest.afterAll(async () => {\\n  console.log(\'After tests\');\\n});\\n\\ntest(\'my test\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\ntest.beforeAll(\'Setup\', async () => {\\n  console.log(\'Before tests\');\\n});\\n```"}]},"sources":[],"parameters":[{"id":25401,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":25402,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25403,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":25404,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":24796,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"reference","target":24804,"name":"SerenityWorkerFixtures","package":"@serenity-js/playwright-test"}]}},{"id":25405,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":25406,"name":"beforeAll","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" hook that is executed once per worker process before all tests.\\n\\nWhen called in the scope of a test file, runs before all tests in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nbefore all tests in the group.\\n\\nYou can use [test.afterAll([title, hookFunction])](https://playwright.dev/docs/api/class-test#test-after-all) to\\nteardown any resources set up in "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":".\\n- "},{"kind":"code","text":"`test.beforeAll(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.beforeAll(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nNote that worker process is restarted on test failures, and "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" hook runs again in the new worker. Learn\\nmore about [workers and failures](https://playwright.dev/docs/test-retries).\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.beforeAll(async () => {\\n  console.log(\'Before tests\');\\n});\\n\\ntest.afterAll(async () => {\\n  console.log(\'After tests\');\\n});\\n\\ntest(\'my test\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\ntest.beforeAll(\'Setup\', async () => {\\n  console.log(\'Before tests\');\\n});\\n```"}]},"sources":[],"parameters":[{"id":25407,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Hook title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":25408,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":25409,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25410,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":25411,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":24796,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"reference","target":24804,"name":"SerenityWorkerFixtures","package":"@serenity-js/playwright-test"}]}},{"id":25412,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":25413,"name":"afterAll","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25414,"name":"afterAll","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares an "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hook that is executed once per worker after all tests.\\n\\nWhen called in the scope of a test file, runs after all tests in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nafter all tests in the group.\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nNote that worker process is restarted on test failures, and "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hook runs again in the new worker. Learn\\nmore about [workers and failures](https://playwright.dev/docs/test-retries).\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n- "},{"kind":"code","text":"`test.afterAll(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.afterAll(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.afterAll(async () => {\\n  console.log(\'Done with tests\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\ntest.afterAll(\'Teardown\', async () => {\\n  console.log(\'Done with tests\');\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":25415,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":25416,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25417,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":25418,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":24796,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"reference","target":24804,"name":"SerenityWorkerFixtures","package":"@serenity-js/playwright-test"}]}},{"id":25419,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":25420,"name":"afterAll","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares an "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hook that is executed once per worker after all tests.\\n\\nWhen called in the scope of a test file, runs after all tests in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nafter all tests in the group.\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nNote that worker process is restarted on test failures, and "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hook runs again in the new worker. Learn\\nmore about [workers and failures](https://playwright.dev/docs/test-retries).\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n- "},{"kind":"code","text":"`test.afterAll(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.afterAll(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.afterAll(async () => {\\n  console.log(\'Done with tests\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\ntest.afterAll(\'Teardown\', async () => {\\n  console.log(\'Done with tests\');\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":25421,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Hook title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":25422,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":25423,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25424,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":25425,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":24796,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"reference","target":24804,"name":"SerenityWorkerFixtures","package":"@serenity-js/playwright-test"}]}},{"id":25426,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":25427,"name":"use","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25428,"name":"use","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Specifies options or fixtures to use in a single test file or a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group. Most\\nuseful to set an option, for example set "},{"kind":"code","text":"`locale`"},{"kind":"text","text":" to configure "},{"kind":"code","text":"`context`"},{"kind":"text","text":" fixture.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.use({ locale: \'en-US\' });\\n\\ntest(\'test with locale\', async ({ page }) => {\\n  // Default context and page have locale as specified\\n});\\n```"},{"kind":"text","text":"\\n\\n**Details**\\n\\n"},{"kind":"code","text":"`test.use`"},{"kind":"text","text":" can be called either in the global scope or inside "},{"kind":"code","text":"`test.describe`"},{"kind":"text","text":". It is an error to call it within\\n"},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":" or "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":".\\n\\nIt is also possible to override a fixture by providing a function.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.use({\\n  locale: async ({}, use) => {\\n    // Read locale from some configuration file.\\n    const locale = await fs.promises.readFile(\'test-locale\', \'utf-8\');\\n    await use(locale);\\n  },\\n});\\n\\ntest(\'test with locale\', async ({ page }) => {\\n  // Default context and page have locale as specified\\n});\\n```"}]},"sources":[],"parameters":[{"id":25429,"name":"fixtures","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"Fixtures"},"typeArguments":[{"type":"reflection","declaration":{"id":25430,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true}}},{"type":"reflection","declaration":{"id":25431,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true}}},{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":24796,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"}]},{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"reference","target":24804,"name":"SerenityWorkerFixtures","package":"@serenity-js/playwright-test"}]}],"name":"Fixtures","package":"playwright"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":25432,"name":"step","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a test step that is shown in the report.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'test\', async ({ page }) => {\\n  await test.step(\'Log in\', async () => {\\n    // ...\\n  });\\n\\n  await test.step(\'Outer step\', async () => {\\n    // ...\\n    // You can nest steps inside each other.\\n    await test.step(\'Inner step\', async () => {\\n      // ...\\n    });\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\n**Details**\\n\\nThe method returns the value returned by the step callback.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'test\', async ({ page }) => {\\n  const user = await test.step(\'Log in\', async () => {\\n    // ...\\n    return \'john\';\\n  });\\n  expect(user).toBe(\'john\');\\n});\\n```"},{"kind":"text","text":"\\n\\n**Decorator**\\n\\nYou can use TypeScript method decorators to turn a method into a step. Each call to the decorated method will show\\nup as a step in the report.\\n\\n"},{"kind":"code","text":"```js\\nfunction step(target: Function, context: ClassMethodDecoratorContext) {\\n  return function replacementMethod(...args: any) {\\n    const name = this.constructor.name + \'.\' + (context.name as string);\\n    return test.step(name, async () => {\\n      return await target.call(this, ...args);\\n    });\\n  };\\n}\\n\\nclass LoginPage {\\n  constructor(readonly page: Page) {}\\n\\n  @step\\n  async login() {\\n    const account = { username: \'Alice\', password: \'s3cr3t\' };\\n    await this.page.getByLabel(\'Username or email address\').fill(account.username);\\n    await this.page.getByLabel(\'Password\').fill(account.password);\\n    await this.page.getByRole(\'button\', { name: \'Sign in\' }).click();\\n    await expect(this.page.getByRole(\'button\', { name: \'View profile and more\' })).toBeVisible();\\n  }\\n}\\n\\ntest(\'example\', async ({ page }) => {\\n  const loginPage = new LoginPage(page);\\n  await loginPage.login();\\n});\\n```"},{"kind":"text","text":"\\n\\n**Boxing**\\n\\nWhen something inside a step fails, you would usually see the error pointing to the exact action that failed. For\\nexample, consider the following login step:\\n\\n"},{"kind":"code","text":"```js\\nasync function login(page) {\\n  await test.step(\'login\', async () => {\\n    const account = { username: \'Alice\', password: \'s3cr3t\' };\\n    await page.getByLabel(\'Username or email address\').fill(account.username);\\n    await page.getByLabel(\'Password\').fill(account.password);\\n    await page.getByRole(\'button\', { name: \'Sign in\' }).click();\\n    await expect(page.getByRole(\'button\', { name: \'View profile and more\' })).toBeVisible();\\n  });\\n}\\n\\ntest(\'example\', async ({ page }) => {\\n  await page.goto(\'https://github.com/login\');\\n  await login(page);\\n});\\n```"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```txt\\nError: Timed out 5000ms waiting for expect(locator).toBeVisible()\\n  ... error details omitted ...\\n\\n   8 |     await page.getByRole(\'button\', { name: \'Sign in\' }).click();\\n>  9 |     await expect(page.getByRole(\'button\', { name: \'View profile and more\' })).toBeVisible();\\n     |                                                                               ^\\n  10 |   });\\n```"},{"kind":"text","text":"\\n\\nAs we see above, the test may fail with an error pointing inside the step. If you would like the error to highlight\\nthe \\"login\\" step instead of its internals, use the "},{"kind":"code","text":"`box`"},{"kind":"text","text":" option. An error inside a boxed step points to the step\\ncall site.\\n\\n"},{"kind":"code","text":"```js\\nasync function login(page) {\\n  await test.step(\'login\', async () => {\\n    // ...\\n  }, { box: true });  // Note the \\"box\\" option here.\\n}\\n```"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```txt\\nError: Timed out 5000ms waiting for expect(locator).toBeVisible()\\n  ... error details omitted ...\\n\\n  14 |   await page.goto(\'https://github.com/login\');\\n> 15 |   await login(page);\\n     |         ^\\n  16 | });\\n```"},{"kind":"text","text":"\\n\\nYou can also create a TypeScript decorator for a boxed step, similar to a regular step decorator above:\\n\\n"},{"kind":"code","text":"```js\\nfunction boxedStep(target: Function, context: ClassMethodDecoratorContext) {\\n  return function replacementMethod(...args: any) {\\n    const name = this.constructor.name + \'.\' + (context.name as string);\\n    return test.step(name, async () => {\\n      return await target.call(this, ...args);\\n    }, { box: true });  // Note the \\"box\\" option here.\\n  };\\n}\\n\\nclass LoginPage {\\n  constructor(readonly page: Page) {}\\n\\n  @boxedStep\\n  async login() {\\n    // ....\\n  }\\n}\\n\\ntest(\'example\', async ({ page }) => {\\n  const loginPage = new LoginPage(page);\\n  await loginPage.login();  // <-- Error will be reported on this line.\\n});\\n```"}]},"sources":[],"type":{"type":"reflection","declaration":{"id":25433,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":25434,"name":"skip","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25435,"name":"skip","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Mark a test step as \\"skip\\" to temporarily disable its execution, useful for steps that are currently failing and\\nplanned for a near-term fix. Playwright will not run the step. See also\\n[testStepInfo.skip(condition[, description])](https://playwright.dev/docs/api/class-teststepinfo#test-step-info-skip-2).\\n\\nWe recommend [testStepInfo.skip()](https://playwright.dev/docs/api/class-teststepinfo#test-step-info-skip-1)\\ninstead.\\n\\n**Usage**\\n\\nYou can declare a skipped step, and Playwright will not run it.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'my test\', async ({ page }) => {\\n  // ...\\n  await test.step.skip(\'not yet ready\', async () => {\\n    // ...\\n  });\\n});\\n```"}]},"sources":[],"parameters":[{"id":25436,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Step name."}]},"type":{"type":"intrinsic","name":"string"}},{"id":25437,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Step body."}]},"type":{"type":"reflection","declaration":{"id":25438,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25439,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":25440,"name":"step","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestStepInfo"},"name":"TestStepInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}},{"id":25441,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reflection","declaration":{"id":25442,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":25443,"name":"box","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"boolean"}},{"id":25444,"name":"location","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"Location"},"name":"Location","package":"playwright"}},{"id":25445,"name":"timeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[25443,25444,25445]}],"sources":[]}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]}],"groups":[{"title":"Methods","children":[25434]}],"sources":[],"signatures":[{"id":25446,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"typeParameter":[{"id":25447,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":25448,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Step name."}]},"type":{"type":"intrinsic","name":"string"}},{"id":25449,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Step body."}]},"type":{"type":"reflection","declaration":{"id":25450,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25451,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":25452,"name":"step","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestStepInfo"},"name":"TestStepInfo","package":"playwright"}}],"type":{"type":"union","types":[{"type":"reference","target":25128,"name":"T","package":"playwright","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":25128,"name":"T","package":"playwright","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}},{"id":25453,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reflection","declaration":{"id":25454,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":25455,"name":"box","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"boolean"}},{"id":25456,"name":"location","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"Location"},"name":"Location","package":"playwright"}},{"id":25457,"name":"timeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[25455,25456,25457]}],"sources":[]}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":25128,"name":"T","package":"playwright","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]}}},{"id":25458,"name":"expect","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"code","text":"`expect`"},{"kind":"text","text":" function can be used to create test assertions. Read more about [test assertions](https://playwright.dev/docs/test-assertions).\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest(\'example\', async ({ page }) => {\\n  await test.expect(page).toHaveTitle(\'Title\');\\n});\\n```"}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"Expect"},"typeArguments":[{"type":"reflection","declaration":{"id":25459,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true}}}],"name":"Expect","package":"playwright"}},{"id":25460,"name":"extend","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25461,"name":"extend","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Extends the "},{"kind":"code","text":"`test`"},{"kind":"text","text":" object by defining fixtures and/or options that can be used in the tests.\\n\\n**Usage**\\n\\nFirst define a fixture and/or an option.\\n\\n"},{"kind":"code","text":"```js\\nimport { test as base } from \'@playwright/test\';\\nimport { TodoPage } from \'./todo-page\';\\n\\nexport type Options = { defaultItem: string };\\n\\n// Extend basic test by providing a \\"defaultItem\\" option and a \\"todoPage\\" fixture.\\nexport const test = base.extend<Options & { todoPage: TodoPage }>({\\n  // Define an option and provide a default value.\\n  // We can later override it in the config.\\n  defaultItem: [\'Do stuff\', { option: true }],\\n\\n  // Define a fixture. Note that it can use built-in fixture \\"page\\"\\n  // and a new option \\"defaultItem\\".\\n  todoPage: async ({ page, defaultItem }, use) => {\\n    const todoPage = new TodoPage(page);\\n    await todoPage.goto();\\n    await todoPage.addToDo(defaultItem);\\n    await use(todoPage);\\n    await todoPage.removeAll();\\n  },\\n});\\n```"},{"kind":"text","text":"\\n\\nThen use the fixture in the test.\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\nimport { test } from \'./my-test\';\\n\\ntest(\'test 1\', async ({ todoPage }) => {\\n  await todoPage.addToDo(\'my todo\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nConfigure the option in config file.\\n\\n"},{"kind":"code","text":"```js\\n// playwright.config.ts\\nimport { defineConfig } from \'@playwright/test\';\\nimport type { Options } from \'./my-test\';\\n\\nexport default defineConfig<Options>({\\n  projects: [\\n    {\\n      name: \'shopping\',\\n      use: { defaultItem: \'Buy milk\' },\\n    },\\n    {\\n      name: \'wellbeing\',\\n      use: { defaultItem: \'Exercise!\' },\\n    },\\n  ]\\n});\\n```"},{"kind":"text","text":"\\n\\nLearn more about [fixtures](https://playwright.dev/docs/test-fixtures) and [parametrizing tests](https://playwright.dev/docs/test-parameterize)."}]},"sources":[],"typeParameter":[{"id":25462,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":25463,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true}}}},{"id":25464,"name":"W","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":25465,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true}}},"default":{"type":"reflection","declaration":{"id":25466,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true}}}}],"parameters":[{"id":25467,"name":"fixtures","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An object containing fixtures and/or options. Learn more about [fixtures format](https://playwright.dev/docs/test-fixtures)."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"Fixtures"},"typeArguments":[{"type":"reference","target":25143,"name":"T","package":"playwright","refersToTypeParameter":true},{"type":"reference","target":25145,"name":"W","package":"playwright","refersToTypeParameter":true},{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":24796,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"}]},{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"reference","target":24804,"name":"SerenityWorkerFixtures","package":"@serenity-js/playwright-test"}]}],"name":"Fixtures","package":"playwright"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestType"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":24796,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":25143,"name":"T","package":"playwright","refersToTypeParameter":true}]},{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"reference","target":24804,"name":"SerenityWorkerFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":25145,"name":"W","package":"playwright","refersToTypeParameter":true}]}],"name":"TestType","package":"playwright"}}]},{"id":25468,"name":"info","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25469,"name":"info","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns information about the currently running test. This method can only be called during the test execution,\\notherwise it throws.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest(\'example test\', async ({ page }) => {\\n  // ...\\n  await test.info().attach(\'screenshot\', {\\n    body: await page.screenshot(),\\n    contentType: \'image/png\',\\n  });\\n});\\n```"}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}]}],"groups":[{"title":"Properties","children":[25167,25336,25432,25458]},{"title":"Methods","children":[25159,25306,25321,25360,25368,25371,25385,25399,25413,25427,25460,25468]}],"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":365,"character":13}],"signatures":[{"id":25152,"name":"test","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a single test scenario. Alias for ["},{"kind":"code","text":"`it`"},{"kind":"text","text":"](/api/playwright-test/function/it/)."}]},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":365,"character":13}],"parameters":[{"id":25153,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":25154,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestBody"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":24796,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"reference","target":24804,"name":"SerenityWorkerFixtures","package":"@serenity-js/playwright-test"}]}],"name":"TestBody","package":"playwright"}}],"type":{"type":"intrinsic","name":"void"}},{"id":25155,"name":"test","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a single test scenario. Alias for ["},{"kind":"code","text":"`it`"},{"kind":"text","text":"](/api/playwright-test/function/it/)."}]},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":365,"character":13}],"parameters":[{"id":25156,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":25157,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestDetails"},"name":"TestDetails","package":"playwright"}},{"id":25158,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestBody"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":24796,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"reference","target":24804,"name":"SerenityWorkerFixtures","package":"@serenity-js/playwright-test"}]}],"name":"TestBody","package":"playwright"}}],"type":{"type":"intrinsic","name":"void"}}],"permalink":"/api/playwright-test/function/test","categories":[],"previousId":24832,"nextId":25470},{"id":25470,"name":"describe","variant":"declaration","kind":64,"flags":{"isExternal":true},"children":[{"id":25486,"name":"only","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25487,"name":"only","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a focused group of tests. If there are some focused tests or suites, all of them will be run but nothing\\nelse.\\n- "},{"kind":"code","text":"`test.describe.only(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.only(callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.only(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.only(\'focused group\', () => {\\n  test(\'in the focused group\', async ({ page }) => {\\n    // This test will run\\n  });\\n});\\ntest(\'not in the focused group\', async ({ page }) => {\\n  // This test will not run\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.only(() => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":25488,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Group title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":25489,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.only([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-only).\\nAny tests added in this callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":25490,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25491,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":25492,"name":"only","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a focused group of tests. If there are some focused tests or suites, all of them will be run but nothing\\nelse.\\n- "},{"kind":"code","text":"`test.describe.only(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.only(callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.only(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.only(\'focused group\', () => {\\n  test(\'in the focused group\', async ({ page }) => {\\n    // This test will run\\n  });\\n});\\ntest(\'not in the focused group\', async ({ page }) => {\\n  // This test will not run\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.only(() => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":25493,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.only([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-only).\\nAny tests added in this callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":25494,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25495,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":25496,"name":"only","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a focused group of tests. If there are some focused tests or suites, all of them will be run but nothing\\nelse.\\n- "},{"kind":"code","text":"`test.describe.only(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.only(callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.only(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.only(\'focused group\', () => {\\n  test(\'in the focused group\', async ({ page }) => {\\n    // This test will run\\n  });\\n});\\ntest(\'not in the focused group\', async ({ page }) => {\\n  // This test will not run\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.only(() => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":25497,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Group title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":25498,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"See [test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) for\\ndetails description."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestDetails"},"name":"TestDetails","package":"playwright"}},{"id":25499,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.only([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-only).\\nAny tests added in this callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":25500,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25501,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":25502,"name":"skip","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25503,"name":"skip","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a skipped test group, similarly to\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe). Tests in the\\nskipped group are never run.\\n- "},{"kind":"code","text":"`test.describe.skip(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.skip(title)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.skip(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.skip(\'skipped group\', () => {\\n  test(\'example\', async ({ page }) => {\\n    // This test will not run\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.skip(() => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":25504,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Group title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":25505,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.skip(title[, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-skip).\\nAny tests added in this callback will belong to the group, and will not be run."}]},"type":{"type":"reflection","declaration":{"id":25506,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25507,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":25508,"name":"skip","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a skipped test group, similarly to\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe). Tests in the\\nskipped group are never run.\\n- "},{"kind":"code","text":"`test.describe.skip(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.skip(title)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.skip(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.skip(\'skipped group\', () => {\\n  test(\'example\', async ({ page }) => {\\n    // This test will not run\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.skip(() => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":25509,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.skip(title[, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-skip).\\nAny tests added in this callback will belong to the group, and will not be run."}]},"type":{"type":"reflection","declaration":{"id":25510,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25511,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":25512,"name":"skip","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a skipped test group, similarly to\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe). Tests in the\\nskipped group are never run.\\n- "},{"kind":"code","text":"`test.describe.skip(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.skip(title)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.skip(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.skip(\'skipped group\', () => {\\n  test(\'example\', async ({ page }) => {\\n    // This test will not run\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.skip(() => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":25513,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Group title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":25514,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"See [test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) for\\ndetails description."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestDetails"},"name":"TestDetails","package":"playwright"}},{"id":25515,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.skip(title[, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-skip).\\nAny tests added in this callback will belong to the group, and will not be run."}]},"type":{"type":"reflection","declaration":{"id":25516,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25517,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":25518,"name":"fixme","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25519,"name":"fixme","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a test group similarly to\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe). Tests in\\nthis group are marked as \\"fixme\\" and will not be executed.\\n- "},{"kind":"code","text":"`test.describe.fixme(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.fixme(callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.fixme(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.fixme(\'broken tests that should be fixed\', () => {\\n  test(\'example\', async ({ page }) => {\\n    // This test will not run\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.fixme(() => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":25520,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Group title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":25521,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.fixme([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-fixme).\\nAny tests added in this callback will belong to the group, and will not be run."}]},"type":{"type":"reflection","declaration":{"id":25522,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25523,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":25524,"name":"fixme","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a test group similarly to\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe). Tests in\\nthis group are marked as \\"fixme\\" and will not be executed.\\n- "},{"kind":"code","text":"`test.describe.fixme(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.fixme(callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.fixme(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.fixme(\'broken tests that should be fixed\', () => {\\n  test(\'example\', async ({ page }) => {\\n    // This test will not run\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.fixme(() => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":25525,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.fixme([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-fixme).\\nAny tests added in this callback will belong to the group, and will not be run."}]},"type":{"type":"reflection","declaration":{"id":25526,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25527,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":25528,"name":"fixme","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a test group similarly to\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe). Tests in\\nthis group are marked as \\"fixme\\" and will not be executed.\\n- "},{"kind":"code","text":"`test.describe.fixme(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.fixme(callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.fixme(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.fixme(\'broken tests that should be fixed\', () => {\\n  test(\'example\', async ({ page }) => {\\n    // This test will not run\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.fixme(() => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":25529,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Group title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":25530,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"See [test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) for\\ndetails description."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestDetails"},"name":"TestDetails","package":"playwright"}},{"id":25531,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.fixme([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-fixme).\\nAny tests added in this callback will belong to the group, and will not be run."}]},"type":{"type":"reflection","declaration":{"id":25532,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25533,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":25534,"name":"serial","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"**NOTE** See [test.describe.configure([options])](https://playwright.dev/docs/api/class-test#test-describe-configure) for\\nthe preferred way of configuring the execution mode.\\n\\nDeclares a group of tests that should always be run serially. If one of the tests fails, all subsequent tests are\\nskipped. All tests in a group are retried together.\\n\\n**NOTE** Using serial is not recommended. It is usually better to make your tests isolated, so they can be run\\nindependently.\\n\\n- "},{"kind":"code","text":"`test.describe.serial(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.serial(title)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.serial(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.serial(\'group\', () => {\\n  test(\'runs first\', async ({ page }) => {});\\n  test(\'runs second\', async ({ page }) => {});\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.serial(() => {\\n  // ...\\n});\\n```"}]},"sources":[],"type":{"type":"reflection","declaration":{"id":25535,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":25536,"name":"only","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25537,"name":"only","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"**NOTE** See [test.describe.configure([options])](https://playwright.dev/docs/api/class-test#test-describe-configure) for\\nthe preferred way of configuring the execution mode.\\n\\nDeclares a focused group of tests that should always be run serially. If one of the tests fails, all subsequent\\ntests are skipped. All tests in a group are retried together. If there are some focused tests or suites, all of\\nthem will be run but nothing else.\\n\\n**NOTE** Using serial is not recommended. It is usually better to make your tests isolated, so they can be run\\nindependently.\\n\\n- "},{"kind":"code","text":"`test.describe.serial.only(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.serial.only(title)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.serial.only(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.serial.only(\'group\', () => {\\n  test(\'runs first\', async ({ page }) => {\\n  });\\n  test(\'runs second\', async ({ page }) => {\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.serial.only(() => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":25538,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Group title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":25539,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.serial.only(title[, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-serial-only).\\nAny tests added in this callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":25540,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25541,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":25542,"name":"only","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"**NOTE** See [test.describe.configure([options])](https://playwright.dev/docs/api/class-test#test-describe-configure) for\\nthe preferred way of configuring the execution mode.\\n\\nDeclares a focused group of tests that should always be run serially. If one of the tests fails, all subsequent\\ntests are skipped. All tests in a group are retried together. If there are some focused tests or suites, all of\\nthem will be run but nothing else.\\n\\n**NOTE** Using serial is not recommended. It is usually better to make your tests isolated, so they can be run\\nindependently.\\n\\n- "},{"kind":"code","text":"`test.describe.serial.only(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.serial.only(title)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.serial.only(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.serial.only(\'group\', () => {\\n  test(\'runs first\', async ({ page }) => {\\n  });\\n  test(\'runs second\', async ({ page }) => {\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.serial.only(() => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":25543,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.serial.only(title[, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-serial-only).\\nAny tests added in this callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":25544,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25545,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":25546,"name":"only","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"**NOTE** See [test.describe.configure([options])](https://playwright.dev/docs/api/class-test#test-describe-configure) for\\nthe preferred way of configuring the execution mode.\\n\\nDeclares a focused group of tests that should always be run serially. If one of the tests fails, all subsequent\\ntests are skipped. All tests in a group are retried together. If there are some focused tests or suites, all of\\nthem will be run but nothing else.\\n\\n**NOTE** Using serial is not recommended. It is usually better to make your tests isolated, so they can be run\\nindependently.\\n\\n- "},{"kind":"code","text":"`test.describe.serial.only(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.serial.only(title)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.serial.only(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.serial.only(\'group\', () => {\\n  test(\'runs first\', async ({ page }) => {\\n  });\\n  test(\'runs second\', async ({ page }) => {\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.serial.only(() => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":25547,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Group title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":25548,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"See [test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) for\\ndetails description."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestDetails"},"name":"TestDetails","package":"playwright"}},{"id":25549,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.serial.only(title[, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-serial-only).\\nAny tests added in this callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":25550,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25551,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]}],"groups":[{"title":"Methods","children":[25536]}],"sources":[],"signatures":[{"id":25552,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":25553,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Group title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":25554,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.serial([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-serial).\\nAny tests added in this callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":25555,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25556,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":25557,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":25558,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.serial([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-serial).\\nAny tests added in this callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":25559,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25560,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":25561,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":25562,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Group title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":25563,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"See [test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) for\\ndetails description."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestDetails"},"name":"TestDetails","package":"playwright"}},{"id":25564,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.serial([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-serial).\\nAny tests added in this callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":25565,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25566,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"id":25567,"name":"parallel","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"**NOTE** See [test.describe.configure([options])](https://playwright.dev/docs/api/class-test#test-describe-configure) for\\nthe preferred way of configuring the execution mode.\\n\\nDeclares a group of tests that could be run in parallel. By default, tests in a single test file run one after\\nanother, but using\\n[test.describe.parallel([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-parallel)\\nallows them to run in parallel.\\n- "},{"kind":"code","text":"`test.describe.parallel(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.parallel(callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.parallel(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.parallel(\'group\', () => {\\n  test(\'runs in parallel 1\', async ({ page }) => {});\\n  test(\'runs in parallel 2\', async ({ page }) => {});\\n});\\n```"},{"kind":"text","text":"\\n\\nNote that parallel tests are executed in separate processes and cannot share any state or global variables. Each of\\nthe parallel tests executes all relevant hooks.\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.parallel(() => {\\n  // ...\\n});\\n```"}]},"sources":[],"type":{"type":"reflection","declaration":{"id":25568,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":25569,"name":"only","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25570,"name":"only","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"**NOTE** See [test.describe.configure([options])](https://playwright.dev/docs/api/class-test#test-describe-configure) for\\nthe preferred way of configuring the execution mode.\\n\\nDeclares a focused group of tests that could be run in parallel. This is similar to\\n[test.describe.parallel([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-parallel),\\nbut focuses the group. If there are some focused tests or suites, all of them will be run but nothing else.\\n- "},{"kind":"code","text":"`test.describe.parallel.only(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.parallel.only(callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.parallel.only(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.parallel.only(\'group\', () => {\\n  test(\'runs in parallel 1\', async ({ page }) => {});\\n  test(\'runs in parallel 2\', async ({ page }) => {});\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.parallel.only(() => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":25571,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Group title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":25572,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.parallel.only([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-parallel-only).\\nAny tests added in this callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":25573,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25574,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":25575,"name":"only","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"**NOTE** See [test.describe.configure([options])](https://playwright.dev/docs/api/class-test#test-describe-configure) for\\nthe preferred way of configuring the execution mode.\\n\\nDeclares a focused group of tests that could be run in parallel. This is similar to\\n[test.describe.parallel([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-parallel),\\nbut focuses the group. If there are some focused tests or suites, all of them will be run but nothing else.\\n- "},{"kind":"code","text":"`test.describe.parallel.only(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.parallel.only(callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.parallel.only(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.parallel.only(\'group\', () => {\\n  test(\'runs in parallel 1\', async ({ page }) => {});\\n  test(\'runs in parallel 2\', async ({ page }) => {});\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.parallel.only(() => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":25576,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.parallel.only([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-parallel-only).\\nAny tests added in this callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":25577,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25578,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":25579,"name":"only","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"**NOTE** See [test.describe.configure([options])](https://playwright.dev/docs/api/class-test#test-describe-configure) for\\nthe preferred way of configuring the execution mode.\\n\\nDeclares a focused group of tests that could be run in parallel. This is similar to\\n[test.describe.parallel([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-parallel),\\nbut focuses the group. If there are some focused tests or suites, all of them will be run but nothing else.\\n- "},{"kind":"code","text":"`test.describe.parallel.only(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.parallel.only(callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.parallel.only(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.parallel.only(\'group\', () => {\\n  test(\'runs in parallel 1\', async ({ page }) => {});\\n  test(\'runs in parallel 2\', async ({ page }) => {});\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.parallel.only(() => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":25580,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Group title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":25581,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"See [test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) for\\ndetails description."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestDetails"},"name":"TestDetails","package":"playwright"}},{"id":25582,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.parallel.only([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-parallel-only).\\nAny tests added in this callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":25583,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25584,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]}],"groups":[{"title":"Methods","children":[25569]}],"sources":[],"signatures":[{"id":25585,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":25586,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Group title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":25587,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.parallel([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-parallel).\\nAny tests added in this callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":25588,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25589,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":25590,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":25591,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.parallel([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-parallel).\\nAny tests added in this callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":25592,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25593,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":25594,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":25595,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Group title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":25596,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"See [test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) for\\ndetails description."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestDetails"},"name":"TestDetails","package":"playwright"}},{"id":25597,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.parallel([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-parallel).\\nAny tests added in this callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":25598,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25599,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"id":25600,"name":"configure","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the enclosing scope. Can be executed either on the top level or inside a describe. Configuration applies\\nto the entire scope, regardless of whether it run before or after the test declaration.\\n\\nLearn more about the execution modes [here](https://playwright.dev/docs/test-parallel).\\n\\n**Usage**\\n- Running tests in parallel.\\n\\n  "},{"kind":"code","text":"```js\\n  // Run all the tests in the file concurrently using parallel workers.\\n  test.describe.configure({ mode: \'parallel\' });\\n  test(\'runs in parallel 1\', async ({ page }) => {});\\n  test(\'runs in parallel 2\', async ({ page }) => {});\\n  ```"},{"kind":"text","text":"\\n\\n- Running tests in order, retrying each failed test independently.\\n\\n  This is the default mode. It can be useful to set it explicitly to override project configuration that uses\\n  "},{"kind":"code","text":"`fullyParallel`"},{"kind":"text","text":".\\n\\n  "},{"kind":"code","text":"```js\\n  // Tests in this file run in order. Retries, if any, run independently.\\n  test.describe.configure({ mode: \'default\' });\\n  test(\'runs first\', async ({ page }) => {});\\n  test(\'runs second\', async ({ page }) => {});\\n  ```"},{"kind":"text","text":"\\n\\n- Running tests serially, retrying from the start. If one of the serial tests fails, all subsequent tests are\\n  skipped.\\n\\n  **NOTE** Running serially is not recommended. It is usually better to make your tests isolated, so they can be\\n  run independently.\\n\\n  "},{"kind":"code","text":"```js\\n  // Annotate tests as inter-dependent.\\n  test.describe.configure({ mode: \'serial\' });\\n  test(\'runs first\', async ({ page }) => {});\\n  test(\'runs second\', async ({ page }) => {});\\n  ```"},{"kind":"text","text":"\\n\\n- Configuring retries and timeout for each test.\\n\\n  "},{"kind":"code","text":"```js\\n  // Each test in the file will be retried twice and have a timeout of 20 seconds.\\n  test.describe.configure({ retries: 2, timeout: 20_000 });\\n  test(\'runs first\', async ({ page }) => {});\\n  test(\'runs second\', async ({ page }) => {});\\n  ```"},{"kind":"text","text":"\\n\\n- Run multiple describes in parallel, but tests inside each describe in order.\\n\\n  "},{"kind":"code","text":"```js\\n  test.describe.configure({ mode: \'parallel\' });\\n\\n  test.describe(\'A, runs in parallel with B\', () => {\\n    test.describe.configure({ mode: \'default\' });\\n    test(\'in order A1\', async ({ page }) => {});\\n    test(\'in order A2\', async ({ page }) => {});\\n  });\\n\\n  test.describe(\'B, runs in parallel with A\', () => {\\n    test.describe.configure({ mode: \'default\' });\\n    test(\'in order B1\', async ({ page }) => {});\\n    test(\'in order B2\', async ({ page }) => {});\\n  });\\n  ```"}]},"sources":[],"type":{"type":"reflection","declaration":{"id":25601,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25602,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":25603,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":25604,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":25605,"name":"mode","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"literal","value":"default"},{"type":"literal","value":"parallel"},{"type":"literal","value":"serial"}]}},{"id":25606,"name":"retries","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"number"}},{"id":25607,"name":"timeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[25605,25606,25607]}],"sources":[]}}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"groups":[{"title":"Properties","children":[25534,25567,25600]},{"title":"Methods","children":[25486,25502,25518]}],"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":415,"character":13}],"signatures":[{"id":25471,"name":"describe","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a group of test scenarios.\\n\\n## Example\\n\\n"},{"kind":"code","text":"```typescript\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { describe, it, test } from \'@serenity-js/playwright-test\'\\nimport { Photographer, TakePhotosOfFailures, Value } from \'@serenity-js/web\'\\n\\ndescribe(`Todo List App`, () => {\\n\\n  test.use({\\n    defaultActorName: \'Serena\',\\n    crew: [\\n      Photographer.whoWill(TakePhotosOfFailures),\\n    ],\\n  })\\n\\n  it(`should allow me to add a todo item`, async ({ actor }) => {\\n    await actor.attemptsTo(\\n      startWithAnEmptyList(),\\n\\n      recordItem(\'Buy some milk\'),\\n\\n      Ensure.that(itemNames(), equals([\\n        \'Buy some milk\',\\n      ])),\\n    )\\n  })\\n\\n  it(\'should clear text input field when an item is added\', async ({ actor }) => {\\n    await actor.attemptsTo(\\n      startWithAnEmptyList(),\\n\\n      recordItem(\'Buy some milk\'),\\n\\n      Ensure.that(Value.of(newTodoInput()), equals(\'\')),\\n    )\\n  })\\n})\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- Declaring a Serenity/JS [test scenario](/api/playwright-test/function/it/)\\n- [Playwright Test "},{"kind":"code","text":"`describe`"},{"kind":"text","text":" function](https://playwright.dev/docs/api/class-test#test-describe-1)\\n- [Serenity/JS + Playwright Test project template](https://github.com/serenity-js/serenity-js-playwright-test-template/)"}]},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":415,"character":13}],"parameters":[{"id":25472,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":25473,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":25474,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25475,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":25476,"name":"describe","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a group of test scenarios.\\n\\n## Example\\n\\n"},{"kind":"code","text":"```typescript\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { describe, it, test } from \'@serenity-js/playwright-test\'\\nimport { Photographer, TakePhotosOfFailures, Value } from \'@serenity-js/web\'\\n\\ndescribe(`Todo List App`, () => {\\n\\n  test.use({\\n    defaultActorName: \'Serena\',\\n    crew: [\\n      Photographer.whoWill(TakePhotosOfFailures),\\n    ],\\n  })\\n\\n  it(`should allow me to add a todo item`, async ({ actor }) => {\\n    await actor.attemptsTo(\\n      startWithAnEmptyList(),\\n\\n      recordItem(\'Buy some milk\'),\\n\\n      Ensure.that(itemNames(), equals([\\n        \'Buy some milk\',\\n      ])),\\n    )\\n  })\\n\\n  it(\'should clear text input field when an item is added\', async ({ actor }) => {\\n    await actor.attemptsTo(\\n      startWithAnEmptyList(),\\n\\n      recordItem(\'Buy some milk\'),\\n\\n      Ensure.that(Value.of(newTodoInput()), equals(\'\')),\\n    )\\n  })\\n})\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- Declaring a Serenity/JS [test scenario](/api/playwright-test/function/it/)\\n- [Playwright Test "},{"kind":"code","text":"`describe`"},{"kind":"text","text":" function](https://playwright.dev/docs/api/class-test#test-describe-1)\\n- [Serenity/JS + Playwright Test project template](https://github.com/serenity-js/serenity-js-playwright-test-template/)"}]},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":415,"character":13}],"parameters":[{"id":25477,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":25478,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25479,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":25480,"name":"describe","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a group of test scenarios.\\n\\n## Example\\n\\n"},{"kind":"code","text":"```typescript\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { describe, it, test } from \'@serenity-js/playwright-test\'\\nimport { Photographer, TakePhotosOfFailures, Value } from \'@serenity-js/web\'\\n\\ndescribe(`Todo List App`, () => {\\n\\n  test.use({\\n    defaultActorName: \'Serena\',\\n    crew: [\\n      Photographer.whoWill(TakePhotosOfFailures),\\n    ],\\n  })\\n\\n  it(`should allow me to add a todo item`, async ({ actor }) => {\\n    await actor.attemptsTo(\\n      startWithAnEmptyList(),\\n\\n      recordItem(\'Buy some milk\'),\\n\\n      Ensure.that(itemNames(), equals([\\n        \'Buy some milk\',\\n      ])),\\n    )\\n  })\\n\\n  it(\'should clear text input field when an item is added\', async ({ actor }) => {\\n    await actor.attemptsTo(\\n      startWithAnEmptyList(),\\n\\n      recordItem(\'Buy some milk\'),\\n\\n      Ensure.that(Value.of(newTodoInput()), equals(\'\')),\\n    )\\n  })\\n})\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- Declaring a Serenity/JS [test scenario](/api/playwright-test/function/it/)\\n- [Playwright Test "},{"kind":"code","text":"`describe`"},{"kind":"text","text":" function](https://playwright.dev/docs/api/class-test#test-describe-1)\\n- [Serenity/JS + Playwright Test project template](https://github.com/serenity-js/serenity-js-playwright-test-template/)"}]},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":415,"character":13}],"parameters":[{"id":25481,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":25482,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestDetails"},"name":"TestDetails","package":"playwright"}},{"id":25483,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":25484,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25485,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}],"permalink":"/api/playwright-test/function/describe","categories":[],"previousId":25151,"nextId":25608},{"id":25608,"name":"beforeAll","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":417,"character":13}],"signatures":[{"id":25609,"name":"beforeAll","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" hook that is executed once per worker process before all tests.\\n\\nWhen called in the scope of a test file, runs before all tests in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nbefore all tests in the group.\\n\\nYou can use [test.afterAll([title, hookFunction])](https://playwright.dev/docs/api/class-test#test-after-all) to\\nteardown any resources set up in "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":".\\n- "},{"kind":"code","text":"`test.beforeAll(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.beforeAll(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nNote that worker process is restarted on test failures, and "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" hook runs again in the new worker. Learn\\nmore about [workers and failures](https://playwright.dev/docs/test-retries).\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.beforeAll(async () => {\\n  console.log(\'Before tests\');\\n});\\n\\ntest.afterAll(async () => {\\n  console.log(\'After tests\');\\n});\\n\\ntest(\'my test\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\ntest.beforeAll(\'Setup\', async () => {\\n  console.log(\'Before tests\');\\n});\\n```"}]},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":417,"character":13}],"parameters":[{"id":25610,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":25611,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25612,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":25613,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":24796,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"reference","target":24804,"name":"SerenityWorkerFixtures","package":"@serenity-js/playwright-test"}]}},{"id":25614,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":25615,"name":"beforeAll","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" hook that is executed once per worker process before all tests.\\n\\nWhen called in the scope of a test file, runs before all tests in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nbefore all tests in the group.\\n\\nYou can use [test.afterAll([title, hookFunction])](https://playwright.dev/docs/api/class-test#test-after-all) to\\nteardown any resources set up in "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":".\\n- "},{"kind":"code","text":"`test.beforeAll(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.beforeAll(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nNote that worker process is restarted on test failures, and "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" hook runs again in the new worker. Learn\\nmore about [workers and failures](https://playwright.dev/docs/test-retries).\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.beforeAll(async () => {\\n  console.log(\'Before tests\');\\n});\\n\\ntest.afterAll(async () => {\\n  console.log(\'After tests\');\\n});\\n\\ntest(\'my test\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\ntest.beforeAll(\'Setup\', async () => {\\n  console.log(\'Before tests\');\\n});\\n```"}]},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":417,"character":13}],"parameters":[{"id":25616,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Hook title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":25617,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":25618,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25619,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":25620,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":24796,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"reference","target":24804,"name":"SerenityWorkerFixtures","package":"@serenity-js/playwright-test"}]}},{"id":25621,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}}],"permalink":"/api/playwright-test/function/beforeAll","categories":[],"previousId":25470,"nextId":25622},{"id":25622,"name":"beforeEach","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":419,"character":13}],"signatures":[{"id":25623,"name":"beforeEach","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":" hook that is executed before each test.\\n\\nWhen called in the scope of a test file, runs before each test in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nbefore each test in the group.\\n\\nYou can access all the same [Fixtures](https://playwright.dev/docs/api/class-fixtures) as the test body itself, and\\nalso the [TestInfo](https://playwright.dev/docs/api/class-testinfo) object that gives a lot of useful information.\\nFor example, you can navigate the page before starting the test.\\n\\nYou can use [test.afterEach([title, hookFunction])](https://playwright.dev/docs/api/class-test#test-after-each) to\\nteardown any resources set up in "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":".\\n- "},{"kind":"code","text":"`test.beforeEach(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.beforeEach(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.beforeEach(async ({ page }) => {\\n  console.log(`Running ${test.info().title}`);\\n  await page.goto(\'https://my.start.url/\');\\n});\\n\\ntest(\'my test\', async ({ page }) => {\\n  expect(page.url()).toBe(\'https://my.start.url/\');\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\ntest.beforeEach(\'Open start URL\', async ({ page }) => {\\n  console.log(`Running ${test.info().title}`);\\n  await page.goto(\'https://my.start.url/\');\\n});\\n```"}]},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":419,"character":13}],"parameters":[{"id":25624,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":25625,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25626,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":25627,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":24796,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"reference","target":24804,"name":"SerenityWorkerFixtures","package":"@serenity-js/playwright-test"}]}},{"id":25628,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":25629,"name":"beforeEach","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":" hook that is executed before each test.\\n\\nWhen called in the scope of a test file, runs before each test in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nbefore each test in the group.\\n\\nYou can access all the same [Fixtures](https://playwright.dev/docs/api/class-fixtures) as the test body itself, and\\nalso the [TestInfo](https://playwright.dev/docs/api/class-testinfo) object that gives a lot of useful information.\\nFor example, you can navigate the page before starting the test.\\n\\nYou can use [test.afterEach([title, hookFunction])](https://playwright.dev/docs/api/class-test#test-after-each) to\\nteardown any resources set up in "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":".\\n- "},{"kind":"code","text":"`test.beforeEach(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.beforeEach(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.beforeEach(async ({ page }) => {\\n  console.log(`Running ${test.info().title}`);\\n  await page.goto(\'https://my.start.url/\');\\n});\\n\\ntest(\'my test\', async ({ page }) => {\\n  expect(page.url()).toBe(\'https://my.start.url/\');\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\ntest.beforeEach(\'Open start URL\', async ({ page }) => {\\n  console.log(`Running ${test.info().title}`);\\n  await page.goto(\'https://my.start.url/\');\\n});\\n```"}]},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":419,"character":13}],"parameters":[{"id":25630,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Hook title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":25631,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":25632,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25633,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":25634,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":24796,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"reference","target":24804,"name":"SerenityWorkerFixtures","package":"@serenity-js/playwright-test"}]}},{"id":25635,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}}],"permalink":"/api/playwright-test/function/beforeEach","categories":[],"previousId":25608,"nextId":25636},{"id":25636,"name":"afterEach","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":421,"character":13}],"signatures":[{"id":25637,"name":"afterEach","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares an "},{"kind":"code","text":"`afterEach`"},{"kind":"text","text":" hook that is executed after each test.\\n\\nWhen called in the scope of a test file, runs after each test in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nafter each test in the group.\\n\\nYou can access all the same [Fixtures](https://playwright.dev/docs/api/class-fixtures) as the test body itself, and\\nalso the [TestInfo](https://playwright.dev/docs/api/class-testinfo) object that gives a lot of useful information.\\nFor example, you can check whether the test succeeded or failed.\\n- "},{"kind":"code","text":"`test.afterEach(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.afterEach(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`afterEach`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.afterEach(async ({ page }) => {\\n  console.log(`Finished ${test.info().title} with status ${test.info().status}`);\\n\\n  if (test.info().status !== test.info().expectedStatus)\\n    console.log(`Did not run as expected, ended up at ${page.url()}`);\\n});\\n\\ntest(\'my test\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\ntest.afterEach(\'Status check\', async ({ page }) => {\\n  if (test.info().status !== test.info().expectedStatus)\\n    console.log(`Did not run as expected, ended up at ${page.url()}`);\\n});\\n```"}]},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":421,"character":13}],"parameters":[{"id":25638,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":25639,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25640,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":25641,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":24796,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"reference","target":24804,"name":"SerenityWorkerFixtures","package":"@serenity-js/playwright-test"}]}},{"id":25642,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":25643,"name":"afterEach","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares an "},{"kind":"code","text":"`afterEach`"},{"kind":"text","text":" hook that is executed after each test.\\n\\nWhen called in the scope of a test file, runs after each test in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nafter each test in the group.\\n\\nYou can access all the same [Fixtures](https://playwright.dev/docs/api/class-fixtures) as the test body itself, and\\nalso the [TestInfo](https://playwright.dev/docs/api/class-testinfo) object that gives a lot of useful information.\\nFor example, you can check whether the test succeeded or failed.\\n- "},{"kind":"code","text":"`test.afterEach(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.afterEach(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`afterEach`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.afterEach(async ({ page }) => {\\n  console.log(`Finished ${test.info().title} with status ${test.info().status}`);\\n\\n  if (test.info().status !== test.info().expectedStatus)\\n    console.log(`Did not run as expected, ended up at ${page.url()}`);\\n});\\n\\ntest(\'my test\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\ntest.afterEach(\'Status check\', async ({ page }) => {\\n  if (test.info().status !== test.info().expectedStatus)\\n    console.log(`Did not run as expected, ended up at ${page.url()}`);\\n});\\n```"}]},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":421,"character":13}],"parameters":[{"id":25644,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Hook title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":25645,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":25646,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25647,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":25648,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":24796,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"reference","target":24804,"name":"SerenityWorkerFixtures","package":"@serenity-js/playwright-test"}]}},{"id":25649,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}}],"permalink":"/api/playwright-test/function/afterEach","categories":[],"previousId":25622,"nextId":25650},{"id":25650,"name":"afterAll","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":423,"character":13}],"signatures":[{"id":25651,"name":"afterAll","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares an "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hook that is executed once per worker after all tests.\\n\\nWhen called in the scope of a test file, runs after all tests in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nafter all tests in the group.\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nNote that worker process is restarted on test failures, and "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hook runs again in the new worker. Learn\\nmore about [workers and failures](https://playwright.dev/docs/test-retries).\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n- "},{"kind":"code","text":"`test.afterAll(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.afterAll(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.afterAll(async () => {\\n  console.log(\'Done with tests\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\ntest.afterAll(\'Teardown\', async () => {\\n  console.log(\'Done with tests\');\\n  // ...\\n});\\n```"}]},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":423,"character":13}],"parameters":[{"id":25652,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":25653,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25654,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":25655,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":24796,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"reference","target":24804,"name":"SerenityWorkerFixtures","package":"@serenity-js/playwright-test"}]}},{"id":25656,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":25657,"name":"afterAll","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares an "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hook that is executed once per worker after all tests.\\n\\nWhen called in the scope of a test file, runs after all tests in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nafter all tests in the group.\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nNote that worker process is restarted on test failures, and "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hook runs again in the new worker. Learn\\nmore about [workers and failures](https://playwright.dev/docs/test-retries).\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n- "},{"kind":"code","text":"`test.afterAll(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.afterAll(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.afterAll(async () => {\\n  console.log(\'Done with tests\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\ntest.afterAll(\'Teardown\', async () => {\\n  console.log(\'Done with tests\');\\n  // ...\\n});\\n```"}]},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":423,"character":13}],"parameters":[{"id":25658,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Hook title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":25659,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":25660,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25661,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":25662,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":24796,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"reference","target":24804,"name":"SerenityWorkerFixtures","package":"@serenity-js/playwright-test"}]}},{"id":25663,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}}],"permalink":"/api/playwright-test/function/afterAll","categories":[],"previousId":25636,"nextId":25664},{"id":25664,"name":"expect","variant":"declaration","kind":64,"flags":{"isExternal":true},"children":[{"id":25716,"name":"any","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25717,"name":"any","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"code","text":"`expect.any()`"},{"kind":"text","text":" matches any object instance created from the\\n["},{"kind":"code","text":"`constructor`"},{"kind":"text","text":"](https://playwright.dev/docs/api/class-genericassertions#generic-assertions-any-option-constructor)\\nor a corresponding primitive type. Use it inside\\n[expect(value).toEqual(expected)](https://playwright.dev/docs/api/class-genericassertions#generic-assertions-to-equal)\\nto perform pattern matching.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\n// Match instance of a class.\\nclass Example {}\\nexpect(new Example()).toEqual(expect.any(Example));\\n\\n// Match any number.\\nexpect({ prop: 1 }).toEqual({ prop: expect.any(Number) });\\n\\n// Match any string.\\nexpect(\'abc\').toEqual(expect.any(String));\\n```"}]},"sources":[],"parameters":[{"id":25718,"name":"sample","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"AsymmetricMatcher"},"name":"AsymmetricMatcher","package":"playwright"}}]},{"id":25719,"name":"anything","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25720,"name":"anything","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"code","text":"`expect.anything()`"},{"kind":"text","text":" matches everything except "},{"kind":"code","text":"`null`"},{"kind":"text","text":" and "},{"kind":"code","text":"`undefined`"},{"kind":"text","text":". Use it inside\\n[expect(value).toEqual(expected)](https://playwright.dev/docs/api/class-genericassertions#generic-assertions-to-equal)\\nto perform pattern matching.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\nconst value = { prop: 1 };\\nexpect(value).toEqual({ prop: expect.anything() });\\nexpect(value).not.toEqual({ otherProp: expect.anything() });\\n```"}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"AsymmetricMatcher"},"name":"AsymmetricMatcher","package":"playwright"}}]},{"id":25721,"name":"arrayContaining","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25722,"name":"arrayContaining","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"code","text":"`expect.arrayContaining()`"},{"kind":"text","text":" matches an array that contains all of the elements in the expected array, in any order.\\nNote that received array may be a superset of the expected array and contain some extra elements.\\n\\nUse this method inside\\n[expect(value).toEqual(expected)](https://playwright.dev/docs/api/class-genericassertions#generic-assertions-to-equal)\\nto perform pattern matching.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\nexpect([1, 2, 3]).toEqual(expect.arrayContaining([3, 1]));\\nexpect([1, 2, 3]).not.toEqual(expect.arrayContaining([1, 4]));\\n```"}]},"sources":[],"parameters":[{"id":25723,"name":"sample","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"unknown"}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"AsymmetricMatcher"},"name":"AsymmetricMatcher","package":"playwright"}}]},{"id":25724,"name":"closeTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25725,"name":"closeTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Compares floating point numbers for approximate equality. Use this method inside\\n[expect(value).toEqual(expected)](https://playwright.dev/docs/api/class-genericassertions#generic-assertions-to-equal)\\nto perform pattern matching. When just comparing two numbers, prefer\\n[expect(value).toBeCloseTo(expected[, numDigits])](https://playwright.dev/docs/api/class-genericassertions#generic-assertions-to-be-close-to).\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\nexpect({ prop: 0.1 + 0.2 }).not.toEqual({ prop: 0.3 });\\nexpect({ prop: 0.1 + 0.2 }).toEqual({ prop: expect.closeTo(0.3, 5) });\\n```"}]},"sources":[],"parameters":[{"id":25726,"name":"sample","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}},{"id":25727,"name":"precision","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"AsymmetricMatcher"},"name":"AsymmetricMatcher","package":"playwright"}}]},{"id":25728,"name":"objectContaining","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25729,"name":"objectContaining","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"code","text":"`expect.objectContaining()`"},{"kind":"text","text":" matches an object that contains and matches all of the properties in the expected\\nobject. Note that received object may be a superset of the expected object and contain some extra properties.\\n\\nUse this method inside\\n[expect(value).toEqual(expected)](https://playwright.dev/docs/api/class-genericassertions#generic-assertions-to-equal)\\nto perform pattern matching. Object properties can be matchers to further relax the expectation. See examples.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\n// Assert some of the properties.\\nexpect({ foo: 1, bar: 2 }).toEqual(expect.objectContaining({ foo: 1 }));\\n\\n// Matchers can be used on the properties as well.\\nexpect({ foo: 1, bar: 2 }).toEqual(expect.objectContaining({ bar: expect.any(Number) }));\\n\\n// Complex matching of sub-properties.\\nexpect({\\n  list: [1, 2, 3],\\n  obj: { prop: \'Hello world!\', another: \'some other value\' },\\n  extra: \'extra\',\\n}).toEqual(expect.objectContaining({\\n  list: expect.arrayContaining([2, 3]),\\n  obj: expect.objectContaining({ prop: expect.stringContaining(\'Hello\') }),\\n}));\\n```"}]},"sources":[],"parameters":[{"id":25730,"name":"sample","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"unknown"}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"AsymmetricMatcher"},"name":"AsymmetricMatcher","package":"playwright"}}]},{"id":25731,"name":"stringContaining","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25732,"name":"stringContaining","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"code","text":"`expect.stringContaining()`"},{"kind":"text","text":" matches a string that contains the expected substring. Use this method inside\\n[expect(value).toEqual(expected)](https://playwright.dev/docs/api/class-genericassertions#generic-assertions-to-equal)\\nto perform pattern matching.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\nexpect(\'Hello world!\').toEqual(expect.stringContaining(\'Hello\'));\\n```"}]},"sources":[],"parameters":[{"id":25733,"name":"sample","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"AsymmetricMatcher"},"name":"AsymmetricMatcher","package":"playwright"}}]},{"id":25734,"name":"stringMatching","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25735,"name":"stringMatching","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"code","text":"`expect.stringMatching()`"},{"kind":"text","text":" matches a received string that in turn matches the expected pattern. Use this method\\ninside\\n[expect(value).toEqual(expected)](https://playwright.dev/docs/api/class-genericassertions#generic-assertions-to-equal)\\nto perform pattern matching.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\nexpect(\'123ms\').toEqual(expect.stringMatching(/\\\\d+m?s/));\\n\\n// Inside another matcher.\\nexpect({\\n  status: \'passed\',\\n  time: \'123ms\',\\n}).toEqual({\\n  status: expect.stringMatching(/passed|failed/),\\n  time: expect.stringMatching(/\\\\d+m?s/),\\n});\\n```"}]},"sources":[],"parameters":[{"id":25736,"name":"sample","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"RegExp"},"name":"RegExp","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/RegExp"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"AsymmetricMatcher"},"name":"AsymmetricMatcher","package":"playwright"}}]},{"id":25672,"name":"soft","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reflection","declaration":{"id":25673,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25674,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"typeParameter":[{"id":25675,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"unknown"}}],"parameters":[{"id":25676,"name":"actual","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":25675,"name":"T","package":"playwright","refersToTypeParameter":true}},{"id":25677,"name":"messageOrOptions","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reflection","declaration":{"id":25678,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":25679,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[25679]}],"sources":[]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"MakeMatchers"},"typeArguments":[{"type":"intrinsic","name":"void"},{"type":"reference","target":25675,"name":"T","package":"playwright","refersToTypeParameter":true},{"type":"reflection","declaration":{"id":25680,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true}}}],"name":"MakeMatchers","package":"playwright"}}]}}},{"id":25681,"name":"poll","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reflection","declaration":{"id":25682,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25683,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"typeParameter":[{"id":25684,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"unknown"}}],"parameters":[{"id":25685,"name":"actual","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":25686,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25687,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":25684,"name":"T","package":"playwright","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":25684,"name":"T","package":"playwright","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}},{"id":25688,"name":"messageOrOptions","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reflection","declaration":{"id":25689,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":25690,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"string"}},{"id":25691,"name":"timeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"number"}},{"id":25692,"name":"intervals","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"groups":[{"title":"Properties","children":[25690,25691,25692]}],"sources":[]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PollMatchers"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},{"type":"reference","target":25684,"name":"T","package":"playwright","refersToTypeParameter":true},{"type":"reflection","declaration":{"id":25693,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true}}}],"name":"PollMatchers","package":"playwright"}}]}}},{"id":25694,"name":"extend","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25695,"name":"extend","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"typeParameter":[{"id":25696,"name":"MoreMatchers","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reflection","declaration":{"id":25697,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25698,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":25699,"name":"this","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"ExpectMatcherState"},"name":"ExpectMatcherState","package":"playwright"}},{"id":25700,"name":"receiver","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}},{"id":25701,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"union","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"MatcherReturnType"},"name":"MatcherReturnType","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"MatcherReturnType"},"name":"MatcherReturnType","package":"playwright"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"}}],"parameters":[{"id":25702,"name":"matchers","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":25696,"name":"MoreMatchers","package":"playwright","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"Expect"},"typeArguments":[{"type":"intersection","types":[{"type":"reflection","declaration":{"id":25703,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true}}},{"type":"reference","target":25696,"name":"MoreMatchers","package":"playwright","refersToTypeParameter":true}]}],"name":"Expect","package":"playwright"}}]},{"id":25704,"name":"configure","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reflection","declaration":{"id":25705,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25706,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":25707,"name":"configuration","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":25708,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":25709,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"string"}},{"id":25710,"name":"timeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"number"}},{"id":25711,"name":"soft","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"boolean"}}],"groups":[{"title":"Properties","children":[25709,25710,25711]}],"sources":[]}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"Expect"},"typeArguments":[{"type":"reflection","declaration":{"id":25712,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true}}}],"name":"Expect","package":"playwright"}}]}}},{"id":25713,"name":"getState","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":25714,"name":"getState","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"unknown"}}]},{"id":25715,"name":"not","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"AsymmetricMatchers"},"name":"AsymmetricMatchers","package":"playwright"},{"type":"union","types":[{"type":"literal","value":"any"},{"type":"literal","value":"anything"}]}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"}}],"groups":[{"title":"Properties","children":[25672,25681,25704,25715]},{"title":"Methods","children":[25716,25719,25721,25724,25728,25731,25734,25694,25713]}],"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":425,"character":13}],"signatures":[{"id":25665,"name":"expect","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":425,"character":13}],"typeParameter":[{"id":25666,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"unknown"}}],"parameters":[{"id":25667,"name":"actual","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":25666,"name":"T","package":"playwright","refersToTypeParameter":true}},{"id":25668,"name":"messageOrOptions","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reflection","declaration":{"id":25669,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":25670,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[25670]}],"sources":[]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"MakeMatchers"},"typeArguments":[{"type":"intrinsic","name":"void"},{"type":"reference","target":25666,"name":"T","package":"playwright","refersToTypeParameter":true},{"type":"reflection","declaration":{"id":25671,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true}}}],"name":"MakeMatchers","package":"playwright"}}],"permalink":"/api/playwright-test/function/expect","categories":[],"previousId":25650,"nextId":25737},{"id":25737,"name":"useFixtures","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":427,"character":13}],"signatures":[{"id":25738,"name":"useFixtures","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":427,"character":13}],"typeParameter":[{"id":25739,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"}},{"id":25740,"name":"W","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"},"default":{"type":"intrinsic","name":"object"}}],"parameters":[{"id":25741,"name":"customFixtures","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"Fixtures"},"typeArguments":[{"type":"reference","target":24826,"name":"T","package":"@serenity-js/playwright-test","refersToTypeParameter":true},{"type":"reference","target":24827,"name":"W","package":"@serenity-js/playwright-test","refersToTypeParameter":true},{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":24796,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"}]},{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"reference","target":24804,"name":"SerenityWorkerFixtures","package":"@serenity-js/playwright-test"}]}],"name":"Fixtures","package":"playwright"}}],"type":{"type":"reference","target":24820,"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":24796,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":24826,"name":"T","package":"@serenity-js/playwright-test","refersToTypeParameter":true}]},{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"reference","target":24804,"name":"SerenityWorkerFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":24827,"name":"W","package":"@serenity-js/playwright-test","refersToTypeParameter":true}]}],"name":"TestApi","package":"@serenity-js/playwright-test"}}],"permalink":"/api/playwright-test/function/useFixtures","categories":[],"previousId":25664,"nextId":24814},{"id":24814,"name":"useBase","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":567,"character":16}],"signatures":[{"id":24815,"name":"useBase","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates a Serenity/JS BDD-style test API around the given Playwright [base test](https://playwright.dev/docs/test-fixtures).\\n\\n## Using default configuration\\n\\nWhen your test scenario doesn\'t require [custom test fixtures](https://playwright.dev/docs/test-fixtures),\\nand you\'re happy with the default [base test](https://playwright.dev/docs/api/class-test#test-call) offered by Playwright,\\nyou can import test API functions such as ["},{"kind":"code","text":"`describe`"},{"kind":"text","text":"](/api/playwright-test/function/describe/) and ["},{"kind":"code","text":"`it`"},{"kind":"text","text":"](/api/playwright-test/function/describe/) directly from "},{"kind":"code","text":"`@serenity-js/playwright-test`"},{"kind":"text","text":".\\n\\n"},{"kind":"code","text":"```typescript\\nimport { describe, it, test } from \'@serenity-js/playwright-test\'\\nimport { Log } from \'@serenity-js/core\'\\n\\n// override default fixtures if needed\\ntest.use({\\n  defaultActorName: \'Alice\'\\n})\\n\\ndescribe(\'Serenity/JS default test API\', () => {\\n\\n  it(\'enables easy access to actors and standard Playwright fixtures\', async ({ actor, browserName }) => {\\n    await actor.attemptsTo(\\n      Log.the(browserName),\\n    )\\n  })\\n})\\n```"},{"kind":"text","text":"\\n\\nIn the above example, importing test API functions directly from "},{"kind":"code","text":"`@serenity-js/playwright-test`"},{"kind":"text","text":" is the equivalent of the following setup:\\n\\n"},{"kind":"code","text":"```typescript\\nimport { test as playwrightBaseTest } from \'@playwright/test\'\\nimport { useBase } from \'@serenity-js/playwright-test\'\\n\\nconst { describe, it, test, beforeEach, afterEach } = useBase(playwrightBaseTest)\\n```"},{"kind":"text","text":"\\n\\n## Using custom fixtures\\n\\nWhen your test scenario requires [custom test fixtures](https://playwright.dev/docs/test-fixtures),\\nbut you\'re still happy with the default [base test](https://playwright.dev/docs/api/class-test#test-call) offered by Playwright,\\nyou can create fixture-aware test API functions such as ["},{"kind":"code","text":"`describe`"},{"kind":"text","text":"](/api/playwright-test/function/describe/) and ["},{"kind":"code","text":"`it`"},{"kind":"text","text":"](/api/playwright-test/function/describe/)\\nby calling ["},{"kind":"code","text":"`useFixtures`"},{"kind":"text","text":"](/api/playwright-test/function/useFixtures/).\\n\\nFor example, you can create a test scenario using a static "},{"kind":"code","text":"`message`"},{"kind":"text","text":" fixture as follows:\\n\\n"},{"kind":"code","text":"```typescript\\nimport { useFixtures } from \'@serenity-js/playwright-test\'\\nimport { Log } from \'@serenity-js/core\'\\n\\nconst { describe, it } = useFixtures<{ message: string }>({\\n  message: \'Hello world!\'\\n})\\n\\ndescribe(\'Serenity/JS useFixtures\', () => {\\n\\n  it(\'enables injecting custom test fixtures into test scenarios\', async ({ actor, message }) => {\\n    await actor.attemptsTo(\\n      Log.the(message),\\n    )\\n  })\\n})\\n```"},{"kind":"text","text":"\\n\\nThe value of your test fixtures can be either static or dynamic and based on the value of other fixtures.\\n\\nTo create a dynamic test fixture use the [function syntax](https://playwright.dev/docs/test-fixtures):\\n\\n"},{"kind":"code","text":"```typescript\\nimport { Log } from \'@serenity-js/core\'\\nimport { useFixtures } from \'@serenity-js/playwright-test\'\\n\\nconst { describe, it } = useFixtures<{ message: string }>({\\n  message: async ({ actor }, use) => {\\n    await use(`Hello, ${ actor.name }`);\\n  }\\n})\\n\\ndescribe(\'Serenity/JS useFixtures\', () => {\\n\\n  it(\'enables injecting custom test fixtures into test scenarios\', async ({ actor, message }) => {\\n    await actor.attemptsTo(\\n      Log.the(message),\\n    )\\n  })\\n})\\n```"},{"kind":"text","text":"\\n\\nIn the above example, creating test API functions via "},{"kind":"code","text":"`useFixtures`"},{"kind":"text","text":" is the equivalent of the following setup:\\n\\n"},{"kind":"code","text":"```typescript\\nimport { test as playwrightBaseTest } from \'@playwright/test\'\\nimport { useBase } from \'@serenity-js/playwright-test\'\\n\\nconst { describe, it, test, beforeEach, afterEach } = useBase(playwrightBaseTest)\\n  .useFixtures<{ message: string }>({\\n    message: async ({ actor }, use) => {\\n      await use(`Hello, ${ actor.name }`);\\n    }\\n  })\\n```"},{"kind":"text","text":"\\n\\n## Using custom base test\\n\\nIn cases where you need to use a non-default base test, for example when doing [UI component testing](https://playwright.dev/docs/test-components),\\nyou can create Serenity/JS test API functions around your preferred base test.\\n\\n"},{"kind":"code","text":"```tsx\\nimport { test as componentTest } from \'@playwright/experimental-ct-react\'\\nimport { Ensure, contain } from \'@serenity-js/assertions\'\\nimport { useBase } from \'@serenity-js/playwright-test\'\\nimport { Enter, PageElement, CssClasses } from \'@serenity-js/web\'\\n\\nimport EmailInput from \'./EmailInput\';\\n\\nconst { it, describe } = useBase(componentTest).useFixtures<{ emailAddress: string }>({\\n  emailAddress: ({ actor }, use) => {\\n    use(`${ actor.name }@example.org`)\\n  }\\n})\\n\\ndescribe(\'EmailInput\', () => {\\n\\n  it(\'allows valid email addresses\', async ({ actor, mount, emailAddress }) => {\\n    const nativeComponent = await mount(<EmailInput/>);\\n\\n    const component = PageElement.from(nativeComponent);\\n\\n    await actor.attemptsTo(\\n      Enter.theValue(emailAddress).into(component),\\n      Ensure.that(CssClasses.of(component), contain(\'valid\')),\\n    )\\n  })\\n})\\n```"}]},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":567,"character":16}],"typeParameter":[{"id":24816,"name":"BaseTestFixtures","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"}]}},{"id":24817,"name":"BaseWorkerFixtures","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"}]}}],"parameters":[{"id":24818,"name":"baseTest","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestType"},"typeArguments":[{"type":"reference","target":24816,"name":"BaseTestFixtures","package":"@serenity-js/playwright-test","refersToTypeParameter":true},{"type":"reference","target":24817,"name":"BaseWorkerFixtures","package":"@serenity-js/playwright-test","refersToTypeParameter":true}],"name":"TestType","package":"playwright"}}],"type":{"type":"reference","target":24820,"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":24816,"name":"BaseTestFixtures","package":"@serenity-js/playwright-test","refersToTypeParameter":true},{"type":"reference","target":24796,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"}]},{"type":"intersection","types":[{"type":"reference","target":24817,"name":"BaseWorkerFixtures","package":"@serenity-js/playwright-test","refersToTypeParameter":true},{"type":"reference","target":24804,"name":"SerenityWorkerFixtures","package":"@serenity-js/playwright-test"}]}],"name":"TestApi","package":"@serenity-js/playwright-test"}}],"permalink":"/api/playwright-test/function/useBase","categories":[],"previousId":25737,"nextId":24796},{"id":24790,"name":"SerenityReporterForPlaywrightTestConfig","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configuration object accepted by "},{"kind":"code","text":"`@serenity-js/playwright-test`"},{"kind":"text","text":" reporter.\\n\\nFor usage examples, see:\\n- ["},{"kind":"code","text":"`SerenityFixtures`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityFixtures/)\\n- ["},{"kind":"code","text":"`SerenityWorkerFixtures`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityFixtures/)"}]},"children":[{"id":24791,"name":"crew","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A list of [stage crew member builders](/api/core/interface/StageCrewMemberBuilder/) or [stage crew members](/api/core/interface/StageCrewMember/)\\nto be instantiated in Playwright Test reporter process and notified of [Serenity/JS domain events](/api/core-events/class/DomainEvent/) that occur during the scenario execution.\\nNote that the "},{"kind":"code","text":"`crew`"},{"kind":"text","text":" can also be configured using [class descriptions](/api/core/#ClassDescription).\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`SerenityFixtures`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityFixtures/)\\n- ["},{"kind":"code","text":"`SerenityConfig.crew`"},{"kind":"text","text":"](/api/core/class/SerenityConfig/#crew)"}]},"sources":[{"fileName":"packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts","line":32,"character":4}],"type":{"type":"array","elementType":{"type":"union","types":[{"type":"reference","target":2241,"name":"StageCrewMember","package":"@serenity-js/core"},{"type":"reference","target":2248,"typeArguments":[{"type":"reference","target":2076,"name":"ListensToDomainEvents","package":"@serenity-js/core"}],"name":"StageCrewMemberBuilder","package":"@serenity-js/core"},{"type":"reference","target":84,"name":"ClassDescription","package":"@serenity-js/core"}]}}},{"id":24792,"name":"outputStream","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"An output stream to be injected into [stage crew member builders](/api/core/interface/StageCrewMemberBuilder/)\\n\\nDefaults to ["},{"kind":"code","text":"`process.stdout`"},{"kind":"text","text":"](https://nodejs.org/api/process.html#process_process_stdout).\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`SerenityConfig.outputStream`"},{"kind":"text","text":"](/api/core/class/SerenityConfig/#outputStream)"}]},"sources":[{"fileName":"packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts","line":42,"character":4}],"type":{"type":"reference","target":2286,"name":"OutputStream","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[24791,24792]}],"sources":[{"fileName":"packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts","line":22,"character":17}],"permalink":"/api/playwright-test/interface/SerenityReporterForPlaywrightTestConfig","categories":[],"previousId":24804,"nextId":24793},{"id":25742,"name":"default","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Serenity/JS reporter that receives notifications from Playwright Test and emits them as\\nSerenity/JS [Serenity/JS domain events](/api/core-events/class/DomainEvent/) which can be used by\\nSerenity/JS [stage crew members](/api/core/interface/StageCrewMember/)."}]},"children":[{"id":25743,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts","line":63,"character":4}],"signatures":[{"id":25744,"name":"new default","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts","line":63,"character":4}],"parameters":[{"id":25745,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":24790,"name":"SerenityReporterForPlaywrightTestConfig","package":"@serenity-js/playwright-test"}}],"type":{"type":"reference","target":25742,"name":"SerenityReporterForPlaywrightTest","package":"@serenity-js/playwright-test"}}]},{"id":25752,"name":"onBegin","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts","line":74,"character":4}],"signatures":[{"id":25753,"name":"onBegin","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts","line":74,"character":4}],"parameters":[{"id":25754,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"FullConfig"},"typeArguments":[{"type":"reflection","declaration":{"id":25755,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true}}},{"type":"reflection","declaration":{"id":25756,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true}}}],"name":"FullConfig","package":"playwright"}},{"id":25757,"name":"suite","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/testReporter.d.ts","qualifiedName":"Suite"},"name":"Suite","package":"playwright"}}],"type":{"type":"intrinsic","name":"void"},"implementationOf":{"type":"reference","target":-1,"name":"Reporter.onBegin"}}],"implementationOf":{"type":"reference","target":-1,"name":"Reporter.onBegin"}},{"id":25761,"name":"onTestBegin","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts","line":93,"character":4}],"signatures":[{"id":25762,"name":"onTestBegin","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts","line":93,"character":4}],"parameters":[{"id":25763,"name":"test","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/testReporter.d.ts","qualifiedName":"TestCase"},"name":"TestCase","package":"playwright"}},{"id":25764,"name":"result","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/testReporter.d.ts","qualifiedName":"TestResult"},"name":"TestResult","package":"playwright"}}],"type":{"type":"intrinsic","name":"void"},"implementationOf":{"type":"reference","target":-1,"name":"Reporter.onTestBegin"}}],"implementationOf":{"type":"reference","target":-1,"name":"Reporter.onTestBegin"}},{"id":25765,"name":"onTestEnd","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts","line":107,"character":4}],"signatures":[{"id":25766,"name":"onTestEnd","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts","line":107,"character":4}],"parameters":[{"id":25767,"name":"test","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/testReporter.d.ts","qualifiedName":"TestCase"},"name":"TestCase","package":"playwright"}},{"id":25768,"name":"result","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/testReporter.d.ts","qualifiedName":"TestResult"},"name":"TestResult","package":"playwright"}}],"type":{"type":"intrinsic","name":"void"},"implementationOf":{"type":"reference","target":-1,"name":"Reporter.onTestEnd"}}],"implementationOf":{"type":"reference","target":-1,"name":"Reporter.onTestEnd"}},{"id":25772,"name":"onError","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts","line":148,"character":4}],"signatures":[{"id":25773,"name":"onError","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts","line":148,"character":4}],"parameters":[{"id":25774,"name":"error","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/testReporter.d.ts","qualifiedName":"TestError"},"name":"TestError","package":"playwright"}}],"type":{"type":"intrinsic","name":"void"},"implementationOf":{"type":"reference","target":-1,"name":"Reporter.onError"}}],"implementationOf":{"type":"reference","target":-1,"name":"Reporter.onError"}},{"id":25775,"name":"onEnd","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts","line":154,"character":10}],"signatures":[{"id":25776,"name":"onEnd","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts","line":154,"character":10}],"parameters":[{"id":25777,"name":"fullResult","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/testReporter.d.ts","qualifiedName":"FullResult"},"name":"FullResult","package":"playwright"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"implementationOf":{"type":"reference","target":-1,"name":"Reporter.onEnd"}}],"implementationOf":{"type":"reference","target":-1,"name":"Reporter.onEnd"}},{"id":25778,"name":"printsToStdio","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts","line":197,"character":4}],"signatures":[{"id":25779,"name":"printsToStdio","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts","line":197,"character":4}],"type":{"type":"intrinsic","name":"boolean"},"implementationOf":{"type":"reference","target":-1,"name":"Reporter.printsToStdio"}}],"implementationOf":{"type":"reference","target":-1,"name":"Reporter.printsToStdio"}}],"groups":[{"title":"Constructors","children":[25743]},{"title":"Methods","children":[25752,25761,25765,25772,25775,25778]}],"sources":[{"fileName":"packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts","line":50,"character":13}],"implementedTypes":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/testReporter.d.ts","qualifiedName":"Reporter"},"name":"Reporter","package":"playwright"}],"permalink":"/api/playwright-test/class/default","categories":[],"nextId":24832}],"groups":[{"title":"Classes","children":[25742]},{"title":"Functions","children":[24832,25151,25470,25608,25622,25636,25650,25664,25737,24814]},{"title":"Interfaces","children":[24796,24804,24790]},{"title":"Type Aliases","children":[24793,24820]},{"title":"Variables","children":[24819]}],"sources":[{"fileName":"packages/playwright-test/src/index.ts","line":1,"character":0}],"permalink":"/api/playwright-test"},"urlSlug":"playwright-test"}],"packageName":"@serenity-js/playwright-test","packageVersion":"3.32.1"},{"entryPoints":[{"index":false,"label":"Test runner adapter","reflection":{"id":8,"name":"@serenity-js/protractor/adapter","variant":"declaration","kind":2,"flags":{"isExternal":true},"children":[{"id":6172,"name":"Config","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Protractor configuration object with an additional\\nsection to configure the Serenity/JS framework.\\n\\n## Learn more\\n- [Protractor config](https://github.com/angular/protractor/blob/master/lib/config.ts)\\n- ["},{"kind":"code","text":"`SerenityConfig`"},{"kind":"text","text":"](/api/core/class/SerenityConfig/)\\n- ["},{"kind":"code","text":"`configure`"},{"kind":"text","text":"](/api/core/function/configure/)"}]},"children":[{"id":6173,"name":"serenity","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"See ["},{"kind":"code","text":"`SerenityConfig`"},{"kind":"text","text":"](/api/core/class/SerenityConfig/)"}]},"sources":[{"fileName":"packages/protractor/src/adapter/Config.ts","line":19,"character":4}],"type":{"type":"intersection","types":[{"type":"reference","target":85,"name":"SerenityConfig","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":6174,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":6175,"name":"runner","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/protractor/src/adapter/Config.ts","line":19,"character":33}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[6175]}],"sources":[{"fileName":"packages/protractor/src/adapter/Config.ts","line":19,"character":31}]}}]}},{"id":6176,"name":"seleniumServerJar","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The location of the standalone Selenium Server jar file, relative\\nto the location of webdriver-manager. If no other method of starting\\nSelenium Server is found, this will default to\\nnode_modules/protractor/node_modules/webdriver-manager/selenium/<jar file>"}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.seleniumServerJar"}},{"id":6177,"name":"seleniumServerStartTimeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The timeout milliseconds waiting for a local standalone Selenium Server to start.\\n\\ndefault: 30000ms"}]},"sources":[],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.seleniumServerStartTimeout"}},{"id":6178,"name":"localSeleniumStandaloneOpts","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Can be an object which will be passed to the SeleniumServer class as args.\\nSee a full list of options at\\nhttps://github.com/SeleniumHQ/selenium/blob/master/javascript/node/selenium-webdriver/remote/index.js\\nIf you specify "},{"kind":"code","text":"`args`"},{"kind":"text","text":" or "},{"kind":"code","text":"`port`"},{"kind":"text","text":" in this object, it will overwrite the\\nvalues set via the deprecated config values "},{"kind":"code","text":"`seleniumPort`"},{"kind":"text","text":" and\\n"},{"kind":"code","text":"`seleniumArgs`"},{"kind":"text","text":"."}]},"sources":[],"type":{"type":"reflection","declaration":{"id":6179,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":6180,"name":"port","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The port to start the Selenium Server on, or null if the server should\\nfind its own unused port."}]},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":6181,"name":"args","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Additional command line options to pass to selenium. For example,\\nif you need to change the browser timeout, use\\nseleniumArgs: [\'-browserTimeout=60\']"}]},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":6182,"name":"jvmArgs","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Additional command line jvm options to pass to selenium. For example,\\nif you need to change the browser driver, use\\njvmArgs: [\'-Dwebdriver.ie.driver=IEDriverServer_Win32_2.53.1.exe\']"}]},"sources":[],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"groups":[{"title":"Properties","children":[6180,6181,6182]}],"sources":[]}},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.localSeleniumStandaloneOpts"}},{"id":6183,"name":"chromeDriver","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"ChromeDriver location is used to help find the chromedriver binary. This will be passed to the\\nSelenium jar as the system property webdriver.chrome.driver. If the value is not set when\\nlaunching locally, it will use the default values downloaded from webdriver-manager.\\n\\nexample:\\nchromeDriver: \'./node_modules/webdriver-manager/selenium/chromedriver_2.20\'"}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.chromeDriver"}},{"id":6184,"name":"geckoDriver","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"geckoDriver location is used to help find the gecko binary. This will be passed to the Selenium\\njar as the system property webdriver.gecko.driver. If the value is not set when launching\\nlocally, it will use the default values downloaded from webdriver-manager."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.geckoDriver"}},{"id":6185,"name":"seleniumAddress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The address of a running Selenium Server. If specified, Protractor will\\nconnect to an already running instance of Selenium. This usually looks like\\nseleniumAddress: \'http://localhost:4444/wd/hub\'"}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.seleniumAddress"}},{"id":6186,"name":"seleniumSessionId","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The selenium session id allows Protractor to attach to an existing selenium\\nbrowser session. The selenium session is maintained after the test has\\ncompleted. Ignored if seleniumAddress is null."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.seleniumSessionId"}},{"id":6187,"name":"sauceProxy","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The address of a proxy server to use for communicating to Sauce Labs REST APIs via the\\nsaucelabs node module. For example, the Sauce Labs Proxy can be setup with: sauceProxy:\\n\'http://localhost:3128\'"}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.sauceProxy"}},{"id":6188,"name":"webDriverProxy","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The proxy address that WebDriver (e.g. Selenium commands) traffic will go through\\nwhich is tied to the browser session."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.webDriverProxy"}},{"id":6189,"name":"useBlockingProxy","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If specified, connect to webdriver through a proxy that manages client-side\\nsynchronization. Blocking Proxy is an experimental feature and may change\\nwithout notice."}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.useBlockingProxy"}},{"id":6190,"name":"blockingProxyUrl","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If specified, Protractor will connect to the Blocking Proxy at the given\\nurl instead of starting it\'s own."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.blockingProxyUrl"}},{"id":6191,"name":"sauceUser","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If the sauceUser and sauceKey are specified, seleniumServerJar will be\\nignored. The tests will be run remotely using Sauce Labs."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.sauceUser"}},{"id":6192,"name":"sauceKey","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If the sauceUser and sauceKey are specified, seleniumServerJar will be\\nignored. The tests will be run remotely using Sauce Labs."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.sauceKey"}},{"id":6193,"name":"sauceRegion","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If you run your tests on SauceLabs you can specify the region you want to run your tests\\nin via the "},{"kind":"code","text":"`sauceRegion`"},{"kind":"text","text":" property. Available short handles for regions are:\\nus: us-west-1 (default)\\neu: eu-central-1"}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.sauceRegion"}},{"id":6194,"name":"sauceAgent","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Use sauceAgent if you need custom HTTP agent to connect to saucelabs.com APIs.\\nThis is needed if your computer is behind a corporate proxy.\\n\\nTo match sauce agent implementation, use\\n[HttpProxyAgent](https://github.com/TooTallNate/node-http-proxy-agent)\\nto generate the agent or use sauceProxy as an alternative. If a\\nsauceProxy is provided, the sauceAgent will be overridden."}]},"sources":[],"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.sauceAgent"}},{"id":6195,"name":"sauceBuild","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Use sauceBuild if you want to group test capabilites by a build ID"}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.sauceBuild"}},{"id":6196,"name":"sauceSeleniumUseHttp","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If true, Protractor will use http:// protocol instead of https:// to\\nconnect to Sauce Labs defined by sauceSeleniumAddress.\\n\\ndefault: false"}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.sauceSeleniumUseHttp"}},{"id":6197,"name":"sauceSeleniumAddress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Use sauceSeleniumAddress if you need to customize the URL Protractor\\nuses to connect to sauce labs (for example, if you are tunneling selenium\\ntraffic through a sauce connect tunnel). Default is\\nondemand.saucelabs.com:443/wd/hub"}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.sauceSeleniumAddress"}},{"id":6198,"name":"testobjectUser","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If testobjectUser and testobjectKey are specified, kobitonUser, kobitonKey, browserstackUser,\\nbrowserStackKey and seleniumServerJar will be ignored. The tests will be run remotely using\\nTestObject."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.testobjectUser"}},{"id":6199,"name":"testobjectKey","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If testobjectUser and testobjectKey are specified, kobitonUser, kobitonKey, browserStackUser,\\nbrowserStackKey and seleniumServerJar will be ignored. The tests will be run remotely using\\nTestObject."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.testobjectKey"}},{"id":6200,"name":"kobitonUser","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If kobitonUser and kobitonKey are specified, testobjectUser, testojbectKey, browserstackUser,\\nbrowserStackKey and seleniumServerJar will be ignored. The tests will be run remotely using\\nTestObject."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.kobitonUser"}},{"id":6201,"name":"kobitonKey","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If kobitonUser and kobitonKey are specified, testobjectUser, testojbectKey, browserStackUser,\\nbrowserStackKey and seleniumServerJar will be ignored. The tests will be run remotely using\\nTestObject."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.kobitonKey"}},{"id":6202,"name":"browserstackUser","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If browserstackUser and browserstackKey are specified, seleniumServerJar\\nwill be ignored. The tests will be run remotely using BrowserStack."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.browserstackUser"}},{"id":6203,"name":"browserstackKey","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If browserstackUser and browserstackKey are specified, seleniumServerJar\\nwill be ignored. The tests will be run remotely using BrowserStack."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.browserstackKey"}},{"id":6204,"name":"browserstackProxy","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Proxy server to be used for connecting to BrowserStack APIs\\ne.g. \\"http://proxy.example.com:1234\\".\\nThis should be used when you are behind a proxy server."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.browserstackProxy"}},{"id":6205,"name":"directConnect","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If true, Protractor will connect directly to the browser Drivers\\nat the locations specified by chromeDriver and firefoxPath. Only Chrome\\nand Firefox are supported for direct connect.\\n\\ndefault: false"}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.directConnect"}},{"id":6206,"name":"firefoxPath","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Path to the firefox application binary. If null, will attempt to find\\nfirefox in the default locations."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.firefoxPath"}},{"id":6207,"name":"seleniumWebDriver","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/@types/selenium-webdriver/index.d.ts","qualifiedName":"WebDriver"},"name":"WebDriver","package":"@types/selenium-webdriver"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.seleniumWebDriver"}},{"id":6208,"name":"noGlobals","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Use default globals: \'protractor\', \'browser\', \'$\', \'$$\', \'element\', \'by\'.\\nThese also exist as properties of the protractor namespace:\\n\'protractor.browser\', \'protractor.$\', \'protractor.$$\',\\n\'protractor.element\', \'protractor.by\', and \'protractor.By\'.\\n\\nWhen no globals is set to true, the only available global variable will be\\n\'protractor\'."}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.noGlobals"}},{"id":6209,"name":"specs","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Required. Spec patterns are relative to the location of this config.\\n\\nExample:\\nspecs: [\\n  \'spec/*_spec.js\'\\n]"}]},"sources":[],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.specs"}},{"id":6210,"name":"exclude","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Patterns to exclude specs."}]},"sources":[],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"array","elementType":{"type":"intrinsic","name":"string"}}]},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.exclude"}},{"id":6211,"name":"suites","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Alternatively, suites may be used. When run without a command line\\nparameter, all suites will run. If run with --suite=smoke or\\n--suite=smoke,full only the patterns matched by the specified suites will\\nrun.\\n\\nExample:\\nsuites: {\\n  smoke: \'spec/smoketests/*.js\',\\n  full: \'spec/*.js\'\\n}"}]},"sources":[],"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.suites"}},{"id":6212,"name":"suite","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If you would like protractor to use a specific suite by default instead of\\nall suites, you can put that in the config file as well."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.suite"}},{"id":6213,"name":"capabilities","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Protractor can launch your tests on one or more browsers. If you are\\ntesting on a single browser, use the capabilities option. If you are\\ntesting on multiple browsers, use the multiCapabilities array.\\n\\nFor a list of available capabilities, see\\nhttps://github.com/SeleniumHQ/selenium/wiki/DesiredCapabilities\\nIn addition, you may specify count, shardTestFiles, and maxInstances.\\n\\nExample:\\ncapabilities: {\\n  browserName: \'chrome\',\\n  name: \'Unnamed Job\',\\n  logName: \'Chrome - English\',\\n  count: 1,\\n  shardTestFiles: false,\\n  maxInstances: 1,\\n  specs: [\'spec/chromeOnlySpec.js\'],\\n  exclude: [\'spec/doNotRunInChromeSpec.js\'],\\n  seleniumAddress: \'http://localhost:4444/wd/hub\'\\n}"}]},"sources":[],"type":{"type":"reflection","declaration":{"id":6214,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":6215,"name":"browserName","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"string"}},{"id":6216,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Name of the process executing this capability.  Not used directly by\\nprotractor or the browser, but instead pass directly to third parties\\nlike BrowserStack and SauceLabs as the name of the job running this\\ntest"}]},"sources":[],"type":{"type":"intrinsic","name":"string"}},{"id":6217,"name":"logName","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"User defined name for the capability that will display in the results\\nlog. Defaults to the browser name"}]},"sources":[],"type":{"type":"intrinsic","name":"string"}},{"id":6218,"name":"count","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Number of times to run this set of capabilities (in parallel, unless\\nlimited by maxSessions). Default is 1."}]},"sources":[],"type":{"type":"intrinsic","name":"number"}},{"id":6219,"name":"shardTestFiles","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If this is set to be true, specs will be sharded by file (i.e. all\\nfiles to be run by this set of capabilities will run in parallel).\\nDefault is false."}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"}},{"id":6220,"name":"maxInstances","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Maximum number of browser instances that can run in parallel for this\\nset of capabilities. This is only needed if shardTestFiles is true.\\nDefault is 1."}]},"sources":[],"type":{"type":"intrinsic","name":"number"}},{"id":6221,"name":"specs","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Additional spec files to be run on this capability only."}]},"sources":[],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":6222,"name":"exclude","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Spec files to be excluded on this capability only."}]},"sources":[],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":6223,"name":"seleniumAddress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional: override global seleniumAddress on this capability only."}]},"sources":[],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[6215,6216,6217,6218,6219,6220,6221,6222,6223]}],"sources":[],"indexSignature":{"id":6224,"name":"__index","variant":"signature","kind":8192,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":6225,"name":"key","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"any"}}}},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.capabilities"}},{"id":6226,"name":"multiCapabilities","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If you would like to run more than one instance of WebDriver on the same\\ntests, use multiCapabilities, which takes an array of capabilities.\\nIf this is specified, capabilities will be ignored."}]},"sources":[],"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.multiCapabilities"}},{"id":6227,"name":"getMultiCapabilities","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If you need to resolve multiCapabilities asynchronously (i.e. wait for\\nserver/proxy, set firefox profile, etc), you can specify a function here\\nwhich will return either "},{"kind":"code","text":"`multiCapabilities`"},{"kind":"text","text":" or a promise to\\n"},{"kind":"code","text":"`multiCapabilities`"},{"kind":"text","text":".\\n\\nIf this returns a promise, it is resolved immediately after\\n"},{"kind":"code","text":"`beforeLaunch`"},{"kind":"text","text":" is run, and before any driver is set up. If this is\\nspecified, both capabilities and multiCapabilities will be ignored."}]},"sources":[],"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.getMultiCapabilities"}},{"id":6228,"name":"maxSessions","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Maximum number of total browser sessions to run. Tests are queued in\\nsequence if number of browser sessions is limited by this parameter.\\nUse a number less than 1 to denote unlimited. Default is unlimited."}]},"sources":[],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.maxSessions"}},{"id":6229,"name":"verboseMultiSessions","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether or not to buffer output when running tests on multiple browsers\\nin parallel. By default, when running multiple browser sessions, the\\nresults are buffered and not logged until the test run finishes. If true,\\nwhen running multiple sessions in parallel results will be logged when\\neach test finishes."}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.verboseMultiSessions"}},{"id":6230,"name":"baseUrl","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A base URL for your application under test. Calls to protractor.get()\\nwith relative paths will be resolved against this URL (via url.resolve)"}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.baseUrl"}},{"id":6231,"name":"rootElement","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A CSS Selector for a DOM element within your Angular application.\\nProtractor will attempt to automatically find your application, but it is\\nnecessary to set rootElement in certain cases.\\n\\nIn Angular 1, Protractor will use the element your app bootstrapped to by\\ndefault.  If that doesn\'t work, it will then search for hooks in "},{"kind":"code","text":"`body`"},{"kind":"text","text":" or\\n"},{"kind":"code","text":"`ng-app`"},{"kind":"text","text":" elements (details here: https://git.io/v1b2r).\\n\\nIn later versions of Angular, Protractor will try to hook into all angular\\napps on the page. Use rootElement to limit the scope of which apps\\nProtractor waits for and searches within."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.rootElement"}},{"id":6232,"name":"allScriptsTimeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The timeout in milliseconds for each script run on the browser. This\\nshould be longer than the maximum time your application needs to\\nstabilize between tasks."}]},"sources":[],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.allScriptsTimeout"}},{"id":6233,"name":"getPageTimeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"How long to wait for a page to load."}]},"sources":[],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.getPageTimeout"}},{"id":6234,"name":"beforeLaunch","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A callback function called once configs are read but before any\\nenvironment setup. This will only run once, and before onPrepare.\\n\\nYou can specify a file containing code to run by setting beforeLaunch to\\nthe filename string.\\n\\nAt this point, global variable \'protractor\' object will NOT be set up,\\nand globals from the test framework will NOT be available. The main\\npurpose of this function should be to bring up test dependencies."}]},"sources":[],"type":{"type":"reflection","declaration":{"id":6235,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":6236,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.beforeLaunch"}},{"id":6237,"name":"onPrepare","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A callback function called once protractor is ready and available, and\\nbefore the specs are executed. If multiple capabilities are being run,\\nthis will run once per capability.\\n\\nYou can specify a file containing code to run by setting onPrepare to\\nthe filename string. onPrepare can optionally return a promise, which\\nProtractor will wait for before continuing execution. This can be used if\\nthe preparation involves any asynchronous calls, e.g. interacting with\\nthe browser. Otherwise Protractor cannot guarantee order of execution\\nand may start the tests before preparation finishes.\\n\\nAt this point, global variable \'protractor\' object will be set up, and\\nglobals from the test framework will be available. For example, if you\\nare using Jasmine, you can add a reporter with:\\n\\n   jasmine.getEnv().addReporter(new jasmine.JUnitXmlReporter(\\n     \'outputdir/\', true, true));\\n\\nIf you need access back to the current configuration object,\\nuse a pattern like the following:\\n\\n   return browser.getProcessedConfig().then(function(config) {\\n     // config.capabilities is the CURRENT capability being run, if\\n     // you are using multiCapabilities.\\n     console.log(\'Executing capability\', config.capabilities);\\n   });"}]},"sources":[],"type":{"type":"reflection","declaration":{"id":6238,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":6239,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.onPrepare"}},{"id":6240,"name":"onComplete","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A callback function called once tests are finished. onComplete can\\noptionally return a promise, which Protractor will wait for before\\nshutting down webdriver.\\n\\nAt this point, tests will be done but global objects will still be\\navailable."}]},"sources":[],"type":{"type":"reflection","declaration":{"id":6241,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":6242,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.onComplete"}},{"id":6243,"name":"onCleanUp","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A callback function called once the tests have finished running and\\nthe WebDriver instance has been shut down. It is passed the exit code\\n(0 if the tests passed). This is called once per capability."}]},"sources":[],"type":{"type":"reflection","declaration":{"id":6244,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":6245,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":6246,"name":"exitCode","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"void"}}]}},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.onCleanUp"}},{"id":6247,"name":"afterLaunch","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A callback function called once all tests have finished running and\\nthe WebDriver instance has been shut down. It is passed the exit code\\n(0 if the tests passed). afterLaunch must return a promise if you want\\nasynchronous code to be executed before the program exits.\\nThis is called only once before the program exits (after onCleanUp)."}]},"sources":[],"type":{"type":"reflection","declaration":{"id":6248,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":6249,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":6250,"name":"exitCode","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"void"}}]}},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.afterLaunch"}},{"id":6251,"name":"params","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The params object will be passed directly to the Protractor instance,\\nand can be accessed from your test as browser.params. It is an arbitrary\\nobject and can contain anything you may need in your test.\\nThis can be changed via the command line as:\\n  --params.login.user \\"Joe\\"\\n\\nExample:\\nparams: {\\n  login: {\\n    user: \'Jane\',\\n    password: \'1234\'\\n  }\\n}"}]},"sources":[],"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.params"}},{"id":6252,"name":"resultJsonOutputFile","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If set, protractor will save the test output in json format at this path.\\nThe path is relative to the location of this config."}]},"sources":[],"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.resultJsonOutputFile"}},{"id":6253,"name":"restartBrowserBetweenTests","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If true, protractor will restart the browser between each test. Default\\nvalue is false.\\n\\nCAUTION: This will cause your tests to slow down drastically."}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.restartBrowserBetweenTests"}},{"id":6254,"name":"untrackOutstandingTimeouts","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Protractor will track outstanding $timeouts by default, and report them\\nin the error message if Protractor fails to synchronize with Angular in\\ntime. In order to do this Protractor needs to decorate $timeout.\\n\\nCAUTION: If your app decorates $timeout, you must turn on this flag. This\\nis false by default."}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.untrackOutstandingTimeouts"}},{"id":6255,"name":"ignoreUncaughtExceptions","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If set, Protractor will ignore uncaught exceptions instead of exiting\\nwithout an error code. The exceptions will still be logged as warnings."}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.ignoreUncaughtExceptions"}},{"id":6256,"name":"webDriverLogDir","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If set, will create a log file in the given directory with a readable log of\\nthe webdriver commands it executes.\\n\\nThis is an experimental feature. Enabling this will also turn on Blocking Proxy\\nsynchronization, which is also experimental."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.webDriverLogDir"}},{"id":6257,"name":"highlightDelay","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If set, Protractor will pause the specified amount of time (in milliseconds)\\nbefore interactions with browser elements (ie, sending keys, clicking). It will\\nalso highlight the element it\'s about to interact with.\\n\\nThis is an experimental feature. Enabling this will also turn on Blocking Proxy\\nsynchronization, which is also experimental."}]},"sources":[],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.highlightDelay"}},{"id":6258,"name":"logLevel","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Protractor log level\\n\\ndefault: INFO"}]},"sources":[],"type":{"type":"union","types":[{"type":"literal","value":"ERROR"},{"type":"literal","value":"WARN"},{"type":"literal","value":"INFO"},{"type":"literal","value":"DEBUG"}]},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.logLevel"}},{"id":6259,"name":"framework","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Test framework to use. This may be one of: jasmine, mocha or custom.\\nDefault value is \'jasmine\'\\n\\nWhen the framework is set to \\"custom\\" you\'ll need to additionally\\nset frameworkPath with the path relative to the config file or absolute:\\n\\n  framework: \'custom\',\\n  frameworkPath: \'./frameworks/my_custom_jasmine.js\',\\n\\nSee github.com/angular/protractor/blob/master/lib/frameworks/README.md\\nto comply with the interface details of your custom implementation.\\n\\nJasmine is fully supported as test and assertion frameworks.\\nMocha has limited support. You will need to include your\\nown assertion framework (such as Chai) if working with Mocha."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.framework"}},{"id":6260,"name":"jasmineNodeOpts","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Options to be passed to jasmine.\\n\\nSee https://github.com/jasmine/jasmine-npm/blob/master/lib/jasmine.js\\nfor the exact options available."}]},"sources":[],"type":{"type":"reflection","declaration":{"id":6261,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":6262,"name":"showColors","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If true, print colors to the terminal."}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"}},{"id":6263,"name":"defaultTimeoutInterval","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Default time to wait in ms before a test fails."}]},"sources":[],"type":{"type":"intrinsic","name":"number"}},{"id":6264,"name":"print","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Function called to print jasmine results."}]},"sources":[],"type":{"type":"reflection","declaration":{"id":6265,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":6266,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}},{"id":6267,"name":"grep","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If set, only execute specs whose names match the pattern, which is\\ninternally compiled to a RegExp."}]},"sources":[],"type":{"type":"intrinsic","name":"string"}},{"id":6268,"name":"invertGrep","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Inverts \'grep\' matches"}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"}},{"id":6269,"name":"random","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If true, run specs in semi-random order"}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"}},{"id":6270,"name":"seed","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Set the randomization seed if randomization is turned on"}]},"sources":[],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[6262,6263,6264,6267,6268,6269,6270]}],"sources":[],"indexSignature":{"id":6271,"name":"__index","variant":"signature","kind":8192,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":6272,"name":"key","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"any"}}}},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.jasmineNodeOpts"}},{"id":6273,"name":"mochaOpts","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Options to be passed to Mocha.\\n\\nSee the full list at http://mochajs.org/"}]},"sources":[],"type":{"type":"reflection","declaration":{"id":6274,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":6275,"name":"ui","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"string"}},{"id":6276,"name":"reporter","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[6275,6276]}],"sources":[],"indexSignature":{"id":6277,"name":"__index","variant":"signature","kind":8192,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":6278,"name":"key","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"any"}}}},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.mochaOpts"}},{"id":6279,"name":"plugins","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"See docs/plugins.md"}]},"sources":[],"type":{"type":"array","elementType":{"type":"reference","target":{"sourceFileName":"node_modules/protractor/built/plugins.d.ts","qualifiedName":"PluginConfig"},"name":"PluginConfig","package":"protractor"}},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.plugins"}},{"id":6280,"name":"skipSourceMapSupport","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Turns off source map support.  Stops protractor from registering global\\nvariable "},{"kind":"code","text":"`source-map-support`"},{"kind":"text","text":".  Defaults to "},{"kind":"code","text":"`false`"}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.skipSourceMapSupport"}},{"id":6281,"name":"disableEnvironmentOverrides","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Turns off WebDriver\'s environment variables overrides to ignore any\\nenvironment variable and to only use the configuration in this file.\\nDefaults to "},{"kind":"code","text":"`false`"}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.disableEnvironmentOverrides"}},{"id":6282,"name":"ng12Hybrid","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Tells Protractor to interpret any angular apps it comes across as hybrid\\nangular1/angular2 apps (i.e. apps using ngUpgrade)\\nDefaults to "},{"kind":"code","text":"`false`"}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.ng12Hybrid"}},{"id":6283,"name":"disableChecks","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Protractor will exit with an error if it sees any command line flags it doesn\'t\\nrecognize. Set disableChecks true to disable this check."}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.disableChecks"}},{"id":6284,"name":"SELENIUM_PROMISE_MANAGER","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Enable/disable the WebDriver Control Flow.\\n\\nWebDriverJS (and by extention, Protractor) uses a Control Flow to manage the order in which\\ncommands are executed and promises are resolved (see docs/control-flow.md for details).\\nHowever, as syntax like "},{"kind":"code","text":"`async`"},{"kind":"text","text":"/"},{"kind":"code","text":"`await`"},{"kind":"text","text":" are being introduced, WebDriverJS has decided to\\ndeprecate the control flow, and have users manage the asynchronous activity themselves\\n(details here: https://github.com/SeleniumHQ/selenium/issues/2969).\\n\\nAt the moment, the WebDriver Control Flow is still enabled by default. You can disable it by\\nsetting the environment variable "},{"kind":"code","text":"`SELENIUM_PROMISE_MANAGER`"},{"kind":"text","text":" to "},{"kind":"code","text":"`0`"},{"kind":"text","text":".  In a webdriver release in\\nQ4 2017, the Control Flow will be disabled by default, but you will be able to re-enable it by\\nsetting "},{"kind":"code","text":"`SELENIUM_PROMISE_MANAGER`"},{"kind":"text","text":" to "},{"kind":"code","text":"`1`"},{"kind":"text","text":".  At a later point, the control flow will be removed\\nfor good.\\n\\nIf you don\'t like managing environment variables, you can set this option in your config file,\\nand Protractor will handle enabling/disabling the control flow for you.  Setting this option\\nis higher priority than the "},{"kind":"code","text":"`SELENIUM_PROMISE_MANAGER`"},{"kind":"text","text":" environment variable."}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.SELENIUM_PROMISE_MANAGER"}},{"id":6285,"name":"seleniumArgs","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.seleniumArgs"}},{"id":6286,"name":"jvmArgs","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.jvmArgs"}},{"id":6287,"name":"configDir","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.configDir"}},{"id":6288,"name":"troubleshoot","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.troubleshoot"}},{"id":6289,"name":"seleniumPort","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.seleniumPort"}},{"id":6290,"name":"mockSelenium","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.mockSelenium"}},{"id":6291,"name":"v8Debug","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.v8Debug"}},{"id":6292,"name":"nodeDebug","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.nodeDebug"}},{"id":6293,"name":"debuggerServerPort","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.debuggerServerPort"}},{"id":6294,"name":"frameworkPath","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.frameworkPath"}},{"id":6295,"name":"elementExplorer","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.elementExplorer"}},{"id":6296,"name":"debug","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.debug"}},{"id":6297,"name":"unknownFlags_","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.unknownFlags_"}}],"groups":[{"title":"Properties","children":[6173,6176,6177,6178,6183,6184,6185,6186,6187,6188,6189,6190,6191,6192,6193,6194,6195,6196,6197,6198,6199,6200,6201,6202,6203,6204,6205,6206,6207,6208,6209,6210,6211,6212,6213,6226,6227,6228,6229,6230,6231,6232,6233,6234,6237,6240,6243,6247,6251,6252,6253,6254,6255,6256,6257,6258,6259,6260,6273,6279,6280,6281,6282,6283,6284,6285,6286,6287,6288,6289,6290,6291,6292,6293,6294,6295,6296,6297]}],"sources":[{"fileName":"packages/protractor/src/adapter/Config.ts","line":15,"character":17}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"node_modules/protractor/built/config.d.ts","qualifiedName":"Config"},"name":"Config","package":"protractor"}],"permalink":"/api/protractor-adapter/interface/Config","categories":[],"nextId":6312},{"id":6312,"name":"run","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/adapter/run.ts","line":18,"character":16}],"signatures":[{"id":6313,"name":"run","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"## Learn more\\n- [Protractor framework adapters](https://github.com/angular/protractor/blob/master/lib/frameworks/README.md#framework-adapters-for-protractor)"}]},"sources":[{"fileName":"packages/protractor/src/adapter/run.ts","line":18,"character":16}],"parameters":[{"id":6314,"name":"runner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/protractor/built/runner.d.ts","qualifiedName":"Runner"},"name":"Runner","package":"protractor"}},{"id":6315,"name":"specs","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","name":"ProtractorReport","package":"@serenity-js/protractor"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}],"permalink":"/api/protractor-adapter/function/run","categories":[],"previousId":6172,"nextId":6316},{"id":6316,"name":"CucumberAdapterConfig","variant":"declaration","kind":256,"flags":{"isExternal":true},"children":[{"id":6317,"name":"useStandardOutput","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instruct Serenity/JS Cucumber Adapter to take over the "},{"kind":"code","text":"`stdout`"},{"kind":"text","text":" output\\nof native Cucumber reporters to prevent them from clobbering the log."}]},"sources":[{"fileName":"packages/protractor/src/adapter/runner/CucumberAdapterConfig.ts","line":10,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":6318,"name":"uniqueFormatterOutputs","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Add "},{"kind":"code","text":"`runnerId`"},{"kind":"text","text":" to names of output files produced by native Cucumber.js formatters"}]},"sources":[{"fileName":"packages/protractor/src/adapter/runner/CucumberAdapterConfig.ts","line":15,"character":4}],"type":{"type":"intrinsic","name":"boolean"}}],"groups":[{"title":"Properties","children":[6317,6318]}],"sources":[{"fileName":"packages/protractor/src/adapter/runner/CucumberAdapterConfig.ts","line":4,"character":17}],"permalink":"/api/protractor-adapter/interface/CucumberAdapterConfig","categories":[],"previousId":6312,"nextId":6319},{"id":6319,"name":"TestRunnerDetector","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Detects the ["},{"kind":"code","text":"`TestRunnerAdapter`"},{"kind":"text","text":"](/api/core-adapter/interface/TestRunnerAdapter/) to use,\\nbased on Protractor configuration."}]},"children":[{"id":6320,"name":"cucumberOpts","variant":"declaration","kind":1024,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/protractor/src/adapter/runner/TestRunnerDetector.ts","line":14,"character":11}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"\'cucumberOpts\'"},{"id":6321,"name":"jasmineNodeOpts","variant":"declaration","kind":1024,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/protractor/src/adapter/runner/TestRunnerDetector.ts","line":15,"character":11}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"\'jasmineNodeOpts\'"},{"id":6322,"name":"mochaOpts","variant":"declaration","kind":1024,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/protractor/src/adapter/runner/TestRunnerDetector.ts","line":16,"character":11}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"\'mochaOpts\'"},{"id":6323,"name":"protractorCliOptions","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/protractor/src/adapter/runner/TestRunnerDetector.ts","line":18,"character":11}],"signatures":[{"id":6324,"name":"protractorCliOptions","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/adapter/runner/TestRunnerDetector.ts","line":18,"character":11}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}]},{"id":6325,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/adapter/runner/TestRunnerDetector.ts","line":26,"character":4}],"signatures":[{"id":6326,"name":"new TestRunnerDetector","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/adapter/runner/TestRunnerDetector.ts","line":26,"character":4}],"parameters":[{"id":6327,"name":"testRunnerLoader","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":6349,"name":"TestRunnerLoader","package":"@serenity-js/protractor"}}],"type":{"type":"reference","target":6319,"name":"TestRunnerDetector","package":"@serenity-js/protractor"}}]},{"id":6329,"name":"runnerFor","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/adapter/runner/TestRunnerDetector.ts","line":29,"character":4}],"signatures":[{"id":6330,"name":"runnerFor","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/adapter/runner/TestRunnerDetector.ts","line":29,"character":4}],"parameters":[{"id":6331,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/protractor/built/config.d.ts","qualifiedName":"Config"},"name":"Config","package":"protractor"}}],"type":{"type":"reference","target":2290,"name":"TestRunnerAdapter","package":"@serenity-js/core"}}]}],"groups":[{"title":"Constructors","children":[6325]},{"title":"Properties","children":[6320,6321,6322]},{"title":"Methods","children":[6323,6329]}],"sources":[{"fileName":"packages/protractor/src/adapter/runner/TestRunnerDetector.ts","line":12,"character":13}],"permalink":"/api/protractor-adapter/class/TestRunnerDetector","categories":[],"previousId":6316,"nextId":6349},{"id":6349,"name":"TestRunnerLoader","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Loads a ["},{"kind":"code","text":"`TestRunnerAdapter`"},{"kind":"text","text":"](/api/core-adapter/interface/TestRunnerAdapter/) needed to invoke\\nthe chosen test runner programmatically."}]},"children":[{"id":6350,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/adapter/runner/TestRunnerLoader.ts","line":32,"character":4}],"signatures":[{"id":6351,"name":"new TestRunnerLoader","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/adapter/runner/TestRunnerLoader.ts","line":32,"character":4}],"parameters":[{"id":6352,"name":"cwd","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Current working directory; used to resolve glob paths to files for Cucumber.js to "},{"kind":"code","text":"`require`"},{"kind":"text","text":",\\n and instructing Serenity/JS where to look for this module\'s optional\\n dependencies, like ["},{"kind":"code","text":"`@serenity-js/cucumber`"},{"kind":"text","text":"](/api/cucumber),\\n ["},{"kind":"code","text":"`@serenity-js/mocha`"},{"kind":"text","text":"](/api/mocha),\\n ["},{"kind":"code","text":"`@serenity-js/jasmine`"},{"kind":"text","text":"](/api/jasmine), etc."}]},"type":{"type":"reference","name":"Path","package":"@serenity-js/core"}},{"id":6353,"name":"runnerId","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Unique identifier used to differentiate output files produced by native Cucumber.js formatters.\\n For example, "},{"kind":"code","text":"`process.pid`"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]}}],"type":{"type":"reference","target":6349,"name":"TestRunnerLoader","package":"@serenity-js/protractor"}}]},{"id":6358,"name":"forJasmine","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/adapter/runner/TestRunnerLoader.ts","line":43,"character":4}],"signatures":[{"id":6359,"name":"forJasmine","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"See ["},{"kind":"code","text":"`JasmineConfig`"},{"kind":"text","text":"](/api/jasmine-adapter/interface/JasmineConfig/)"}]},"sources":[{"fileName":"packages/protractor/src/adapter/runner/TestRunnerLoader.ts","line":43,"character":4}],"parameters":[{"id":6360,"name":"jasmineNodeOpts","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"object"}}],"type":{"type":"reference","target":2290,"name":"TestRunnerAdapter","package":"@serenity-js/core"}}]},{"id":6361,"name":"forMocha","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/adapter/runner/TestRunnerLoader.ts","line":53,"character":4}],"signatures":[{"id":6362,"name":"forMocha","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"See ["},{"kind":"code","text":"`MochaConfig`"},{"kind":"text","text":"](/api/mocha-adapter/interface/MochaConfig/)"}]},"sources":[{"fileName":"packages/protractor/src/adapter/runner/TestRunnerLoader.ts","line":53,"character":4}],"parameters":[{"id":6363,"name":"mochaOpts","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"object"}}],"type":{"type":"reference","target":2290,"name":"TestRunnerAdapter","package":"@serenity-js/core"}}]},{"id":6364,"name":"forCucumber","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/adapter/runner/TestRunnerLoader.ts","line":64,"character":4}],"signatures":[{"id":6365,"name":"forCucumber","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"See ["},{"kind":"code","text":"`CucumberConfig`"},{"kind":"text","text":"](/api/cucumber-adapter/interface/CucumberConfig/)"}]},"sources":[{"fileName":"packages/protractor/src/adapter/runner/TestRunnerLoader.ts","line":64,"character":4}],"parameters":[{"id":6366,"name":"cucumberOpts","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"object"}},{"id":6367,"name":"adapterConfig","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":6316,"name":"CucumberAdapterConfig","package":"@serenity-js/protractor"}}],"type":{"type":"reference","target":2290,"name":"TestRunnerAdapter","package":"@serenity-js/core"}}]}],"groups":[{"title":"Constructors","children":[6350]},{"title":"Methods","children":[6358,6361,6364]}],"sources":[{"fileName":"packages/protractor/src/adapter/runner/TestRunnerLoader.ts","line":14,"character":13}],"permalink":"/api/protractor-adapter/class/TestRunnerLoader","categories":[],"previousId":6319}],"groups":[{"title":"Configuration","children":[6172]},{"title":"Integration","children":[6312,6316,6319,6349]}],"sources":[{"fileName":"packages/protractor/src/adapter/index.ts","line":1,"character":0}],"permalink":"/api/protractor-adapter"},"urlSlug":"protractor-adapter"},{"index":true,"label":"index","reflection":{"id":7,"name":"@serenity-js/protractor","variant":"declaration","kind":2,"flags":{"isExternal":true},"children":[{"id":5797,"name":"BrowseTheWebWithProtractor","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"This implementation of the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\nenables the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to interact with web front-ends using [Protractor](http://www.protractortest.org/#/).\\n\\n## Using Protractor to "},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { BrowseTheWebWithProtractor } from \'@serenity-js/protractor\\nimport { By, Navigate, PageElement, Text } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { protractor } from \'protractor\'\\n\\nconst HomePage = {\\n  title: () =>\\n    PageElement.located(By.css(\'h1\')).describedAs(\'title\')\\n}\\n\\n await actorCalled(\'Wendy\')\\n   .whoCan(BrowseTheWebWithProtractor.using(protractor.browser))\\n   .attemptsTo(\\n     Navigate.to(`https://serenity-js.org`),\\n     Ensure.that(Text.of(HomePage.title()), equals(\'Serenity/JS\')),\\n   )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- [Protractor website](https://www.protractortest.org/)\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\n- ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/)\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)"}]},"children":[{"id":5798,"name":"using","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/abilities/BrowseTheWebWithProtractor.ts","line":52,"character":11}],"signatures":[{"id":5799,"name":"using","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Ability to interact with web front-ends using\\nprovided protractor browser instance."}]},"sources":[{"fileName":"packages/protractor/src/screenplay/abilities/BrowseTheWebWithProtractor.ts","line":52,"character":11}],"parameters":[{"id":5800,"name":"browser","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"#### Learn more\\n- [Protractor Browser API docs](http://www.protractortest.org/#/api?view=ProtractorBrowser)"}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/protractor/built/browser.d.ts","qualifiedName":"ProtractorBrowser"},"name":"ProtractorBrowser","package":"protractor"}}],"type":{"type":"reference","target":5797,"name":"BrowseTheWebWithProtractor","package":"@serenity-js/protractor"}}]},{"id":5823,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/abilities/Ability.ts","line":406,"character":4}],"signatures":[{"id":5824,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a JSON representation of the ability and its current state, if available.\\nThe purpose of this method is to enable reporting the state of the ability in a human-readable format,\\nrather than to serialise and deserialise the ability itself."}]},"sources":[{"fileName":"packages/core/lib/screenplay/abilities/Ability.ts","line":406,"character":4}],"type":{"type":"reference","target":614,"name":"SerialisedAbility","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.toJSON"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.toJSON"}},{"id":5825,"name":"abilityType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/abilities/Ability.ts","line":436,"character":4}],"signatures":[{"id":5826,"name":"abilityType","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the most abstract type of this Ability instance,\\nspecifically the first class in the inheritance hierarchy that directly extends the "},{"kind":"code","text":"`Ability`"},{"kind":"text","text":" class.\\n\\n"},{"kind":"code","text":"```ts\\nimport { Ability } from \'@serenity-js/core\';\\n\\nclass MyAbility extends Ability {}\\nclass MySpecialisedAbility extends MyAbility {}\\n\\nnew MyAbility().abilityType();            // returns MyAbility\\nnew MySpecialisedAbility().abilityType(); // returns MyAbility\\n```"}]},"sources":[{"fileName":"packages/core/lib/screenplay/abilities/Ability.ts","line":436,"character":4}],"type":{"type":"reference","target":529,"typeArguments":[{"type":"reference","target":508,"name":"Ability","package":"@serenity-js/core"}],"name":"AbilityType","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.abilityType"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.abilityType"}},{"id":5808,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/abilities/BrowseTheWebWithProtractor.ts","line":60,"character":4}],"signatures":[{"id":5809,"name":"new BrowseTheWebWithProtractor","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/abilities/BrowseTheWebWithProtractor.ts","line":60,"character":4}],"parameters":[{"id":5810,"name":"browser","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An instance of a protractor browser"}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/protractor/built/browser.d.ts","qualifiedName":"ProtractorBrowser"},"name":"ProtractorBrowser","package":"protractor"}}],"type":{"type":"reference","target":5797,"name":"BrowseTheWebWithProtractor","package":"@serenity-js/protractor"},"overwrites":{"type":"reference","target":-1,"name":"BrowseTheWeb<protractor.ElementFinder>.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"BrowseTheWeb<protractor.ElementFinder>.constructor"}},{"id":5812,"name":"param","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/abilities/BrowseTheWebWithProtractor.ts","line":99,"character":4}],"signatures":[{"id":5813,"name":"param","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns Protractor configuration parameter at "},{"kind":"code","text":"`path`"},{"kind":"text","text":".\\n\\n#### Configuring a custom parameter\\n\\n"},{"kind":"code","text":"```js\\n// protractor.conf.js\\nexports.config = {\\n  params: {\\n    login: {\\n      username: \'jane@example.org\'\\n      password: process.env.PASSWORD\\n    }\\n  }\\n  // ...\\n}\\n```"},{"kind":"text","text":"\\n\\n#### Retrieving config param by name\\n"},{"kind":"code","text":"```js\\nBrowseTheWebWithProtractor.as(actor).param(\'login\')\\n // returns object with username and password\\n```"},{"kind":"text","text":"\\n\\n#### Retrieving config param by path\\n"},{"kind":"code","text":"```js\\nBrowseTheWeb.as(actor).param(\'login.username\')\\n // returns string \'jane@example.org\'\\n\\n@param path\\n Either a name or a dot-delimited path to the param.\\n\\n@throws [`ConfigurationError`](/api/core/class/ConfigurationError/)\\n Throws a `ConfigurationError` if the parameter is `undefined`"}]},"sources":[{"fileName":"packages/protractor/src/screenplay/abilities/BrowseTheWebWithProtractor.ts","line":99,"character":4}],"typeParameter":[{"id":5814,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"any"}}],"parameters":[{"id":5815,"name":"path","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":5814,"name":"T","package":"@serenity-js/protractor","refersToTypeParameter":true}}]},{"id":5817,"name":"currentPage","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":87,"character":4}],"signatures":[{"id":5818,"name":"currentPage","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/) representing the currently active browser tab."}]},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":87,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4302,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/protractor/built/element.d.ts","qualifiedName":"ElementFinder"},"name":"ElementFinder","package":"protractor"}],"name":"Page","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.currentPage"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.currentPage"}},{"id":5819,"name":"allPages","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":92,"character":4}],"signatures":[{"id":5820,"name":"allPages","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns an array of [pages](/api/web/class/Page/) representing all the browser tabs\\navailable in the current ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/)."}]},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":92,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4302,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/protractor/built/element.d.ts","qualifiedName":"ElementFinder"},"name":"ElementFinder","package":"protractor"}],"name":"Page","package":"@serenity-js/web"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.allPages"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.allPages"}},{"id":5821,"name":"browserCapabilities","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":96,"character":4}],"signatures":[{"id":5822,"name":"browserCapabilities","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns [basic meta-data](/api/web/interface/BrowserCapabilities/) about the browser associated with this ability."}]},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":96,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":3928,"name":"BrowserCapabilities","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.browserCapabilities"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.browserCapabilities"}}],"groups":[{"title":"Constructors","children":[5808]},{"title":"Methods","children":[5798,5823,5825,5812,5817,5819,5821]}],"sources":[{"fileName":"packages/protractor/src/screenplay/abilities/BrowseTheWebWithProtractor.ts","line":41,"character":13}],"extendedTypes":[{"type":"reference","target":3316,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/protractor/built/element.d.ts","qualifiedName":"ElementFinder"},"name":"protractor.ElementFinder","package":"protractor","qualifiedName":"ElementFinder"}],"name":"BrowseTheWeb","package":"@serenity-js/web"}],"permalink":"/api/protractor/class/BrowseTheWebWithProtractor","categories":[],"nextId":5827},{"id":5827,"name":"UseAngular","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to enable or disable automated synchronisation between Protractor and Angular 1.x application.\\n\\nUseful when a test scenario needs to interact with both Angular-based\\nand non-Angular web apps, e.g. use an external sign-in form.\\n\\n**Please note** if your tests interact with a non-Angular app you can disable\\nsynchronisation altogether in ["},{"kind":"code","text":"`protractor.conf.js`"},{"kind":"text","text":"](https://github.com/angular/protractor/blob/master/lib/config.ts).\\n\\n**Warning:** this interaction is Protractor-specific, so using it in your tests\\nwill reduce their portability across test integration tools.\\n\\n## Disabling synchronisation temporarily\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { UseAngular } from \'@serenity-js/protractor\'\\nimport { Navigate } from \'@serenity-js/web\'\\nimport { protractor } from \'protractor\'\\n\\nawait actorCalled(\'Angie\')\\n  .whoCan(BrowseTheWeb.using(protractor.browser))\\n  .attemptsTo(\\n    UseAngular.disableSynchronisation(),\\n    Navigate.to(\'https://mycompany.com/login\'),\\n    // navigate to a non-Angular app, perform some activities...\\n\\n    UseAngular.disableSynchronisation(),\\n    Navigate.to(\'https://myapp.com\'),\\n    // navigate to an Angular app, perform some more activities...\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Disabling synchronisation with Angular in "},{"kind":"code","text":"`protractor.conf.js`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```js\\nexports.config = {\\n  onPrepare: function () {\\n    return browser.waitForAngularEnabled(false);\\n  },\\n  // ... other config\\n}\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- [Cross-application testing with Serenity/JS](https://janmolak.com/cross-application-testing-with-serenity-js-4103a272b75b)"}]},"children":[{"id":5828,"name":"disableSynchronisation","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/interactions/UseAngular.ts","line":62,"character":11}],"signatures":[{"id":5829,"name":"disableSynchronisation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Produces an ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/) that instructs the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to disable\\nsynchronisation between Protractor and an Angular 1.x app."}]},"sources":[{"fileName":"packages/protractor/src/screenplay/interactions/UseAngular.ts","line":62,"character":11}],"type":{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":5830,"name":"enableSynchronisation","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/interactions/UseAngular.ts","line":74,"character":11}],"signatures":[{"id":5831,"name":"enableSynchronisation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Produces an ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/) that instructs the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to enable\\nsynchronisation between Protractor and an Angular 1.x app."}]},"sources":[{"fileName":"packages/protractor/src/screenplay/interactions/UseAngular.ts","line":74,"character":11}],"type":{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":5832,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":5833,"name":"new UseAngular","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":5827,"name":"UseAngular","package":"@serenity-js/protractor"}}]}],"groups":[{"title":"Constructors","children":[5832]},{"title":"Methods","children":[5828,5830]}],"sources":[{"fileName":"packages/protractor/src/screenplay/interactions/UseAngular.ts","line":56,"character":13}],"permalink":"/api/protractor/class/UseAngular","categories":[],"previousId":5797,"nextId":5834},{"id":5834,"name":"ProtractorBrowsingSession","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Protractor-specific implementation of ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/)."}]},"children":[{"id":5835,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorBrowsingSession.ts","line":18,"character":4}],"signatures":[{"id":5836,"name":"new ProtractorBrowsingSession","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorBrowsingSession.ts","line":18,"character":4}],"parameters":[{"id":5837,"name":"browser","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/protractor/built/browser.d.ts","qualifiedName":"ProtractorBrowser"},"name":"ProtractorBrowser","package":"protractor"}}],"type":{"type":"reference","target":5834,"name":"ProtractorBrowsingSession","package":"@serenity-js/protractor"},"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession<ProtractorPage>.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession<ProtractorPage>.constructor"}},{"id":5839,"name":"allPages","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorBrowsingSession.ts","line":22,"character":19}],"signatures":[{"id":5840,"name":"allPages","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorBrowsingSession.ts","line":22,"character":19}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":5972,"name":"ProtractorPage","package":"@serenity-js/protractor"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession.allPages"}}],"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession.allPages"}},{"id":5841,"name":"changeCurrentPageTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorBrowsingSession.ts","line":54,"character":19}],"signatures":[{"id":5842,"name":"changeCurrentPageTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorBrowsingSession.ts","line":54,"character":19}],"parameters":[{"id":5843,"name":"page","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":5972,"name":"ProtractorPage","package":"@serenity-js/protractor"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession.changeCurrentPageTo"}}],"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession.changeCurrentPageTo"}},{"id":5846,"name":"currentPage","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorBrowsingSession.ts","line":93,"character":19}],"signatures":[{"id":5847,"name":"currentPage","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorBrowsingSession.ts","line":93,"character":19}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":5972,"name":"ProtractorPage","package":"@serenity-js/protractor"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession.currentPage"}}],"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession.currentPage"}},{"id":5850,"name":"browserCapabilities","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorBrowsingSession.ts","line":134,"character":19}],"signatures":[{"id":5851,"name":"browserCapabilities","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorBrowsingSession.ts","line":134,"character":19}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":3928,"name":"BrowserCapabilities","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession.browserCapabilities"}}],"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession.browserCapabilities"}},{"id":5854,"name":"closePagesOtherThan","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":15,"character":4}],"signatures":[{"id":5855,"name":"closePagesOtherThan","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":15,"character":4}],"parameters":[{"id":5856,"name":"pageOfInterest","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":5972,"name":"ProtractorPage","package":"@serenity-js/protractor"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.closePagesOtherThan"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.closePagesOtherThan"}},{"id":5857,"name":"register","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":33,"character":4}],"signatures":[{"id":5858,"name":"register","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Registers specified [pages](/api/web/class/Page/) to be managed by this ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/)."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":33,"character":4}],"parameters":[{"id":5859,"name":"pages","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":5972,"name":"ProtractorPage","package":"@serenity-js/protractor"}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.register"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.register"}},{"id":5860,"name":"deregister","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":40,"character":4}],"signatures":[{"id":5861,"name":"deregister","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Informs this ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/) that it should no longer manage [pages](/api/web/class/Page/)\\nidentified by the given "},{"kind":"code","text":"`pageIds`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":40,"character":4}],"parameters":[{"id":5862,"name":"pageIds","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.deregister"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.deregister"}},{"id":5863,"name":"registeredPageIds","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":49,"character":4}],"signatures":[{"id":5864,"name":"registeredPageIds","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the ids of any [pages](/api/web/class/Page/) this ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/) is aware of."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":49,"character":4}],"type":{"type":"array","elementType":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.registeredPageIds"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.registeredPageIds"}},{"id":5865,"name":"closeAllPages","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":72,"character":4}],"signatures":[{"id":5866,"name":"closeAllPages","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Closes all the pages available in this browsing context"}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":72,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.closeAllPages"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.closeAllPages"}}],"groups":[{"title":"Constructors","children":[5835]},{"title":"Methods","children":[5839,5841,5846,5850,5854,5857,5860,5863,5865]}],"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorBrowsingSession.ts","line":16,"character":13}],"extendedTypes":[{"type":"reference","target":3932,"typeArguments":[{"type":"reference","target":5972,"name":"ProtractorPage","package":"@serenity-js/protractor"}],"name":"BrowsingSession","package":"@serenity-js/web"}],"permalink":"/api/protractor/class/ProtractorBrowsingSession","categories":[],"previousId":5827,"nextId":5867},{"id":5867,"name":"ProtractorCookie","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Protractor-specific implementation of ["},{"kind":"code","text":"`Cookie`"},{"kind":"text","text":"](/api/web/class/Cookie/)."}]},"children":[{"id":5946,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorCookie.ts","line":16,"character":4}],"signatures":[{"id":5947,"name":"new ProtractorCookie","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorCookie.ts","line":16,"character":4}],"parameters":[{"id":5948,"name":"browser","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/protractor/built/browser.d.ts","qualifiedName":"ProtractorBrowser"},"name":"ProtractorBrowser","package":"protractor"}},{"id":5949,"name":"cookieName","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":5867,"name":"ProtractorCookie","package":"@serenity-js/protractor"},"overwrites":{"type":"reference","target":-1,"name":"Cookie.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"Cookie.constructor"}},{"id":5951,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorCookie.ts","line":21,"character":10}],"signatures":[{"id":5952,"name":"delete","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorCookie.ts","line":21,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Cookie.delete"}}],"overwrites":{"type":"reference","target":-1,"name":"Cookie.delete"}},{"id":5956,"name":"name","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":99,"character":4}],"signatures":[{"id":5957,"name":"name","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the name of this cookie."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":99,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.name"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.name"}},{"id":5958,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":106,"character":4}],"signatures":[{"id":5959,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Checks if a given cookie is set.\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Optional`"},{"kind":"text","text":"](/api/core/interface/Optional/)"}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":106,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.isPresent"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.isPresent"}},{"id":5960,"name":"value","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":110,"character":4}],"signatures":[{"id":5961,"name":"value","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the value of a given cookie."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":110,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.value"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.value"}},{"id":5962,"name":"path","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":114,"character":4}],"signatures":[{"id":5963,"name":"path","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the path of a given cookie, if any was set."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":114,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.path"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.path"}},{"id":5964,"name":"domain","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":118,"character":4}],"signatures":[{"id":5965,"name":"domain","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the domain of a given cookie, if any was set."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":118,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.domain"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.domain"}},{"id":5966,"name":"isHttpOnly","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":125,"character":4}],"signatures":[{"id":5967,"name":"isHttpOnly","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Checks if a given cookie is HTTP-only.\\n\\n#### Learn more\\n- [Mozilla Developer Network: Restricting access to cookies](https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies#restrict_access_to_cookies)"}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":125,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.isHttpOnly"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.isHttpOnly"}},{"id":5968,"name":"isSecure","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":132,"character":4}],"signatures":[{"id":5969,"name":"isSecure","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Checks if a given cookie is secure.\\n\\n#### Learn more\\n- [Mozilla Developer Network: Restricting access to cookies](https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies#restrict_access_to_cookies)"}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":132,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.isSecure"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.isSecure"}},{"id":5970,"name":"expiry","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":139,"character":4}],"signatures":[{"id":5971,"name":"expiry","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the expiry date of a given cookie\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Timestamp`"},{"kind":"text","text":"](/api/core/class/Timestamp/)"}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":139,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.expiry"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.expiry"}}],"groups":[{"title":"Constructors","children":[5946]},{"title":"Methods","children":[5951,5956,5958,5960,5962,5964,5966,5968,5970]}],"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorCookie.ts","line":14,"character":13}],"extendedTypes":[{"type":"reference","target":3963,"name":"Cookie","package":"@serenity-js/web"}],"permalink":"/api/protractor/class/ProtractorCookie","categories":[],"previousId":5834,"nextId":5972},{"id":5972,"name":"ProtractorPage","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Protractor-specific implementation of ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/)."}]},"children":[{"id":5984,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":36,"character":4}],"signatures":[{"id":5985,"name":"new ProtractorPage","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":36,"character":4}],"parameters":[{"id":5986,"name":"session","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":5834,"name":"ProtractorBrowsingSession","package":"@serenity-js/protractor"}},{"id":5987,"name":"browser","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/protractor/built/browser.d.ts","qualifiedName":"ProtractorBrowser"},"name":"ProtractorBrowser","package":"protractor"}},{"id":5988,"name":"modalDialogHandler","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4170,"name":"ModalDialogHandler","package":"@serenity-js/web"}},{"id":5989,"name":"errorHandler","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"ProtractorErrorHandler","package":"@serenity-js/protractor"}},{"id":5990,"name":"pageId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}],"type":{"type":"reference","target":5972,"name":"ProtractorPage","package":"@serenity-js/protractor"},"overwrites":{"type":"reference","target":-1,"name":"Page<protractor.ElementFinder>.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"Page<protractor.ElementFinder>.constructor"}},{"id":5995,"name":"createPageElement","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":51,"character":4}],"signatures":[{"id":5996,"name":"createPageElement","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":51,"character":4}],"parameters":[{"id":5997,"name":"nativeElement","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/protractor/built/element.d.ts","qualifiedName":"ElementFinder"},"name":"ElementFinder","package":"protractor"}}],"type":{"type":"reference","target":4418,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/protractor/built/element.d.ts","qualifiedName":"ElementFinder"},"name":"ElementFinder","package":"protractor"}],"name":"PageElement","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"Page.createPageElement"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.createPageElement"}},{"id":5998,"name":"locate","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":62,"character":4}],"signatures":[{"id":5999,"name":"locate","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":62,"character":4}],"parameters":[{"id":6000,"name":"selector","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4853,"name":"Selector","package":"@serenity-js/web"}}],"type":{"type":"reference","target":4418,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/protractor/built/element.d.ts","qualifiedName":"ElementFinder"},"name":"ElementFinder","package":"protractor"}],"name":"PageElement","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"Page.locate"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.locate"}},{"id":6001,"name":"locateAll","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":68,"character":4}],"signatures":[{"id":6002,"name":"locateAll","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":68,"character":4}],"parameters":[{"id":6003,"name":"selector","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4853,"name":"Selector","package":"@serenity-js/web"}}],"type":{"type":"reference","target":4494,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/protractor/built/element.d.ts","qualifiedName":"ElementFinder"},"name":"ElementFinder","package":"protractor"}],"name":"PageElements","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"Page.locateAll"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.locateAll"}},{"id":6004,"name":"enableAngularSynchronisation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":100,"character":10}],"signatures":[{"id":6005,"name":"enableAngularSynchronisation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"If set to "},{"kind":"code","text":"`false`"},{"kind":"text","text":", Protractor will not wait for Angular 1.x "},{"kind":"code","text":"`$http`"},{"kind":"text","text":" and "},{"kind":"code","text":"`$timeout`"},{"kind":"text","text":"\\ntasks to complete before interacting with the browser.\\n\\nThis can be useful when:\\n- you need to switch to a non-Angular app during your tests, e.g. to sign in using an SSO gateway\\n- your app continuously polls an API with "},{"kind":"code","text":"`$timeout`"},{"kind":"text","text":"\\n\\nIf you\'re not testing an Angular app, it\'s better to disable Angular synchronisation completely\\nin protractor configuration:\\n\\n"},{"kind":"code","text":"```js\\n// protractor.conf.js\\nexports.config = {\\n    onPrepare: function () {\\n        return browser.waitForAngularEnabled(false)\\n    },\\n\\n    // ... other config\\n}\\n```"}]},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":100,"character":10}],"parameters":[{"id":6006,"name":"enable","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":6007,"name":"navigateTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":106,"character":10}],"signatures":[{"id":6008,"name":"navigateTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":106,"character":10}],"parameters":[{"id":6009,"name":"destination","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.navigateTo"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.navigateTo"}},{"id":6010,"name":"navigateBack","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":112,"character":10}],"signatures":[{"id":6011,"name":"navigateBack","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":112,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.navigateBack"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.navigateBack"}},{"id":6012,"name":"navigateForward","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":118,"character":10}],"signatures":[{"id":6013,"name":"navigateForward","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":118,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.navigateForward"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.navigateForward"}},{"id":6014,"name":"reload","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":124,"character":10}],"signatures":[{"id":6015,"name":"reload","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":124,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.reload"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.reload"}},{"id":6016,"name":"sendKeys","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":130,"character":10}],"signatures":[{"id":6017,"name":"sendKeys","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":130,"character":10}],"parameters":[{"id":6018,"name":"keys","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":4186,"name":"Key","package":"@serenity-js/web"}]}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.sendKeys"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.sendKeys"}},{"id":6019,"name":"executeScript","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":162,"character":10}],"signatures":[{"id":6020,"name":"executeScript","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":162,"character":10}],"typeParameter":[{"id":6021,"name":"Result","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":6022,"name":"InnerArguments","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"parameters":[{"id":6023,"name":"script","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reflection","declaration":{"id":6024,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":163,"character":26}],"signatures":[{"id":6025,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":163,"character":26}],"parameters":[{"id":6026,"name":"parameters","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"reference","target":6022,"name":"InnerArguments","package":"@serenity-js/protractor","refersToTypeParameter":true}}],"type":{"type":"reference","target":6021,"name":"Result","package":"@serenity-js/protractor","refersToTypeParameter":true}}]}}]}},{"id":6027,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"reference","target":6022,"name":"InnerArguments","package":"@serenity-js/protractor","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":6021,"name":"Result","package":"@serenity-js/protractor","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.executeScript"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.executeScript"}},{"id":6028,"name":"executeAsyncScript","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":188,"character":10}],"signatures":[{"id":6029,"name":"executeAsyncScript","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":188,"character":10}],"typeParameter":[{"id":6030,"name":"Result","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":6031,"name":"Parameters","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"parameters":[{"id":6032,"name":"script","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reflection","declaration":{"id":6033,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":189,"character":26}],"signatures":[{"id":6034,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":189,"character":26}],"parameters":[{"id":6035,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"tuple","elements":[{"type":"rest","elementType":{"type":"namedTupleMember","name":"parameters","isOptional":false,"element":{"type":"array","elementType":{"type":"reference","target":6031,"name":"Parameters","package":"@serenity-js/protractor","refersToTypeParameter":true}}}},{"type":"namedTupleMember","name":"callback","isOptional":false,"element":{"type":"reflection","declaration":{"id":6036,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":189,"character":74}],"signatures":[{"id":6037,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":189,"character":74}],"parameters":[{"id":6038,"name":"result","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":6030,"name":"Result","package":"@serenity-js/protractor","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"void"}}]}}}]}}],"type":{"type":"intrinsic","name":"void"}}]}}]}},{"id":6039,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"reference","target":6031,"name":"Parameters","package":"@serenity-js/protractor","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":6030,"name":"Result","package":"@serenity-js/protractor","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.executeAsyncScript"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.executeAsyncScript"}},{"id":6040,"name":"lastScriptExecutionResult","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":215,"character":4}],"signatures":[{"id":6041,"name":"lastScriptExecutionResult","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":215,"character":4}],"type":{"type":"intrinsic","name":"any"},"overwrites":{"type":"reference","target":-1,"name":"Page.lastScriptExecutionResult"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.lastScriptExecutionResult"}},{"id":6042,"name":"takeScreenshot","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":227,"character":10}],"signatures":[{"id":6043,"name":"takeScreenshot","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":227,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.takeScreenshot"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.takeScreenshot"}},{"id":6044,"name":"cookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":246,"character":10}],"signatures":[{"id":6045,"name":"cookie","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":246,"character":10}],"parameters":[{"id":6046,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":3963,"name":"Cookie","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.cookie"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.cookie"}},{"id":6047,"name":"setCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":250,"character":10}],"signatures":[{"id":6048,"name":"setCookie","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":250,"character":10}],"parameters":[{"id":6049,"name":"cookieData","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4069,"name":"CookieData","package":"@serenity-js/web"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.setCookie"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.setCookie"}},{"id":6050,"name":"deleteAllCookies","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":266,"character":10}],"signatures":[{"id":6051,"name":"deleteAllCookies","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":266,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.deleteAllCookies"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.deleteAllCookies"}},{"id":6052,"name":"title","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":272,"character":10}],"signatures":[{"id":6053,"name":"title","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":272,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.title"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.title"}},{"id":6054,"name":"name","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":278,"character":10}],"signatures":[{"id":6055,"name":"name","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":278,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.name"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.name"}},{"id":6056,"name":"url","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":284,"character":10}],"signatures":[{"id":6057,"name":"url","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":284,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/url.d.ts","qualifiedName":"\\"url\\".URL"},"name":"URL","package":"@types/node","qualifiedName":"\\"url\\".URL"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.url"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.url"}},{"id":6058,"name":"viewportSize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":290,"character":10}],"signatures":[{"id":6059,"name":"viewportSize","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":290,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reflection","declaration":{"id":6060,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":6061,"name":"width","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":290,"character":36}],"type":{"type":"intrinsic","name":"number"}},{"id":6062,"name":"height","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":290,"character":51}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[6061,6062]}],"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":290,"character":34}]}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.viewportSize"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.viewportSize"}},{"id":6063,"name":"setViewportSize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":308,"character":10}],"signatures":[{"id":6064,"name":"setViewportSize","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":308,"character":10}],"parameters":[{"id":6065,"name":"size","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":6066,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":6067,"name":"width","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":308,"character":34}],"type":{"type":"intrinsic","name":"number"}},{"id":6068,"name":"height","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":308,"character":49}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[6067,6068]}],"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":308,"character":32}]}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.setViewportSize"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.setViewportSize"}},{"id":6069,"name":"close","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":324,"character":10}],"signatures":[{"id":6070,"name":"close","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":324,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.close"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.close"}},{"id":6071,"name":"closeOthers","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":336,"character":10}],"signatures":[{"id":6072,"name":"closeOthers","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":336,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.closeOthers"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.closeOthers"}},{"id":6073,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":340,"character":10}],"signatures":[{"id":6074,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":340,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.isPresent"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.isPresent"}},{"id":6084,"name":"id","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":132,"character":13}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Page.id"}},{"id":6085,"name":"switchTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":432,"character":4}],"signatures":[{"id":6086,"name":"switchTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Switches the current browsing context to the given page\\nand returns an object that allows the caller to switch back\\nto the previous context when needed.\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Switch`"},{"kind":"text","text":"](/api/web/class/Switch/)\\n- ["},{"kind":"code","text":"`Switchable`"},{"kind":"text","text":"](/api/web/interface/Switchable/)"}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":432,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4866,"name":"SwitchableOrigin","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Page.switchTo"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Page.switchTo"}},{"id":6087,"name":"modalDialog","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":444,"character":4}],"signatures":[{"id":6088,"name":"modalDialog","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the ["},{"kind":"code","text":"`ModalDialogHandler`"},{"kind":"text","text":"](/api/web/class/ModalDialogHandler/) for the current ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/)."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":444,"character":4}],"type":{"type":"reference","target":4170,"name":"ModalDialogHandler","package":"@serenity-js/web"},"inheritedFrom":{"type":"reference","target":-1,"name":"Page.modalDialog"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Page.modalDialog"}},{"id":6089,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":448,"character":4}],"signatures":[{"id":6090,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a description of this Page and its ID."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":448,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Page.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Page.toString"}}],"groups":[{"title":"Constructors","children":[5984]},{"title":"Properties","children":[6084]},{"title":"Methods","children":[5995,5998,6001,6004,6007,6010,6012,6014,6016,6019,6028,6040,6042,6044,6047,6050,6052,6054,6056,6058,6063,6069,6071,6073,6085,6087,6089]}],"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":22,"character":13}],"extendedTypes":[{"type":"reference","target":4302,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/protractor/built/element.d.ts","qualifiedName":"ElementFinder"},"name":"protractor.ElementFinder","package":"protractor","qualifiedName":"ElementFinder"}],"name":"Page","package":"@serenity-js/web"}],"permalink":"/api/protractor/class/ProtractorPage","categories":[],"previousId":5867,"nextId":6091},{"id":6091,"name":"ProtractorPageElement","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Protractor-specific implementation of ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)."}]},"children":[{"id":6111,"name":"of","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":18,"character":4}],"signatures":[{"id":6112,"name":"of","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":18,"character":4}],"parameters":[{"id":6113,"name":"parent","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":6091,"name":"ProtractorPageElement","package":"@serenity-js/protractor"}}],"type":{"type":"reference","target":4418,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/protractor/built/element.d.ts","qualifiedName":"ElementFinder"},"name":"ElementFinder","package":"protractor"}],"name":"PageElement","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.of"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.of"}},{"id":6114,"name":"closestTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":22,"character":4}],"signatures":[{"id":6115,"name":"closestTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":22,"character":4}],"parameters":[{"id":6116,"name":"child","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":6091,"name":"ProtractorPageElement","package":"@serenity-js/protractor"}}],"type":{"type":"reference","target":6091,"name":"ProtractorPageElement","package":"@serenity-js/protractor"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.closestTo"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.closestTo"}},{"id":6117,"name":"clearValue","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":26,"character":10}],"signatures":[{"id":6118,"name":"clearValue","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":26,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.clearValue"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.clearValue"}},{"id":6119,"name":"click","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":67,"character":10}],"signatures":[{"id":6120,"name":"click","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":67,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.click"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.click"}},{"id":6121,"name":"doubleClick","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":73,"character":10}],"signatures":[{"id":6122,"name":"doubleClick","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":73,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.doubleClick"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.doubleClick"}},{"id":6123,"name":"enterValue","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":84,"character":10}],"signatures":[{"id":6124,"name":"enterValue","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":84,"character":10}],"parameters":[{"id":6125,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.enterValue"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.enterValue"}},{"id":6126,"name":"scrollIntoView","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":92,"character":10}],"signatures":[{"id":6127,"name":"scrollIntoView","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":92,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.scrollIntoView"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.scrollIntoView"}},{"id":6128,"name":"hoverOver","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":101,"character":10}],"signatures":[{"id":6129,"name":"hoverOver","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":101,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.hoverOver"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.hoverOver"}},{"id":6130,"name":"rightClick","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":112,"character":10}],"signatures":[{"id":6131,"name":"rightClick","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":112,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.rightClick"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.rightClick"}},{"id":6132,"name":"selectOptions","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":123,"character":10}],"signatures":[{"id":6133,"name":"selectOptions","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":123,"character":10}],"parameters":[{"id":6134,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":4733,"name":"SelectOption","package":"@serenity-js/web"}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.selectOptions"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.selectOptions"}},{"id":6135,"name":"selectedOptions","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":136,"character":10}],"signatures":[{"id":6136,"name":"selectedOptions","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":136,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4733,"name":"SelectOption","package":"@serenity-js/web"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.selectedOptions"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.selectedOptions"}},{"id":6137,"name":"attribute","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":166,"character":10}],"signatures":[{"id":6138,"name":"attribute","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":166,"character":10}],"parameters":[{"id":6139,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.attribute"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.attribute"}},{"id":6140,"name":"text","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":172,"character":10}],"signatures":[{"id":6141,"name":"text","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":172,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.text"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.text"}},{"id":6142,"name":"value","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":178,"character":10}],"signatures":[{"id":6143,"name":"value","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":178,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.value"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.value"}},{"id":6144,"name":"html","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":191,"character":10}],"signatures":[{"id":6145,"name":"html","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":191,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.html"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.html"}},{"id":6146,"name":"switchTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":200,"character":10}],"signatures":[{"id":6147,"name":"switchTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":200,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4866,"name":"SwitchableOrigin","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.switchTo"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.switchTo"}},{"id":6148,"name":"isActive","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":236,"character":10}],"signatures":[{"id":6149,"name":"isActive","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":236,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.isActive"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.isActive"}},{"id":6150,"name":"isClickable","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":245,"character":10}],"signatures":[{"id":6151,"name":"isClickable","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":245,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.isClickable"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.isClickable"}},{"id":6152,"name":"isEnabled","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":249,"character":10}],"signatures":[{"id":6153,"name":"isEnabled","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":249,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.isEnabled"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.isEnabled"}},{"id":6154,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":255,"character":10}],"signatures":[{"id":6155,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":255,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.isPresent"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.isPresent"}},{"id":6156,"name":"isSelected","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":261,"character":10}],"signatures":[{"id":6157,"name":"isSelected","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":261,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.isSelected"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.isSelected"}},{"id":6158,"name":"isVisible","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":267,"character":10}],"signatures":[{"id":6159,"name":"isVisible","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":267,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.isVisible"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.isVisible"}},{"id":6160,"name":"locator","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":19,"character":13}],"type":{"type":"reference","target":4252,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/protractor/built/element.d.ts","qualifiedName":"ElementFinder"},"name":"ElementFinder","package":"protractor"},{"type":"intrinsic","name":"any"}],"name":"Locator","package":"@serenity-js/web"},"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement.locator"}},{"id":6108,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":46,"character":4}],"signatures":[{"id":6109,"name":"new ProtractorPageElement","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":46,"character":4}],"parameters":[{"id":6110,"name":"locator","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4252,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/protractor/built/element.d.ts","qualifiedName":"ElementFinder"},"name":"ElementFinder","package":"protractor"},{"type":"intrinsic","name":"any"}],"name":"Locator","package":"@serenity-js/web"}}],"type":{"type":"reference","target":6091,"name":"ProtractorPageElement","package":"@serenity-js/protractor"},"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement<ElementFinder>.constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement<ElementFinder>.constructor"}},{"id":6161,"name":"nativeElement","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":107,"character":4}],"signatures":[{"id":6162,"name":"nativeElement","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An \\"escape hatch\\" providing access to the integration tool-specific implementation of a Web element."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":107,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/protractor/built/element.d.ts","qualifiedName":"ElementFinder"},"name":"ElementFinder","package":"protractor"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement.nativeElement"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement.nativeElement"}},{"id":6163,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":108,"character":4}],"signatures":[{"id":6164,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":108,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement.toString"}}],"groups":[{"title":"Constructors","children":[6108]},{"title":"Properties","children":[6160]},{"title":"Methods","children":[6111,6114,6117,6119,6121,6123,6126,6128,6130,6132,6135,6137,6140,6142,6144,6146,6148,6150,6152,6154,6156,6158,6161,6163]}],"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":16,"character":13}],"extendedTypes":[{"type":"reference","target":4418,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/protractor/built/element.d.ts","qualifiedName":"ElementFinder"},"name":"ElementFinder","package":"protractor"}],"name":"PageElement","package":"@serenity-js/web"}],"permalink":"/api/protractor/class/ProtractorPageElement","categories":[],"previousId":5972,"nextId":6165},{"id":6165,"name":"ProtractorParam","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a Protractor configuration parameter specified in "},{"kind":"code","text":"`protractor.conf.js`"},{"kind":"text","text":"\\nand identified by name. Protractor configuration parameters can be overridden via the command line.\\n\\n**Warning:** this question is Protractor-specific, so using it in your tests\\nwill reduce their portability across test integration tools.\\n\\n"},{"kind":"code","text":"```js\\n// protractor.conf.js\\nexports.config = {\\n  params: {\\n    login: {\\n      username: \'jane@example.org\'\\n      password: process.env.PASSWORD\\n    }\\n  }\\n  // ...\\n}\\n```"},{"kind":"text","text":"\\n\\n## Overriding configuration parameter using the command line\\n\\n"},{"kind":"code","text":"```shell\\nnpx protractor ./protractor.conf.js --params.login.username=\\"bob@example.org\\"\\n```"},{"kind":"text","text":"\\n\\n## Using as "},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { BrowseTheWebWithProtractor, ProtractorParam } from \'@serenity-js/protractor\'\\nimport { Enter } from \'@serenity-js/web\'\\nimport { protractor } from \'protractor\'\\n\\nawait actorCalled(\'Jane\')\\n  .whoCan( BrowseTheWebWithProtractor.using(protractor.browser))\\n  .attemptsTo(\\n    Enter.theValue(ProtractorParam.called(\'login\').username).into(Form.exampleInput),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Specifying path to param as string\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { BrowseTheWebWithProtractor, ProtractorParam } from \'@serenity-js/protractor\'\\nimport { Enter } from \'@serenity-js/web\'\\nimport { protractor } from \'protractor\\n\\nawait actorCalled(\'Jane\')\\n  .whoCan(BrowseTheWebWithProtractor.using(protractor.browser))\\n  .attemptsTo(\\n    Enter.theValue(ProtractorParam.called(\'login.username\')).into(Form.exampleInput),\\n  );\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`BrowseTheWebWithProtractor.param`"},{"kind":"text","text":"](/api/protractor/class/BrowseTheWebWithProtractor/#param)"}]},"children":[{"id":6166,"name":"called","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/questions/ProtractorParam.ts","line":76,"character":11}],"signatures":[{"id":6167,"name":"called","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Name of the parameter to retrieve. This could also be a dot-delimited path,\\ne.g. "},{"kind":"code","text":"`login.username`"}]},"sources":[{"fileName":"packages/protractor/src/screenplay/questions/ProtractorParam.ts","line":76,"character":11}],"typeParameter":[{"id":6168,"name":"Return_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":6169,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"reference","target":6168,"name":"Return_Type","package":"@serenity-js/protractor","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":6170,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":6171,"name":"new ProtractorParam","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":6165,"name":"ProtractorParam","package":"@serenity-js/protractor"}}]}],"groups":[{"title":"Constructors","children":[6170]},{"title":"Methods","children":[6166]}],"sources":[{"fileName":"packages/protractor/src/screenplay/questions/ProtractorParam.ts","line":68,"character":13}],"permalink":"/api/protractor/class/ProtractorParam","categories":[],"previousId":6091}],"groups":[{"title":"Abilities","children":[5797]},{"title":"Activities","children":[5827]},{"title":"Models","children":[5834,5867,5972,6091]},{"title":"Questions","children":[6165]}],"sources":[{"fileName":"packages/protractor/src/index.ts","line":1,"character":0}],"permalink":"/api/protractor"},"urlSlug":"protractor"}],"packageName":"@serenity-js/protractor","packageVersion":"3.32.1"},{"entryPoints":[{"index":true,"label":"Index","reflection":{"id":45,"name":"@serenity-js/rest","variant":"declaration","kind":2,"flags":{"isExternal":true},"children":[{"id":7235,"name":"AxiosRequestConfigProxyDefaults","variant":"declaration","kind":2097152,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/io/AxiosRequestConfigDefaults.ts","line":3,"character":12}],"type":{"type":"reflection","declaration":{"id":7236,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":7237,"name":"host","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/io/AxiosRequestConfigDefaults.ts","line":4,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":7238,"name":"port","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/rest/src/io/AxiosRequestConfigDefaults.ts","line":5,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":7239,"name":"auth","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/rest/src/io/AxiosRequestConfigDefaults.ts","line":6,"character":4}],"type":{"type":"reflection","declaration":{"id":7240,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":7241,"name":"username","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/io/AxiosRequestConfigDefaults.ts","line":7,"character":8}],"type":{"type":"intrinsic","name":"string"}},{"id":7242,"name":"password","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/io/AxiosRequestConfigDefaults.ts","line":8,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[7241,7242]}],"sources":[{"fileName":"packages/rest/src/io/AxiosRequestConfigDefaults.ts","line":6,"character":11}]}}},{"id":7243,"name":"protocol","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/rest/src/io/AxiosRequestConfigDefaults.ts","line":10,"character":4}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[7237,7238,7239,7243]}],"sources":[{"fileName":"packages/rest/src/io/AxiosRequestConfigDefaults.ts","line":3,"character":46}]}},"permalink":"/api/rest#AxiosRequestConfigProxyDefaults","categories":[],"previousId":24355,"nextId":7244},{"id":7244,"name":"AxiosRequestConfigDefaults","variant":"declaration","kind":2097152,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/io/AxiosRequestConfigDefaults.ts","line":13,"character":12}],"typeParameters":[{"id":7247,"name":"Data","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"any"}}],"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"CreateAxiosDefaults"},"typeArguments":[{"type":"reference","target":7247,"name":"Data","package":"@serenity-js/rest","refersToTypeParameter":true}],"name":"CreateAxiosDefaults","package":"axios"},{"type":"literal","value":"proxy"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reflection","declaration":{"id":7245,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":7246,"name":"proxy","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/rest/src/io/AxiosRequestConfigDefaults.ts","line":14,"character":4}],"type":{"type":"union","types":[{"type":"reference","target":7235,"name":"AxiosRequestConfigProxyDefaults","package":"@serenity-js/rest"},{"type":"literal","value":false}]}}],"groups":[{"title":"Properties","children":[7246]}],"sources":[{"fileName":"packages/rest/src/io/AxiosRequestConfigDefaults.ts","line":13,"character":96}]}}]},"permalink":"/api/rest#AxiosRequestConfigDefaults","categories":[],"previousId":7235},{"id":7248,"name":"createAxios","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/io/createAxios.ts","line":12,"character":16}],"signatures":[{"id":7249,"name":"createAxios","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates an Axios instance with desired configuration and proxy support."}]},"sources":[{"fileName":"packages/rest/src/io/createAxios.ts","line":12,"character":16}],"parameters":[{"id":7250,"name":"axiosInstanceOrConfig","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosInstance"},"name":"AxiosInstance","package":"axios"},{"type":"reference","target":7244,"name":"AxiosRequestConfigDefaults","package":"@serenity-js/rest"}]},"defaultValue":"{}"}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosInstance"},"name":"AxiosInstance","package":"axios"}}],"permalink":"/api/rest/function/createAxios","categories":[],"previousId":7306,"nextId":7350},{"id":7251,"name":"CallAnApi","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An [ability](/api/core/class/Ability/) that wraps [axios client](https://axios-http.com/docs/api_intro) and enables\\nthe [actor](/api/core/class/Actor/) to [send](/api/rest/class/Send/)\\n[HTTP requests](/api/rest/class/HTTPRequest/) to HTTP APIs.\\n\\n"},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":" uses ["},{"kind":"code","text":"`proxy-from-env`"},{"kind":"text","text":"](https://www.npmjs.com/package/proxy-from-env) and an approach\\ndescribed in [\\"Node.js Axios behind corporate proxies\\"](https://janmolak.com/node-js-axios-behind-corporate-proxies-8b17a6f31f9d)\\nto automatically detect proxy server configuration based\\non your [environment variables](https://www.npmjs.com/package/proxy-from-env#environment-variables).\\nYou can override this configuration if needed.\\n\\n## Configuring the ability to call an API\\n\\nThe easiest way to configure the ability to "},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":" is to provide the "},{"kind":"code","text":"`baseURL`"},{"kind":"text","text":" of your HTTP API,\\nand rely on Serenity/JS to offer other sensible defaults:\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, GetRequest, LastResponse, Send } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(\\n    CallAnApi.at(\'https://api.example.org/\')\\n  )\\n  .attemptsTo(\\n    Send.a(GetRequest.to(\'/v1/users/2\')),            // GET https://api.example.org/v1/users/2\\n    Ensure.that(LastResponse.status(), equals(200)),\\n  )\\n```"},{"kind":"text","text":"\\n\\n### Resolving relative URLs\\n\\nSerenity/JS resolves request URLs using Node.js [WHATWG URL API](https://nodejs.org/api/url.html#new-urlinput-base).\\nThis means that the request URL is determined using the resource path resolved in the context of base URL, i.e. "},{"kind":"code","text":"`new URL(resourcePath, [baseURL])`"},{"kind":"text","text":".\\n\\nConsider the following example:\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, GetRequest, LastResponse, Send } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(\\n    CallAnApi.at(baseURL)\\n  )\\n  .attemptsTo(\\n    Send.a(GetRequest.to(resourcePath)),\\n    Ensure.that(LastResponse.status(), equals(200)),\\n  )\\n```"},{"kind":"text","text":"\\n\\nIn the above example:\\n- when "},{"kind":"code","text":"`resourcePath`"},{"kind":"text","text":" is defined as a full URL, it overrides the base URL\\n- when "},{"kind":"code","text":"`resourcePath`"},{"kind":"text","text":" starts with a forward slash "},{"kind":"code","text":"`/`"},{"kind":"text","text":", it replaces any path defined in the base URL\\n- when "},{"kind":"code","text":"`resourcePath`"},{"kind":"text","text":" is not a full URL and doesn\'t start with a forward slash, it gets appended to the base URL\\n\\n| baseURL                       | resourcePath               | result                               |\\n| ----------------------------- | -------------------------- | ------------------------------------ |\\n| "},{"kind":"code","text":"`https://api.example.org/`"},{"kind":"text","text":"    | "},{"kind":"code","text":"`/v1/users/2`"},{"kind":"text","text":"              | "},{"kind":"code","text":"`https://api.example.org/v1/users/2`"},{"kind":"text","text":" |\\n| "},{"kind":"code","text":"`https://example.org/api/v1/`"},{"kind":"text","text":" | "},{"kind":"code","text":"`users/2`"},{"kind":"text","text":"                  | "},{"kind":"code","text":"`https://example.org/api/v1/users/2`"},{"kind":"text","text":" |\\n| "},{"kind":"code","text":"`https://example.org/api/v1/`"},{"kind":"text","text":" | "},{"kind":"code","text":"`/secure/oauth`"},{"kind":"text","text":"            | "},{"kind":"code","text":"`https://example.org/secure/oauth`"},{"kind":"text","text":"   |\\n| "},{"kind":"code","text":"`https://v1.example.org/api/`"},{"kind":"text","text":" | "},{"kind":"code","text":"`https://v2.example.org/`"},{"kind":"text","text":"  | "},{"kind":"code","text":"`https://v2.example.org/`"},{"kind":"text","text":"            |\\n\\n### Using Axios configuration object\\n\\nWhen you need more control over how your Axios instance is configured, provide\\nan [Axios configuration object](https://axios-http.com/docs/req_config). For example:\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, GetRequest, LastResponse, Send } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(\\n    CallAnApi.using({\\n      baseURL: \'https://api.example.org/\',\\n      timeout: 30_000,\\n      // ... other configuration options\\n    })\\n  )\\n  .attemptsTo(\\n    Send.a(GetRequest.to(\'/users/2\')),\\n    Ensure.that(LastResponse.status(), equals(200)),\\n  )\\n```"},{"kind":"text","text":"\\n\\n### Working with proxy servers\\n\\n"},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":" uses ["},{"kind":"code","text":"`proxy-from-env`"},{"kind":"text","text":"](https://www.npmjs.com/package/proxy-from-env) to automatically\\ndetect proxy server configuration based on your [environment variables](https://www.npmjs.com/package/proxy-from-env#environment-variables).\\n\\nThis default behaviour can be overridden by providing explicit proxy configuration:\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, GetRequest, LastResponse, Send } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(\\n    CallAnApi.using({\\n      baseURL: \'https://api.example.org/\',\\n      proxy: {\\n        protocol: \'http\',\\n        host: \'proxy.example.org\',\\n        port: 9000,\\n        auth: {                          // `auth` is optional\\n          username: \'proxy-username\',\\n          password: \'proxy-password\',\\n        }\\n      }\\n      // ... other configuration options\\n    })\\n  )\\n  .attemptsTo(\\n    Send.a(GetRequest.to(\'/users/2\')),\\n    Ensure.that(LastResponse.status(), equals(200)),\\n  )\\n```"},{"kind":"text","text":"\\n\\nPlease note that Serenity/JS uses [proxy-agents](https://github.com/TooTallNate/proxy-agents)\\nand the approach described in [\\"Node.js Axios behind corporate proxies\\"](https://janmolak.com/node-js-axios-behind-corporate-proxies-8b17a6f31f9d)\\nto work around [limited proxy support capabilities](https://github.com/axios/axios/issues?q=is%3Aissue+is%3Aopen+proxy) in Axios itself.\\n\\n### Using Axios instance with proxy support\\n\\nTo have full control over the Axios instance used by the ability to "},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":", you can create it yourself\\nand inject it into the ability.\\nThis approach allows you to still benefit from automated proxy detection in configuration, while taking advantage\\nof the many [Axios plugins](https://www.npmjs.com/search?q=axios).\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { createAxios, CallAnApi, GetRequest, LastResponse, Send } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nimport axiosRetry from \'axios-retry\'\\n\\nconst instance = createAxios({ baseURL \'https://api.example.org/\' })\\naxiosRetry(instance, { retries: 3 })\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(\\n    CallAnApi.using(instance)\\n  )\\n  .attemptsTo(\\n    Send.a(GetRequest.to(\'/users/2\')),\\n    Ensure.that(LastResponse.status(), equals(200)),\\n  )\\n```"},{"kind":"text","text":"\\n\\n### Using raw Axios instance\\n\\nIf you don\'t want Serenity/JS to enhance your Axios instance with proxy support, instantiate the ability to\\n"},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":" using its constructor directly.\\nNote, however, that by using this approach you\'re taking the responsibility for all the aspects of configuring Axios.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, GetRequest, LastResponse, Send } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nimport { axiosCreate } from \'@serenity-js/rest\'\\nimport axiosRetry from \'axios-retry\'\\n\\nconst instance = axiosCreate({ baseURL \'https://api.example.org/\' })\\naxiosRetry(instance, { retries: 3 })\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(\\n    new CallAnApi(instance)     // using the constructor ensures your axios instance is not modified in any way.\\n  )\\n  .attemptsTo(\\n    // ...\\n  )\\n```"},{"kind":"text","text":"\\n\\n### Serenity/JS defaults\\n\\nWhen using ["},{"kind":"code","text":"`CallAnApi.at`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/#at) or ["},{"kind":"code","text":"`CallAnApi.using`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/#using) with a configuration object, Serenity/JS\\nmerges your [Axios request configuration](https://axios-http.com/docs/req_config) with the following defaults:\\n- "},{"kind":"code","text":"`timeout`"},{"kind":"text","text":": 10 seconds\\n\\n\\nYou can override them by specifying the given property in your configuration object, for example:\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, GetRequest, LastResponse, Send } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(\\n    CallAnApi.using({\\n      baseURL: \'https://api.example.org/\',\\n      timeout: 30_000\\n    })\\n  )\\n  .attemptsTo(\\n    Send.a(GetRequest.to(\'/users/2\')),\\n    Ensure.that(LastResponse.status(), equals(200)),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Interacting with multiple APIs\\n\\nSome test scenarios might require you to interact with multiple HTTP APIs. With Serenity/JS you can do this\\nusing either API-specific actors, or by specifying full URLs when performing the requests.\\n\\nThe following examples will assume that the test scenarios needs to interact with the following APIs:\\n- "},{"kind":"code","text":"`https://testdata.example.org/api/v1/`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`https://shop.example.org/api/v1/`"},{"kind":"text","text":"\\n\\nLet\'s also assume that the "},{"kind":"code","text":"`testdata`"},{"kind":"text","text":" API allows the automation to manage the test data used by the "},{"kind":"code","text":"`shop`"},{"kind":"text","text":" API.\\n\\n### Using API-specific actors\\n\\nTo create API-specific actors, configure your [test runner](/handbook/test-runners/) with a [cast](/api/core/class/Cast/)\\nthat gives your actors appropriate abilities based, for example, on their name:\\n\\n"},{"kind":"code","text":"```ts\\nimport { beforeEach } from \'mocha\'\\nimport { Actor, Cast, engage } from \'@serenity-js/core\'\\nimport { CallAnApi } from \'@serenity-js/rest\'\\n\\nexport class MyActors implements Cast {\\n  prepare(actor: Actor): Actor {\\n    switch(actor.name) {\\n      case \'Ted\':\\n        return actor.whoCan(CallAnApi.at(\'https://testdata.example.org/api/v1/\'))\\n      case \'Shelly\':\\n        return actor.whoCan(CallAnApi.at(\'https://shop.example.org/api/v1/\'))\\n      default:\\n        return actor;\\n    }\\n  }\\n}\\n\\nbeforeEach(() => engage(new MyActors()))\\n```"},{"kind":"text","text":"\\n\\nNext, retrieve the appropriate actor in your test scenario using ["},{"kind":"code","text":"`actorCalled`"},{"kind":"text","text":"](/api/core/function/actorCalled/), for example:\\n\\n"},{"kind":"code","text":"```ts\\nimport { describe, it, beforeEach } from \'mocha\'\\nimport { actorCalled, engage } from \'@serenity-js/core\\nimport { Send, GetRequest, PostRequest, LastResponse } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\ndescribe(\'Multi-actor API testing\', () => {\\n  beforeEach(() => engage(new MyActors()))\\n\\n  it(\'allows each actor to interact with their API\', async () => {\\n\\n    await actorCalled(\'Ted\').attemptsTo(\\n      Send.a(PostRequest.to(\'products\').with({ name: \'Apples\', price: \'\xa32.50\' })),\\n      Ensure.that(LastResponse.status(), equals(201)),\\n    )\\n\\n    await actorCalled(\'Shelly\').attemptsTo(\\n      Send.a(GetRequest.to(\'?product=Apples\')),\\n      Ensure.that(LastResponse.status(), equals(200)),\\n      Ensure.that(LastResponse.body(), equals([\\n        { name: \'Apples\', price: \'\xa32.50\' }\\n      ])),\\n    )\\n  })\\n})\\n```"},{"kind":"text","text":"\\n\\n### Using full URLs\\n\\nIf you prefer to have a single actor interacting with multiple APIs, you can specify the full URL for every request:\\n\\n"},{"kind":"code","text":"```ts\\nimport { describe, it, beforeEach } from \'mocha\'\\nimport { actorCalled, Cast, engage } from \'@serenity-js/core\\nimport { CallAnApi, Send, GetRequest, PostRequest, LastResponse } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\ndescribe(\'Multi-actor API testing\', () => {\\n  beforeEach(() => engage(\\n    Cast.where(actor => actor.whoCan(CallAnApi.using({})))\\n  ))\\n\\n  it(\'allows each actor to interact with their API\', async () => {\\n\\n    await actorCalled(\'Alice\').attemptsTo(\\n      Send.a(PostRequest.to(\'https://testdata.example.org/api/v1/products\')\\n        .with({ name: \'Apples\', price: \'\xa32.50\' })),\\n      Ensure.that(LastResponse.status(), equals(201)),\\n\\n      Send.a(GetRequest.to(\'https://shop.example.org/api/v1/?product=Apples\')),\\n      Ensure.that(LastResponse.status(), equals(200)),\\n      Ensure.that(LastResponse.body(), equals([\\n        { name: \'Apples\', price: \'\xa32.50\' }\\n      ])),\\n    )\\n  })\\n})\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- [Axios: Configuring requests](https://axios-http.com/docs/req_config)\\n- [MDN: HTTP methods documentation](https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods)"}]},"children":[{"id":7252,"name":"at","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":344,"character":11}],"signatures":[{"id":7253,"name":"at","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Produces an [ability](/api/core/class/Ability/) to call a REST API at a specified "},{"kind":"code","text":"`baseURL`"},{"kind":"text","text":";\\n\\nThis is the same as invoking "},{"kind":"code","text":"`CallAnApi.using({ baseURL: \'https://example.org\' })`"}]},"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":344,"character":11}],"parameters":[{"id":7254,"name":"baseURL","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/url.d.ts","qualifiedName":"\\"url\\".URL"},"name":"URL","package":"@types/node","qualifiedName":"\\"url\\".URL"}]}}],"type":{"type":"reference","target":7251,"name":"CallAnApi","package":"@serenity-js/rest"}}]},{"id":7255,"name":"using","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":369,"character":11}],"signatures":[{"id":7256,"name":"using","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Produces an [ability](/api/core/class/Ability/) to call an HTTP API using the given Axios instance,\\nor an Axios request configuration object.\\n\\nWhen you provide an [Axios configuration object](https://axios-http.com/docs/req_config),\\nit gets shallow-merged with the following defaults:\\n- request timeout of 10 seconds\\n- automatic proxy support based on\\n  your [environment variables](https://www.npmjs.com/package/proxy-from-env#environment-variables)\\n\\nWhen you provide an Axios instance, it\'s enhanced with proxy support and no other modifications are made.\\n\\nIf you don\'t want Serenity/JS to augment or modify your Axios instance in any way,\\nplease use the ["},{"kind":"code","text":"`CallAnApi.constructor`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/#constructor) directly."}]},"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":369,"character":11}],"parameters":[{"id":7257,"name":"axiosInstanceOrConfig","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosInstance"},"name":"AxiosInstance","package":"axios"},{"type":"reference","target":7244,"name":"AxiosRequestConfigDefaults","package":"@serenity-js/rest"}]}}],"type":{"type":"reference","target":7251,"name":"CallAnApi","package":"@serenity-js/rest"}}]},{"id":7291,"name":"abilityType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/abilities/Ability.ts","line":436,"character":4}],"signatures":[{"id":7292,"name":"abilityType","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the most abstract type of this Ability instance,\\nspecifically the first class in the inheritance hierarchy that directly extends the "},{"kind":"code","text":"`Ability`"},{"kind":"text","text":" class.\\n\\n"},{"kind":"code","text":"```ts\\nimport { Ability } from \'@serenity-js/core\';\\n\\nclass MyAbility extends Ability {}\\nclass MySpecialisedAbility extends MyAbility {}\\n\\nnew MyAbility().abilityType();            // returns MyAbility\\nnew MySpecialisedAbility().abilityType(); // returns MyAbility\\n```"}]},"sources":[{"fileName":"packages/core/lib/screenplay/abilities/Ability.ts","line":436,"character":4}],"type":{"type":"reference","target":529,"typeArguments":[{"type":"reference","target":508,"name":"Ability","package":"@serenity-js/core"}],"name":"AbilityType","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Ability.abilityType"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Ability.abilityType"}},{"id":7265,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":380,"character":4}],"signatures":[{"id":7266,"name":"new CallAnApi","variant":"signature","kind":16384,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"#### Learn more\\n- [AxiosInstance](https://axios-http.com/docs/instance)"}]},"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":380,"character":4}],"parameters":[{"id":7267,"name":"axiosInstance","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A pre-configured instance of the Axios HTTP client"}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosInstance"},"name":"AxiosInstance","package":"axios"}}],"type":{"type":"reference","target":7251,"name":"CallAnApi","package":"@serenity-js/rest"},"overwrites":{"type":"reference","target":-1,"name":"Ability.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"Ability.constructor"}},{"id":7270,"name":"modifyConfig","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":394,"character":4}],"signatures":[{"id":7271,"name":"modifyConfig","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Allows for the original Axios config to be changed after\\nthe [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/)\\nhas been instantiated and given to the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/).\\n\\n#### Learn more\\n- [AxiosRequestConfig](https://axios-http.com/docs/req_config)"}]},"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":394,"character":4}],"parameters":[{"id":7272,"name":"fn","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":7273,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":394,"character":21}],"signatures":[{"id":7274,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":394,"character":21}],"parameters":[{"id":7275,"name":"original","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosDefaults"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosDefaults","package":"axios"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":7276,"name":"request","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":411,"character":10}],"signatures":[{"id":7277,"name":"request","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Sends an HTTP request to a specified url.\\nResponse will be cached and available via ["},{"kind":"code","text":"`CallAnApi.mapLastResponse`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/#mapLastResponse).\\n\\n#### Learn more\\n- [AxiosRequestConfig](https://axios-http.com/docs/req_config)\\n- [AxiosResponse](https://axios-http.com/docs/res_schema)"}]},"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":411,"character":10}],"parameters":[{"id":7278,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Axios request configuration, which can be used to override the defaults\\n provided when the [ability](/api/core/class/Ability/)\\n to ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/) was instantiated."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosResponse"},"typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"AxiosResponse","package":"axios"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":7279,"name":"resolveUrl","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":451,"character":4}],"signatures":[{"id":7280,"name":"resolveUrl","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the final URL, based on the ["},{"kind":"code","text":"`AxiosRequestConfig`"},{"kind":"text","text":"](https://axios-http.com/docs/req_config) provided\\nand any defaults that the ["},{"kind":"code","text":"`AxiosInstance`"},{"kind":"text","text":"](https://axios-http.com/docs/instance) has been configured with.\\n\\nNote that unlike Axios, this method uses the Node.js [WHATWG URL API](https://nodejs.org/api/url.html#new-urlinput-base)\\nto ensure URLs are correctly resolved."}]},"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":451,"character":4}],"parameters":[{"id":7281,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"}}],"type":{"type":"intrinsic","name":"string"}}]},{"id":7282,"name":"mapLastResponse","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":468,"character":4}],"signatures":[{"id":7283,"name":"mapLastResponse","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Maps the last cached response to another type.\\nUseful when you need to extract a portion of the ["},{"kind":"code","text":"`AxiosResponse`"},{"kind":"text","text":"](https://axios-http.com/docs/res_schema) object.\\n\\n#### Learn more\\n- [AxiosResponse](https://axios-http.com/docs/res_schema)"}]},"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":468,"character":4}],"typeParameter":[{"id":7284,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":7285,"name":"mappingFunction","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":7286,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":468,"character":40}],"signatures":[{"id":7287,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":468,"character":40}],"parameters":[{"id":7288,"name":"response","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosResponse"},"typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"AxiosResponse","package":"axios"}}],"type":{"type":"reference","target":7284,"name":"T","package":"@serenity-js/rest","refersToTypeParameter":true}}]}}}],"type":{"type":"reference","target":7284,"name":"T","package":"@serenity-js/rest","refersToTypeParameter":true}}]},{"id":7289,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":476,"character":4}],"signatures":[{"id":7290,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":476,"character":4}],"type":{"type":"reference","target":614,"name":"SerialisedAbility","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"Ability.toJSON"}}],"overwrites":{"type":"reference","target":-1,"name":"Ability.toJSON"}}],"groups":[{"title":"Constructors","children":[7265]},{"title":"Methods","children":[7252,7255,7291,7270,7276,7279,7282,7289]}],"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":333,"character":13}],"extendedTypes":[{"type":"reference","target":508,"name":"Ability","package":"@serenity-js/core"}],"permalink":"/api/rest/class/CallAnApi","categories":[],"nextId":7293},{"id":7293,"name":"ChangeApiConfig","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Changes configuration of the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/)\\nthat the [actor](/api/core/class/Actor/) executing this [interaction](/api/core/class/Interaction/) has been configured with.\\n\\n## Changing API URL for all subsequent requests\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\';\\nimport { By Navigate, PageElement, Text } from \'@serenity-js/web\';\\nimport { axiosCreate, CallAnApi, ChangeApiConfig, GetRequest, LastResponse, Send } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\';\\n\\nimport * as axios from \'axios\';\\n\\n// Let\'s imagine that the website under test displays\\n// a dynamically generated API URL that we would like to use\\nconst ApiDetailsWidget = {\\n  url: () => PageElement.located(By.id(\'api-url\')).describedAs(\'API URL\'),\\n}\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(\\n    BrowseTheWeb.using(protractor.browser),\\n\\n    // Note: no default base URL is given when the axios instance is created\\n    CallAnApi.using(axiosCreate()),\\n  )\\n  .attemptsTo(\\n    Navigate.to(\'/profile\'),\\n\\n    // We change the API URL based on the text displayed in the widget\\n    // (although we could change it to some arbitrary string too).\\n    ChangeApiConfig.setUrlTo(Text.of(ApiDetailsWidget.url())),\\n\\n    // Any subsequent request will be sent to the newly set URL\\n    Send.a(GetRequest.to(\'/projects\')),\\n    Ensure.that(LastResponse.status(), equals(200)),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Changing API port for all subsequent requests\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { LocalServer, ManageALocalServer, StartLocalServer } from \'@serenity-js/local-server\'\\nimport { CallAnApi, ChangeApiConfig, GetRequest, LastResponse, Send } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(\\n    ManageALocalServer.runningAHttpListener(someServer),\\n    CallAnApi.at(\'http://localhost\'),\\n  )\\n  .attemptsTo(\\n    StartALocalServer.onRandomPort(),\\n    ChangeApiConfig.setPortTo(LocalServer.port()),\\n    Send.a(GetRequest.to(\'/api\')),\\n    Ensure.that(LastResponse.status(), equals(200)),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Setting a header for all subsequent requests\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Question } from \'@serenity-js/core\'\\nimport { CallAnApi, ChangeApiConfig, GetRequest, LastResponse, Send } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\n// A sample Question reading a Node process environment variable\\nconst EnvVar = (var_name: string) =>\\n    Question.about(`${ name } environment variable`, actor => process.env[var_name]);\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(\\n    CallAnApi.at(\'http://localhost\'),\\n  )\\n  .attemptsTo(\\n    ChangeApiConfig.setHeader(\'Authorization\', EnvVar(\'TOKEN\')),\\n    Send.a(GetRequest.to(\'/api\')),\\n    Ensure.that(LastResponse.status(), equals(200)),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Handling sensitive information\\n\\nBy design, any data handled by an actor appears in Serenity/JS reports.\\nTo prevent the exposure of any sensitive information, such as passwords or tokens, you should use ["},{"kind":"code","text":"`Masked`"},{"kind":"text","text":"](/api/core/class/Masked/).\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Masked } from \'@serenity-js/core\'\\nimport { CallAnApi, ChangeApiConfig, GetRequest, LastResponse, Send } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(\\n    CallAnApi.at(\'http://localhost\'),\\n  )\\n  .attemptsTo(\\n    ChangeApiConfig.setHeader(\'Authorization\', Masked.valueOf(\'secret token\')),\\n    Send.a(GetRequest.to(\'/api\')),\\n    Ensure.that(LastResponse.status(), equals(200)),\\n  )\\n```"}]},"children":[{"id":7294,"name":"setUrlTo","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/interactions/ChangeApiConfig.ts","line":121,"character":11}],"signatures":[{"id":7295,"name":"setUrlTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the [actor](/api/core/class/Actor/) to change the base URL\\nof their [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/)"}]},"sources":[{"fileName":"packages/rest/src/screenplay/interactions/ChangeApiConfig.ts","line":121,"character":11}],"parameters":[{"id":7296,"name":"newApiUrl","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":7297,"name":"setPortTo","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/interactions/ChangeApiConfig.ts","line":131,"character":11}],"signatures":[{"id":7298,"name":"setPortTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the [actor](/api/core/class/Actor/) to change the port configured in the base URL\\nof their [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/)"}]},"sources":[{"fileName":"packages/rest/src/screenplay/interactions/ChangeApiConfig.ts","line":131,"character":11}],"parameters":[{"id":7299,"name":"newApiPort","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":7300,"name":"setHeader","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/interactions/ChangeApiConfig.ts","line":144,"character":11}],"signatures":[{"id":7301,"name":"setHeader","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the [actor](/api/core/class/Actor/) to change the configuration of the ["},{"kind":"code","text":"`AxiosInstance`"},{"kind":"text","text":"](https://axios-http.com/docs/instance)\\nused by their [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/)\\nand set an HTTP request header for any subsequent [HTTP requests](/api/rest/class/HTTPRequest/)\\nissued via ["},{"kind":"code","text":"`Send`"},{"kind":"text","text":"](/api/rest/class/Send/)."}]},"sources":[{"fileName":"packages/rest/src/screenplay/interactions/ChangeApiConfig.ts","line":144,"character":11}],"parameters":[{"id":7302,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":7303,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":7304,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":7305,"name":"new ChangeApiConfig","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":7293,"name":"ChangeApiConfig","package":"@serenity-js/rest"}}]}],"groups":[{"title":"Constructors","children":[7304]},{"title":"Methods","children":[7294,7297,7300]}],"sources":[{"fileName":"packages/rest/src/screenplay/interactions/ChangeApiConfig.ts","line":113,"character":13}],"permalink":"/api/rest/class/ChangeApiConfig","categories":[],"previousId":7251,"nextId":7306},{"id":7306,"name":"Send","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Sends a ["},{"kind":"code","text":"`HTTPRequest`"},{"kind":"text","text":"](/api/rest/class/HTTPRequest/) to a specified URL.\\n\\nThe response to the request is made available via ["},{"kind":"code","text":"`LastResponse`"},{"kind":"text","text":"](/api/rest/class/LastResponse/).\\n\\n## Send a GET request\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, GetRequest, LastResponse, Send } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(CallAnApi.at(\'https://api.example.org/\'))\\n  .attemptsTo(\\n    Send.a(GetRequest.to(\'/books/0-688-00230-7\')),\\n    Ensure.that(LastResponse.status(), equals(200)),\\n  )\\n```"}]},"children":[{"id":7307,"name":"a","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/interactions/Send.ts","line":42,"character":11}],"signatures":[{"id":7308,"name":"a","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a new [interaction](/api/core/class/Interaction/) to ["},{"kind":"code","text":"`Send`"},{"kind":"text","text":"](/api/rest/class/Send/).\\n\\n#### Learn more\\n- [AxiosRequestConfig](https://axios-http.com/docs/req_config)"}]},"sources":[{"fileName":"packages/rest/src/screenplay/interactions/Send.ts","line":42,"character":11}],"parameters":[{"id":7309,"name":"request","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":7336,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"signatures":[{"id":7337,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.instantiationLocation"}},{"id":7338,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":7339,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":7340,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":7341,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":7342,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[7342]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.describedBy"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.describedBy"}},{"id":7348,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":7349,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.toString"}},{"id":7324,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/interactions/Send.ts","line":56,"character":4}],"signatures":[{"id":7325,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/rest/src/screenplay/interactions/Send.ts","line":56,"character":4}],"parameters":[{"id":7326,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":710,"name":"CollectsArtifacts","package":"@serenity-js/core"},{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Interaction.performAs"}}],"overwrites":{"type":"reference","target":-1,"name":"Interaction.performAs"}}],"groups":[{"title":"Methods","children":[7307,7336,7338,7348,7324]}],"sources":[{"fileName":"packages/rest/src/screenplay/interactions/Send.ts","line":32,"character":13}],"extendedTypes":[{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}],"permalink":"/api/rest/class/Send","categories":[],"previousId":7293,"nextId":7248},{"id":7350,"name":"DeleteRequest","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The DELETE method requests that the origin server remove the\\nassociation between the target resource and its current\\nfunctionality.\\n\\n## Create and then remove a resource\\n\\n"},{"kind":"code","text":"```ts\\n import { actorCalled } from \'@serenity-js/core\'\\n import { CallAnApi, DeleteRequest, LastResponse, PostRequest, Send } from \'@serenity-js/rest\'\\n import { Ensure, equals, startsWith } from \'@serenity-js/assertions\'\\n\\n await actorCalled(\'Apisitt\')\\n   .whoCan(CallAnApi.at(\'https://api.example.org/\'))\\n   .attemptsTo(\\n     // create a new test user account\\n     Send.a(PostRequest.to(\'/users\').with({\\n         login: \'tester\',\\n         password: \'P@ssword1\',\\n     }),\\n     Ensure.that(LastResponse.status(), equals(201)),\\n     Ensure.that(LastResponse.header(\'Location\'), startsWith(\'/users\')),\\n\\n     // delete the test user account\\n     Send.a(DeleteRequest.to(LastResponse.header(\'Location\'))),\\n     Ensure.that(LastResponse.status(), equals(200)),\\n   )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/DELETE\\n- https://tools.ietf.org/html/rfc7231#section-4.3.5"}]},"children":[{"id":7351,"name":"to","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/DeleteRequest.ts","line":55,"character":11}],"signatures":[{"id":7352,"name":"to","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the object with a destination URI.\\n\\nWhen the "},{"kind":"code","text":"`resourceUri`"},{"kind":"text","text":" is not a fully qualified URL but a path, such as "},{"kind":"code","text":"`/products/2`"},{"kind":"text","text":",\\nit gets concatenated with the URL provided to the Axios instance\\nwhen the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/) was instantiated."}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/DeleteRequest.ts","line":55,"character":11}],"parameters":[{"id":7353,"name":"resourceUri","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The URI where the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n should send the ["},{"kind":"code","text":"`HTTPRequest`"},{"kind":"text","text":"](/api/rest/class/HTTPRequest/)"}]},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":7350,"name":"DeleteRequest","package":"@serenity-js/rest"}}]},{"id":9541,"name":"describedAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"signatures":[{"id":9542,"name":"describedAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Changes the description of this object, as returned by ["},{"kind":"code","text":"`Describable.describedBy`"},{"kind":"text","text":"](/api/core/class/Describable/#describedBy)\\nand ["},{"kind":"code","text":"`Describable.toString`"},{"kind":"text","text":"](/api/core/class/Describable/#toString)."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"parameters":[{"id":9543,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Replaces the current description according to the following rules:\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is an ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable), it replaces the current description\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/), the current description is passed as "},{"kind":"code","text":"`context`"},{"kind":"text","text":" to "},{"kind":"code","text":"`description.of(context)`"},{"kind":"text","text":", and the result replaces the current description"}]},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":1561,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"},{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}]}}],"type":{"type":"intrinsic","name":"this"},"inheritedFrom":{"type":"reference","target":15473,"name":"HTTPRequest.describedAs"}}],"inheritedFrom":{"type":"reference","target":15472,"name":"HTTPRequest.describedAs"}},{"id":9544,"name":"as","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"signatures":[{"id":9545,"name":"as","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Maps this question to one of a different type.\\n\\n"},{"kind":"code","text":"```ts\\nQuestion.about(\'number returned as string\', actor => \'42\')   // returns: QuestionAdapter<string>\\n  .as(Number)                                                // returns: QuestionAdapter<number>\\n```"}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"typeParameter":[{"id":9546,"name":"O","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":9547,"name":"mapping","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":9548,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"signatures":[{"id":9549,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"parameters":[{"id":9550,"name":"answer","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"}}],"type":{"type":"union","types":[{"type":"reference","target":4603,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4603,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"reference","target":4603,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":15476,"name":"HTTPRequest.as"}}],"inheritedFrom":{"type":"reference","target":15475,"name":"HTTPRequest.as"}},{"id":9551,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":9552,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":9553,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":9554,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":9555,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[9555]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":15483,"name":"HTTPRequest.describedBy"}}],"inheritedFrom":{"type":"reference","target":15482,"name":"HTTPRequest.describedBy"}},{"id":9561,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":9562,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":15493,"name":"HTTPRequest.toString"}}],"inheritedFrom":{"type":"reference","target":15492,"name":"HTTPRequest.toString"}},{"id":8116,"name":"using","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/DeleteRequest.ts","line":71,"character":4}],"signatures":[{"id":8117,"name":"using","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Overrides the default Axios request configuration provided\\nwhen the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/) was instantiated.\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable)\\n- ["},{"kind":"code","text":"`WithAnswerableProperties`"},{"kind":"text","text":"](/api/core/#WithAnswerableProperties)\\n- [AxiosRequestConfig](https://axios-http.com/docs/req_config)"}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/DeleteRequest.ts","line":71,"character":4}],"parameters":[{"id":8118,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Axios request configuration overrides"}]},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reflection","declaration":{"id":8119,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":8120,"name":"url","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":8121,"name":"method","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":8122,"name":"baseURL","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":8123,"name":"allowAbsoluteUrls","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":8124,"name":"transformRequest","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":8125,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reflection","declaration":{"id":8126,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}]}},{"id":8127,"name":"transformResponse","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":8128,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reflection","declaration":{"id":8129,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}]}},{"id":8130,"name":"headers","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":8131,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":8132,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8133,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8134,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8135,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8136,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8137,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8138,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8139,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8140,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8141,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8142,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8143,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8144,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8145,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8146,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8147,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8148,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8149,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8150,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8151,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8152,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8153,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8154,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8155,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8156,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8157,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8158,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8159,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[8132,8133,8134,8135,8136,8137,8138,8139,8140,8141,8142,8143,8144,8145,8146,8147,8148,8149,8150,8151,8152,8153,8154,8155,8156,8157,8158,8159]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":8160,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":8161,"name":"Accept","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":8162,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":8163,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8164,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8165,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8166,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8167,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8168,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8169,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8170,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8171,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8172,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8173,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8174,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8175,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8176,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8177,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8178,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8179,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8180,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8181,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8182,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8183,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8184,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8185,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8186,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8187,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8188,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8189,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8190,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[8163,8164,8165,8166,8167,8168,8169,8170,8171,8172,8173,8174,8175,8176,8177,8178,8179,8180,8181,8182,8183,8184,8185,8186,8187,8188,8189,8190]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":8191,"name":"Content-Length","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":8192,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":8193,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8194,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8195,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8196,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8197,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8198,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8199,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8200,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8201,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8202,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8203,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8204,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8205,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8206,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8207,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8208,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8209,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8210,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8211,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8212,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8213,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8214,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8215,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8216,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8217,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8218,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8219,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8220,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8203,8204,8205,8206,8207,8208,8209,8210,8211,8212,8213,8214,8215,8216,8217,8218,8219,8220]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":8221,"name":"User-Agent","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":8222,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":8223,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8224,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8225,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8226,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8227,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8228,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8229,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8230,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8231,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8232,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8233,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8234,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8235,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8236,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8237,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8238,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8239,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8240,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8241,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8242,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8243,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8244,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8245,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8246,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8247,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8248,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8249,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8250,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[8223,8224,8225,8226,8227,8228,8229,8230,8231,8232,8233,8234,8235,8236,8237,8238,8239,8240,8241,8242,8243,8244,8245,8246,8247,8248,8249,8250]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":8251,"name":"Content-Encoding","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":8252,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":8253,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8254,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8255,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8256,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8257,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8258,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8259,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8260,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8261,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8262,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8263,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8264,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8265,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8266,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8267,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8268,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8269,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8270,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8271,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8272,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8273,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8274,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8275,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8276,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8277,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8278,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8279,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8280,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[8253,8254,8255,8256,8257,8258,8259,8260,8261,8262,8263,8264,8265,8266,8267,8268,8269,8270,8271,8272,8273,8274,8275,8276,8277,8278,8279,8280]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":8281,"name":"Authorization","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":8282,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":8283,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8284,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8285,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8286,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8287,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8288,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8289,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8290,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8291,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8292,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8293,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8294,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8295,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8296,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8297,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8298,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8299,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8300,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8301,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8302,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8303,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8304,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8305,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8306,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8307,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8308,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8309,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8310,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[8283,8284,8285,8286,8287,8288,8289,8290,8291,8292,8293,8294,8295,8296,8297,8298,8299,8300,8301,8302,8303,8304,8305,8306,8307,8308,8309,8310]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":8341,"name":"link","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":8342,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":8343,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8344,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8345,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8346,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8347,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8348,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8349,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8350,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8351,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8352,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8353,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8354,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8355,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8356,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8357,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8358,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8359,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8360,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8361,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8362,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8363,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8364,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8365,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8366,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8367,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8368,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8369,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8370,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[8343,8344,8345,8346,8347,8348,8349,8350,8351,8352,8353,8354,8355,8356,8357,8358,8359,8360,8361,8362,8363,8364,8365,8366,8367,8368,8369,8370]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8371,"name":"delete","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":8372,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":8373,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8374,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8375,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8376,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8377,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8378,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8379,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8380,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8381,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8382,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8383,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8384,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8385,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8386,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8387,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8388,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8389,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8390,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8391,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8392,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8393,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8394,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8395,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8396,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8397,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8398,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8399,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8400,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[8373,8374,8375,8376,8377,8378,8379,8380,8381,8382,8383,8384,8385,8386,8387,8388,8389,8390,8391,8392,8393,8394,8395,8396,8397,8398,8399,8400]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8401,"name":"get","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":8402,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":8403,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8404,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8405,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8406,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8407,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8408,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8409,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8410,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8411,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8412,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8413,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8414,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8415,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8416,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8417,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8418,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8419,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8420,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8421,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8422,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8423,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8424,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8425,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8426,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8427,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8428,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8429,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8430,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[8403,8404,8405,8406,8407,8408,8409,8410,8411,8412,8413,8414,8415,8416,8417,8418,8419,8420,8421,8422,8423,8424,8425,8426,8427,8428,8429,8430]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8431,"name":"head","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":8432,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":8433,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8434,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8435,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8436,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8437,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8438,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8439,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8440,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8441,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8442,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8443,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8444,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8445,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8446,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8447,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8448,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8449,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8450,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8451,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8452,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8453,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8454,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8455,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8456,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8457,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8458,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8459,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8460,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[8433,8434,8435,8436,8437,8438,8439,8440,8441,8442,8443,8444,8445,8446,8447,8448,8449,8450,8451,8452,8453,8454,8455,8456,8457,8458,8459,8460]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8461,"name":"options","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":8462,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":8463,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8464,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8465,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8466,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8467,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8468,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8469,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8470,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8471,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8472,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8473,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8474,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8475,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8476,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8477,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8478,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8479,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8480,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8481,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8482,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8483,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8484,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8485,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8486,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8487,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8488,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8489,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8490,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[8463,8464,8465,8466,8467,8468,8469,8470,8471,8472,8473,8474,8475,8476,8477,8478,8479,8480,8481,8482,8483,8484,8485,8486,8487,8488,8489,8490]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8491,"name":"post","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":8492,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":8493,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8494,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8495,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8496,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8497,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8498,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8499,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8500,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8501,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8502,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8503,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8504,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8505,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8506,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8507,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8508,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8509,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8510,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8511,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8512,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8513,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8514,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8515,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8516,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8517,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8518,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8519,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8520,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[8493,8494,8495,8496,8497,8498,8499,8500,8501,8502,8503,8504,8505,8506,8507,8508,8509,8510,8511,8512,8513,8514,8515,8516,8517,8518,8519,8520]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8521,"name":"put","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":8522,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":8523,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8524,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8525,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8526,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8527,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8528,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8529,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8530,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8531,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8532,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8533,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8534,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8535,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8536,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8537,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8538,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8539,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8540,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8541,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8542,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8543,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8544,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8545,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8546,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8547,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8548,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8549,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8550,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[8523,8524,8525,8526,8527,8528,8529,8530,8531,8532,8533,8534,8535,8536,8537,8538,8539,8540,8541,8542,8543,8544,8545,8546,8547,8548,8549,8550]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8551,"name":"patch","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":8552,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":8553,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8554,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8555,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8556,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8557,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8558,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8559,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8560,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8561,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8562,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8563,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8564,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8565,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8566,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8567,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8568,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8569,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8570,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8571,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8572,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8573,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8574,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8575,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8576,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8577,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8578,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8579,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8580,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[8553,8554,8555,8556,8557,8558,8559,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,8570,8571,8572,8573,8574,8575,8576,8577,8578,8579,8580]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8581,"name":"purge","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":8582,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":8583,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8584,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8585,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8586,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8587,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8588,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8589,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8590,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8591,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8592,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8593,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8594,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8595,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8596,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8597,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8598,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8599,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8600,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8601,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8602,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8603,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8604,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8605,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8606,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8607,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8608,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8609,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8610,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[8583,8584,8585,8586,8587,8588,8589,8590,8591,8592,8593,8594,8595,8596,8597,8598,8599,8600,8601,8602,8603,8604,8605,8606,8607,8608,8609,8610]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8611,"name":"unlink","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":8612,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":8613,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8614,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8615,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8616,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8617,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8618,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8619,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8620,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8621,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8622,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8623,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8624,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8625,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8626,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8627,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8628,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8629,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8630,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8631,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8632,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8633,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8634,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8635,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8636,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8637,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8638,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8639,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8640,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[8613,8614,8615,8616,8617,8618,8619,8620,8621,8622,8623,8624,8625,8626,8627,8628,8629,8630,8631,8632,8633,8634,8635,8636,8637,8638,8639,8640]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8641,"name":"common","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":8642,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":8643,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8644,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8645,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8646,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8647,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8648,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8649,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8650,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8651,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8652,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8653,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8654,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8655,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8656,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8657,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8658,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8659,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8660,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8661,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8662,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8663,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8664,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8665,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8666,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8667,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8668,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8669,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8670,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[8643,8644,8645,8646,8647,8648,8649,8650,8651,8652,8653,8654,8655,8656,8657,8658,8659,8660,8661,8662,8663,8664,8665,8666,8667,8668,8669,8670]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8311,"name":"Content-Type","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":8312,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":8313,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8314,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8315,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8316,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8317,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8318,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8319,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8320,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8321,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8322,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8323,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8324,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8325,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8326,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8327,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8328,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8329,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8330,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8331,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8332,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8333,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8334,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8335,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8336,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8337,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8338,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8339,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8340,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[8313,8314,8315,8316,8317,8318,8319,8320,8321,8322,8323,8324,8325,8326,8327,8328,8329,8330,8331,8332,8333,8334,8335,8336,8337,8338,8339,8340]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}}],"groups":[{"title":"Properties","children":[8161,8191,8221,8251,8281,8341,8371,8401,8431,8461,8491,8521,8551,8581,8611,8641,8311]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":8671,"name":"params","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":8672,"name":"paramsSerializer","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":8673,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":8678,"name":"visitor","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":8679,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8680,"name":"dots","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":8681,"name":"metaTokens","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":8682,"name":"indexes","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":8674,"name":"encode","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":8675,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8676,"name":"serialize","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":8677,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[8678,8680,8681,8682,8674,8676]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":8683,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":8684,"name":"data","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":8685,"name":"timeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":8686,"name":"timeoutErrorMessage","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":8687,"name":"withCredentials","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":8688,"name":"adapter","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":8689,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"fetch"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"xhr"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"http"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":8690,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":8712,"name":"codePointAt","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8713,"name":"includes","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8714,"name":"endsWith","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8715,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8716,"name":"repeat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8717,"name":"startsWith","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8718,"name":"anchor","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8719,"name":"big","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8720,"name":"blink","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8721,"name":"bold","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8722,"name":"fixed","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8723,"name":"fontcolor","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8724,"name":"fontsize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8725,"name":"italics","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8726,"name":"link","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8727,"name":"small","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8728,"name":"strike","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8729,"name":"sub","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8730,"name":"sup","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8740,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8731,"name":"padStart","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8732,"name":"padEnd","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8733,"name":"trimEnd","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8734,"name":"trimStart","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8735,"name":"trimLeft","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8736,"name":"trimRight","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8737,"name":"matchAll","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8738,"name":"replaceAll","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8739,"name":"at","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8691,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8692,"name":"charAt","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8693,"name":"charCodeAt","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8694,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8695,"name":"indexOf","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8696,"name":"lastIndexOf","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8697,"name":"localeCompare","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8698,"name":"match","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8699,"name":"replace","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8700,"name":"search","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8701,"name":"slice","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8702,"name":"split","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8703,"name":"substring","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8704,"name":"toLowerCase","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8705,"name":"toLocaleLowerCase","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8706,"name":"toUpperCase","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8707,"name":"toLocaleUpperCase","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8708,"name":"trim","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8709,"name":"length","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Returns the length of a String object."}]},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":8710,"name":"substr","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8711,"name":"valueOf","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Properties","children":[8709]},{"title":"Methods","children":[8712,8713,8714,8715,8716,8717,8718,8719,8720,8721,8722,8723,8724,8725,8726,8727,8728,8729,8730,8740,8731,8732,8733,8734,8735,8736,8737,8738,8739,8691,8692,8693,8694,8695,8696,8697,8698,8699,8700,8701,8702,8703,8704,8705,8706,8707,8708,8710,8711]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"unknown","name":"{} | Answerable<\\"fetch\\"> | Answerable<\\"xhr\\"> | Answerable<\\"http\\"> | { readonly [x: number]: Answerable<string>; toString: {}; charAt: {}; ... 47 more ...; [Symbol.iterator]: {}; }"}}]}},{"id":8741,"name":"auth","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":8742,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":8743,"name":"username","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":8744,"name":"password","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[8743,8744]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8745,"name":"responseType","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"text"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"arraybuffer"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"blob"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"document"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"json"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"stream"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"formdata"}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":8746,"name":"responseEncoding","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":8747,"name":"xsrfCookieName","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":8748,"name":"xsrfHeaderName","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":8749,"name":"onUploadProgress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":8750,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8751,"name":"onDownloadProgress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":8752,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8753,"name":"maxContentLength","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":8754,"name":"validateStatus","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":8755,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8756,"name":"maxBodyLength","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":8757,"name":"maxRedirects","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":8758,"name":"maxRate","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"tuple","elements":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}]}]}},{"id":8759,"name":"beforeRedirect","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":8760,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8761,"name":"socketPath","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":8762,"name":"transport","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":8763,"name":"httpAgent","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":8764,"name":"httpsAgent","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":8765,"name":"proxy","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":8766,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":8767,"name":"host","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":8768,"name":"port","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":8769,"name":"auth","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":8770,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":8771,"name":"username","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":8772,"name":"password","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[8771,8772]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8773,"name":"protocol","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[8767,8768,8769,8773]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":8774,"name":"cancelToken","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":8775,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":8776,"name":"promise","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"Cancel"},"name":"Cancel","package":"axios"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":8777,"name":"reason","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":8778,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":8779,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[8779]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8780,"name":"throwIfRequested","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Properties","children":[8776,8777]},{"title":"Methods","children":[8780]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8781,"name":"decompress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":8782,"name":"transitional","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":8783,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":8784,"name":"silentJSONParsing","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":8785,"name":"forcedJSONParsing","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":8786,"name":"clarifyTimeoutError","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}}],"groups":[{"title":"Properties","children":[8784,8785,8786]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8787,"name":"signal","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":8788,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":8789,"name":"aborted","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isReadonly":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":8790,"name":"onabort","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":8791,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8792,"name":"addEventListener","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":8793,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8794,"name":"removeEventListener","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":8795,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[8789,8790,8792,8794]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8796,"name":"insecureHTTPParser","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":8797,"name":"env","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":8798,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":8799,"name":"FormData","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":8800,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[8799]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8801,"name":"formSerializer","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":8802,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":8803,"name":"visitor","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":8804,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8805,"name":"dots","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":8806,"name":"metaTokens","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":8807,"name":"indexes","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}}],"groups":[{"title":"Properties","children":[8803,8805,8806,8807]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8808,"name":"family","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":4}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":6}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":8809,"name":"lookup","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":8810,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":8811,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":8812,"name":"withXSRFToken","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":8813,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":8814,"name":"fetchOptions","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":8815,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":8816,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":8817,"name":"cache","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A string indicating how the request will interact with the browser\'s cache to set request\'s cache."}]},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"default"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"reload"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"force-cache"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"no-cache"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"no-store"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"only-if-cached"}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":8818,"name":"credentials","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A string indicating whether credentials will be sent with the request always, never, or only when sent to a same-origin URL. Sets request\'s credentials."}]},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"include"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"omit"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"same-origin"}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":8819,"name":"integrity","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A cryptographic hash of the resource to be fetched by request. Sets request\'s integrity."}]},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":8820,"name":"keepalive","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A boolean to set request\'s keepalive."}]},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":8821,"name":"mode","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A string to indicate whether the request will use CORS, or will be restricted to same-origin URLs. Sets request\'s mode."}]},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"same-origin"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"cors"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"navigate"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"no-cors"}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":8822,"name":"priority","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"auto"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"high"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"low"}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":8823,"name":"redirect","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A string indicating whether request follows redirects, results in an error upon encountering a redirect, or returns the redirect (in an opaque fashion). Sets request\'s redirect."}]},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"error"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"follow"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"manual"}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":8824,"name":"referrer","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A string whose value is a same-origin URL, \\"about:client\\", or the empty string, to set request\'s referrer."}]},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":8825,"name":"referrerPolicy","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A referrer policy to set request\'s referrerPolicy."}]},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"same-origin"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":""}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"no-referrer"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"no-referrer-when-downgrade"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"origin"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"origin-when-cross-origin"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"strict-origin"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"strict-origin-when-cross-origin"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"unsafe-url"}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":8826,"name":"window","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Can only be null. Used to disassociate request from any Window."}]},"sources":[],"type":{"type":"literal","value":null}}],"groups":[{"title":"Properties","children":[8817,8818,8819,8820,8821,8822,8823,8824,8825,8826]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}}],"groups":[{"title":"Properties","children":[8120,8121,8122,8123,8124,8127,8130,8671,8672,8684,8685,8686,8687,8688,8741,8745,8746,8747,8748,8749,8751,8753,8754,8756,8757,8758,8759,8761,8762,8763,8764,8765,8774,8781,8782,8787,8796,8797,8801,8808,8809,8812,8814]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":7350,"name":"DeleteRequest","package":"@serenity-js/rest"}}]},{"id":9538,"name":"answeredBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/HTTPRequest.ts","line":36,"character":4}],"signatures":[{"id":9539,"name":"answeredBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/HTTPRequest.ts","line":36,"character":4}],"parameters":[{"id":9540,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":15470,"name":"HTTPRequest.answeredBy"}}],"inheritedFrom":{"type":"reference","target":15469,"name":"HTTPRequest.answeredBy"}}],"groups":[{"title":"Methods","children":[7351,9541,9544,9551,9561,8116,9538]}],"sources":[{"fileName":"packages/rest/src/screenplay/models/DeleteRequest.ts","line":42,"character":13}],"extendedTypes":[{"type":"reference","target":13989,"name":"HTTPRequest","package":"@serenity-js/rest"}],"permalink":"/api/rest/class/DeleteRequest","categories":[],"previousId":7248,"nextId":9563},{"id":9563,"name":"GetRequest","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The HTTP GET method requests a representation of the specified resource.\\nIt is the most frequent type of request made by consumers of a typical HTTP API.\\nFor this reason it\'s important to test every known endpoint that responds to GET requests and ensure that it\\nbehaves correctly.\\n\\nSince the GET method is used to _retrieve_ data from a server, it should be implemented\\nas [safe](https://developer.mozilla.org/en-US/docs/Glossary/Safe)\\nand [idempotent](https://developer.mozilla.org/en-US/docs/Glossary/Idempotent).\\nThis means that an identical request can be made once or several times in a row with the same effect while leaving\\nthe server in the same state.\\n\\n## Verify response to a GET request\\n\\n"},{"kind":"code","text":"```ts\\n import { actorCalled } from \'@serenity-js/core\'\\n import { CallAnApi, GetRequest, LastResponse, Send } from \'@serenity-js/rest\'\\n import { Ensure, equals } from \'@serenity-js/assertions\'\\n\\n interface Book {\\n     title: string;\\n     author: string;\\n }\\n\\n await actorCalled(\'Apisitt\')\\n   .whoCan(CallAnApi.at(\'https://api.example.org/\'))\\n   .attemptsTo(\\n     Send.a(GetRequest.to(\'/books/0-688-00230-7\')),\\n     Ensure.that(LastResponse.status(), equals(200)),\\n     Ensure.that(LastResponse.body<Book>(), equals({\\n         title: \'Zen and the Art of Motorcycle Maintenance: An Inquiry into Values\',\\n         author: \'Robert M. Pirsig\',\\n     })),\\n   )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/GET\\n- https://tools.ietf.org/html/rfc7231#section-4.3.1"}]},"children":[{"id":9564,"name":"to","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/GetRequest.ts","line":62,"character":11}],"signatures":[{"id":9565,"name":"to","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the object with a destination URI.\\n\\nWhen the "},{"kind":"code","text":"`resourceUri`"},{"kind":"text","text":" is not a fully qualified URL but a path, such as "},{"kind":"code","text":"`/products/2`"},{"kind":"text","text":",\\nit gets concatenated with the URL provided to the Axios instance\\nwhen the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/) was instantiated."}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/GetRequest.ts","line":62,"character":11}],"parameters":[{"id":9566,"name":"resourceUri","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The URI where the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n should send the ["},{"kind":"code","text":"`HTTPRequest`"},{"kind":"text","text":"](/api/rest/class/HTTPRequest/)"}]},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":9563,"name":"GetRequest","package":"@serenity-js/rest"}}]},{"id":11754,"name":"describedAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"signatures":[{"id":11755,"name":"describedAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Changes the description of this object, as returned by ["},{"kind":"code","text":"`Describable.describedBy`"},{"kind":"text","text":"](/api/core/class/Describable/#describedBy)\\nand ["},{"kind":"code","text":"`Describable.toString`"},{"kind":"text","text":"](/api/core/class/Describable/#toString)."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"parameters":[{"id":11756,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Replaces the current description according to the following rules:\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is an ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable), it replaces the current description\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/), the current description is passed as "},{"kind":"code","text":"`context`"},{"kind":"text","text":" to "},{"kind":"code","text":"`description.of(context)`"},{"kind":"text","text":", and the result replaces the current description"}]},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":1561,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"},{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}]}}],"type":{"type":"intrinsic","name":"this"},"inheritedFrom":{"type":"reference","target":15473,"name":"HTTPRequest.describedAs"}}],"inheritedFrom":{"type":"reference","target":15472,"name":"HTTPRequest.describedAs"}},{"id":11757,"name":"as","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"signatures":[{"id":11758,"name":"as","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Maps this question to one of a different type.\\n\\n"},{"kind":"code","text":"```ts\\nQuestion.about(\'number returned as string\', actor => \'42\')   // returns: QuestionAdapter<string>\\n  .as(Number)                                                // returns: QuestionAdapter<number>\\n```"}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"typeParameter":[{"id":11759,"name":"O","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":11760,"name":"mapping","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":11761,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"signatures":[{"id":11762,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"parameters":[{"id":11763,"name":"answer","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"}}],"type":{"type":"union","types":[{"type":"reference","target":4603,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4603,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"reference","target":4603,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":15476,"name":"HTTPRequest.as"}}],"inheritedFrom":{"type":"reference","target":15475,"name":"HTTPRequest.as"}},{"id":11764,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":11765,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":11766,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":11767,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":11768,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[11768]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":15483,"name":"HTTPRequest.describedBy"}}],"inheritedFrom":{"type":"reference","target":15482,"name":"HTTPRequest.describedBy"}},{"id":11774,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":11775,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":15493,"name":"HTTPRequest.toString"}}],"inheritedFrom":{"type":"reference","target":15492,"name":"HTTPRequest.toString"}},{"id":10329,"name":"using","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/GetRequest.ts","line":78,"character":4}],"signatures":[{"id":10330,"name":"using","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Overrides the default Axios request configuration provided\\nwhen the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/) was instantiated.\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable)\\n- ["},{"kind":"code","text":"`WithAnswerableProperties`"},{"kind":"text","text":"](/api/core/#WithAnswerableProperties)\\n- [AxiosRequestConfig](https://axios-http.com/docs/req_config)"}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/GetRequest.ts","line":78,"character":4}],"parameters":[{"id":10331,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Axios request configuration overrides"}]},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reflection","declaration":{"id":10332,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":10333,"name":"url","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":10334,"name":"method","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":10335,"name":"baseURL","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":10336,"name":"allowAbsoluteUrls","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":10337,"name":"transformRequest","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":10338,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reflection","declaration":{"id":10339,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}]}},{"id":10340,"name":"transformResponse","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":10341,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reflection","declaration":{"id":10342,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}]}},{"id":10343,"name":"headers","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":10344,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":10345,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10346,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10347,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10348,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10349,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10350,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10351,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10352,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10353,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10354,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10355,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10356,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10357,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10358,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10359,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10360,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10361,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10362,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10363,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10364,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10365,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10366,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10367,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10368,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10369,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10370,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10371,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10372,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[10345,10346,10347,10348,10349,10350,10351,10352,10353,10354,10355,10356,10357,10358,10359,10360,10361,10362,10363,10364,10365,10366,10367,10368,10369,10370,10371,10372]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":10373,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":10374,"name":"Accept","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":10375,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":10376,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10377,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10378,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10379,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10380,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10381,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10382,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10383,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10384,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10385,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10386,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10387,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10388,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10389,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10390,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10391,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10392,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10393,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10394,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10395,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10396,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10397,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10398,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10399,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10400,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10401,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10402,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10403,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[10376,10377,10378,10379,10380,10381,10382,10383,10384,10385,10386,10387,10388,10389,10390,10391,10392,10393,10394,10395,10396,10397,10398,10399,10400,10401,10402,10403]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":10404,"name":"Content-Length","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":10405,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":10406,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10407,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10408,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10409,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10410,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10411,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10412,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10413,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10414,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10415,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10416,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10417,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10418,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10419,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10420,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10421,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10422,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10423,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10424,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10425,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10426,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10427,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10428,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10429,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10430,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10431,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10432,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10433,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[10406,10407,10408,10409,10410,10411,10412,10413,10414,10415,10416,10417,10418,10419,10420,10421,10422,10423,10424,10425,10426,10427,10428,10429,10430,10431,10432,10433]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":10434,"name":"User-Agent","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":10435,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":10436,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10437,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10438,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10439,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10440,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10441,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10442,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10443,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10444,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10445,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10446,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10447,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10448,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10449,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10450,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10451,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10452,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10453,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10454,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10455,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10456,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10457,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10458,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10459,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10460,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10461,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10462,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10463,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[10436,10437,10438,10439,10440,10441,10442,10443,10444,10445,10446,10447,10448,10449,10450,10451,10452,10453,10454,10455,10456,10457,10458,10459,10460,10461,10462,10463]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":10464,"name":"Content-Encoding","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":10465,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":10466,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10467,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10468,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10469,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10470,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10471,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10472,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10473,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10474,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10475,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10476,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10477,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10478,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10479,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10480,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10481,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10482,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10483,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10484,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10485,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10486,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10487,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10488,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10489,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10490,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10491,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10492,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10493,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[10466,10467,10468,10469,10470,10471,10472,10473,10474,10475,10476,10477,10478,10479,10480,10481,10482,10483,10484,10485,10486,10487,10488,10489,10490,10491,10492,10493]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":10494,"name":"Authorization","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":10495,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":10496,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10497,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10498,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10499,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10500,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10501,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10502,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10503,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10504,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10505,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10506,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10507,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10508,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10509,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10510,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10511,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10512,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10513,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10514,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10515,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10516,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10517,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10518,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10519,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10520,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10521,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10522,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10523,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[10496,10497,10498,10499,10500,10501,10502,10503,10504,10505,10506,10507,10508,10509,10510,10511,10512,10513,10514,10515,10516,10517,10518,10519,10520,10521,10522,10523]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":10554,"name":"link","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":10555,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":10556,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10557,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10558,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10559,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10560,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10561,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10562,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10563,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10564,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10565,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10566,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10567,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10568,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10569,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10570,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10571,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10572,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10573,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10574,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10575,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10576,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10577,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10578,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10579,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10580,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10581,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10582,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10583,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[10556,10557,10558,10559,10560,10561,10562,10563,10564,10565,10566,10567,10568,10569,10570,10571,10572,10573,10574,10575,10576,10577,10578,10579,10580,10581,10582,10583]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":10584,"name":"delete","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":10585,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":10586,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10587,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10588,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10589,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10590,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10591,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10592,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10593,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10594,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10595,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10596,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10597,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10598,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10599,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10600,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10601,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10602,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10603,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10604,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10605,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10606,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10607,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10608,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10609,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10610,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10611,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10612,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10613,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[10586,10587,10588,10589,10590,10591,10592,10593,10594,10595,10596,10597,10598,10599,10600,10601,10602,10603,10604,10605,10606,10607,10608,10609,10610,10611,10612,10613]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":10614,"name":"get","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":10615,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":10616,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10617,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10618,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10619,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10620,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10621,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10622,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10623,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10624,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10625,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10626,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10627,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10628,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10629,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10630,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10631,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10632,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10633,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10634,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10635,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10636,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10637,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10638,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10639,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10640,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10641,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10642,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10643,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[10616,10617,10618,10619,10620,10621,10622,10623,10624,10625,10626,10627,10628,10629,10630,10631,10632,10633,10634,10635,10636,10637,10638,10639,10640,10641,10642,10643]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":10644,"name":"head","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":10645,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":10646,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10647,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10648,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10649,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10650,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10651,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10652,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10653,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10654,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10655,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10656,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10657,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10658,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10659,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10660,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10661,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10662,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10663,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10664,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10665,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10666,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10667,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10668,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10669,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10670,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10671,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10672,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10673,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[10646,10647,10648,10649,10650,10651,10652,10653,10654,10655,10656,10657,10658,10659,10660,10661,10662,10663,10664,10665,10666,10667,10668,10669,10670,10671,10672,10673]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":10674,"name":"options","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":10675,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":10676,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10677,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10678,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10679,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10680,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10681,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10682,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10683,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10684,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10685,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10686,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10687,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10688,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10689,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10690,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10691,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10692,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10693,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10694,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10695,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10696,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10697,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10698,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10699,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10700,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10701,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10702,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10703,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[10676,10677,10678,10679,10680,10681,10682,10683,10684,10685,10686,10687,10688,10689,10690,10691,10692,10693,10694,10695,10696,10697,10698,10699,10700,10701,10702,10703]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":10704,"name":"post","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":10705,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":10706,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10707,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10708,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10709,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10710,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10711,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10712,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10713,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10714,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10715,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10716,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10717,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10718,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10719,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10720,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10721,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10722,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10723,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10724,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10725,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10726,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10727,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10728,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10729,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10730,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10731,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10732,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10733,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[10706,10707,10708,10709,10710,10711,10712,10713,10714,10715,10716,10717,10718,10719,10720,10721,10722,10723,10724,10725,10726,10727,10728,10729,10730,10731,10732,10733]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":10734,"name":"put","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":10735,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":10736,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10737,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10738,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10739,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10740,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10741,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10742,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10743,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10744,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10745,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10746,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10747,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10748,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10749,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10750,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10751,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10752,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10753,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10754,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10755,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10756,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10757,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10758,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10759,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10760,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10761,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10762,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10763,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[10736,10737,10738,10739,10740,10741,10742,10743,10744,10745,10746,10747,10748,10749,10750,10751,10752,10753,10754,10755,10756,10757,10758,10759,10760,10761,10762,10763]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":10764,"name":"patch","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":10765,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":10766,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10767,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10768,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10769,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10770,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10771,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10772,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10773,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10774,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10775,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10776,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10777,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10778,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10779,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10780,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10781,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10782,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10783,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10784,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10785,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10786,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10787,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10788,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10789,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10790,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10791,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10792,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10793,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[10766,10767,10768,10769,10770,10771,10772,10773,10774,10775,10776,10777,10778,10779,10780,10781,10782,10783,10784,10785,10786,10787,10788,10789,10790,10791,10792,10793]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":10794,"name":"purge","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":10795,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":10796,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10797,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10798,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10799,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10800,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10801,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10802,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10803,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10804,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10805,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10806,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10807,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10808,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10809,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10810,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10811,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10812,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10813,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10814,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10815,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10816,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10817,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10818,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10819,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10820,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10821,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10822,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10823,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[10796,10797,10798,10799,10800,10801,10802,10803,10804,10805,10806,10807,10808,10809,10810,10811,10812,10813,10814,10815,10816,10817,10818,10819,10820,10821,10822,10823]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":10824,"name":"unlink","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":10825,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":10826,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10827,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10828,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10829,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10830,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10831,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10832,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10833,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10834,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10835,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10836,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10837,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10838,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10839,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10840,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10841,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10842,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10843,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10844,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10845,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10846,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10847,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10848,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10849,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10850,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10851,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10852,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10853,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[10826,10827,10828,10829,10830,10831,10832,10833,10834,10835,10836,10837,10838,10839,10840,10841,10842,10843,10844,10845,10846,10847,10848,10849,10850,10851,10852,10853]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":10854,"name":"common","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":10855,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":10856,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10857,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10858,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10859,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10860,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10861,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10862,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10863,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10864,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10865,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10866,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10867,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10868,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10869,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10870,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10871,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10872,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10873,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10874,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10875,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10876,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10877,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10878,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10879,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10880,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10881,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10882,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10883,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[10856,10857,10858,10859,10860,10861,10862,10863,10864,10865,10866,10867,10868,10869,10870,10871,10872,10873,10874,10875,10876,10877,10878,10879,10880,10881,10882,10883]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":10524,"name":"Content-Type","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":10525,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":10526,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10527,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10528,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10529,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10530,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10531,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10532,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10533,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10534,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10535,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10536,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10537,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10538,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10539,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10540,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10541,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10542,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10543,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10544,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10545,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10546,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10547,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10548,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10549,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10550,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10551,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10552,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10553,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[10526,10527,10528,10529,10530,10531,10532,10533,10534,10535,10536,10537,10538,10539,10540,10541,10542,10543,10544,10545,10546,10547,10548,10549,10550,10551,10552,10553]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}}],"groups":[{"title":"Properties","children":[10374,10404,10434,10464,10494,10554,10584,10614,10644,10674,10704,10734,10764,10794,10824,10854,10524]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":10884,"name":"params","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":10885,"name":"paramsSerializer","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":10886,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":10891,"name":"visitor","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":10892,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":10893,"name":"dots","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":10894,"name":"metaTokens","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":10895,"name":"indexes","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":10887,"name":"encode","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":10888,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":10889,"name":"serialize","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":10890,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[10891,10893,10894,10895,10887,10889]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":10896,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":10897,"name":"data","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":10898,"name":"timeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":10899,"name":"timeoutErrorMessage","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":10900,"name":"withCredentials","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":10901,"name":"adapter","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":10902,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"fetch"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"xhr"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"http"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":10903,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":10925,"name":"codePointAt","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10926,"name":"includes","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10927,"name":"endsWith","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10928,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10929,"name":"repeat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10930,"name":"startsWith","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10931,"name":"anchor","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10932,"name":"big","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10933,"name":"blink","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10934,"name":"bold","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10935,"name":"fixed","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10936,"name":"fontcolor","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10937,"name":"fontsize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10938,"name":"italics","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10939,"name":"link","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10940,"name":"small","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10941,"name":"strike","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10942,"name":"sub","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10943,"name":"sup","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10953,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10944,"name":"padStart","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10945,"name":"padEnd","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10946,"name":"trimEnd","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10947,"name":"trimStart","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10948,"name":"trimLeft","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10949,"name":"trimRight","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10950,"name":"matchAll","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10951,"name":"replaceAll","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10952,"name":"at","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10904,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10905,"name":"charAt","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10906,"name":"charCodeAt","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10907,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10908,"name":"indexOf","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10909,"name":"lastIndexOf","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10910,"name":"localeCompare","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10911,"name":"match","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10912,"name":"replace","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10913,"name":"search","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10914,"name":"slice","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10915,"name":"split","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10916,"name":"substring","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10917,"name":"toLowerCase","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10918,"name":"toLocaleLowerCase","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10919,"name":"toUpperCase","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10920,"name":"toLocaleUpperCase","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10921,"name":"trim","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10922,"name":"length","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Returns the length of a String object."}]},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":10923,"name":"substr","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10924,"name":"valueOf","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Properties","children":[10922]},{"title":"Methods","children":[10925,10926,10927,10928,10929,10930,10931,10932,10933,10934,10935,10936,10937,10938,10939,10940,10941,10942,10943,10953,10944,10945,10946,10947,10948,10949,10950,10951,10952,10904,10905,10906,10907,10908,10909,10910,10911,10912,10913,10914,10915,10916,10917,10918,10919,10920,10921,10923,10924]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"unknown","name":"{} | Answerable<\\"fetch\\"> | Answerable<\\"xhr\\"> | Answerable<\\"http\\"> | { readonly [x: number]: Answerable<string>; toString: {}; charAt: {}; ... 47 more ...; [Symbol.iterator]: {}; }"}}]}},{"id":10954,"name":"auth","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":10955,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":10956,"name":"username","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":10957,"name":"password","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[10956,10957]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":10958,"name":"responseType","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"text"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"arraybuffer"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"blob"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"document"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"json"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"stream"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"formdata"}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":10959,"name":"responseEncoding","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":10960,"name":"xsrfCookieName","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":10961,"name":"xsrfHeaderName","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":10962,"name":"onUploadProgress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":10963,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":10964,"name":"onDownloadProgress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":10965,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":10966,"name":"maxContentLength","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":10967,"name":"validateStatus","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":10968,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":10969,"name":"maxBodyLength","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":10970,"name":"maxRedirects","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":10971,"name":"maxRate","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"tuple","elements":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}]}]}},{"id":10972,"name":"beforeRedirect","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":10973,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":10974,"name":"socketPath","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":10975,"name":"transport","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":10976,"name":"httpAgent","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":10977,"name":"httpsAgent","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":10978,"name":"proxy","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":10979,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":10980,"name":"host","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":10981,"name":"port","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":10982,"name":"auth","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":10983,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":10984,"name":"username","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":10985,"name":"password","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[10984,10985]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":10986,"name":"protocol","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[10980,10981,10982,10986]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":10987,"name":"cancelToken","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":10988,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":10989,"name":"promise","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"Cancel"},"name":"Cancel","package":"axios"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":10990,"name":"reason","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":10991,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":10992,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[10992]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":10993,"name":"throwIfRequested","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Properties","children":[10989,10990]},{"title":"Methods","children":[10993]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":10994,"name":"decompress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":10995,"name":"transitional","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":10996,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":10997,"name":"silentJSONParsing","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":10998,"name":"forcedJSONParsing","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":10999,"name":"clarifyTimeoutError","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}}],"groups":[{"title":"Properties","children":[10997,10998,10999]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":11000,"name":"signal","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":11001,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":11002,"name":"aborted","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isReadonly":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":11003,"name":"onabort","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":11004,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":11005,"name":"addEventListener","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":11006,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":11007,"name":"removeEventListener","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":11008,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[11002,11003,11005,11007]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":11009,"name":"insecureHTTPParser","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":11010,"name":"env","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":11011,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":11012,"name":"FormData","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":11013,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[11012]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":11014,"name":"formSerializer","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":11015,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":11016,"name":"visitor","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":11017,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":11018,"name":"dots","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":11019,"name":"metaTokens","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":11020,"name":"indexes","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}}],"groups":[{"title":"Properties","children":[11016,11018,11019,11020]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":11021,"name":"family","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":4}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":6}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":11022,"name":"lookup","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":11023,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":11024,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":11025,"name":"withXSRFToken","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":11026,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":11027,"name":"fetchOptions","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":11028,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":11029,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":11030,"name":"cache","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A string indicating how the request will interact with the browser\'s cache to set request\'s cache."}]},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"default"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"reload"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"force-cache"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"no-cache"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"no-store"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"only-if-cached"}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":11031,"name":"credentials","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A string indicating whether credentials will be sent with the request always, never, or only when sent to a same-origin URL. Sets request\'s credentials."}]},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"include"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"omit"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"same-origin"}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":11032,"name":"integrity","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A cryptographic hash of the resource to be fetched by request. Sets request\'s integrity."}]},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":11033,"name":"keepalive","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A boolean to set request\'s keepalive."}]},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":11034,"name":"mode","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A string to indicate whether the request will use CORS, or will be restricted to same-origin URLs. Sets request\'s mode."}]},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"same-origin"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"cors"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"navigate"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"no-cors"}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":11035,"name":"priority","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"auto"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"high"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"low"}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":11036,"name":"redirect","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A string indicating whether request follows redirects, results in an error upon encountering a redirect, or returns the redirect (in an opaque fashion). Sets request\'s redirect."}]},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"error"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"follow"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"manual"}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":11037,"name":"referrer","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A string whose value is a same-origin URL, \\"about:client\\", or the empty string, to set request\'s referrer."}]},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":11038,"name":"referrerPolicy","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A referrer policy to set request\'s referrerPolicy."}]},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"same-origin"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":""}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"no-referrer"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"no-referrer-when-downgrade"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"origin"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"origin-when-cross-origin"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"strict-origin"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"strict-origin-when-cross-origin"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"unsafe-url"}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":11039,"name":"window","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Can only be null. Used to disassociate request from any Window."}]},"sources":[],"type":{"type":"literal","value":null}}],"groups":[{"title":"Properties","children":[11030,11031,11032,11033,11034,11035,11036,11037,11038,11039]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}}],"groups":[{"title":"Properties","children":[10333,10334,10335,10336,10337,10340,10343,10884,10885,10897,10898,10899,10900,10901,10954,10958,10959,10960,10961,10962,10964,10966,10967,10969,10970,10971,10972,10974,10975,10976,10977,10978,10987,10994,10995,11000,11009,11010,11014,11021,11022,11025,11027]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":9563,"name":"GetRequest","package":"@serenity-js/rest"}}]},{"id":11751,"name":"answeredBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/HTTPRequest.ts","line":36,"character":4}],"signatures":[{"id":11752,"name":"answeredBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/HTTPRequest.ts","line":36,"character":4}],"parameters":[{"id":11753,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":15470,"name":"HTTPRequest.answeredBy"}}],"inheritedFrom":{"type":"reference","target":15469,"name":"HTTPRequest.answeredBy"}}],"groups":[{"title":"Methods","children":[9564,11754,11757,11764,11774,10329,11751]}],"sources":[{"fileName":"packages/rest/src/screenplay/models/GetRequest.ts","line":49,"character":13}],"extendedTypes":[{"type":"reference","target":13989,"name":"HTTPRequest","package":"@serenity-js/rest"}],"permalink":"/api/rest/class/GetRequest","categories":[],"previousId":7350,"nextId":13989},{"id":13989,"name":"HTTPRequest","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"HTTP Request sent by the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\nusing the [interaction](/api/core/class/Interaction/) to ["},{"kind":"code","text":"`Send`"},{"kind":"text","text":"](/api/rest/class/Send/)"}]},"children":[{"id":15472,"name":"describedAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"signatures":[{"id":15473,"name":"describedAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Changes the description of this object, as returned by ["},{"kind":"code","text":"`Describable.describedBy`"},{"kind":"text","text":"](/api/core/class/Describable/#describedBy)\\nand ["},{"kind":"code","text":"`Describable.toString`"},{"kind":"text","text":"](/api/core/class/Describable/#toString)."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"parameters":[{"id":15474,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Replaces the current description according to the following rules:\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is an ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable), it replaces the current description\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/), the current description is passed as "},{"kind":"code","text":"`context`"},{"kind":"text","text":" to "},{"kind":"code","text":"`description.of(context)`"},{"kind":"text","text":", and the result replaces the current description"}]},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":1561,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"},{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}]}}],"type":{"type":"intrinsic","name":"this"},"inheritedFrom":{"type":"reference","target":-1,"name":"Question.describedAs"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Question.describedAs"}},{"id":15475,"name":"as","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"signatures":[{"id":15476,"name":"as","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Maps this question to one of a different type.\\n\\n"},{"kind":"code","text":"```ts\\nQuestion.about(\'number returned as string\', actor => \'42\')   // returns: QuestionAdapter<string>\\n  .as(Number)                                                // returns: QuestionAdapter<number>\\n```"}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"typeParameter":[{"id":15477,"name":"O","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":15478,"name":"mapping","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":15479,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"signatures":[{"id":15480,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"parameters":[{"id":15481,"name":"answer","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"}}],"type":{"type":"union","types":[{"type":"reference","target":4603,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4603,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"reference","target":4603,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Question.as"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Question.as"}},{"id":15482,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":15483,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":15484,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":15485,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":15486,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[15486]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Question.describedBy"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Question.describedBy"}},{"id":15492,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":15493,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Question.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Question.toString"}},{"id":15469,"name":"answeredBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/HTTPRequest.ts","line":36,"character":4}],"signatures":[{"id":15470,"name":"answeredBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/HTTPRequest.ts","line":36,"character":4}],"parameters":[{"id":15471,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Question.answeredBy"}}],"overwrites":{"type":"reference","target":-1,"name":"Question.answeredBy"}}],"groups":[{"title":"Methods","children":[15472,15475,15482,15492,15469]}],"sources":[{"fileName":"packages/rest/src/screenplay/models/HTTPRequest.ts","line":12,"character":22}],"extendedTypes":[{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"name":"AxiosRequestConfig","package":"axios"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"extendedBy":[{"type":"reference","target":7350,"name":"DeleteRequest"},{"type":"reference","target":9563,"name":"GetRequest"},{"type":"reference","target":11776,"name":"HeadRequest"},{"type":"reference","target":15494,"name":"OptionsRequest"},{"type":"reference","target":17707,"name":"PatchRequest"},{"type":"reference","target":19923,"name":"PostRequest"},{"type":"reference","target":22139,"name":"PutRequest"}],"permalink":"/api/rest/class/HTTPRequest","categories":[],"previousId":9563,"nextId":11776},{"id":11776,"name":"HeadRequest","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The HTTP HEAD method requests the headers that are returned if the specified resource\\nwould be requested with an HTTP GET method.\\nSuch a request can be done before deciding to download a large resource to save bandwidth, for example.\\n\\n## File download test\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, HeadRequest, LastResponse, Send } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(CallAnApi.at(\'https://api.example.org/\'))\\n  .attemptsTo(\\n    Send.a(HeadRequest.to(\'/downloads/my-test-document.pdf\')),\\n    Ensure.that(LastResponse.status(), equals(200)),\\n    Ensure.that(LastResponse.header(\'Content-Length\'), equals(256)), // assuming we know the size of the document\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/HEAD\\n- https://tools.ietf.org/html/rfc7231#section-4.3.2"}]},"children":[{"id":11777,"name":"to","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/HeadRequest.ts","line":47,"character":11}],"signatures":[{"id":11778,"name":"to","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the object with a destination URI.\\n\\nWhen the "},{"kind":"code","text":"`resourceUri`"},{"kind":"text","text":" is not a fully qualified URL but a path, such as "},{"kind":"code","text":"`/products/2`"},{"kind":"text","text":",\\nit gets concatenated with the URL provided to the Axios instance\\nwhen the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/) was instantiated."}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/HeadRequest.ts","line":47,"character":11}],"parameters":[{"id":11779,"name":"resourceUri","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The URI where the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n should send the ["},{"kind":"code","text":"`HTTPRequest`"},{"kind":"text","text":"](/api/rest/class/HTTPRequest/)"}]},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":11776,"name":"HeadRequest","package":"@serenity-js/rest"}}]},{"id":13967,"name":"describedAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"signatures":[{"id":13968,"name":"describedAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Changes the description of this object, as returned by ["},{"kind":"code","text":"`Describable.describedBy`"},{"kind":"text","text":"](/api/core/class/Describable/#describedBy)\\nand ["},{"kind":"code","text":"`Describable.toString`"},{"kind":"text","text":"](/api/core/class/Describable/#toString)."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"parameters":[{"id":13969,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Replaces the current description according to the following rules:\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is an ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable), it replaces the current description\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/), the current description is passed as "},{"kind":"code","text":"`context`"},{"kind":"text","text":" to "},{"kind":"code","text":"`description.of(context)`"},{"kind":"text","text":", and the result replaces the current description"}]},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":1561,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"},{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}]}}],"type":{"type":"intrinsic","name":"this"},"inheritedFrom":{"type":"reference","target":15473,"name":"HTTPRequest.describedAs"}}],"inheritedFrom":{"type":"reference","target":15472,"name":"HTTPRequest.describedAs"}},{"id":13970,"name":"as","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"signatures":[{"id":13971,"name":"as","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Maps this question to one of a different type.\\n\\n"},{"kind":"code","text":"```ts\\nQuestion.about(\'number returned as string\', actor => \'42\')   // returns: QuestionAdapter<string>\\n  .as(Number)                                                // returns: QuestionAdapter<number>\\n```"}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"typeParameter":[{"id":13972,"name":"O","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":13973,"name":"mapping","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":13974,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"signatures":[{"id":13975,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"parameters":[{"id":13976,"name":"answer","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"}}],"type":{"type":"union","types":[{"type":"reference","target":4603,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4603,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"reference","target":4603,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":15476,"name":"HTTPRequest.as"}}],"inheritedFrom":{"type":"reference","target":15475,"name":"HTTPRequest.as"}},{"id":13977,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":13978,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":13979,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":13980,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":13981,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[13981]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":15483,"name":"HTTPRequest.describedBy"}}],"inheritedFrom":{"type":"reference","target":15482,"name":"HTTPRequest.describedBy"}},{"id":13987,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":13988,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":15493,"name":"HTTPRequest.toString"}}],"inheritedFrom":{"type":"reference","target":15492,"name":"HTTPRequest.toString"}},{"id":13964,"name":"answeredBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/HTTPRequest.ts","line":36,"character":4}],"signatures":[{"id":13965,"name":"answeredBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/HTTPRequest.ts","line":36,"character":4}],"parameters":[{"id":13966,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":15470,"name":"HTTPRequest.answeredBy"}}],"inheritedFrom":{"type":"reference","target":15469,"name":"HTTPRequest.answeredBy"}},{"id":12542,"name":"using","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/HeadRequest.ts","line":63,"character":4}],"signatures":[{"id":12543,"name":"using","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Overrides the default Axios request configuration provided\\nwhen the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/) was instantiated.\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable)\\n- ["},{"kind":"code","text":"`WithAnswerableProperties`"},{"kind":"text","text":"](/api/core/#WithAnswerableProperties)\\n- [AxiosRequestConfig](https://axios-http.com/docs/req_config)"}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/HeadRequest.ts","line":63,"character":4}],"parameters":[{"id":12544,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Axios request configuration overrides"}]},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reflection","declaration":{"id":12545,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":12546,"name":"url","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":12547,"name":"method","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":12548,"name":"baseURL","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":12549,"name":"allowAbsoluteUrls","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":12550,"name":"transformRequest","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":12551,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reflection","declaration":{"id":12552,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}]}},{"id":12553,"name":"transformResponse","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":12554,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reflection","declaration":{"id":12555,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}]}},{"id":12556,"name":"headers","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":12557,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":12558,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12559,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12560,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12561,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12562,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12563,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12564,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12565,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12566,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12567,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12568,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12569,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12570,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12571,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12572,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12573,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12574,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12575,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12576,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12577,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12578,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12579,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12580,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12581,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12582,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12583,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12584,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12585,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[12558,12559,12560,12561,12562,12563,12564,12565,12566,12567,12568,12569,12570,12571,12572,12573,12574,12575,12576,12577,12578,12579,12580,12581,12582,12583,12584,12585]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":12586,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":12587,"name":"Accept","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":12588,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":12589,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12590,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12591,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12592,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12593,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12594,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12595,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12596,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12597,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12598,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12599,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12600,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12601,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12602,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12603,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12604,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12605,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12606,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12607,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12608,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12609,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12610,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12611,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12612,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12613,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12614,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12615,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12616,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[12589,12590,12591,12592,12593,12594,12595,12596,12597,12598,12599,12600,12601,12602,12603,12604,12605,12606,12607,12608,12609,12610,12611,12612,12613,12614,12615,12616]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":12617,"name":"Content-Length","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":12618,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":12619,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12620,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12621,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12622,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12623,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12624,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12625,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12626,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12627,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12628,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12629,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12630,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12631,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12632,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12633,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12634,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12635,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12636,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12637,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12638,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12639,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12640,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12641,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12642,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12643,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12644,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12645,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12646,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[12619,12620,12621,12622,12623,12624,12625,12626,12627,12628,12629,12630,12631,12632,12633,12634,12635,12636,12637,12638,12639,12640,12641,12642,12643,12644,12645,12646]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":12647,"name":"User-Agent","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":12648,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":12649,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12650,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12651,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12652,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12653,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12654,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12655,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12656,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12657,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12658,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12659,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12660,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12661,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12662,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12663,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12664,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12665,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12666,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12667,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12668,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12669,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12670,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12671,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12672,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12673,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12674,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12675,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12676,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[12649,12650,12651,12652,12653,12654,12655,12656,12657,12658,12659,12660,12661,12662,12663,12664,12665,12666,12667,12668,12669,12670,12671,12672,12673,12674,12675,12676]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":12677,"name":"Content-Encoding","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":12678,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":12679,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12680,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12681,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12682,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12683,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12684,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12685,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12686,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12687,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12688,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12689,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12690,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12691,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12692,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12693,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12694,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12695,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12696,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12697,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12698,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12699,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12700,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12701,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12702,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12703,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12704,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12705,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12706,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[12679,12680,12681,12682,12683,12684,12685,12686,12687,12688,12689,12690,12691,12692,12693,12694,12695,12696,12697,12698,12699,12700,12701,12702,12703,12704,12705,12706]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":12707,"name":"Authorization","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":12708,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":12709,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12710,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12711,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12712,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12713,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12714,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12715,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12716,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12717,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12718,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12719,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12720,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12721,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12722,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12723,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12724,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12725,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12726,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12727,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12728,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12729,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12730,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12731,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12732,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12733,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12734,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12735,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12736,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[12709,12710,12711,12712,12713,12714,12715,12716,12717,12718,12719,12720,12721,12722,12723,12724,12725,12726,12727,12728,12729,12730,12731,12732,12733,12734,12735,12736]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":12767,"name":"link","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":12768,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":12769,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12770,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12771,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12772,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12773,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12774,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12775,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12776,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12777,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12778,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12779,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12780,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12781,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12782,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12783,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12784,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12785,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12786,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12787,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12788,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12789,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12790,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12791,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12792,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12793,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12794,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12795,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12796,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[12769,12770,12771,12772,12773,12774,12775,12776,12777,12778,12779,12780,12781,12782,12783,12784,12785,12786,12787,12788,12789,12790,12791,12792,12793,12794,12795,12796]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":12797,"name":"delete","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":12798,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":12799,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12800,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12801,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12802,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12803,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12804,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12805,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12806,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12807,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12808,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12809,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12810,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12811,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12812,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12813,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12814,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12815,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12816,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12817,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12818,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12819,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12820,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12821,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12822,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12823,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12824,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12825,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12826,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[12799,12800,12801,12802,12803,12804,12805,12806,12807,12808,12809,12810,12811,12812,12813,12814,12815,12816,12817,12818,12819,12820,12821,12822,12823,12824,12825,12826]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":12827,"name":"get","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":12828,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":12829,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12830,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12831,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12832,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12833,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12834,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12835,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12836,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12837,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12838,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12839,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12840,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12841,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12842,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12843,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12844,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12845,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12846,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12847,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12848,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12849,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12850,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12851,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12852,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12853,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12854,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12855,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12856,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[12829,12830,12831,12832,12833,12834,12835,12836,12837,12838,12839,12840,12841,12842,12843,12844,12845,12846,12847,12848,12849,12850,12851,12852,12853,12854,12855,12856]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":12857,"name":"head","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":12858,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":12859,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12860,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12861,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12862,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12863,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12864,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12865,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12866,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12867,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12868,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12869,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12870,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12871,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12872,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12873,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12874,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12875,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12876,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12877,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12878,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12879,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12880,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12881,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12882,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12883,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12884,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12885,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12886,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[12859,12860,12861,12862,12863,12864,12865,12866,12867,12868,12869,12870,12871,12872,12873,12874,12875,12876,12877,12878,12879,12880,12881,12882,12883,12884,12885,12886]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":12887,"name":"options","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":12888,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":12889,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12890,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12891,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12892,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12893,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12894,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12895,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12896,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12897,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12898,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12899,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12900,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12901,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12902,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12903,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12904,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12905,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12906,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12907,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12908,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12909,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12910,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12911,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12912,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12913,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12914,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12915,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12916,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[12889,12890,12891,12892,12893,12894,12895,12896,12897,12898,12899,12900,12901,12902,12903,12904,12905,12906,12907,12908,12909,12910,12911,12912,12913,12914,12915,12916]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":12917,"name":"post","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":12918,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":12919,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12920,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12921,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12922,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12923,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12924,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12925,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12926,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12927,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12928,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12929,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12930,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12931,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12932,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12933,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12934,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12935,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12936,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12937,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12938,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12939,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12940,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12941,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12942,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12943,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12944,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12945,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12946,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[12919,12920,12921,12922,12923,12924,12925,12926,12927,12928,12929,12930,12931,12932,12933,12934,12935,12936,12937,12938,12939,12940,12941,12942,12943,12944,12945,12946]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":12947,"name":"put","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":12948,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":12949,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12950,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12951,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12952,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12953,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12954,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12955,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12956,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12957,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12958,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12959,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12960,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12961,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12962,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12963,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12964,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12965,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12966,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12967,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12968,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12969,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12970,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12971,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12972,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12973,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12974,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12975,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12976,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[12949,12950,12951,12952,12953,12954,12955,12956,12957,12958,12959,12960,12961,12962,12963,12964,12965,12966,12967,12968,12969,12970,12971,12972,12973,12974,12975,12976]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":12977,"name":"patch","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":12978,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":12979,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12980,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12981,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12982,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12983,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12984,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12985,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12986,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12987,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12988,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12989,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12990,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12991,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12992,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12993,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12994,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12995,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12996,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12997,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12998,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12999,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13000,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13001,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13002,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13003,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13004,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13005,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13006,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[12979,12980,12981,12982,12983,12984,12985,12986,12987,12988,12989,12990,12991,12992,12993,12994,12995,12996,12997,12998,12999,13000,13001,13002,13003,13004,13005,13006]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":13007,"name":"purge","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":13008,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":13009,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13010,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13011,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13012,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13013,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13014,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13015,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13016,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13017,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13018,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13019,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13020,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13021,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13022,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13023,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13024,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13025,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13026,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13027,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13028,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13029,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13030,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13031,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13032,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13033,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13034,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13035,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13036,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[13009,13010,13011,13012,13013,13014,13015,13016,13017,13018,13019,13020,13021,13022,13023,13024,13025,13026,13027,13028,13029,13030,13031,13032,13033,13034,13035,13036]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":13037,"name":"unlink","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":13038,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":13039,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13040,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13041,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13042,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13043,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13044,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13045,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13046,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13047,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13048,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13049,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13050,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13051,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13052,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13053,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13054,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13055,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13056,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13057,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13058,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13059,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13060,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13061,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13062,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13063,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13064,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13065,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13066,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[13039,13040,13041,13042,13043,13044,13045,13046,13047,13048,13049,13050,13051,13052,13053,13054,13055,13056,13057,13058,13059,13060,13061,13062,13063,13064,13065,13066]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":13067,"name":"common","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":13068,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":13069,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13070,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13071,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13072,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13073,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13074,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13075,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13076,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13077,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13078,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13079,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13080,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13081,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13082,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13083,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13084,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13085,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13086,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13087,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13088,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13089,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13090,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13091,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13092,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13093,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13094,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13095,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13096,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[13069,13070,13071,13072,13073,13074,13075,13076,13077,13078,13079,13080,13081,13082,13083,13084,13085,13086,13087,13088,13089,13090,13091,13092,13093,13094,13095,13096]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":12737,"name":"Content-Type","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":12738,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":12739,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12740,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12741,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12742,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12743,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12744,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12745,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12746,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12747,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12748,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12749,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12750,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12751,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12752,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12753,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12754,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12755,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12756,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12757,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12758,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12759,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12760,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12761,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12762,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12763,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12764,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12765,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12766,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[12739,12740,12741,12742,12743,12744,12745,12746,12747,12748,12749,12750,12751,12752,12753,12754,12755,12756,12757,12758,12759,12760,12761,12762,12763,12764,12765,12766]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}}],"groups":[{"title":"Properties","children":[12587,12617,12647,12677,12707,12767,12797,12827,12857,12887,12917,12947,12977,13007,13037,13067,12737]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":13097,"name":"params","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":13098,"name":"paramsSerializer","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":13099,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":13104,"name":"visitor","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":13105,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":13106,"name":"dots","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":13107,"name":"metaTokens","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":13108,"name":"indexes","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":13100,"name":"encode","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":13101,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":13102,"name":"serialize","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":13103,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[13104,13106,13107,13108,13100,13102]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":13109,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":13110,"name":"data","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":13111,"name":"timeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":13112,"name":"timeoutErrorMessage","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":13113,"name":"withCredentials","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":13114,"name":"adapter","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":13115,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"fetch"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"xhr"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"http"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":13116,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":13138,"name":"codePointAt","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13139,"name":"includes","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13140,"name":"endsWith","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13141,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13142,"name":"repeat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13143,"name":"startsWith","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13144,"name":"anchor","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13145,"name":"big","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13146,"name":"blink","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13147,"name":"bold","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13148,"name":"fixed","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13149,"name":"fontcolor","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13150,"name":"fontsize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13151,"name":"italics","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13152,"name":"link","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13153,"name":"small","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13154,"name":"strike","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13155,"name":"sub","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13156,"name":"sup","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13166,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13157,"name":"padStart","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13158,"name":"padEnd","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13159,"name":"trimEnd","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13160,"name":"trimStart","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13161,"name":"trimLeft","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13162,"name":"trimRight","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13163,"name":"matchAll","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13164,"name":"replaceAll","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13165,"name":"at","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13117,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13118,"name":"charAt","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13119,"name":"charCodeAt","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13120,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13121,"name":"indexOf","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13122,"name":"lastIndexOf","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13123,"name":"localeCompare","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13124,"name":"match","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13125,"name":"replace","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13126,"name":"search","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13127,"name":"slice","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13128,"name":"split","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13129,"name":"substring","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13130,"name":"toLowerCase","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13131,"name":"toLocaleLowerCase","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13132,"name":"toUpperCase","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13133,"name":"toLocaleUpperCase","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13134,"name":"trim","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13135,"name":"length","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Returns the length of a String object."}]},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":13136,"name":"substr","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":13137,"name":"valueOf","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Properties","children":[13135]},{"title":"Methods","children":[13138,13139,13140,13141,13142,13143,13144,13145,13146,13147,13148,13149,13150,13151,13152,13153,13154,13155,13156,13166,13157,13158,13159,13160,13161,13162,13163,13164,13165,13117,13118,13119,13120,13121,13122,13123,13124,13125,13126,13127,13128,13129,13130,13131,13132,13133,13134,13136,13137]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"unknown","name":"{} | Answerable<\\"fetch\\"> | Answerable<\\"xhr\\"> | Answerable<\\"http\\"> | { readonly [x: number]: Answerable<string>; toString: {}; charAt: {}; ... 47 more ...; [Symbol.iterator]: {}; }"}}]}},{"id":13167,"name":"auth","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":13168,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":13169,"name":"username","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":13170,"name":"password","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[13169,13170]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":13171,"name":"responseType","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"text"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"arraybuffer"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"blob"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"document"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"json"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"stream"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"formdata"}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":13172,"name":"responseEncoding","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":13173,"name":"xsrfCookieName","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":13174,"name":"xsrfHeaderName","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":13175,"name":"onUploadProgress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":13176,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":13177,"name":"onDownloadProgress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":13178,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":13179,"name":"maxContentLength","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":13180,"name":"validateStatus","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":13181,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":13182,"name":"maxBodyLength","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":13183,"name":"maxRedirects","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":13184,"name":"maxRate","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"tuple","elements":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}]}]}},{"id":13185,"name":"beforeRedirect","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":13186,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":13187,"name":"socketPath","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":13188,"name":"transport","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":13189,"name":"httpAgent","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":13190,"name":"httpsAgent","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":13191,"name":"proxy","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":13192,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":13193,"name":"host","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":13194,"name":"port","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":13195,"name":"auth","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":13196,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":13197,"name":"username","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":13198,"name":"password","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[13197,13198]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":13199,"name":"protocol","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[13193,13194,13195,13199]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":13200,"name":"cancelToken","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":13201,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":13202,"name":"promise","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"Cancel"},"name":"Cancel","package":"axios"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":13203,"name":"reason","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":13204,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":13205,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[13205]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":13206,"name":"throwIfRequested","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Properties","children":[13202,13203]},{"title":"Methods","children":[13206]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":13207,"name":"decompress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":13208,"name":"transitional","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":13209,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":13210,"name":"silentJSONParsing","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":13211,"name":"forcedJSONParsing","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":13212,"name":"clarifyTimeoutError","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}}],"groups":[{"title":"Properties","children":[13210,13211,13212]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":13213,"name":"signal","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":13214,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":13215,"name":"aborted","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isReadonly":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":13216,"name":"onabort","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":13217,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":13218,"name":"addEventListener","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":13219,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":13220,"name":"removeEventListener","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":13221,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[13215,13216,13218,13220]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":13222,"name":"insecureHTTPParser","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":13223,"name":"env","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":13224,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":13225,"name":"FormData","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":13226,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[13225]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":13227,"name":"formSerializer","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":13228,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":13229,"name":"visitor","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":13230,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":13231,"name":"dots","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":13232,"name":"metaTokens","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":13233,"name":"indexes","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}}],"groups":[{"title":"Properties","children":[13229,13231,13232,13233]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":13234,"name":"family","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":4}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":6}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":13235,"name":"lookup","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":13236,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":13237,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":13238,"name":"withXSRFToken","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":13239,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":13240,"name":"fetchOptions","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":13241,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":13242,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":13243,"name":"cache","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A string indicating how the request will interact with the browser\'s cache to set request\'s cache."}]},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"default"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"reload"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"force-cache"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"no-cache"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"no-store"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"only-if-cached"}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":13244,"name":"credentials","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A string indicating whether credentials will be sent with the request always, never, or only when sent to a same-origin URL. Sets request\'s credentials."}]},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"include"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"omit"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"same-origin"}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":13245,"name":"integrity","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A cryptographic hash of the resource to be fetched by request. Sets request\'s integrity."}]},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":13246,"name":"keepalive","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A boolean to set request\'s keepalive."}]},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":13247,"name":"mode","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A string to indicate whether the request will use CORS, or will be restricted to same-origin URLs. Sets request\'s mode."}]},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"same-origin"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"cors"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"navigate"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"no-cors"}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":13248,"name":"priority","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"auto"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"high"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"low"}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":13249,"name":"redirect","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A string indicating whether request follows redirects, results in an error upon encountering a redirect, or returns the redirect (in an opaque fashion). Sets request\'s redirect."}]},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"error"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"follow"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"manual"}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":13250,"name":"referrer","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A string whose value is a same-origin URL, \\"about:client\\", or the empty string, to set request\'s referrer."}]},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":13251,"name":"referrerPolicy","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A referrer policy to set request\'s referrerPolicy."}]},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"same-origin"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":""}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"no-referrer"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"no-referrer-when-downgrade"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"origin"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"origin-when-cross-origin"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"strict-origin"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"strict-origin-when-cross-origin"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"unsafe-url"}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":13252,"name":"window","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Can only be null. Used to disassociate request from any Window."}]},"sources":[],"type":{"type":"literal","value":null}}],"groups":[{"title":"Properties","children":[13243,13244,13245,13246,13247,13248,13249,13250,13251,13252]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}}],"groups":[{"title":"Properties","children":[12546,12547,12548,12549,12550,12553,12556,13097,13098,13110,13111,13112,13113,13114,13167,13171,13172,13173,13174,13175,13177,13179,13180,13182,13183,13184,13185,13187,13188,13189,13190,13191,13200,13207,13208,13213,13222,13223,13227,13234,13235,13238,13240]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":11776,"name":"HeadRequest","package":"@serenity-js/rest"}}]}],"groups":[{"title":"Methods","children":[11777,13967,13970,13977,13987,13964,12542]}],"sources":[{"fileName":"packages/rest/src/screenplay/models/HeadRequest.ts","line":34,"character":13}],"extendedTypes":[{"type":"reference","target":13989,"name":"HTTPRequest","package":"@serenity-js/rest"}],"permalink":"/api/rest/class/HeadRequest","categories":[],"previousId":13989,"nextId":15494},{"id":15494,"name":"OptionsRequest","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The OPTIONS method requests information about the communication\\noptions available for the target resource, at either the origin\\nserver or an intervening intermediary.  This method allows a client\\nto determine the options and/or requirements associated with a\\nresource, or the capabilities of a server, without implying a\\nresource action.\\n\\n## File download test\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, OptionsRequest, LastResponse, Send } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(CallAnApi.at(\'https://api.example.org/\'))\\n  .attemptsTo(\\n    Send.a(OptionsRequest.to(\'/downloads/my-test-document.pdf\')),\\n    Ensure.that(LastResponse.status(), equals(200)),\\n    Ensure.that(LastResponse.header(\'Allow\'), equals(\'OPTIONS, GET, HEAD\')),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/OPTIONS\\n- https://tools.ietf.org/html/rfc7231#section-4.3.7"}]},"children":[{"id":15495,"name":"to","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/OptionsRequest.ts","line":50,"character":11}],"signatures":[{"id":15496,"name":"to","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the object with a destination URI.\\n\\nWhen the "},{"kind":"code","text":"`resourceUri`"},{"kind":"text","text":" is not a fully qualified URL but a path, such as "},{"kind":"code","text":"`/products/2`"},{"kind":"text","text":",\\nit gets concatenated with the URL provided to the Axios instance\\nwhen the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/) was instantiated."}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/OptionsRequest.ts","line":50,"character":11}],"parameters":[{"id":15497,"name":"resourceUri","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The URI where the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n should send the ["},{"kind":"code","text":"`HTTPRequest`"},{"kind":"text","text":"](/api/rest/class/HTTPRequest/)"}]},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":15494,"name":"OptionsRequest","package":"@serenity-js/rest"}}]},{"id":17685,"name":"describedAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"signatures":[{"id":17686,"name":"describedAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Changes the description of this object, as returned by ["},{"kind":"code","text":"`Describable.describedBy`"},{"kind":"text","text":"](/api/core/class/Describable/#describedBy)\\nand ["},{"kind":"code","text":"`Describable.toString`"},{"kind":"text","text":"](/api/core/class/Describable/#toString)."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"parameters":[{"id":17687,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Replaces the current description according to the following rules:\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is an ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable), it replaces the current description\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/), the current description is passed as "},{"kind":"code","text":"`context`"},{"kind":"text","text":" to "},{"kind":"code","text":"`description.of(context)`"},{"kind":"text","text":", and the result replaces the current description"}]},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":1561,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"},{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}]}}],"type":{"type":"intrinsic","name":"this"},"inheritedFrom":{"type":"reference","target":15473,"name":"HTTPRequest.describedAs"}}],"inheritedFrom":{"type":"reference","target":15472,"name":"HTTPRequest.describedAs"}},{"id":17688,"name":"as","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"signatures":[{"id":17689,"name":"as","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Maps this question to one of a different type.\\n\\n"},{"kind":"code","text":"```ts\\nQuestion.about(\'number returned as string\', actor => \'42\')   // returns: QuestionAdapter<string>\\n  .as(Number)                                                // returns: QuestionAdapter<number>\\n```"}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"typeParameter":[{"id":17690,"name":"O","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":17691,"name":"mapping","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":17692,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"signatures":[{"id":17693,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"parameters":[{"id":17694,"name":"answer","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"}}],"type":{"type":"union","types":[{"type":"reference","target":4603,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4603,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"reference","target":4603,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":15476,"name":"HTTPRequest.as"}}],"inheritedFrom":{"type":"reference","target":15475,"name":"HTTPRequest.as"}},{"id":17695,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":17696,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":17697,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":17698,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":17699,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[17699]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":15483,"name":"HTTPRequest.describedBy"}}],"inheritedFrom":{"type":"reference","target":15482,"name":"HTTPRequest.describedBy"}},{"id":17705,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":17706,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":15493,"name":"HTTPRequest.toString"}}],"inheritedFrom":{"type":"reference","target":15492,"name":"HTTPRequest.toString"}},{"id":17682,"name":"answeredBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/HTTPRequest.ts","line":36,"character":4}],"signatures":[{"id":17683,"name":"answeredBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/HTTPRequest.ts","line":36,"character":4}],"parameters":[{"id":17684,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":15470,"name":"HTTPRequest.answeredBy"}}],"inheritedFrom":{"type":"reference","target":15469,"name":"HTTPRequest.answeredBy"}},{"id":16260,"name":"using","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/OptionsRequest.ts","line":66,"character":4}],"signatures":[{"id":16261,"name":"using","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Overrides the default Axios request configuration provided\\nwhen the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/) was instantiated.\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable)\\n- ["},{"kind":"code","text":"`WithAnswerableProperties`"},{"kind":"text","text":"](/api/core/#WithAnswerableProperties)\\n- [AxiosRequestConfig](https://axios-http.com/docs/req_config)"}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/OptionsRequest.ts","line":66,"character":4}],"parameters":[{"id":16262,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Axios request configuration overrides"}]},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reflection","declaration":{"id":16263,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":16264,"name":"url","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":16265,"name":"method","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":16266,"name":"baseURL","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":16267,"name":"allowAbsoluteUrls","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":16268,"name":"transformRequest","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":16269,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reflection","declaration":{"id":16270,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}]}},{"id":16271,"name":"transformResponse","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":16272,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reflection","declaration":{"id":16273,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}]}},{"id":16274,"name":"headers","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":16275,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":16276,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16277,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16278,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16279,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16280,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16281,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16282,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16283,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16284,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16285,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16286,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16287,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16288,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16289,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16290,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16291,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16292,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16293,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16294,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16295,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16296,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16297,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16298,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16299,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16300,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16301,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16302,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16303,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[16276,16277,16278,16279,16280,16281,16282,16283,16284,16285,16286,16287,16288,16289,16290,16291,16292,16293,16294,16295,16296,16297,16298,16299,16300,16301,16302,16303]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":16304,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":16305,"name":"Accept","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":16306,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":16307,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16308,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16309,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16310,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16311,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16312,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16313,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16314,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16315,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16316,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16317,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16318,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16319,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16320,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16321,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16322,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16323,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16324,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16325,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16326,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16327,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16328,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16329,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16330,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16331,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16332,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16333,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16334,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[16307,16308,16309,16310,16311,16312,16313,16314,16315,16316,16317,16318,16319,16320,16321,16322,16323,16324,16325,16326,16327,16328,16329,16330,16331,16332,16333,16334]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":16335,"name":"Content-Length","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":16336,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":16337,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16338,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16339,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16340,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16341,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16342,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16343,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16344,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16345,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16346,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16347,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16348,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16349,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16350,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16351,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16352,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16353,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16354,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16355,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16356,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16357,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16358,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16359,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16360,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16361,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16362,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16363,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16364,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[16337,16338,16339,16340,16341,16342,16343,16344,16345,16346,16347,16348,16349,16350,16351,16352,16353,16354,16355,16356,16357,16358,16359,16360,16361,16362,16363,16364]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":16365,"name":"User-Agent","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":16366,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":16367,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16368,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16369,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16370,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16371,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16372,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16373,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16374,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16375,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16376,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16377,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16378,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16379,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16380,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16381,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16382,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16383,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16384,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16385,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16386,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16387,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16388,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16389,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16390,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16391,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16392,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16393,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16394,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[16367,16368,16369,16370,16371,16372,16373,16374,16375,16376,16377,16378,16379,16380,16381,16382,16383,16384,16385,16386,16387,16388,16389,16390,16391,16392,16393,16394]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":16395,"name":"Content-Encoding","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":16396,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":16397,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16398,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16399,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16400,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16401,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16402,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16403,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16404,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16405,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16406,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16407,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16408,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16409,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16410,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16411,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16412,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16413,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16414,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16415,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16416,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16417,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16418,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16419,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16420,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16421,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16422,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16423,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16424,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[16397,16398,16399,16400,16401,16402,16403,16404,16405,16406,16407,16408,16409,16410,16411,16412,16413,16414,16415,16416,16417,16418,16419,16420,16421,16422,16423,16424]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":16425,"name":"Authorization","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":16426,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":16427,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16428,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16429,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16430,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16431,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16432,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16433,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16434,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16435,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16436,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16437,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16438,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16439,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16440,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16441,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16442,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16443,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16444,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16445,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16446,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16447,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16448,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16449,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16450,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16451,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16452,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16453,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16454,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[16427,16428,16429,16430,16431,16432,16433,16434,16435,16436,16437,16438,16439,16440,16441,16442,16443,16444,16445,16446,16447,16448,16449,16450,16451,16452,16453,16454]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":16485,"name":"link","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":16486,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":16487,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16488,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16489,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16490,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16491,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16492,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16493,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16494,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16495,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16496,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16497,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16498,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16499,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16500,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16501,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16502,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16503,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16504,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16505,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16506,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16507,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16508,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16509,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16510,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16511,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16512,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16513,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16514,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[16487,16488,16489,16490,16491,16492,16493,16494,16495,16496,16497,16498,16499,16500,16501,16502,16503,16504,16505,16506,16507,16508,16509,16510,16511,16512,16513,16514]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":16515,"name":"delete","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":16516,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":16517,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16518,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16519,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16520,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16521,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16522,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16523,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16524,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16525,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16526,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16527,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16528,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16529,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16530,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16531,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16532,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16533,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16534,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16535,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16536,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16537,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16538,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16539,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16540,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16541,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16542,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16543,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16544,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[16517,16518,16519,16520,16521,16522,16523,16524,16525,16526,16527,16528,16529,16530,16531,16532,16533,16534,16535,16536,16537,16538,16539,16540,16541,16542,16543,16544]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":16545,"name":"get","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":16546,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":16547,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16548,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16549,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16550,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16551,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16552,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16553,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16554,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16555,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16556,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16557,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16558,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16559,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16560,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16561,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16562,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16563,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16564,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16565,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16566,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16567,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16568,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16569,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16570,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16571,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16572,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16573,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16574,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[16547,16548,16549,16550,16551,16552,16553,16554,16555,16556,16557,16558,16559,16560,16561,16562,16563,16564,16565,16566,16567,16568,16569,16570,16571,16572,16573,16574]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":16575,"name":"head","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":16576,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":16577,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16578,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16579,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16580,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16581,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16582,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16583,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16584,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16585,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16586,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16587,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16588,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16589,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16590,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16591,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16592,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16593,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16594,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16595,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16596,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16597,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16598,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16599,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16600,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16601,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16602,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16603,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16604,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[16577,16578,16579,16580,16581,16582,16583,16584,16585,16586,16587,16588,16589,16590,16591,16592,16593,16594,16595,16596,16597,16598,16599,16600,16601,16602,16603,16604]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":16605,"name":"options","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":16606,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":16607,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16608,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16609,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16610,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16611,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16612,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16613,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16614,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16615,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16616,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16617,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16618,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16619,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16620,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16621,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16622,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16623,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16624,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16625,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16626,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16627,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16628,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16629,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16630,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16631,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16632,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16633,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16634,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[16607,16608,16609,16610,16611,16612,16613,16614,16615,16616,16617,16618,16619,16620,16621,16622,16623,16624,16625,16626,16627,16628,16629,16630,16631,16632,16633,16634]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":16635,"name":"post","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":16636,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":16637,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16638,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16639,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16640,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16641,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16642,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16643,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16644,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16645,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16646,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16647,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16648,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16649,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16650,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16651,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16652,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16653,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16654,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16655,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16656,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16657,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16658,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16659,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16660,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16661,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16662,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16663,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16664,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[16637,16638,16639,16640,16641,16642,16643,16644,16645,16646,16647,16648,16649,16650,16651,16652,16653,16654,16655,16656,16657,16658,16659,16660,16661,16662,16663,16664]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":16665,"name":"put","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":16666,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":16667,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16668,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16669,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16670,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16671,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16672,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16673,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16674,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16675,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16676,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16677,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16678,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16679,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16680,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16681,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16682,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16683,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16684,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16685,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16686,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16687,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16688,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16689,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16690,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16691,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16692,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16693,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16694,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[16667,16668,16669,16670,16671,16672,16673,16674,16675,16676,16677,16678,16679,16680,16681,16682,16683,16684,16685,16686,16687,16688,16689,16690,16691,16692,16693,16694]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":16695,"name":"patch","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":16696,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":16697,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16698,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16699,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16700,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16701,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16702,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16703,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16704,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16705,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16706,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16707,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16708,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16709,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16710,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16711,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16712,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16713,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16714,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16715,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16716,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16717,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16718,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16719,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16720,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16721,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16722,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16723,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16724,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[16697,16698,16699,16700,16701,16702,16703,16704,16705,16706,16707,16708,16709,16710,16711,16712,16713,16714,16715,16716,16717,16718,16719,16720,16721,16722,16723,16724]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":16725,"name":"purge","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":16726,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":16727,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16728,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16729,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16730,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16731,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16732,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16733,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16734,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16735,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16736,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16737,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16738,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16739,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16740,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16741,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16742,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16743,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16744,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16745,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16746,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16747,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16748,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16749,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16750,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16751,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16752,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16753,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16754,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[16727,16728,16729,16730,16731,16732,16733,16734,16735,16736,16737,16738,16739,16740,16741,16742,16743,16744,16745,16746,16747,16748,16749,16750,16751,16752,16753,16754]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":16755,"name":"unlink","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":16756,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":16757,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16758,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16759,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16760,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16761,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16762,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16763,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16764,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16765,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16766,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16767,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16768,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16769,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16770,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16771,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16772,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16773,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16774,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16775,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16776,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16777,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16778,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16779,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16780,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16781,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16782,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16783,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16784,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[16757,16758,16759,16760,16761,16762,16763,16764,16765,16766,16767,16768,16769,16770,16771,16772,16773,16774,16775,16776,16777,16778,16779,16780,16781,16782,16783,16784]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":16785,"name":"common","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":16786,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":16787,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16788,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16789,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16790,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16791,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16792,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16793,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16794,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16795,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16796,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16797,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16798,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16799,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16800,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16801,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16802,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16803,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16804,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16805,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16806,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16807,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16808,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16809,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16810,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16811,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16812,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16813,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16814,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[16787,16788,16789,16790,16791,16792,16793,16794,16795,16796,16797,16798,16799,16800,16801,16802,16803,16804,16805,16806,16807,16808,16809,16810,16811,16812,16813,16814]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":16455,"name":"Content-Type","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":16456,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":16457,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16458,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16459,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16460,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16461,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16462,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16463,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16464,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16465,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16466,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16467,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16468,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16469,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16470,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16471,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16472,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16473,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16474,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16475,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16476,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16477,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16478,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16479,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16480,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16481,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16482,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16483,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16484,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[16457,16458,16459,16460,16461,16462,16463,16464,16465,16466,16467,16468,16469,16470,16471,16472,16473,16474,16475,16476,16477,16478,16479,16480,16481,16482,16483,16484]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}}],"groups":[{"title":"Properties","children":[16305,16335,16365,16395,16425,16485,16515,16545,16575,16605,16635,16665,16695,16725,16755,16785,16455]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":16815,"name":"params","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":16816,"name":"paramsSerializer","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":16817,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":16822,"name":"visitor","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":16823,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":16824,"name":"dots","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":16825,"name":"metaTokens","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":16826,"name":"indexes","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":16818,"name":"encode","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":16819,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":16820,"name":"serialize","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":16821,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[16822,16824,16825,16826,16818,16820]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":16827,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":16828,"name":"data","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":16829,"name":"timeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":16830,"name":"timeoutErrorMessage","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":16831,"name":"withCredentials","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":16832,"name":"adapter","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":16833,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"fetch"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"xhr"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"http"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":16834,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":16856,"name":"codePointAt","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16857,"name":"includes","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16858,"name":"endsWith","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16859,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16860,"name":"repeat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16861,"name":"startsWith","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16862,"name":"anchor","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16863,"name":"big","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16864,"name":"blink","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16865,"name":"bold","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16866,"name":"fixed","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16867,"name":"fontcolor","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16868,"name":"fontsize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16869,"name":"italics","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16870,"name":"link","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16871,"name":"small","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16872,"name":"strike","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16873,"name":"sub","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16874,"name":"sup","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16884,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16875,"name":"padStart","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16876,"name":"padEnd","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16877,"name":"trimEnd","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16878,"name":"trimStart","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16879,"name":"trimLeft","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16880,"name":"trimRight","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16881,"name":"matchAll","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16882,"name":"replaceAll","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16883,"name":"at","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16835,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16836,"name":"charAt","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16837,"name":"charCodeAt","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16838,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16839,"name":"indexOf","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16840,"name":"lastIndexOf","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16841,"name":"localeCompare","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16842,"name":"match","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16843,"name":"replace","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16844,"name":"search","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16845,"name":"slice","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16846,"name":"split","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16847,"name":"substring","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16848,"name":"toLowerCase","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16849,"name":"toLocaleLowerCase","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16850,"name":"toUpperCase","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16851,"name":"toLocaleUpperCase","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16852,"name":"trim","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16853,"name":"length","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Returns the length of a String object."}]},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":16854,"name":"substr","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16855,"name":"valueOf","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Properties","children":[16853]},{"title":"Methods","children":[16856,16857,16858,16859,16860,16861,16862,16863,16864,16865,16866,16867,16868,16869,16870,16871,16872,16873,16874,16884,16875,16876,16877,16878,16879,16880,16881,16882,16883,16835,16836,16837,16838,16839,16840,16841,16842,16843,16844,16845,16846,16847,16848,16849,16850,16851,16852,16854,16855]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"unknown","name":"{} | Answerable<\\"fetch\\"> | Answerable<\\"xhr\\"> | Answerable<\\"http\\"> | { readonly [x: number]: Answerable<string>; toString: {}; charAt: {}; ... 47 more ...; [Symbol.iterator]: {}; }"}}]}},{"id":16885,"name":"auth","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":16886,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":16887,"name":"username","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":16888,"name":"password","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[16887,16888]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":16889,"name":"responseType","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"text"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"arraybuffer"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"blob"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"document"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"json"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"stream"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"formdata"}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":16890,"name":"responseEncoding","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":16891,"name":"xsrfCookieName","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":16892,"name":"xsrfHeaderName","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":16893,"name":"onUploadProgress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":16894,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":16895,"name":"onDownloadProgress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":16896,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":16897,"name":"maxContentLength","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":16898,"name":"validateStatus","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":16899,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":16900,"name":"maxBodyLength","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":16901,"name":"maxRedirects","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":16902,"name":"maxRate","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"tuple","elements":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}]}]}},{"id":16903,"name":"beforeRedirect","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":16904,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":16905,"name":"socketPath","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":16906,"name":"transport","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":16907,"name":"httpAgent","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":16908,"name":"httpsAgent","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":16909,"name":"proxy","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":16910,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":16911,"name":"host","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":16912,"name":"port","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":16913,"name":"auth","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":16914,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":16915,"name":"username","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":16916,"name":"password","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[16915,16916]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":16917,"name":"protocol","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[16911,16912,16913,16917]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":16918,"name":"cancelToken","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":16919,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":16920,"name":"promise","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"Cancel"},"name":"Cancel","package":"axios"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":16921,"name":"reason","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":16922,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":16923,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[16923]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":16924,"name":"throwIfRequested","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Properties","children":[16920,16921]},{"title":"Methods","children":[16924]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":16925,"name":"decompress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":16926,"name":"transitional","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":16927,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":16928,"name":"silentJSONParsing","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":16929,"name":"forcedJSONParsing","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":16930,"name":"clarifyTimeoutError","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}}],"groups":[{"title":"Properties","children":[16928,16929,16930]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":16931,"name":"signal","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":16932,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":16933,"name":"aborted","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isReadonly":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":16934,"name":"onabort","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":16935,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":16936,"name":"addEventListener","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":16937,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":16938,"name":"removeEventListener","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":16939,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[16933,16934,16936,16938]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":16940,"name":"insecureHTTPParser","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":16941,"name":"env","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":16942,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":16943,"name":"FormData","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":16944,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[16943]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":16945,"name":"formSerializer","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":16946,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":16947,"name":"visitor","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":16948,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":16949,"name":"dots","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":16950,"name":"metaTokens","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":16951,"name":"indexes","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}}],"groups":[{"title":"Properties","children":[16947,16949,16950,16951]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":16952,"name":"family","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":4}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":6}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":16953,"name":"lookup","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":16954,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":16955,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":16956,"name":"withXSRFToken","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":16957,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":16958,"name":"fetchOptions","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":16959,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":16960,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":16961,"name":"cache","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A string indicating how the request will interact with the browser\'s cache to set request\'s cache."}]},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"default"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"reload"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"force-cache"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"no-cache"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"no-store"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"only-if-cached"}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":16962,"name":"credentials","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A string indicating whether credentials will be sent with the request always, never, or only when sent to a same-origin URL. Sets request\'s credentials."}]},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"include"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"omit"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"same-origin"}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":16963,"name":"integrity","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A cryptographic hash of the resource to be fetched by request. Sets request\'s integrity."}]},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":16964,"name":"keepalive","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A boolean to set request\'s keepalive."}]},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":16965,"name":"mode","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A string to indicate whether the request will use CORS, or will be restricted to same-origin URLs. Sets request\'s mode."}]},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"same-origin"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"cors"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"navigate"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"no-cors"}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":16966,"name":"priority","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"auto"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"high"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"low"}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":16967,"name":"redirect","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A string indicating whether request follows redirects, results in an error upon encountering a redirect, or returns the redirect (in an opaque fashion). Sets request\'s redirect."}]},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"error"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"follow"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"manual"}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":16968,"name":"referrer","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A string whose value is a same-origin URL, \\"about:client\\", or the empty string, to set request\'s referrer."}]},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":16969,"name":"referrerPolicy","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A referrer policy to set request\'s referrerPolicy."}]},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"same-origin"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":""}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"no-referrer"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"no-referrer-when-downgrade"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"origin"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"origin-when-cross-origin"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"strict-origin"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"strict-origin-when-cross-origin"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"unsafe-url"}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":16970,"name":"window","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Can only be null. Used to disassociate request from any Window."}]},"sources":[],"type":{"type":"literal","value":null}}],"groups":[{"title":"Properties","children":[16961,16962,16963,16964,16965,16966,16967,16968,16969,16970]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}}],"groups":[{"title":"Properties","children":[16264,16265,16266,16267,16268,16271,16274,16815,16816,16828,16829,16830,16831,16832,16885,16889,16890,16891,16892,16893,16895,16897,16898,16900,16901,16902,16903,16905,16906,16907,16908,16909,16918,16925,16926,16931,16940,16941,16945,16952,16953,16956,16958]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":15494,"name":"OptionsRequest","package":"@serenity-js/rest"}}]}],"groups":[{"title":"Methods","children":[15495,17685,17688,17695,17705,17682,16260]}],"sources":[{"fileName":"packages/rest/src/screenplay/models/OptionsRequest.ts","line":37,"character":13}],"extendedTypes":[{"type":"reference","target":13989,"name":"HTTPRequest","package":"@serenity-js/rest"}],"permalink":"/api/rest/class/OptionsRequest","categories":[],"previousId":11776,"nextId":17707},{"id":17707,"name":"PatchRequest","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The PATCH method requests that a set of changes described in the\\nrequest entity be applied to the resource identified by the "},{"kind":"code","text":"`resourceUri`"},{"kind":"text","text":".\\n\\n## Add new resource to a collection\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, LastResponse, PatchRequest, Send } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(CallAnApi.at(\'https://api.example.org/\'))\\n  .attemptsTo(\\n    Send.a(PatchRequest.to(\'/books/0-688-00230-7\').with({\\n      lastReadOn: \'2016-06-16\',\\n    })),\\n    Ensure.that(LastResponse.status(), equals(204)),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/PATCH\\n- https://tools.ietf.org/html/rfc5789"}]},"children":[{"id":17708,"name":"to","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/PatchRequest.ts","line":47,"character":11}],"signatures":[{"id":17709,"name":"to","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the object with a destination URI.\\n\\nWhen the "},{"kind":"code","text":"`resourceUri`"},{"kind":"text","text":" is not a fully qualified URL but a path, such as "},{"kind":"code","text":"`/products/2`"},{"kind":"text","text":",\\nit gets concatenated with the URL provided to the Axios instance\\nwhen the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/) was instantiated."}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/PatchRequest.ts","line":47,"character":11}],"parameters":[{"id":17710,"name":"resourceUri","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The URI where the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n should send the ["},{"kind":"code","text":"`HTTPRequest`"},{"kind":"text","text":"](/api/rest/class/HTTPRequest/)"}]},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":17707,"name":"PatchRequest","package":"@serenity-js/rest"}}]},{"id":19901,"name":"describedAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"signatures":[{"id":19902,"name":"describedAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Changes the description of this object, as returned by ["},{"kind":"code","text":"`Describable.describedBy`"},{"kind":"text","text":"](/api/core/class/Describable/#describedBy)\\nand ["},{"kind":"code","text":"`Describable.toString`"},{"kind":"text","text":"](/api/core/class/Describable/#toString)."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"parameters":[{"id":19903,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Replaces the current description according to the following rules:\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is an ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable), it replaces the current description\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/), the current description is passed as "},{"kind":"code","text":"`context`"},{"kind":"text","text":" to "},{"kind":"code","text":"`description.of(context)`"},{"kind":"text","text":", and the result replaces the current description"}]},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":1561,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"},{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}]}}],"type":{"type":"intrinsic","name":"this"},"inheritedFrom":{"type":"reference","target":15473,"name":"HTTPRequest.describedAs"}}],"inheritedFrom":{"type":"reference","target":15472,"name":"HTTPRequest.describedAs"}},{"id":19904,"name":"as","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"signatures":[{"id":19905,"name":"as","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Maps this question to one of a different type.\\n\\n"},{"kind":"code","text":"```ts\\nQuestion.about(\'number returned as string\', actor => \'42\')   // returns: QuestionAdapter<string>\\n  .as(Number)                                                // returns: QuestionAdapter<number>\\n```"}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"typeParameter":[{"id":19906,"name":"O","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":19907,"name":"mapping","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":19908,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"signatures":[{"id":19909,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"parameters":[{"id":19910,"name":"answer","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"}}],"type":{"type":"union","types":[{"type":"reference","target":4603,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4603,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"reference","target":4603,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":15476,"name":"HTTPRequest.as"}}],"inheritedFrom":{"type":"reference","target":15475,"name":"HTTPRequest.as"}},{"id":19911,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":19912,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":19913,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":19914,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":19915,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[19915]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":15483,"name":"HTTPRequest.describedBy"}}],"inheritedFrom":{"type":"reference","target":15482,"name":"HTTPRequest.describedBy"}},{"id":19921,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":19922,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":15493,"name":"HTTPRequest.toString"}}],"inheritedFrom":{"type":"reference","target":15492,"name":"HTTPRequest.toString"}},{"id":19898,"name":"answeredBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/HTTPRequest.ts","line":36,"character":4}],"signatures":[{"id":19899,"name":"answeredBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/HTTPRequest.ts","line":36,"character":4}],"parameters":[{"id":19900,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":15470,"name":"HTTPRequest.answeredBy"}}],"inheritedFrom":{"type":"reference","target":15469,"name":"HTTPRequest.answeredBy"}},{"id":18473,"name":"with","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/PatchRequest.ts","line":57,"character":4}],"signatures":[{"id":18474,"name":"with","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the object with a request body."}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/PatchRequest.ts","line":57,"character":4}],"parameters":[{"id":18475,"name":"data","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Data to be sent to the "},{"kind":"code","text":"`resourceUri`"}]},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"reference","target":17707,"name":"PatchRequest","package":"@serenity-js/rest"}}]},{"id":18476,"name":"using","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/PatchRequest.ts","line":73,"character":4}],"signatures":[{"id":18477,"name":"using","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Overrides the default Axios request configuration provided\\nwhen the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/) was instantiated.\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable)\\n- ["},{"kind":"code","text":"`WithAnswerableProperties`"},{"kind":"text","text":"](/api/core/#WithAnswerableProperties)\\n- [AxiosRequestConfig](https://axios-http.com/docs/req_config)"}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/PatchRequest.ts","line":73,"character":4}],"parameters":[{"id":18478,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Axios request configuration overrides"}]},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reflection","declaration":{"id":18479,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":18480,"name":"url","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":18481,"name":"method","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":18482,"name":"baseURL","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":18483,"name":"allowAbsoluteUrls","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":18484,"name":"transformRequest","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":18485,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reflection","declaration":{"id":18486,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}]}},{"id":18487,"name":"transformResponse","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":18488,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reflection","declaration":{"id":18489,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}]}},{"id":18490,"name":"headers","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":18491,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":18492,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18493,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18494,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18495,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18496,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18497,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18498,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18499,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18500,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18501,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18502,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18503,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18504,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18505,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18506,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18507,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18508,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18509,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18510,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18511,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18512,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18513,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18514,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18515,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18516,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18517,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18518,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18519,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[18492,18493,18494,18495,18496,18497,18498,18499,18500,18501,18502,18503,18504,18505,18506,18507,18508,18509,18510,18511,18512,18513,18514,18515,18516,18517,18518,18519]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":18520,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":18521,"name":"Accept","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":18522,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":18523,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18524,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18525,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18526,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18527,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18528,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18529,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18530,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18531,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18532,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18533,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18534,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18535,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18536,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18537,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18538,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18539,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18540,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18541,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18542,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18543,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18544,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18545,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18546,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18547,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18548,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18549,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18550,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[18523,18524,18525,18526,18527,18528,18529,18530,18531,18532,18533,18534,18535,18536,18537,18538,18539,18540,18541,18542,18543,18544,18545,18546,18547,18548,18549,18550]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":18551,"name":"Content-Length","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":18552,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":18553,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18554,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18555,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18556,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18557,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18558,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18559,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18560,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18561,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18562,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18563,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18564,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18565,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18566,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18567,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18568,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18569,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18570,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18571,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18572,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18573,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18574,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18575,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18576,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18577,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18578,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18579,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18580,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[18553,18554,18555,18556,18557,18558,18559,18560,18561,18562,18563,18564,18565,18566,18567,18568,18569,18570,18571,18572,18573,18574,18575,18576,18577,18578,18579,18580]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":18581,"name":"User-Agent","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":18582,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":18583,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18584,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18585,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18586,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18587,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18588,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18589,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18590,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18591,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18592,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18593,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18594,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18595,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18596,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18597,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18598,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18599,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18600,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18601,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18602,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18603,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18604,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18605,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18606,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18607,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18608,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18609,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18610,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[18583,18584,18585,18586,18587,18588,18589,18590,18591,18592,18593,18594,18595,18596,18597,18598,18599,18600,18601,18602,18603,18604,18605,18606,18607,18608,18609,18610]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":18611,"name":"Content-Encoding","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":18612,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":18613,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18614,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18615,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18616,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18617,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18618,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18619,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18620,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18621,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18622,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18623,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18624,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18625,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18626,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18627,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18628,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18629,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18630,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18631,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18632,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18633,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18634,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18635,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18636,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18637,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18638,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18639,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18640,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[18613,18614,18615,18616,18617,18618,18619,18620,18621,18622,18623,18624,18625,18626,18627,18628,18629,18630,18631,18632,18633,18634,18635,18636,18637,18638,18639,18640]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":18641,"name":"Authorization","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":18642,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":18643,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18644,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18645,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18646,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18647,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18648,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18649,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18650,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18651,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18652,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18653,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18654,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18655,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18656,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18657,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18658,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18659,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18660,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18661,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18662,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18663,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18664,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18665,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18666,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18667,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18668,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18669,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18670,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[18643,18644,18645,18646,18647,18648,18649,18650,18651,18652,18653,18654,18655,18656,18657,18658,18659,18660,18661,18662,18663,18664,18665,18666,18667,18668,18669,18670]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":18701,"name":"link","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":18702,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":18703,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18704,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18705,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18706,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18707,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18708,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18709,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18710,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18711,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18712,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18713,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18714,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18715,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18716,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18717,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18718,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18719,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18720,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18721,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18722,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18723,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18724,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18725,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18726,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18727,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18728,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18729,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18730,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[18703,18704,18705,18706,18707,18708,18709,18710,18711,18712,18713,18714,18715,18716,18717,18718,18719,18720,18721,18722,18723,18724,18725,18726,18727,18728,18729,18730]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":18731,"name":"delete","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":18732,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":18733,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18734,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18735,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18736,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18737,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18738,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18739,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18740,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18741,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18742,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18743,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18744,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18745,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18746,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18747,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18748,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18749,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18750,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18751,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18752,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18753,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18754,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18755,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18756,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18757,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18758,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18759,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18760,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[18733,18734,18735,18736,18737,18738,18739,18740,18741,18742,18743,18744,18745,18746,18747,18748,18749,18750,18751,18752,18753,18754,18755,18756,18757,18758,18759,18760]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":18761,"name":"get","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":18762,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":18763,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18764,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18765,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18766,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18767,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18768,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18769,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18770,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18771,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18772,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18773,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18774,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18775,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18776,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18777,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18778,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18779,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18780,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18781,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18782,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18783,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18784,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18785,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18786,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18787,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18788,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18789,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18790,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[18763,18764,18765,18766,18767,18768,18769,18770,18771,18772,18773,18774,18775,18776,18777,18778,18779,18780,18781,18782,18783,18784,18785,18786,18787,18788,18789,18790]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":18791,"name":"head","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":18792,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":18793,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18794,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18795,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18796,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18797,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18798,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18799,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18800,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18801,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18802,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18803,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18804,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18805,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18806,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18807,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18808,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18809,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18810,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18811,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18812,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18813,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18814,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18815,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18816,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18817,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18818,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18819,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18820,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[18793,18794,18795,18796,18797,18798,18799,18800,18801,18802,18803,18804,18805,18806,18807,18808,18809,18810,18811,18812,18813,18814,18815,18816,18817,18818,18819,18820]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":18821,"name":"options","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":18822,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":18823,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18824,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18825,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18826,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18827,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18828,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18829,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18830,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18831,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18832,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18833,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18834,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18835,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18836,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18837,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18838,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18839,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18840,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18841,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18842,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18843,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18844,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18845,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18846,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18847,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18848,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18849,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18850,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[18823,18824,18825,18826,18827,18828,18829,18830,18831,18832,18833,18834,18835,18836,18837,18838,18839,18840,18841,18842,18843,18844,18845,18846,18847,18848,18849,18850]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":18851,"name":"post","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":18852,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":18853,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18854,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18855,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18856,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18857,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18858,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18859,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18860,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18861,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18862,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18863,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18864,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18865,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18866,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18867,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18868,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18869,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18870,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18871,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18872,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18873,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18874,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18875,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18876,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18877,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18878,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18879,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18880,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[18853,18854,18855,18856,18857,18858,18859,18860,18861,18862,18863,18864,18865,18866,18867,18868,18869,18870,18871,18872,18873,18874,18875,18876,18877,18878,18879,18880]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":18881,"name":"put","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":18882,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":18883,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18884,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18885,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18886,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18887,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18888,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18889,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18890,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18891,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18892,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18893,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18894,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18895,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18896,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18897,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18898,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18899,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18900,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18901,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18902,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18903,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18904,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18905,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18906,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18907,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18908,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18909,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18910,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[18883,18884,18885,18886,18887,18888,18889,18890,18891,18892,18893,18894,18895,18896,18897,18898,18899,18900,18901,18902,18903,18904,18905,18906,18907,18908,18909,18910]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":18911,"name":"patch","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":18912,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":18913,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18914,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18915,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18916,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18917,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18918,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18919,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18920,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18921,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18922,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18923,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18924,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18925,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18926,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18927,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18928,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18929,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18930,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18931,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18932,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18933,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18934,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18935,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18936,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18937,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18938,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18939,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18940,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[18913,18914,18915,18916,18917,18918,18919,18920,18921,18922,18923,18924,18925,18926,18927,18928,18929,18930,18931,18932,18933,18934,18935,18936,18937,18938,18939,18940]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":18941,"name":"purge","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":18942,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":18943,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18944,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18945,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18946,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18947,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18948,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18949,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18950,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18951,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18952,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18953,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18954,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18955,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18956,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18957,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18958,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18959,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18960,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18961,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18962,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18963,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18964,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18965,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18966,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18967,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18968,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18969,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18970,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[18943,18944,18945,18946,18947,18948,18949,18950,18951,18952,18953,18954,18955,18956,18957,18958,18959,18960,18961,18962,18963,18964,18965,18966,18967,18968,18969,18970]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":18971,"name":"unlink","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":18972,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":18973,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18974,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18975,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18976,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18977,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18978,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18979,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18980,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18981,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18982,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18983,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18984,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18985,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18986,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18987,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18988,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18989,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18990,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18991,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18992,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18993,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18994,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18995,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18996,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18997,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18998,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18999,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19000,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[18973,18974,18975,18976,18977,18978,18979,18980,18981,18982,18983,18984,18985,18986,18987,18988,18989,18990,18991,18992,18993,18994,18995,18996,18997,18998,18999,19000]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19001,"name":"common","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":19002,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":19003,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19004,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19005,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19006,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19007,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19008,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19009,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19010,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19011,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19012,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19013,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19014,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19015,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19016,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19017,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19018,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19019,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19020,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19021,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19022,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19023,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19024,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19025,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19026,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19027,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19028,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19029,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19030,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[19003,19004,19005,19006,19007,19008,19009,19010,19011,19012,19013,19014,19015,19016,19017,19018,19019,19020,19021,19022,19023,19024,19025,19026,19027,19028,19029,19030]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":18671,"name":"Content-Type","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":18672,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":18673,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18674,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18675,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18676,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18677,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18678,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18679,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18680,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18681,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18682,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18683,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18684,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18685,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18686,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18687,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18688,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18689,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18690,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18691,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18692,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18693,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18694,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18695,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18696,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18697,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18698,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18699,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18700,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[18673,18674,18675,18676,18677,18678,18679,18680,18681,18682,18683,18684,18685,18686,18687,18688,18689,18690,18691,18692,18693,18694,18695,18696,18697,18698,18699,18700]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}}],"groups":[{"title":"Properties","children":[18521,18551,18581,18611,18641,18701,18731,18761,18791,18821,18851,18881,18911,18941,18971,19001,18671]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":19031,"name":"params","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":19032,"name":"paramsSerializer","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":19033,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":19038,"name":"visitor","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":19039,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19040,"name":"dots","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":19041,"name":"metaTokens","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":19042,"name":"indexes","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":19034,"name":"encode","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":19035,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19036,"name":"serialize","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":19037,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[19038,19040,19041,19042,19034,19036]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":19043,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":19044,"name":"data","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":19045,"name":"timeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":19046,"name":"timeoutErrorMessage","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":19047,"name":"withCredentials","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":19048,"name":"adapter","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":19049,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"fetch"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"xhr"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"http"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":19050,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":19072,"name":"codePointAt","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19073,"name":"includes","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19074,"name":"endsWith","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19075,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19076,"name":"repeat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19077,"name":"startsWith","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19078,"name":"anchor","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19079,"name":"big","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19080,"name":"blink","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19081,"name":"bold","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19082,"name":"fixed","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19083,"name":"fontcolor","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19084,"name":"fontsize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19085,"name":"italics","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19086,"name":"link","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19087,"name":"small","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19088,"name":"strike","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19089,"name":"sub","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19090,"name":"sup","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19100,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19091,"name":"padStart","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19092,"name":"padEnd","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19093,"name":"trimEnd","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19094,"name":"trimStart","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19095,"name":"trimLeft","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19096,"name":"trimRight","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19097,"name":"matchAll","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19098,"name":"replaceAll","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19099,"name":"at","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19051,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19052,"name":"charAt","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19053,"name":"charCodeAt","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19054,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19055,"name":"indexOf","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19056,"name":"lastIndexOf","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19057,"name":"localeCompare","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19058,"name":"match","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19059,"name":"replace","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19060,"name":"search","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19061,"name":"slice","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19062,"name":"split","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19063,"name":"substring","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19064,"name":"toLowerCase","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19065,"name":"toLocaleLowerCase","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19066,"name":"toUpperCase","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19067,"name":"toLocaleUpperCase","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19068,"name":"trim","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19069,"name":"length","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Returns the length of a String object."}]},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":19070,"name":"substr","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19071,"name":"valueOf","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Properties","children":[19069]},{"title":"Methods","children":[19072,19073,19074,19075,19076,19077,19078,19079,19080,19081,19082,19083,19084,19085,19086,19087,19088,19089,19090,19100,19091,19092,19093,19094,19095,19096,19097,19098,19099,19051,19052,19053,19054,19055,19056,19057,19058,19059,19060,19061,19062,19063,19064,19065,19066,19067,19068,19070,19071]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"unknown","name":"{} | Answerable<\\"fetch\\"> | Answerable<\\"xhr\\"> | Answerable<\\"http\\"> | { readonly [x: number]: Answerable<string>; toString: {}; charAt: {}; ... 47 more ...; [Symbol.iterator]: {}; }"}}]}},{"id":19101,"name":"auth","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":19102,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":19103,"name":"username","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":19104,"name":"password","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[19103,19104]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19105,"name":"responseType","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"text"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"arraybuffer"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"blob"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"document"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"json"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"stream"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"formdata"}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":19106,"name":"responseEncoding","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":19107,"name":"xsrfCookieName","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":19108,"name":"xsrfHeaderName","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":19109,"name":"onUploadProgress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":19110,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19111,"name":"onDownloadProgress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":19112,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19113,"name":"maxContentLength","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":19114,"name":"validateStatus","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":19115,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19116,"name":"maxBodyLength","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":19117,"name":"maxRedirects","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":19118,"name":"maxRate","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"tuple","elements":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}]}]}},{"id":19119,"name":"beforeRedirect","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":19120,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19121,"name":"socketPath","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":19122,"name":"transport","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":19123,"name":"httpAgent","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":19124,"name":"httpsAgent","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":19125,"name":"proxy","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":19126,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":19127,"name":"host","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":19128,"name":"port","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":19129,"name":"auth","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":19130,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":19131,"name":"username","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":19132,"name":"password","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[19131,19132]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19133,"name":"protocol","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[19127,19128,19129,19133]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":19134,"name":"cancelToken","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":19135,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":19136,"name":"promise","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"Cancel"},"name":"Cancel","package":"axios"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":19137,"name":"reason","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":19138,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":19139,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[19139]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19140,"name":"throwIfRequested","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Properties","children":[19136,19137]},{"title":"Methods","children":[19140]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19141,"name":"decompress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":19142,"name":"transitional","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":19143,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":19144,"name":"silentJSONParsing","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":19145,"name":"forcedJSONParsing","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":19146,"name":"clarifyTimeoutError","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}}],"groups":[{"title":"Properties","children":[19144,19145,19146]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19147,"name":"signal","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":19148,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":19149,"name":"aborted","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isReadonly":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":19150,"name":"onabort","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":19151,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19152,"name":"addEventListener","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":19153,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19154,"name":"removeEventListener","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":19155,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[19149,19150,19152,19154]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19156,"name":"insecureHTTPParser","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":19157,"name":"env","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":19158,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":19159,"name":"FormData","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":19160,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[19159]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19161,"name":"formSerializer","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":19162,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":19163,"name":"visitor","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":19164,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19165,"name":"dots","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":19166,"name":"metaTokens","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":19167,"name":"indexes","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}}],"groups":[{"title":"Properties","children":[19163,19165,19166,19167]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19168,"name":"family","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":4}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":6}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":19169,"name":"lookup","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":19170,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":19171,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":19172,"name":"withXSRFToken","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":19173,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":19174,"name":"fetchOptions","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":19175,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":19176,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":19177,"name":"cache","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A string indicating how the request will interact with the browser\'s cache to set request\'s cache."}]},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"default"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"reload"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"force-cache"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"no-cache"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"no-store"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"only-if-cached"}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":19178,"name":"credentials","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A string indicating whether credentials will be sent with the request always, never, or only when sent to a same-origin URL. Sets request\'s credentials."}]},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"include"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"omit"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"same-origin"}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":19179,"name":"integrity","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A cryptographic hash of the resource to be fetched by request. Sets request\'s integrity."}]},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":19180,"name":"keepalive","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A boolean to set request\'s keepalive."}]},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":19181,"name":"mode","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A string to indicate whether the request will use CORS, or will be restricted to same-origin URLs. Sets request\'s mode."}]},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"same-origin"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"cors"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"navigate"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"no-cors"}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":19182,"name":"priority","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"auto"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"high"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"low"}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":19183,"name":"redirect","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A string indicating whether request follows redirects, results in an error upon encountering a redirect, or returns the redirect (in an opaque fashion). Sets request\'s redirect."}]},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"error"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"follow"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"manual"}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":19184,"name":"referrer","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A string whose value is a same-origin URL, \\"about:client\\", or the empty string, to set request\'s referrer."}]},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":19185,"name":"referrerPolicy","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A referrer policy to set request\'s referrerPolicy."}]},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"same-origin"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":""}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"no-referrer"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"no-referrer-when-downgrade"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"origin"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"origin-when-cross-origin"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"strict-origin"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"strict-origin-when-cross-origin"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"unsafe-url"}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":19186,"name":"window","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Can only be null. Used to disassociate request from any Window."}]},"sources":[],"type":{"type":"literal","value":null}}],"groups":[{"title":"Properties","children":[19177,19178,19179,19180,19181,19182,19183,19184,19185,19186]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}}],"groups":[{"title":"Properties","children":[18480,18481,18482,18483,18484,18487,18490,19031,19032,19044,19045,19046,19047,19048,19101,19105,19106,19107,19108,19109,19111,19113,19114,19116,19117,19118,19119,19121,19122,19123,19124,19125,19134,19141,19142,19147,19156,19157,19161,19168,19169,19172,19174]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":17707,"name":"PatchRequest","package":"@serenity-js/rest"}}]}],"groups":[{"title":"Methods","children":[17708,19901,19904,19911,19921,19898,18473,18476]}],"sources":[{"fileName":"packages/rest/src/screenplay/models/PatchRequest.ts","line":34,"character":13}],"extendedTypes":[{"type":"reference","target":13989,"name":"HTTPRequest","package":"@serenity-js/rest"}],"permalink":"/api/rest/class/PatchRequest","categories":[],"previousId":15494,"nextId":19923},{"id":19923,"name":"PostRequest","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The HTTP POST method requests that the origin server accepts\\nthe entity enclosed in the request as a new subordinate of the resource\\nidentified by the "},{"kind":"code","text":"`resourceUri`"},{"kind":"text","text":".\\n\\nThis means that the POST should be used when you want to create a child resource under\\na collection of resources.\\n\\nPOST request is neither [safe](https://developer.mozilla.org/en-US/docs/Glossary/Safe),\\nnor [idempotent](https://developer.mozilla.org/en-US/docs/Glossary/Idempotent).\\nThis means that if you retry a POST request N times,\\na correctly implemented HTTP REST API will create N resources with N different URIs.\\n\\n## Add new resource to a collection\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, LastResponse, PostRequest, Send } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(CallAnApi.at(\'https://api.example.org/\'))\\n  .attemptsTo(\\n    Send.a(PostRequest.to(\'/books\').with({\\n      isbn: \'0-688-00230-7\',\\n      title: \'Zen and the Art of Motorcycle Maintenance: An Inquiry into Values\',\\n      author: \'Robert M. Pirsig\',\\n    })),\\n    Ensure.that(LastResponse.status(), equals(201)),\\n    Ensure.that(LastResponse.header(\'Location\'), equals(\'/books/0-688-00230-7\')),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Submit an HTML form\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, LastResponse, PostRequest, Send } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { stringify } from \'querystring\'\\n\\nconst formData = stringify({\\n    name: actor.name,\\n    email: `${ actor.name }@example.com`,\\n    text: \'Your website is great! Learnt a lot :-)\'\\n});\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(CallAnApi.at(\'https://api.example.org/\'))\\n  .attemptsTo(\\n    Send.a(PostRequest.to(\'/feedback\').with(formData).using({\\n      headers: {\\n        \'Content-Type\': \'application/x-www-form-urlencoded\',\\n        \'Content-Length\': formData.length\\n      }\\n    })),\\n    Ensure.that(LastResponse.status(), equals(200)),\\n    Ensure.that(LastResponse.header(\'Location\'), equals(\'/feedback/thank-you.html\')),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/POST\\n- https://tools.ietf.org/html/rfc7231#section-4.3.3"}]},"children":[{"id":19924,"name":"to","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/PostRequest.ts","line":87,"character":11}],"signatures":[{"id":19925,"name":"to","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the object with a destination URI.\\n\\nWhen the "},{"kind":"code","text":"`resourceUri`"},{"kind":"text","text":" is not a fully qualified URL but a path, such as "},{"kind":"code","text":"`/products/2`"},{"kind":"text","text":",\\nit gets concatenated with the URL provided to the Axios instance\\nwhen the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/) was instantiated."}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/PostRequest.ts","line":87,"character":11}],"parameters":[{"id":19926,"name":"resourceUri","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The URI where the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n should send the ["},{"kind":"code","text":"`HTTPRequest`"},{"kind":"text","text":"](/api/rest/class/HTTPRequest/)"}]},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":19923,"name":"PostRequest","package":"@serenity-js/rest"}}]},{"id":22117,"name":"describedAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"signatures":[{"id":22118,"name":"describedAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Changes the description of this object, as returned by ["},{"kind":"code","text":"`Describable.describedBy`"},{"kind":"text","text":"](/api/core/class/Describable/#describedBy)\\nand ["},{"kind":"code","text":"`Describable.toString`"},{"kind":"text","text":"](/api/core/class/Describable/#toString)."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"parameters":[{"id":22119,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Replaces the current description according to the following rules:\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is an ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable), it replaces the current description\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/), the current description is passed as "},{"kind":"code","text":"`context`"},{"kind":"text","text":" to "},{"kind":"code","text":"`description.of(context)`"},{"kind":"text","text":", and the result replaces the current description"}]},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":1561,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"},{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}]}}],"type":{"type":"intrinsic","name":"this"},"inheritedFrom":{"type":"reference","target":15473,"name":"HTTPRequest.describedAs"}}],"inheritedFrom":{"type":"reference","target":15472,"name":"HTTPRequest.describedAs"}},{"id":22120,"name":"as","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"signatures":[{"id":22121,"name":"as","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Maps this question to one of a different type.\\n\\n"},{"kind":"code","text":"```ts\\nQuestion.about(\'number returned as string\', actor => \'42\')   // returns: QuestionAdapter<string>\\n  .as(Number)                                                // returns: QuestionAdapter<number>\\n```"}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"typeParameter":[{"id":22122,"name":"O","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":22123,"name":"mapping","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":22124,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"signatures":[{"id":22125,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"parameters":[{"id":22126,"name":"answer","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"}}],"type":{"type":"union","types":[{"type":"reference","target":4603,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4603,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"reference","target":4603,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":15476,"name":"HTTPRequest.as"}}],"inheritedFrom":{"type":"reference","target":15475,"name":"HTTPRequest.as"}},{"id":22127,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":22128,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":22129,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":22130,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":22131,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[22131]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":15483,"name":"HTTPRequest.describedBy"}}],"inheritedFrom":{"type":"reference","target":15482,"name":"HTTPRequest.describedBy"}},{"id":22137,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":22138,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":15493,"name":"HTTPRequest.toString"}}],"inheritedFrom":{"type":"reference","target":15492,"name":"HTTPRequest.toString"}},{"id":22114,"name":"answeredBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/HTTPRequest.ts","line":36,"character":4}],"signatures":[{"id":22115,"name":"answeredBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/HTTPRequest.ts","line":36,"character":4}],"parameters":[{"id":22116,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":15470,"name":"HTTPRequest.answeredBy"}}],"inheritedFrom":{"type":"reference","target":15469,"name":"HTTPRequest.answeredBy"}},{"id":20689,"name":"with","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/PostRequest.ts","line":97,"character":4}],"signatures":[{"id":20690,"name":"with","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the object with a request body."}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/PostRequest.ts","line":97,"character":4}],"parameters":[{"id":20691,"name":"data","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Data to be sent to the "},{"kind":"code","text":"`resourceUri`"}]},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"reference","target":19923,"name":"PostRequest","package":"@serenity-js/rest"}}]},{"id":20692,"name":"using","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/PostRequest.ts","line":113,"character":4}],"signatures":[{"id":20693,"name":"using","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Overrides the default Axios request configuration provided\\nwhen the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/) was instantiated.\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable)\\n- ["},{"kind":"code","text":"`WithAnswerableProperties`"},{"kind":"text","text":"](/api/core/#WithAnswerableProperties)\\n- [AxiosRequestConfig](https://axios-http.com/docs/req_config)"}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/PostRequest.ts","line":113,"character":4}],"parameters":[{"id":20694,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Axios request configuration overrides"}]},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reflection","declaration":{"id":20695,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":20696,"name":"url","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":20697,"name":"method","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":20698,"name":"baseURL","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":20699,"name":"allowAbsoluteUrls","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":20700,"name":"transformRequest","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":20701,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reflection","declaration":{"id":20702,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}]}},{"id":20703,"name":"transformResponse","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":20704,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reflection","declaration":{"id":20705,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}]}},{"id":20706,"name":"headers","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":20707,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":20708,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20709,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20710,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20711,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20712,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20713,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20714,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20715,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20716,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20717,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20718,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20719,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20720,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20721,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20722,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20723,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20724,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20725,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20726,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20727,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20728,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20729,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20730,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20731,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20732,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20733,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20734,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20735,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[20708,20709,20710,20711,20712,20713,20714,20715,20716,20717,20718,20719,20720,20721,20722,20723,20724,20725,20726,20727,20728,20729,20730,20731,20732,20733,20734,20735]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":20736,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":20737,"name":"Accept","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":20738,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":20739,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20740,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20741,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20742,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20743,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20744,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20745,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20746,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20747,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20748,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20749,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20750,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20751,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20752,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20753,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20754,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20755,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20756,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20757,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20758,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20759,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20760,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20761,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20762,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20763,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20764,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20765,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20766,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[20739,20740,20741,20742,20743,20744,20745,20746,20747,20748,20749,20750,20751,20752,20753,20754,20755,20756,20757,20758,20759,20760,20761,20762,20763,20764,20765,20766]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":20767,"name":"Content-Length","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":20768,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":20769,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20770,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20771,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20772,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20773,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20774,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20775,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20776,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20777,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20778,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20779,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20780,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20781,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20782,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20783,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20784,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20785,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20786,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20787,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20788,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20789,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20790,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20791,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20792,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20793,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20794,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20795,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20796,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[20769,20770,20771,20772,20773,20774,20775,20776,20777,20778,20779,20780,20781,20782,20783,20784,20785,20786,20787,20788,20789,20790,20791,20792,20793,20794,20795,20796]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":20797,"name":"User-Agent","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":20798,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":20799,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20800,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20801,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20802,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20803,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20804,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20805,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20806,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20807,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20808,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20809,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20810,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20811,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20812,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20813,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20814,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20815,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20816,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20817,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20818,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20819,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20820,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20821,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20822,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20823,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20824,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20825,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20826,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[20799,20800,20801,20802,20803,20804,20805,20806,20807,20808,20809,20810,20811,20812,20813,20814,20815,20816,20817,20818,20819,20820,20821,20822,20823,20824,20825,20826]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":20827,"name":"Content-Encoding","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":20828,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":20829,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20830,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20831,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20832,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20833,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20834,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20835,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20836,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20837,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20838,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20839,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20840,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20841,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20842,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20843,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20844,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20845,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20846,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20847,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20848,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20849,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20850,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20851,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20852,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20853,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20854,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20855,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20856,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[20829,20830,20831,20832,20833,20834,20835,20836,20837,20838,20839,20840,20841,20842,20843,20844,20845,20846,20847,20848,20849,20850,20851,20852,20853,20854,20855,20856]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":20857,"name":"Authorization","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":20858,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":20859,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20860,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20861,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20862,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20863,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20864,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20865,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20866,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20867,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20868,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20869,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20870,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20871,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20872,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20873,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20874,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20875,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20876,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20877,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20878,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20879,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20880,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20881,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20882,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20883,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20884,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20885,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20886,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[20859,20860,20861,20862,20863,20864,20865,20866,20867,20868,20869,20870,20871,20872,20873,20874,20875,20876,20877,20878,20879,20880,20881,20882,20883,20884,20885,20886]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":20917,"name":"link","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":20918,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":20919,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20920,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20921,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20922,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20923,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20924,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20925,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20926,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20927,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20928,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20929,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20930,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20931,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20932,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20933,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20934,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20935,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20936,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20937,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20938,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20939,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20940,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20941,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20942,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20943,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20944,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20945,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20946,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[20919,20920,20921,20922,20923,20924,20925,20926,20927,20928,20929,20930,20931,20932,20933,20934,20935,20936,20937,20938,20939,20940,20941,20942,20943,20944,20945,20946]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":20947,"name":"delete","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":20948,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":20949,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20950,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20951,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20952,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20953,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20954,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20955,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20956,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20957,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20958,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20959,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20960,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20961,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20962,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20963,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20964,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20965,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20966,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20967,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20968,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20969,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20970,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20971,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20972,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20973,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20974,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20975,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20976,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[20949,20950,20951,20952,20953,20954,20955,20956,20957,20958,20959,20960,20961,20962,20963,20964,20965,20966,20967,20968,20969,20970,20971,20972,20973,20974,20975,20976]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":20977,"name":"get","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":20978,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":20979,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20980,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20981,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20982,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20983,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20984,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20985,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20986,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20987,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20988,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20989,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20990,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20991,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20992,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20993,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20994,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20995,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20996,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20997,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20998,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20999,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21000,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21001,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21002,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21003,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21004,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21005,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21006,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[20979,20980,20981,20982,20983,20984,20985,20986,20987,20988,20989,20990,20991,20992,20993,20994,20995,20996,20997,20998,20999,21000,21001,21002,21003,21004,21005,21006]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21007,"name":"head","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":21008,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21009,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21010,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21011,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21012,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21013,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21014,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21015,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21016,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21017,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21018,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21019,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21020,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21021,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21022,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21023,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21024,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21025,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21026,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21027,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21028,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21029,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21030,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21031,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21032,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21033,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21034,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21035,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21036,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[21009,21010,21011,21012,21013,21014,21015,21016,21017,21018,21019,21020,21021,21022,21023,21024,21025,21026,21027,21028,21029,21030,21031,21032,21033,21034,21035,21036]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21037,"name":"options","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":21038,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21039,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21040,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21041,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21042,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21043,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21044,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21045,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21046,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21047,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21048,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21049,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21050,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21051,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21052,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21053,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21054,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21055,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21056,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21057,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21058,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21059,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21060,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21061,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21062,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21063,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21064,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21065,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21066,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[21039,21040,21041,21042,21043,21044,21045,21046,21047,21048,21049,21050,21051,21052,21053,21054,21055,21056,21057,21058,21059,21060,21061,21062,21063,21064,21065,21066]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21067,"name":"post","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":21068,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21069,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21070,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21071,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21072,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21073,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21074,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21075,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21076,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21077,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21078,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21079,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21080,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21081,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21082,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21083,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21084,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21085,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21086,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21087,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21088,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21089,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21090,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21091,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21092,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21093,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21094,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21095,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21096,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[21069,21070,21071,21072,21073,21074,21075,21076,21077,21078,21079,21080,21081,21082,21083,21084,21085,21086,21087,21088,21089,21090,21091,21092,21093,21094,21095,21096]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21097,"name":"put","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":21098,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21099,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21100,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21101,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21102,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21103,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21104,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21105,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21106,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21107,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21108,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21109,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21110,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21111,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21112,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21113,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21114,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21115,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21116,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21117,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21118,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21119,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21120,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21121,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21122,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21123,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21124,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21125,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21126,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[21099,21100,21101,21102,21103,21104,21105,21106,21107,21108,21109,21110,21111,21112,21113,21114,21115,21116,21117,21118,21119,21120,21121,21122,21123,21124,21125,21126]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21127,"name":"patch","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":21128,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21129,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21130,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21131,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21132,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21133,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21134,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21135,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21136,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21137,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21138,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21139,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21140,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21141,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21142,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21143,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21144,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21145,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21146,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21147,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21148,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21149,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21150,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21151,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21152,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21153,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21154,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21155,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21156,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[21129,21130,21131,21132,21133,21134,21135,21136,21137,21138,21139,21140,21141,21142,21143,21144,21145,21146,21147,21148,21149,21150,21151,21152,21153,21154,21155,21156]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21157,"name":"purge","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":21158,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21159,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21160,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21161,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21162,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21163,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21164,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21165,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21166,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21167,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21168,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21169,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21170,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21171,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21172,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21173,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21174,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21175,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21176,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21177,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21178,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21179,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21180,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21181,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21182,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21183,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21184,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21185,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21186,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[21159,21160,21161,21162,21163,21164,21165,21166,21167,21168,21169,21170,21171,21172,21173,21174,21175,21176,21177,21178,21179,21180,21181,21182,21183,21184,21185,21186]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21187,"name":"unlink","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":21188,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21189,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21190,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21191,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21192,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21193,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21194,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21195,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21196,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21197,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21198,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21199,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21200,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21201,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21202,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21203,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21204,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21205,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21206,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21207,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21208,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21209,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21210,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21211,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21212,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21213,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21214,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21215,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21216,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[21189,21190,21191,21192,21193,21194,21195,21196,21197,21198,21199,21200,21201,21202,21203,21204,21205,21206,21207,21208,21209,21210,21211,21212,21213,21214,21215,21216]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21217,"name":"common","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":21218,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21219,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21220,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21221,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21222,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21223,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21224,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21225,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21226,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21227,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21228,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21229,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21230,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21231,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21232,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21233,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21234,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21235,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21236,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21237,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21238,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21239,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21240,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21241,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21242,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21243,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21244,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21245,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21246,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[21219,21220,21221,21222,21223,21224,21225,21226,21227,21228,21229,21230,21231,21232,21233,21234,21235,21236,21237,21238,21239,21240,21241,21242,21243,21244,21245,21246]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":20887,"name":"Content-Type","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":20888,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":20889,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20890,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20891,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20892,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20893,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20894,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20895,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20896,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20897,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20898,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20899,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20900,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20901,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20902,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20903,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20904,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20905,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20906,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20907,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20908,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20909,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20910,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20911,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20912,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20913,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20914,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20915,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20916,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[20889,20890,20891,20892,20893,20894,20895,20896,20897,20898,20899,20900,20901,20902,20903,20904,20905,20906,20907,20908,20909,20910,20911,20912,20913,20914,20915,20916]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}}],"groups":[{"title":"Properties","children":[20737,20767,20797,20827,20857,20917,20947,20977,21007,21037,21067,21097,21127,21157,21187,21217,20887]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":21247,"name":"params","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":21248,"name":"paramsSerializer","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":21249,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21254,"name":"visitor","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":21255,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21256,"name":"dots","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":21257,"name":"metaTokens","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":21258,"name":"indexes","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":21250,"name":"encode","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":21251,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21252,"name":"serialize","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":21253,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[21254,21256,21257,21258,21250,21252]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":21259,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":21260,"name":"data","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":21261,"name":"timeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":21262,"name":"timeoutErrorMessage","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":21263,"name":"withCredentials","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":21264,"name":"adapter","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":21265,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"fetch"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"xhr"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"http"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":21266,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21288,"name":"codePointAt","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21289,"name":"includes","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21290,"name":"endsWith","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21291,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21292,"name":"repeat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21293,"name":"startsWith","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21294,"name":"anchor","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21295,"name":"big","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21296,"name":"blink","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21297,"name":"bold","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21298,"name":"fixed","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21299,"name":"fontcolor","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21300,"name":"fontsize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21301,"name":"italics","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21302,"name":"link","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21303,"name":"small","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21304,"name":"strike","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21305,"name":"sub","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21306,"name":"sup","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21316,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21307,"name":"padStart","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21308,"name":"padEnd","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21309,"name":"trimEnd","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21310,"name":"trimStart","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21311,"name":"trimLeft","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21312,"name":"trimRight","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21313,"name":"matchAll","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21314,"name":"replaceAll","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21315,"name":"at","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21267,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21268,"name":"charAt","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21269,"name":"charCodeAt","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21270,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21271,"name":"indexOf","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21272,"name":"lastIndexOf","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21273,"name":"localeCompare","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21274,"name":"match","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21275,"name":"replace","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21276,"name":"search","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21277,"name":"slice","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21278,"name":"split","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21279,"name":"substring","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21280,"name":"toLowerCase","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21281,"name":"toLocaleLowerCase","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21282,"name":"toUpperCase","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21283,"name":"toLocaleUpperCase","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21284,"name":"trim","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21285,"name":"length","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Returns the length of a String object."}]},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":21286,"name":"substr","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21287,"name":"valueOf","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Properties","children":[21285]},{"title":"Methods","children":[21288,21289,21290,21291,21292,21293,21294,21295,21296,21297,21298,21299,21300,21301,21302,21303,21304,21305,21306,21316,21307,21308,21309,21310,21311,21312,21313,21314,21315,21267,21268,21269,21270,21271,21272,21273,21274,21275,21276,21277,21278,21279,21280,21281,21282,21283,21284,21286,21287]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"unknown","name":"{} | Answerable<\\"fetch\\"> | Answerable<\\"xhr\\"> | Answerable<\\"http\\"> | { readonly [x: number]: Answerable<string>; toString: {}; charAt: {}; ... 47 more ...; [Symbol.iterator]: {}; }"}}]}},{"id":21317,"name":"auth","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":21318,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21319,"name":"username","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":21320,"name":"password","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[21319,21320]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21321,"name":"responseType","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"text"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"arraybuffer"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"blob"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"document"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"json"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"stream"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"formdata"}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":21322,"name":"responseEncoding","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":21323,"name":"xsrfCookieName","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":21324,"name":"xsrfHeaderName","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":21325,"name":"onUploadProgress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":21326,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21327,"name":"onDownloadProgress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":21328,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21329,"name":"maxContentLength","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":21330,"name":"validateStatus","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":21331,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21332,"name":"maxBodyLength","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":21333,"name":"maxRedirects","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":21334,"name":"maxRate","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"tuple","elements":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}]}]}},{"id":21335,"name":"beforeRedirect","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":21336,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21337,"name":"socketPath","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":21338,"name":"transport","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":21339,"name":"httpAgent","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":21340,"name":"httpsAgent","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":21341,"name":"proxy","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":21342,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21343,"name":"host","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":21344,"name":"port","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":21345,"name":"auth","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":21346,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21347,"name":"username","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":21348,"name":"password","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[21347,21348]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21349,"name":"protocol","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[21343,21344,21345,21349]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":21350,"name":"cancelToken","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":21351,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21352,"name":"promise","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"Cancel"},"name":"Cancel","package":"axios"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":21353,"name":"reason","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":21354,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21355,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[21355]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21356,"name":"throwIfRequested","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Properties","children":[21352,21353]},{"title":"Methods","children":[21356]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21357,"name":"decompress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":21358,"name":"transitional","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":21359,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21360,"name":"silentJSONParsing","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":21361,"name":"forcedJSONParsing","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":21362,"name":"clarifyTimeoutError","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}}],"groups":[{"title":"Properties","children":[21360,21361,21362]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21363,"name":"signal","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":21364,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21365,"name":"aborted","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isReadonly":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":21366,"name":"onabort","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":21367,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21368,"name":"addEventListener","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":21369,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21370,"name":"removeEventListener","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":21371,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[21365,21366,21368,21370]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21372,"name":"insecureHTTPParser","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":21373,"name":"env","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":21374,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21375,"name":"FormData","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":21376,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[21375]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21377,"name":"formSerializer","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":21378,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21379,"name":"visitor","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":21380,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21381,"name":"dots","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":21382,"name":"metaTokens","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":21383,"name":"indexes","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}}],"groups":[{"title":"Properties","children":[21379,21381,21382,21383]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21384,"name":"family","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":4}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":6}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":21385,"name":"lookup","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":21386,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":21387,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":21388,"name":"withXSRFToken","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":21389,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":21390,"name":"fetchOptions","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":21391,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":21392,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21393,"name":"cache","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A string indicating how the request will interact with the browser\'s cache to set request\'s cache."}]},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"default"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"reload"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"force-cache"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"no-cache"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"no-store"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"only-if-cached"}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":21394,"name":"credentials","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A string indicating whether credentials will be sent with the request always, never, or only when sent to a same-origin URL. Sets request\'s credentials."}]},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"include"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"omit"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"same-origin"}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":21395,"name":"integrity","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A cryptographic hash of the resource to be fetched by request. Sets request\'s integrity."}]},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":21396,"name":"keepalive","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A boolean to set request\'s keepalive."}]},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":21397,"name":"mode","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A string to indicate whether the request will use CORS, or will be restricted to same-origin URLs. Sets request\'s mode."}]},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"same-origin"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"cors"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"navigate"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"no-cors"}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":21398,"name":"priority","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"auto"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"high"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"low"}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":21399,"name":"redirect","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A string indicating whether request follows redirects, results in an error upon encountering a redirect, or returns the redirect (in an opaque fashion). Sets request\'s redirect."}]},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"error"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"follow"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"manual"}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":21400,"name":"referrer","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A string whose value is a same-origin URL, \\"about:client\\", or the empty string, to set request\'s referrer."}]},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":21401,"name":"referrerPolicy","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A referrer policy to set request\'s referrerPolicy."}]},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"same-origin"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":""}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"no-referrer"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"no-referrer-when-downgrade"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"origin"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"origin-when-cross-origin"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"strict-origin"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"strict-origin-when-cross-origin"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"unsafe-url"}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":21402,"name":"window","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Can only be null. Used to disassociate request from any Window."}]},"sources":[],"type":{"type":"literal","value":null}}],"groups":[{"title":"Properties","children":[21393,21394,21395,21396,21397,21398,21399,21400,21401,21402]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}}],"groups":[{"title":"Properties","children":[20696,20697,20698,20699,20700,20703,20706,21247,21248,21260,21261,21262,21263,21264,21317,21321,21322,21323,21324,21325,21327,21329,21330,21332,21333,21334,21335,21337,21338,21339,21340,21341,21350,21357,21358,21363,21372,21373,21377,21384,21385,21388,21390]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":19923,"name":"PostRequest","package":"@serenity-js/rest"}}]}],"groups":[{"title":"Methods","children":[19924,22117,22120,22127,22137,22114,20689,20692]}],"sources":[{"fileName":"packages/rest/src/screenplay/models/PostRequest.ts","line":74,"character":13}],"extendedTypes":[{"type":"reference","target":13989,"name":"HTTPRequest","package":"@serenity-js/rest"}],"permalink":"/api/rest/class/PostRequest","categories":[],"previousId":17707,"nextId":22139},{"id":22139,"name":"PutRequest","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The PUT method requests that the state of the target resource be\\ncreated or replaced with the state defined by the representation\\nenclosed in the request message payload.\\n\\nPUT request should be used when you want to create\\na new resource at a known "},{"kind":"code","text":"`resourceUri`"},{"kind":"text","text":" (e.g. "},{"kind":"code","text":"`/books/0-688-00230-7`"},{"kind":"text","text":")\\nor replace an existing resource at such "},{"kind":"code","text":"`resourceUri`"},{"kind":"text","text":".\\n\\nPUT request is [idempotent](https://developer.mozilla.org/en-US/docs/Glossary/Idempotent):\\ncalling it once or several times successively has the same effect (that is no _side effect_).\\n\\n## Create a new resource at a known location\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\';\\nimport { CallAnApi, LastResponse, PutRequest, Send } from \'@serenity-js/rest\';\\nimport { Ensure, equals } from \'@serenity-js/assertions\';\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(CallAnApi.at(\'https://api.example.org/\'))\\n  .attemptsTo(\\n    Send.a(PutRequest.to(\'/books/0-688-00230-7\').with({\\n      isbn: \'0-688-00230-7\',\\n      title: \'Zen and the Art of Motorcycle Maintenance: An Inquiry into Values\',\\n      author: \'Robert M. Pirsig\',\\n    })),\\n    Ensure.that(LastResponse.status(), equals(201)),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/PUT\\n- https://tools.ietf.org/html/rfc7231#section-4.3.4"}]},"children":[{"id":22140,"name":"to","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/PutRequest.ts","line":57,"character":11}],"signatures":[{"id":22141,"name":"to","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the object with a destination URI.\\n\\nWhen the "},{"kind":"code","text":"`resourceUri`"},{"kind":"text","text":" is not a fully qualified URL but a path, such as "},{"kind":"code","text":"`/products/2`"},{"kind":"text","text":",\\nit gets concatenated with the URL provided to the Axios instance\\nwhen the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/) was instantiated."}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/PutRequest.ts","line":57,"character":11}],"parameters":[{"id":22142,"name":"resourceUri","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The URI where the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n should send the ["},{"kind":"code","text":"`HTTPRequest`"},{"kind":"text","text":"](/api/rest/class/HTTPRequest/)"}]},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":22139,"name":"PutRequest","package":"@serenity-js/rest"}}]},{"id":24333,"name":"describedAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"signatures":[{"id":24334,"name":"describedAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Changes the description of this object, as returned by ["},{"kind":"code","text":"`Describable.describedBy`"},{"kind":"text","text":"](/api/core/class/Describable/#describedBy)\\nand ["},{"kind":"code","text":"`Describable.toString`"},{"kind":"text","text":"](/api/core/class/Describable/#toString)."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"parameters":[{"id":24335,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Replaces the current description according to the following rules:\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is an ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable), it replaces the current description\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/), the current description is passed as "},{"kind":"code","text":"`context`"},{"kind":"text","text":" to "},{"kind":"code","text":"`description.of(context)`"},{"kind":"text","text":", and the result replaces the current description"}]},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":1561,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"},{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}]}}],"type":{"type":"intrinsic","name":"this"},"inheritedFrom":{"type":"reference","target":15473,"name":"HTTPRequest.describedAs"}}],"inheritedFrom":{"type":"reference","target":15472,"name":"HTTPRequest.describedAs"}},{"id":24336,"name":"as","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"signatures":[{"id":24337,"name":"as","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Maps this question to one of a different type.\\n\\n"},{"kind":"code","text":"```ts\\nQuestion.about(\'number returned as string\', actor => \'42\')   // returns: QuestionAdapter<string>\\n  .as(Number)                                                // returns: QuestionAdapter<number>\\n```"}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"typeParameter":[{"id":24338,"name":"O","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":24339,"name":"mapping","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":24340,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"signatures":[{"id":24341,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"parameters":[{"id":24342,"name":"answer","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"}}],"type":{"type":"union","types":[{"type":"reference","target":4603,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4603,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"reference","target":4603,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":15476,"name":"HTTPRequest.as"}}],"inheritedFrom":{"type":"reference","target":15475,"name":"HTTPRequest.as"}},{"id":24343,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":24344,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":24345,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":24346,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":24347,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[24347]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":15483,"name":"HTTPRequest.describedBy"}}],"inheritedFrom":{"type":"reference","target":15482,"name":"HTTPRequest.describedBy"}},{"id":24353,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":24354,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":15493,"name":"HTTPRequest.toString"}}],"inheritedFrom":{"type":"reference","target":15492,"name":"HTTPRequest.toString"}},{"id":24330,"name":"answeredBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/HTTPRequest.ts","line":36,"character":4}],"signatures":[{"id":24331,"name":"answeredBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/HTTPRequest.ts","line":36,"character":4}],"parameters":[{"id":24332,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":15470,"name":"HTTPRequest.answeredBy"}}],"inheritedFrom":{"type":"reference","target":15469,"name":"HTTPRequest.answeredBy"}},{"id":22905,"name":"with","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/PutRequest.ts","line":67,"character":4}],"signatures":[{"id":22906,"name":"with","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the object with a request body."}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/PutRequest.ts","line":67,"character":4}],"parameters":[{"id":22907,"name":"data","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Data to be sent to the "},{"kind":"code","text":"`resourceUri`"}]},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"reference","target":22139,"name":"PutRequest","package":"@serenity-js/rest"}}]},{"id":22908,"name":"using","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/PutRequest.ts","line":83,"character":4}],"signatures":[{"id":22909,"name":"using","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Overrides the default Axios request configuration provided\\nwhen the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/) was instantiated.\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable)\\n- ["},{"kind":"code","text":"`WithAnswerableProperties`"},{"kind":"text","text":"](/api/core/#WithAnswerableProperties)\\n- [AxiosRequestConfig](https://axios-http.com/docs/req_config)"}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/PutRequest.ts","line":83,"character":4}],"parameters":[{"id":22910,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Axios request configuration overrides"}]},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reflection","declaration":{"id":22911,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":22912,"name":"url","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":22913,"name":"method","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":22914,"name":"baseURL","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":22915,"name":"allowAbsoluteUrls","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":22916,"name":"transformRequest","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":22917,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reflection","declaration":{"id":22918,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}]}},{"id":22919,"name":"transformResponse","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":22920,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reflection","declaration":{"id":22921,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}]}},{"id":22922,"name":"headers","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":22923,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":22924,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":22925,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":22926,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":22927,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":22928,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":22929,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":22930,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":22931,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":22932,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":22933,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":22934,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":22935,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":22936,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":22937,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":22938,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":22939,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":22940,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":22941,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":22942,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":22943,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":22944,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":22945,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":22946,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":22947,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":22948,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":22949,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":22950,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":22951,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[22924,22925,22926,22927,22928,22929,22930,22931,22932,22933,22934,22935,22936,22937,22938,22939,22940,22941,22942,22943,22944,22945,22946,22947,22948,22949,22950,22951]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":22952,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":22953,"name":"Accept","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":22954,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":22955,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":22956,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":22957,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":22958,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":22959,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":22960,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":22961,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":22962,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":22963,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":22964,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":22965,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":22966,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":22967,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":22968,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":22969,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":22970,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":22971,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":22972,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":22973,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":22974,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":22975,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":22976,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":22977,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":22978,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":22979,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":22980,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":22981,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":22982,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[22955,22956,22957,22958,22959,22960,22961,22962,22963,22964,22965,22966,22967,22968,22969,22970,22971,22972,22973,22974,22975,22976,22977,22978,22979,22980,22981,22982]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":22983,"name":"Content-Length","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":22984,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":22985,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":22986,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":22987,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":22988,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":22989,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":22990,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":22991,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":22992,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":22993,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":22994,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":22995,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":22996,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":22997,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":22998,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":22999,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23000,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23001,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23002,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23003,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23004,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23005,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23006,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23007,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23008,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23009,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23010,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23011,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23012,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[22985,22986,22987,22988,22989,22990,22991,22992,22993,22994,22995,22996,22997,22998,22999,23000,23001,23002,23003,23004,23005,23006,23007,23008,23009,23010,23011,23012]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":23013,"name":"User-Agent","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":23014,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":23015,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23016,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23017,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23018,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23019,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23020,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23021,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23022,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23023,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23024,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23025,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23026,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23027,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23028,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23029,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23030,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23031,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23032,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23033,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23034,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23035,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23036,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23037,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23038,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23039,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23040,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23041,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23042,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[23015,23016,23017,23018,23019,23020,23021,23022,23023,23024,23025,23026,23027,23028,23029,23030,23031,23032,23033,23034,23035,23036,23037,23038,23039,23040,23041,23042]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":23043,"name":"Content-Encoding","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":23044,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":23045,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23046,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23047,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23048,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23049,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23050,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23051,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23052,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23053,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23054,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23055,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23056,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23057,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23058,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23059,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23060,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23061,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23062,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23063,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23064,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23065,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23066,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23067,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23068,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23069,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23070,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23071,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23072,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[23045,23046,23047,23048,23049,23050,23051,23052,23053,23054,23055,23056,23057,23058,23059,23060,23061,23062,23063,23064,23065,23066,23067,23068,23069,23070,23071,23072]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":23073,"name":"Authorization","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":23074,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":23075,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23076,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23077,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23078,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23079,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23080,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23081,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23082,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23083,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23084,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23085,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23086,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23087,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23088,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23089,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23090,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23091,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23092,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23093,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23094,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23095,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23096,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23097,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23098,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23099,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23100,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23101,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23102,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[23075,23076,23077,23078,23079,23080,23081,23082,23083,23084,23085,23086,23087,23088,23089,23090,23091,23092,23093,23094,23095,23096,23097,23098,23099,23100,23101,23102]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":23133,"name":"link","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":23134,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":23135,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23136,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23137,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23138,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23139,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23140,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23141,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23142,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23143,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23144,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23145,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23146,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23147,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23148,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23149,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23150,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23151,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23152,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23153,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23154,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23155,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23156,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23157,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23158,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23159,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23160,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23161,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23162,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[23135,23136,23137,23138,23139,23140,23141,23142,23143,23144,23145,23146,23147,23148,23149,23150,23151,23152,23153,23154,23155,23156,23157,23158,23159,23160,23161,23162]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":23163,"name":"delete","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":23164,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":23165,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23166,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23167,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23168,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23169,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23170,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23171,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23172,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23173,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23174,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23175,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23176,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23177,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23178,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23179,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23180,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23181,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23182,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23183,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23184,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23185,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23186,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23187,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23188,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23189,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23190,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23191,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23192,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[23165,23166,23167,23168,23169,23170,23171,23172,23173,23174,23175,23176,23177,23178,23179,23180,23181,23182,23183,23184,23185,23186,23187,23188,23189,23190,23191,23192]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":23193,"name":"get","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":23194,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":23195,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23196,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23197,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23198,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23199,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23200,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23201,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23202,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23203,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23204,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23205,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23206,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23207,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23208,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23209,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23210,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23211,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23212,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23213,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23214,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23215,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23216,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23217,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23218,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23219,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23220,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23221,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23222,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[23195,23196,23197,23198,23199,23200,23201,23202,23203,23204,23205,23206,23207,23208,23209,23210,23211,23212,23213,23214,23215,23216,23217,23218,23219,23220,23221,23222]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":23223,"name":"head","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":23224,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":23225,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23226,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23227,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23228,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23229,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23230,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23231,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23232,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23233,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23234,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23235,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23236,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23237,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23238,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23239,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23240,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23241,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23242,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23243,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23244,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23245,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23246,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23247,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23248,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23249,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23250,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23251,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23252,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[23225,23226,23227,23228,23229,23230,23231,23232,23233,23234,23235,23236,23237,23238,23239,23240,23241,23242,23243,23244,23245,23246,23247,23248,23249,23250,23251,23252]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":23253,"name":"options","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":23254,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":23255,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23256,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23257,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23258,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23259,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23260,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23261,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23262,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23263,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23264,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23265,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23266,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23267,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23268,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23269,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23270,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23271,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23272,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23273,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23274,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23275,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23276,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23277,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23278,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23279,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23280,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23281,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23282,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[23255,23256,23257,23258,23259,23260,23261,23262,23263,23264,23265,23266,23267,23268,23269,23270,23271,23272,23273,23274,23275,23276,23277,23278,23279,23280,23281,23282]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":23283,"name":"post","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":23284,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":23285,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23286,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23287,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23288,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23289,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23290,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23291,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23292,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23293,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23294,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23295,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23296,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23297,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23298,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23299,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23300,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23301,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23302,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23303,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23304,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23305,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23306,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23307,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23308,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23309,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23310,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23311,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23312,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[23285,23286,23287,23288,23289,23290,23291,23292,23293,23294,23295,23296,23297,23298,23299,23300,23301,23302,23303,23304,23305,23306,23307,23308,23309,23310,23311,23312]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":23313,"name":"put","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":23314,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":23315,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23316,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23317,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23318,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23319,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23320,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23321,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23322,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23323,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23324,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23325,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23326,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23327,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23328,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23329,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23330,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23331,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23332,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23333,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23334,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23335,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23336,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23337,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23338,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23339,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23340,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23341,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23342,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[23315,23316,23317,23318,23319,23320,23321,23322,23323,23324,23325,23326,23327,23328,23329,23330,23331,23332,23333,23334,23335,23336,23337,23338,23339,23340,23341,23342]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":23343,"name":"patch","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":23344,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":23345,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23346,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23347,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23348,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23349,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23350,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23351,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23352,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23353,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23354,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23355,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23356,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23357,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23358,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23359,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23360,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23361,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23362,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23363,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23364,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23365,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23366,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23367,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23368,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23369,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23370,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23371,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23372,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[23345,23346,23347,23348,23349,23350,23351,23352,23353,23354,23355,23356,23357,23358,23359,23360,23361,23362,23363,23364,23365,23366,23367,23368,23369,23370,23371,23372]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":23373,"name":"purge","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":23374,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":23375,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23376,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23377,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23378,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23379,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23380,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23381,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23382,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23383,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23384,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23385,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23386,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23387,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23388,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23389,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23390,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23391,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23392,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23393,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23394,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23395,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23396,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23397,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23398,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23399,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23400,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23401,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23402,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[23375,23376,23377,23378,23379,23380,23381,23382,23383,23384,23385,23386,23387,23388,23389,23390,23391,23392,23393,23394,23395,23396,23397,23398,23399,23400,23401,23402]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":23403,"name":"unlink","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":23404,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":23405,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23406,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23407,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23408,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23409,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23410,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23411,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23412,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23413,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23414,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23415,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23416,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23417,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23418,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23419,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23420,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23421,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23422,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23423,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23424,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23425,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23426,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23427,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23428,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23429,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23430,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23431,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23432,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[23405,23406,23407,23408,23409,23410,23411,23412,23413,23414,23415,23416,23417,23418,23419,23420,23421,23422,23423,23424,23425,23426,23427,23428,23429,23430,23431,23432]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":23433,"name":"common","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":23434,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":23435,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23436,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23437,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23438,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23439,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23440,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23441,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23442,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23443,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23444,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23445,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23446,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23447,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23448,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23449,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23450,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23451,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23452,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23453,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23454,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23455,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23456,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23457,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23458,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23459,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23460,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23461,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23462,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[23435,23436,23437,23438,23439,23440,23441,23442,23443,23444,23445,23446,23447,23448,23449,23450,23451,23452,23453,23454,23455,23456,23457,23458,23459,23460,23461,23462]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":23103,"name":"Content-Type","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":23104,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":23105,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23106,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23107,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23108,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23109,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23110,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23111,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23112,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23113,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23114,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23115,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23116,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23117,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23118,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23119,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23120,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23121,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23122,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23123,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23124,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23125,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23126,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23127,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23128,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23129,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23130,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23131,"name":"getSetCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23132,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[23105,23106,23107,23108,23109,23110,23111,23112,23113,23114,23115,23116,23117,23118,23119,23120,23121,23122,23123,23124,23125,23126,23127,23128,23129,23130,23131,23132]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}}],"groups":[{"title":"Properties","children":[22953,22983,23013,23043,23073,23133,23163,23193,23223,23253,23283,23313,23343,23373,23403,23433,23103]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":23463,"name":"params","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":23464,"name":"paramsSerializer","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":23465,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":23470,"name":"visitor","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":23471,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":23472,"name":"dots","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":23473,"name":"metaTokens","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":23474,"name":"indexes","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":23466,"name":"encode","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":23467,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":23468,"name":"serialize","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":23469,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[23470,23472,23473,23474,23466,23468]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":23475,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":23476,"name":"data","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":23477,"name":"timeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":23478,"name":"timeoutErrorMessage","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":23479,"name":"withCredentials","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":23480,"name":"adapter","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":23481,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"fetch"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"xhr"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"http"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":23482,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":23504,"name":"codePointAt","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23505,"name":"includes","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23506,"name":"endsWith","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23507,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23508,"name":"repeat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23509,"name":"startsWith","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23510,"name":"anchor","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23511,"name":"big","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23512,"name":"blink","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23513,"name":"bold","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23514,"name":"fixed","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23515,"name":"fontcolor","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23516,"name":"fontsize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23517,"name":"italics","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23518,"name":"link","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23519,"name":"small","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23520,"name":"strike","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23521,"name":"sub","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23522,"name":"sup","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23532,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23523,"name":"padStart","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23524,"name":"padEnd","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23525,"name":"trimEnd","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23526,"name":"trimStart","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23527,"name":"trimLeft","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23528,"name":"trimRight","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23529,"name":"matchAll","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23530,"name":"replaceAll","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23531,"name":"at","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23483,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23484,"name":"charAt","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23485,"name":"charCodeAt","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23486,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23487,"name":"indexOf","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23488,"name":"lastIndexOf","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23489,"name":"localeCompare","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23490,"name":"match","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23491,"name":"replace","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23492,"name":"search","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23493,"name":"slice","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23494,"name":"split","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23495,"name":"substring","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23496,"name":"toLowerCase","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23497,"name":"toLocaleLowerCase","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23498,"name":"toUpperCase","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23499,"name":"toLocaleUpperCase","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23500,"name":"trim","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23501,"name":"length","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Returns the length of a String object."}]},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":23502,"name":"substr","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":23503,"name":"valueOf","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Properties","children":[23501]},{"title":"Methods","children":[23504,23505,23506,23507,23508,23509,23510,23511,23512,23513,23514,23515,23516,23517,23518,23519,23520,23521,23522,23532,23523,23524,23525,23526,23527,23528,23529,23530,23531,23483,23484,23485,23486,23487,23488,23489,23490,23491,23492,23493,23494,23495,23496,23497,23498,23499,23500,23502,23503]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"unknown","name":"{} | Answerable<\\"fetch\\"> | Answerable<\\"xhr\\"> | Answerable<\\"http\\"> | { readonly [x: number]: Answerable<string>; toString: {}; charAt: {}; ... 47 more ...; [Symbol.iterator]: {}; }"}}]}},{"id":23533,"name":"auth","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":23534,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":23535,"name":"username","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":23536,"name":"password","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[23535,23536]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":23537,"name":"responseType","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"text"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"arraybuffer"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"blob"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"document"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"json"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"stream"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"formdata"}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":23538,"name":"responseEncoding","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":23539,"name":"xsrfCookieName","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":23540,"name":"xsrfHeaderName","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":23541,"name":"onUploadProgress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":23542,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":23543,"name":"onDownloadProgress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":23544,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":23545,"name":"maxContentLength","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":23546,"name":"validateStatus","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":23547,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":23548,"name":"maxBodyLength","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":23549,"name":"maxRedirects","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":23550,"name":"maxRate","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"tuple","elements":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}]}]}},{"id":23551,"name":"beforeRedirect","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":23552,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":23553,"name":"socketPath","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":23554,"name":"transport","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":23555,"name":"httpAgent","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":23556,"name":"httpsAgent","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":23557,"name":"proxy","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":23558,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":23559,"name":"host","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":23560,"name":"port","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":23561,"name":"auth","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":23562,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":23563,"name":"username","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":23564,"name":"password","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[23563,23564]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":23565,"name":"protocol","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[23559,23560,23561,23565]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":23566,"name":"cancelToken","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":23567,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":23568,"name":"promise","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"Cancel"},"name":"Cancel","package":"axios"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":23569,"name":"reason","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":23570,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":23571,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[23571]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":23572,"name":"throwIfRequested","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Properties","children":[23568,23569]},{"title":"Methods","children":[23572]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":23573,"name":"decompress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":23574,"name":"transitional","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":23575,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":23576,"name":"silentJSONParsing","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":23577,"name":"forcedJSONParsing","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":23578,"name":"clarifyTimeoutError","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}}],"groups":[{"title":"Properties","children":[23576,23577,23578]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":23579,"name":"signal","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":23580,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":23581,"name":"aborted","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isReadonly":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":23582,"name":"onabort","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":23583,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":23584,"name":"addEventListener","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":23585,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":23586,"name":"removeEventListener","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":23587,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[23581,23582,23584,23586]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":23588,"name":"insecureHTTPParser","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":23589,"name":"env","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":23590,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":23591,"name":"FormData","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":23592,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[23591]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":23593,"name":"formSerializer","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":23594,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":23595,"name":"visitor","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":23596,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":23597,"name":"dots","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":23598,"name":"metaTokens","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":23599,"name":"indexes","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}}],"groups":[{"title":"Properties","children":[23595,23597,23598,23599]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":23600,"name":"family","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":4}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":6}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":23601,"name":"lookup","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":23602,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":23603,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":23604,"name":"withXSRFToken","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":23605,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":23606,"name":"fetchOptions","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":23607,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":23608,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":23609,"name":"cache","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A string indicating how the request will interact with the browser\'s cache to set request\'s cache."}]},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"default"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"reload"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"force-cache"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"no-cache"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"no-store"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"only-if-cached"}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":23610,"name":"credentials","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A string indicating whether credentials will be sent with the request always, never, or only when sent to a same-origin URL. Sets request\'s credentials."}]},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"include"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"omit"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"same-origin"}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":23611,"name":"integrity","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A cryptographic hash of the resource to be fetched by request. Sets request\'s integrity."}]},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":23612,"name":"keepalive","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A boolean to set request\'s keepalive."}]},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":23613,"name":"mode","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A string to indicate whether the request will use CORS, or will be restricted to same-origin URLs. Sets request\'s mode."}]},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"same-origin"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"cors"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"navigate"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"no-cors"}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":23614,"name":"priority","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"auto"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"high"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"low"}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":23615,"name":"redirect","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A string indicating whether request follows redirects, results in an error upon encountering a redirect, or returns the redirect (in an opaque fashion). Sets request\'s redirect."}]},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"error"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"follow"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"manual"}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":23616,"name":"referrer","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A string whose value is a same-origin URL, \\"about:client\\", or the empty string, to set request\'s referrer."}]},"sources":[],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":23617,"name":"referrerPolicy","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A referrer policy to set request\'s referrerPolicy."}]},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"same-origin"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":""}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"no-referrer"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"no-referrer-when-downgrade"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"origin"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"origin-when-cross-origin"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"strict-origin"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"strict-origin-when-cross-origin"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"unsafe-url"}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":23618,"name":"window","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Can only be null. Used to disassociate request from any Window."}]},"sources":[],"type":{"type":"literal","value":null}}],"groups":[{"title":"Properties","children":[23609,23610,23611,23612,23613,23614,23615,23616,23617,23618]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}}],"groups":[{"title":"Properties","children":[22912,22913,22914,22915,22916,22919,22922,23463,23464,23476,23477,23478,23479,23480,23533,23537,23538,23539,23540,23541,23543,23545,23546,23548,23549,23550,23551,23553,23554,23555,23556,23557,23566,23573,23574,23579,23588,23589,23593,23600,23601,23604,23606]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":22139,"name":"PutRequest","package":"@serenity-js/rest"}}]}],"groups":[{"title":"Methods","children":[22140,24333,24336,24343,24353,24330,22905,22908]}],"sources":[{"fileName":"packages/rest/src/screenplay/models/PutRequest.ts","line":44,"character":13}],"extendedTypes":[{"type":"reference","target":13989,"name":"HTTPRequest","package":"@serenity-js/rest"}],"permalink":"/api/rest/class/PutRequest","categories":[],"previousId":19923,"nextId":24355},{"id":24355,"name":"LastResponse","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Provides access to the properties of the last ["},{"kind":"code","text":"`AxiosResponse`"},{"kind":"text","text":"](https://axios-http.com/docs/res_schema) object,\\ncached on the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/).\\n\\n## Verify response to a GET request\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, GetRequest, LastResponse, Send } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\ninterface Book {\\n    title: string;\\n    author: string;\\n}\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(CallAnApi.at(\'https://api.example.org/\'))\\n  .attemptsTo(\\n    Send.a(GetRequest.to(\'/books/0-688-00230-7\')),\\n    Ensure.that(LastResponse.status(), equals(200)),\\n    Ensure.that(LastResponse.header(\'Content-Type\'), equals(\'application/json\')),\\n    Ensure.that(LastResponse.body<Book>(), equals({\\n        title: \'Zen and the Art of Motorcycle Maintenance: An Inquiry into Values\',\\n        author: \'Robert M. Pirsig\',\\n    })),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Use Serenity/JS adapters to navigate complex response objects\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, GetRequest, LastResponse, Send } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\ninterface Developer {\\n    name: string;\\n    id: string;\\n    projects: Project[];\\n}\\n\\ninterface Project {\\n    name: string;\\n    repoUrl: string;\\n}\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(CallAnApi.at(\'https://api.example.org/\'))\\n  .attemptsTo(\\n    Send.a(GetRequest.to(\'/developers/jan-molak\')),\\n    Ensure.that(LastResponse.status(), equals(200)),\\n    Ensure.that(LastResponse.body<Developer>().name, equals(\'Jan Molak\')),\\n    Ensure.that(LastResponse.body<Developer>().projects[0].name, equals(\'Serenity/JS\')),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- [AxiosResponse](https://axios-http.com/docs/res_schema)"}]},"children":[{"id":24356,"name":"status","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/questions/LastResponse.ts","line":77,"character":11}],"signatures":[{"id":24357,"name":"status","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Retrieves the status code of the [last response](/api/rest/class/LastResponse/)\\n\\n#### Learn more\\n- [HTTP response status codes](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status)"}]},"sources":[{"fileName":"packages/rest/src/screenplay/questions/LastResponse.ts","line":77,"character":11}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":24358,"name":"body","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/questions/LastResponse.ts","line":157,"character":11}],"signatures":[{"id":24359,"name":"body","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Retrieves the body of the [last response](/api/rest/class/LastResponse/)\\n\\n#### A type-safe approach using generics\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, LastResponse } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\ninterface Book {\\n  title: string;\\n  author: string;\\n}\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(CallAnApi.at(\'https://api.example.org/\'))\\n  .attemptsTo(\\n     // ...\\n\\n     // note body<T>() parameterised with type \\"Book\\"\\n     Ensure.that(LastResponse.body<Book>(), equals({\\n       title: \'Zen and the Art of Motorcycle Maintenance: An Inquiry into Values\',\\n       author: \'Robert M. Pirsig\',\\n     })),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## A not type-safe approach using "},{"kind":"code","text":"`any`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, LastResponse } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(CallAnApi.at(\'https://api.example.org/\'))\\n  .attemptsTo(\\n     // ...\\n\\n     // note body<T>() parameterised with \\"any\\" or with no parameter is not type-safe!\\n     Ensure.that(LastResponse.body<any>(), equals({\\n       title: \'Zen and the Art of Motorcycle Maintenance: An Inquiry into Values\',\\n       author: \'Robert M. Pirsig\',\\n     })),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Iterating over the items in the response body\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, LastResponse } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\ninterface Product {\\n  id: number;\\n  name: string;\\n}\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(CallAnApi.at(\'https://api.example.org/\'))\\n  .attemptsTo(\\n    Send.a(GetRequest.to(`/products`)),\\n    List.of<Product>(LastResponse.body<{ products: Product[] }>().products)\\n      .forEach(({ item, actor }) =>\\n        actor.attemptsTo(\\n          Send.a(GetRequest.to(`/products/${ item.id }`)),\\n          Ensure.that(LastResponse.body<Product>().id, equals(item.id)),\\n        )\\n      ),\\n  )\\n```"}]},"sources":[{"fileName":"packages/rest/src/screenplay/questions/LastResponse.ts","line":157,"character":11}],"typeParameter":[{"id":24360,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"any"}}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"reference","target":24360,"name":"T","package":"@serenity-js/rest","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":24361,"name":"header","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/questions/LastResponse.ts","line":183,"character":11}],"signatures":[{"id":24362,"name":"header","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Retrieves a header of the [last response](/api/rest/class/LastResponse/), identified by "},{"kind":"code","text":"`name`"},{"kind":"text","text":"\\n\\n## Asserting on a header\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, LastResponse } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(CallAnApi.at(\'https://api.example.org/\'))\\n  .attemptsTo(\\n    Send.a(GetRequest.to(`/products`)),\\n    Ensure.that(LastResponse.header(\'Content-Type\'), equals(\'application/json\')),\\n  )\\n```"}]},"sources":[{"fileName":"packages/rest/src/screenplay/questions/LastResponse.ts","line":183,"character":11}],"parameters":[{"id":24363,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":24364,"name":"headers","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/questions/LastResponse.ts","line":207,"character":11}],"signatures":[{"id":24365,"name":"headers","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Retrieves all the headers of the [last response](/api/rest/class/LastResponse/).\\n\\n## Asserting on a header\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, LastResponse } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(CallAnApi.at(\'https://api.example.org/\'))\\n  .attemptsTo(\\n    Send.a(GetRequest.to(`/products`)),\\n    Ensure.that(LastResponse.headers()[\'Content-Type\'], equals(\'application/json\')),\\n  )\\n```"}]},"sources":[{"fileName":"packages/rest/src/screenplay/questions/LastResponse.ts","line":207,"character":11}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Partial"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"RawAxiosHeaders"},"name":"RawAxiosHeaders","package":"axios"},{"type":"reflection","declaration":{"id":24366,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":24367,"name":"Content-Length","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosHeaderValue"},"name":"AxiosHeaderValue","package":"axios"}},{"id":24368,"name":"Content-Encoding","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosHeaderValue"},"name":"AxiosHeaderValue","package":"axios"}},{"id":24369,"name":"Content-Type","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosHeaderValue"},"name":"AxiosHeaderValue","package":"axios"}},{"id":24370,"name":"Server","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosHeaderValue"},"name":"AxiosHeaderValue","package":"axios"}},{"id":24371,"name":"Cache-Control","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosHeaderValue"},"name":"AxiosHeaderValue","package":"axios"}}],"groups":[{"title":"Properties","children":[24367,24368,24369,24370,24371]}],"sources":[]}},{"type":"reflection","declaration":{"id":24372,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":24373,"name":"set-cookie","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"groups":[{"title":"Properties","children":[24373]}],"sources":[]}}]}],"name":"Partial","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#partialtype"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":24374,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":24375,"name":"new LastResponse","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":24355,"name":"LastResponse","package":"@serenity-js/rest"}}]}],"groups":[{"title":"Constructors","children":[24374]},{"title":"Methods","children":[24356,24358,24361,24364]}],"sources":[{"fileName":"packages/rest/src/screenplay/questions/LastResponse.ts","line":69,"character":13}],"permalink":"/api/rest/class/LastResponse","categories":[],"previousId":22139,"nextId":7235}],"groups":[{"title":"Abilities","children":[7251]},{"title":"Activities","children":[7293,7306]},{"title":"Functions","children":[7248]},{"title":"Models","children":[7350,9563,13989,11776,15494,17707,19923,22139]},{"title":"Questions","children":[24355]},{"title":"Type Aliases","children":[7235,7244]}],"sources":[{"fileName":"packages/rest/src/index.ts","line":1,"character":0}],"permalink":"/api/rest"},"urlSlug":"rest"}],"packageName":"@serenity-js/rest","packageVersion":"3.32.1"},{"entryPoints":[{"index":true,"label":"Index","reflection":{"id":51,"name":"@serenity-js/serenity-bdd","variant":"declaration","kind":2,"flags":{"isExternal":true},"children":[{"id":52,"name":"default","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/serenity-bdd/src/index.ts","line":8,"character":24}],"signatures":[{"id":53,"name":"default","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/serenity-bdd/src/index.ts","line":8,"character":24}],"parameters":[{"id":54,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":24573,"name":"SerenityBDDReporterConfig","package":"@serenity-js/serenity-bdd"},"defaultValue":"{}"}],"type":{"type":"reference","target":2248,"typeArguments":[{"type":"reference","target":24551,"name":"SerenityBDDReporter","package":"@serenity-js/serenity-bdd"}],"name":"StageCrewMemberBuilder","package":"@serenity-js/core"}}],"permalink":"/api/serenity-bdd/function/default","categories":[],"nextId":24551},{"id":24551,"name":"SerenityBDDReporter","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/) that produces [Serenity BDD](http://serenity-bdd.info/)-standard JSON reports\\nto be parsed by [Serenity BDD CLI Reporter](https://github.com/serenity-bdd/serenity-cli)\\nto produce HTML reports and living documentation.\\n\\n## Registering Serenity BDD Reporter programmatically\\n\\n"},{"kind":"code","text":"```ts\\nimport { ArtifactArchiver, configure } from \'@serenity-js/core\';\\nimport { SerenityBDDReporter } from \'@serenity-js/serenity-bdd\';\\n\\nconfigure({\\n  crew: [\\n    ArtifactArchiver.fromJSON({\\n      outputDirectory: \'./target/site/serenity\'\\n    }),\\n    SerenityBDDReporter.fromJSON({\\n      specDirectory: \'./features\'            // optional configuration\\n    })\\n  ],\\n})\\n```"},{"kind":"text","text":"\\n\\n## Using Serenity BDD Reporter with Playwright Test\\n\\n"},{"kind":"code","text":"```ts\\n// playwright.config.ts\\nimport { devices } from \'@playwright/test\';\\nimport type { PlaywrightTestConfig } from \'@serenity-js/playwright-test\';\\n\\nconst config: PlaywrightTestConfig = {\\n\\n  reporter: [\\n    [ \'line\' ],\\n    [ \'html\', { open: \'never\' } ],\\n    [ \'@serenity-js/playwright-test\', {\\n      crew: [\\n        \'@serenity-js/serenity-bdd\',\\n        [ \'@serenity-js/core:ArtifactArchiver\', { outputDirectory: \'target/site/serenity\' } ],\\n      ]\\n    }]\\n  ],\\n}\\n```"},{"kind":"text","text":"\\n\\n## Using Serenity BDD Reporter with WebdriverIO\\n\\n"},{"kind":"code","text":"```ts\\n// wdio.conf.ts\\nimport { WebdriverIOConfig } from \'@serenity-js/webdriverio\';\\n\\nexport const config: WebdriverIOConfig = {\\n\\n  framework: \'@serenity-js/webdriverio\',\\n\\n  serenity: {\\n    crew: [\\n      \'@serenity-js/serenity-bdd\',\\n       [ \'@serenity-js/core:ArtifactArchiver\', { outputDirectory: \'target/site/serenity\' } ],\\n    ],\\n    // other Serenity/JS config\\n  },\\n  // other Protractor config\\n}\\n```"},{"kind":"text","text":"\\n\\n## Using Serenity BDD Reporter with Protractor\\n\\n"},{"kind":"code","text":"```js\\n// protractor.conf.js\\nexports.config = {\\n  framework:     \'custom\',\\n  frameworkPath: require.resolve(\'@serenity-js/protractor/adapter\'),\\n\\n  serenity: {\\n    crew: [\\n        \'@serenity-js/serenity-bdd\',\\n         [ \'@serenity-js/core:ArtifactArchiver\', { outputDirectory: \'target/site/serenity\' } ],\\n    ],\\n    // other Serenity/JS config\\n  },\\n\\n  // other Protractor config\\n}\\n```"},{"kind":"text","text":"\\n\\n## Configuring Serenity BDD Reporter\\n\\nTo override Serenity BDD Reporter default configuration, provide a ["},{"kind":"code","text":"`SerenityBDDReporterConfig`"},{"kind":"text","text":"](/api/serenity-bdd/interface/SerenityBDDReporterConfig/)\\nas the second element of the ["},{"kind":"code","text":"`SerenityBDDReporterConfig`"},{"kind":"text","text":"](/api/serenity-bdd/interface/SerenityBDDReporterConfig/) array\\nusing your test runner-specific configuration mechanism.\\n\\nFor example, to change the default location\\nof the [requirements hierarchy root directory](https://serenity-bdd.github.io/docs/reporting/living_documentation#the-requirements-hierarchy),\\nspecify the "},{"kind":"code","text":"`specDirectory`"},{"kind":"text","text":" property:\\n\\n"},{"kind":"code","text":"```js\\n    crew: [\\n      [ \'@serenity-js/serenity-bdd\', { specDirectory: \'./features\' } ],\\n      // ...\\n    ],\\n```"},{"kind":"text","text":"\\n\\n### Learn more:\\n- [Serenity BDD Reporter integration documentation](/handbook/reporting/serenity-bdd-reporter/)\\n- [Serenity/JS examples on GitHub](https://github.com/serenity-js/serenity-js/tree/main/examples)"}]},"children":[{"id":24552,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/serenity-bdd/src/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.ts","line":124,"character":11}],"signatures":[{"id":24553,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/serenity-bdd/src/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.ts","line":124,"character":11}],"parameters":[{"id":24554,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":24573,"name":"SerenityBDDReporterConfig","package":"@serenity-js/serenity-bdd"}}],"type":{"type":"reference","target":2248,"typeArguments":[{"type":"reference","target":24551,"name":"SerenityBDDReporter","package":"@serenity-js/serenity-bdd"}],"name":"StageCrewMemberBuilder","package":"@serenity-js/core"}}]},{"id":24555,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/serenity-bdd/src/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.ts","line":133,"character":4}],"signatures":[{"id":24556,"name":"new SerenityBDDReporter","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/serenity-bdd/src/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.ts","line":133,"character":4}],"parameters":[{"id":24557,"name":"processors","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"EventQueueProcessors","package":"@serenity-js/serenity-bdd"}},{"id":24558,"name":"stage","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The stage this ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/) should be assigned to"}]},"type":{"type":"reference","target":2158,"name":"Stage","package":"@serenity-js/core"}}],"type":{"type":"reference","target":24551,"name":"SerenityBDDReporter","package":"@serenity-js/serenity-bdd"}}]},{"id":24562,"name":"assignedTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/serenity-bdd/src/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.ts","line":143,"character":4}],"signatures":[{"id":24563,"name":"assignedTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/serenity-bdd/src/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.ts","line":143,"character":4}],"parameters":[{"id":24564,"name":"stage","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":2158,"name":"Stage","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2241,"name":"StageCrewMember","package":"@serenity-js/core"},"implementationOf":{"type":"reference","target":-1,"name":"StageCrewMember.assignedTo"}}],"implementationOf":{"type":"reference","target":-1,"name":"StageCrewMember.assignedTo"}},{"id":24565,"name":"notifyOf","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/serenity-bdd/src/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.ts","line":151,"character":4}],"signatures":[{"id":24566,"name":"notifyOf","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/serenity-bdd/src/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.ts","line":151,"character":4}],"parameters":[{"id":24567,"name":"event","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":2630,"name":"DomainEvent","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"void"},"implementationOf":{"type":"reference","target":-1,"name":"StageCrewMember.notifyOf"}}],"implementationOf":{"type":"reference","target":-1,"name":"StageCrewMember.notifyOf"}}],"groups":[{"title":"Constructors","children":[24555]},{"title":"Methods","children":[24552,24562,24565]}],"sources":[{"fileName":"packages/serenity-bdd/src/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.ts","line":121,"character":13}],"implementedTypes":[{"type":"reference","target":2241,"name":"StageCrewMember","package":"@serenity-js/core"}],"permalink":"/api/serenity-bdd/class/SerenityBDDReporter","categories":[],"previousId":52,"nextId":24573},{"id":24573,"name":"SerenityBDDReporterConfig","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configuration options for the ["},{"kind":"code","text":"`SerenityBDDReporter`"},{"kind":"text","text":"](/api/serenity-bdd/class/SerenityBDDReporter/)."}]},"children":[{"id":24574,"name":"specDirectory","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The root directory that ["},{"kind":"code","text":"`SerenityBDDReporter`"},{"kind":"text","text":"](/api/serenity-bdd/class/SerenityBDDReporter/) should recursively scan for test scenario files\\nto determine the [requirements hierarchy](https://serenity-bdd.github.io/docs/reporting/living_documentation#the-requirements-hierarchy),\\nrelative to the current working directory.\\n\\nIf not specified, "},{"kind":"code","text":"`specDirectory`"},{"kind":"text","text":" defaults to the first one of the following subdirectories that\'s present in the current working\\ndirectory:\\n- "},{"kind":"code","text":"`features`"},{"kind":"text","text":" - typically used by [Serenity/JS + Cucumber.js](/handbook/test-runners/cucumber/) projects to store "},{"kind":"code","text":"`.feature`"},{"kind":"text","text":" files\\n- "},{"kind":"code","text":"`specs`"},{"kind":"text","text":" - typically used by [Serenity/JS + Jasmine](/handbook/test-runners/jasmine/) and [Mocha](/handbook/test-runners/mocha/) projects to store "},{"kind":"code","text":"`.spec.js`"},{"kind":"text","text":" or "},{"kind":"code","text":"`.spec.ts`"},{"kind":"text","text":" files\\n- "},{"kind":"code","text":"`spec`"},{"kind":"text","text":" - another popular naming convention seen in [Serenity/JS + Jasmine](/handbook/test-runners/jasmine/) and [Mocha](/handbook/test-runners/mocha/) projects\\n- "},{"kind":"code","text":"`tests`"},{"kind":"text","text":" - typically used by [Serenity/JS + Playwright Test](/handbook/test-runners/playwright-test/) projects to store "},{"kind":"code","text":"`.spec.ts`"},{"kind":"text","text":" files\\n- "},{"kind":"code","text":"`test`"},{"kind":"text","text":" - typically used by [Serenity/JS + WebdriverIO](/handbook/test-runners/webdriverio/) projects to store "},{"kind":"code","text":"`.spec.ts`"},{"kind":"text","text":" files\\n- "},{"kind":"code","text":"`src`"},{"kind":"text","text":" - typically used by [Serenity/JS + Playwright Component Test](/api/playwright-test/#ui-component-testing) projects to store "},{"kind":"code","text":"`.spec.ts`"},{"kind":"text","text":" files alongside the source code\\n\\nIf not specified and none of the above subdirectories are present, "},{"kind":"code","text":"`specDirectory`"},{"kind":"text","text":" defaults to the current working directory.\\n\\nIf "},{"kind":"code","text":"`specDirectory`"},{"kind":"text","text":" _is_ specified, but the directory doesn\'t exist, SerenityBDDReporter throws a ["},{"kind":"code","text":"`ConfigurationError`"},{"kind":"text","text":"](/api/core/class/ConfigurationError/).\\n\\n**IMPORTANT**: For the Serenity BDD CLI Reporter to correctly parse the requirements hierarchy and recognise your test scenarios,\\nyour test scenario files must be named using either:\\n- "},{"kind":"code","text":"`<feature name>.feature`"},{"kind":"text","text":" naming convention for Cucumber.js projects\\n- "},{"kind":"code","text":"`<feature name>.<suffix>.<extension>`"},{"kind":"text","text":" naming convention for non-Cucumber.js projects\\n\\nIn the naming conventions above:\\n- "},{"kind":"code","text":"`<feature name>`"},{"kind":"text","text":" is the name of the feature or component the scenario exercises; e.g. "},{"kind":"code","text":"`checkout.feature`"},{"kind":"text","text":", "},{"kind":"code","text":"`checkout.spec.ts`"},{"kind":"text","text":", "},{"kind":"code","text":"`LoginForm.spec.ts`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`<suffix>`"},{"kind":"text","text":" is one of the following: "},{"kind":"code","text":"`spec`"},{"kind":"text","text":", "},{"kind":"code","text":"`test`"},{"kind":"text","text":", "},{"kind":"code","text":"`integration`"},{"kind":"text","text":", "},{"kind":"code","text":"`it`"},{"kind":"text","text":", "},{"kind":"code","text":"`e2e`"},{"kind":"text","text":", "},{"kind":"code","text":"`spec.e2e`"},{"kind":"text","text":", "},{"kind":"code","text":"`spec-e2e`"},{"kind":"text","text":"; e.g. "},{"kind":"code","text":"`checkout.spec.ts`"},{"kind":"text","text":", "},{"kind":"code","text":"`payments.spec-e2e.ts`"},{"kind":"text","text":", "},{"kind":"code","text":"`user_registration.integration.ts`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`<extension>`"},{"kind":"text","text":" is one of the following: "},{"kind":"code","text":"`js`"},{"kind":"text","text":", "},{"kind":"code","text":"`jsx`"},{"kind":"text","text":", "},{"kind":"code","text":"`mjs`"},{"kind":"text","text":", "},{"kind":"code","text":"`mjsx`"},{"kind":"text","text":", "},{"kind":"code","text":"`cjs`"},{"kind":"text","text":", "},{"kind":"code","text":"`cjsx`"},{"kind":"text","text":", "},{"kind":"code","text":"`ts`"},{"kind":"text","text":", "},{"kind":"code","text":"`tsx`"},{"kind":"text","text":", "},{"kind":"code","text":"`mts`"},{"kind":"text","text":", "},{"kind":"code","text":"`mtsx`"},{"kind":"text","text":", "},{"kind":"code","text":"`cts`"},{"kind":"text","text":", "},{"kind":"code","text":"`ctxs`"},{"kind":"text","text":"; e.g. "},{"kind":"code","text":"`authentication.spec.ts`"},{"kind":"text","text":", "},{"kind":"code","text":"`FormValidator.spec.mtsx`"},{"kind":"text","text":"\\n\\nTo find out more about how [Serenity BDD CLI](https://github.com/serenity-bdd/serenity-core/tree/main/serenity-cli) parses the requirements hierarchy,\\nsee the [SpecFileFilters](https://github.com/serenity-bdd/serenity-core/blob/main/serenity-model/src/main/java/net/thucydides/model/requirements/SpecFileFilters.java)\\nclass."}]},"sources":[{"fileName":"packages/serenity-bdd/src/stage/crew/serenity-bdd-reporter/SerenityBDDReporterConfig.ts","line":40,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":24575,"name":"reporter","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/serenity-bdd/src/stage/crew/serenity-bdd-reporter/SerenityBDDReporterConfig.ts","line":42,"character":4}],"type":{"type":"reflection","declaration":{"id":24576,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":24577,"name":"includeAbilityDetails","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether to include the details of final state and configuration details of actors\' abilities in Serenity BDD reports.\\nDefaults to "},{"kind":"code","text":"`true`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/serenity-bdd/src/stage/crew/serenity-bdd-reporter/SerenityBDDReporterConfig.ts","line":47,"character":8}],"type":{"type":"intrinsic","name":"boolean"}}],"groups":[{"title":"Properties","children":[24577]}],"sources":[{"fileName":"packages/serenity-bdd/src/stage/crew/serenity-bdd-reporter/SerenityBDDReporterConfig.ts","line":42,"character":15}]}}}],"groups":[{"title":"Properties","children":[24574,24575]}],"sources":[{"fileName":"packages/serenity-bdd/src/stage/crew/serenity-bdd-reporter/SerenityBDDReporterConfig.ts","line":7,"character":17}],"permalink":"/api/serenity-bdd/interface/SerenityBDDReporterConfig","categories":[],"previousId":24551}],"groups":[{"title":"Functions","children":[52]},{"title":"Stage","children":[24551,24573]}],"sources":[{"fileName":"packages/serenity-bdd/src/index.ts","line":1,"character":0}],"permalink":"/api/serenity-bdd"},"urlSlug":"serenity-bdd"}],"packageName":"@serenity-js/serenity-bdd","packageVersion":"3.32.1"},{"entryPoints":[{"index":true,"label":"Index","reflection":{"id":5,"name":"@serenity-js/web","variant":"declaration","kind":2,"flags":{"isExternal":true},"children":[{"id":3231,"name":"BrowserWindowClosedError","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Thrown when you\'re trying to take a screenshot of a browser window\\nthat\'s already been closed.\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`TakeScreenshot`"},{"kind":"text","text":"](/api/web/class/TakeScreenshot/)\\n- ["},{"kind":"code","text":"`Page.takeScreenshot`"},{"kind":"text","text":"](/api/web/class/Page/#takeScreenshot)"}]},"children":[{"id":3249,"name":"cause","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true,"isReadonly":true},"sources":[{"fileName":"packages/core/lib/errors/model/RuntimeError.ts","line":67,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"},"inheritedFrom":{"type":"reference","target":-1,"name":"LogicError.cause"}},{"id":3250,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/errors/model/RuntimeError.ts","line":77,"character":4}],"signatures":[{"id":3251,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"sources":[{"fileName":"packages/core/lib/errors/model/RuntimeError.ts","line":77,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"LogicError.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"LogicError.toString"}},{"id":3252,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/errors/model/RuntimeError.ts","line":78,"character":4}],"signatures":[{"id":3253,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/errors/model/RuntimeError.ts","line":78,"character":4}],"type":{"type":"intrinsic","name":"object"},"inheritedFrom":{"type":"reference","target":-1,"name":"LogicError.toJSON"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"LogicError.toJSON"}},{"id":3245,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/errors/BrowserWindowClosedError.ts","line":14,"character":4}],"signatures":[{"id":3246,"name":"new BrowserWindowClosedError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/errors/BrowserWindowClosedError.ts","line":14,"character":4}],"parameters":[{"id":3247,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":3248,"name":"cause","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}],"type":{"type":"reference","target":3231,"name":"BrowserWindowClosedError","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"LogicError.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"LogicError.constructor"}},{"id":3254,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"LogicError.name"}},{"id":3255,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"LogicError.message"}},{"id":3256,"name":"stack","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"LogicError.stack"}}],"groups":[{"title":"Constructors","children":[3245]},{"title":"Properties","children":[3249,3254,3255,3256]},{"title":"Methods","children":[3250,3252]}],"sources":[{"fileName":"packages/web/src/errors/BrowserWindowClosedError.ts","line":13,"character":13}],"extendedTypes":[{"type":"reference","target":315,"name":"LogicError","package":"@serenity-js/core"}],"permalink":"/api/web/class/BrowserWindowClosedError","categories":[],"previousId":3855,"nextId":3257},{"id":3257,"name":"CookieMissingError","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Thrown when the [cookie](https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies)\\nyou\'re trying to retrieve has not been set yet.\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Cookie`"},{"kind":"text","text":"](/api/web/class/Cookie/)\\n- ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/)"}]},"children":[{"id":3272,"name":"cause","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true,"isReadonly":true},"sources":[{"fileName":"packages/core/lib/errors/model/RuntimeError.ts","line":67,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"},"inheritedFrom":{"type":"reference","target":-1,"name":"RuntimeError.cause"}},{"id":3273,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/errors/model/RuntimeError.ts","line":77,"character":4}],"signatures":[{"id":3274,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"sources":[{"fileName":"packages/core/lib/errors/model/RuntimeError.ts","line":77,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"RuntimeError.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"RuntimeError.toString"}},{"id":3275,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/errors/model/RuntimeError.ts","line":78,"character":4}],"signatures":[{"id":3276,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/errors/model/RuntimeError.ts","line":78,"character":4}],"type":{"type":"intrinsic","name":"object"},"inheritedFrom":{"type":"reference","target":-1,"name":"RuntimeError.toJSON"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"RuntimeError.toJSON"}},{"id":3268,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/errors/CookieMissingError.ts","line":14,"character":4}],"signatures":[{"id":3269,"name":"new CookieMissingError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/errors/CookieMissingError.ts","line":14,"character":4}],"parameters":[{"id":3270,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":3271,"name":"cause","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}],"type":{"type":"reference","target":3257,"name":"CookieMissingError","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"RuntimeError.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"RuntimeError.constructor"}},{"id":3277,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"RuntimeError.name"}},{"id":3278,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"RuntimeError.message"}},{"id":3279,"name":"stack","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"RuntimeError.stack"}}],"groups":[{"title":"Constructors","children":[3268]},{"title":"Properties","children":[3272,3277,3278,3279]},{"title":"Methods","children":[3273,3275]}],"sources":[{"fileName":"packages/web/src/errors/CookieMissingError.ts","line":13,"character":13}],"extendedTypes":[{"type":"reference","target":367,"name":"RuntimeError","package":"@serenity-js/core"}],"permalink":"/api/web/class/CookieMissingError","categories":[],"previousId":3231,"nextId":3280},{"id":3280,"name":"ModalDialogObstructsScreenshotError","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Thrown when the presence of a JavaScript dialog obstructs taking a screenshot.\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Photographer`"},{"kind":"text","text":"](/api/web/class/Photographer/)\\n- ["},{"kind":"code","text":"`LogicError`"},{"kind":"text","text":"](/api/core/class/LogicError/)\\n- ["},{"kind":"code","text":"`TakeScreenshot`"},{"kind":"text","text":"](/api/web/class/TakeScreenshot/)"}]},"children":[{"id":3298,"name":"cause","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true,"isReadonly":true},"sources":[{"fileName":"packages/core/lib/errors/model/RuntimeError.ts","line":67,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"},"inheritedFrom":{"type":"reference","target":-1,"name":"LogicError.cause"}},{"id":3299,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/errors/model/RuntimeError.ts","line":77,"character":4}],"signatures":[{"id":3300,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"sources":[{"fileName":"packages/core/lib/errors/model/RuntimeError.ts","line":77,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"LogicError.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"LogicError.toString"}},{"id":3301,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/errors/model/RuntimeError.ts","line":78,"character":4}],"signatures":[{"id":3302,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/errors/model/RuntimeError.ts","line":78,"character":4}],"type":{"type":"intrinsic","name":"object"},"inheritedFrom":{"type":"reference","target":-1,"name":"LogicError.toJSON"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"LogicError.toJSON"}},{"id":3294,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/errors/ModalDialogObstructsScreenshotError.ts","line":14,"character":4}],"signatures":[{"id":3295,"name":"new ModalDialogObstructsScreenshotError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/errors/ModalDialogObstructsScreenshotError.ts","line":14,"character":4}],"parameters":[{"id":3296,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":3297,"name":"cause","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}],"type":{"type":"reference","target":3280,"name":"ModalDialogObstructsScreenshotError","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"LogicError.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"LogicError.constructor"}},{"id":3303,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"LogicError.name"}},{"id":3304,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"LogicError.message"}},{"id":3305,"name":"stack","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"LogicError.stack"}}],"groups":[{"title":"Constructors","children":[3294]},{"title":"Properties","children":[3298,3303,3304,3305]},{"title":"Methods","children":[3299,3301]}],"sources":[{"fileName":"packages/web/src/errors/ModalDialogObstructsScreenshotError.ts","line":13,"character":13}],"extendedTypes":[{"type":"reference","target":315,"name":"LogicError","package":"@serenity-js/core"}],"permalink":"/api/web/class/ModalDialogObstructsScreenshotError","categories":[],"previousId":3257,"nextId":3306},{"id":3306,"name":"isActive","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/expectations/isActive.ts","line":27,"character":16}],"signatures":[{"id":3307,"name":"isActive","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/) that an element is \\"active\\", which means it resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":" when:\\n - the element [is present](/api/assertions/function/isPresent/) in the [DOM](https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model)\\n - ["},{"kind":"code","text":"`PageElement.isActive`"},{"kind":"text","text":"](/api/web/class/PageElement/#isActive) resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":"\\n\\n If the above conditions are not met, the expectation resolves to "},{"kind":"code","text":"`false`"},{"kind":"text","text":".\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`PageElement.isActive`"},{"kind":"text","text":"](/api/web/class/PageElement/#isActive)\\n- ["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/)\\n- ["},{"kind":"code","text":"`Check`"},{"kind":"text","text":"](/api/core/class/Check/)\\n- ["},{"kind":"code","text":"`Ensure`"},{"kind":"text","text":"](/api/assertions/class/Ensure/)\\n- ["},{"kind":"code","text":"`Wait`"},{"kind":"text","text":"](/api/core/class/Wait/)"}]},"sources":[{"fileName":"packages/web/src/expectations/isActive.ts","line":27,"character":16}],"type":{"type":"reference","target":1156,"typeArguments":[{"type":"reference","target":4418,"name":"PageElement","package":"@serenity-js/web"}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/web/function/isActive","categories":[],"previousId":3280,"nextId":3308},{"id":3308,"name":"isClickable","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/expectations/isClickable.ts","line":27,"character":16}],"signatures":[{"id":3309,"name":"isClickable","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/) that an element is clickable, which means it resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":" when:\\n - the element [is present](/api/assertions/function/isPresent/) in the [DOM](https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model)\\n - ["},{"kind":"code","text":"`PageElement.isClickable`"},{"kind":"text","text":"](/api/web/class/PageElement/#isClickable) resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":"\\n\\n If the above conditions are not met, the expectation resolves to "},{"kind":"code","text":"`false`"},{"kind":"text","text":".\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`PageElement.isClickable`"},{"kind":"text","text":"](/api/web/class/PageElement/#isClickable)\\n- ["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/)\\n- ["},{"kind":"code","text":"`Check`"},{"kind":"text","text":"](/api/core/class/Check/)\\n- ["},{"kind":"code","text":"`Ensure`"},{"kind":"text","text":"](/api/assertions/class/Ensure/)\\n- ["},{"kind":"code","text":"`Wait`"},{"kind":"text","text":"](/api/core/class/Wait/)"}]},"sources":[{"fileName":"packages/web/src/expectations/isClickable.ts","line":27,"character":16}],"type":{"type":"reference","target":1156,"typeArguments":[{"type":"reference","target":4418,"name":"PageElement","package":"@serenity-js/web"}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/web/function/isClickable","categories":[],"previousId":3306,"nextId":3310},{"id":3310,"name":"isEnabled","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/expectations/isEnabled.ts","line":27,"character":16}],"signatures":[{"id":3311,"name":"isEnabled","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/) that an element is enabled, which means it resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":" when:\\n - the element [is present](/api/assertions/function/isPresent/) in the [DOM](https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model)\\n - ["},{"kind":"code","text":"`PageElement.isEnabled`"},{"kind":"text","text":"](/api/web/class/PageElement/#isEnabled) resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":"\\n\\n If the above conditions are not met, the expectation resolves to "},{"kind":"code","text":"`false`"},{"kind":"text","text":".\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`PageElement.isEnabled`"},{"kind":"text","text":"](/api/web/class/PageElement/#isEnabled)\\n- ["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/)\\n- ["},{"kind":"code","text":"`Check`"},{"kind":"text","text":"](/api/core/class/Check/)\\n- ["},{"kind":"code","text":"`Ensure`"},{"kind":"text","text":"](/api/assertions/class/Ensure/)\\n- ["},{"kind":"code","text":"`Wait`"},{"kind":"text","text":"](/api/core/class/Wait/)"}]},"sources":[{"fileName":"packages/web/src/expectations/isEnabled.ts","line":27,"character":16}],"type":{"type":"reference","target":1156,"typeArguments":[{"type":"reference","target":4418,"name":"PageElement","package":"@serenity-js/web"}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/web/function/isEnabled","categories":[],"previousId":3308,"nextId":3312},{"id":3312,"name":"isSelected","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/expectations/isSelected.ts","line":27,"character":16}],"signatures":[{"id":3313,"name":"isSelected","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/) that an "},{"kind":"code","text":"`<option>`"},{"kind":"text","text":" or "},{"kind":"code","text":"`<input>`"},{"kind":"text","text":" element is selected, which means it resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":" when:\\n - the element [is present](/api/assertions/function/isPresent/) in the [DOM](https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model)\\n - ["},{"kind":"code","text":"`PageElement.isSelected`"},{"kind":"text","text":"](/api/web/class/PageElement/#isSelected) resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":"\\n\\n If the above conditions are not met, the expectation resolves to "},{"kind":"code","text":"`false`"},{"kind":"text","text":".\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`PageElement.isSelected`"},{"kind":"text","text":"](/api/web/class/PageElement/#isSelected)\\n- ["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/)\\n- ["},{"kind":"code","text":"`Check`"},{"kind":"text","text":"](/api/core/class/Check/)\\n- ["},{"kind":"code","text":"`Ensure`"},{"kind":"text","text":"](/api/assertions/class/Ensure/)\\n- ["},{"kind":"code","text":"`Wait`"},{"kind":"text","text":"](/api/core/class/Wait/)"}]},"sources":[{"fileName":"packages/web/src/expectations/isSelected.ts","line":27,"character":16}],"type":{"type":"reference","target":1156,"typeArguments":[{"type":"reference","target":4418,"name":"PageElement","package":"@serenity-js/web"}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/web/function/isSelected","categories":[],"previousId":3310,"nextId":3314},{"id":3314,"name":"isVisible","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/expectations/isVisible.ts","line":27,"character":16}],"signatures":[{"id":3315,"name":"isVisible","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/) that an element is visible, which means it resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":" when:\\n - the element [is present](/api/assertions/function/isPresent/) in the [DOM](https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model)\\n - ["},{"kind":"code","text":"`PageElement.isVisible`"},{"kind":"text","text":"](/api/web/class/PageElement/#isVisible) resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":"\\n\\n If the above conditions are not met, the expectation resolves to "},{"kind":"code","text":"`false`"},{"kind":"text","text":".\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`PageElement.isVisible`"},{"kind":"text","text":"](/api/web/class/PageElement/#isVisible)\\n- ["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/)\\n- ["},{"kind":"code","text":"`Check`"},{"kind":"text","text":"](/api/core/class/Check/)\\n- ["},{"kind":"code","text":"`Ensure`"},{"kind":"text","text":"](/api/assertions/class/Ensure/)\\n- ["},{"kind":"code","text":"`Wait`"},{"kind":"text","text":"](/api/core/class/Wait/)"}]},"sources":[{"fileName":"packages/web/src/expectations/isVisible.ts","line":27,"character":16}],"type":{"type":"reference","target":1156,"typeArguments":[{"type":"reference","target":4418,"name":"PageElement","package":"@serenity-js/web"}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/web/function/isVisible","categories":[],"previousId":3312,"nextId":3891},{"id":3316,"name":"BrowseTheWeb","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"The [ability](/api/core/class/Ability/) to "},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":" enables an [actor](/api/core/class/Actor/)\\nto [interact with](/api/core/class/Interaction/) and [retrieve information from](/api/core/class/Question/) Web-based user interfaces.\\n\\n"},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":" wraps test integration tools such as [Playwright](/api/playwright),\\n[Protractor](/api/protractor), or [WebdriverIO](/api/webdriverio),\\nand together with Serenity/JS Web models, such as ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/) or ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) - offers a standardised way\\nto write Web-based tests following the Screenplay Pattern.\\n\\nThe consistent and portable design of abstractions provided by the ["},{"kind":"code","text":"`@serenity-js/web`"},{"kind":"text","text":" module](/api/web)\\nalso helps to make your tests portable across the various test integration tools and helps to make your test\\ncode easier to reuse across projects and teams.\\n\\n## Giving the actors an ability to "},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"\\n\\nTo give an [actor](/api/core/class/Actor/) an ability to "},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":", provide the **integration tool-specific implementation**\\nvia ["},{"kind":"code","text":"`Actor.whoCan`"},{"kind":"text","text":"](/api/core/class/Actor/#whoCan) in ["},{"kind":"code","text":"`Cast.prepare`"},{"kind":"text","text":"](/api/core/class/Cast/#prepare), or via ["},{"kind":"code","text":"`Cast.where`"},{"kind":"text","text":"](/api/core/class/Cast/#where).\\n\\n"},{"kind":"code","text":"```ts\\nimport { beforeEach } from \'mocha\'\\nimport { engage, Actor, Cast } from \'@serenity-js/core\'\\nimport { BrowseTheWebWithPlaywright } from \'@serenity-js/playwright\'\\nimport { Browser, chromium } from \'playwright\'\\n\\nbeforeEach(async () => {\\n  const browser = await chromium.launch({ headless: true })\\n\\n  engage(\\n    BrowseTheWebWithPlaywright.using(browser),\\n  )\\n})\\n```"},{"kind":"text","text":"\\n\\n### Learn more\\n\\nTo learn more about using Serenity/JS with your chosen test integration tool, follow their respective documentation:\\n\\n- ["},{"kind":"code","text":"`BrowseTheWebWithPlaywright`"},{"kind":"text","text":"](/api/playwright/class/BrowseTheWebWithPlaywright/)\\n- ["},{"kind":"code","text":"`BrowseTheWebWithProtractor`"},{"kind":"text","text":"](/api/protractor/class/BrowseTheWebWithProtractor/)\\n- ["},{"kind":"code","text":"`BrowseTheWebWithWebdriverIO`"},{"kind":"text","text":"](/api/webdriverio/class/BrowseTheWebWithWebdriverIO/)\\n\\n## Using the ability to "},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"\\n\\nTo use the ability to "},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":" in a custom ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/)\\nor ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/), use the **generic** method ["},{"kind":"code","text":"`BrowseTheWeb.as`"},{"kind":"text","text":"](/api/core/class/Ability/#as)\\nto retrieve it.\\n\\nThis generic method retrieves the integration tool-specific implementation of ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/) present on the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/),\\nsuch as ["},{"kind":"code","text":"`BrowseTheWebWithPlaywright`"},{"kind":"text","text":"](/api/playwright/class/BrowseTheWebWithPlaywright/)\\nor ["},{"kind":"code","text":"`BrowseTheWebWithWebdriverIO`"},{"kind":"text","text":"](/api/webdriverio/class/BrowseTheWebWithWebdriverIO/), using ["},{"kind":"code","text":"`Actor.abilityTo`"},{"kind":"text","text":"](/api/core/class/Actor/#abilityTo).\\n\\nThis decoupling mechanism helps to make your test code portable across test integration tools,\\nsince the only part of your test suite that needs to know about the test integration tool used are the actors.\\nThe rest of your test code, so [tasks](/api/core/class/Task/), [interactions](/api/core/class/Interaction/), and [questions](/api/core/class/Question/),\\nremain fully agnostic of the underlying tool.\\n\\n"},{"kind":"code","text":"```ts\\nimport { BrowseTheWeb, Question } from \'@serenity-js/web\'\\n\\nconst BrowserDetails = () =>\\n Question.about(\'browser details\', async actor => {\\n   const capabilities = await BrowseTheWeb.as(actor).browserCapabilities();\\n   return ${ capabilities.browserName } ${ capabilities.browserVersion }`;\\n })\\n```"},{"kind":"text","text":"\\n\\n**Pro tip:** Use the specific "},{"kind":"code","text":"`BrowseTheWebWith<test integration tool name>`"},{"kind":"text","text":" to give the actor the ability,\\nand generic "},{"kind":"code","text":"`BrowseTheWeb.as(actor)`"},{"kind":"text","text":" to retrieve it.\\n\\n### Learn more\\n\\n- ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/)\\n- ["},{"kind":"code","text":"`Actor.whoCan`"},{"kind":"text","text":"](/api/core/class/Actor/#whoCan)\\n- ["},{"kind":"code","text":"`Cast.where`"},{"kind":"text","text":"](/api/core/class/Cast/#where)\\n- ["},{"kind":"code","text":"`Cast.prepare`"},{"kind":"text","text":"](/api/core/class/Cast/#prepare)"}]},"children":[{"id":3335,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/abilities/Ability.ts","line":406,"character":4}],"signatures":[{"id":3336,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a JSON representation of the ability and its current state, if available.\\nThe purpose of this method is to enable reporting the state of the ability in a human-readable format,\\nrather than to serialise and deserialise the ability itself."}]},"sources":[{"fileName":"packages/core/lib/screenplay/abilities/Ability.ts","line":406,"character":4}],"type":{"type":"reference","target":614,"name":"SerialisedAbility","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Ability.toJSON"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Ability.toJSON"}},{"id":3337,"name":"abilityType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/abilities/Ability.ts","line":436,"character":4}],"signatures":[{"id":3338,"name":"abilityType","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the most abstract type of this Ability instance,\\nspecifically the first class in the inheritance hierarchy that directly extends the "},{"kind":"code","text":"`Ability`"},{"kind":"text","text":" class.\\n\\n"},{"kind":"code","text":"```ts\\nimport { Ability } from \'@serenity-js/core\';\\n\\nclass MyAbility extends Ability {}\\nclass MySpecialisedAbility extends MyAbility {}\\n\\nnew MyAbility().abilityType();            // returns MyAbility\\nnew MySpecialisedAbility().abilityType(); // returns MyAbility\\n```"}]},"sources":[{"fileName":"packages/core/lib/screenplay/abilities/Ability.ts","line":436,"character":4}],"type":{"type":"reference","target":529,"typeArguments":[{"type":"reference","target":508,"name":"Ability","package":"@serenity-js/core"}],"name":"AbilityType","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Ability.abilityType"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Ability.abilityType"}},{"id":3324,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/abilities/BrowseTheWeb.ts","line":85,"character":4}],"signatures":[{"id":3325,"name":"new BrowseTheWeb","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/abilities/BrowseTheWeb.ts","line":85,"character":4}],"typeParameter":[{"id":3326,"name":"Native_Element_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"any"}}],"parameters":[{"id":3327,"name":"session","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":3932,"typeArguments":[{"type":"reference","target":4302,"typeArguments":[{"type":"reference","target":3326,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"BrowseTheWeb.Native_Element_Type","refersToTypeParameter":true}],"name":"Page","package":"@serenity-js/web"}],"name":"BrowsingSession","package":"@serenity-js/web"}}],"type":{"type":"reference","target":3316,"typeArguments":[{"type":"reference","target":3326,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"BrowseTheWeb.Native_Element_Type","refersToTypeParameter":true}],"name":"BrowseTheWeb","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"Ability.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"Ability.constructor"}},{"id":3329,"name":"currentPage","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/abilities/BrowseTheWeb.ts","line":92,"character":10}],"signatures":[{"id":3330,"name":"currentPage","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/) representing the currently active browser tab."}]},"sources":[{"fileName":"packages/web/src/screenplay/abilities/BrowseTheWeb.ts","line":92,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4302,"typeArguments":[{"type":"reference","target":3326,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"BrowseTheWeb.Native_Element_Type","refersToTypeParameter":true}],"name":"Page","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":3331,"name":"allPages","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/abilities/BrowseTheWeb.ts","line":100,"character":4}],"signatures":[{"id":3332,"name":"allPages","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns an array of [pages](/api/web/class/Page/) representing all the browser tabs\\navailable in the current ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/)."}]},"sources":[{"fileName":"packages/web/src/screenplay/abilities/BrowseTheWeb.ts","line":100,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4302,"typeArguments":[{"type":"reference","target":3326,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"BrowseTheWeb.Native_Element_Type","refersToTypeParameter":true}],"name":"Page","package":"@serenity-js/web"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":3333,"name":"browserCapabilities","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/abilities/BrowseTheWeb.ts","line":107,"character":10}],"signatures":[{"id":3334,"name":"browserCapabilities","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns [basic meta-data](/api/web/interface/BrowserCapabilities/) about the browser associated with this ability."}]},"sources":[{"fileName":"packages/web/src/screenplay/abilities/BrowseTheWeb.ts","line":107,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":3928,"name":"BrowserCapabilities","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]}],"groups":[{"title":"Constructors","children":[3324]},{"title":"Methods","children":[3335,3337,3329,3331,3333]}],"sources":[{"fileName":"packages/web/src/screenplay/abilities/BrowseTheWeb.ts","line":83,"character":22}],"typeParameters":[{"id":3339,"name":"Native_Element_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"any"}}],"extendedTypes":[{"type":"reference","target":508,"name":"Ability","package":"@serenity-js/core"}],"permalink":"/api/web/class/BrowseTheWeb","categories":[],"nextId":3340},{"id":3340,"name":"Clear","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs an [actor](/api/core/class/Actor/) who has the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\nto clear the "},{"kind":"code","text":"`value`"},{"kind":"text","text":" of a [form "},{"kind":"code","text":"`input`"},{"kind":"text","text":" field](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input).\\n\\n## Example widget\\n\\n"},{"kind":"code","text":"```html\\n<form>\\n  <input type=\\"text\\" name=\\"example\\" id=\\"example\\" />\\n</form>\\n```"},{"kind":"text","text":"\\n\\n## Lean Page Object describing the widget\\n\\n"},{"kind":"code","text":"```ts\\nimport { By, PageElement } from \'@serenity-js/web\'\\n\\nconst Form = {\\n  exampleInput: () =>\\n    PageElement.located(By.id(\'example\'))\\n     .describedAs(\'example input\')\\n}\\n```"},{"kind":"text","text":"\\n\\n## Clearing the value of an input field\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Clear, Enter, Value } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'In\xe9s\')\\n  .whoCan(BrowseTheWeb.using(browser))\\n  .attemptsTo(\\n    Enter.theValue(\'Hello world!\').into(Form.exampleInput()),\\n    Ensure.that(Value.of(Form.exampleInput()), equals(\'Hello world!\')),\\n\\n    Clear.theValueOf(Form.exampleInput()),\\n    Ensure.that(Value.of(Form.exampleInput()), equals(\'\')),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\n- ["},{"kind":"code","text":"`Enter`"},{"kind":"text","text":"](/api/web/class/Enter/)\\n- ["},{"kind":"code","text":"`Value`"},{"kind":"text","text":"](/api/web/class/Value/)\\n- ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)"}]},"children":[{"id":3341,"name":"theValueOf","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Clear.ts","line":68,"character":11}],"signatures":[{"id":3342,"name":"theValueOf","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates an [interaction](/api/core/class/Interaction/)\\nthat instructs the [actor](/api/core/class/Actor/)\\nto clear the value of an input "},{"kind":"code","text":"`field`"},{"kind":"text","text":","}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Clear.ts","line":68,"character":11}],"parameters":[{"id":3343,"name":"field","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The field which value should be cleared"}]},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":4418,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":3372,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"signatures":[{"id":3373,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":3644,"name":"PageElementInteraction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","target":3643,"name":"PageElementInteraction.instantiationLocation"}},{"id":3374,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":3375,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":3376,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":3377,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3378,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3378]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":3646,"name":"PageElementInteraction.describedBy"}}],"inheritedFrom":{"type":"reference","target":3645,"name":"PageElementInteraction.describedBy"}},{"id":3384,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":3385,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":3656,"name":"PageElementInteraction.toString"}}],"inheritedFrom":{"type":"reference","target":3655,"name":"PageElementInteraction.toString"}},{"id":3358,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Clear.ts","line":79,"character":10}],"signatures":[{"id":3359,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the provided ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to perform this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/).\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`PerformsActivities`"},{"kind":"text","text":"](/api/core/interface/PerformsActivities/)\\n- ["},{"kind":"code","text":"`UsesAbilities`"},{"kind":"text","text":"](/api/core/interface/UsesAbilities/)\\n- ["},{"kind":"code","text":"`AnswersQuestions`"},{"kind":"text","text":"](/api/core/interface/AnswersQuestions/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Clear.ts","line":79,"character":10}],"parameters":[{"id":3360,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":3640,"name":"PageElementInteraction.performAs"}}],"overwrites":{"type":"reference","target":3639,"name":"PageElementInteraction.performAs"}}],"groups":[{"title":"Methods","children":[3341,3372,3374,3384,3358]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/Clear.ts","line":58,"character":13}],"extendedTypes":[{"type":"reference","target":3620,"name":"PageElementInteraction","package":"@serenity-js/web"}],"permalink":"/api/web/class/Clear","categories":[],"previousId":3316,"nextId":3386},{"id":3386,"name":"Click","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs an [actor](/api/core/class/Actor/) who has the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\nto scroll the given ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) into view and then [click](https://developer.mozilla.org/en-US/docs/Web/API/Element/click_event) on it.\\n\\n## Example widget\\n\\n"},{"kind":"code","text":"```html\\n<form>\\n  <input type=\\"text\\" name=\\"example\\" id=\\"example\\" />\\n</form>\\n```"},{"kind":"text","text":"\\n\\n## Lean Page Object describing the widget\\n\\n"},{"kind":"code","text":"```ts\\nimport { By, PageElement } from \'@serenity-js/webdriverio\';\\n\\nclass Form {\\n  static exampleInput = () =>\\n    PageElement.located(By.id(\'example\'))\\n      .describedAs(\'example input\')\\n}\\n```"},{"kind":"text","text":"\\n\\n## Clicking on an element\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Click, isSelected } from \'@serenity-js/web\'\\nimport { Ensure } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Chlo\xe9\')\\n  .attemptsTo(\\n    Click.on(Form.exampleInput()),\\n    Ensure.that(Form.exampleInput(), isSelected()),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\n- ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)"}]},"children":[{"id":3387,"name":"on","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Click.ts","line":60,"character":11}],"signatures":[{"id":3388,"name":"on","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/)."}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Click.ts","line":60,"character":11}],"parameters":[{"id":3389,"name":"pageElement","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The element to be clicked on"}]},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":4418,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":3412,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"signatures":[{"id":3413,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":3644,"name":"PageElementInteraction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","target":3643,"name":"PageElementInteraction.instantiationLocation"}},{"id":3414,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":3415,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":3416,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":3417,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3418,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3418]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":3646,"name":"PageElementInteraction.describedBy"}}],"inheritedFrom":{"type":"reference","target":3645,"name":"PageElementInteraction.describedBy"}},{"id":3424,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":3425,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":3656,"name":"PageElementInteraction.toString"}}],"inheritedFrom":{"type":"reference","target":3655,"name":"PageElementInteraction.toString"}},{"id":3404,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Click.ts","line":71,"character":10}],"signatures":[{"id":3405,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the provided ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to perform this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/).\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`PerformsActivities`"},{"kind":"text","text":"](/api/core/interface/PerformsActivities/)\\n- ["},{"kind":"code","text":"`UsesAbilities`"},{"kind":"text","text":"](/api/core/interface/UsesAbilities/)\\n- ["},{"kind":"code","text":"`AnswersQuestions`"},{"kind":"text","text":"](/api/core/interface/AnswersQuestions/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Click.ts","line":71,"character":10}],"parameters":[{"id":3406,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":3640,"name":"PageElementInteraction.performAs"}}],"overwrites":{"type":"reference","target":3639,"name":"PageElementInteraction.performAs"}}],"groups":[{"title":"Methods","children":[3387,3412,3414,3424,3404]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/Click.ts","line":52,"character":13}],"extendedTypes":[{"type":"reference","target":3620,"name":"PageElementInteraction","package":"@serenity-js/web"}],"permalink":"/api/web/class/Click","categories":[],"previousId":3340,"nextId":3426},{"id":3426,"name":"DoubleClick","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs an [actor](/api/core/class/Actor/) who has the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\nto perform a double click on a given ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/).\\n\\n## Example widget\\n"},{"kind":"code","text":"```html\\n\x3c!--\\n    The editor shows up when the user double-clicks\\n    on one of the properties of their profile\\n    and lets them change the value of that property.\\n--\x3e\\n<div id=\\"user-profile\\">\\n    <ul>\\n        <li id=\\"display-name\\" ondblclick=\\"edit(this)\\">User12345</li>\\n        <li id=\\"email-address\\" ondblclick=\\"edit(this)\\">tester@example.org</li>\\n    </ul>\\n    <form id=\\"editor\\" class=\\"hidden\\">\\n        <input type=\\"text\\" value=\\"\\" />\\n    </form>\\n</div>\\n```"},{"kind":"text","text":"\\n\\n## Lean Page Object describing the widget\\n\\n"},{"kind":"code","text":"```ts\\nimport { By, PageElement } from \'@serenity-js/web\'\\n\\nclass UserProfile {\\n  static displayName = () =>\\n    PageElement.located(By.id(\'display-name\'))\\n      .describedAs(\'display name\')\\n\\n  static emailAddress = () =>\\n    PageElement.located(By.id(\'email-address\'))\\n      .describedAs(\'email address\')\\n\\n  static editor = () =>\\n    PageElement.located(By.id(\'editor\'))\\n      .describedAs(\'editor\')\\n}\\n```"},{"kind":"text","text":"\\n\\n## Double-clicking on an element\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Wait } from \'@serenity-js/core\'\\nimport { DoubleClick, isVisible, Enter, Text } from \'@serenity-js/web\'\\nimport { Ensure, equals, not } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Dorothy\')\\n  .whoCan(BrowseTheWeb.using(browser))\\n  .attemptsTo(\\n    DoubleClick.on(UserProfile.displayName),\\n    Wait.until(UserProfile.editor(), isVisible()),\\n\\n    Enter.theValue(\'New username\').into(UserProfile.editor),\\n\\n    Ensure.that(Text.of(UserProfile.displayName()), equals(\'New username\')),\\n    Ensure.that(UserProfile.editor, not(isVisible()))\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\n- ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)"}]},"children":[{"id":3427,"name":"on","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/DoubleClick.ts","line":83,"character":11}],"signatures":[{"id":3428,"name":"on","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/)."}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/DoubleClick.ts","line":83,"character":11}],"parameters":[{"id":3429,"name":"pageElement","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The element to be double-clicked on"}]},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":4418,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":3452,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"signatures":[{"id":3453,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":3644,"name":"PageElementInteraction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","target":3643,"name":"PageElementInteraction.instantiationLocation"}},{"id":3454,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":3455,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":3456,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":3457,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3458,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3458]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":3646,"name":"PageElementInteraction.describedBy"}}],"inheritedFrom":{"type":"reference","target":3645,"name":"PageElementInteraction.describedBy"}},{"id":3464,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":3465,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":3656,"name":"PageElementInteraction.toString"}}],"inheritedFrom":{"type":"reference","target":3655,"name":"PageElementInteraction.toString"}},{"id":3444,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/DoubleClick.ts","line":94,"character":10}],"signatures":[{"id":3445,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the provided ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to perform this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/).\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`PerformsActivities`"},{"kind":"text","text":"](/api/core/interface/PerformsActivities/)\\n- ["},{"kind":"code","text":"`UsesAbilities`"},{"kind":"text","text":"](/api/core/interface/UsesAbilities/)\\n- ["},{"kind":"code","text":"`AnswersQuestions`"},{"kind":"text","text":"](/api/core/interface/AnswersQuestions/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/DoubleClick.ts","line":94,"character":10}],"parameters":[{"id":3446,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":3640,"name":"PageElementInteraction.performAs"}}],"overwrites":{"type":"reference","target":3639,"name":"PageElementInteraction.performAs"}}],"groups":[{"title":"Methods","children":[3427,3452,3454,3464,3444]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/DoubleClick.ts","line":75,"character":13}],"extendedTypes":[{"type":"reference","target":3620,"name":"PageElementInteraction","package":"@serenity-js/web"}],"permalink":"/api/web/class/DoubleClick","categories":[],"previousId":3386,"nextId":3466},{"id":3466,"name":"Enter","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs an [actor](/api/core/class/Actor/) who has the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\nto enter a value into a [form "},{"kind":"code","text":"`input`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input) field.\\n\\n## Example widget\\n"},{"kind":"code","text":"```html\\n<form>\\n <input type=\\"text\\" name=\\"example\\" id=\\"example\\" />\\n</form>\\n```"},{"kind":"text","text":"\\n\\n## Lean Page Object describing the widget\\n\\n"},{"kind":"code","text":"```ts\\nimport { By, PageElement } from \'@serenity-js/web\'\\n\\nclass Form {\\n  static exampleInput = () =>\\n    PageElement.located(By.id(\'example\'))\\n      .describedAs(\'example input\')\\n }\\n```"},{"kind":"text","text":"\\n\\n## Entering the value into a form field\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\';\\nimport { Enter } from \'@serenity-js/web\';\\n\\nawait actorCalled(\'Esme\')\\n  .attemptsTo(\\n    Enter.theValue(\'Hello world!\').into(Form.exampleInput()),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Handling sensitive information\\n\\nBy design, any data handled by an actor appears in Serenity/JS reports.\\nTo prevent the exposure of any sensitive information, such as passwords or tokens, you should use ["},{"kind":"code","text":"`Masked`"},{"kind":"text","text":"](/api/core/class/Masked/).\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Masked } from \'@serenity-js/core\'\\nimport { Enter } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Esme\')\\n  .attemptsTo(\\n    Enter.theValue(Masked.valueOf(\'your little secret\').into(Form.exampleInputField()),\\n  )\\n\\n  // Gets reported as: \\"Esme enters [a masked value] into the example input field\\"\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\n- ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)"}]},"children":[{"id":3467,"name":"theValue","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Enter.ts","line":75,"character":11}],"signatures":[{"id":3468,"name":"theValue","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/)."}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Enter.ts","line":75,"character":11}],"parameters":[{"id":3469,"name":"values","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"comment":{"summary":[{"kind":"text","text":"The text value to be entered"}]},"type":{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"intrinsic","name":"string"}},{"type":"array","elementType":{"type":"intrinsic","name":"number"}}]}],"name":"Answerable","package":"@serenity-js/core"}}}],"type":{"type":"reflection","declaration":{"id":3470,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3471,"name":"into","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Enter.ts","line":75,"character":92}],"type":{"type":"reflection","declaration":{"id":3472,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Enter.ts","line":75,"character":98}],"signatures":[{"id":3473,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Enter.ts","line":75,"character":98}],"parameters":[{"id":3474,"name":"field","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":4418,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}}]}}}],"groups":[{"title":"Properties","children":[3471]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/Enter.ts","line":75,"character":90}]}}}]},{"id":3499,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"signatures":[{"id":3500,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":3644,"name":"PageElementInteraction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","target":3643,"name":"PageElementInteraction.instantiationLocation"}},{"id":3501,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":3502,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":3503,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":3504,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3505,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3505]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":3646,"name":"PageElementInteraction.describedBy"}}],"inheritedFrom":{"type":"reference","target":3645,"name":"PageElementInteraction.describedBy"}},{"id":3511,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":3512,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":3656,"name":"PageElementInteraction.toString"}}],"inheritedFrom":{"type":"reference","target":3655,"name":"PageElementInteraction.toString"}},{"id":3491,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Enter.ts","line":96,"character":10}],"signatures":[{"id":3492,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the provided ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to perform this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/).\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`PerformsActivities`"},{"kind":"text","text":"](/api/core/interface/PerformsActivities/)\\n- ["},{"kind":"code","text":"`UsesAbilities`"},{"kind":"text","text":"](/api/core/interface/UsesAbilities/)\\n- ["},{"kind":"code","text":"`AnswersQuestions`"},{"kind":"text","text":"](/api/core/interface/AnswersQuestions/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Enter.ts","line":96,"character":10}],"parameters":[{"id":3493,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":3640,"name":"PageElementInteraction.performAs"}}],"overwrites":{"type":"reference","target":3639,"name":"PageElementInteraction.performAs"}}],"groups":[{"title":"Methods","children":[3467,3499,3501,3511,3491]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/Enter.ts","line":67,"character":13}],"extendedTypes":[{"type":"reference","target":3620,"name":"PageElementInteraction","package":"@serenity-js/web"}],"permalink":"/api/web/class/Enter","categories":[],"previousId":3426,"nextId":3513},{"id":3513,"name":"ExecuteScript","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs an [actor](/api/core/class/Actor/) who has the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\nto inject a script into the browser and execute it in the context of the current browser tab.\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\n- ["},{"kind":"code","text":"`LastScriptExecution.result`"},{"kind":"text","text":"](/api/web/class/LastScriptExecution/#result)"}]},"children":[{"id":3514,"name":"from","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/ExecuteScript.ts","line":28,"character":11}],"signatures":[{"id":3515,"name":"from","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a version of this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/)\\nconfigured to load a script from "},{"kind":"code","text":"`sourceUrl`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/ExecuteScript.ts","line":28,"character":11}],"parameters":[{"id":3516,"name":"sourceUrl","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The URL to load the script from"}]},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":3517,"name":"async","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/ExecuteScript.ts","line":173,"character":11}],"signatures":[{"id":3518,"name":"async","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs an [actor](/api/core/class/Actor/) who has the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\nto execute an asynchronous script within the context of the current browser tab.\\n\\nThe script fragment will be executed as the body of an anonymous function.\\nIf the script is provided as a function object, that function will be converted to a string for injection\\ninto the target window.\\n\\nAny arguments provided in addition to the script will be included as script arguments and may be referenced\\nusing the "},{"kind":"code","text":"`arguments`"},{"kind":"text","text":" object. Arguments may be a "},{"kind":"code","text":"`boolean`"},{"kind":"text","text":", "},{"kind":"code","text":"`number`"},{"kind":"text","text":", "},{"kind":"code","text":"`string`"},{"kind":"text","text":"\\nor ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/).\\nArrays and objects may also be used as script arguments as long as each item adheres\\nto the types previously mentioned.\\n\\nUnlike executing synchronous JavaScript with ["},{"kind":"code","text":"`ExecuteScript.sync`"},{"kind":"text","text":"](/api/web/class/ExecuteScript/#sync),\\nscripts executed with this function must explicitly signal they are finished by invoking the provided callback.\\n\\nThis callback will always be injected into the executed function as the last argument,\\nand thus may be referenced with "},{"kind":"code","text":"`arguments[arguments.length - 1]`"},{"kind":"text","text":".\\n\\nIf the script invokes the "},{"kind":"code","text":"`callback`"},{"kind":"text","text":" with a return value, this will be made available\\nvia the ["},{"kind":"code","text":"`LastScriptExecution.result`"},{"kind":"text","text":"](/api/web/class/LastScriptExecution/#result).\\n\\n**Please note** that in order to signal an error in the "},{"kind":"code","text":"`script`"},{"kind":"text","text":" you need to throw an ["},{"kind":"code","text":"`Error`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error)\\ninstead of passing it to the callback function.\\n\\n#### Executing an async script\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { ExecuteScript } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Esti\').attemptsTo(\\n  ExecuteScript.async(`\\n    var callback = arguments[arguments.length - 1]\\n\\n    // do stuff\\n\\n    callback(result)\\n  `)\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Executing async script as function\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { ExecuteScript } from \'@serenity-js/web\'\\n\\nconst MyPage = {\\n  header: () =>\\n    PageElement.located(By.css(\'h1\')).describedAs(\'header\'),\\n}\\n\\nawait actorCalled(\'Esti\').attemptsTo(\\n  ExecuteScript.async(function getText(header, callback) {\\n    callback(header.innerText)\\n  }).withArguments(MyPage.header())\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Passing arguments to an async script\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { ExecuteScript } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Esti\').attemptsTo(\\n  ExecuteScript.async(`\\n    var name = arguments[0];\\n    var age = arguments[1];\\n    var callback = arguments[arguments.length - 1]\\n\\n    // do stuff\\n\\n    callback(result)\\n  `).withArguments(\'Bob\', 24)\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Passing PageElement arguments to an async script\\n\\nSerenity/JS automatically converts ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) objects passed as arguments to the script\\ninto their corresponding DOM elements.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { ExecuteScript, PageElement } from \'@serenity-js/web\'\\n\\nconst MyPage = {\\n  header: () =>\\n    PageElement.located(By.css(\'h1\')).describedAs(\'header\'),\\n}\\n\\nawait actorCalled(\'Esti\').attemptsTo(\\n  ExecuteScript.async(`\\n    var header = arguments[0]\\n    var callback = arguments[arguments.length - 1]\\n\\n    callback(header.innerText)\\n  `).withArguments(MyPage.header())\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Using nested data structures containing PageElement objects\\n\\nSerenity/JS automatically converts any ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) objects\\ncontained in nested data structures passed to the script\\ninto their corresponding DOM elements.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { ExecuteScript, PageElement } from \'@serenity-js/web\'\\n\\nconst MyPage = {\\n  header: () =>\\n    PageElement.located(By.css(\'h1\')).describedAs(\'header\'),\\n\\n  article: () =>\\n    PageElement.located(By.css(\'article\')).describedAs(\'article\'),\\n}\\n\\nawait actorCalled(\'Esti\').attemptsTo(\\n  ExecuteScript.async(`\\n    var { include, exclude }  = arguments[0]\\n    var callback = arguments[arguments.length - 1]\\n\\n    callback(include[0].innerText)\\n  `).withArguments({\\n    include: [ MyPage.article() ],\\n    exclude: [ MyPage.header() ],\\n  })\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`LastScriptExecution.result`"},{"kind":"text","text":"](/api/web/class/LastScriptExecution/#result)"}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/ExecuteScript.ts","line":173,"character":11}],"parameters":[{"id":3519,"name":"script","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The script to be executed"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Function"},"name":"Function","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Function"}]}}],"type":{"type":"reference","target":3525,"name":"ExecuteScriptWithArguments","package":"@serenity-js/web"}}]},{"id":3520,"name":"sync","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/ExecuteScript.ts","line":285,"character":11}],"signatures":[{"id":3521,"name":"sync","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs an [actor](/api/core/class/Actor/) who has the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\nto execute a synchronous script within the context of the current browser tab.\\n\\nIf the script returns a value, it will be made available via ["},{"kind":"code","text":"`LastScriptExecution.result`"},{"kind":"text","text":"](/api/web/class/LastScriptExecution/#result).\\n\\n#### Executing a sync script as string and reading the result\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { ExecuteScript, LastScriptExecution } from \'@serenity-js/web\'\\nimport { Ensure, includes } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Joseph\')\\n  .attemptsTo(\\n    ExecuteScript.sync(\'return navigator.userAgent\'),\\n    Ensure.that(LastScriptExecution.result<string>(), includes(\'Chrome\')),\\n  )\\n```"},{"kind":"text","text":"\\n\\n#### Executing a sync script as function and retrieving the result\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { By, Enter, ExecuteScript, LastScriptExecution, PageElement } from \'@serenity-js/web\'\\n\\nconst Checkout = {\\n  someOfferField: () =>\\n    PageElement.located(By.id(\'offer-code\'))\\n      .describedAs(\'offer code\')\\n\\n  applyOfferCodeField = () =>\\n    PageElement.located(By.id(\'apply-offer-code\'))\\n      .describedAs(\'apply offer field\')\\n}\\n\\nawait actorCalled(\'Joseph\')\\n  .attemptsTo(\\n    // inject JavaScript to read some property of an element\\n    ExecuteScript.sync(function getValue(element) {\\n        return element.value;\\n    }).withArguments(Checkout.someOfferField()),\\n\\n    // use LastScriptExecution.result() to read the value\\n    // returned from the injected script\\n    // and pass it to another interaction\\n    Enter.theValue(LastScriptExecution.result<string>()).into(Checkout.applyOfferCodeField()),\\n  )\\n```"},{"kind":"text","text":"\\n\\n#### Passing PageElement arguments to a sync script\\n\\nSerenity/JS automatically converts ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) objects passed as arguments to the script\\ninto their corresponding DOM elements.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { ExecuteScript, PageElement } from \'@serenity-js/web\'\\n\\nconst MyPage = {\\n  header: () =>\\n    PageElement.located(By.css(\'h1\')).describedAs(\'header\'),\\n}\\n\\nawait actorCalled(\'Esti\').attemptsTo(\\n  ExecuteScript.sync(function getInnerHtml(element) {\\n    return element.innerHTML;\\n  }).withArguments(MyPage.header())\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Using nested data structures containing PageElement objects\\n\\nSerenity/JS automatically converts any ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) objects\\ncontained in nested data structures passed to the script\\ninto their corresponding DOM elements.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { ExecuteScript, PageElement } from \'@serenity-js/web\'\\n\\nconst MyPage = {\\n  header: () =>\\n    PageElement.located(By.css(\'h1\')).describedAs(\'header\'),\\n\\n  article: () =>\\n    PageElement.located(By.css(\'article\')).describedAs(\'article\'),\\n}\\n\\nawait actorCalled(\'Esti\').attemptsTo(\\n  ExecuteScript.async(function getInnerHtml(scope) {\\n    return scope.include[0].innerHTML;\\n  `).withArguments({\\n    include: [ MyPage.article() ],\\n    exclude: [ MyPage.header() ],\\n  })\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`LastScriptExecution.result`"},{"kind":"text","text":"](/api/web/class/LastScriptExecution/#result)"}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/ExecuteScript.ts","line":285,"character":11}],"parameters":[{"id":3522,"name":"script","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The script to be executed"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Function"},"name":"Function","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Function"}]}}],"type":{"type":"reference","target":3525,"name":"ExecuteScriptWithArguments","package":"@serenity-js/web"}}]},{"id":3523,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":3524,"name":"new ExecuteScript","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":3513,"name":"ExecuteScript","package":"@serenity-js/web"}}]}],"groups":[{"title":"Constructors","children":[3523]},{"title":"Methods","children":[3514,3517,3520]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/ExecuteScript.ts","line":19,"character":13}],"permalink":"/api/web/class/ExecuteScript","categories":[],"previousId":3466,"nextId":3525},{"id":3525,"name":"ExecuteScriptWithArguments","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"Allows for a script to be executed to be parametrised.\\n\\n## Learn more\\n-  ["},{"kind":"code","text":"`ExecuteScript`"},{"kind":"text","text":"](/api/web/class/ExecuteScript/)"}]},"children":[{"id":3554,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"signatures":[{"id":3555,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.instantiationLocation"}},{"id":3556,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":3557,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":3558,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":3559,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3560,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3560]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.describedBy"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.describedBy"}},{"id":3566,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":3567,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.toString"}},{"id":3536,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/ExecuteScript.ts","line":303,"character":4}],"signatures":[{"id":3537,"name":"new ExecuteScriptWithArguments","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/ExecuteScript.ts","line":303,"character":4}],"parameters":[{"id":3538,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":3539,"name":"script","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Function"},"name":"Function","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Function"}]}},{"id":3540,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}},"defaultValue":"[]"}],"type":{"type":"reference","target":3525,"name":"ExecuteScriptWithArguments","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"Interaction.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"Interaction.constructor"}},{"id":3543,"name":"withArguments","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/ExecuteScript.ts","line":317,"character":20}],"signatures":[{"id":3544,"name":"withArguments","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/ExecuteScript.ts","line":317,"character":20}],"parameters":[{"id":3545,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"comment":{"summary":[{"kind":"text","text":"Arguments to parametrise the script with"}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":3546,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/ExecuteScript.ts","line":322,"character":10}],"signatures":[{"id":3547,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/ExecuteScript.ts","line":322,"character":10}],"parameters":[{"id":3548,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":710,"name":"CollectsArtifacts","package":"@serenity-js/core"},{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Interaction.performAs"}}],"overwrites":{"type":"reference","target":-1,"name":"Interaction.performAs"}}],"groups":[{"title":"Constructors","children":[3536]},{"title":"Methods","children":[3554,3556,3566,3543,3546]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/ExecuteScript.ts","line":301,"character":22}],"extendedTypes":[{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}],"permalink":"/api/web/class/ExecuteScriptWithArguments","categories":[],"previousId":3513,"nextId":3568},{"id":3568,"name":"Hover","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs an [actor](/api/core/class/Actor/) who has the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\nto hover the mouse pointer over a given ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/).\\n\\n## Example widget\\n"},{"kind":"code","text":"```html\\n <a data-test=\\"example-link\\"\\n     class=\\"off\\"\\n     onmouseover=\\"this.className=\'on\';\\"\\n     onmouseout=\\"this.className=\'off\';\\"\\n     href=\\"/\\">hover over me</a>\\n```"},{"kind":"text","text":"\\n\\n## Lean Page Object describing the widget\\n\\n"},{"kind":"code","text":"```ts\\nimport { By, PageElement } from \'@serenity-js/web\'\\n\\nclass Example {\\n  static link = () =>\\n    PageElement.located(By.css(\'[data-test=\\"example-link\\"]\'))\\n      .describedAs(\'example link\')\\n }\\n```"},{"kind":"text","text":"\\n\\n## Hovering over an element\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Hover, CssClasses } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Hank\')\\n  .whoCan(BrowseTheWeb.using(browser))\\n  .attemptsTo(\\n     Ensure.that(CssClasses.of(Example.link()), equals([ \'off\' ])),\\n\\n    Hover.over(Example.link),\\n    Ensure.that(CssClasses.of(Example.link()), equals([ \'on\' ])),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\n- ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)"}]},"children":[{"id":3569,"name":"over","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Hover.ts","line":64,"character":11}],"signatures":[{"id":3570,"name":"over","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Hover.ts","line":64,"character":11}],"parameters":[{"id":3571,"name":"pageElement","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The element to be hovered over"}]},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":4418,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":3594,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"signatures":[{"id":3595,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":3644,"name":"PageElementInteraction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","target":3643,"name":"PageElementInteraction.instantiationLocation"}},{"id":3596,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":3597,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":3598,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":3599,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3600,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3600]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":3646,"name":"PageElementInteraction.describedBy"}}],"inheritedFrom":{"type":"reference","target":3645,"name":"PageElementInteraction.describedBy"}},{"id":3606,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":3607,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":3656,"name":"PageElementInteraction.toString"}}],"inheritedFrom":{"type":"reference","target":3655,"name":"PageElementInteraction.toString"}},{"id":3586,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Hover.ts","line":75,"character":10}],"signatures":[{"id":3587,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the provided ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to perform this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/).\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`PerformsActivities`"},{"kind":"text","text":"](/api/core/interface/PerformsActivities/)\\n- ["},{"kind":"code","text":"`UsesAbilities`"},{"kind":"text","text":"](/api/core/interface/UsesAbilities/)\\n- ["},{"kind":"code","text":"`AnswersQuestions`"},{"kind":"text","text":"](/api/core/interface/AnswersQuestions/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Hover.ts","line":75,"character":10}],"parameters":[{"id":3588,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":3640,"name":"PageElementInteraction.performAs"}}],"overwrites":{"type":"reference","target":3639,"name":"PageElementInteraction.performAs"}}],"groups":[{"title":"Methods","children":[3569,3594,3596,3606,3586]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/Hover.ts","line":56,"character":13}],"extendedTypes":[{"type":"reference","target":3620,"name":"PageElementInteraction","package":"@serenity-js/web"}],"permalink":"/api/web/class/Hover","categories":[],"previousId":3525,"nextId":3608},{"id":3608,"name":"Navigate","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs an [actor](/api/core/class/Actor/) who has the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\nto navigate to a specific destination, as well as back and forth in the browser history,\\nor reload the current page.\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)"}]},"children":[{"id":3609,"name":"to","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Navigate.ts","line":68,"character":11}],"signatures":[{"id":3610,"name":"to","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs an [actor](/api/core/class/Actor/) who has the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\nto navigate to a given URL.\\n\\nThe URL can be:\\n- absolute, e.g. "},{"kind":"code","text":"`https://example.org/search`"},{"kind":"text","text":"\\n- relative, e.g. "},{"kind":"code","text":"`/search`"},{"kind":"text","text":"\\n\\nIf the URL is relative, your Web test integration tool will append it to any base URL\\nspecified in its respective configuration file.\\n\\n\\n#### Navigate to path relative to baseUrl\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Navigate } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Hannu\')\\n  .attemptsTo(\\n    Navigate.to(\'/search\'),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Navigate to an absolute URL (overrides baseUrl)\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Navigate } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Hannu\')\\n  .whoCan(BrowseTheWeb.using(browser))\\n  .attemptsTo(\\n    Navigate.to(\'https://mycompany.org/login\'),\\n  )\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n\\n- ["},{"kind":"code","text":"`Page.navigateTo`"},{"kind":"text","text":"](/api/web/class/Page/#navigateTo)\\n- [WebdriverIO: Configuration Options](https://webdriver.io/docs/options/#baseurl)\\n- [Playwright: Browser](https://playwright.dev/docs/api/class-browser#browser-new-context)\\n- [Playwright: Test Options](https://playwright.dev/docs/api/class-testoptions#test-options-base-url)\\n- [Protractor: Configuration](https://github.com/angular/protractor/blob/master/lib/config.ts)"}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Navigate.ts","line":68,"character":11}],"parameters":[{"id":3611,"name":"url","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An absolute URL or path an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n should navigate to"}]},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":3612,"name":"back","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Navigate.ts","line":95,"character":11}],"signatures":[{"id":3613,"name":"back","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs an [actor](/api/core/class/Actor/) who has the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\nto navigate back one page in the joint session history of the current top-level browsing context.\\n\\n#### Navigate back in browsing history\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, endsWith } from \'@serenity-js/assertions\'\\nimport { Navigate, Page } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Hannu\')\\n  .whoCan(BrowseTheWeb.using(browser))\\n  .attemptsTo(\\n    Navigate.to(\'/first\'),\\n    Navigate.to(\'/second\'),\\n\\n    Navigate.back(),\\n\\n    Ensure.that(Page.current().url().href, endsWith(\'/first\')),\\n  )\\n```"}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Navigate.ts","line":95,"character":11}],"type":{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":3614,"name":"forward","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Navigate.ts","line":127,"character":11}],"signatures":[{"id":3615,"name":"forward","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs an [actor](/api/core/class/Actor/) who has the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\nto navigate forward one page in the joint session history of the current top-level browsing context.\\n\\n#### Navigate forward in browsing history\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, endsWith } from \'@serenity-js/assertions\'\\nimport { Navigate, Page } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Hannu\')\\n  .whoCan(BrowseTheWeb.using(browser))\\n  .attemptsTo(\\n    Navigate.to(\'/first\'),\\n    Navigate.to(\'/second\'),\\n\\n    Navigate.back(),\\n    Navigate.forward(),\\n\\n    Ensure.that(Page.current().url().href, endsWith(\'/second\')),\\n  )\\n```"}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Navigate.ts","line":127,"character":11}],"type":{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":3616,"name":"reloadPage","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Navigate.ts","line":156,"character":11}],"signatures":[{"id":3617,"name":"reloadPage","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs an [actor](/api/core/class/Actor/) who has the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\nto reload the current page.\\n\\n#### Navigate to path relative to baseUrl\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, endsWith } from \'@serenity-js/assertions\'\\nimport { Navigate, Cookie } from \'@serenity-js/web\'\\nimport { browser } from \'@wdio/globals\'\\n\\nawait actorCalled(\'Hannu\')\\n  .whoCan(BrowseTheWebWithWebdriverIO.using(browser))\\n  .attemptsTo(\\n    Navigate.to(\'/login\'),\\n    Cookie.called(\'session_id\').delete(),\\n    Navigate.reloadPage(),\\n  )\\n```"}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Navigate.ts","line":156,"character":11}],"type":{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":3618,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":3619,"name":"new Navigate","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":3608,"name":"Navigate","package":"@serenity-js/web"}}]}],"groups":[{"title":"Constructors","children":[3618]},{"title":"Methods","children":[3609,3612,3614,3616]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/Navigate.ts","line":17,"character":13}],"permalink":"/api/web/class/Navigate","categories":[],"previousId":3568,"nextId":3620},{"id":3620,"name":"PageElementInteraction","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"A base class for interactions with ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) objects.\\n\\n**Note:** The recommended way to implement custom interactions\\nin your code is to use the ["},{"kind":"code","text":"`Interaction.where`"},{"kind":"text","text":"](/api/core/class/Interaction/#where) factory method."}]},"children":[{"id":3643,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"signatures":[{"id":3644,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.instantiationLocation"}},{"id":3639,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/core/lib/screenplay/Interaction.ts","line":89,"character":13}],"signatures":[{"id":3640,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the provided ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to perform this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/).\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`PerformsActivities`"},{"kind":"text","text":"](/api/core/interface/PerformsActivities/)\\n- ["},{"kind":"code","text":"`UsesAbilities`"},{"kind":"text","text":"](/api/core/interface/UsesAbilities/)\\n- ["},{"kind":"code","text":"`AnswersQuestions`"},{"kind":"text","text":"](/api/core/interface/AnswersQuestions/)"}]},"sources":[{"fileName":"packages/core/lib/screenplay/Interaction.ts","line":89,"character":13}],"parameters":[{"id":3641,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.performAs"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.performAs"}},{"id":3645,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":3646,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":3647,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":3648,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3649,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3649]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.describedBy"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.describedBy"}},{"id":3655,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":3656,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.toString"}}],"groups":[{"title":"Methods","children":[3643,3639,3645,3655]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/PageElementInteraction.ts","line":15,"character":22}],"extendedTypes":[{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}],"extendedBy":[{"type":"reference","target":3340,"name":"Clear"},{"type":"reference","target":3386,"name":"Click"},{"type":"reference","target":3426,"name":"DoubleClick"},{"type":"reference","target":3466,"name":"Enter"},{"type":"reference","target":3568,"name":"Hover"},{"type":"reference","target":3657,"name":"Press"},{"type":"reference","target":3705,"name":"RightClick"}],"permalink":"/api/web/class/PageElementInteraction","categories":[],"previousId":3608,"nextId":3657},{"id":3657,"name":"Press","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs an [actor](/api/core/class/Actor/) who has the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\nto send a key press or a sequence of keys to a Web element.\\n\\n**Note:** On macOS, some keyboard shortcuts might not work\\nwith the ["},{"kind":"code","text":"`devtools`"},{"kind":"text","text":" protocol](https://webdriver.io/docs/automationProtocols/#devtools-protocol).\\n\\n For example:\\n - to *copy*, instead of ["},{"kind":"code","text":"`Key.Meta`"},{"kind":"text","text":"](/api/web/class/Key/#Meta)+"},{"kind":"code","text":"`C`"},{"kind":"text","text":", use ["},{"kind":"code","text":"`Key.Control`"},{"kind":"text","text":"](/api/web/class/Key/#Control)+["},{"kind":"code","text":"`Key.Insert`"},{"kind":"text","text":"](/api/web/class/Key/#Insert)\\n - to *cut*, instead of ["},{"kind":"code","text":"`Key.Meta`"},{"kind":"text","text":"](/api/web/class/Key/#Meta)+"},{"kind":"code","text":"`X`"},{"kind":"text","text":", use ["},{"kind":"code","text":"`Key.Control`"},{"kind":"text","text":"](/api/web/class/Key/#Control)+["},{"kind":"code","text":"`Key.Delete`"},{"kind":"text","text":"](/api/web/class/Key/#Delete)\\n - to *paste*, instead of ["},{"kind":"code","text":"`Key.Meta`"},{"kind":"text","text":"](/api/web/class/Key/#Meta)+"},{"kind":"code","text":"`V`"},{"kind":"text","text":", use ["},{"kind":"code","text":"`Key.Shift`"},{"kind":"text","text":"](/api/web/class/Key/#Shift)+["},{"kind":"code","text":"`Key.Insert`"},{"kind":"text","text":"](/api/web/class/Key/#Insert)\\n\\n## Example widget\\n\\n"},{"kind":"code","text":"```html\\n<form>\\n  <input type=\\"text\\" name=\\"example\\" id=\\"example\\" />\\n</form>\\n```"},{"kind":"text","text":"\\n\\n## Lean Page Object describing the widget\\n\\n"},{"kind":"code","text":"```ts\\nimport { By, PageElement } from \'@serenity-js/web\'\\n\\nclass Form {\\n  static exampleInput = () =>\\n    PageElement.located(By.id(\'example\'))\\n      .describedAs(\'example input\')\\n}\\n```"},{"kind":"text","text":"\\n\\n## Pressing keys\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Key, Press, Value } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Priyanka\')\\n  .attemptsTo(\\n    Press.the(\'H\', \'i\', \'!\', Key.ENTER).in(Form.exampleInput()),\\n    Ensure.that(Value.of(Form.exampleInput), equals(\'Hi!\')),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`Key`"},{"kind":"text","text":"](/api/web/class/Key/)\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\n- ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)"}]},"children":[{"id":3658,"name":"the","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Press.ts","line":77,"character":11}],"signatures":[{"id":3659,"name":"the","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates an [interaction](/api/core/class/Interaction/)\\nthat instructs the [actor](/api/core/class/Actor/)\\nto press a sequence of [keys](/api/web/class/Key/),\\n\\nWhen no "},{"kind":"code","text":"`field`"},{"kind":"text","text":" is specified, the key sequence will be sent to the currently focused element,\\nand if no element is focused - to the "},{"kind":"code","text":"`document.body`"},{"kind":"text","text":" to handle."}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Press.ts","line":77,"character":11}],"parameters":[{"id":3660,"name":"keys","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"comment":{"summary":[{"kind":"text","text":"A sequence of one or more keys to press"}]},"type":{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"array","elementType":{"type":"intrinsic","name":"string"}},{"type":"reference","target":4186,"name":"Key","package":"@serenity-js/web"},{"type":"array","elementType":{"type":"reference","target":4186,"name":"Key","package":"@serenity-js/web"}}]}],"name":"Answerable","package":"@serenity-js/core"}}}],"type":{"type":"intersection","types":[{"type":"reference","target":628,"name":"Activity","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":3661,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3662,"name":"in","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Press.ts","line":77,"character":90}],"type":{"type":"reflection","declaration":{"id":3663,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Press.ts","line":77,"character":94}],"signatures":[{"id":3664,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Press.ts","line":77,"character":94}],"parameters":[{"id":3665,"name":"field","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":4418,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}}]}}}],"groups":[{"title":"Properties","children":[3662]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/Press.ts","line":77,"character":88}]}}]}}]},{"id":3691,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"signatures":[{"id":3692,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":3644,"name":"PageElementInteraction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","target":3643,"name":"PageElementInteraction.instantiationLocation"}},{"id":3693,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":3694,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":3695,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":3696,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3697,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3697]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":3646,"name":"PageElementInteraction.describedBy"}}],"inheritedFrom":{"type":"reference","target":3645,"name":"PageElementInteraction.describedBy"}},{"id":3703,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":3704,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":3656,"name":"PageElementInteraction.toString"}}],"inheritedFrom":{"type":"reference","target":3655,"name":"PageElementInteraction.toString"}},{"id":3679,"name":"in","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Press.ts","line":86,"character":4}],"signatures":[{"id":3680,"name":"in","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Send the key sequence to a specific element."}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Press.ts","line":86,"character":4}],"parameters":[{"id":3681,"name":"field","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":4418,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":3683,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Press.ts","line":103,"character":10}],"signatures":[{"id":3684,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the provided ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to perform this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/).\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`PerformsActivities`"},{"kind":"text","text":"](/api/core/interface/PerformsActivities/)\\n- ["},{"kind":"code","text":"`UsesAbilities`"},{"kind":"text","text":"](/api/core/interface/UsesAbilities/)\\n- ["},{"kind":"code","text":"`AnswersQuestions`"},{"kind":"text","text":"](/api/core/interface/AnswersQuestions/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Press.ts","line":103,"character":10}],"parameters":[{"id":3685,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":3640,"name":"PageElementInteraction.performAs"}}],"overwrites":{"type":"reference","target":3639,"name":"PageElementInteraction.performAs"}}],"groups":[{"title":"Methods","children":[3658,3691,3693,3703,3679,3683]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/Press.ts","line":64,"character":13}],"extendedTypes":[{"type":"reference","target":3620,"name":"PageElementInteraction","package":"@serenity-js/web"}],"permalink":"/api/web/class/Press","categories":[],"previousId":3620,"nextId":3705},{"id":3705,"name":"RightClick","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs an [actor](/api/core/class/Actor/) who has the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\r\\nto perform a right click on a given ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/).\\r\\n\\r\\nThis is typically used to open a [custom context menu](https://developer.mozilla.org/en-US/docs/Web/API/Element/click_event)\\r\\non a given Web element, since it\'s not possible to interact with the standard context menu offered by your browser.\\r\\n\\r\\n## Example widget\\r\\n\\r\\n"},{"kind":"code","text":"```html\\r\\n<form>\\r\\n  <input type=\\"text\\" id=\\"field\\"\\r\\n    oncontextmenu=\\"showMenu(); return false;\\" />\\r\\n\\r\\n  <div id=\\"context-menu\\" style=\\"display:none\\">\\r\\n    Custom context menu\\r\\n  </div>\\r\\n</form>\\r\\n\\r\\n<script>\\r\\n  function showMenu() {\\r\\n    document.getElementById(\\"context-menu\\").style.display = \'block\';\\r\\n  }\\r\\n<\/script>\\r\\n```"},{"kind":"text","text":"\\r\\n\\r\\n## Lean Page Object describing the widget\\r\\n\\r\\n"},{"kind":"code","text":"```ts\\r\\nimport { By, PageElement } from \'@serenity-js/web\'\\r\\n\\r\\nclass Form {\\r\\n  static exampleInput = () =>\\r\\n    PageElement.located(By.id(\'example\'))\\r\\n      .describedAs(\'example input\')\\r\\n\\r\\n  static exampleContextMenu = () =>\\r\\n    PageElement.located(By.id(\'context-menu\'))\\r\\n      .describedAs(\'example context menu\')\\r\\n}\\r\\n```"},{"kind":"text","text":"\\r\\n\\r\\n## Right-click on an element\\r\\n\\r\\n"},{"kind":"code","text":"```ts\\r\\nimport { actorCalled } from \'@serenity-js/core\'\\r\\nimport { RightClick, isVisible } from \'@serenity-js/web\'\\r\\nimport { Ensure } from \'@serenity-js/assertions\'\\r\\n\\r\\nawait actorCalled(\'Chlo\xe9\')\\r\\n  .whoCan(BrowseTheWeb.using(browser))\\r\\n  .attemptsTo(\\r\\n    RightClick.on(Form.exampleInput()),\\r\\n    Ensure.that(Form.exampleContextMenu(), isVisible()),\\r\\n  )\\r\\n```"},{"kind":"text","text":"\\r\\n\\r\\n## Learn more\\r\\n\\r\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\r\\n- ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)"}]},"children":[{"id":3706,"name":"on","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/RightClick.ts","line":78,"character":11}],"signatures":[{"id":3707,"name":"on","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/)."}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/RightClick.ts","line":78,"character":11}],"parameters":[{"id":3708,"name":"pageElement","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The element to be right-clicked on"}]},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":4418,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":3731,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"signatures":[{"id":3732,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":3644,"name":"PageElementInteraction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","target":3643,"name":"PageElementInteraction.instantiationLocation"}},{"id":3733,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":3734,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":3735,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":3736,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3737,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3737]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":3646,"name":"PageElementInteraction.describedBy"}}],"inheritedFrom":{"type":"reference","target":3645,"name":"PageElementInteraction.describedBy"}},{"id":3743,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":3744,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":3656,"name":"PageElementInteraction.toString"}}],"inheritedFrom":{"type":"reference","target":3655,"name":"PageElementInteraction.toString"}},{"id":3723,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/RightClick.ts","line":89,"character":10}],"signatures":[{"id":3724,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the provided ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to perform this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/).\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`PerformsActivities`"},{"kind":"text","text":"](/api/core/interface/PerformsActivities/)\\n- ["},{"kind":"code","text":"`UsesAbilities`"},{"kind":"text","text":"](/api/core/interface/UsesAbilities/)\\n- ["},{"kind":"code","text":"`AnswersQuestions`"},{"kind":"text","text":"](/api/core/interface/AnswersQuestions/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/RightClick.ts","line":89,"character":10}],"parameters":[{"id":3725,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":3640,"name":"PageElementInteraction.performAs"}}],"overwrites":{"type":"reference","target":3639,"name":"PageElementInteraction.performAs"}}],"groups":[{"title":"Methods","children":[3706,3731,3733,3743,3723]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/RightClick.ts","line":71,"character":13}],"extendedTypes":[{"type":"reference","target":3620,"name":"PageElementInteraction","package":"@serenity-js/web"}],"permalink":"/api/web/class/RightClick","categories":[],"previousId":3657,"nextId":3745},{"id":3745,"name":"Scroll","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs an [actor](/api/core/class/Actor/) who has the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\nto scroll until a given ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) comes into view.\\n\\n## Example widget\\n\\n"},{"kind":"code","text":"```html\\n\x3c!--\\n  an element somewhere at the bottom of the page,\\n  outside of the visible area\\n--\x3e\\n<input type=\\"submit\\" id=\\"submit\\" />\\n```"},{"kind":"text","text":"\\n\\n## Lean Page Object describing the widget\\n\\n"},{"kind":"code","text":"```ts\\nimport { By, PageElement } from \'@serenity-js/web\'\\n\\nclass Form {\\n  static submitButton = () => {\\n    PageElement.located(By.id(\'submit\'))\\n      .describedAs(\'submit button\')\\n}\\n```"},{"kind":"text","text":"\\n\\n## Scrolling to element\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure } from \'@serenity-js/assertions\'\\nimport { Scroll, isVisible } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Sara\')\\n  .attemptsTo(\\n    Scroll.to(Form.submitButton()),\\n    Ensure.that(Form.submitButton(), isVisible()),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\n- ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)"}]},"children":[{"id":3746,"name":"to","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Scroll.ts","line":61,"character":11}],"signatures":[{"id":3747,"name":"to","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/)."}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Scroll.ts","line":61,"character":11}],"parameters":[{"id":3748,"name":"pageElement","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The element to scroll to"}]},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":4418,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":3745,"name":"Scroll","package":"@serenity-js/web"}}]},{"id":3767,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"signatures":[{"id":3768,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.instantiationLocation"}},{"id":3769,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":3770,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":3771,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":3772,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3773,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3773]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.describedBy"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.describedBy"}},{"id":3779,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":3780,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.toString"}},{"id":3763,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Scroll.ts","line":72,"character":10}],"signatures":[{"id":3764,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Scroll.ts","line":72,"character":10}],"parameters":[{"id":3765,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Interaction.performAs"}}],"overwrites":{"type":"reference","target":-1,"name":"Interaction.performAs"}}],"groups":[{"title":"Methods","children":[3746,3767,3769,3779,3763]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/Scroll.ts","line":53,"character":13}],"extendedTypes":[{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}],"permalink":"/api/web/class/Scroll","categories":[],"previousId":3705,"nextId":3781},{"id":3781,"name":"Select","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs an [actor](/api/core/class/Actor/) who has the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\nto select an option from a [HTML "},{"kind":"code","text":"`<select>`"},{"kind":"text","text":" element](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select),\\neither by its display name, or by value.\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Selected`"},{"kind":"text","text":"](/api/web/class/Selected/)"}]},"children":[{"id":3782,"name":"value","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":70,"character":11}],"signatures":[{"id":3783,"name":"value","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates an [interaction](/api/core/class/Interaction/)\\nthat instructs the [actor](/api/core/class/Actor/)\\nto select a single ["},{"kind":"code","text":"`<option>`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option)\\nwith a given ["},{"kind":"code","text":"`value`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option#attr-value).,\\n\\n#### Example widget\\n\\n"},{"kind":"code","text":"```html\\n<select data-test=\'countries\'>\\n  <option value=\'UK\'>United Kingdom</option>\\n  <option value=\'PL\'>Poland</option>\\n  <option value=\'US\'>United States</option>\\n</select>\\n```"},{"kind":"text","text":"C\\n\\n#### Lean Page Object describing the widget\\n\\n"},{"kind":"code","text":"```ts\\nimport { By, PageElement } from \'@serenity-js/web\'\\n\\nclass Countries {\\n  static dropdown = () =>\\n    PageElement.located(By.css(\'[data-test=\\"countries\\"]\'))\\n      .describedAs(\'countries dropdown\')\\n}\\n```"},{"kind":"text","text":"\\n\\n#### Retrieving the selected value\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Select, Selected } from \'@serenity-js/web\';\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Nick\')\\n  .attemptsTo(\\n    Select.value(\'UK\').from(Countries.dropdown()),\\n    Ensure.that(Selected.valueOf(Countries.dropdown()), equals(\'UK\')),\\n  )\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Selected.valueOf`"},{"kind":"text","text":"](/api/web/class/Selected/#valueOf)\\n- ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":70,"character":11}],"parameters":[{"id":3784,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A value of the ["},{"kind":"code","text":"`option`"},{"kind":"text","text":" element](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option)\\n for the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to select"}]},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reflection","declaration":{"id":3785,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3786,"name":"from","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":70,"character":47}],"type":{"type":"reflection","declaration":{"id":3787,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":70,"character":53}],"signatures":[{"id":3788,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":70,"character":53}],"parameters":[{"id":3789,"name":"pageElement","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":4418,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}}]}}}],"groups":[{"title":"Properties","children":[3786]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":70,"character":45}]}}}]},{"id":3790,"name":"values","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":133,"character":11}],"signatures":[{"id":3791,"name":"values","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates an [interaction](/api/core/class/Interaction/)\\nthat instructs the [actor](/api/core/class/Actor/)\\nto select multiple ["},{"kind":"code","text":"`<option>`"},{"kind":"text","text":" elements](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option)\\nidentified by their ["},{"kind":"code","text":"`value`"},{"kind":"text","text":"s](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option#attr-value).\\n\\n#### Example widget\\n\\n"},{"kind":"code","text":"```ts\\n<select multiple data-test=\'countries\'>\\n  <option value=\'UK\'>United Kingdom</option>\\n  <option value=\'PL\'>Poland</option>\\n  <option value=\'US\'>United States</option>\\n</select>\\n```"},{"kind":"text","text":"\\n\\n#### Lean Page Object describing the widget\\n\\n"},{"kind":"code","text":"```ts\\nimport { By, PageElement } from \'@serenity-js/web\'\\n\\nclass Countries {\\n  static dropdown = () =>\\n    PageElement.located(By.css(\'[data-test=\\"countries\\"]\'))\\n      .describedAs(\'countries dropdown\')\\n}\\n```"},{"kind":"text","text":"\\n\\n#### Retrieving the selected value\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Select, Selected } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Nick\')\\n  .attemptsTo(\\n    Select.values(\'UK\').from(Countries.dropdown()),\\n    Ensure.that(Selected.valuesOf(Countries.dropdown()), equals([ \'UK\' ])),\\n  )\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n\\n- ["},{"kind":"code","text":"`Selected.valuesOf`"},{"kind":"text","text":"](/api/web/class/Selected/#valuesOf)\\n- ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":133,"character":11}],"parameters":[{"id":3792,"name":"values","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"comment":{"summary":[{"kind":"text","text":"Values of the ["},{"kind":"code","text":"`option`"},{"kind":"text","text":" elements](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option)\\n for the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to select"}]},"type":{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"array","elementType":{"type":"intrinsic","name":"string"}}]}],"name":"Answerable","package":"@serenity-js/core"}}}],"type":{"type":"reflection","declaration":{"id":3793,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3794,"name":"from","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":133,"character":70}],"type":{"type":"reflection","declaration":{"id":3795,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":133,"character":76}],"signatures":[{"id":3796,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":133,"character":76}],"parameters":[{"id":3797,"name":"pageElement","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":4418,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}}]}}}],"groups":[{"title":"Properties","children":[3794]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":133,"character":68}]}}}]},{"id":3798,"name":"option","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":201,"character":11}],"signatures":[{"id":3799,"name":"option","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates an [interaction](/api/core/class/Interaction/)\\nthat instructs the [actor](/api/core/class/Actor/)\\nto select a single ["},{"kind":"code","text":"`<option>`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option)\\nwith a given description.\\n\\n#### Example widget\\n\\n"},{"kind":"code","text":"```html\\n<select data-test=\'countries\'>\\n  <option value=\'UK\'>United Kingdom</option>\\n  <option value=\'PL\'>Poland</option>\\n  <option value=\'US\'>United States</option>\\n</select>\\n```"},{"kind":"text","text":"\\n\\n#### Lean Page Object describing the widget\\n"},{"kind":"code","text":"```ts\\nimport { By, PageElement } from \'@serenity-js/by\'\\n\\nclass Countries {\\n  static dropdown = () =>\\n    PageElement.located(By.css(\'[data-test=\\"countries\\"]\'))\\n      .describedAs(\'countries dropdown\')\\n}\\n```"},{"kind":"text","text":"\\n\\n#### Retrieving the selected value\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Select, Selected } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Nick\')\\n  .whoCan(BrowseTheWeb.using(protractor.browser))\\n  .attemptsTo(\\n    Select.option(\'Poland\').from(Countries.dropdown()),\\n    Ensure.that(\\n      Selected.optionIn(Countries.dropdown()),\\n      equals(\'Poland\')\\n    ),\\n  )\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Selected.optionIn`"},{"kind":"text","text":"](/api/web/class/Selected/#optionIn)\\n- ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":201,"character":11}],"parameters":[{"id":3800,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Text of the ["},{"kind":"code","text":"`option`"},{"kind":"text","text":" element](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option)\\n for the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to select"}]},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reflection","declaration":{"id":3801,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3802,"name":"from","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":201,"character":48}],"type":{"type":"reflection","declaration":{"id":3803,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":201,"character":54}],"signatures":[{"id":3804,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":201,"character":54}],"parameters":[{"id":3805,"name":"pageElement","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":4418,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}}]}}}],"groups":[{"title":"Properties","children":[3802]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":201,"character":46}]}}}]},{"id":3806,"name":"options","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":267,"character":11}],"signatures":[{"id":3807,"name":"options","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates an [interaction](/api/core/class/Interaction/)\\nthat instructs the [actor](/api/core/class/Actor/)\\nto select multiple ["},{"kind":"code","text":"`<option>`"},{"kind":"text","text":" elements](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option)\\nidentified by their descriptions.\\n\\n#### Example widget\\n\\n"},{"kind":"code","text":"```html\\n<select multiple data-test=\'countries\'>\\n  <option value=\'UK\'>United Kingdom</option>\\n  <option value=\'PL\'>Poland</option>\\n  <option value=\'US\'>United States</option>\\n</select>\\n```"},{"kind":"text","text":"\\n\\n#### Lean Page Object describing the widget\\n\\n"},{"kind":"code","text":"```ts\\nimport { By, PageElement } from \'@serenity-js/web\'\\n\\nclass Countries {\\n  static dropdown = () =>\\n    PageElement.located(By.css(\'[data-test=\\"countries\\"]\'))\\n      .describedAs(\'countries dropdown\')\\n}\\n```"},{"kind":"text","text":"\\n\\n##### Retrieving the selected value\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Select, Selected } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Nick\')\\n  .whoCan(BrowseTheWeb.using(protractor.browser))\\n  .attemptsTo(\\n    Select.options(\'Poland\', \'United States\').from(Countries.dropdown()),\\n    Ensure.that(\\n      Selected.optionsIn(Countries.dropdown()),\\n      equals([ \'Poland\', \'United States\' ])\\n    ),\\n  )\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Selected.optionsIn`"},{"kind":"text","text":"](/api/web/class/Selected/#optionsIn)\\n- ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":267,"character":11}],"parameters":[{"id":3808,"name":"values","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"comment":{"summary":[{"kind":"text","text":"Text of the ["},{"kind":"code","text":"`option`"},{"kind":"text","text":" elements  ](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option)\\n for the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to select"}]},"type":{"type":"array","elementType":{"type":"reference","target":706,"typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"array","elementType":{"type":"intrinsic","name":"string"}}]}],"name":"Answerable","package":"@serenity-js/core"}}}],"type":{"type":"reflection","declaration":{"id":3809,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3810,"name":"from","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":267,"character":71}],"type":{"type":"reflection","declaration":{"id":3811,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":267,"character":77}],"signatures":[{"id":3812,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":267,"character":77}],"parameters":[{"id":3813,"name":"pageElement","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":4418,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}}]}}}],"groups":[{"title":"Properties","children":[3810]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":267,"character":69}]}}}]},{"id":3814,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":3815,"name":"new Select","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":3781,"name":"Select","package":"@serenity-js/web"}}]}],"groups":[{"title":"Constructors","children":[3814]},{"title":"Methods","children":[3782,3790,3798,3806]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":18,"character":13}],"permalink":"/api/web/class/Select","categories":[],"previousId":3745,"nextId":3816},{"id":3816,"name":"Switch","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs an [actor](/api/core/class/Actor/) who has the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\nto switch the context for future activities to a ["},{"kind":"code","text":"`Switchable`"},{"kind":"text","text":"](/api/web/interface/Switchable/), such as a ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/) or a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/).\\n\\nPlease note that when the ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) implementing ["},{"kind":"code","text":"`Switchable`"},{"kind":"text","text":"](/api/web/interface/Switchable/) represents an ["},{"kind":"code","text":"`iframe`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe),\\nusing ["},{"kind":"code","text":"`Switch`"},{"kind":"text","text":"](/api/web/class/Switch/) will result in switching the top-level browsing context to that ["},{"kind":"code","text":"`iframe`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe).\\n\\nWhen the ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) represents any other [HTMLElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement),\\nusing ["},{"kind":"code","text":"`Switch`"},{"kind":"text","text":"](/api/web/class/Switch/) sets ["},{"kind":"code","text":"`HTMLElement#focus`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/focus)\\non the specified element. Assuming it can be focused.\\n\\n**Note:** The focused element is the element which will receive keyboard [press](/api/web/class/Press/) events by default.\\n\\n## Perform activities in the context of an iframe\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { By, Click, Enter, PageElement, Switch } from \'@serenity-js/web\'\\n\\n// Lean Page Object describing a login form, embedded in an iframe\\nclass LoginForm {\\n  static iframe = () =>\\n    PageElement.located(By.css(\'iframe\'))\\n      .describedAs(\'login form\')\\n\\n  static usernameField = () =>\\n    PageElement.located(By.css(\'[data-testid=\\"username\\"]\'))\\n      .describedAs(\'username field\')\\n\\n  static passwordField = () =>\\n    PageElement.located(By.css(\'[data-testid=\\"password\\"]\'))\\n      .describedAs(\'password field\')\\n\\n  static submitButton = () =>\\n    PageElement.located(By.css(\'button[type=\\"submit\\"]\'))\\n      .describedAs(\'submit button\')\\n }\\n\\n await actorCalled(\'Francesca\')\\n   .attemptsTo(\\n     Switch.to(LoginForm.iframe).and(\\n       Enter.theValue(\'francesca@example.org\').into(LoginForm.usernameField()),\\n       Enter.theValue(\'correct-horse-battery-staple\').into(LoginForm.passwordField()),\\n       Click.on(LoginForm.submitButton()),\\n     )\\n   )\\n```"},{"kind":"text","text":"\\n\\n## Perform activities in the context of another page\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Click, Enter, Switch } from \'@serenity-js/web\'\\nimport { browser } from \'@wdio/globals\'\\n\\nawait actorCalled(\'Francesca\')\\n  .whoCan(BrowseTheWebWithWebdriverIO.using(browser))\\n  .attemptsTo(\\n    Switch.to(Page.whichName(startsWith(\'popup\'))).and(\\n      // perform some activities in the context of the new window\\n\\n      // optionally, close the browser tab\\n      Page.current().close(),\\n    ),\\n\\n    // Note that switching back to the original page happens automatically\\n    // after the last activity from the list finishes\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Perform activities in the context of a focused page element\\n\\n"},{"kind":"code","text":"```ts\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Key, PageElement, Press, Switch, Value } from \'@serenity-js/web\'\\nimport { browser } from \'@wdio/globals\'\\n\\nconst inputField = () =>\\n  PageElement.located(By.css(\'input\'));\\n\\nawait actorCalled(\'Francesca\')\\n  .whoCan(BrowseTheWebWithWebdriverIO.using(browser))\\n  .attemptsTo(\\n    Switch.to(inputField()).and(\\n      Press.the(\'h\', \'e\', \'l\', \'l\', \'o\'),\\n      Press.the(Key.Tab),\\n    ),\\n    Ensure.that(Value.of(inputField()), equals(\'hello\'))\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\n- ["},{"kind":"code","text":"`Switchable`"},{"kind":"text","text":"](/api/web/interface/Switchable/)\\n- ["},{"kind":"code","text":"`SwitchableOrigin`"},{"kind":"text","text":"](/api/web/interface/SwitchableOrigin/)"}]},"children":[{"id":3817,"name":"to","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Switch.ts","line":115,"character":11}],"signatures":[{"id":3818,"name":"to","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\nto switch the context for future activities to a ["},{"kind":"code","text":"`Switchable`"},{"kind":"text","text":"](/api/web/interface/Switchable/),\\nsuch as a ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/) or a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)."}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Switch.ts","line":115,"character":11}],"parameters":[{"id":3819,"name":"switchable","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":4863,"name":"Switchable","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":3816,"name":"Switch","package":"@serenity-js/web"}}]},{"id":3841,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"signatures":[{"id":3842,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.instantiationLocation"}},{"id":3843,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":3844,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":3845,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":3846,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3847,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3847]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.describedBy"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.describedBy"}},{"id":3853,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":3854,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.toString"}},{"id":3834,"name":"and","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Switch.ts","line":132,"character":4}],"signatures":[{"id":3835,"name":"and","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\nto switch the context for future activities to a ["},{"kind":"code","text":"`Switchable`"},{"kind":"text","text":"](/api/web/interface/Switchable/),\\nsuch as a ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/) or a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/),\\nperform a sequence of "},{"kind":"code","text":"`activities`"},{"kind":"text","text":", and then switch the context back."}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Switch.ts","line":132,"character":4}],"parameters":[{"id":3836,"name":"activities","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"comment":{"summary":[{"kind":"text","text":"A sequence of activities to perform"}]},"type":{"type":"array","elementType":{"type":"reference","target":628,"name":"Activity","package":"@serenity-js/core"}}}],"type":{"type":"reference","target":1640,"name":"Task","package":"@serenity-js/core"}}]},{"id":3837,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Switch.ts","line":139,"character":10}],"signatures":[{"id":3838,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Switch.ts","line":139,"character":10}],"parameters":[{"id":3839,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Interaction.performAs"}}],"overwrites":{"type":"reference","target":-1,"name":"Interaction.performAs"}}],"groups":[{"title":"Methods","children":[3817,3841,3843,3853,3834,3837]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/Switch.ts","line":106,"character":13}],"extendedTypes":[{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}],"permalink":"/api/web/class/Switch","categories":[],"previousId":3781,"nextId":3855},{"id":3855,"name":"TakeScreenshot","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs an [actor](/api/core/class/Actor/)\\nwho has the [ability](/api/core/class/Ability/)\\nto ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\nto take a screenshot and emit an artifact,\\nwhich can then be persisted by ["},{"kind":"code","text":"`ArtifactArchiver`"},{"kind":"text","text":"](/api/core/class/ArtifactArchiver/)\\nand reported by [Serenity BDD reporter](/api/serenity-bdd).\\n\\n#### Taking a screenshot\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\';\\nimport { Navigate, TakeScreenshot } from \'@serenity-js/protractor\';\\n\\nawait actorCalled(\'Tania\')\\n  .attemptsTo(\\n    Navigate.to(\'/app\'),\\n    TakeScreenshot.of(\'my app\'),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\n- ["},{"kind":"code","text":"`CollectsArtifacts`"},{"kind":"text","text":"](/api/core/interface/CollectsArtifacts/)\\n- ["},{"kind":"code","text":"`ArtifactArchiver`"},{"kind":"text","text":"](/api/core/class/ArtifactArchiver/)"}]},"children":[{"id":3856,"name":"of","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/TakeScreenshot.ts","line":44,"character":11}],"signatures":[{"id":3857,"name":"of","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/)."}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/TakeScreenshot.ts","line":44,"character":11}],"parameters":[{"id":3858,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The name to give the emitted artifact"}]},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":3877,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"signatures":[{"id":3878,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.instantiationLocation"}},{"id":3879,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":3880,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":3881,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":3882,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3883,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3883]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.describedBy"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.describedBy"}},{"id":3889,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":3890,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.toString"}},{"id":3873,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/TakeScreenshot.ts","line":55,"character":10}],"signatures":[{"id":3874,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/TakeScreenshot.ts","line":55,"character":10}],"parameters":[{"id":3875,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":710,"name":"CollectsArtifacts","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Interaction.performAs"}}],"overwrites":{"type":"reference","target":-1,"name":"Interaction.performAs"}}],"groups":[{"title":"Methods","children":[3856,3877,3879,3889,3873]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/TakeScreenshot.ts","line":36,"character":13}],"extendedTypes":[{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}],"permalink":"/api/web/class/TakeScreenshot","categories":[],"previousId":3816,"nextId":3231},{"id":3891,"name":"ArgumentDehydrator","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":3892,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/ArgumentDehydrator.ts","line":16,"character":4}],"signatures":[{"id":3893,"name":"new ArgumentDehydrator","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/ArgumentDehydrator.ts","line":16,"character":4}],"typeParameter":[{"id":3894,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":3895,"name":"U","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":3896,"name":"shouldReference","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":3897,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/ArgumentDehydrator.ts","line":17,"character":42}],"signatures":[{"id":3898,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/ArgumentDehydrator.ts","line":17,"character":42}],"parameters":[{"id":3899,"name":"item","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"predicate","name":"item","asserts":false,"targetType":{"type":"reference","target":3894,"name":"T","package":"@serenity-js/web","qualifiedName":"ArgumentDehydrator.T","refersToTypeParameter":true}}}]}}},{"id":3900,"name":"transformation","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":3901,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/ArgumentDehydrator.ts","line":18,"character":41}],"signatures":[{"id":3902,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/ArgumentDehydrator.ts","line":18,"character":41}],"parameters":[{"id":3903,"name":"item","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":3894,"name":"T","package":"@serenity-js/web","qualifiedName":"ArgumentDehydrator.T","refersToTypeParameter":true}}],"type":{"type":"union","types":[{"type":"reference","target":3895,"name":"U","package":"@serenity-js/web","qualifiedName":"ArgumentDehydrator.U","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":3895,"name":"U","package":"@serenity-js/web","qualifiedName":"ArgumentDehydrator.U","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reference","target":3891,"typeArguments":[{"type":"reference","target":3894,"name":"T","package":"@serenity-js/web","qualifiedName":"ArgumentDehydrator.T","refersToTypeParameter":true},{"type":"reference","target":3895,"name":"U","package":"@serenity-js/web","qualifiedName":"ArgumentDehydrator.U","refersToTypeParameter":true}],"name":"ArgumentDehydrator","package":"@serenity-js/web"}}]},{"id":3912,"name":"dehydrate","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/ArgumentDehydrator.ts","line":22,"character":17}],"signatures":[{"id":3913,"name":"dehydrate","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/ArgumentDehydrator.ts","line":22,"character":17}],"parameters":[{"id":3914,"name":"inputArgs","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"tuple","elements":[{"type":"reflection","declaration":{"id":3915,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3916,"name":"argsCount","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/ArgumentDehydrator.ts","line":22,"character":63}],"type":{"type":"intrinsic","name":"number"}},{"id":3917,"name":"refsCount","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/ArgumentDehydrator.ts","line":22,"character":82}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[3916,3917]}],"sources":[{"fileName":"packages/web/src/screenplay/models/ArgumentDehydrator.ts","line":22,"character":61}]}},{"type":"rest","elementType":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}]}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]}],"groups":[{"title":"Constructors","children":[3892]},{"title":"Methods","children":[3912]}],"sources":[{"fileName":"packages/web/src/screenplay/models/ArgumentDehydrator.ts","line":15,"character":13}],"typeParameters":[{"id":3926,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":3927,"name":"U","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"permalink":"/api/web/class/ArgumentDehydrator","categories":[],"previousId":3314,"nextId":3928},{"id":3928,"name":"BrowserCapabilities","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Basic meta-data about the browser used in the test\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`BrowseTheWeb.browserCapabilities`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/#browserCapabilities)"}]},"children":[{"id":3929,"name":"platformName","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Name of the operating system platform the test is executed on, like "},{"kind":"code","text":"`darwin`"},{"kind":"text","text":", "},{"kind":"code","text":"`linux`"},{"kind":"text","text":" or "},{"kind":"code","text":"`windows`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowserCapabilities.ts","line":15,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":3930,"name":"browserName","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Name of the Web browser the test is executed in, like "},{"kind":"code","text":"`chrome`"},{"kind":"text","text":", "},{"kind":"code","text":"`firefox`"},{"kind":"text","text":" or "},{"kind":"code","text":"`safari`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowserCapabilities.ts","line":20,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":3931,"name":"browserVersion","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Version number of the browser the test is executed in."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowserCapabilities.ts","line":25,"character":4}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3929,3930,3931]}],"sources":[{"fileName":"packages/web/src/screenplay/models/BrowserCapabilities.ts","line":10,"character":17}],"permalink":"/api/web/interface/BrowserCapabilities","categories":[],"previousId":3891,"nextId":3932},{"id":3932,"name":"BrowsingSession","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"Represents the pages open in the current browsing context.\\n\\nYou\'ll need to use this class directly only if you\'re planning to integrate Serenity/JS\\nwith a new Web integration tool."}]},"children":[{"id":3933,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":3934,"name":"new BrowsingSession","variant":"signature","kind":16384,"flags":{"isExternal":true},"typeParameter":[{"id":3935,"name":"Page_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":4302,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Page","package":"@serenity-js/web"}}],"type":{"type":"reference","target":3932,"typeArguments":[{"type":"reference","target":3935,"name":"Page_Type","package":"@serenity-js/web","qualifiedName":"BrowsingSession.Page_Type","refersToTypeParameter":true}],"name":"BrowsingSession","package":"@serenity-js/web"}}]},{"id":3938,"name":"closePagesOtherThan","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowsingSession.ts","line":18,"character":10}],"signatures":[{"id":3939,"name":"closePagesOtherThan","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowsingSession.ts","line":18,"character":10}],"parameters":[{"id":3940,"name":"pageOfInterest","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":3935,"name":"Page_Type","package":"@serenity-js/web","qualifiedName":"BrowsingSession.Page_Type","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":3943,"name":"browserCapabilities","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowsingSession.ts","line":37,"character":20}],"signatures":[{"id":3944,"name":"browserCapabilities","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns [basic meta-data](/api/web/interface/BrowserCapabilities/) about the browser associated with this browsing session."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowsingSession.ts","line":37,"character":20}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":3928,"name":"BrowserCapabilities","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":3945,"name":"currentPage","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowsingSession.ts","line":42,"character":10}],"signatures":[{"id":3946,"name":"currentPage","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/) representing the currently active top-level browsing context."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowsingSession.ts","line":42,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":3935,"name":"Page_Type","package":"@serenity-js/web","qualifiedName":"BrowsingSession.Page_Type","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":3947,"name":"register","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowsingSession.ts","line":55,"character":4}],"signatures":[{"id":3948,"name":"register","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Registers specified [pages](/api/web/class/Page/) to be managed by this ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/)."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowsingSession.ts","line":55,"character":4}],"parameters":[{"id":3949,"name":"pages","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":3935,"name":"Page_Type","package":"@serenity-js/web","qualifiedName":"BrowsingSession.Page_Type","refersToTypeParameter":true}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":3950,"name":"deregister","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowsingSession.ts","line":67,"character":4}],"signatures":[{"id":3951,"name":"deregister","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Informs this ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/) that it should no longer manage [pages](/api/web/class/Page/)\\nidentified by the given "},{"kind":"code","text":"`pageIds`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowsingSession.ts","line":67,"character":4}],"parameters":[{"id":3952,"name":"pageIds","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":3953,"name":"allPages","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowsingSession.ts","line":77,"character":10}],"signatures":[{"id":3954,"name":"allPages","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a [pages](/api/web/class/Page/) representing all the available\\ntop-level browsing context, e.g. all the open browser tabs."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowsingSession.ts","line":77,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":3935,"name":"Page_Type","package":"@serenity-js/web","qualifiedName":"BrowsingSession.Page_Type","refersToTypeParameter":true}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":3955,"name":"registeredPageIds","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowsingSession.ts","line":84,"character":4}],"signatures":[{"id":3956,"name":"registeredPageIds","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the ids of any [pages](/api/web/class/Page/) this ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/) is aware of."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowsingSession.ts","line":84,"character":4}],"type":{"type":"array","elementType":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}}]},{"id":3957,"name":"changeCurrentPageTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowsingSession.ts","line":106,"character":10}],"signatures":[{"id":3958,"name":"changeCurrentPageTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Informs the ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/) that the \\"current page\\" has changed to "},{"kind":"code","text":"`page`"},{"kind":"text","text":".\\n\\nPlease note that different Web integration tools have a different definition of what a \\"current page\\" is.\\nFor example, Selenium or WebdriverIO use a single \\"focused\\" window that a developer\\nneeds to explicitly \\"switch to\\" in their tests in order to interact with it.\\nThis is similar to how a regular user would interact with Web pages;\\nswitching from one tab to another, but not interacting with more than one\\nwindow/tab simultaneously.\\n\\nPlaywright and Puppeteer, on the other hand, don\'t have a concept of the \\"current\\" page at all, since they\\nallow the developer to interact with multiple open tabs/windows at the same time.\\n\\nWeb integration-specific implementations of this class should override this method to define\\nhow the concept of the \\"current page\\" should be interpreted by Serenity/JS."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowsingSession.ts","line":106,"character":10}],"parameters":[{"id":3959,"name":"page","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":3935,"name":"Page_Type","package":"@serenity-js/web","qualifiedName":"BrowsingSession.Page_Type","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":3960,"name":"closeAllPages","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowsingSession.ts","line":113,"character":10}],"signatures":[{"id":3961,"name":"closeAllPages","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Closes all the pages available in this browsing context"}]},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowsingSession.ts","line":113,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]}],"groups":[{"title":"Constructors","children":[3933]},{"title":"Methods","children":[3938,3943,3945,3947,3950,3953,3955,3957,3960]}],"sources":[{"fileName":"packages/web/src/screenplay/models/BrowsingSession.ts","line":14,"character":22}],"typeParameters":[{"id":3962,"name":"Page_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":4302,"name":"Page","package":"@serenity-js/web"}}],"permalink":"/api/web/class/BrowsingSession","categories":[],"previousId":3928,"nextId":3963},{"id":3963,"name":"Cookie","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"A Screenplay Pattern-style model responsible for managing cookies available to the current ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/).\\n\\n## Checking if a cookie exists\\n\\n"},{"kind":"code","text":"```typescript\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Navigate, Cookie } from \'@serenity-js/web\'\\nimport { Ensure, isPresent } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Sid\')\\n  .attemptsTo(\\n    Navigate.to(\'https://example.org\'),\\n\\n    Ensure.that(\\n      Cookie.called(\'example-cookie-name\'),\\n      isPresent()\\n    ),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Setting a cookie\\n\\n"},{"kind":"code","text":"```typescript\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Navigate, Cookie } from \'@serenity-js/web\'\\nimport { Ensure, isPresent, not } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Sid\')\\n  .attemptsTo(\\n    Navigate.to(\'https://example.org\'),\\n\\n    Ensure.that(Cookie.called(\'example-cookie-name\'), not(isPresent())),\\n\\n    Cookie.set({\\n      name:  \'favourite\',\\n      value: \'triple chocolate\',\\n    }),\\n\\n    Ensure.that(Cookie.called(\'example-cookie-name\'), isPresent()),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Reading a cookie\\n\\n"},{"kind":"code","text":"```typescript\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Navigate, Cookie } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Sid\')\\n  .attemptsTo(\\n    Navigate.to(\'https://example.org\'),\\n\\n    Ensure.that(\\n      Cookie.called(\'some-cookie-name\').value(),\\n      equals(\'triple chocolate\')\\n    ),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`CookieData`"},{"kind":"text","text":"](/api/web/interface/CookieData/)\\n- ["},{"kind":"code","text":"`Page.cookie`"},{"kind":"text","text":"](/api/web/class/Page/#cookie)"}]},"children":[{"id":3964,"name":"called","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":84,"character":11}],"signatures":[{"id":3965,"name":"called","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates a ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter) that resolves to ["},{"kind":"code","text":"`Cookie`"},{"kind":"text","text":"](/api/web/class/Cookie/) identified by "},{"kind":"code","text":"`name`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":84,"character":11}],"parameters":[{"id":3966,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"reference","target":3963,"name":"Cookie","package":"@serenity-js/web"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":3967,"name":"set","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":102,"character":11}],"signatures":[{"id":3968,"name":"set","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Sets a cookie for the current ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/). Note that ["},{"kind":"code","text":"`CookieData`"},{"kind":"text","text":"](/api/web/interface/CookieData/) can be either a plain-old JavaScript object, or an ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable) ["},{"kind":"code","text":"`WithAnswerableProperties`"},{"kind":"text","text":"](/api/core/#WithAnswerableProperties).\\n\\n:::info\\nMake sure that the actor performing this interaction is on the page that should receive the cookie.\\nBecause of browser security restrictions, an actor can\'t set a cookie for an arbitrary page without being on that page.\\n:::"}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":102,"character":11}],"parameters":[{"id":3969,"name":"cookieData","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reflection","declaration":{"id":3970,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3971,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The name of the cookie."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/CookieData.ts","line":18,"character":4}],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":3972,"name":"value","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The value of the cookie."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/CookieData.ts","line":23,"character":4}],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":3973,"name":"domain","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The domain this cookie is visible to.\\n\\nDefaults to the current browsing context\'s document\'s URL when setting a cookie."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/CookieData.ts","line":30,"character":4}],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":3974,"name":"path","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The cookie path. Defaults to \\"/\\" when adding a cookie."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/CookieData.ts","line":35,"character":4}],"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":3975,"name":"expiry","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The [timestamp](/api/core/class/Timestamp/) describing the point in time when this cookie expires."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/CookieData.ts","line":40,"character":4}],"type":{"type":"reflection","declaration":{"id":3976,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3977,"name":"value","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/lib/screenplay/time/models/Timestamp.ts","line":16,"character":13}],"type":{"type":"reflection","declaration":{"id":3978,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":4022,"name":"[toPrimitive]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3979,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3980,"name":"toDateString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3981,"name":"toTimeString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3982,"name":"toLocaleString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3983,"name":"toLocaleDateString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3984,"name":"toLocaleTimeString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3985,"name":"valueOf","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3986,"name":"getTime","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3987,"name":"getFullYear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3988,"name":"getUTCFullYear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3989,"name":"getMonth","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3990,"name":"getUTCMonth","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3991,"name":"getDate","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3992,"name":"getUTCDate","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3993,"name":"getDay","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3994,"name":"getUTCDay","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3995,"name":"getHours","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3996,"name":"getUTCHours","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3997,"name":"getMinutes","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3998,"name":"getUTCMinutes","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3999,"name":"getSeconds","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":4000,"name":"getUTCSeconds","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":4001,"name":"getMilliseconds","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":4002,"name":"getUTCMilliseconds","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":4003,"name":"getTimezoneOffset","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":4004,"name":"setTime","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":4005,"name":"setMilliseconds","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":4006,"name":"setUTCMilliseconds","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":4007,"name":"setSeconds","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":4008,"name":"setUTCSeconds","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":4009,"name":"setMinutes","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":4010,"name":"setUTCMinutes","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":4011,"name":"setHours","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":4012,"name":"setUTCHours","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":4013,"name":"setDate","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":4014,"name":"setUTCDate","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":4015,"name":"setMonth","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":4016,"name":"setUTCMonth","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":4017,"name":"setFullYear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":4018,"name":"setUTCFullYear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":4019,"name":"toUTCString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":4020,"name":"toISOString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":4021,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[4022,3979,3980,3981,3982,3983,3984,3985,3986,3987,3988,3989,3990,3991,3992,3993,3994,3995,3996,3997,3998,3999,4000,4001,4002,4003,4004,4005,4006,4007,4008,4009,4010,4011,4012,4013,4014,4015,4016,4017,4018,4019,4020,4021]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":4023,"name":"diff","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/time/models/Timestamp.ts","line":22,"character":4}]},{"id":4024,"name":"plus","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/time/models/Timestamp.ts","line":23,"character":4}]},{"id":4025,"name":"less","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/time/models/Timestamp.ts","line":24,"character":4}]},{"id":4026,"name":"isBefore","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/time/models/Timestamp.ts","line":25,"character":4}]},{"id":4027,"name":"isBeforeOrEqual","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/time/models/Timestamp.ts","line":26,"character":4}]},{"id":4028,"name":"isAfter","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/time/models/Timestamp.ts","line":27,"character":4}]},{"id":4029,"name":"isAfterOrEqual","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/time/models/Timestamp.ts","line":28,"character":4}]},{"id":4030,"name":"toMilliseconds","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/time/models/Timestamp.ts","line":29,"character":4}]},{"id":4031,"name":"toSeconds","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/time/models/Timestamp.ts","line":30,"character":4}]},{"id":4032,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/time/models/Timestamp.ts","line":31,"character":4}]},{"id":4033,"name":"toISOString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/time/models/Timestamp.ts","line":32,"character":4}]},{"id":4034,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/time/models/Timestamp.ts","line":33,"character":4}]},{"id":4035,"name":"[custom]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/time/models/Timestamp.ts","line":34,"character":4}]},{"id":4036,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Properties","children":[3977]},{"title":"Methods","children":[4023,4024,4025,4026,4027,4028,4029,4030,4031,4032,4033,4034,4035,4036]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":4037,"name":"httpOnly","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether the cookie is an HTTP-only cookie.\\nDefaults to "},{"kind":"code","text":"`false`"},{"kind":"text","text":" when adding a new cookie."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/CookieData.ts","line":46,"character":4}],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":4038,"name":"secure","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether the cookie is a secure cookie.\\nDefaults to "},{"kind":"code","text":"`false`"},{"kind":"text","text":" when adding a new cookie."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/CookieData.ts","line":52,"character":4}],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":4039,"name":"sameSite","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether the cookie applies to a "},{"kind":"code","text":"`SameSite`"},{"kind":"text","text":" policy.\\nDefaults to "},{"kind":"code","text":"`None`"},{"kind":"text","text":" if omitted when adding a cookie."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/CookieData.ts","line":58,"character":4}],"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"Lax"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"Strict"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":706,"typeArguments":[{"type":"literal","value":"None"}],"name":"Answerable","package":"@serenity-js/core"}]}}],"groups":[{"title":"Properties","children":[3971,3972,3973,3974,3975,4037,4038,4039]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":4040,"name":"deleteAll","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":127,"character":11}],"signatures":[{"id":4041,"name":"deleteAll","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates an [interaction](/api/core/class/Interaction/) to delete all cookies available to the current ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/).."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":127,"character":11}],"type":{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":4047,"name":"name","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":143,"character":4}],"signatures":[{"id":4048,"name":"name","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the name of this cookie."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":143,"character":4}],"type":{"type":"intrinsic","name":"string"}}]},{"id":4049,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":153,"character":10}],"signatures":[{"id":4050,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Checks if a given cookie is set.\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Optional`"},{"kind":"text","text":"](/api/core/interface/Optional/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":153,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"implementationOf":{"type":"reference","target":-1,"name":"Optional.isPresent"}}],"implementationOf":{"type":"reference","target":-1,"name":"Optional.isPresent"}},{"id":4051,"name":"value","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":170,"character":10}],"signatures":[{"id":4052,"name":"value","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the value of a given cookie."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":170,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4053,"name":"path","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":178,"character":10}],"signatures":[{"id":4054,"name":"path","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the path of a given cookie, if any was set."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":178,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4055,"name":"domain","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":186,"character":10}],"signatures":[{"id":4056,"name":"domain","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the domain of a given cookie, if any was set."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":186,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4057,"name":"isHttpOnly","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":197,"character":10}],"signatures":[{"id":4058,"name":"isHttpOnly","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Checks if a given cookie is HTTP-only.\\n\\n#### Learn more\\n- [Mozilla Developer Network: Restricting access to cookies](https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies#restrict_access_to_cookies)"}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":197,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4059,"name":"isSecure","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":208,"character":10}],"signatures":[{"id":4060,"name":"isSecure","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Checks if a given cookie is secure.\\n\\n#### Learn more\\n- [Mozilla Developer Network: Restricting access to cookies](https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies#restrict_access_to_cookies)"}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":208,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4061,"name":"expiry","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":219,"character":10}],"signatures":[{"id":4062,"name":"expiry","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the expiry date of a given cookie\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Timestamp`"},{"kind":"text","text":"](/api/core/class/Timestamp/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":219,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4063,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":227,"character":13}],"signatures":[{"id":4064,"name":"delete","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Deletes a given cookie."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":227,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]}],"groups":[{"title":"Methods","children":[3964,3967,4040,4047,4049,4051,4053,4055,4057,4059,4061,4063]}],"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":77,"character":22}],"implementedTypes":[{"type":"reference","target":954,"name":"Optional","package":"@serenity-js/core"}],"permalink":"/api/web/class/Cookie","categories":[],"previousId":3932,"nextId":4069},{"id":4069,"name":"CookieData","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A data structure describing a ["},{"kind":"code","text":"`Cookie`"},{"kind":"text","text":"](/api/web/class/Cookie/) to be set, or one that\'s been read.\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`Cookie`"},{"kind":"text","text":"](/api/web/class/Cookie/)\\n- ["},{"kind":"code","text":"`Page.cookie`"},{"kind":"text","text":"](/api/web/class/Page/#cookie)"}]},"children":[{"id":4070,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The name of the cookie."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/CookieData.ts","line":18,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":4071,"name":"value","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The value of the cookie."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/CookieData.ts","line":23,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":4072,"name":"domain","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The domain this cookie is visible to.\\n\\nDefaults to the current browsing context\'s document\'s URL when setting a cookie."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/CookieData.ts","line":30,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":4073,"name":"path","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The cookie path. Defaults to \\"/\\" when adding a cookie."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/CookieData.ts","line":35,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":4074,"name":"expiry","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The [timestamp](/api/core/class/Timestamp/) describing the point in time when this cookie expires."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/CookieData.ts","line":40,"character":4}],"type":{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}},{"id":4075,"name":"httpOnly","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether the cookie is an HTTP-only cookie.\\nDefaults to "},{"kind":"code","text":"`false`"},{"kind":"text","text":" when adding a new cookie."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/CookieData.ts","line":46,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":4076,"name":"secure","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether the cookie is a secure cookie.\\nDefaults to "},{"kind":"code","text":"`false`"},{"kind":"text","text":" when adding a new cookie."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/CookieData.ts","line":52,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":4077,"name":"sameSite","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether the cookie applies to a "},{"kind":"code","text":"`SameSite`"},{"kind":"text","text":" policy.\\nDefaults to "},{"kind":"code","text":"`None`"},{"kind":"text","text":" if omitted when adding a cookie."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/CookieData.ts","line":58,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"Lax"},{"type":"literal","value":"Strict"},{"type":"literal","value":"None"}]}}],"groups":[{"title":"Properties","children":[4070,4071,4072,4073,4074,4075,4076,4077]}],"sources":[{"fileName":"packages/web/src/screenplay/models/CookieData.ts","line":13,"character":17}],"permalink":"/api/web/interface/CookieData","categories":[],"previousId":3963,"nextId":4186},{"id":4186,"name":"Key","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Represents keyboard keys that aren\'t text, and that can be used with the [interaction](/api/core/class/Interaction/) to ["},{"kind":"code","text":"`Press`"},{"kind":"text","text":"](/api/web/class/Press/).\\n\\n**Note:** Modifier keys like ["},{"kind":"code","text":"`Key.Shift`"},{"kind":"text","text":"](/api/web/class/Key/#Shift), ["},{"kind":"code","text":"`Key.Alt`"},{"kind":"text","text":"](/api/web/class/Key/#Alt) and ["},{"kind":"code","text":"`Key.Meta`"},{"kind":"text","text":"](/api/web/class/Key/#Meta) (a.k.a. \\"Command\\" on Mac) will stay pressed,\\nso there\'s no need to depress them.\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`Press`"},{"kind":"text","text":"](/api/web/class/Press/)\\n- ["},{"kind":"code","text":"`Page.sendKeys`"},{"kind":"text","text":"](/api/web/class/Page/#sendKeys)\\n- [W3C WebDriver Spec: Keyboard Actions](https://w3c.github.io/webdriver/webdriver-spec.html#keyboard-actions)\\n- [Selenium WebDriver: Inputs](https://github.com/SeleniumHQ/selenium/blob/trunk/javascript/node/selenium-webdriver/lib/input.js#L46)\\n- [WebdriverIO: Constants](https://github.com/webdriverio/webdriverio/blob/main/packages/wdio-utils/src/constants.ts#L5)"}]},"children":[{"id":4187,"name":"Alt","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":18,"character":18}],"type":{"type":"reference","target":4186,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4188,"name":"ArrowDown","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":19,"character":18}],"type":{"type":"reference","target":4186,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4189,"name":"ArrowLeft","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":20,"character":18}],"type":{"type":"reference","target":4186,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4190,"name":"ArrowRight","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":21,"character":18}],"type":{"type":"reference","target":4186,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4191,"name":"ArrowUp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":22,"character":18}],"type":{"type":"reference","target":4186,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4192,"name":"Backspace","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":23,"character":18}],"type":{"type":"reference","target":4186,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4193,"name":"Cancel","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":24,"character":18}],"type":{"type":"reference","target":4186,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4194,"name":"Clear","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":25,"character":18}],"type":{"type":"reference","target":4186,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4195,"name":"Control","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":26,"character":18}],"type":{"type":"reference","target":4186,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4196,"name":"Delete","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":27,"character":18}],"type":{"type":"reference","target":4186,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4197,"name":"End","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":28,"character":18}],"type":{"type":"reference","target":4186,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4198,"name":"Enter","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":29,"character":18}],"type":{"type":"reference","target":4186,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4199,"name":"Escape","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":30,"character":18}],"type":{"type":"reference","target":4186,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4200,"name":"F1","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":31,"character":18}],"type":{"type":"reference","target":4186,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4201,"name":"F2","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":32,"character":18}],"type":{"type":"reference","target":4186,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4202,"name":"F3","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":33,"character":18}],"type":{"type":"reference","target":4186,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4203,"name":"F4","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":34,"character":18}],"type":{"type":"reference","target":4186,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4204,"name":"F5","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":35,"character":18}],"type":{"type":"reference","target":4186,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4205,"name":"F6","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":36,"character":18}],"type":{"type":"reference","target":4186,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4206,"name":"F7","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":37,"character":18}],"type":{"type":"reference","target":4186,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4207,"name":"F8","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":38,"character":18}],"type":{"type":"reference","target":4186,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4208,"name":"F9","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":39,"character":18}],"type":{"type":"reference","target":4186,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4209,"name":"F10","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":40,"character":18}],"type":{"type":"reference","target":4186,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4210,"name":"F11","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":41,"character":18}],"type":{"type":"reference","target":4186,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4211,"name":"F12","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":42,"character":18}],"type":{"type":"reference","target":4186,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4212,"name":"Help","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":43,"character":18}],"type":{"type":"reference","target":4186,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4213,"name":"Home","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":44,"character":18}],"type":{"type":"reference","target":4186,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4214,"name":"Insert","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":45,"character":18}],"type":{"type":"reference","target":4186,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4215,"name":"Meta","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":46,"character":18}],"type":{"type":"reference","target":4186,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4216,"name":"Numpad0","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":47,"character":18}],"type":{"type":"reference","target":4186,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4217,"name":"Numpad1","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":48,"character":18}],"type":{"type":"reference","target":4186,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4218,"name":"Numpad2","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":49,"character":18}],"type":{"type":"reference","target":4186,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4219,"name":"Numpad3","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":50,"character":18}],"type":{"type":"reference","target":4186,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4220,"name":"Numpad4","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":51,"character":18}],"type":{"type":"reference","target":4186,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4221,"name":"Numpad5","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":52,"character":18}],"type":{"type":"reference","target":4186,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4222,"name":"Numpad6","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":53,"character":18}],"type":{"type":"reference","target":4186,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4223,"name":"Numpad7","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":54,"character":18}],"type":{"type":"reference","target":4186,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4224,"name":"Numpad8","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":55,"character":18}],"type":{"type":"reference","target":4186,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4225,"name":"Numpad9","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":56,"character":18}],"type":{"type":"reference","target":4186,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4226,"name":"NumpadAdd","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":57,"character":18}],"type":{"type":"reference","target":4186,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4227,"name":"NumpadDecimal","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":58,"character":18}],"type":{"type":"reference","target":4186,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4228,"name":"NumpadDivide","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":59,"character":18}],"type":{"type":"reference","target":4186,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4229,"name":"NumpadEqual","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":60,"character":18}],"type":{"type":"reference","target":4186,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4230,"name":"NumpadMultiply","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":61,"character":18}],"type":{"type":"reference","target":4186,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4231,"name":"NumpadSubtract","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":62,"character":18}],"type":{"type":"reference","target":4186,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4232,"name":"PageDown","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":63,"character":18}],"type":{"type":"reference","target":4186,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4233,"name":"PageUp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":64,"character":18}],"type":{"type":"reference","target":4186,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4234,"name":"Pause","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":65,"character":18}],"type":{"type":"reference","target":4186,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4235,"name":"Semicolon","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":66,"character":18}],"type":{"type":"reference","target":4186,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4236,"name":"Shift","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":67,"character":18}],"type":{"type":"reference","target":4186,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4237,"name":"Space","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":68,"character":18}],"type":{"type":"reference","target":4186,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4238,"name":"Tab","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":69,"character":18}],"type":{"type":"reference","target":4186,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4239,"name":"isKey","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":71,"character":18}],"signatures":[{"id":4240,"name":"isKey","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":71,"character":18}],"parameters":[{"id":4241,"name":"maybeKey","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"maybeKey","asserts":false,"targetType":{"type":"reference","target":4186,"name":"Key","package":"@serenity-js/web"}}}]},{"id":4242,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":76,"character":4}],"signatures":[{"id":4243,"name":"new Key","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":76,"character":4}],"parameters":[{"id":4244,"name":"devtoolsName","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":4245,"name":"utf16codePoint","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":4246,"name":"isModifier","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"}],"type":{"type":"reference","target":4186,"name":"Key","package":"@serenity-js/web"}}]},{"id":4247,"name":"devtoolsName","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":77,"character":24}],"type":{"type":"intrinsic","name":"string"}},{"id":4248,"name":"utf16codePoint","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":78,"character":24}],"type":{"type":"intrinsic","name":"string"}},{"id":4249,"name":"isModifier","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":79,"character":24}],"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"},{"id":4250,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":83,"character":4}],"signatures":[{"id":4251,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":83,"character":4}],"type":{"type":"intrinsic","name":"string"}}]}],"groups":[{"title":"Constructors","children":[4242]},{"title":"Properties","children":[4187,4188,4189,4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,4220,4221,4222,4223,4224,4225,4226,4227,4228,4229,4230,4231,4232,4233,4234,4235,4236,4237,4238,4247,4248,4249]},{"title":"Methods","children":[4239,4250]}],"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":17,"character":13}],"permalink":"/api/web/class/Key","categories":[],"previousId":4069,"nextId":4252},{"id":4252,"name":"Locator","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"["},{"kind":"code","text":"`Locator`"},{"kind":"text","text":"](/api/web/class/Locator/) uses a ["},{"kind":"code","text":"`Selector`"},{"kind":"text","text":"](/api/web/class/Selector/) to locate a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) or ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElements/)\\nwithin the ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/).\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`RootLocator`"},{"kind":"text","text":"](/api/web/class/RootLocator/)\\n- ["},{"kind":"code","text":"`Page.locate`"},{"kind":"text","text":"](/api/web/class/Page/#locate)\\n- ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)\\n- ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElements/)"}]},"children":[{"id":4260,"name":"selector","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":26,"character":24}],"type":{"type":"reference","target":4853,"name":"Selector","package":"@serenity-js/web"}},{"id":4261,"name":"nativeElement","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":31,"character":20}],"signatures":[{"id":4262,"name":"nativeElement","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":31,"character":20}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4300,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Locator.Native_Element_Type","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":4723,"name":"RootLocator.nativeElement"}}],"overwrites":{"type":"reference","target":4722,"name":"RootLocator.nativeElement"}},{"id":4263,"name":"allNativeElements","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":32,"character":20}],"signatures":[{"id":4264,"name":"allNativeElements","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":32,"character":20}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4300,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Locator.Native_Element_Type","refersToTypeParameter":true}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4265,"name":"switchToFrame","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":34,"character":10}],"signatures":[{"id":4266,"name":"switchToFrame","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":34,"character":10}],"parameters":[{"id":4267,"name":"element","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4300,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Locator.Native_Element_Type","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":4714,"name":"RootLocator.switchToFrame"}}],"overwrites":{"type":"reference","target":4713,"name":"RootLocator.switchToFrame"}},{"id":4268,"name":"switchToParentFrame","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":38,"character":10}],"signatures":[{"id":4269,"name":"switchToParentFrame","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":38,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":4717,"name":"RootLocator.switchToParentFrame"}}],"overwrites":{"type":"reference","target":4716,"name":"RootLocator.switchToParentFrame"}},{"id":4270,"name":"switchToMainFrame","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":42,"character":10}],"signatures":[{"id":4271,"name":"switchToMainFrame","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":42,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":4719,"name":"RootLocator.switchToMainFrame"}}],"overwrites":{"type":"reference","target":4718,"name":"RootLocator.switchToMainFrame"}},{"id":4274,"name":"of","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":48,"character":13}],"signatures":[{"id":4275,"name":"of","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":48,"character":13}],"parameters":[{"id":4276,"name":"parent","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4709,"typeArguments":[{"type":"reference","target":4300,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Locator.Native_Element_Type","refersToTypeParameter":true}],"name":"RootLocator","package":"@serenity-js/web"}}],"type":{"type":"reference","target":4252,"typeArguments":[{"type":"reference","target":4300,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Locator.Native_Element_Type","refersToTypeParameter":true},{"type":"intrinsic","name":"any"}],"name":"Locator","package":"@serenity-js/web"}}]},{"id":4277,"name":"closestTo","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":49,"character":13}],"signatures":[{"id":4278,"name":"closestTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":49,"character":13}],"parameters":[{"id":4279,"name":"child","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4252,"typeArguments":[{"type":"reference","target":4300,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Locator.Native_Element_Type","refersToTypeParameter":true},{"type":"intrinsic","name":"any"}],"name":"Locator","package":"@serenity-js/web"}}],"type":{"type":"reference","target":4252,"typeArguments":[{"type":"reference","target":4300,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Locator.Native_Element_Type","refersToTypeParameter":true},{"type":"intrinsic","name":"any"}],"name":"Locator","package":"@serenity-js/web"}}]},{"id":4280,"name":"locate","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":50,"character":13}],"signatures":[{"id":4281,"name":"locate","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":50,"character":13}],"parameters":[{"id":4282,"name":"child","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4252,"typeArguments":[{"type":"reference","target":4300,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Locator.Native_Element_Type","refersToTypeParameter":true},{"type":"intrinsic","name":"any"}],"name":"Locator","package":"@serenity-js/web"}}],"type":{"type":"reference","target":4252,"typeArguments":[{"type":"reference","target":4300,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Locator.Native_Element_Type","refersToTypeParameter":true},{"type":"intrinsic","name":"any"}],"name":"Locator","package":"@serenity-js/web"}}]},{"id":4286,"name":"element","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":77,"character":13}],"signatures":[{"id":4287,"name":"element","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":77,"character":13}],"type":{"type":"reference","target":4418,"typeArguments":[{"type":"reference","target":4300,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Locator.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}}]},{"id":4288,"name":"allElements","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":79,"character":13}],"signatures":[{"id":4289,"name":"allElements","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":79,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4418,"typeArguments":[{"type":"reference","target":4300,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Locator.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4290,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":81,"character":4}],"signatures":[{"id":4291,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":81,"character":4}],"type":{"type":"intrinsic","name":"string"},"overwrites":{"type":"reference","target":4725,"name":"RootLocator.toString"}}],"overwrites":{"type":"reference","target":4724,"name":"RootLocator.toString"}},{"id":4292,"name":"[custom]","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Custom [Node.js inspection method](https://nodejs.org/api/util.html#utilinspectcustom)."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":88,"character":4}],"type":{"type":"reflection","declaration":{"id":4293,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/io/inspectedObject.ts","line":2,"character":84}],"signatures":[{"id":4294,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/io/inspectedObject.ts","line":2,"character":84}],"parameters":[{"id":4295,"name":"depth","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}},{"id":4296,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/util.d.ts","qualifiedName":"\\"util\\".InspectOptionsStylized"},"name":"InspectOptionsStylized","package":"@types/node","qualifiedName":"\\"util\\".InspectOptionsStylized"}},{"id":4297,"name":"inspect","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"query","queryType":{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/util.d.ts","qualifiedName":"\\"util\\".inspect"},"name":"inspect","package":"@types/node","qualifiedName":"\\"util\\".inspect","preferValues":true}}}],"type":{"type":"intrinsic","name":"string"}}]}},"defaultValue":"...","overwrites":{"type":"reference","target":4726,"name":"RootLocator.[custom]"}},{"id":4298,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/RootLocator.ts","line":21,"character":20}],"signatures":[{"id":4299,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/RootLocator.ts","line":21,"character":20}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":4721,"name":"RootLocator.isPresent"}}],"inheritedFrom":{"type":"reference","target":4720,"name":"RootLocator.isPresent"}}],"groups":[{"title":"Properties","children":[4260,4292]},{"title":"Methods","children":[4261,4263,4265,4268,4270,4274,4277,4280,4286,4288,4290,4298]}],"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":21,"character":22}],"typeParameters":[{"id":4300,"name":"Native_Element_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":4301,"name":"Native_Selector_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"any"}}],"extendedTypes":[{"type":"reference","target":4709,"typeArguments":[{"type":"reference","target":4300,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Locator.Native_Element_Type","refersToTypeParameter":true}],"name":"RootLocator","package":"@serenity-js/web"}],"permalink":"/api/web/class/Locator","categories":[],"previousId":4186,"nextId":4302},{"id":4302,"name":"Page","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"Serenity/JS Screenplay Pattern-style model that enables interactions with a Web page\\nrendered in a Web browser tab.\\n\\n## Referring to the current page\\n\\n"},{"kind":"code","text":"```ts\\nimport { Ensure, endsWith } from \'@serenity-js/assertions\'\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Navigate, Page } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Serena\').attemptsTo(\\n  Navigate.to(\'https://serenity-js.org\'),\\n  Ensure.that(Page.current().title(), endsWith(\'Serenity/JS\')),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Switching to another open page\\n\\n"},{"kind":"code","text":"```ts\\nimport { Ensure, equals, includes, startsWith } from \'@serenity-js/assertions\'\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Navigate, Page, Switch, Text } from \'@serenity-js/web\'\\n\\nconst Navigation = {\\n  linkTo = (name: Answerable<string>) =>\\n    PageElements.located(By.css(\'nav a\'))\\n      .where(Text, includes(name))\\n      .first()\\n}\\n\\nawait actorCalled(\'Serena\').attemptsTo(\\n  Navigate.to(\'https://serenity-js.org\'),\\n  Click.on(Navigation.linkTo(\'GitHub\')),\\n\\n  Switch.to(Page.whichUrl(startsWith(\'https://github.com\')))\\n\\n  Ensure.that(\\n    Page.current().url().href,\\n    equals(\'https://github.com/serenity-js/serenity-js\')\\n  ),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Retrieving information about another open page\\n\\nYou can retrieve information about another open page without having to explicitly switch to it:\\n\\n"},{"kind":"code","text":"```ts\\nimport { Ensure, equals, includes, startsWith } from \'@serenity-js/assertions\'\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Navigate, Page, Text } from \'@serenity-js/web\'\\n\\nconst Navigation = {\\n  linkTo = (name: Answerable<string>) =>\\n    PageElements.located(By.css(\'nav a\'))\\n      .where(Text, includes(name))\\n      .first()\\n}\\n\\nawait actorCalled(\'Serena\').attemptsTo(\\n  Navigate.to(\'https://serenity-js.org\'),\\n  Click.on(Navigation.linkTo(\'GitHub\')),\\n  Ensure.that(\\n    Page.whichUrl(startsWith(\'https://github.com\')).url().href,\\n    equals(\'https://github.com/serenity-js/serenity-js\')\\n  ),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Performing activities in the context of another page\\n\\n"},{"kind":"code","text":"```ts\\nimport { Ensure, equals, includes, startsWith } from \'@serenity-js/assertions\'\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Navigate, Page, Text } from \'@serenity-js/web\'\\n\\nconst Navigation = {\\n  linkTo = (name: Answerable<string>) =>\\n    PageElements.located(By.css(\'nav a\'))\\n      .where(Text, includes(name))\\n      .first()\\n}\\n\\nawait actorCalled(\'Serena\').attemptsTo(\\n\\n  // Serenity/JS GitHub repository opens in a new browser tab\\n  Navigate.to(\'https://serenity-js.org\'),\\n  Click.on(Navigation.linkTo(\'GitHub\')),\\n\\n  // Switch to the newly opened page and perform an assertion\\n  Switch.to(Page.whichUrl(startsWith(\'https://github.com\')))\\n    .and(\\n      Ensure.that(\\n        Page.current().url().href,\\n        equals(\'https://github.com/serenity-js/serenity-js\')\\n      )\\n    ),\\n  // Automatically switch back to the original page\\n\\n  Ensure.that(Page.current().url().href, equals(\'https://serenity-js.org\'),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\n- ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)\\n- ["},{"kind":"code","text":"`Optional`"},{"kind":"text","text":"](/api/core/interface/Optional/)\\n- ["},{"kind":"code","text":"`Switchable`"},{"kind":"text","text":"](/api/web/interface/Switchable/)"}]},"children":[{"id":4303,"name":"current","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":138,"character":11}],"signatures":[{"id":4304,"name":"current","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates a ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter) representing the currently active ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/)."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":138,"character":11}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"reference","target":4302,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Page","package":"@serenity-js/web"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":4305,"name":"whichName","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":162,"character":11}],"signatures":[{"id":4306,"name":"whichName","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates a ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter) that resolves to a ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/) which ["},{"kind":"code","text":"`Page.name`"},{"kind":"text","text":"](/api/web/class/Page/#name)\\nmeets the [expectation](/api/core/class/Expectation/).\\n\\n#### Switching to a page with the desired name\\n\\n"},{"kind":"code","text":"```ts\\nimport { includes } from \'@serenity-js/assertions\'\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Switch } from \'@serenity-js/web\'\\n\\nactorCalled(\'Bernie\').attemptsTo(\\n  Switch.to(Page.whichName(includes(`photo-gallery`))),\\n)\\n```"}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":162,"character":11}],"parameters":[{"id":4307,"name":"expectation","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1156,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Expectation","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"reference","target":4302,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Page","package":"@serenity-js/web"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":4308,"name":"whichTitle","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":192,"character":11}],"signatures":[{"id":4309,"name":"whichTitle","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates a ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter) that resolves to a ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/) which ["},{"kind":"code","text":"`Page.title`"},{"kind":"text","text":"](/api/web/class/Page/#title)\\nmeets the [expectation](/api/core/class/Expectation/).\\n\\n#### Switching to a page with the desired title\\n\\n"},{"kind":"code","text":"```ts\\nimport { includes } from \'@serenity-js/assertions\'\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Switch } from \'@serenity-js/web\'\\n\\nactorCalled(\'Bernie\').attemptsTo(\\n  Switch.to(Page.whichTitle(includes(`Summer collection`))),\\n)\\n```"}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":192,"character":11}],"parameters":[{"id":4310,"name":"expectation","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1156,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Expectation","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"reference","target":4302,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Page","package":"@serenity-js/web"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":4311,"name":"whichUrl","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":222,"character":11}],"signatures":[{"id":4312,"name":"whichUrl","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates a ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter) that resolves to a ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/) which ["},{"kind":"code","text":"`Page.url`"},{"kind":"text","text":"](/api/web/class/Page/#url)\\nmeets the [expectation](/api/core/class/Expectation/).\\n\\n#### Switching to a page with the desired URL\\n\\n"},{"kind":"code","text":"```ts\\nimport { endsWith } from \'@serenity-js/assertions\'\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Switch } from \'@serenity-js/web\'\\n\\nactorCalled(\'Bernie\').attemptsTo(\\n  Switch.to(Page.whichUrl(endsWith(`/gallery.html`))),\\n)\\n```"}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":222,"character":11}],"parameters":[{"id":4313,"name":"expectation","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1156,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Expectation","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"reference","target":4302,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Page","package":"@serenity-js/web"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":4322,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":248,"character":4}],"signatures":[{"id":4323,"name":"new Page","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":248,"character":4}],"typeParameter":[{"id":4324,"name":"Native_Element_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"any"}}],"parameters":[{"id":4325,"name":"session","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":3932,"typeArguments":[{"type":"reference","target":4302,"typeArguments":[{"type":"reference","target":4324,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Page.Native_Element_Type","refersToTypeParameter":true}],"name":"Page","package":"@serenity-js/web"}],"name":"BrowsingSession","package":"@serenity-js/web"}},{"id":4326,"name":"rootLocator","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4709,"typeArguments":[{"type":"reference","target":4324,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Page.Native_Element_Type","refersToTypeParameter":true}],"name":"RootLocator","package":"@serenity-js/web"}},{"id":4327,"name":"modalDialogHandler","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4170,"name":"ModalDialogHandler","package":"@serenity-js/web"}},{"id":4328,"name":"id","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}],"type":{"type":"reference","target":4302,"typeArguments":[{"type":"reference","target":4324,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Page.Native_Element_Type","refersToTypeParameter":true}],"name":"Page","package":"@serenity-js/web"}}]},{"id":4332,"name":"id","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":252,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":4333,"name":"createPageElement","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":265,"character":13}],"signatures":[{"id":4334,"name":"createPageElement","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) wrapping a native element."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":265,"character":13}],"parameters":[{"id":4335,"name":"nativeElement","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4324,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Page.Native_Element_Type","refersToTypeParameter":true}}],"type":{"type":"reference","target":4418,"typeArguments":[{"type":"reference","target":4324,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Page.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}}]},{"id":4336,"name":"locate","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":272,"character":13}],"signatures":[{"id":4337,"name":"locate","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/), retrieving an element located by ["},{"kind":"code","text":"`Selector`"},{"kind":"text","text":"](/api/web/class/Selector/)."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":272,"character":13}],"parameters":[{"id":4338,"name":"selector","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4853,"name":"Selector","package":"@serenity-js/web"}}],"type":{"type":"reference","target":4418,"typeArguments":[{"type":"reference","target":4324,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Page.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}}]},{"id":4339,"name":"locateAll","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":280,"character":13}],"signatures":[{"id":4340,"name":"locateAll","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElements/), retrieving a collection of elements located by ["},{"kind":"code","text":"`Selector`"},{"kind":"text","text":"](/api/web/class/Selector/)."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":280,"character":13}],"parameters":[{"id":4341,"name":"selector","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4853,"name":"Selector","package":"@serenity-js/web"}}],"type":{"type":"reference","target":4494,"typeArguments":[{"type":"reference","target":4324,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Page.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElements","package":"@serenity-js/web"}}]},{"id":4342,"name":"navigateTo","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":295,"character":13}],"signatures":[{"id":4343,"name":"navigateTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Navigate to a given destination, specified as an absolute URL\\nor a path relative to any base URL configured in your web test integration tool.\\n\\n#### Learn more\\n\\n- [WebdriverIO: Configuration Options](https://webdriver.io/docs/options/#baseurl)\\n- [Playwright: Browser](https://playwright.dev/docs/api/class-browser#browser-new-context)\\n- [Playwright: Test Options](https://playwright.dev/docs/api/class-testoptions#test-options-base-url)\\n- [Protractor: Configuration](https://github.com/angular/protractor/blob/master/lib/config.ts)"}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":295,"character":13}],"parameters":[{"id":4344,"name":"destination","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4345,"name":"navigateBack","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":304,"character":13}],"signatures":[{"id":4346,"name":"navigateBack","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Causes the browser to traverse one step backward in the joint session history\\nof the current ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/) (the current top-level browsing context).\\n\\nThis is equivalent to pressing the back button in the browser UI,\\nor calling ["},{"kind":"code","text":"`window.history.back`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/API/History/back)."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":304,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4347,"name":"navigateForward","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":313,"character":13}],"signatures":[{"id":4348,"name":"navigateForward","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Causes the browser to traverse one step forward in the joint session history\\nof the current ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/) (the current top-level browsing context).\\n\\nThis is equivalent to pressing the back button in the browser UI,\\nor calling ["},{"kind":"code","text":"`window.history.forward`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/API/History/forward)."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":313,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4349,"name":"reload","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":318,"character":13}],"signatures":[{"id":4350,"name":"reload","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Causes the browser to reload the ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/) in the current top-level browsing context."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":318,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4351,"name":"sendKeys","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":326,"character":13}],"signatures":[{"id":4352,"name":"sendKeys","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Send a sequence of ["},{"kind":"code","text":"`Key`"},{"kind":"text","text":"](/api/web/class/Key/) strokes to the active element."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":326,"character":13}],"parameters":[{"id":4353,"name":"keys","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Keys to enter"}]},"type":{"type":"array","elementType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":4186,"name":"Key","package":"@serenity-js/web"}]}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4354,"name":"executeScript","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":371,"character":13}],"signatures":[{"id":4355,"name":"executeScript","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Schedules a command to execute JavaScript in the context of the currently selected frame or window.\\n\\nThe script fragment will be executed as the body of an anonymous function.\\nIf the script is provided as a function object, that function will be converted to a string for injection\\ninto the target window.\\n\\nAny arguments provided in addition to the script will be included as script arguments and may be referenced\\nusing the "},{"kind":"code","text":"`arguments`"},{"kind":"text","text":" object. Arguments may be a "},{"kind":"code","text":"`boolean`"},{"kind":"text","text":", "},{"kind":"code","text":"`number`"},{"kind":"text","text":", "},{"kind":"code","text":"`string`"},{"kind":"text","text":" or "},{"kind":"code","text":"`WebElement`"},{"kind":"text","text":".\\nArrays and objects may also be used as script arguments as long as each item adheres\\nto the types previously mentioned.\\n\\nThe script may refer to any variables accessible from the current window.\\nFurthermore, the script will execute in the window\'s context, thus "},{"kind":"code","text":"`document`"},{"kind":"text","text":" may be used to refer\\nto the current document. Any local variables will not be available once the script has finished executing,\\nthough global variables will persist.\\n\\nIf the script has a return value (i.e. if the script contains a "},{"kind":"code","text":"`return`"},{"kind":"text","text":" statement),\\nthen the following steps will be taken for resolving this functions return value:\\n\\n- For a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/), the value will resolve to a [HTMLElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement)\\n- "},{"kind":"code","text":"`null`"},{"kind":"text","text":" and "},{"kind":"code","text":"`undefined`"},{"kind":"text","text":" return values will resolve to "},{"kind":"code","text":"`null`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`boolean`"},{"kind":"text","text":", "},{"kind":"code","text":"`number`"},{"kind":"text","text":", and "},{"kind":"code","text":"`string`"},{"kind":"text","text":" values will resolve as is\\n- Functions will resolve to their string representation\\n- For arrays and objects, each member item will be converted according to the rules above\\n\\n#### Use injected JavaScript to retrieve information about a HTMLElement\\n\\n"},{"kind":"code","text":"```ts\\nBrowseTheWeb.as(actor).executeAsyncScript(`\\n  return arguments[0].tagName;\\n`, PageElement.located(By.css(\'h1\')).describedAs(\'header\'))\\n\\n// returns a Promise that resolves to \'h1\'\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- [Selenium WebDriver: JavaScript Executor](https://seleniumhq.github.io/selenium/docs/api/java/org/openqa/selenium/JavascriptExecutor.html#executeAsyncScript-java.lang.String-java.lang.Object...-)\\n- ["},{"kind":"code","text":"`Page.lastScriptExecutionResult`"},{"kind":"text","text":"](/api/web/class/Page/#lastScriptExecutionResult)"}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":371,"character":13}],"typeParameter":[{"id":4356,"name":"Result","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":4357,"name":"InnerArguments","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"parameters":[{"id":4358,"name":"script","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reflection","declaration":{"id":4359,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":372,"character":26}],"signatures":[{"id":4360,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":372,"character":26}],"parameters":[{"id":4361,"name":"parameters","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"reference","target":4357,"name":"InnerArguments","package":"@serenity-js/web","refersToTypeParameter":true}}],"type":{"type":"reference","target":4356,"name":"Result","package":"@serenity-js/web","refersToTypeParameter":true}}]}}]}},{"id":4362,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"reference","target":4357,"name":"InnerArguments","package":"@serenity-js/web","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4356,"name":"Result","package":"@serenity-js/web","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4363,"name":"executeAsyncScript","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":431,"character":13}],"signatures":[{"id":4364,"name":"executeAsyncScript","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Schedules a command to execute asynchronous JavaScript in the context of the currently selected frame or window.\\n\\nThe script fragment will be executed as the body of an anonymous function.\\nIf the script is provided as a function object, that function will be converted to a string for injection\\ninto the target window.\\n\\nAny arguments provided in addition to the script will be included as script arguments and may be referenced\\nusing the "},{"kind":"code","text":"`arguments`"},{"kind":"text","text":" object. Arguments may be a "},{"kind":"code","text":"`boolean`"},{"kind":"text","text":", "},{"kind":"code","text":"`number`"},{"kind":"text","text":", "},{"kind":"code","text":"`string`"},{"kind":"text","text":" or "},{"kind":"code","text":"`WebElement`"},{"kind":"text","text":"\\nArrays and objects may also be used as script arguments as long as each item adheres\\nto the types previously mentioned.\\n\\nUnlike executing synchronous JavaScript with ["},{"kind":"code","text":"`Page.executeScript`"},{"kind":"text","text":"](/api/web/class/Page/#executeScript),\\nscripts executed with this function must explicitly signal they are finished by invoking the provided callback.\\n\\nThis callback will always be injected into the executed function as the last argument,\\nand thus may be referenced with "},{"kind":"code","text":"`arguments[arguments.length - 1]`"},{"kind":"text","text":".\\n\\nThe following steps will be taken for resolving this functions return value against\\nthe first argument to the script\'s callback function:\\n\\n- For a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/), the value will resolve to a [HTMLElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement)\\n- "},{"kind":"code","text":"`null`"},{"kind":"text","text":" and "},{"kind":"code","text":"`undefined`"},{"kind":"text","text":" return values will resolve to "},{"kind":"code","text":"`null`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`boolean`"},{"kind":"text","text":", "},{"kind":"code","text":"`number`"},{"kind":"text","text":", and "},{"kind":"code","text":"`string`"},{"kind":"text","text":" values will resolve as is\\n- Functions will resolve to their string representation\\n- For arrays and objects, each member item will be converted according to the rules above\\n\\n#### Perform a sleep in the browser under test>\\n\\n"},{"kind":"code","text":"```ts\\nBrowseTheWeb.as(actor).executeAsyncScript(`\\n  var delay    = arguments[0];\\n  var callback = arguments[arguments.length - 1];\\n\\n  window.setTimeout(callback, delay);\\n`, 500)\\n```"},{"kind":"text","text":"\\n\\n#### Return a value asynchronously\\n\\n"},{"kind":"code","text":"```ts\\nBrowseTheWeb.as(actor).executeAsyncScript(`\\n  var callback = arguments[arguments.length - 1];\\n\\n  callback(\'some return value\')\\n`).then(value => doSomethingWithThe(value))\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- [Selenium WebDriver: JavaScript Executor](https://seleniumhq.github.io/selenium/docs/api/java/org/openqa/selenium/JavascriptExecutor.html#executeAsyncScript-java.lang.String-java.lang.Object...-)\\n- ["},{"kind":"code","text":"`Page.lastScriptExecutionResult`"},{"kind":"text","text":"](/api/web/class/Page/#lastScriptExecutionResult)"}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":431,"character":13}],"typeParameter":[{"id":4365,"name":"Result","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":4366,"name":"Parameters","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"parameters":[{"id":4367,"name":"script","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reflection","declaration":{"id":4368,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":432,"character":26}],"signatures":[{"id":4369,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":432,"character":26}],"parameters":[{"id":4370,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"tuple","elements":[{"type":"rest","elementType":{"type":"namedTupleMember","name":"parameters","isOptional":false,"element":{"type":"array","elementType":{"type":"reference","target":4366,"name":"Parameters","package":"@serenity-js/web","refersToTypeParameter":true}}}},{"type":"namedTupleMember","name":"callback","isOptional":false,"element":{"type":"reflection","declaration":{"id":4371,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":432,"character":75}],"signatures":[{"id":4372,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":432,"character":75}],"parameters":[{"id":4373,"name":"result","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4365,"name":"Result","package":"@serenity-js/web","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"void"}}]}}}]}}],"type":{"type":"intrinsic","name":"void"}}]}}]}},{"id":4374,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"reference","target":4366,"name":"Parameters","package":"@serenity-js/web","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4365,"name":"Result","package":"@serenity-js/web","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4375,"name":"lastScriptExecutionResult","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":440,"character":13}],"signatures":[{"id":4376,"name":"lastScriptExecutionResult","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the last result of calling ["},{"kind":"code","text":"`Page.executeAsyncScript`"},{"kind":"text","text":"](/api/web/class/Page/#executeAsyncScript)\\nor ["},{"kind":"code","text":"`Page.executeScript`"},{"kind":"text","text":"](/api/web/class/Page/#executeScript)"}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":440,"character":13}],"typeParameter":[{"id":4377,"name":"R","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"any"}}],"type":{"type":"reference","target":4377,"name":"R","package":"@serenity-js/web","refersToTypeParameter":true}}]},{"id":4378,"name":"takeScreenshot","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":451,"character":13}],"signatures":[{"id":4379,"name":"takeScreenshot","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Take a screenshot of the top-level browsing context\'s viewport."}],"blockTags":[{"tag":"@throws","content":[{"kind":"text","text":"["},{"kind":"code","text":"`BrowserWindowClosedError`"},{"kind":"text","text":"](/api/web/class/BrowserWindowClosedError/)\\n When the page you\'re trying to take the screenshot of has already been closed"}]},{"tag":"@returns","content":[{"kind":"text","text":"A promise that will resolve to a base64-encoded screenshot PNG"}]}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":451,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4380,"name":"cookie","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":458,"character":13}],"signatures":[{"id":4381,"name":"cookie","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Retrieves a cookie identified by "},{"kind":"code","text":"`name`"},{"kind":"text","text":" and visible to this ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/)."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":458,"character":13}],"parameters":[{"id":4382,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":3963,"name":"Cookie","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4383,"name":"setCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":466,"character":13}],"signatures":[{"id":4384,"name":"setCookie","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Adds a single cookie with ["},{"kind":"code","text":"`CookieData`"},{"kind":"text","text":"](/api/web/interface/CookieData/) to the cookie store associated\\nwith the active ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/)\'s address."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":466,"character":13}],"parameters":[{"id":4385,"name":"cookieData","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4069,"name":"CookieData","package":"@serenity-js/web"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4386,"name":"deleteAllCookies","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":471,"character":13}],"signatures":[{"id":4387,"name":"deleteAllCookies","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Removes all the cookies."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":471,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4388,"name":"title","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":479,"character":13}],"signatures":[{"id":4389,"name":"title","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Retrieves the document title of the current top-level browsing context, equivalent to calling "},{"kind":"code","text":"`document.title`"},{"kind":"text","text":".\\n\\n#### Learn more\\n- [Mozilla Developer Network: Document title](https://developer.mozilla.org/en-US/docs/Web/API/Document/title)"}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":479,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4390,"name":"url","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":484,"character":13}],"signatures":[{"id":4391,"name":"url","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Retrieves the [URL](https://nodejs.org/api/url.html) of the current top-level browsing context."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":484,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/url.d.ts","qualifiedName":"\\"url\\".URL"},"name":"URL","package":"@types/node","qualifiedName":"\\"url\\".URL"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4392,"name":"name","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":489,"character":13}],"signatures":[{"id":4393,"name":"name","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Retrieves the name of the current top-level browsing context."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":489,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4394,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":494,"character":13}],"signatures":[{"id":4395,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Checks if a given window / tab / page is open and can be switched to, e.g. it\'s not closed."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":494,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"implementationOf":{"type":"reference","target":-1,"name":"Optional.isPresent"}}],"implementationOf":{"type":"reference","target":-1,"name":"Optional.isPresent"}},{"id":4396,"name":"viewportSize","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":500,"character":13}],"signatures":[{"id":4397,"name":"viewportSize","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the actual viewport size available for the given page,\\nexcluding any scrollbars."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":500,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reflection","declaration":{"id":4398,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":4399,"name":"width","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":500,"character":39}],"type":{"type":"intrinsic","name":"number"}},{"id":4400,"name":"height","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":500,"character":54}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[4399,4400]}],"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":500,"character":37}]}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4401,"name":"setViewportSize","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":507,"character":13}],"signatures":[{"id":4402,"name":"setViewportSize","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Sets ths size of the visible viewport to desired dimensions."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":507,"character":13}],"parameters":[{"id":4403,"name":"size","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":4404,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":4405,"name":"width","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":507,"character":37}],"type":{"type":"intrinsic","name":"number"}},{"id":4406,"name":"height","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":507,"character":52}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[4405,4406]}],"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":507,"character":35}]}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4407,"name":"switchTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":518,"character":10}],"signatures":[{"id":4408,"name":"switchTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Switches the current browsing context to the given page\\nand returns an object that allows the caller to switch back\\nto the previous context when needed.\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Switch`"},{"kind":"text","text":"](/api/web/class/Switch/)\\n- ["},{"kind":"code","text":"`Switchable`"},{"kind":"text","text":"](/api/web/interface/Switchable/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":518,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4866,"name":"SwitchableOrigin","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"implementationOf":{"type":"reference","target":4865,"name":"Switchable.switchTo"}}],"implementationOf":{"type":"reference","target":4864,"name":"Switchable.switchTo"}},{"id":4409,"name":"close","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":534,"character":13}],"signatures":[{"id":4410,"name":"close","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Closes this page."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":534,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4411,"name":"closeOthers","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":539,"character":13}],"signatures":[{"id":4412,"name":"closeOthers","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Closes any open pages, except for this one."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":539,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4413,"name":"modalDialog","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":544,"character":4}],"signatures":[{"id":4414,"name":"modalDialog","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the ["},{"kind":"code","text":"`ModalDialogHandler`"},{"kind":"text","text":"](/api/web/class/ModalDialogHandler/) for the current ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/)."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":544,"character":4}],"type":{"type":"reference","target":4170,"name":"ModalDialogHandler","package":"@serenity-js/web"}}]},{"id":4415,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":551,"character":4}],"signatures":[{"id":4416,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a description of this Page and its ID."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":551,"character":4}],"type":{"type":"intrinsic","name":"string"}}]}],"groups":[{"title":"Constructors","children":[4322]},{"title":"Properties","children":[4332]},{"title":"Methods","children":[4303,4305,4308,4311,4333,4336,4339,4342,4345,4347,4349,4351,4354,4363,4375,4378,4380,4383,4386,4388,4390,4392,4394,4396,4401,4407,4409,4411,4413,4415]}],"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":133,"character":22}],"typeParameters":[{"id":4417,"name":"Native_Element_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"any"}}],"implementedTypes":[{"type":"reference","target":954,"name":"Optional","package":"@serenity-js/core"},{"type":"reference","target":4863,"name":"Switchable","package":"@serenity-js/web"}],"permalink":"/api/web/class/Page","categories":[],"previousId":4252,"nextId":4418},{"id":4418,"name":"PageElement","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"Uses the [actor\'s](/api/core/class/Actor/) [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/) to identify\\na single Web element located by ["},{"kind":"code","text":"`Selector`"},{"kind":"text","text":"](/api/web/class/Selector/).\\n\\n## Learn more\\n- [Page Element Query Language](/handbook/web-testing/page-element-query-language)\\n- ["},{"kind":"code","text":"`Optional`"},{"kind":"text","text":"](/api/core/interface/Optional/)\\n- ["},{"kind":"code","text":"`Switchable`"},{"kind":"text","text":"](/api/web/interface/Switchable/)"}]},"children":[{"id":4419,"name":"from","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":25,"character":11}],"signatures":[{"id":4420,"name":"from","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":25,"character":11}],"typeParameter":[{"id":4421,"name":"NET","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":4422,"name":"nativeElement","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4421,"name":"NET","package":"@serenity-js/web","refersToTypeParameter":true}}],"type":{"type":"reference","target":1064,"typeArguments":[{"type":"reference","target":4418,"typeArguments":[{"type":"reference","target":4421,"name":"NET","package":"@serenity-js/web","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":4418,"typeArguments":[{"type":"reference","target":4421,"name":"NET","package":"@serenity-js/web","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}],"name":"MetaQuestionAdapter","package":"@serenity-js/core"}}]},{"id":4423,"name":"located","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":33,"character":11}],"signatures":[{"id":4424,"name":"located","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":33,"character":11}],"typeParameter":[{"id":4425,"name":"NET","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":4426,"name":"selector","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":4853,"name":"Selector","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1064,"typeArguments":[{"type":"reference","target":4418,"typeArguments":[{"type":"reference","target":4425,"name":"NET","package":"@serenity-js/web","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":4418,"typeArguments":[{"type":"reference","target":4425,"name":"NET","package":"@serenity-js/web","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}],"name":"MetaQuestionAdapter","package":"@serenity-js/core"}}]},{"id":4427,"name":"of","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":42,"character":11}],"signatures":[{"id":4428,"name":"of","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":42,"character":11}],"typeParameter":[{"id":4429,"name":"NET","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":4430,"name":"childElement","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":4418,"typeArguments":[{"type":"reference","target":4429,"name":"NET","package":"@serenity-js/web","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":1064,"typeArguments":[{"type":"reference","target":4418,"typeArguments":[{"type":"reference","target":4429,"name":"NET","package":"@serenity-js/web","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":4418,"typeArguments":[{"type":"reference","target":4429,"name":"NET","package":"@serenity-js/web","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}],"name":"MetaQuestionAdapter","package":"@serenity-js/core"}]}},{"id":4431,"name":"parentElement","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":4418,"typeArguments":[{"type":"reference","target":4429,"name":"NET","package":"@serenity-js/web","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1064,"typeArguments":[{"type":"reference","target":4418,"typeArguments":[{"type":"reference","target":4429,"name":"NET","package":"@serenity-js/web","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":4418,"typeArguments":[{"type":"reference","target":4429,"name":"NET","package":"@serenity-js/web","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}],"name":"MetaQuestionAdapter","package":"@serenity-js/core"}}]},{"id":4432,"name":"html","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":76,"character":11}],"signatures":[{"id":4433,"name":"html","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A static method producing a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/) that can be used with ["},{"kind":"code","text":"`PageElements.eachMappedTo`"},{"kind":"text","text":"](/api/web/class/PageElements/#eachMappedTo) method\\nto extract the HTML of each element in a collection.\\n\\n#### Example\\n\\n"},{"kind":"code","text":"```typescript\\nimport { actorCalled, Log } from \'@serenity-js/core\'\\nimport { Navigate, PageElement, By, Text } from \'@serenity-js/web\'\\nimport { includes } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Debbie\').attemptsTo(\\n  Navigate.to(\'https://serenity-js.org\'),\\n\\n  Log.the(\\n    PageElements.located(By.css(\'a\'))\\n      .where(Text, includes(\'modular\'))\\n      .eachMappedTo(PageElement.html())\\n  ),\\n)\\n```"}]},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":76,"character":11}],"typeParameter":[{"id":4434,"name":"NET","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"type":{"type":"reference","target":1561,"typeArguments":[{"type":"reference","target":4418,"typeArguments":[{"type":"reference","target":4434,"name":"NET","package":"@serenity-js/web","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":1059,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"QuestionAdapter","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}}]},{"id":4435,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":86,"character":4}],"signatures":[{"id":4436,"name":"new PageElement","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":86,"character":4}],"typeParameter":[{"id":4437,"name":"Native_Element_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"any"}}],"parameters":[{"id":4438,"name":"locator","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4252,"typeArguments":[{"type":"reference","target":4437,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElement.Native_Element_Type","refersToTypeParameter":true},{"type":"intrinsic","name":"any"}],"name":"Locator","package":"@serenity-js/web"}}],"type":{"type":"reference","target":4418,"typeArguments":[{"type":"reference","target":4437,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElement.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}}]},{"id":4439,"name":"locator","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":86,"character":32}],"type":{"type":"reference","target":4252,"typeArguments":[{"type":"reference","target":4437,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElement.Native_Element_Type","refersToTypeParameter":true},{"type":"intrinsic","name":"any"}],"name":"Locator","package":"@serenity-js/web"}},{"id":4440,"name":"of","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":97,"character":13}],"signatures":[{"id":4441,"name":"of","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Locates a child element that:\\n- matches the given selector\\n- is located within the "},{"kind":"code","text":"`parentElement`"}]},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":97,"character":13}],"parameters":[{"id":4442,"name":"parentElement","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4418,"typeArguments":[{"type":"reference","target":4437,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElement.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}}],"type":{"type":"reference","target":4418,"typeArguments":[{"type":"reference","target":4437,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElement.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}}]},{"id":4443,"name":"closestTo","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":147,"character":13}],"signatures":[{"id":4444,"name":"closestTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Traverses the element and its parents, heading toward the document root,\\nuntil it finds a parent ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) that matches its associated CSS selector.\\n\\n#### Example\\n\\n"},{"kind":"code","text":"```html\\n<div class=\\"form-entry\\">\\n    <input id=\\"username\\" />\\n    <ul class=\\"warnings\\">\\n        <li>Username should be an email address</li>\\n    </ul>\\n</div>\\n```"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```typescript\\nclass Username {\\n  static field = () =>\\n    PageElement.located(By.id(\'username\'))\\n      .describedAs(\'username field\')\\n\\n  private static container = () =>\\n    PageElement.located(By.css(\'.form-entry\'))\\n      .describedAs(\'form entry container\')\\n\\n  static warnings = () =>\\n    PageElements.located(By.css(\'ul.warnings li\'))\\n      .describedAs(\'warnings\')\\n      .of(\\n        Username.container().closestTo(Username.field())\\n      )\\n}\\n```"},{"kind":"text","text":"\\n\\n:::info\\nThis method relies on [Element: closest() API](https://developer.mozilla.org/en-US/docs/Web/API/Element/closest),\\nand so is only compatible with locating parent elements specified using the following CSS selectors:\\n- ["},{"kind":"code","text":"`ByCss`"},{"kind":"text","text":"](/api/web/class/ByCss/)\\n- ["},{"kind":"code","text":"`ById`"},{"kind":"text","text":"](/api/web/class/ById/)\\n- ["},{"kind":"code","text":"`ByTagName`"},{"kind":"text","text":"](/api/web/class/ByTagName/)\\n:::"}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"#### Learn more\\n- [Element: closest() method](https://developer.mozilla.org/en-US/docs/Web/API/Element/closest)"}]}]},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":147,"character":13}],"parameters":[{"id":4445,"name":"childElement","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4418,"typeArguments":[{"type":"reference","target":4437,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElement.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}}],"type":{"type":"reference","target":4418,"typeArguments":[{"type":"reference","target":4437,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElement.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}}]},{"id":4446,"name":"nativeElement","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":152,"character":10}],"signatures":[{"id":4447,"name":"nativeElement","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An \\"escape hatch\\" providing access to the integration tool-specific implementation of a Web element."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":152,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4437,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElement.Native_Element_Type","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4448,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":156,"character":4}],"signatures":[{"id":4449,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":156,"character":4}],"type":{"type":"intrinsic","name":"string"}}]},{"id":4450,"name":"enterValue","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":160,"character":13}],"signatures":[{"id":4451,"name":"enterValue","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":160,"character":13}],"parameters":[{"id":4452,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4453,"name":"clearValue","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":161,"character":13}],"signatures":[{"id":4454,"name":"clearValue","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":161,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4455,"name":"click","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":162,"character":13}],"signatures":[{"id":4456,"name":"click","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":162,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4457,"name":"doubleClick","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":163,"character":13}],"signatures":[{"id":4458,"name":"doubleClick","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":163,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4459,"name":"scrollIntoView","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":164,"character":13}],"signatures":[{"id":4460,"name":"scrollIntoView","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":164,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4461,"name":"hoverOver","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":165,"character":13}],"signatures":[{"id":4462,"name":"hoverOver","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":165,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4463,"name":"rightClick","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":166,"character":13}],"signatures":[{"id":4464,"name":"rightClick","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":166,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4465,"name":"selectOptions","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":167,"character":13}],"signatures":[{"id":4466,"name":"selectOptions","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":167,"character":13}],"parameters":[{"id":4467,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":4733,"name":"SelectOption","package":"@serenity-js/web"}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4468,"name":"selectedOptions","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":168,"character":13}],"signatures":[{"id":4469,"name":"selectedOptions","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":168,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4733,"name":"SelectOption","package":"@serenity-js/web"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4470,"name":"attribute","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":170,"character":13}],"signatures":[{"id":4471,"name":"attribute","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":170,"character":13}],"parameters":[{"id":4472,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4473,"name":"text","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":171,"character":13}],"signatures":[{"id":4474,"name":"text","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":171,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4475,"name":"value","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":172,"character":13}],"signatures":[{"id":4476,"name":"value","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":172,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4477,"name":"html","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":193,"character":13}],"signatures":[{"id":4478,"name":"html","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An instance method that resolves to the value of the ["},{"kind":"code","text":"`outerHTML`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/API/Element/outerHTML) property\\nof the underlying element.\\n\\n#### Example\\n\\n"},{"kind":"code","text":"```typescript\\nimport { actorCalled, Log } from \'@serenity-js/core\'\\nimport { Navigate, PageElement, By } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Debbie\').attemptsTo(\\n  Navigate.to(\'https://serenity-js.org\'),\\n\\n  Log.the(\\n    PageElement.located(By.css(\'h1\')).html()\\n  ),\\n)\\n```"}]},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":193,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4479,"name":"switchTo","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":210,"character":13}],"signatures":[{"id":4480,"name":"switchTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"When the element represents an ["},{"kind":"code","text":"`iframe`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe),\\ncalling this method switches the current browsing context to the given "},{"kind":"code","text":"`iframe`"},{"kind":"text","text":" context.\\n\\nWhen used with other types of [Web "},{"kind":"code","text":"`Element`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/API/Element),\\ncalling this method will have the same result as calling ["},{"kind":"code","text":"`Element.focus()`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/API/Element/focus_event)."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Returns an object that allows the caller to switch back\\n to the previous context if needed.\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Switch`"},{"kind":"text","text":"](/api/web/class/Switch/)\\n- ["},{"kind":"code","text":"`Switchable`"},{"kind":"text","text":"](/api/web/interface/Switchable/)"}]}]},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":210,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4866,"name":"SwitchableOrigin","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"implementationOf":{"type":"reference","target":4865,"name":"Switchable.switchTo"}}],"implementationOf":{"type":"reference","target":4864,"name":"Switchable.switchTo"}},{"id":4481,"name":"isActive","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":216,"character":13}],"signatures":[{"id":4482,"name":"isActive","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":" when the underlying element [has focus](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/focus).\\nOtherwise, resolves to "},{"kind":"code","text":"`false`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":216,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4483,"name":"isClickable","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":224,"character":13}],"signatures":[{"id":4484,"name":"isClickable","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":" when the underlying element can be clicked on.\\nOtherwise, resolves to "},{"kind":"code","text":"`false`"},{"kind":"text","text":".\\n\\nPlease refer to test integration tool-specific documentation for details."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":224,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4485,"name":"isEnabled","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":232,"character":13}],"signatures":[{"id":4486,"name":"isEnabled","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":" when the underlying\\nelement is not [explicitly disabled](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/disabled)\\n\\nPlease refer to test integration tool-specific documentation for details."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":232,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4487,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":239,"character":10}],"signatures":[{"id":4488,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a ["},{"kind":"code","text":"`Promise`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise) that resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":" when the element\\nis present in the [Document Object Model (DOM)](https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model),\\n"},{"kind":"code","text":"`false`"},{"kind":"text","text":" otherwise."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":239,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"implementationOf":{"type":"reference","target":-1,"name":"Optional.isPresent"}}],"implementationOf":{"type":"reference","target":-1,"name":"Optional.isPresent"}},{"id":4489,"name":"isSelected","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":250,"character":13}],"signatures":[{"id":4490,"name":"isSelected","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":" when the underlying element:\\n- has a ["},{"kind":"code","text":"`selected`"},{"kind":"text","text":" attribute](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option#attr-selected) for "},{"kind":"code","text":"`<option />`"},{"kind":"text","text":" elements\\n- has a ["},{"kind":"code","text":"`checked`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/checkbox) attribute for checkboxes\\n\\nOtherwise, resolves to "},{"kind":"code","text":"`false`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":250,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4491,"name":"isVisible","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":260,"character":13}],"signatures":[{"id":4492,"name":"isVisible","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":" when the underlying element:\\n- is not hidden, so doesn\'t have CSS style like "},{"kind":"code","text":"`display: none`"},{"kind":"text","text":", "},{"kind":"code","text":"`visibility: hidden`"},{"kind":"text","text":" or "},{"kind":"code","text":"`opacity: 0`"},{"kind":"text","text":"\\n- is within the browser viewport\\n- doesn\'t have its centre covered by other elements\\n\\nOtherwise, resolves to "},{"kind":"code","text":"`false`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":260,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]}],"groups":[{"title":"Constructors","children":[4435]},{"title":"Properties","children":[4439]},{"title":"Methods","children":[4419,4423,4427,4432,4440,4443,4446,4448,4450,4453,4455,4457,4459,4461,4463,4465,4468,4470,4473,4475,4477,4479,4481,4483,4485,4487,4489,4491]}],"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":23,"character":22}],"typeParameters":[{"id":4493,"name":"Native_Element_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"any"}}],"implementedTypes":[{"type":"reference","target":954,"name":"Optional","package":"@serenity-js/core"},{"type":"reference","target":4863,"name":"Switchable","package":"@serenity-js/web"}],"permalink":"/api/web/class/PageElement","categories":[],"previousId":4302,"nextId":4494},{"id":4494,"name":"PageElements","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Uses the [actor\'s](/api/core/class/Actor/) [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/) to identify\\na group of Web elements located by ["},{"kind":"code","text":"`Selector`"},{"kind":"text","text":"](/api/web/class/Selector/).\\n\\n## Learn more\\n\\n- [Page Element Query Language](/handbook/web-testing/page-element-query-language)\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)}\\n- ["},{"kind":"code","text":"`List`"},{"kind":"text","text":"](/api/core/class/List/)\\n- ["},{"kind":"code","text":"`ChainableMetaQuestion`"},{"kind":"text","text":"](/api/core/interface/ChainableMetaQuestion/)"}]},"children":[{"id":4495,"name":"located","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElements.ts","line":24,"character":11}],"signatures":[{"id":4496,"name":"located","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElements.ts","line":24,"character":11}],"typeParameter":[{"id":4497,"name":"NET","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":4498,"name":"selector","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":4853,"name":"Selector","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":4494,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElements","package":"@serenity-js/web"}}]},{"id":4598,"name":"describedAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"signatures":[{"id":4599,"name":"describedAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Changes the description of this object, as returned by ["},{"kind":"code","text":"`Describable.describedBy`"},{"kind":"text","text":"](/api/core/class/Describable/#describedBy)\\nand ["},{"kind":"code","text":"`Describable.toString`"},{"kind":"text","text":"](/api/core/class/Describable/#toString)."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"parameters":[{"id":4600,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Replaces the current description according to the following rules:\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is an ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable), it replaces the current description\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/), the current description is passed as "},{"kind":"code","text":"`context`"},{"kind":"text","text":" to "},{"kind":"code","text":"`description.of(context)`"},{"kind":"text","text":", and the result replaces the current description"}]},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":1561,"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4418,"typeArguments":[{"type":"reference","target":4559,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}},{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}]}}],"type":{"type":"intrinsic","name":"this"},"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.describedAs"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.describedAs"}},{"id":4601,"name":"as","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"signatures":[{"id":4602,"name":"as","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Maps this question to one of a different type.\\n\\n"},{"kind":"code","text":"```ts\\nQuestion.about(\'number returned as string\', actor => \'42\')   // returns: QuestionAdapter<string>\\n  .as(Number)                                                // returns: QuestionAdapter<number>\\n```"}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"typeParameter":[{"id":4603,"name":"O","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":4604,"name":"mapping","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":4605,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"signatures":[{"id":4606,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"parameters":[{"id":4607,"name":"answer","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"reference","target":4418,"typeArguments":[{"type":"reference","target":4559,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}}}],"type":{"type":"union","types":[{"type":"reference","target":4603,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4603,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"reference","target":4603,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.as"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.as"}},{"id":4608,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":4609,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":4610,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":4611,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":4612,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[4612]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.describedBy"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.describedBy"}},{"id":4618,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":4619,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.toString"}},{"id":4584,"name":"forEach","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.ts","line":21,"character":4}],"signatures":[{"id":4585,"name":"forEach","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.ts","line":21,"character":4}],"parameters":[{"id":4586,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":4587,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.ts","line":21,"character":22}],"signatures":[{"id":4588,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.ts","line":21,"character":22}],"parameters":[{"id":4589,"name":"current","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1551,"typeArguments":[{"type":"reference","target":4418,"typeArguments":[{"type":"reference","target":4559,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}],"name":"CurrentItem","package":"@serenity-js/core"}},{"id":4590,"name":"index","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}},{"id":4591,"name":"items","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"reference","target":4418,"typeArguments":[{"type":"reference","target":4559,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"void"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reference","target":1640,"name":"Task","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.forEach"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.forEach"}},{"id":4592,"name":"answeredBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.ts","line":28,"character":4}],"signatures":[{"id":4593,"name":"answeredBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.ts","line":28,"character":4}],"parameters":[{"id":4594,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4418,"typeArguments":[{"type":"reference","target":4559,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.answeredBy"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.answeredBy"}},{"id":4557,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.ts","line":68,"character":4}],"signatures":[{"id":4558,"name":"new PageElements","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.ts","line":68,"character":4}],"typeParameter":[{"id":4559,"name":"Native_Element_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"any"}}],"parameters":[{"id":4560,"name":"collection","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":706,"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4418,"typeArguments":[{"type":"reference","target":4559,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":1072,"typeArguments":[{"type":"reference","target":4418,"typeArguments":[{"type":"reference","target":4559,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"union","types":[{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4418,"typeArguments":[{"type":"reference","target":4559,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"},{"type":"reference","target":957,"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4418,"typeArguments":[{"type":"reference","target":4559,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}}],"name":"Question","package":"@serenity-js/core"}]}],"name":"ChainableMetaQuestion","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":4494,"typeArguments":[{"type":"reference","target":4559,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElements","package":"@serenity-js/web"},"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList<PageElement<Native_Element_Type>, PageElement<Native_Element_Type>>.constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList<PageElement<Native_Element_Type>, PageElement<Native_Element_Type>>.constructor"}},{"id":4562,"name":"of","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.ts","line":69,"character":4}],"signatures":[{"id":4563,"name":"of","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.ts","line":69,"character":4}],"parameters":[{"id":4564,"name":"context","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":4418,"typeArguments":[{"type":"reference","target":4559,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1426,"typeArguments":[{"type":"reference","target":4418,"typeArguments":[{"type":"reference","target":4559,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":4418,"typeArguments":[{"type":"reference","target":4559,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}],"name":"MetaList","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.of"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.of"}},{"id":4565,"name":"eachMappedTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.ts","line":70,"character":4}],"signatures":[{"id":4566,"name":"eachMappedTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.ts","line":70,"character":4}],"typeParameter":[{"id":4567,"name":"Mapped_Item_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":4568,"name":"question","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1561,"typeArguments":[{"type":"reference","target":4418,"typeArguments":[{"type":"reference","target":4559,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":957,"typeArguments":[{"type":"union","types":[{"type":"reference","target":4567,"name":"Mapped_Item_Type","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4567,"name":"Mapped_Item_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1426,"typeArguments":[{"type":"reference","target":4418,"typeArguments":[{"type":"reference","target":4559,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":4567,"name":"Mapped_Item_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"MetaList","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.eachMappedTo"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.eachMappedTo"}},{"id":4569,"name":"where","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.ts","line":71,"character":4}],"signatures":[{"id":4570,"name":"where","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.ts","line":71,"character":4}],"typeParameter":[{"id":4571,"name":"Answer_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":4572,"name":"question","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1561,"typeArguments":[{"type":"reference","target":4418,"typeArguments":[{"type":"reference","target":4559,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":957,"typeArguments":[{"type":"union","types":[{"type":"reference","target":4571,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4571,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}},{"id":4573,"name":"expectation","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1156,"typeArguments":[{"type":"reference","target":4571,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1426,"typeArguments":[{"type":"reference","target":4418,"typeArguments":[{"type":"reference","target":4559,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":4418,"typeArguments":[{"type":"reference","target":4559,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}],"name":"MetaList","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.where"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.where"}},{"id":4574,"name":"count","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.ts","line":72,"character":4}],"signatures":[{"id":4575,"name":"count","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.ts","line":72,"character":4}],"type":{"type":"reference","target":1064,"typeArguments":[{"type":"reference","target":4418,"typeArguments":[{"type":"reference","target":4559,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"intrinsic","name":"number"}],"name":"MetaQuestionAdapter","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.count"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.count"}},{"id":4576,"name":"first","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.ts","line":73,"character":4}],"signatures":[{"id":4577,"name":"first","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.ts","line":73,"character":4}],"type":{"type":"reference","target":1064,"typeArguments":[{"type":"reference","target":4418,"typeArguments":[{"type":"reference","target":4559,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":4418,"typeArguments":[{"type":"reference","target":4559,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}],"name":"MetaQuestionAdapter","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.first"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.first"}},{"id":4578,"name":"last","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.ts","line":74,"character":4}],"signatures":[{"id":4579,"name":"last","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.ts","line":74,"character":4}],"type":{"type":"reference","target":1064,"typeArguments":[{"type":"reference","target":4418,"typeArguments":[{"type":"reference","target":4559,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":4418,"typeArguments":[{"type":"reference","target":4559,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}],"name":"MetaQuestionAdapter","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.last"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.last"}},{"id":4580,"name":"nth","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.ts","line":75,"character":4}],"signatures":[{"id":4581,"name":"nth","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.ts","line":75,"character":4}],"parameters":[{"id":4582,"name":"index","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":1064,"typeArguments":[{"type":"reference","target":4418,"typeArguments":[{"type":"reference","target":4559,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":4418,"typeArguments":[{"type":"reference","target":4559,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}],"name":"MetaQuestionAdapter","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.nth"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.nth"}}],"groups":[{"title":"Constructors","children":[4557]},{"title":"Methods","children":[4495,4598,4601,4608,4618,4584,4592,4562,4565,4569,4574,4576,4578,4580]}],"sources":[{"fileName":"packages/web/src/screenplay/models/PageElements.ts","line":21,"character":13}],"typeParameters":[{"id":4620,"name":"Native_Element_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"any"}}],"extendedTypes":[{"type":"reference","target":1426,"typeArguments":[{"type":"reference","target":4418,"typeArguments":[{"type":"reference","target":4559,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":4418,"typeArguments":[{"type":"reference","target":4559,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}],"name":"MetaList","package":"@serenity-js/core"}],"permalink":"/api/web/class/PageElements","categories":[],"previousId":4418,"nextId":4621},{"id":4621,"name":"PageElementsLocator","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":4622,"name":"fromDocumentRoot","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElementsLocator.ts","line":16,"character":11}],"signatures":[{"id":4623,"name":"fromDocumentRoot","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElementsLocator.ts","line":16,"character":11}],"typeParameter":[{"id":4624,"name":"NET","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":4625,"name":"selector","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":4853,"name":"Selector","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":4621,"typeArguments":[{"type":"reference","target":4624,"name":"NET","package":"@serenity-js/web","refersToTypeParameter":true}],"name":"PageElementsLocator","package":"@serenity-js/web"}}]},{"id":4686,"name":"describedAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"signatures":[{"id":4687,"name":"describedAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Changes the description of this object, as returned by ["},{"kind":"code","text":"`Describable.describedBy`"},{"kind":"text","text":"](/api/core/class/Describable/#describedBy)\\nand ["},{"kind":"code","text":"`Describable.toString`"},{"kind":"text","text":"](/api/core/class/Describable/#toString)."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"parameters":[{"id":4688,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Replaces the current description according to the following rules:\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is an ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable), it replaces the current description\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/), the current description is passed as "},{"kind":"code","text":"`context`"},{"kind":"text","text":" to "},{"kind":"code","text":"`description.of(context)`"},{"kind":"text","text":", and the result replaces the current description"}]},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":1561,"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4418,"typeArguments":[{"type":"reference","target":4677,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElementsLocator.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}},{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}]}}],"type":{"type":"intrinsic","name":"this"},"inheritedFrom":{"type":"reference","target":-1,"name":"Question.describedAs"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Question.describedAs"}},{"id":4689,"name":"as","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"signatures":[{"id":4690,"name":"as","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Maps this question to one of a different type.\\n\\n"},{"kind":"code","text":"```ts\\nQuestion.about(\'number returned as string\', actor => \'42\')   // returns: QuestionAdapter<string>\\n  .as(Number)                                                // returns: QuestionAdapter<number>\\n```"}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"typeParameter":[{"id":4691,"name":"O","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":4692,"name":"mapping","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":4693,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"signatures":[{"id":4694,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"parameters":[{"id":4695,"name":"answer","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"reference","target":4418,"typeArguments":[{"type":"reference","target":4677,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElementsLocator.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}}}],"type":{"type":"union","types":[{"type":"reference","target":4603,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4603,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"reference","target":4603,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Question.as"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Question.as"}},{"id":4696,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":4697,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":4698,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":4699,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":4700,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[4700]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Question.describedBy"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Question.describedBy"}},{"id":4706,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":4707,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Question.toString"},"implementationOf":{"type":"reference","target":-1,"name":"ChainableMetaQuestion.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Question.toString"},"implementationOf":{"type":"reference","target":-1,"name":"ChainableMetaQuestion.toString"}},{"id":4675,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElementsLocator.ts","line":27,"character":4}],"signatures":[{"id":4676,"name":"new PageElementsLocator","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElementsLocator.ts","line":27,"character":4}],"typeParameter":[{"id":4677,"name":"Native_Element_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"any"}}],"parameters":[{"id":4678,"name":"locator","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":4252,"typeArguments":[{"type":"reference","target":4677,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElementsLocator.Native_Element_Type","refersToTypeParameter":true},{"type":"intrinsic","name":"any"}],"name":"Locator","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":4621,"typeArguments":[{"type":"reference","target":4677,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElementsLocator.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElementsLocator","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"Question<Promise<Array<PageElement<Native_Element_Type>>>>.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"Question<Promise<Array<PageElement<Native_Element_Type>>>>.constructor"}},{"id":4680,"name":"of","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElementsLocator.ts","line":31,"character":4}],"signatures":[{"id":4681,"name":"of","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElementsLocator.ts","line":31,"character":4}],"parameters":[{"id":4682,"name":"parent","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":4418,"typeArguments":[{"type":"reference","target":4677,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElementsLocator.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"intersection","types":[{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4418,"typeArguments":[{"type":"reference","target":4677,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElementsLocator.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"},{"type":"reference","target":1072,"typeArguments":[{"type":"reference","target":4418,"typeArguments":[{"type":"reference","target":4677,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElementsLocator.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4418,"typeArguments":[{"type":"reference","target":4677,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElementsLocator.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"name":"ChainableMetaQuestion","package":"@serenity-js/core"}]},"implementationOf":{"type":"reference","target":-1,"name":"ChainableMetaQuestion.of"}}],"implementationOf":{"type":"reference","target":-1,"name":"ChainableMetaQuestion.of"}},{"id":4683,"name":"answeredBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElementsLocator.ts","line":42,"character":10}],"signatures":[{"id":4684,"name":"answeredBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElementsLocator.ts","line":42,"character":10}],"parameters":[{"id":4685,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4418,"typeArguments":[{"type":"reference","target":4677,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElementsLocator.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Question.answeredBy"}}],"overwrites":{"type":"reference","target":-1,"name":"Question.answeredBy"}}],"groups":[{"title":"Constructors","children":[4675]},{"title":"Methods","children":[4622,4686,4689,4696,4706,4680,4683]}],"sources":[{"fileName":"packages/web/src/screenplay/models/PageElementsLocator.ts","line":12,"character":13}],"typeParameters":[{"id":4708,"name":"Native_Element_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"any"}}],"extendedTypes":[{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4418,"typeArguments":[{"type":"reference","target":4677,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElementsLocator.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"implementedTypes":[{"type":"reference","target":1072,"typeArguments":[{"type":"reference","target":4418,"typeArguments":[{"type":"reference","target":4677,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElementsLocator.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4418,"typeArguments":[{"type":"reference","target":4677,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElementsLocator.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"name":"ChainableMetaQuestion","package":"@serenity-js/core"}],"permalink":"/api/web/class/PageElementsLocator","categories":[],"previousId":4494,"nextId":4709},{"id":4709,"name":"RootLocator","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"["},{"kind":"code","text":"`RootLocator`"},{"kind":"text","text":"](/api/web/class/RootLocator/) represents the context in which ["},{"kind":"code","text":"`Locator`"},{"kind":"text","text":"](/api/web/class/Locator/) looks for ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) or ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElements/).\\nThis context is either a parent element, or some representation of the top-level browsing context.\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Locator`"},{"kind":"text","text":"](/api/web/class/Locator/)\\n- ["},{"kind":"code","text":"`Page.locate`"},{"kind":"text","text":"](/api/web/class/Page/#locate)\\n- ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)\\n- ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElements/)"}]},"children":[{"id":4710,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":4711,"name":"new RootLocator","variant":"signature","kind":16384,"flags":{"isExternal":true},"typeParameter":[{"id":4712,"name":"Native_Element_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"type":{"type":"reference","target":4709,"typeArguments":[{"type":"reference","target":4712,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"RootLocator.Native_Element_Type","refersToTypeParameter":true}],"name":"RootLocator","package":"@serenity-js/web"}}]},{"id":4713,"name":"switchToFrame","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/RootLocator.ts","line":18,"character":20}],"signatures":[{"id":4714,"name":"switchToFrame","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/RootLocator.ts","line":18,"character":20}],"parameters":[{"id":4715,"name":"element","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4712,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"RootLocator.Native_Element_Type","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4716,"name":"switchToParentFrame","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/RootLocator.ts","line":19,"character":20}],"signatures":[{"id":4717,"name":"switchToParentFrame","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/RootLocator.ts","line":19,"character":20}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4718,"name":"switchToMainFrame","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/RootLocator.ts","line":20,"character":20}],"signatures":[{"id":4719,"name":"switchToMainFrame","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/RootLocator.ts","line":20,"character":20}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4720,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/RootLocator.ts","line":21,"character":20}],"signatures":[{"id":4721,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/RootLocator.ts","line":21,"character":20}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"implementationOf":{"type":"reference","target":-1,"name":"Optional.isPresent"}}],"implementationOf":{"type":"reference","target":-1,"name":"Optional.isPresent"}},{"id":4722,"name":"nativeElement","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/RootLocator.ts","line":23,"character":20}],"signatures":[{"id":4723,"name":"nativeElement","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/RootLocator.ts","line":23,"character":20}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Partial"},"typeArguments":[{"type":"reference","target":4712,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"RootLocator.Native_Element_Type","refersToTypeParameter":true}],"name":"Partial","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#partialtype"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4724,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/RootLocator.ts","line":25,"character":4}],"signatures":[{"id":4725,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/RootLocator.ts","line":25,"character":4}],"type":{"type":"intrinsic","name":"string"}}]},{"id":4726,"name":"[custom]","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/RootLocator.ts","line":29,"character":4}],"type":{"type":"reflection","declaration":{"id":4727,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/io/inspectedObject.ts","line":2,"character":84}],"signatures":[{"id":4728,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/io/inspectedObject.ts","line":2,"character":84}],"parameters":[{"id":4729,"name":"depth","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}},{"id":4730,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/util.d.ts","qualifiedName":"\\"util\\".InspectOptionsStylized"},"name":"InspectOptionsStylized","package":"@types/node","qualifiedName":"\\"util\\".InspectOptionsStylized"}},{"id":4731,"name":"inspect","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"query","queryType":{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/util.d.ts","qualifiedName":"\\"util\\".inspect"},"name":"inspect","package":"@types/node","qualifiedName":"\\"util\\".inspect","preferValues":true}}}],"type":{"type":"intrinsic","name":"string"}}]}},"defaultValue":"..."}],"groups":[{"title":"Constructors","children":[4710]},{"title":"Properties","children":[4726]},{"title":"Methods","children":[4713,4716,4718,4720,4722,4724]}],"sources":[{"fileName":"packages/web/src/screenplay/models/RootLocator.ts","line":17,"character":22}],"typeParameters":[{"id":4732,"name":"Native_Element_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"extendedBy":[{"type":"reference","target":4252,"name":"Locator"}],"implementedTypes":[{"type":"reference","target":954,"name":"Optional","package":"@serenity-js/core"}],"permalink":"/api/web/class/RootLocator","categories":[],"previousId":4621,"nextId":4733},{"id":4733,"name":"SelectOption","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Describes the ["},{"kind":"code","text":"`<option />`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option)\\nelements to select.\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`Select`"},{"kind":"text","text":"](/api/web/class/Select/)\\n- ["},{"kind":"code","text":"`Selected`"},{"kind":"text","text":"](/api/web/class/Selected/)\\n- ["},{"kind":"code","text":"`PageElement.selectOptions`"},{"kind":"text","text":"](/api/web/class/PageElement/#selectOptions)\\n- ["},{"kind":"code","text":"`PageElement.selectedOptions`"},{"kind":"text","text":"](/api/web/class/PageElement/#selectedOptions)"}]},"children":[{"id":4734,"name":"withLabel","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/SelectOption.ts","line":18,"character":11}],"signatures":[{"id":4735,"name":"withLabel","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/SelectOption.ts","line":18,"character":11}],"parameters":[{"id":4736,"name":"label","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":4733,"name":"SelectOption","package":"@serenity-js/web"}}]},{"id":4737,"name":"withValue","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/SelectOption.ts","line":22,"character":11}],"signatures":[{"id":4738,"name":"withValue","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/SelectOption.ts","line":22,"character":11}],"parameters":[{"id":4739,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":4733,"name":"SelectOption","package":"@serenity-js/web"}}]},{"id":4740,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/SelectOption.ts","line":26,"character":4}],"signatures":[{"id":4741,"name":"new SelectOption","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/SelectOption.ts","line":26,"character":4}],"parameters":[{"id":4742,"name":"label","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"id":4743,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"id":4744,"name":"selected","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}},{"id":4745,"name":"disabled","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"reference","target":4733,"name":"SelectOption","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"TinyType.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"TinyType.constructor"}},{"id":4746,"name":"label","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isOptional":true,"isReadonly":true},"sources":[{"fileName":"packages/web/src/screenplay/models/SelectOption.ts","line":27,"character":24}],"type":{"type":"intrinsic","name":"string"}},{"id":4747,"name":"value","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isOptional":true,"isReadonly":true},"sources":[{"fileName":"packages/web/src/screenplay/models/SelectOption.ts","line":28,"character":24}],"type":{"type":"intrinsic","name":"string"}},{"id":4748,"name":"selected","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isOptional":true,"isReadonly":true},"sources":[{"fileName":"packages/web/src/screenplay/models/SelectOption.ts","line":29,"character":24}],"type":{"type":"intrinsic","name":"boolean"}},{"id":4749,"name":"disabled","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isOptional":true,"isReadonly":true},"sources":[{"fileName":"packages/web/src/screenplay/models/SelectOption.ts","line":30,"character":24}],"type":{"type":"intrinsic","name":"boolean"}},{"id":4750,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/SelectOption.ts","line":35,"character":4}],"signatures":[{"id":4751,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/SelectOption.ts","line":35,"character":4}],"type":{"type":"intrinsic","name":"string"},"overwrites":{"type":"reference","target":-1,"name":"TinyType.toString"}}],"overwrites":{"type":"reference","target":-1,"name":"TinyType.toString"}},{"id":4752,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":4753,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":4754,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.equals"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.equals"}},{"id":4755,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":4756,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.toJSON"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.toJSON"}}],"groups":[{"title":"Constructors","children":[4740]},{"title":"Properties","children":[4746,4747,4748,4749]},{"title":"Methods","children":[4734,4737,4750,4752,4755]}],"sources":[{"fileName":"packages/web/src/screenplay/models/SelectOption.ts","line":16,"character":13}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}],"permalink":"/api/web/class/SelectOption","categories":[],"previousId":4709,"nextId":4863},{"id":4863,"name":"Switchable","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Describes a Serenity/JS model object that can be switched _to_ and switched back _from_\\nusing the [task](/api/core/class/Task/) to ["},{"kind":"code","text":"`Switch`"},{"kind":"text","text":"](/api/web/class/Switch/).\\n\\nExamples of switchable models include a ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/) and ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/).\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/)\\n- ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)\\n- ["},{"kind":"code","text":"`Switch`"},{"kind":"text","text":"](/api/web/class/Switch/)"}]},"children":[{"id":4864,"name":"switchTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Switchable.ts","line":23,"character":4}],"signatures":[{"id":4865,"name":"switchTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Switches the context to the object implementing this interface\\nand returns ["},{"kind":"code","text":"`SwitchableOrigin`"},{"kind":"text","text":"](/api/web/interface/SwitchableOrigin/) that allows for the context to be switched\\nback when needed."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Switchable.ts","line":23,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4866,"name":"SwitchableOrigin","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]}],"groups":[{"title":"Methods","children":[4864]}],"sources":[{"fileName":"packages/web/src/screenplay/models/Switchable.ts","line":16,"character":17}],"implementedBy":[{"type":"reference","target":4302,"name":"Page"},{"type":"reference","target":4418,"name":"PageElement"}],"permalink":"/api/web/interface/Switchable","categories":[],"previousId":4733,"nextId":4866},{"id":4866,"name":"SwitchableOrigin","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Enables the ["},{"kind":"code","text":"`Task`"},{"kind":"text","text":"](/api/core/class/Task/) to ["},{"kind":"code","text":"`Switch`"},{"kind":"text","text":"](/api/web/class/Switch/) to perform a sequence of activities\\nand switch back to the original context afterwards.\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`Switch`"},{"kind":"text","text":"](/api/web/class/Switch/)\\n- ["},{"kind":"code","text":"`Switchable`"},{"kind":"text","text":"](/api/web/interface/Switchable/)"}]},"children":[{"id":4867,"name":"switchBack","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/SwitchableOrigin.ts","line":17,"character":4}],"signatures":[{"id":4868,"name":"switchBack","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Switches the context back to the original ["},{"kind":"code","text":"`Switchable`"},{"kind":"text","text":"](/api/web/interface/Switchable/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/models/SwitchableOrigin.ts","line":17,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]}],"groups":[{"title":"Methods","children":[4867]}],"sources":[{"fileName":"packages/web/src/screenplay/models/SwitchableOrigin.ts","line":12,"character":17}],"permalink":"/api/web/interface/SwitchableOrigin","categories":[],"previousId":4863,"nextId":4078},{"id":4078,"name":"AbsentModalDialog","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"code","text":"`AbsentModalDialog`"},{"kind":"text","text":" is a [null object](https://en.wikipedia.org/wiki/Null_object_pattern)\\nrepresenting a ["},{"kind":"code","text":"`ModalDialog`"},{"kind":"text","text":"](/api/web/class/ModalDialog/) that hasn\'t appeared yet.\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`ModalDialog`"},{"kind":"text","text":"](/api/web/class/ModalDialog/)"}]},"children":[{"id":4092,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":4093,"name":"new AbsentModalDialog","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":4078,"name":"AbsentModalDialog","package":"@serenity-js/web"},"inheritedFrom":{"type":"reference","target":4163,"name":"ModalDialog.constructor"}}],"inheritedFrom":{"type":"reference","target":4162,"name":"ModalDialog.constructor"}},{"id":4094,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/AbsentModalDialog.ts","line":15,"character":10}],"signatures":[{"id":4095,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a promise that resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":"\\nwhen a modal dialog has been handled, so either accepted or dismissed.\\nReturns "},{"kind":"code","text":"`false`"},{"kind":"text","text":" for dialogs that haven\'t been handled yet.\\n\\nUseful when a JavaScript modal dialog is generated after a delay,\\ne.g. triggered by "},{"kind":"code","text":"`setTimeout`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/AbsentModalDialog.ts","line":15,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":4167,"name":"ModalDialog.isPresent"}}],"overwrites":{"type":"reference","target":4166,"name":"ModalDialog.isPresent"}},{"id":4096,"name":"message","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/AbsentModalDialog.ts","line":19,"character":10}],"signatures":[{"id":4097,"name":"message","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the message of the last modal dialog handled,\\nor rejects the promise with a ["},{"kind":"code","text":"`LogicError`"},{"kind":"text","text":"](/api/core/class/LogicError/)\\nwhen no modal dialogs have been observed yet."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Message of the last handled dialog, or a "},{"kind":"code","text":"`Promise`"},{"kind":"text","text":"\\n rejected with a ["},{"kind":"code","text":"`LogicError`"},{"kind":"text","text":"](/api/core/class/LogicError/)\\n when no dialog has been handled yet."}]}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/AbsentModalDialog.ts","line":19,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":4165,"name":"ModalDialog.message"}}],"overwrites":{"type":"reference","target":4164,"name":"ModalDialog.message"}},{"id":4098,"name":"state","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":199,"character":4}],"signatures":[{"id":4099,"name":"state","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns "},{"kind":"code","text":"`accepted`"},{"kind":"text","text":" or "},{"kind":"code","text":"`dismissed`"},{"kind":"text","text":" for dialogs that have been handled,\\nor "},{"kind":"code","text":"`absent`"},{"kind":"text","text":" for those that haven\'t been handled yet."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":199,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":4169,"name":"ModalDialog.state"}}],"inheritedFrom":{"type":"reference","target":4168,"name":"ModalDialog.state"}}],"groups":[{"title":"Constructors","children":[4092]},{"title":"Methods","children":[4094,4096,4098]}],"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/AbsentModalDialog.ts","line":14,"character":13}],"extendedTypes":[{"type":"reference","target":4148,"name":"ModalDialog","package":"@serenity-js/web"}],"permalink":"/api/web/class/AbsentModalDialog","categories":[],"previousId":4866,"nextId":4100},{"id":4100,"name":"AcceptedModalDialog","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"code","text":"`AcceptedModalDialog`"},{"kind":"text","text":" represents a ["},{"kind":"code","text":"`ModalDialog`"},{"kind":"text","text":"](/api/web/class/ModalDialog/) that has been accepted\\nvia ["},{"kind":"code","text":"`ModalDialog.acceptNext`"},{"kind":"text","text":"](/api/web/class/ModalDialog/#acceptNext).\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`ModalDialog`"},{"kind":"text","text":"](/api/web/class/ModalDialog/)"}]},"children":[{"id":4114,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/AcceptedModalDialog.ts","line":15,"character":4}],"signatures":[{"id":4115,"name":"new AcceptedModalDialog","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/AcceptedModalDialog.ts","line":15,"character":4}],"parameters":[{"id":4116,"name":"dialogMessage","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":4100,"name":"AcceptedModalDialog","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":4163,"name":"ModalDialog.constructor"}}],"overwrites":{"type":"reference","target":4162,"name":"ModalDialog.constructor"}},{"id":4118,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/AcceptedModalDialog.ts","line":20,"character":10}],"signatures":[{"id":4119,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a promise that resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":"\\nwhen a modal dialog has been handled, so either accepted or dismissed.\\nReturns "},{"kind":"code","text":"`false`"},{"kind":"text","text":" for dialogs that haven\'t been handled yet.\\n\\nUseful when a JavaScript modal dialog is generated after a delay,\\ne.g. triggered by "},{"kind":"code","text":"`setTimeout`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/AcceptedModalDialog.ts","line":20,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":4167,"name":"ModalDialog.isPresent"}}],"overwrites":{"type":"reference","target":4166,"name":"ModalDialog.isPresent"}},{"id":4120,"name":"message","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/AcceptedModalDialog.ts","line":24,"character":10}],"signatures":[{"id":4121,"name":"message","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the message of the last modal dialog handled,\\nor rejects the promise with a ["},{"kind":"code","text":"`LogicError`"},{"kind":"text","text":"](/api/core/class/LogicError/)\\nwhen no modal dialogs have been observed yet."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Message of the last handled dialog, or a "},{"kind":"code","text":"`Promise`"},{"kind":"text","text":"\\n rejected with a ["},{"kind":"code","text":"`LogicError`"},{"kind":"text","text":"](/api/core/class/LogicError/)\\n when no dialog has been handled yet."}]}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/AcceptedModalDialog.ts","line":24,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":4165,"name":"ModalDialog.message"}}],"overwrites":{"type":"reference","target":4164,"name":"ModalDialog.message"}},{"id":4122,"name":"state","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":199,"character":4}],"signatures":[{"id":4123,"name":"state","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns "},{"kind":"code","text":"`accepted`"},{"kind":"text","text":" or "},{"kind":"code","text":"`dismissed`"},{"kind":"text","text":" for dialogs that have been handled,\\nor "},{"kind":"code","text":"`absent`"},{"kind":"text","text":" for those that haven\'t been handled yet."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":199,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":4169,"name":"ModalDialog.state"}}],"inheritedFrom":{"type":"reference","target":4168,"name":"ModalDialog.state"}}],"groups":[{"title":"Constructors","children":[4114]},{"title":"Methods","children":[4118,4120,4122]}],"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/AcceptedModalDialog.ts","line":14,"character":13}],"extendedTypes":[{"type":"reference","target":4148,"name":"ModalDialog","package":"@serenity-js/web"}],"permalink":"/api/web/class/AcceptedModalDialog","categories":[],"previousId":4078,"nextId":4124},{"id":4124,"name":"DismissedModalDialog","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"code","text":"`DismissedModalDialog`"},{"kind":"text","text":" represents a ["},{"kind":"code","text":"`ModalDialog`"},{"kind":"text","text":"](/api/web/class/ModalDialog/) that has been dismissed\\nvia ["},{"kind":"code","text":"`ModalDialog.dismissNext`"},{"kind":"text","text":"](/api/web/class/ModalDialog/#dismissNext).\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`ModalDialog`"},{"kind":"text","text":"](/api/web/class/ModalDialog/)"}]},"children":[{"id":4138,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/DismissedModalDialog.ts","line":15,"character":4}],"signatures":[{"id":4139,"name":"new DismissedModalDialog","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/DismissedModalDialog.ts","line":15,"character":4}],"parameters":[{"id":4140,"name":"dialogMessage","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":4124,"name":"DismissedModalDialog","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":4163,"name":"ModalDialog.constructor"}}],"overwrites":{"type":"reference","target":4162,"name":"ModalDialog.constructor"}},{"id":4142,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/DismissedModalDialog.ts","line":20,"character":10}],"signatures":[{"id":4143,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a promise that resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":"\\nwhen a modal dialog has been handled, so either accepted or dismissed.\\nReturns "},{"kind":"code","text":"`false`"},{"kind":"text","text":" for dialogs that haven\'t been handled yet.\\n\\nUseful when a JavaScript modal dialog is generated after a delay,\\ne.g. triggered by "},{"kind":"code","text":"`setTimeout`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/DismissedModalDialog.ts","line":20,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":4167,"name":"ModalDialog.isPresent"}}],"overwrites":{"type":"reference","target":4166,"name":"ModalDialog.isPresent"}},{"id":4144,"name":"message","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/DismissedModalDialog.ts","line":24,"character":10}],"signatures":[{"id":4145,"name":"message","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the message of the last modal dialog handled,\\nor rejects the promise with a ["},{"kind":"code","text":"`LogicError`"},{"kind":"text","text":"](/api/core/class/LogicError/)\\nwhen no modal dialogs have been observed yet."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Message of the last handled dialog, or a "},{"kind":"code","text":"`Promise`"},{"kind":"text","text":"\\n rejected with a ["},{"kind":"code","text":"`LogicError`"},{"kind":"text","text":"](/api/core/class/LogicError/)\\n when no dialog has been handled yet."}]}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/DismissedModalDialog.ts","line":24,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":4165,"name":"ModalDialog.message"}}],"overwrites":{"type":"reference","target":4164,"name":"ModalDialog.message"}},{"id":4146,"name":"state","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":199,"character":4}],"signatures":[{"id":4147,"name":"state","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns "},{"kind":"code","text":"`accepted`"},{"kind":"text","text":" or "},{"kind":"code","text":"`dismissed`"},{"kind":"text","text":" for dialogs that have been handled,\\nor "},{"kind":"code","text":"`absent`"},{"kind":"text","text":" for those that haven\'t been handled yet."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":199,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":4169,"name":"ModalDialog.state"}}],"inheritedFrom":{"type":"reference","target":4168,"name":"ModalDialog.state"}}],"groups":[{"title":"Constructors","children":[4138]},{"title":"Methods","children":[4142,4144,4146]}],"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/DismissedModalDialog.ts","line":14,"character":13}],"extendedTypes":[{"type":"reference","target":4148,"name":"ModalDialog","package":"@serenity-js/web"}],"permalink":"/api/web/class/DismissedModalDialog","categories":[],"previousId":4100,"nextId":4148},{"id":4148,"name":"ModalDialog","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"Manages interactions with JavaScript modal dialog windows,\\ntriggered by [window.alert](https://developer.mozilla.org/en-US/docs/Web/API/Window/alert),\\n[window.confirm](https://developer.mozilla.org/en-US/docs/Web/API/Window/confirm),\\nor ["},{"kind":"code","text":"`window.prompt`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/API/Window/prompt),\\nand stores their "},{"kind":"code","text":"`message`"},{"kind":"text","text":" so that it can be asserted on once the dialog is handled.\\n\\nNote that in order to make handling modal windows\\nconsistent across the various Web integration tools (such as Playwright, Puppeteer,\\nWebdriverIO or Selenium), Serenity/JS works as follows:\\n- Serenity/JS dismisses any modal dialogs by default and stores their message so that it can be asserted on.\\n- This behaviour can be changed by invoking ["},{"kind":"code","text":"`ModalDialog.acceptNext`"},{"kind":"text","text":"](/api/web/class/ModalDialog/#acceptNext),\\n  ["},{"kind":"code","text":"`ModalDialog.acceptNextWithValue`"},{"kind":"text","text":"](/api/web/class/ModalDialog/#acceptNextWithValue),\\n  or ["},{"kind":"code","text":"`ModalDialog.dismissNext`"},{"kind":"text","text":"](/api/web/class/ModalDialog/#dismissNext)\\n  before the dialog is triggered, as per the below examples.\\n- Serenity/JS also allows you to "},{"kind":"code","text":"`Wait.until(ModalDialog, isPresent())`"},{"kind":"text","text":" so that you can synchronise your tests\\n  with modal dialogs that appear after a delay.\\n\\n## Example HTML widget\\n\\nIn the below example widget, clicking on the button results in a [confirmation dialog](https://developer.mozilla.org/en-US/docs/Web/API/Window/confirm)\\nappearing.\\n\\n"},{"kind":"code","text":"```html\\n<button id=\\"trigger\\" onclick=\\"trigger()\\">Trigger Alert</button>\\n<p id=\\"result\\"></p>\\n\\n<script>\\n  function trigger() {\\n    document.getElementById(\\"result\\").innerHTML = (\\n      function () {\\n        return confirm(\'Continue?\')\\n          ? \'accepted\'\\n          : \'dismissed\';\\n      }\\n    )();\\n  }\\n<\/script>\\n```"},{"kind":"text","text":"\\n\\n## Modal dialog gets dismissed by default\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { By, Click, Text, PageElement, ModalDialog } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nconst Example = {\\n  trigger: () =>\\n    PageElement.located(By.id(\'trigger\')).describedAs(\'the modal dialog trigger\'),\\n\\n  result: () =>\\n    PageElement.located(By.id(\'result\')).describedAs(\'result\'),\\n}\\n\\nawait actorCalled(\'Nick\').attemptsTo(\\n  Click.on(Example.trigger()),\\n\\n  Ensure.that(ModalDialog.lastDialogState(), equals(\'dismissed\')),\\n\\n  Ensure.that(Text.of(Example.result()), equals(\'dismissed\')),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Changing modal dialog handler\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { By, Click, Text, PageElement, ModalDialog } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nconst Example = {\\n  trigger: () =>\\n    PageElement.located(By.id(\'trigger\')).describedAs(\'the modal dialog trigger\'),\\n\\n  result: () =>\\n    PageElement.located(By.id(\'result\')).describedAs(\'result\'),\\n}\\n\\nawait actorCalled(\'Nick\').attemptsTo(\\n  ModalDialog.acceptNext(),\\n  // or: ModalDialog.acceptNextWithValue(\'some value\'),\\n  // or: ModalDialog.dismissNext(),\\n\\n  Click.on(Example.trigger),\\n\\n  Ensure.that(ModalDialog.lastDialogState(), equals(\'accepted\')),\\n\\n  Ensure.that(Text.of(Example.result), equals(\'accepted\')),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Optional`"},{"kind":"text","text":"](/api/core/interface/Optional/)"}]},"children":[{"id":4149,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":127,"character":11}],"signatures":[{"id":4150,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a promise that resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":"\\nwhen a modal dialog has been handled, so accepted or dismissed.\\nReturns "},{"kind":"code","text":"`false`"},{"kind":"text","text":" for dialogs that haven\'t been handled yet.\\n\\nUseful when a JavaScript modal dialog is generated after a delay,\\ne.g. triggered by "},{"kind":"code","text":"`setTimeout`"},{"kind":"text","text":".\\n\\n#### Example usage\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Wait } from \'@serenity-js/core\'\\nimport { Ensure, equals, isPresent } from \'@serenity-js/assertions\'\\nimport { ModalDialog } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Nick\').attemptsTo(\\n  ModalDialog.acceptNext(),\\n  Wait.until(ModalDialog, isPresent()),\\n  Ensure.that(ModalDialog.lastDialogState(), equals(\'accepted\')),\\n)\\n```"}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":127,"character":11}],"type":{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}}]},{"id":4151,"name":"acceptNext","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":134,"character":11}],"signatures":[{"id":4152,"name":"acceptNext","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Produces an [interaction](/api/core/class/Interaction/) that invokes ["},{"kind":"code","text":"`ModalDialog.acceptNext`"},{"kind":"text","text":"](/api/web/class/ModalDialog/#acceptNext)."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":134,"character":11}],"type":{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":4153,"name":"acceptNextWithValue","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":144,"character":11}],"signatures":[{"id":4154,"name":"acceptNextWithValue","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Produces an [interaction](/api/core/class/Interaction/) that invokes ["},{"kind":"code","text":"`ModalDialog.acceptNextWithValue`"},{"kind":"text","text":"](/api/web/class/ModalDialog/#acceptNextWithValue)."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":144,"character":11}],"parameters":[{"id":4155,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":4156,"name":"dismissNext","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":152,"character":11}],"signatures":[{"id":4157,"name":"dismissNext","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Produces an [interaction](/api/core/class/Interaction/) that invokes ["},{"kind":"code","text":"`ModalDialog.dismissNext`"},{"kind":"text","text":"](/api/web/class/ModalDialog/#dismissNext)."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":152,"character":11}],"type":{"type":"reference","target":811,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":4158,"name":"lastDialogMessage","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":160,"character":11}],"signatures":[{"id":4159,"name":"lastDialogMessage","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter) that resolves to ["},{"kind":"code","text":"`ModalDialog.message`"},{"kind":"text","text":"](/api/web/class/ModalDialog/#message) for the current ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/)."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":160,"character":11}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":4160,"name":"lastDialogState","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":168,"character":11}],"signatures":[{"id":4161,"name":"lastDialogState","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter) that resolves to ["},{"kind":"code","text":"`ModalDialog.state`"},{"kind":"text","text":"](/api/web/class/ModalDialog/#state) for the current ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/)."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":168,"character":11}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":4162,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":4163,"name":"new ModalDialog","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":4148,"name":"ModalDialog","package":"@serenity-js/web"}}]},{"id":4164,"name":"message","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":183,"character":13}],"signatures":[{"id":4165,"name":"message","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the message of the last modal dialog handled,\\nor rejects the promise with a ["},{"kind":"code","text":"`LogicError`"},{"kind":"text","text":"](/api/core/class/LogicError/)\\nwhen no modal dialogs have been observed yet."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Message of the last handled dialog, or a "},{"kind":"code","text":"`Promise`"},{"kind":"text","text":"\\n rejected with a ["},{"kind":"code","text":"`LogicError`"},{"kind":"text","text":"](/api/core/class/LogicError/)\\n when no dialog has been handled yet."}]}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":183,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4166,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":193,"character":13}],"signatures":[{"id":4167,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a promise that resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":"\\nwhen a modal dialog has been handled, so either accepted or dismissed.\\nReturns "},{"kind":"code","text":"`false`"},{"kind":"text","text":" for dialogs that haven\'t been handled yet.\\n\\nUseful when a JavaScript modal dialog is generated after a delay,\\ne.g. triggered by "},{"kind":"code","text":"`setTimeout`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":193,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"implementationOf":{"type":"reference","target":-1,"name":"Optional.isPresent"}}],"implementationOf":{"type":"reference","target":-1,"name":"Optional.isPresent"}},{"id":4168,"name":"state","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":199,"character":4}],"signatures":[{"id":4169,"name":"state","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns "},{"kind":"code","text":"`accepted`"},{"kind":"text","text":" or "},{"kind":"code","text":"`dismissed`"},{"kind":"text","text":" for dialogs that have been handled,\\nor "},{"kind":"code","text":"`absent`"},{"kind":"text","text":" for those that haven\'t been handled yet."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":199,"character":4}],"type":{"type":"intrinsic","name":"string"}}]}],"groups":[{"title":"Constructors","children":[4162]},{"title":"Methods","children":[4149,4151,4153,4156,4158,4160,4164,4166,4168]}],"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":103,"character":22}],"extendedBy":[{"type":"reference","target":4078,"name":"AbsentModalDialog"},{"type":"reference","target":4100,"name":"AcceptedModalDialog"},{"type":"reference","target":4124,"name":"DismissedModalDialog"}],"implementedTypes":[{"type":"reference","target":954,"name":"Optional","package":"@serenity-js/core"}],"permalink":"/api/web/class/ModalDialog","categories":[],"previousId":4124,"nextId":4170},{"id":4170,"name":"ModalDialogHandler","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"Represent the strategy to use with any upcoming ["},{"kind":"code","text":"`ModalDialog`"},{"kind":"text","text":"](/api/web/class/ModalDialog/) windows.\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`ModalDialog`"},{"kind":"text","text":"](/api/web/class/ModalDialog/)\\n- ["},{"kind":"code","text":"`Page.modalDialog`"},{"kind":"text","text":"](/api/web/class/Page/#modalDialog)"}]},"children":[{"id":4175,"name":"acceptNext","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialogHandler.ts","line":25,"character":13}],"signatures":[{"id":4176,"name":"acceptNext","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the handler to accept the next JavaScript modal dialog."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialogHandler.ts","line":25,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4177,"name":"acceptNextWithValue","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialogHandler.ts","line":31,"character":13}],"signatures":[{"id":4178,"name":"acceptNextWithValue","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the handler to accept the next JavaScript "},{"kind":"code","text":"`prompt``\\nwith a given `"},{"kind":"text","text":"text` value."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialogHandler.ts","line":31,"character":13}],"parameters":[{"id":4179,"name":"text","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4180,"name":"dismissNext","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialogHandler.ts","line":36,"character":13}],"signatures":[{"id":4181,"name":"dismissNext","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the handler to dismiss the next JavaScript modal dialog."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialogHandler.ts","line":36,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4182,"name":"reset","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialogHandler.ts","line":41,"character":13}],"signatures":[{"id":4183,"name":"reset","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resets the handler to its default state."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialogHandler.ts","line":41,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4184,"name":"last","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialogHandler.ts","line":47,"character":10}],"signatures":[{"id":4185,"name":"last","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the most recently handled ["},{"kind":"code","text":"`ModalDialog`"},{"kind":"text","text":"](/api/web/class/ModalDialog/),\\nor ["},{"kind":"code","text":"`AbsentModalDialog`"},{"kind":"text","text":"](/api/web/class/AbsentModalDialog/) when no dialogs have been handled yet."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialogHandler.ts","line":47,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4148,"name":"ModalDialog","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]}],"groups":[{"title":"Methods","children":[4175,4177,4180,4182,4184]}],"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialogHandler.ts","line":16,"character":22}],"permalink":"/api/web/class/ModalDialogHandler","categories":[],"previousId":4148,"nextId":4757},{"id":4757,"name":"By","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"code","text":"`By`"},{"kind":"text","text":" produces a ["},{"kind":"code","text":"`Selector`"},{"kind":"text","text":"](/api/web/class/Selector/) used to locate a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) or ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElements/) on a web page.\\nSelectors can be defined using a static value or a ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/) to be resolved at runtime.\\n\\n### Defining a selector using a static value\\n\\n"},{"kind":"code","text":"```typescript\\nimport { PageElement, By } from \'@serenity-js/web\'\\n\\nclass LoginForm {\\n  static usernameField = () =>\\n    PageElement.located(By.id(\'username\'))              // locate element by its id\\n      .describedAs(\'username field\')\\n\\n  static passwordField = () =>\\n    PageElement.located(By.css(\'[data-test=\\"password\\"]\'))    // locate element using a CSS selector\\n      .describedAs(\'password field\')\\n}\\n```"},{"kind":"text","text":"\\n\\n### Defining a selector using a Question\\n\\nEach method on this class accepts an ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable) to allow for dynamic resolution of the selector.\\nThis can be useful when the selector is not known at the time of writing the test, or when the selector\\nneeds to be calculated based on the state of the system under test.\\n\\nThe example below demonstrates how to use ["},{"kind":"code","text":"`q`"},{"kind":"text","text":"](/api/core/function/q/) to define a selector that includes a dynamic value.\\n\\n"},{"kind":"code","text":"```typescript\\nimport { q } from \'@serenity-js/core\'\\nimport { PageElement, By } from \'@serenity-js/web\'\\n\\nclass FormField {\\n  static withTestId = (id: Answerable<string>) =>\\n    PageElement.located(By.css(q`input[data-test-id=\\"${ id }\\"]`))\\n      .describedAs(\'form field\')\\n}\\n\\n```"},{"kind":"text","text":"\\n\\n### Learn more\\n- [Page Element Query Language](/handbook/web-testing/page-element-query-language)\\n- ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)\\n- ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElements/)\\n- ["},{"kind":"code","text":"`q`"},{"kind":"text","text":"](/api/core/function/q/)"}]},"children":[{"id":4758,"name":"css","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/By.ts","line":66,"character":11}],"signatures":[{"id":4759,"name":"css","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Locates a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) using a [CSS selector](https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Selectors)."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/By.ts","line":66,"character":11}],"parameters":[{"id":4760,"name":"selector","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4779,"name":"ByCss","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}}]},{"id":4761,"name":"cssContainingText","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/By.ts","line":80,"character":11}],"signatures":[{"id":4762,"name":"cssContainingText","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Locates a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) with a given ["},{"kind":"code","text":"`innerText`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/innerText)\\nusing a [CSS selector](https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Selectors)."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/By.ts","line":80,"character":11}],"parameters":[{"id":4763,"name":"selector","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":4764,"name":"text","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4791,"name":"ByCssContainingText","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}}]},{"id":4765,"name":"deepCss","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/By.ts","line":94,"character":11}],"signatures":[{"id":4766,"name":"deepCss","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Locates a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) using a [CSS selector](https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Selectors)\\ncapable of piercing [shadow DOM](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_shadow_DOM)-piercing"}]},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/By.ts","line":94,"character":11}],"parameters":[{"id":4767,"name":"selector","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4779,"name":"ByCss","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}}]},{"id":4768,"name":"id","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/By.ts","line":106,"character":11}],"signatures":[{"id":4769,"name":"id","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Locates a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) using its [id](https://developer.mozilla.org/en-US/docs/Web/CSS/ID_selectors)."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/By.ts","line":106,"character":11}],"parameters":[{"id":4770,"name":"selector","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4817,"name":"ById","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}}]},{"id":4771,"name":"tagName","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/By.ts","line":118,"character":11}],"signatures":[{"id":4772,"name":"tagName","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Locates a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) using the name of its [HTML tag](https://developer.mozilla.org/en-US/docs/Web/HTML/Element)."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/By.ts","line":118,"character":11}],"parameters":[{"id":4773,"name":"selector","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4829,"name":"ByTagName","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}}]},{"id":4774,"name":"xpath","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/By.ts","line":130,"character":11}],"signatures":[{"id":4775,"name":"xpath","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Locates a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) using an [XPath selector](https://developer.mozilla.org/en-US/docs/Web/XPath)."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/By.ts","line":130,"character":11}],"parameters":[{"id":4776,"name":"selector","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4841,"name":"ByXPath","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}}]},{"id":4777,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":4778,"name":"new By","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":4757,"name":"By","package":"@serenity-js/web"}}]}],"groups":[{"title":"Constructors","children":[4777]},{"title":"Methods","children":[4758,4761,4765,4768,4771,4774]}],"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/By.ts","line":59,"character":13}],"permalink":"/api/web/class/By","categories":[],"previousId":4170,"nextId":4779},{"id":4779,"name":"ByCss","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Locates a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) using a [CSS selector](https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Selectors).\\n\\n**Pro tip:** Instantiate using ["},{"kind":"code","text":"`By.css`"},{"kind":"text","text":"](/api/web/class/By/#css)"}]},"children":[{"id":4780,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByCss.ts","line":11,"character":4}],"signatures":[{"id":4781,"name":"new ByCss","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByCss.ts","line":11,"character":4}],"parameters":[{"id":4782,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":4779,"name":"ByCss","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":4855,"name":"Selector.constructor"}}],"overwrites":{"type":"reference","target":4854,"name":"Selector.constructor"}},{"id":4783,"name":"value","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByCss.ts","line":11,"character":32}],"type":{"type":"intrinsic","name":"string"}},{"id":4784,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/Selector.ts","line":11,"character":4}],"signatures":[{"id":4785,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/Selector.ts","line":11,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":4857,"name":"Selector.toString"}}],"inheritedFrom":{"type":"reference","target":4856,"name":"Selector.toString"}},{"id":4786,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":4787,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":4788,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":4859,"name":"Selector.equals"}}],"inheritedFrom":{"type":"reference","target":4858,"name":"Selector.equals"}},{"id":4789,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":4790,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":4862,"name":"Selector.toJSON"}}],"inheritedFrom":{"type":"reference","target":4861,"name":"Selector.toJSON"}}],"groups":[{"title":"Constructors","children":[4780]},{"title":"Properties","children":[4783]},{"title":"Methods","children":[4784,4786,4789]}],"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByCss.ts","line":10,"character":13}],"extendedTypes":[{"type":"reference","target":4853,"name":"Selector","package":"@serenity-js/web"}],"permalink":"/api/web/class/ByCss","categories":[],"previousId":4757,"nextId":4791},{"id":4791,"name":"ByCssContainingText","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Locates a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) with a given ["},{"kind":"code","text":"`innerText`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/innerText)\\nusing a [CSS selector](https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Selectors).\\n\\n**Pro tip:** Instantiate using ["},{"kind":"code","text":"`By.cssContainingText`"},{"kind":"text","text":"](/api/web/class/By/#cssContainingText)"}]},"children":[{"id":4792,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByCssContainingText.ts","line":12,"character":4}],"signatures":[{"id":4793,"name":"new ByCssContainingText","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByCssContainingText.ts","line":12,"character":4}],"parameters":[{"id":4794,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":4795,"name":"text","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":4791,"name":"ByCssContainingText","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":4855,"name":"Selector.constructor"}}],"overwrites":{"type":"reference","target":4854,"name":"Selector.constructor"}},{"id":4796,"name":"value","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByCssContainingText.ts","line":12,"character":32}],"type":{"type":"intrinsic","name":"string"}},{"id":4797,"name":"text","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByCssContainingText.ts","line":12,"character":63}],"type":{"type":"intrinsic","name":"string"}},{"id":4798,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/Selector.ts","line":11,"character":4}],"signatures":[{"id":4799,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/Selector.ts","line":11,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":4857,"name":"Selector.toString"}}],"inheritedFrom":{"type":"reference","target":4856,"name":"Selector.toString"}},{"id":4800,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":4801,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":4802,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":4859,"name":"Selector.equals"}}],"inheritedFrom":{"type":"reference","target":4858,"name":"Selector.equals"}},{"id":4803,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":4804,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":4862,"name":"Selector.toJSON"}}],"inheritedFrom":{"type":"reference","target":4861,"name":"Selector.toJSON"}}],"groups":[{"title":"Constructors","children":[4792]},{"title":"Properties","children":[4796,4797]},{"title":"Methods","children":[4798,4800,4803]}],"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByCssContainingText.ts","line":11,"character":13}],"extendedTypes":[{"type":"reference","target":4853,"name":"Selector","package":"@serenity-js/web"}],"permalink":"/api/web/class/ByCssContainingText","categories":[],"previousId":4779,"nextId":4805},{"id":4805,"name":"ByDeepCss","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Locates a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) using a [CSS selector](https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Selectors)\\ncapable of piercing [shadow DOM](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_shadow_DOM)-piercing\\n\\n**Pro tip:** Instantiate using ["},{"kind":"code","text":"`By.deepCss`"},{"kind":"text","text":"](/api/web/class/By/#deepCss)"}]},"children":[{"id":4806,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByDeepCss.ts","line":12,"character":4}],"signatures":[{"id":4807,"name":"new ByDeepCss","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByDeepCss.ts","line":12,"character":4}],"parameters":[{"id":4808,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":4805,"name":"ByDeepCss","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":4855,"name":"Selector.constructor"}}],"overwrites":{"type":"reference","target":4854,"name":"Selector.constructor"}},{"id":4809,"name":"value","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByDeepCss.ts","line":12,"character":32}],"type":{"type":"intrinsic","name":"string"}},{"id":4810,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/Selector.ts","line":11,"character":4}],"signatures":[{"id":4811,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/Selector.ts","line":11,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":4857,"name":"Selector.toString"}}],"inheritedFrom":{"type":"reference","target":4856,"name":"Selector.toString"}},{"id":4812,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":4813,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":4814,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":4859,"name":"Selector.equals"}}],"inheritedFrom":{"type":"reference","target":4858,"name":"Selector.equals"}},{"id":4815,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":4816,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":4862,"name":"Selector.toJSON"}}],"inheritedFrom":{"type":"reference","target":4861,"name":"Selector.toJSON"}}],"groups":[{"title":"Constructors","children":[4806]},{"title":"Properties","children":[4809]},{"title":"Methods","children":[4810,4812,4815]}],"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByDeepCss.ts","line":11,"character":13}],"extendedTypes":[{"type":"reference","target":4853,"name":"Selector","package":"@serenity-js/web"}],"permalink":"/api/web/class/ByDeepCss","categories":[],"previousId":4791,"nextId":4817},{"id":4817,"name":"ById","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Locates a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) using its [id](https://developer.mozilla.org/en-US/docs/Web/CSS/ID_selectors).\\n\\n**Pro tip:** Instantiate using ["},{"kind":"code","text":"`By.id`"},{"kind":"text","text":"](/api/web/class/By/#id)"}]},"children":[{"id":4818,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ById.ts","line":11,"character":4}],"signatures":[{"id":4819,"name":"new ById","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ById.ts","line":11,"character":4}],"parameters":[{"id":4820,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":4817,"name":"ById","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":4855,"name":"Selector.constructor"}}],"overwrites":{"type":"reference","target":4854,"name":"Selector.constructor"}},{"id":4821,"name":"value","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ById.ts","line":11,"character":32}],"type":{"type":"intrinsic","name":"string"}},{"id":4822,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/Selector.ts","line":11,"character":4}],"signatures":[{"id":4823,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/Selector.ts","line":11,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":4857,"name":"Selector.toString"}}],"inheritedFrom":{"type":"reference","target":4856,"name":"Selector.toString"}},{"id":4824,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":4825,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":4826,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":4859,"name":"Selector.equals"}}],"inheritedFrom":{"type":"reference","target":4858,"name":"Selector.equals"}},{"id":4827,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":4828,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":4862,"name":"Selector.toJSON"}}],"inheritedFrom":{"type":"reference","target":4861,"name":"Selector.toJSON"}}],"groups":[{"title":"Constructors","children":[4818]},{"title":"Properties","children":[4821]},{"title":"Methods","children":[4822,4824,4827]}],"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ById.ts","line":10,"character":13}],"extendedTypes":[{"type":"reference","target":4853,"name":"Selector","package":"@serenity-js/web"}],"permalink":"/api/web/class/ById","categories":[],"previousId":4805,"nextId":4829},{"id":4829,"name":"ByTagName","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Locates a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) using the name of its [HTML tag](https://developer.mozilla.org/en-US/docs/Web/HTML/Element).\\n\\n**Pro tip:** Instantiate using ["},{"kind":"code","text":"`By.tagName`"},{"kind":"text","text":"](/api/web/class/By/#tagName)"}]},"children":[{"id":4830,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByTagName.ts","line":11,"character":4}],"signatures":[{"id":4831,"name":"new ByTagName","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByTagName.ts","line":11,"character":4}],"parameters":[{"id":4832,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":4829,"name":"ByTagName","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":4855,"name":"Selector.constructor"}}],"overwrites":{"type":"reference","target":4854,"name":"Selector.constructor"}},{"id":4833,"name":"value","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByTagName.ts","line":11,"character":32}],"type":{"type":"intrinsic","name":"string"}},{"id":4834,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/Selector.ts","line":11,"character":4}],"signatures":[{"id":4835,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/Selector.ts","line":11,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":4857,"name":"Selector.toString"}}],"inheritedFrom":{"type":"reference","target":4856,"name":"Selector.toString"}},{"id":4836,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":4837,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":4838,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":4859,"name":"Selector.equals"}}],"inheritedFrom":{"type":"reference","target":4858,"name":"Selector.equals"}},{"id":4839,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":4840,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":4862,"name":"Selector.toJSON"}}],"inheritedFrom":{"type":"reference","target":4861,"name":"Selector.toJSON"}}],"groups":[{"title":"Constructors","children":[4830]},{"title":"Properties","children":[4833]},{"title":"Methods","children":[4834,4836,4839]}],"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByTagName.ts","line":10,"character":13}],"extendedTypes":[{"type":"reference","target":4853,"name":"Selector","package":"@serenity-js/web"}],"permalink":"/api/web/class/ByTagName","categories":[],"previousId":4817,"nextId":4841},{"id":4841,"name":"ByXPath","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Locates a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) using an [XPath selector](https://developer.mozilla.org/en-US/docs/Web/XPath).\\n\\n**Pro tip:** Instantiate using ["},{"kind":"code","text":"`By.xpath`"},{"kind":"text","text":"](/api/web/class/By/#xpath)"}]},"children":[{"id":4842,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByXPath.ts","line":11,"character":4}],"signatures":[{"id":4843,"name":"new ByXPath","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByXPath.ts","line":11,"character":4}],"parameters":[{"id":4844,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":4841,"name":"ByXPath","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":4855,"name":"Selector.constructor"}}],"overwrites":{"type":"reference","target":4854,"name":"Selector.constructor"}},{"id":4845,"name":"value","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByXPath.ts","line":11,"character":32}],"type":{"type":"intrinsic","name":"string"}},{"id":4846,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/Selector.ts","line":11,"character":4}],"signatures":[{"id":4847,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/Selector.ts","line":11,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":4857,"name":"Selector.toString"}}],"inheritedFrom":{"type":"reference","target":4856,"name":"Selector.toString"}},{"id":4848,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":4849,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":4850,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":4859,"name":"Selector.equals"}}],"inheritedFrom":{"type":"reference","target":4858,"name":"Selector.equals"}},{"id":4851,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":4852,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":4862,"name":"Selector.toJSON"}}],"inheritedFrom":{"type":"reference","target":4861,"name":"Selector.toJSON"}}],"groups":[{"title":"Constructors","children":[4842]},{"title":"Properties","children":[4845]},{"title":"Methods","children":[4846,4848,4851]}],"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByXPath.ts","line":10,"character":13}],"extendedTypes":[{"type":"reference","target":4853,"name":"Selector","package":"@serenity-js/web"}],"permalink":"/api/web/class/ByXPath","categories":[],"previousId":4829,"nextId":4853},{"id":4853,"name":"Selector","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"Describes a selector you use to identify a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) or a group of ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElements/)."}]},"children":[{"id":4854,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":4855,"name":"new Selector","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":4853,"name":"Selector","package":"@serenity-js/web"},"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.constructor"}},{"id":4856,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/Selector.ts","line":11,"character":4}],"signatures":[{"id":4857,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/Selector.ts","line":11,"character":4}],"type":{"type":"intrinsic","name":"string"},"overwrites":{"type":"reference","target":-1,"name":"TinyType.toString"}}],"overwrites":{"type":"reference","target":-1,"name":"TinyType.toString"}},{"id":4858,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":4859,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":4860,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.equals"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.equals"}},{"id":4861,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":4862,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.toJSON"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.toJSON"}}],"groups":[{"title":"Constructors","children":[4854]},{"title":"Methods","children":[4856,4858,4861]}],"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/Selector.ts","line":9,"character":22}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}],"extendedBy":[{"type":"reference","target":4779,"name":"ByCss"},{"type":"reference","target":4791,"name":"ByCssContainingText"},{"type":"reference","target":4805,"name":"ByDeepCss"},{"type":"reference","target":4817,"name":"ById"},{"type":"reference","target":4829,"name":"ByTagName"},{"type":"reference","target":4841,"name":"ByXPath"}],"permalink":"/api/web/class/Selector","categories":[],"previousId":4841,"nextId":4869},{"id":4869,"name":"Attribute","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Uses the [actor\'s](/api/core/class/Actor/) [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/) to retrieve\\nthe value of the specified HTML attribute of a given ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/).\\n\\n## Example widget\\n\\n"},{"kind":"code","text":"```html\\n<ul id=\\"shopping-list\\" data-items-left=\\"2\\">\\n  <li data-state=\\"bought\\">Coffee<li>\\n  <li data-state=\\"buy\\">Honey<li>\\n  <li data-state=\\"buy\\">Chocolate<li>\\n</ul>\\n```"},{"kind":"text","text":"\\n\\n## Retrieve an HTML attribute of a given ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { Attribute, By, PageElement } from \'@serenity-js/web\'\\n\\nconst shoppingList = () =>\\n  PageElement.located(By.id(\'shopping-list\'))\\n    .describedAs(\'shopping list\')\\n\\nawait actorCalled(\'Lisa\')\\n  .attemptsTo(\\n    Ensure.that(\\n      Attribute.called(\'data-items-left\').of(shoppingList()),\\n      equals(\'2\')\\n    ),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Using "},{"kind":"code","text":"`Attribute`"},{"kind":"text","text":" as ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter)\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { Attribute, By, PageElement } from \'@serenity-js/web\'\\n\\nconst shoppingList = () =>\\n  PageElement.located(By.css(\'#shopping-list\'))\\n    .describedAs(\'shopping list\')\\n\\nawait actorCalled(\'Lisa\')\\n  .attemptsTo(\\n    Ensure.that(\\n      Attribute.called(\'id\').of(shoppingList()).toLocaleUpperCase(),\\n      equals(\'SHOPPING-LIST\')\\n    ),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Using as filter in [Page Element Query Language](/handbook/web-testing/page-element-query-language/)\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, includes } from \'@serenity-js/assertions\'\\nimport { Attribute, By, PageElements } from \'@serenity-js/web\'\\n\\nclass ShoppingList {\\n  static items = () =>\\n    PageElements.located(By.css(\'#shopping-list li\'))\\n      .describedAs(\'items\')\\n\\n  static outstandingItems = () =>\\n    ShoppingList.items()\\n      .where(\\n        Attribute.called(\'data-state\'),\\n        includes(\'buy\')\\n      )\\n}\\n\\nawait actorCalled(\'Lisa\')\\n.whoCan(BrowseTheWebWithWebdriverIO.using(browser))\\n.attemptsTo(\\n  Ensure.that(\\n    Text.ofAll(ShoppingList.outstandingItems()),\\n    equals([ \'Honey\', \'Chocolate\' ])\\n  ),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\n- ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/)\\n- ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter)\\n- ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/)"}]},"children":[{"id":4870,"name":"called","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/questions/Attribute.ts","line":110,"character":11}],"signatures":[{"id":4871,"name":"called","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/) that uses\\nthe [actor\'s](/api/core/class/Actor/) [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/) to retrieve\\nthe value of the specified HTML attribute of a given ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)."}]},"sources":[{"fileName":"packages/web/src/screenplay/questions/Attribute.ts","line":110,"character":11}],"typeParameter":[{"id":4872,"name":"NET","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"any"}}],"parameters":[{"id":4873,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The name of the attribute to retrieve"}]},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":4869,"typeArguments":[{"type":"reference","target":4872,"name":"NET","package":"@serenity-js/web","refersToTypeParameter":true}],"name":"Attribute","package":"@serenity-js/web"}}]},{"id":4938,"name":"describedAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"signatures":[{"id":4939,"name":"describedAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Changes the description of this object, as returned by ["},{"kind":"code","text":"`Describable.describedBy`"},{"kind":"text","text":"](/api/core/class/Describable/#describedBy)\\nand ["},{"kind":"code","text":"`Describable.toString`"},{"kind":"text","text":"](/api/core/class/Describable/#toString)."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"parameters":[{"id":4940,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Replaces the current description according to the following rules:\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is an ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable), it replaces the current description\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/), the current description is passed as "},{"kind":"code","text":"`context`"},{"kind":"text","text":" to "},{"kind":"code","text":"`description.of(context)`"},{"kind":"text","text":", and the result replaces the current description"}]},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":1561,"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}]}}],"type":{"type":"intrinsic","name":"this"},"inheritedFrom":{"type":"reference","target":-1,"name":"Question.describedAs"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Question.describedAs"}},{"id":4941,"name":"as","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"signatures":[{"id":4942,"name":"as","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Maps this question to one of a different type.\\n\\n"},{"kind":"code","text":"```ts\\nQuestion.about(\'number returned as string\', actor => \'42\')   // returns: QuestionAdapter<string>\\n  .as(Number)                                                // returns: QuestionAdapter<number>\\n```"}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"typeParameter":[{"id":4943,"name":"O","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":4944,"name":"mapping","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":4945,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"signatures":[{"id":4946,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"parameters":[{"id":4947,"name":"answer","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"union","types":[{"type":"reference","target":4603,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4603,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"reference","target":4603,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Question.as"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Question.as"}},{"id":4948,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":4949,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":4950,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":4951,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":4952,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[4952]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Question.describedBy"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Question.describedBy"}},{"id":4958,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":4959,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Question.toString"},"implementationOf":{"type":"reference","target":-1,"name":"MetaQuestion.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Question.toString"},"implementationOf":{"type":"reference","target":-1,"name":"MetaQuestion.toString"}},{"id":4930,"name":"of","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/questions/Attribute.ts","line":132,"character":4}],"signatures":[{"id":4931,"name":"of","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves to the value of an HTML attribute of the "},{"kind":"code","text":"`pageElement`"},{"kind":"text","text":".\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/questions/Attribute.ts","line":132,"character":4}],"parameters":[{"id":4932,"name":"pageElement","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":4418,"typeArguments":[{"type":"reference","target":4960,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Attribute.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":1059,"typeArguments":[{"type":"reference","target":4418,"typeArguments":[{"type":"reference","target":4960,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Attribute.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}],"name":"QuestionAdapter","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":1064,"typeArguments":[{"type":"reference","target":4418,"typeArguments":[{"type":"reference","target":4960,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Attribute.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"intrinsic","name":"string"}],"name":"MetaQuestionAdapter","package":"@serenity-js/core"},"implementationOf":{"type":"reference","target":-1,"name":"MetaQuestion.of"}}],"implementationOf":{"type":"reference","target":-1,"name":"MetaQuestion.of"}},{"id":4933,"name":"answeredBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/questions/Attribute.ts","line":146,"character":10}],"signatures":[{"id":4934,"name":"answeredBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/web/src/screenplay/questions/Attribute.ts","line":146,"character":10}],"parameters":[{"id":4935,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Question.answeredBy"}}],"overwrites":{"type":"reference","target":-1,"name":"Question.answeredBy"}},{"id":4936,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/questions/Attribute.ts","line":161,"character":4}],"signatures":[{"id":4937,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/web/src/screenplay/questions/Attribute.ts","line":161,"character":4}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"QuestionAdapter","package":"@serenity-js/core"},"implementationOf":{"type":"reference","target":-1,"name":"Optional.isPresent"}}],"implementationOf":{"type":"reference","target":-1,"name":"Optional.isPresent"}}],"groups":[{"title":"Methods","children":[4870,4938,4941,4948,4958,4930,4933,4936]}],"sources":[{"fileName":"packages/web/src/screenplay/questions/Attribute.ts","line":98,"character":13}],"typeParameters":[{"id":4960,"name":"Native_Element_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"extendedTypes":[{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"implementedTypes":[{"type":"reference","target":1561,"typeArguments":[{"type":"reference","target":4418,"typeArguments":[{"type":"reference","target":4960,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Attribute.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"},{"type":"reference","target":954,"name":"Optional","package":"@serenity-js/core"}],"permalink":"/api/web/class/Attribute","categories":[],"previousId":4853,"nextId":4961},{"id":4961,"name":"ComputedStyle","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Uses the [actor\'s](/api/core/class/Actor/) [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/) to retrieve\\nthe value of the specified computed style property of a given ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/).\\n\\n## Example widget\\n\\n"},{"kind":"code","text":"```html\\n<ul id=\\"shopping-list\\" style=\\"display: block\\">\\n  <li style=\\"display: block\\">Coffee<li>\\n  <li style=\\"display: none\\">Honey<li>\\n  <li style=\\"display: block\\">Chocolate<li>\\n</ul>\\n```"},{"kind":"text","text":"\\n\\n## Retrieve a computed style property of a given ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { ComputedStyle, By, PageElement } from \'@serenity-js/web\'\\n\\nconst shoppingList = () =>\\n  PageElement.located(By.id(\'shopping-list\'))\\n     .describedAs(\'shopping list\')\\n\\nawait actorCalled(\'Lisa\').attemptsTo(\\n  Ensure.that(\\n    ComputedStyle.called(\'display\').of(shoppingList()),\\n    equals(\'block\')\\n  ),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Using "},{"kind":"code","text":"`ComputedStyle`"},{"kind":"text","text":" as ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter)\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { Attribute, By, PageElement } from \'@serenity-js/web\'\\n\\nconst shoppingList = () =>\\n  PageElement.located(By.css(\'#shopping-list\'))\\n    .describedAs(\'shopping list\')\\n\\nawait actorCalled(\'Lisa\').attemptsTo(\\n  Ensure.that(\\n    ComputedStyle.called(\'display\').of(shoppingList()).toLocaleUpperCase(),\\n    equals(\'BLOCK\')\\n  ),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Using as filter in [Page Element Query Language](/handbook/web-testing/page-element-query-language/)\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, includes } from \'@serenity-js/assertions\'\\nimport { Attribute, By, PageElements } from \'@serenity-js/web\'\\n\\nclass ShoppingList {\\n  static items = () =>\\n    PageElements.located(By.css(\'#shopping-list li\'))\\n      .describedAs(\'items\')\\n\\n  static outstandingItems = () =>\\n    ShoppingList.items()\\n      .where(\\n        ComputedStyle.called(\'display\'),\\n        equals(\'block\')\\n      )\\n}\\n\\nawait actorCalled(\'Lisa\')\\n .whoCan(BrowseTheWebWithWebdriverIO.using(browser))\\n .attemptsTo(\\n   Ensure.that(\\n     Text.ofAll(ShoppingList.outstandingItems()),\\n     equals([ \'Honey\', \'Chocolate\' ])\\n   ),\\n )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\n- ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/)\\n- ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter)\\n- ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/)"}]},"children":[{"id":4962,"name":"called","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/questions/ComputedStyle.ts","line":116,"character":11}],"signatures":[{"id":4963,"name":"called","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/) that uses\\nthe [actor\'s](/api/core/class/Actor/) [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/) to retrieve\\nthe value of the specified computed style property of a given ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)."}]},"sources":[{"fileName":"packages/web/src/screenplay/questions/ComputedStyle.ts","line":116,"character":11}],"typeParameter":[{"id":4964,"name":"NET","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"any"}}],"parameters":[{"id":4965,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The name of the computed style property to retrieve"}]},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":4961,"typeArguments":[{"type":"reference","target":4964,"name":"NET","package":"@serenity-js/web","refersToTypeParameter":true}],"name":"ComputedStyle","package":"@serenity-js/web"}}]},{"id":5033,"name":"describedAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"signatures":[{"id":5034,"name":"describedAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Changes the description of this object, as returned by ["},{"kind":"code","text":"`Describable.describedBy`"},{"kind":"text","text":"](/api/core/class/Describable/#describedBy)\\nand ["},{"kind":"code","text":"`Describable.toString`"},{"kind":"text","text":"](/api/core/class/Describable/#toString)."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"parameters":[{"id":5035,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Replaces the current description according to the following rules:\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is an ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable), it replaces the current description\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/), the current description is passed as "},{"kind":"code","text":"`context`"},{"kind":"text","text":" to "},{"kind":"code","text":"`description.of(context)`"},{"kind":"text","text":", and the result replaces the current description"}]},"type":{"type":"union","types":[{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":1561,"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}]}}],"type":{"type":"intrinsic","name":"this"},"inheritedFrom":{"type":"reference","target":-1,"name":"Question.describedAs"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Question.describedAs"}},{"id":5036,"name":"as","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"signatures":[{"id":5037,"name":"as","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Maps this question to one of a different type.\\n\\n"},{"kind":"code","text":"```ts\\nQuestion.about(\'number returned as string\', actor => \'42\')   // returns: QuestionAdapter<string>\\n  .as(Number)                                                // returns: QuestionAdapter<number>\\n```"}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"typeParameter":[{"id":5038,"name":"O","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":5039,"name":"mapping","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":5040,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"signatures":[{"id":5041,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"parameters":[{"id":5042,"name":"answer","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"union","types":[{"type":"reference","target":4603,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4603,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"reference","target":4603,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Question.as"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Question.as"}},{"id":5043,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":5044,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":5045,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":5046,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":5047,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[5047]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Question.describedBy"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Question.describedBy"}},{"id":5053,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":5054,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Question.toString"},"implementationOf":{"type":"reference","target":-1,"name":"MetaQuestion.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Question.toString"},"implementationOf":{"type":"reference","target":-1,"name":"MetaQuestion.toString"}},{"id":5024,"name":"ofPseudoElement","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/questions/ComputedStyle.ts","line":140,"character":4}],"signatures":[{"id":5025,"name":"ofPseudoElement","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/) that uses\\nthe [actor\'s](/api/core/class/Actor/) [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/) to retrieve\\nthe value of the specified computed style property of the specified pseudo-element of a given ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)."}]},"sources":[{"fileName":"packages/web/src/screenplay/questions/ComputedStyle.ts","line":140,"character":4}],"parameters":[{"id":5026,"name":"pseudoElement","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The pseudo-element to retrieve the computed style property from, such as "},{"kind":"code","text":"`::before`"},{"kind":"text","text":" or "},{"kind":"code","text":"`::after`"}]},"type":{"type":"reference","target":706,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1064,"typeArguments":[{"type":"reference","target":4418,"typeArguments":[{"type":"reference","target":5055,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"ComputedStyle.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"intrinsic","name":"string"}],"name":"MetaQuestionAdapter","package":"@serenity-js/core"}}]},{"id":5027,"name":"of","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/questions/ComputedStyle.ts","line":158,"character":4}],"signatures":[{"id":5028,"name":"of","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves to the value of a computed style property of the "},{"kind":"code","text":"`pageElement`"},{"kind":"text","text":".\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/questions/ComputedStyle.ts","line":158,"character":4}],"parameters":[{"id":5029,"name":"pageElement","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":4418,"typeArguments":[{"type":"reference","target":5055,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"ComputedStyle.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":1059,"typeArguments":[{"type":"reference","target":4418,"typeArguments":[{"type":"reference","target":5055,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"ComputedStyle.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}],"name":"QuestionAdapter","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":1064,"typeArguments":[{"type":"reference","target":4418,"typeArguments":[{"type":"reference","target":5055,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"ComputedStyle.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"intrinsic","name":"string"}],"name":"MetaQuestionAdapter","package":"@serenity-js/core"},"implementationOf":{"type":"reference","target":-1,"name":"MetaQuestion.of"}}],"implementationOf":{"type":"reference","target":-1,"name":"MetaQuestion.of"}},{"id":5030,"name":"answeredBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/questions/ComputedStyle.ts","line":173,"character":10}],"signatures":[{"id":5031,"name":"answeredBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/web/src/screenplay/questions/ComputedStyle.ts","line":173,"character":10}],"parameters":[{"id":5032,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1067,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":618,"name":"UsesAbilities","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Question.answeredBy"}}],"overwrites":{"type":"reference","target":-1,"name":"Question.answeredBy"}}],"groups":[{"title":"Methods","children":[4962,5033,5036,5043,5053,5024,5027,5030]}],"sources":[{"fileName":"packages/web/src/screenplay/questions/ComputedStyle.ts","line":104,"character":13}],"typeParameters":[{"id":5055,"name":"Native_Element_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"extendedTypes":[{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"implementedTypes":[{"type":"reference","target":1561,"typeArguments":[{"type":"reference","target":4418,"typeArguments":[{"type":"reference","target":5055,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"ComputedStyle.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":957,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}],"permalink":"/api/web/class/ComputedStyle","categories":[],"previousId":4869,"nextId":5056},{"id":5056,"name":"CssClasses","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Uses the [actor\'s](/api/core/class/Actor/) [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/) to retrieve\\na list of [CSS classes](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes#attr-class)\\nof a given ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/).\\n\\n## Example widget\\n\\n"},{"kind":"code","text":"```html\\n<ul id=\\"shopping-list\\" class=\\"active favourite\\">\\n  <li class=\\"bought\\">Coffee<li>\\n  <li class=\\"buy\\">Honey<li>\\n  <li class=\\"buy\\">Chocolate<li>\\n</ul>\\n```"},{"kind":"text","text":"\\n\\n## Retrieve CSS classes of a given ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { By, CssClasses, PageElement } from \'@serenity-js/web\'\\n\\nconst shoppingList = () =>\\n  PageElement.located(By.css(\'#shopping-list\'))\\n    .describedAs(\'shopping list\')\\n\\nawait actorCalled(\'Lisa\')\\n  .attemptsTo(\\n    Ensure.that(\\n      CssClasses.of(shoppingList()),\\n      equals([ \'active\', \'favourite\' ])\\n    ),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Using CssClasses as ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter)\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { By, CssClasses, PageElement } from \'@serenity-js/web\'\\n\\nconst shoppingList = () =>\\n  PageElement.located(By.css(\'#shopping-list\'))\\n    .describedAs(\'shopping list\')\\n\\nawait actorCalled(\'Lisa\')\\n  .attemptsTo(\\n    Ensure.that(\\n      CssClasses.of(shoppingList()).length,\\n      equals(2)\\n    ),\\n    Ensure.that(\\n      CssClasses.of(shoppingList())[0],\\n      equals(\'active\')\\n    ),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Using as filter in [Page Element Query Language](/handbook/web-testing/page-element-query-language/)\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, contain } from \'@serenity-js/assertions\'\\nimport { By, CssClasses, PageElement } from \'@serenity-js/web\'\\n\\nclass ShoppingList {\\n  static items = () =>\\n    PageElements.located(By.css(\'#shopping-list li\'))\\n      .describedAs(\'items\')\\n\\n  static outstandingItems = () =>\\n    ShoppingList.items()\\n      .where(CssClasses, contain(\'buy\'))\\n}\\n\\nawait actorCalled(\'Lisa\')\\n  .attemptsTo(\\n    Ensure.that(\\n      Text.ofAll(ShoppingList.outstandingItems()),\\n      equals([ \'Honey\', \'Chocolate\' ])\\n    ),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\n- ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/)\\n- ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter)\\n- ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/)"}]},"children":[{"id":5057,"name":"of","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/questions/CssClasses.ts","line":112,"character":11}],"signatures":[{"id":5058,"name":"of","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/) that uses\\nthe [actor\'s](/api/core/class/Actor/) [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/) to retrieve\\na list of [CSS classes](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes#attr-class)\\nof a given ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/).\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/questions/CssClasses.ts","line":112,"character":11}],"parameters":[{"id":5059,"name":"pageElement","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":4418,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":1059,"typeArguments":[{"type":"reference","target":4418,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"}],"name":"QuestionAdapter","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":1064,"typeArguments":[{"type":"reference","target":4418,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"},{"type":"array","elementType":{"type":"intrinsic","name":"string"}}],"name":"MetaQuestionAdapter","package":"@serenity-js/core"}}]},{"id":5060,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":5061,"name":"new CssClasses","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":5056,"name":"CssClasses","package":"@serenity-js/web"}}]}],"groups":[{"title":"Constructors","children":[5060]},{"title":"Methods","children":[5057]}],"sources":[{"fileName":"packages/web/src/screenplay/questions/CssClasses.ts","line":99,"character":13}],"permalink":"/api/web/class/CssClasses","categories":[],"previousId":4961,"nextId":5062},{"id":5062,"name":"LastScriptExecution","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Uses the [actor\'s](/api/core/class/Actor/) [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/) to retrieve\\na returns the result of the last script executed via ["},{"kind":"code","text":"`ExecuteScript`"},{"kind":"text","text":"](/api/web/class/ExecuteScript/).\\n\\n## Executing a script and reading the result\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { ExecuteScript, LastScriptExecution } from \'@serenity-js/web\'\\nimport { Ensure, includes } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Joseph\')\\n  .attemptsTo(\\n    ExecuteScript.sync(() => navigator.userAgent),\\n    Ensure.that(LastScriptExecution.result<string>(), includes(\'Chrome\')),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Using LastScriptExecution as ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter)\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { ExecuteScript, LastScriptExecution } from \'@serenity-js/web\'\\nimport { Ensure, includes } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Joseph\')\\n  .attemptsTo(\\n    ExecuteScript.sync(() => navigator.userAgent),\\n    Ensure.that(\\n      LastScriptExecution.result<string>().toLocaleLowerCase(),\\n      includes(\'chrome\')\\n    ),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`ExecuteScript`"},{"kind":"text","text":"](/api/web/class/ExecuteScript/)\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\n- ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter)"}]},"children":[{"id":5063,"name":"result","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/questions/LastScriptExecution.ts","line":53,"character":11}],"signatures":[{"id":5064,"name":"result","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Enables asserting on the result of a function executed via ["},{"kind":"code","text":"`ExecuteScript`"},{"kind":"text","text":"](/api/web/class/ExecuteScript/)."}]},"sources":[{"fileName":"packages/web/src/screenplay/questions/LastScriptExecution.ts","line":53,"character":11}],"typeParameter":[{"id":5065,"name":"R","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"reference","target":5065,"name":"R","package":"@serenity-js/web","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":5066,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":5067,"name":"new LastScriptExecution","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":5062,"name":"LastScriptExecution","package":"@serenity-js/web"}}]}],"groups":[{"title":"Constructors","children":[5066]},{"title":"Methods","children":[5063]}],"sources":[{"fileName":"packages/web/src/screenplay/questions/LastScriptExecution.ts","line":48,"character":13}],"permalink":"/api/web/class/LastScriptExecution","categories":[],"previousId":5056,"nextId":5068},{"id":5068,"name":"Selected","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Uses the [actor\'s](/api/core/class/Actor/) [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/) to retrieve\\noptions and values selected in a\\n[HTML "},{"kind":"code","text":"`<select>`"},{"kind":"text","text":" element](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select).\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Select`"},{"kind":"text","text":"](/api/web/class/Select/)\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\n- ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter)\\n- ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/)"}]},"children":[{"id":5069,"name":"valueOf","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/questions/Selected.ts","line":69,"character":11}],"signatures":[{"id":5070,"name":"valueOf","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Uses the [actor\'s](/api/core/class/Actor/) [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/) to retrieve\\na single [option](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option)\\nselected in an [HTML "},{"kind":"code","text":"`<select>`"},{"kind":"text","text":" element](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select).\\n\\n#### Example widget\\n\\n"},{"kind":"code","text":"```html\\n<select multiple data-test=\'countries\'>\\n  <option value=\'UK\'>United Kingdom</option>\\n  <option value=\'PL\'>Poland</option>\\n  <option value=\'US\'>United States</option>\\n</select>\\n```"},{"kind":"text","text":"\\n\\n#### Lean Page Object describing the widget\\n\\n"},{"kind":"code","text":"```ts\\nimport { By, PageElement } from \'@serenity-js/web\'\\n\\nclass Countries {\\n  static dropdown = () =>\\n    PageElement.located(By.css(\'[data-test=\\"countries\\"]\'))\\n      .describedAs(\'countries dropdown\');\\n}\\n```"},{"kind":"text","text":"\\n\\n#### Retrieving the selected value\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Select, Selected } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Nick\')\\n  .whoCan(BrowseTheWeb.using(protractor.browser))\\n  .attemptsTo(\\n    Select.value(\'UK\').from(Countries.dropdown),\\n    Ensure.that(Selected.valueOf(Countries.dropdown), equals(\'UK\')),\\n  )\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Select.value`"},{"kind":"text","text":"](/api/web/class/Select/#value)"}]},"sources":[{"fileName":"packages/web/src/screenplay/questions/Selected.ts","line":69,"character":11}],"parameters":[{"id":5071,"name":"pageElement","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) identifying the "},{"kind":"code","text":"`<select>`"},{"kind":"text","text":" element of interest"}]},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":4418,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":5072,"name":"valuesOf","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/questions/Selected.ts","line":128,"character":11}],"signatures":[{"id":5073,"name":"valuesOf","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Uses the [actor\'s](/api/core/class/Actor/) [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/) to retrieve\\nvalues of [options](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option)\\nselected in an [HTML "},{"kind":"code","text":"`<select multiple>`"},{"kind":"text","text":" element](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select#attr-multiple)\\n\\n#### Example widget\\n\\n"},{"kind":"code","text":"```html\\n<select multiple data-test=\'countries\'>\\n  <option value=\'UK\'>United Kingdom</option>\\n  <option value=\'PL\'>Poland</option>\\n  <option value=\'US\'>United States</option>\\n</select>\\n```"},{"kind":"text","text":"\\n\\n#### Lean Page Object describing the widget\\n\\n"},{"kind":"code","text":"```ts\\nimport { By, PageElement } from \'@serenity-js/web\'\\n\\nclass Countries {\\n  static dropdown = () =>\\n    PageElement.located(By.css(\'[data-test=\\"countries\\"]\'))\\n      .describedAs(\'countries dropdown\')\\n}\\n```"},{"kind":"text","text":"\\n\\n#### Retrieving the selected value\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Select, Selected } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Nick\')\\n  .whoCan(BrowseTheWeb.using(protractor.browser))\\n  .attemptsTo(\\n    Select.values(\'UK\').from(Countries.dropdown),\\n    Ensure.that(Selected.valuesOf(Countries.dropdown), equals([ \'UK\' ])),\\n  )\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Select.values`"},{"kind":"text","text":"](/api/web/class/Select/#values)"}]},"sources":[{"fileName":"packages/web/src/screenplay/questions/Selected.ts","line":128,"character":11}],"parameters":[{"id":5074,"name":"pageElement","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) identifying the "},{"kind":"code","text":"`<select>`"},{"kind":"text","text":" element of interest"}]},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":4418,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"array","elementType":{"type":"intrinsic","name":"string"}}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":5075,"name":"optionIn","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/questions/Selected.ts","line":189,"character":11}],"signatures":[{"id":5076,"name":"optionIn","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Uses the [actor\'s](/api/core/class/Actor/) [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/) to retrieve\\na single option selected in an [HTML "},{"kind":"code","text":"`<select>`"},{"kind":"text","text":" element](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select#attr-multiple)\\n\\n#### Example widget\\n\\n"},{"kind":"code","text":"```html\\n<select multiple data-test=\'countries\'>\\n  <option value=\'UK\'>United Kingdom</option>\\n  <option value=\'PL\'>Poland</option>\\n  <option value=\'US\'>United States</option>\\n</select>\\n```"},{"kind":"text","text":"\\n\\n#### Lean Page Object describing the widget\\n\\n"},{"kind":"code","text":"```ts\\nimport { By, PageElement } from \'@serenity-js/web\'\\n\\nclass Countries {\\n  static dropdown = () =>\\n    PageElement.located(By.css(\'[data-test=\\"countries\\"]\'))\\n      .describedAs(\'countries dropdown\')\\n}\\n```"},{"kind":"text","text":"\\n\\n#### Retrieving the selected value\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Select, Selected } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Nick\')\\n  .attemptsTo(\\n    Select.option(\'Poland\').from(Countries.dropdown),\\n    Ensure.that(\\n      Selected.optionIn(Countries.dropdown),\\n      equals(\'Poland\')\\n    ),\\n  )\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Select.option`"},{"kind":"text","text":"](/api/web/class/Select/#option)"}]},"sources":[{"fileName":"packages/web/src/screenplay/questions/Selected.ts","line":189,"character":11}],"parameters":[{"id":5077,"name":"pageElement","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) identifying the "},{"kind":"code","text":"`<select>`"},{"kind":"text","text":" element of interest"}]},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":4418,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":5078,"name":"optionsIn","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/questions/Selected.ts","line":250,"character":11}],"signatures":[{"id":5079,"name":"optionsIn","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Uses the [actor\'s](/api/core/class/Actor/) [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/) to retrieve\\noptions selected in an [HTML "},{"kind":"code","text":"`<select multiple>`"},{"kind":"text","text":" element](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select#attr-multiple)\\n\\n#### Example widget\\n\\n"},{"kind":"code","text":"```html\\n<select multiple data-test=\'countries\'>\\n  <option value=\'UK\'>United Kingdom</option>\\n  <option value=\'PL\'>Poland</option>\\n  <option value=\'US\'>United States</option>\\n</select>\\n```"},{"kind":"text","text":"\\n\\n#### Lean Page Object describing the widget\\n\\n"},{"kind":"code","text":"```ts\\nimport { By, PageElement } from \'@serenity-js/web\'\\n\\nclass Countries {\\n  static dropdown = () =>\\n    PageElement.located(By.css(\'[data-test=\\"countries\\"]\'))\\n      .describedAs(\'countries dropdown\')\\n}\\n```"},{"kind":"text","text":"\\n\\n#### Retrieving the selected value\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Select, Selected } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Nick\')\\n  .attemptsTo(\\n    Select.options(\'Poland\', \'United States\').from(Countries.dropdown),\\n    Ensure.that(\\n      Selected.optionsIn(Countries.dropdown),\\n      equals([ \'Poland\', \'United States\' ])\\n    ),\\n  )\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Select.options`"},{"kind":"text","text":"](/api/web/class/Select/#options)"}]},"sources":[{"fileName":"packages/web/src/screenplay/questions/Selected.ts","line":250,"character":11}],"parameters":[{"id":5080,"name":"pageElement","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) identifying the "},{"kind":"code","text":"`<select>`"},{"kind":"text","text":" element of interest"}]},"type":{"type":"reference","target":706,"typeArguments":[{"type":"reference","target":4418,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"array","elementType":{"type":"intrinsic","name":"string"}}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":5081,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":5082,"name":"new Selected","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":5068,"name":"Selected","package":"@serenity-js/web"}}]}],"groups":[{"title":"Constructors","children":[5081]},{"title":"Methods","children":[5069,5072,5075,5078]}],"sources":[{"fileName":"packages/web/src/screenplay/questions/Selected.ts","line":19,"character":13}],"permalink":"/api/web/class/Selected","categories":[],"previousId":5062,"nextId":5083},{"id":5083,"name":"Text","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Uses the [actor\'s](/api/core/class/Actor/) [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/) to retrieve\\nthe visible (i.e. not hidden by CSS) ["},{"kind":"code","text":"`innerText`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/innerText) of:\\n- a given ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)\\n- a group of ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElements/)\\n\\nThe result includes the visible text of any sub-elements, without any leading or trailing whitespace.\\n\\n## Example widget\\n\\n"},{"kind":"code","text":"```html\\n<h1>Shopping list</h1>\\n<ul id=\\"shopping-list\\">\\n  <li>Coffee<li>\\n  <li class=\\"bought\\">Honey<li>\\n  <li>Chocolate<li>\\n</ul>\\n```"},{"kind":"text","text":"\\n\\n## Retrieve text of a single ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { By, PageElement, Text } from \'@serenity-js/web\'\\n\\nconst header = () =>\\n  PageElement.located(By.css(\'h1\'))\\n    .describedAs(\'header\')\\n\\nawait actorCalled(\'Lisa\')\\n  .whoCan(BrowseTheWebWithWebdriverIO.using(browser))\\n  .attemptsTo(\\n    Ensure.that(Text.of(header()), equals(\'Shopping list\')),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Retrieve text of multiple ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElements/)\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { By, PageElement, Text } from \'@serenity-js/web\'\\n\\nconst shoppingListItems = () =>\\n  PageElements.located(By.css(\'#shopping-list li\'))\\n    .describedAs(\'shopping list items\')\\n\\nawait actorCalled(\'Lisa\')\\n  .attemptsTo(\\n    Ensure.that(\\n      Text.ofAll(shoppingListItems()),\\n      equals([ \'Coffee\', \'Honey\', \'Chocolate\' ])\\n    ),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Using as filter in [Page Element Query Language](/handbook/web-testing/page-element-query-language/)\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { contain, Ensure } from \'@serenity-js/assertions\'\\nimport { By, CssClasses, PageElement, Text } from \'@serenity-js/web\'\\n\\nconst shoppingListItemCalled = (name: string) =>\\n  PageElements.located(By.css(\'#shopping-list li\'))\\n    .describedAs(\'shopping list items\')\\n    .where(Text, equals(name))\\n    .first()\\n\\nawait actorCalled(\'Lisa\')\\n  .attemptsTo(\\n    Ensure.that(\\n      CssClasses.of(shoppingListItemCalled(\'Honey)),\\n      contain(\'bought\')\\n    ),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\n- ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/)\\n- ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter)\\n- ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/)"}]},"children":[{"id":5084,"name":"of","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/questions/Text.ts","line":107,"character":11}],"signatures":[{"id":5085,"name":"of","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/) that uses\\nthe [actor\'s](/api/core/class/Actor/) [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/) to retrieve\\nthe text of a single ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/).\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/questions/Text.ts","line":107,"character":11}],"parameters":[{"id":5086,"name":"pageElement","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":4418,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":1059,"typeArguments":[{"type":"reference","target":4418,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"}],"name":"QuestionAdapter","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":1064,"typeArguments":[{"type":"reference","target":4418,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"},{"type":"intrinsic","name":"string"}],"name":"MetaQuestionAdapter","package":"@serenity-js/core"}}]},{"id":5087,"name":"ofAll","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/questions/Text.ts","line":129,"character":11},{"fileName":"packages/web/src/screenplay/questions/Text.ts","line":130,"character":11},{"fileName":"packages/web/src/screenplay/questions/Text.ts","line":131,"character":11}],"signatures":[{"id":5088,"name":"ofAll","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/) that uses\\nthe [actor\'s](/api/core/class/Actor/) [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/) to retrieve\\nthe text of a group of ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElements/).\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/questions/Text.ts","line":129,"character":11}],"parameters":[{"id":5089,"name":"pageElements","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4494,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElements","package":"@serenity-js/web"}}],"type":{"type":"reference","target":1064,"typeArguments":[{"type":"reference","target":4418,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"},{"type":"array","elementType":{"type":"intrinsic","name":"string"}}],"name":"MetaQuestionAdapter","package":"@serenity-js/core"}},{"id":5090,"name":"ofAll","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/questions/Text.ts","line":130,"character":11}],"parameters":[{"id":5091,"name":"pageElements","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":706,"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4418,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"}}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1059,"typeArguments":[{"type":"array","elementType":{"type":"intrinsic","name":"string"}}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":5092,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":5093,"name":"new Text","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":5083,"name":"Text","package":"@serenity-js/web"}}]}],"groups":[{"title":"Constructors","children":[5092]},{"title":"Methods","children":[5084,5087]}],"sources":[{"fileName":"packages/web/src/screenplay/questions/Text.ts","line":95,"character":13}],"permalink":"/api/web/class/Text","categories":[],"previousId":5068,"nextId":5094},{"id":5094,"name":"Value","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Uses the [actor\'s](/api/core/class/Actor/) [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/) to retrieve\\nthe "},{"kind":"code","text":"`value`"},{"kind":"text","text":" attribute of a given ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/).\\n\\n## Example widget\\n"},{"kind":"code","text":"```html\\n<input type=\\"text\\" id=\\"username\\" value=\\"Alice\\" />\\n```"},{"kind":"text","text":"\\n\\n## Retrieve the "},{"kind":"code","text":"`value`"},{"kind":"text","text":" of a given ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { By, PageElement, Value } from \'@serenity-js/web\'\\n\\nconst usernameField = () =>\\n  PageElement.located(By.id(\'username\'))\\n    .describedAs(\'username field\')\\n\\nawait actorCalled(\'Lisa\')\\n  .attemptsTo(\\n    Ensure.that(Value.of(usernameField), equals(\'Alice\')),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Using Value as ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter)\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { By, PageElement, Value } from \'@serenity-js/web\'\\n\\nconst usernameField = () =>\\n  PageElement.located(By.id(\'username\'))\\n    .describedAs(\'username field\')\\n\\nawait actorCalled(\'Lisa\')\\n  .attemptsTo(\\n    Ensure.that(\\n      Value.of(usernameField).toLocaleLowerCase()[0],\\n      equals(\'a\')  // [a]lice\\n    ),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\n- ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/)\\n- ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter)\\n- ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/)"}]},"children":[{"id":5095,"name":"of","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/questions/Value.ts","line":72,"character":11}],"signatures":[{"id":5096,"name":"of","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/) that uses\\nthe [actor\'s](/api/core/class/Actor/) [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/) to retrieve\\nthe "},{"kind":"code","text":"`value`"},{"kind":"text","text":" attribute of a given ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/).\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/questions/Value.ts","line":72,"character":11}],"parameters":[{"id":5097,"name":"pageElement","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":4418,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":1059,"typeArguments":[{"type":"reference","target":4418,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"}],"name":"QuestionAdapter","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":1064,"typeArguments":[{"type":"reference","target":4418,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"},{"type":"intrinsic","name":"string"}],"name":"MetaQuestionAdapter","package":"@serenity-js/core"}}]},{"id":5098,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":5099,"name":"new Value","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":5094,"name":"Value","package":"@serenity-js/web"}}]}],"groups":[{"title":"Constructors","children":[5098]},{"title":"Methods","children":[5095]}],"sources":[{"fileName":"packages/web/src/screenplay/questions/Value.ts","line":60,"character":13}],"permalink":"/api/web/class/Value","categories":[],"previousId":5083,"nextId":5100},{"id":5100,"name":"Photographer","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The Photographer is a ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/) who takes screenshots\\nusing the web browser associated with the [actor](/api/core/class/Actor/) that is\\ncurrently [in the spotlight](/api/core/function/actorInTheSpotlight/).\\n\\n## Registering Photographer programmatically\\n\\n"},{"kind":"code","text":"```ts\\nimport { configure, ArtifactArchiver } from \'@serenity-js/core\'\\nimport { Photographer, TakePhotosOfFailures } from \'@serenity-js/web\'\\n\\nconfigure({\\n  crew: [\\n    ArtifactArchiver.storingArtifactsAt(process.cwd(), \'target/site/serenity\'),\\n    Photographer.whoWill(TakePhotosOfFailures),\\n  ]\\n})\\n```"},{"kind":"text","text":"\\n\\n## Using Photographer with Playwright Test\\n\\n"},{"kind":"code","text":"```ts\\n// playwright.config.ts\\nimport { defineConfig } from \'@playwright/test\'\\nimport type { SerenityFixtures, SerenityWorkerFixtures } from \'@serenity-js/playwright-test\'\\n\\nexport default defineConfig<SerenityFixtures, SerenityWorkerFixtures>({\\n  reporter: [\\n      [ \'@serenity-js/playwright-test\', {\\n          crew: [\\n              \'@serenity-js/serenity-bdd\',\\n              [ \'@serenity-js/core:ArtifactArchiver\', { outputDirectory: \'target/site/serenity\' } ],\\n          ]\\n          // other Serenity/JS config\\n      }]\\n  ],\\n\\n  use: {\\n    crew: [\\n      [ \'@serenity-js/web:Photographer\', {\\n        strategy: \'TakePhotosOfFailures\',\\n        // strategy: \'TakePhotosOfInteractions\',\\n      } ]\\n    ],\\n  },\\n})\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`SerenityFixtures`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityFixtures/)\\n- ["},{"kind":"code","text":"`SerenityWorkerFixtures`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityWorkerFixtures/)\\n\\n## Using Photographer with WebdriverIO\\n\\n"},{"kind":"code","text":"```ts\\n// wdio.conf.ts\\nimport { ArtifactArchiver } from \'@serenity-js/core\'\\nimport { WebdriverIOConfig } from \'@serenity-js/webdriverio\'\\n\\nexport const config: WebdriverIOConfig= {\\n\\n  // Tell WebdriverIO to use Serenity/JS framework\\n  framework: \'@serenity-js/webdriverio\',\\n\\n  serenity: {\\n    // Configure Serenity/JS to use an appropriate test runner adapter\\n    runner: \'cucumber\',\\n    // runner: \'mocha\',\\n    // runner: \'jasmine\',\\n\\n    // register custom Actors class to configure your Serenity/JS actors\\n    actors: new Actors(),\\n\\n    // Register StageCrewMembers we\'ve imported at the top of this file\\n    crew: [\\n      \'@serenity-js/serenity-bdd\',\\n      [ \'@serenity-js/core:ArtifactArchiver\', { outputDirectory: \'target/site/serenity\' } ],\\n      [ \'@serenity-js/web:Photographer\', {\\n        strategy: \'TakePhotosOfFailures\',\\n        // strategy: \'TakePhotosOfInteractions\',\\n      } ]\\n    ]\\n  },\\n\\n  // ... rest of the config omitted for brevity\\n}\\n```"},{"kind":"text","text":"\\n\\n## Using Photographer with Protractor\\n\\n"},{"kind":"code","text":"```ts\\n// protractor.conf.js\\nexports.config = {\\n\\n  // Tell Protractor to use the Serenity/JS framework Protractor Adapter\\n  framework:      \'custom\',\\n  frameworkPath:  require.resolve(\'@serenity-js/protractor/adapter\'),\\n\\n  serenity: {\\n    runner: \'jasmine\',\\n    // runner: \'cucumber\',\\n    // runner: \'mocha\',\\n    crew: [\\n      @serenity-js/serenity-bdd\',\\n       \'@serenity-js/core:ArtifactArchiver\', { outputDirectory: \'target/site/serenity\' } ],\\n       \'@serenity-js/web:Photographer\', {\\n         strategy: \'TakePhotosOfFailures\',\\n         // strategy: \'TakePhotosOfInteractions\',\\n       ]\\n    ]\\n  },\\n\\n  // ... rest of the config omitted for brevity\\n}\\n```"},{"kind":"text","text":"\\n\\n## Taking photos only upon failures only\\n\\n"},{"kind":"code","text":"```ts\\nimport { Photographer, TakePhotosOfFailures } from \'@serenity-js/web\'\\n\\nPhotographer.whoWill(TakePhotosOfFailures)\\n```"},{"kind":"text","text":"\\n\\n## Taking photos of all the interactions\\n\\n"},{"kind":"code","text":"```ts\\nimport { Photographer, TakePhotosOfInteractions } from \'@serenity-js/web\'\\n\\nPhotographer.whoWill(TakePhotosOfInteractions)\\n```"},{"kind":"text","text":"\\n\\n## Taking photos before and after all the interactions\\n\\n"},{"kind":"code","text":"```ts\\nimport { Photographer, TakePhotosBeforeAndAfterInteractions } from \'@serenity-js/web\'\\n\\nPhotographer.whoWill(TakePhotosBeforeAndAfterInteractions)\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Stage`"},{"kind":"text","text":"](/api/core/class/Stage/)\\n- ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/)\\n- ["},{"kind":"code","text":"`TakePhotosBeforeAndAfterInteractions`"},{"kind":"text","text":"](/api/web/class/TakePhotosBeforeAndAfterInteractions/)\\n- ["},{"kind":"code","text":"`TakePhotosOfFailures`"},{"kind":"text","text":"](/api/web/class/TakePhotosOfFailures/)\\n- ["},{"kind":"code","text":"`TakePhotosOfInteractions`"},{"kind":"text","text":"](/api/web/class/TakePhotosOfInteractions/)"}]},"children":[{"id":5101,"name":"whoWill","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/Photographer.ts","line":166,"character":11}],"signatures":[{"id":5102,"name":"whoWill","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a new ["},{"kind":"code","text":"`Photographer`"},{"kind":"text","text":"](/api/web/class/Photographer/) configured to take photos (screenshots)\\nas per the specified ["},{"kind":"code","text":"`PhotoTakingStrategy`"},{"kind":"text","text":"](/api/web/class/PhotoTakingStrategy/)."}]},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/Photographer.ts","line":166,"character":11}],"parameters":[{"id":5103,"name":"strategy","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A no-arg constructor function that instantiates a ["},{"kind":"code","text":"`PhotoTakingStrategy`"},{"kind":"text","text":"](/api/web/class/PhotoTakingStrategy/)"}]},"type":{"type":"reflection","declaration":{"id":5104,"name":"__type","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/Photographer.ts","line":166,"character":29}],"signatures":[{"id":5105,"name":"new strategy","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/Photographer.ts","line":166,"character":29}],"type":{"type":"reference","target":5123,"name":"PhotoTakingStrategy","package":"@serenity-js/web"}}]}}}],"type":{"type":"reference","target":2241,"name":"StageCrewMember","package":"@serenity-js/core"}}]},{"id":5106,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/Photographer.ts","line":176,"character":11}],"signatures":[{"id":5107,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a new ["},{"kind":"code","text":"`Photographer`"},{"kind":"text","text":"](/api/web/class/Photographer/) configured to take photos (screenshots)\\nas per the specified ["},{"kind":"code","text":"`PhotoTakingStrategy`"},{"kind":"text","text":"](/api/web/class/PhotoTakingStrategy/)."}]},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/Photographer.ts","line":176,"character":11}],"parameters":[{"id":5108,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reflection","declaration":{"id":5109,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":5110,"name":"strategy","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/Photographer.ts","line":176,"character":31}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"union","types":[{"type":"literal","value":"PhotoTakingStrategy"},{"type":"literal","value":"TakePhotosBeforeAndAfterInteractions"},{"type":"literal","value":"TakePhotosOfFailures"},{"type":"literal","value":"TakePhotosOfInteractions"}]},{"type":"literal","value":"PhotoTakingStrategy"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"}}],"groups":[{"title":"Properties","children":[5110]}],"sources":[{"fileName":"packages/web/src/stage/crew/photographer/Photographer.ts","line":176,"character":29}]}}}],"type":{"type":"reference","target":2241,"name":"StageCrewMember","package":"@serenity-js/core"}}]},{"id":5111,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/Photographer.ts","line":193,"character":4}],"signatures":[{"id":5112,"name":"new Photographer","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/Photographer.ts","line":193,"character":4}],"parameters":[{"id":5113,"name":"photoTakingStrategy","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":5123,"name":"PhotoTakingStrategy","package":"@serenity-js/web"}},{"id":5114,"name":"stage","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":2158,"name":"Stage","package":"@serenity-js/core"}}],"type":{"type":"reference","target":5100,"name":"Photographer","package":"@serenity-js/web"}}]},{"id":5117,"name":"assignedTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/Photographer.ts","line":205,"character":4}],"signatures":[{"id":5118,"name":"assignedTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Assigns this ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/) to a given ["},{"kind":"code","text":"`Stage`"},{"kind":"text","text":"](/api/core/class/Stage/)."}]},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/Photographer.ts","line":205,"character":4}],"parameters":[{"id":5119,"name":"stage","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An instance of a ["},{"kind":"code","text":"`Stage`"},{"kind":"text","text":"](/api/core/class/Stage/) this ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/) will be assigned to"}]},"type":{"type":"reference","target":2158,"name":"Stage","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2241,"name":"StageCrewMember","package":"@serenity-js/core"},"implementationOf":{"type":"reference","target":-1,"name":"StageCrewMember.assignedTo"}}],"implementationOf":{"type":"reference","target":-1,"name":"StageCrewMember.assignedTo"}},{"id":5120,"name":"notifyOf","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/Photographer.ts","line":216,"character":4}],"signatures":[{"id":5121,"name":"notifyOf","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Handles ["},{"kind":"code","text":"`DomainEvent`"},{"kind":"text","text":"](/api/core-events/class/DomainEvent/) objects emitted by the ["},{"kind":"code","text":"`Stage`"},{"kind":"text","text":"](/api/core/class/Stage/)\\nthis ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/) is assigned to."}]},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/Photographer.ts","line":216,"character":4}],"parameters":[{"id":5122,"name":"event","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":2630,"name":"DomainEvent","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"void"},"implementationOf":{"type":"reference","target":-1,"name":"StageCrewMember.notifyOf"}}],"implementationOf":{"type":"reference","target":-1,"name":"StageCrewMember.notifyOf"}}],"groups":[{"title":"Constructors","children":[5111]},{"title":"Methods","children":[5101,5106,5117,5120]}],"sources":[{"fileName":"packages/web/src/stage/crew/photographer/Photographer.ts","line":157,"character":13}],"implementedTypes":[{"type":"reference","target":2241,"name":"StageCrewMember","package":"@serenity-js/core"}],"permalink":"/api/web/class/Photographer","categories":[],"previousId":5094,"nextId":5123},{"id":5123,"name":"PhotoTakingStrategy","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"Configures the ["},{"kind":"code","text":"`Photographer`"},{"kind":"text","text":"](/api/web/class/Photographer/) to take photos, a.k.a. screenshots,\\nof the ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) performed by the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) in the [spotlight](/api/core/function/actorInTheSpotlight/)\\nwhen desired conditions are met."}]},"children":[{"id":5124,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":5125,"name":"new PhotoTakingStrategy","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":5123,"name":"PhotoTakingStrategy","package":"@serenity-js/web"}}]},{"id":5126,"name":"considerTakingPhoto","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/strategies/PhotoTakingStrategy.ts","line":30,"character":10}],"signatures":[{"id":5127,"name":"considerTakingPhoto","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Takes a photo of the web browser used by the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) in the [spotlight](/api/core/function/actorInTheSpotlight/).\\n\\n#### Learn more\\n- [ActivityStarts](/api/core-events/class/ActivityStarts/)\\n- [ActivityFinished](/api/core-events/class/ActivityFinished/)\\n- ["},{"kind":"code","text":"`Stage`"},{"kind":"text","text":"](/api/core/class/Stage/)"}]},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/strategies/PhotoTakingStrategy.ts","line":30,"character":10}],"parameters":[{"id":5128,"name":"event","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":2372,"name":"ActivityStarts","package":"@serenity-js/core"},{"type":"reference","target":2302,"name":"ActivityFinished","package":"@serenity-js/core"}]}},{"id":5129,"name":"stage","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The Stage that holds reference to the Actor in the spotlight"}]},"type":{"type":"reference","target":2158,"name":"Stage","package":"@serenity-js/core"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]}],"groups":[{"title":"Constructors","children":[5124]},{"title":"Methods","children":[5126]}],"sources":[{"fileName":"packages/web/src/stage/crew/photographer/strategies/PhotoTakingStrategy.ts","line":16,"character":22}],"extendedBy":[{"type":"reference","target":5142,"name":"TakePhotosBeforeAndAfterInteractions"},{"type":"reference","target":5155,"name":"TakePhotosOfFailures"},{"type":"reference","target":5168,"name":"TakePhotosOfInteractions"}],"permalink":"/api/web/class/PhotoTakingStrategy","categories":[],"previousId":5100,"nextId":5142},{"id":5142,"name":"TakePhotosBeforeAndAfterInteractions","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the ["},{"kind":"code","text":"`Photographer`"},{"kind":"text","text":"](/api/web/class/Photographer/) to take photos (a.k.a. screenshots) **both before and after**\\nevery single ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/) performed\\nby the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) in the [spotlight](/api/core/function/actorInTheSpotlight/).\\n\\n**Please note** that this strategy will result in _a lot_ of screenshots being taken,\\nwhich will seriously affect the performance of your tests.\\nFor this reason, it\'s best to use it only for debugging purposes."}]},"children":[{"id":5143,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":5144,"name":"new TakePhotosBeforeAndAfterInteractions","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":5142,"name":"TakePhotosBeforeAndAfterInteractions","package":"@serenity-js/web"},"inheritedFrom":{"type":"reference","target":5125,"name":"PhotoTakingStrategy.constructor"}}],"inheritedFrom":{"type":"reference","target":5124,"name":"PhotoTakingStrategy.constructor"}},{"id":5151,"name":"considerTakingPhoto","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/strategies/PhotoTakingStrategy.ts","line":30,"character":10}],"signatures":[{"id":5152,"name":"considerTakingPhoto","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Takes a photo of the web browser used by the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) in the [spotlight](/api/core/function/actorInTheSpotlight/).\\n\\n#### Learn more\\n- [ActivityStarts](/api/core-events/class/ActivityStarts/)\\n- [ActivityFinished](/api/core-events/class/ActivityFinished/)\\n- ["},{"kind":"code","text":"`Stage`"},{"kind":"text","text":"](/api/core/class/Stage/)"}]},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/strategies/PhotoTakingStrategy.ts","line":30,"character":10}],"parameters":[{"id":5153,"name":"event","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":2372,"name":"ActivityStarts","package":"@serenity-js/core"},{"type":"reference","target":2302,"name":"ActivityFinished","package":"@serenity-js/core"}]}},{"id":5154,"name":"stage","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The Stage that holds reference to the Actor in the spotlight"}]},"type":{"type":"reference","target":2158,"name":"Stage","package":"@serenity-js/core"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":5127,"name":"PhotoTakingStrategy.considerTakingPhoto"}}],"inheritedFrom":{"type":"reference","target":5126,"name":"PhotoTakingStrategy.considerTakingPhoto"}}],"groups":[{"title":"Constructors","children":[5143]},{"title":"Methods","children":[5151]}],"sources":[{"fileName":"packages/web/src/stage/crew/photographer/strategies/TakePhotosBeforeAndAfterInteractions.ts","line":17,"character":13}],"extendedTypes":[{"type":"reference","target":5123,"name":"PhotoTakingStrategy","package":"@serenity-js/web"}],"permalink":"/api/web/class/TakePhotosBeforeAndAfterInteractions","categories":[],"previousId":5123,"nextId":5155},{"id":5155,"name":"TakePhotosOfFailures","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the ["},{"kind":"code","text":"`Photographer`"},{"kind":"text","text":"](/api/web/class/Photographer/) to take photos (a.k.a. screenshots)\\nwhen then ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/) performed\\nby the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) in the [spotlight](/api/core/function/actorInTheSpotlight/)\\nresults in an error.\\n\\nThis strategy works best when you are interested in the screenshots only when\\na scenario fails."}]},"children":[{"id":5156,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":5157,"name":"new TakePhotosOfFailures","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":5155,"name":"TakePhotosOfFailures","package":"@serenity-js/web"},"inheritedFrom":{"type":"reference","target":5125,"name":"PhotoTakingStrategy.constructor"}}],"inheritedFrom":{"type":"reference","target":5124,"name":"PhotoTakingStrategy.constructor"}},{"id":5164,"name":"considerTakingPhoto","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/strategies/PhotoTakingStrategy.ts","line":30,"character":10}],"signatures":[{"id":5165,"name":"considerTakingPhoto","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Takes a photo of the web browser used by the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) in the [spotlight](/api/core/function/actorInTheSpotlight/).\\n\\n#### Learn more\\n- [ActivityStarts](/api/core-events/class/ActivityStarts/)\\n- [ActivityFinished](/api/core-events/class/ActivityFinished/)\\n- ["},{"kind":"code","text":"`Stage`"},{"kind":"text","text":"](/api/core/class/Stage/)"}]},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/strategies/PhotoTakingStrategy.ts","line":30,"character":10}],"parameters":[{"id":5166,"name":"event","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":2372,"name":"ActivityStarts","package":"@serenity-js/core"},{"type":"reference","target":2302,"name":"ActivityFinished","package":"@serenity-js/core"}]}},{"id":5167,"name":"stage","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The Stage that holds reference to the Actor in the spotlight"}]},"type":{"type":"reference","target":2158,"name":"Stage","package":"@serenity-js/core"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":5127,"name":"PhotoTakingStrategy.considerTakingPhoto"}}],"inheritedFrom":{"type":"reference","target":5126,"name":"PhotoTakingStrategy.considerTakingPhoto"}}],"groups":[{"title":"Constructors","children":[5156]},{"title":"Methods","children":[5164]}],"sources":[{"fileName":"packages/web/src/stage/crew/photographer/strategies/TakePhotosOfFailures.ts","line":18,"character":13}],"extendedTypes":[{"type":"reference","target":5123,"name":"PhotoTakingStrategy","package":"@serenity-js/web"}],"permalink":"/api/web/class/TakePhotosOfFailures","categories":[],"previousId":5142,"nextId":5168},{"id":5168,"name":"TakePhotosOfInteractions","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the ["},{"kind":"code","text":"`Photographer`"},{"kind":"text","text":"](/api/web/class/Photographer/) to take photos (a.k.a. screenshots)\\nwhen then ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) in the [spotlight](/api/core/function/actorInTheSpotlight/)\\nperforms any ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/).\\n\\nThis strategy works best when you want the results of your automated tests\\nto become comprehensive living documentation of your system.\\n\\n*Please note* that taking screenshots affects the performance of your tests."}]},"children":[{"id":5169,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":5170,"name":"new TakePhotosOfInteractions","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":5168,"name":"TakePhotosOfInteractions","package":"@serenity-js/web"},"inheritedFrom":{"type":"reference","target":5125,"name":"PhotoTakingStrategy.constructor"}}],"inheritedFrom":{"type":"reference","target":5124,"name":"PhotoTakingStrategy.constructor"}},{"id":5177,"name":"considerTakingPhoto","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/strategies/PhotoTakingStrategy.ts","line":30,"character":10}],"signatures":[{"id":5178,"name":"considerTakingPhoto","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Takes a photo of the web browser used by the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) in the [spotlight](/api/core/function/actorInTheSpotlight/).\\n\\n#### Learn more\\n- [ActivityStarts](/api/core-events/class/ActivityStarts/)\\n- [ActivityFinished](/api/core-events/class/ActivityFinished/)\\n- ["},{"kind":"code","text":"`Stage`"},{"kind":"text","text":"](/api/core/class/Stage/)"}]},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/strategies/PhotoTakingStrategy.ts","line":30,"character":10}],"parameters":[{"id":5179,"name":"event","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":2372,"name":"ActivityStarts","package":"@serenity-js/core"},{"type":"reference","target":2302,"name":"ActivityFinished","package":"@serenity-js/core"}]}},{"id":5180,"name":"stage","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The Stage that holds reference to the Actor in the spotlight"}]},"type":{"type":"reference","target":2158,"name":"Stage","package":"@serenity-js/core"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":5127,"name":"PhotoTakingStrategy.considerTakingPhoto"}}],"inheritedFrom":{"type":"reference","target":5126,"name":"PhotoTakingStrategy.considerTakingPhoto"}}],"groups":[{"title":"Constructors","children":[5169]},{"title":"Methods","children":[5177]}],"sources":[{"fileName":"packages/web/src/stage/crew/photographer/strategies/TakePhotosOfInteractions.ts","line":18,"character":13}],"extendedTypes":[{"type":"reference","target":5123,"name":"PhotoTakingStrategy","package":"@serenity-js/web"}],"permalink":"/api/web/class/TakePhotosOfInteractions","categories":[],"previousId":5155}],"groups":[{"title":"Abilities","children":[3316]},{"title":"Activities","children":[3340,3386,3426,3466,3513,3525,3568,3608,3620,3657,3705,3745,3781,3816,3855]},{"title":"Errors","children":[3231,3257,3280]},{"title":"Expectations","children":[3306,3308,3310,3312,3314]},{"title":"Models","children":[3891,3928,3932,3963,4069,4186,4252,4302,4418,4494,4621,4709,4733,4863,4866,4078,4100,4124,4148,4170,4757,4779,4791,4805,4817,4829,4841,4853]},{"title":"Questions","children":[4869,4961,5056,5062,5068,5083,5094]},{"title":"Stage","children":[5100,5123,5142,5155,5168]}],"sources":[{"fileName":"packages/web/src/index.ts","line":1,"character":0}],"permalink":"/api/web"},"urlSlug":"web"}],"packageName":"@serenity-js/web","packageVersion":"3.32.1"},{"entryPoints":[{"index":false,"label":"Test runner adapter","reflection":{"id":26,"name":"@serenity-js/webdriverio/adapter","variant":"declaration","kind":2,"flags":{"isExternal":true},"children":[{"id":6740,"name":"WebdriverIOFrameworkAdapterFactory","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":6741,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/adapter/WebdriverIOFrameworkAdapterFactory.ts","line":14,"character":4}],"signatures":[{"id":6742,"name":"new WebdriverIOFrameworkAdapterFactory","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/adapter/WebdriverIOFrameworkAdapterFactory.ts","line":14,"character":4}],"parameters":[{"id":6743,"name":"serenity","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1951,"name":"Serenity","package":"@serenity-js/core"}},{"id":6744,"name":"loader","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"ModuleLoader","package":"@serenity-js/core"}},{"id":6745,"name":"cwd","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Path","package":"@serenity-js/core"}}],"type":{"type":"reference","target":6740,"name":"WebdriverIOFrameworkAdapterFactory","package":"@serenity-js/webdriverio"}}]},{"id":6749,"name":"init","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/adapter/WebdriverIOFrameworkAdapterFactory.ts","line":21,"character":11}],"signatures":[{"id":6750,"name":"init","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/adapter/WebdriverIOFrameworkAdapterFactory.ts","line":21,"character":11}],"parameters":[{"id":6751,"name":"cid","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":6752,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":6368,"name":"WebdriverIOConfig","package":"@serenity-js/webdriverio"}},{"id":6753,"name":"specs","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":6754,"name":"capabilities","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/Capabilities.ts","qualifiedName":"RequestedStandaloneCapabilities"},"name":"RequestedStandaloneCapabilities","package":"@wdio/types"},{"type":"array","elementType":{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/Capabilities.ts","qualifiedName":"RequestedStandaloneCapabilities"},"name":"RequestedStandaloneCapabilities","package":"@wdio/types"}},{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/Capabilities.ts","qualifiedName":"RequestedMultiremoteCapabilities"},"name":"RequestedMultiremoteCapabilities","package":"@wdio/types"},{"type":"array","elementType":{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/Capabilities.ts","qualifiedName":"RequestedMultiremoteCapabilities"},"name":"RequestedMultiremoteCapabilities","package":"@wdio/types"}}]}},{"id":6755,"name":"reporter","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/events.d.ts","qualifiedName":"EventEmitter"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/events.d.ts","qualifiedName":"DefaultEventMap"},"name":"DefaultEventMap","package":"@types/node"}],"name":"EventEmitter","package":"@types/node"},{"type":"reference","name":"ProvidesWriteStream","package":"@serenity-js/webdriverio"},{"type":"reference","name":"InitialisesReporters","package":"@serenity-js/webdriverio"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","name":"WebdriverIOFrameworkAdapter","package":"@serenity-js/webdriverio"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]}],"groups":[{"title":"Constructors","children":[6741]},{"title":"Methods","children":[6749]}],"sources":[{"fileName":"packages/webdriverio/src/adapter/WebdriverIOFrameworkAdapterFactory.ts","line":13,"character":13}],"permalink":"/api/webdriverio-adapter/class/WebdriverIOFrameworkAdapterFactory","categories":[]}],"groups":[{"title":"Test Runner Adapter","children":[6740]}],"sources":[{"fileName":"packages/webdriverio/src/adapter/index.ts","line":1,"character":0}],"permalink":"/api/webdriverio-adapter"},"urlSlug":"webdriverio-adapter"},{"index":true,"label":"index","reflection":{"id":9,"name":"@serenity-js/webdriverio","variant":"declaration","kind":2,"flags":{"isExternal":true},"children":[{"id":6368,"name":"WebdriverIOConfig","variant":"declaration","kind":2097152,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"[WebdriverIO configuration object](https://webdriver.io/docs/configurationfile/),\\nwith [Serenity/JS-specific additions](https://serenity-js.orgapi/core/class/SerenityConfig/).\\n\\n## Integrating WebdriverIO with Serenity/JS\\n\\n"},{"kind":"code","text":"```ts\\n// wdio.conf.ts\\nimport { WebdriverIOConfig } from \'@serenity-js/webdriverio\'\\n\\nexport const config: WebdriverIOConfig = {\\n\\n  framework: \'@serenity-js/webdriverio\',\\n\\n  serenity: {\\n    runner: \'cucumber\',\\n    // runner: \'mocha\',\\n    // runner: \'jasmine\',\\n\\n    crew: [\\n      // Optional, print test execution results to standard output\\n      \'@serenity-js/console-reporter\',\\n\\n      // Optional, produce Serenity BDD reports\\n      // and living documentation (HTML)\\n      \'@serenity-js/serenity-bdd\',\\n      [ \'@serenity-js/core:ArtifactArchiver\', {\\n          outputDirectory: \'target/site/serenity\'\\n      } ],\\n\\n      // Optional, automatically capture screenshots\\n      // upon interaction failure\\n      [ \'@serenity-js/web:Photographer\', {\\n          strategy: \'TakePhotosOfFailures\'\\n          // strategy: \'TakePhotosOfInteractions\'\\n      } ],\\n    ]\\n  },\\n\\n  // Configure your Cucumber runner\\n  cucumberOpts: {\\n    // see Cucumber configuration options below\\n  },\\n\\n  // ... or Jasmine runner\\n  jasmineOpts: {\\n    // see Jasmine configuration options below\\n  },\\n\\n  // ... or Mocha runner\\n  mochaOpts: {\\n     // see Mocha configuration options below\\n  },\\n\\n  runner: \'local\',\\n\\n  specs: [\\n    \'./features/*.feature\',\\n\\n    // or for Mocha/Jasmine\\n    // \'./*.spec.ts\'\\n  ],\\n\\n  // Any other WebdriverIO configuration\\n}\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- [WebdriverIO configuration file](https://webdriver.io/docs/configurationfile/)\\n- ["},{"kind":"code","text":"`CucumberConfig`"},{"kind":"text","text":"](/api/cucumber-adapter/interface/CucumberConfig/)\\n- ["},{"kind":"code","text":"`JasmineConfig`"},{"kind":"text","text":"](/api/jasmine-adapter/interface/JasmineConfig/)\\n- ["},{"kind":"code","text":"`MochaConfig`"},{"kind":"text","text":"](/api/mocha-adapter/interface/MochaConfig/)"}]},"sources":[{"fileName":"packages/webdriverio/src/config/WebdriverIOConfig.ts","line":79,"character":12}],"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/index.ts","qualifiedName":"__global.WebdriverIO.Config"},"name":"WebdriverIO.Config","package":"@wdio/types","qualifiedName":"__global.WebdriverIO.Config"},{"type":"reference","target":6369,"name":"WithSerenityConfig","package":"@serenity-js/webdriverio"}]},"permalink":"/api/webdriverio#WebdriverIOConfig","categories":[],"previousId":6373,"nextId":6369},{"id":6369,"name":"WithSerenityConfig","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"[WebdriverIO configuration object](https://webdriver.io/docs/configurationfile/),\\nwith [Serenity/JS-specific additions](https://serenity-js.orgapi/core/class/SerenityConfig/).\\n\\n## Integrating WebdriverIO with Serenity/JS\\n\\n"},{"kind":"code","text":"```ts\\n// wdio.conf.ts\\nimport { WithSerenityConfig } from \'@serenity-js/webdriverio\'\\n\\nexport const config: WebdriverIO.Config & WithSerenityConfig = {\\n\\n  framework: \'@serenity-js/webdriverio\',\\n\\n  serenity: {\\n    runner: \'cucumber\',\\n    // runner: \'mocha\',\\n    // runner: \'jasmine\',\\n\\n    crew: [\\n      // Optional, print test execution results to standard output\\n      \'@serenity-js/console-reporter\',\\n\\n      // Optional, produce Serenity BDD reports\\n      // and living documentation (HTML)\\n      \'@serenity-js/serenity-bdd\',\\n      [ \'@serenity-js/core:ArtifactArchiver\', {\\n          outputDirectory: \'target/site/serenity\'\\n      } ],\\n\\n      // Optional, automatically capture screenshots\\n      // upon interaction failure\\n      [ \'@serenity-js/web:Photographer\', {\\n          strategy: \'TakePhotosOfFailures\'\\n          // strategy: \'TakePhotosOfInteractions\'\\n      } ],\\n    ]\\n  },\\n\\n  // Configure your Cucumber runner\\n  cucumberOpts: {\\n    // see Cucumber configuration options below\\n  },\\n\\n  // ... or Jasmine runner\\n  jasmineOpts: {\\n    // see Jasmine configuration options below\\n  },\\n\\n  // ... or Mocha runner\\n  mochaOpts: {\\n     // see Mocha configuration options below\\n  },\\n\\n  runner: \'local\',\\n\\n  specs: [\\n    \'./features/*.feature\',\\n\\n    // or for Mocha/Jasmine\\n    // \'./*.spec.ts\'\\n  ],\\n\\n  // Any other WebdriverIO configuration\\n}\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- [WebdriverIO configuration file](https://webdriver.io/docs/configurationfile/)\\n- ["},{"kind":"code","text":"`CucumberConfig`"},{"kind":"text","text":"](/api/cucumber-adapter/interface/CucumberConfig/)\\n- ["},{"kind":"code","text":"`JasmineConfig`"},{"kind":"text","text":"](/api/jasmine-adapter/interface/JasmineConfig/)\\n- ["},{"kind":"code","text":"`MochaConfig`"},{"kind":"text","text":"](/api/mocha-adapter/interface/MochaConfig/)"}]},"children":[{"id":6370,"name":"serenity","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Serenity/JS configuration with an additional "},{"kind":"code","text":"`runner`"},{"kind":"text","text":" entry\\nallowing to specify the test runner, such as "},{"kind":"code","text":"`cucumber`"},{"kind":"text","text":", "},{"kind":"code","text":"`mocha`"},{"kind":"text","text":", or "},{"kind":"code","text":"`jasmine`"},{"kind":"text","text":".\\n\\n#### Learn more\\n\\n- [WebdriverIO configuration file](https://webdriver.io/docs/configurationfile/)\\n- ["},{"kind":"code","text":"`CucumberConfig`"},{"kind":"text","text":"](/api/cucumber-adapter/interface/CucumberConfig/)\\n- ["},{"kind":"code","text":"`JasmineConfig`"},{"kind":"text","text":"](/api/jasmine-adapter/interface/JasmineConfig/)\\n- ["},{"kind":"code","text":"`MochaConfig`"},{"kind":"text","text":"](/api/mocha-adapter/interface/MochaConfig/)"}]},"sources":[{"fileName":"packages/webdriverio/src/config/WithSerenityConfig.ts","line":92,"character":4}],"type":{"type":"intersection","types":[{"type":"reference","target":85,"name":"SerenityConfig","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":6371,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":6372,"name":"runner","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/webdriverio/src/config/WithSerenityConfig.ts","line":92,"character":34}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[6372]}],"sources":[{"fileName":"packages/webdriverio/src/config/WithSerenityConfig.ts","line":92,"character":32}]}}]}}],"groups":[{"title":"Properties","children":[6370]}],"sources":[{"fileName":"packages/webdriverio/src/config/WithSerenityConfig.ts","line":79,"character":17}],"permalink":"/api/webdriverio/interface/WithSerenityConfig","categories":[],"previousId":6368,"nextId":6400},{"id":10,"name":"default","variant":"declaration","kind":32,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"WebdriverIO Framework Adapter integrates WebdriverIO with Serenity/JS"}]},"sources":[{"fileName":"packages/webdriverio/src/index.ts","line":12,"character":0}],"type":{"type":"reflection","declaration":{"id":11,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":12,"name":"init","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/index.ts","line":13,"character":10}],"signatures":[{"id":13,"name":"init","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/index.ts","line":13,"character":10}],"parameters":[{"id":14,"name":"cid","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":15,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":6368,"name":"WebdriverIOConfig","package":"@serenity-js/webdriverio"}},{"id":16,"name":"specs","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":17,"name":"capabilities","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/Capabilities.ts","qualifiedName":"RequestedStandaloneCapabilities"},"name":"RequestedStandaloneCapabilities","package":"@wdio/types"},{"type":"array","elementType":{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/Capabilities.ts","qualifiedName":"RequestedStandaloneCapabilities"},"name":"RequestedStandaloneCapabilities","package":"@wdio/types"}},{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/Capabilities.ts","qualifiedName":"RequestedMultiremoteCapabilities"},"name":"RequestedMultiremoteCapabilities","package":"@wdio/types"},{"type":"array","elementType":{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/Capabilities.ts","qualifiedName":"RequestedMultiremoteCapabilities"},"name":"RequestedMultiremoteCapabilities","package":"@wdio/types"}}]}},{"id":18,"name":"reporter","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/events.d.ts","qualifiedName":"EventEmitter"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/events.d.ts","qualifiedName":"DefaultEventMap"},"name":"DefaultEventMap","package":"@types/node"}],"name":"EventEmitter","package":"@types/node"},{"type":"reference","name":"ProvidesWriteStream","package":"@serenity-js/webdriverio"},{"type":"reference","name":"InitialisesReporters","package":"@serenity-js/webdriverio"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reflection","declaration":{"id":19,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":20,"name":"hasTests","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/index.ts","line":19,"character":17}],"type":{"type":"reflection","declaration":{"id":21,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/index.ts","line":19,"character":27}],"signatures":[{"id":22,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/index.ts","line":19,"character":27}],"type":{"type":"intrinsic","name":"boolean"}}]}}},{"id":23,"name":"run","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/index.ts","line":19,"character":42}],"type":{"type":"reflection","declaration":{"id":24,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/index.ts","line":19,"character":47}],"signatures":[{"id":25,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/index.ts","line":19,"character":47}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]}}}],"groups":[{"title":"Properties","children":[20,23]}],"sources":[{"fileName":"packages/webdriverio/src/index.ts","line":19,"character":15}]}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]}],"groups":[{"title":"Methods","children":[12]}],"sources":[{"fileName":"packages/webdriverio/src/index.ts","line":12,"character":15}]}},"permalink":"/api/webdriverio#default","categories":[],"previousId":6663},{"id":6373,"name":"BrowseTheWebWithWebdriverIO","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"This implementation of the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\nenables the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to interact with web front-ends using [WebdriverIO](https://webdriver.io/).\\n\\n## Using WebdriverIO to "},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { BrowseTheWebWithWebdriverIO } from \'@serenity-js/webdriverio-8-8\'\\nimport { By, Navigate, PageElement, Text } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { browser } from \'@wdio/globals\'\\n\\nconst HomePage = {\\n  title: () =>\\n    PageElement.located(By.css(\'h1\')).describedAs(\'title\')\\n}\\n\\nawait actorCalled(\'Wendy\')\\n  .whoCan(BrowseTheWebWithWebdriverIO.using(browser))  // `browser` is global in WebdriverIO tests\\n  .attemptsTo(\\n    Navigate.to(`https://serenity-js.org`),\\n    Ensure.that(Text.of(HomePage.title()), equals(\'Serenity/JS\')),\\n  );\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- [WebdriverIO website](https://webdriver.io/)\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\n- ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/)\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)"}]},"children":[{"id":6374,"name":"using","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/abilities/BrowseTheWebWithWebdriverIO.ts","line":43,"character":11}],"signatures":[{"id":6375,"name":"using","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/abilities/BrowseTheWebWithWebdriverIO.ts","line":43,"character":11}],"parameters":[{"id":6376,"name":"browserInstance","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/index.ts","qualifiedName":"__global.WebdriverIO.Browser"},"name":"Browser","package":"@wdio/types","qualifiedName":"__global.WebdriverIO.Browser"}}],"type":{"type":"reference","target":6373,"name":"BrowseTheWebWithWebdriverIO","package":"@serenity-js/webdriverio"}}]},{"id":6396,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/abilities/Ability.ts","line":406,"character":4}],"signatures":[{"id":6397,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a JSON representation of the ability and its current state, if available.\\nThe purpose of this method is to enable reporting the state of the ability in a human-readable format,\\nrather than to serialise and deserialise the ability itself."}]},"sources":[{"fileName":"packages/core/lib/screenplay/abilities/Ability.ts","line":406,"character":4}],"type":{"type":"reference","target":614,"name":"SerialisedAbility","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.toJSON"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.toJSON"}},{"id":6398,"name":"abilityType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/abilities/Ability.ts","line":436,"character":4}],"signatures":[{"id":6399,"name":"abilityType","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the most abstract type of this Ability instance,\\nspecifically the first class in the inheritance hierarchy that directly extends the "},{"kind":"code","text":"`Ability`"},{"kind":"text","text":" class.\\n\\n"},{"kind":"code","text":"```ts\\nimport { Ability } from \'@serenity-js/core\';\\n\\nclass MyAbility extends Ability {}\\nclass MySpecialisedAbility extends MyAbility {}\\n\\nnew MyAbility().abilityType();            // returns MyAbility\\nnew MySpecialisedAbility().abilityType(); // returns MyAbility\\n```"}]},"sources":[{"fileName":"packages/core/lib/screenplay/abilities/Ability.ts","line":436,"character":4}],"type":{"type":"reference","target":529,"typeArguments":[{"type":"reference","target":508,"name":"Ability","package":"@serenity-js/core"}],"name":"AbilityType","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.abilityType"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.abilityType"}},{"id":6384,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":83,"character":4}],"signatures":[{"id":6385,"name":"new BrowseTheWebWithWebdriverIO","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":83,"character":4}],"parameters":[{"id":6386,"name":"session","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":3932,"typeArguments":[{"type":"reference","target":4302,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/index.ts","qualifiedName":"__global.WebdriverIO.Element"},"name":"Element","package":"@wdio/types","qualifiedName":"__global.WebdriverIO.Element"}],"name":"Page","package":"@serenity-js/web"}],"name":"BrowsingSession","package":"@serenity-js/web"}}],"type":{"type":"reference","target":6373,"name":"BrowseTheWebWithWebdriverIO","package":"@serenity-js/webdriverio"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb<WebdriverIO.Element>.constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb<WebdriverIO.Element>.constructor"}},{"id":6390,"name":"currentPage","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":87,"character":4}],"signatures":[{"id":6391,"name":"currentPage","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/) representing the currently active browser tab."}]},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":87,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4302,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/index.ts","qualifiedName":"__global.WebdriverIO.Element"},"name":"Element","package":"@wdio/types","qualifiedName":"__global.WebdriverIO.Element"}],"name":"Page","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.currentPage"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.currentPage"}},{"id":6392,"name":"allPages","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":92,"character":4}],"signatures":[{"id":6393,"name":"allPages","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns an array of [pages](/api/web/class/Page/) representing all the browser tabs\\navailable in the current ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/)."}]},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":92,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4302,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/index.ts","qualifiedName":"__global.WebdriverIO.Element"},"name":"Element","package":"@wdio/types","qualifiedName":"__global.WebdriverIO.Element"}],"name":"Page","package":"@serenity-js/web"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.allPages"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.allPages"}},{"id":6394,"name":"browserCapabilities","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":96,"character":4}],"signatures":[{"id":6395,"name":"browserCapabilities","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns [basic meta-data](/api/web/interface/BrowserCapabilities/) about the browser associated with this ability."}]},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":96,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":3928,"name":"BrowserCapabilities","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.browserCapabilities"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.browserCapabilities"}},{"id":6387,"name":"discard","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/abilities/BrowseTheWebWithWebdriverIO.ts","line":47,"character":10}],"signatures":[{"id":6388,"name":"discard","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/abilities/BrowseTheWebWithWebdriverIO.ts","line":47,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"implementationOf":{"type":"reference","target":-1,"name":"Discardable.discard"}}],"implementationOf":{"type":"reference","target":-1,"name":"Discardable.discard"}}],"groups":[{"title":"Constructors","children":[6384]},{"title":"Methods","children":[6374,6396,6398,6390,6392,6394,6387]}],"sources":[{"fileName":"packages/webdriverio/src/screenplay/abilities/BrowseTheWebWithWebdriverIO.ts","line":42,"character":13}],"extendedTypes":[{"type":"reference","target":3316,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/index.ts","qualifiedName":"__global.WebdriverIO.Element"},"name":"WebdriverIO.Element","package":"@wdio/types","qualifiedName":"__global.WebdriverIO.Element"}],"name":"BrowseTheWeb","package":"@serenity-js/web"}],"implementedTypes":[{"type":"reference","target":571,"name":"Discardable","package":"@serenity-js/core"}],"permalink":"/api/webdriverio/class/BrowseTheWebWithWebdriverIO","categories":[],"nextId":6368},{"id":6400,"name":"WebdriverIOBrowsingSession","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"WebdriverIO-specific implementation of ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/)."}]},"children":[{"id":6424,"name":"closePagesOtherThan","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":15,"character":4}],"signatures":[{"id":6425,"name":"closePagesOtherThan","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":15,"character":4}],"parameters":[{"id":6426,"name":"pageOfInterest","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":6542,"name":"WebdriverIOPage","package":"@serenity-js/webdriverio"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.closePagesOtherThan"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.closePagesOtherThan"}},{"id":6427,"name":"register","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":33,"character":4}],"signatures":[{"id":6428,"name":"register","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Registers specified [pages](/api/web/class/Page/) to be managed by this ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/)."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":33,"character":4}],"parameters":[{"id":6429,"name":"pages","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":6542,"name":"WebdriverIOPage","package":"@serenity-js/webdriverio"}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.register"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.register"}},{"id":6430,"name":"deregister","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":40,"character":4}],"signatures":[{"id":6431,"name":"deregister","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Informs this ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/) that it should no longer manage [pages](/api/web/class/Page/)\\nidentified by the given "},{"kind":"code","text":"`pageIds`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":40,"character":4}],"parameters":[{"id":6432,"name":"pageIds","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.deregister"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.deregister"}},{"id":6433,"name":"registeredPageIds","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":49,"character":4}],"signatures":[{"id":6434,"name":"registeredPageIds","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the ids of any [pages](/api/web/class/Page/) this ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/) is aware of."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":49,"character":4}],"type":{"type":"array","elementType":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.registeredPageIds"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.registeredPageIds"}},{"id":6435,"name":"closeAllPages","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":72,"character":4}],"signatures":[{"id":6436,"name":"closeAllPages","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Closes all the pages available in this browsing context"}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":72,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.closeAllPages"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.closeAllPages"}},{"id":6401,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOBrowsingSession.ts","line":20,"character":4}],"signatures":[{"id":6402,"name":"new WebdriverIOBrowsingSession","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOBrowsingSession.ts","line":20,"character":4}],"parameters":[{"id":6403,"name":"browser","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/index.ts","qualifiedName":"__global.WebdriverIO.Browser"},"name":"Browser","package":"@wdio/types","qualifiedName":"__global.WebdriverIO.Browser"}}],"type":{"type":"reference","target":6400,"name":"WebdriverIOBrowsingSession","package":"@serenity-js/webdriverio"},"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession<WebdriverIOPage>.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession<WebdriverIOPage>.constructor"}},{"id":6405,"name":"allPages","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOBrowsingSession.ts","line":28,"character":19}],"signatures":[{"id":6406,"name":"allPages","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOBrowsingSession.ts","line":28,"character":19}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":6542,"name":"WebdriverIOPage","package":"@serenity-js/webdriverio"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession.allPages"}}],"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession.allPages"}},{"id":6407,"name":"changeCurrentPageTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOBrowsingSession.ts","line":64,"character":19}],"signatures":[{"id":6408,"name":"changeCurrentPageTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOBrowsingSession.ts","line":64,"character":19}],"parameters":[{"id":6409,"name":"page","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":6542,"name":"WebdriverIOPage","package":"@serenity-js/webdriverio"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession.changeCurrentPageTo"}}],"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession.changeCurrentPageTo"}},{"id":6412,"name":"currentPage","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOBrowsingSession.ts","line":103,"character":19}],"signatures":[{"id":6413,"name":"currentPage","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOBrowsingSession.ts","line":103,"character":19}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":6542,"name":"WebdriverIOPage","package":"@serenity-js/webdriverio"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession.currentPage"}}],"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession.currentPage"}},{"id":6418,"name":"browserCapabilities","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOBrowsingSession.ts","line":169,"character":13}],"signatures":[{"id":6419,"name":"browserCapabilities","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOBrowsingSession.ts","line":169,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":3928,"name":"BrowserCapabilities","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession.browserCapabilities"}}],"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession.browserCapabilities"}},{"id":6420,"name":"discard","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOBrowsingSession.ts","line":173,"character":10}],"signatures":[{"id":6421,"name":"discard","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOBrowsingSession.ts","line":173,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"implementationOf":{"type":"reference","target":-1,"name":"Discardable.discard"}}],"implementationOf":{"type":"reference","target":-1,"name":"Discardable.discard"}}],"groups":[{"title":"Constructors","children":[6401]},{"title":"Methods","children":[6424,6427,6430,6433,6435,6405,6407,6412,6418,6420]}],"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOBrowsingSession.ts","line":18,"character":13}],"extendedTypes":[{"type":"reference","target":3932,"typeArguments":[{"type":"reference","target":6542,"name":"WebdriverIOPage","package":"@serenity-js/webdriverio"}],"name":"BrowsingSession","package":"@serenity-js/web"}],"implementedTypes":[{"type":"reference","target":571,"name":"Discardable","package":"@serenity-js/core"}],"permalink":"/api/webdriverio/class/WebdriverIOBrowsingSession","categories":[],"previousId":6369,"nextId":6437},{"id":6437,"name":"WebdriverIOCookie","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"WebdriverIO-specific implementation of ["},{"kind":"code","text":"`Cookie`"},{"kind":"text","text":"](/api/web/class/Cookie/)."}]},"children":[{"id":6526,"name":"name","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":99,"character":4}],"signatures":[{"id":6527,"name":"name","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the name of this cookie."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":99,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.name"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.name"}},{"id":6528,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":106,"character":4}],"signatures":[{"id":6529,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Checks if a given cookie is set.\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Optional`"},{"kind":"text","text":"](/api/core/interface/Optional/)"}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":106,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.isPresent"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.isPresent"}},{"id":6530,"name":"value","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":110,"character":4}],"signatures":[{"id":6531,"name":"value","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the value of a given cookie."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":110,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.value"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.value"}},{"id":6532,"name":"path","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":114,"character":4}],"signatures":[{"id":6533,"name":"path","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the path of a given cookie, if any was set."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":114,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.path"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.path"}},{"id":6534,"name":"domain","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":118,"character":4}],"signatures":[{"id":6535,"name":"domain","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the domain of a given cookie, if any was set."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":118,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.domain"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.domain"}},{"id":6536,"name":"isHttpOnly","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":125,"character":4}],"signatures":[{"id":6537,"name":"isHttpOnly","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Checks if a given cookie is HTTP-only.\\n\\n#### Learn more\\n- [Mozilla Developer Network: Restricting access to cookies](https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies#restrict_access_to_cookies)"}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":125,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.isHttpOnly"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.isHttpOnly"}},{"id":6538,"name":"isSecure","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":132,"character":4}],"signatures":[{"id":6539,"name":"isSecure","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Checks if a given cookie is secure.\\n\\n#### Learn more\\n- [Mozilla Developer Network: Restricting access to cookies](https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies#restrict_access_to_cookies)"}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":132,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.isSecure"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.isSecure"}},{"id":6540,"name":"expiry","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":139,"character":4}],"signatures":[{"id":6541,"name":"expiry","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the expiry date of a given cookie\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Timestamp`"},{"kind":"text","text":"](/api/core/class/Timestamp/)"}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":139,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.expiry"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.expiry"}},{"id":6516,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOCookie.ts","line":15,"character":4}],"signatures":[{"id":6517,"name":"new WebdriverIOCookie","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOCookie.ts","line":15,"character":4}],"parameters":[{"id":6518,"name":"browser","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/index.ts","qualifiedName":"__global.WebdriverIO.Browser"},"name":"Browser","package":"@wdio/types","qualifiedName":"__global.WebdriverIO.Browser"}},{"id":6519,"name":"cookieName","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":6437,"name":"WebdriverIOCookie","package":"@serenity-js/webdriverio"},"overwrites":{"type":"reference","target":-1,"name":"Cookie.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"Cookie.constructor"}},{"id":6521,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOCookie.ts","line":23,"character":10}],"signatures":[{"id":6522,"name":"delete","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOCookie.ts","line":23,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Cookie.delete"}}],"overwrites":{"type":"reference","target":-1,"name":"Cookie.delete"}}],"groups":[{"title":"Constructors","children":[6516]},{"title":"Methods","children":[6526,6528,6530,6532,6534,6536,6538,6540,6521]}],"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOCookie.ts","line":13,"character":13}],"extendedTypes":[{"type":"reference","target":3963,"name":"Cookie","package":"@serenity-js/web"}],"permalink":"/api/webdriverio/class/WebdriverIOCookie","categories":[],"previousId":6400,"nextId":6542},{"id":6542,"name":"WebdriverIOPage","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"WebdriverIO-specific implementation of ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/)."}]},"children":[{"id":6656,"name":"id","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":132,"character":13}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Page.id"}},{"id":6657,"name":"switchTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":432,"character":4}],"signatures":[{"id":6658,"name":"switchTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Switches the current browsing context to the given page\\nand returns an object that allows the caller to switch back\\nto the previous context when needed.\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Switch`"},{"kind":"text","text":"](/api/web/class/Switch/)\\n- ["},{"kind":"code","text":"`Switchable`"},{"kind":"text","text":"](/api/web/interface/Switchable/)"}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":432,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4866,"name":"SwitchableOrigin","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Page.switchTo"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Page.switchTo"}},{"id":6659,"name":"modalDialog","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":444,"character":4}],"signatures":[{"id":6660,"name":"modalDialog","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the ["},{"kind":"code","text":"`ModalDialogHandler`"},{"kind":"text","text":"](/api/web/class/ModalDialogHandler/) for the current ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/)."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":444,"character":4}],"type":{"type":"reference","target":4170,"name":"ModalDialogHandler","package":"@serenity-js/web"},"inheritedFrom":{"type":"reference","target":-1,"name":"Page.modalDialog"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Page.modalDialog"}},{"id":6661,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":448,"character":4}],"signatures":[{"id":6662,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a description of this Page and its ID."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":448,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Page.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Page.toString"}},{"id":6554,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":41,"character":4}],"signatures":[{"id":6555,"name":"new WebdriverIOPage","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":41,"character":4}],"parameters":[{"id":6556,"name":"session","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":6400,"name":"WebdriverIOBrowsingSession","package":"@serenity-js/webdriverio"}},{"id":6557,"name":"browser","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/index.ts","qualifiedName":"__global.WebdriverIO.Browser"},"name":"Browser","package":"@wdio/types","qualifiedName":"__global.WebdriverIO.Browser"}},{"id":6558,"name":"modalDialogHandler","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4170,"name":"ModalDialogHandler","package":"@serenity-js/web"}},{"id":6559,"name":"errorHandler","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"WebdriverIOErrorHandler","package":"@serenity-js/webdriverio"}},{"id":6560,"name":"pageId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}],"type":{"type":"reference","target":6542,"name":"WebdriverIOPage","package":"@serenity-js/webdriverio"},"overwrites":{"type":"reference","target":-1,"name":"Page<WebdriverIO.Element>.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"Page<WebdriverIO.Element>.constructor"}},{"id":6565,"name":"createPageElement","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":56,"character":4}],"signatures":[{"id":6566,"name":"createPageElement","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":56,"character":4}],"parameters":[{"id":6567,"name":"nativeElement","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/index.ts","qualifiedName":"__global.WebdriverIO.Element"},"name":"Element","package":"@wdio/types","qualifiedName":"__global.WebdriverIO.Element"}}],"type":{"type":"reference","target":4418,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/index.ts","qualifiedName":"__global.WebdriverIO.Element"},"name":"Element","package":"@wdio/types","qualifiedName":"__global.WebdriverIO.Element"}],"name":"PageElement","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"Page.createPageElement"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.createPageElement"}},{"id":6568,"name":"locate","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":67,"character":4}],"signatures":[{"id":6569,"name":"locate","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":67,"character":4}],"parameters":[{"id":6570,"name":"selector","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4853,"name":"Selector","package":"@serenity-js/web"}}],"type":{"type":"reference","target":4418,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/index.ts","qualifiedName":"__global.WebdriverIO.Element"},"name":"Element","package":"@wdio/types","qualifiedName":"__global.WebdriverIO.Element"}],"name":"PageElement","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"Page.locate"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.locate"}},{"id":6571,"name":"locateAll","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":73,"character":4}],"signatures":[{"id":6572,"name":"locateAll","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":73,"character":4}],"parameters":[{"id":6573,"name":"selector","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4853,"name":"Selector","package":"@serenity-js/web"}}],"type":{"type":"reference","target":4494,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/index.ts","qualifiedName":"__global.WebdriverIO.Element"},"name":"Element","package":"@wdio/types","qualifiedName":"__global.WebdriverIO.Element"}],"name":"PageElements","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"Page.locateAll"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.locateAll"}},{"id":6574,"name":"navigateTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":81,"character":10}],"signatures":[{"id":6575,"name":"navigateTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":81,"character":10}],"parameters":[{"id":6576,"name":"destination","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.navigateTo"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.navigateTo"}},{"id":6577,"name":"navigateBack","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":86,"character":10}],"signatures":[{"id":6578,"name":"navigateBack","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":86,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.navigateBack"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.navigateBack"}},{"id":6579,"name":"navigateForward","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":91,"character":10}],"signatures":[{"id":6580,"name":"navigateForward","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":91,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.navigateForward"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.navigateForward"}},{"id":6581,"name":"reload","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":96,"character":10}],"signatures":[{"id":6582,"name":"reload","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":96,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.reload"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.reload"}},{"id":6583,"name":"sendKeys","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":101,"character":10}],"signatures":[{"id":6584,"name":"sendKeys","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":101,"character":10}],"parameters":[{"id":6585,"name":"keys","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":4186,"name":"Key","package":"@serenity-js/web"}]}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.sendKeys"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.sendKeys"}},{"id":6586,"name":"executeScript","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":113,"character":10}],"signatures":[{"id":6587,"name":"executeScript","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":113,"character":10}],"typeParameter":[{"id":6588,"name":"Result","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":6589,"name":"InnerArguments","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"parameters":[{"id":6590,"name":"script","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reflection","declaration":{"id":6591,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":114,"character":26}],"signatures":[{"id":6592,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":114,"character":26}],"parameters":[{"id":6593,"name":"parameters","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"reference","target":6589,"name":"InnerArguments","package":"@serenity-js/webdriverio","refersToTypeParameter":true}}],"type":{"type":"reference","target":6588,"name":"Result","package":"@serenity-js/webdriverio","refersToTypeParameter":true}}]}}]}},{"id":6594,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"reference","target":6589,"name":"InnerArguments","package":"@serenity-js/webdriverio","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":6588,"name":"Result","package":"@serenity-js/webdriverio","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.executeScript"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.executeScript"}},{"id":6595,"name":"executeAsyncScript","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":139,"character":10}],"signatures":[{"id":6596,"name":"executeAsyncScript","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":139,"character":10}],"typeParameter":[{"id":6597,"name":"Result","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":6598,"name":"Parameters","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"parameters":[{"id":6599,"name":"script","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reflection","declaration":{"id":6600,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":140,"character":26}],"signatures":[{"id":6601,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":140,"character":26}],"parameters":[{"id":6602,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"tuple","elements":[{"type":"rest","elementType":{"type":"namedTupleMember","name":"parameters","isOptional":false,"element":{"type":"array","elementType":{"type":"reference","target":6598,"name":"Parameters","package":"@serenity-js/webdriverio","refersToTypeParameter":true}}}},{"type":"namedTupleMember","name":"callback","isOptional":false,"element":{"type":"reflection","declaration":{"id":6603,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":140,"character":74}],"signatures":[{"id":6604,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":140,"character":74}],"parameters":[{"id":6605,"name":"result","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":6597,"name":"Result","package":"@serenity-js/webdriverio","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"void"}}]}}}]}}],"type":{"type":"intrinsic","name":"void"}}]}}]}},{"id":6606,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"reference","target":6598,"name":"Parameters","package":"@serenity-js/webdriverio","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":6597,"name":"Result","package":"@serenity-js/webdriverio","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.executeAsyncScript"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.executeAsyncScript"}},{"id":6607,"name":"lastScriptExecutionResult","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":170,"character":4}],"signatures":[{"id":6608,"name":"lastScriptExecutionResult","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":170,"character":4}],"typeParameter":[{"id":6609,"name":"Result","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"any"}}],"type":{"type":"reference","target":6609,"name":"Result","package":"@serenity-js/webdriverio","refersToTypeParameter":true},"overwrites":{"type":"reference","target":-1,"name":"Page.lastScriptExecutionResult"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.lastScriptExecutionResult"}},{"id":6610,"name":"takeScreenshot","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":182,"character":10}],"signatures":[{"id":6611,"name":"takeScreenshot","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":182,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.takeScreenshot"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.takeScreenshot"}},{"id":6612,"name":"cookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":201,"character":10}],"signatures":[{"id":6613,"name":"cookie","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":201,"character":10}],"parameters":[{"id":6614,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":3963,"name":"Cookie","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.cookie"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.cookie"}},{"id":6615,"name":"setCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":205,"character":10}],"signatures":[{"id":6616,"name":"setCookie","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":205,"character":10}],"parameters":[{"id":6617,"name":"cookieData","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4069,"name":"CookieData","package":"@serenity-js/web"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.setCookie"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.setCookie"}},{"id":6618,"name":"deleteAllCookies","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":223,"character":10}],"signatures":[{"id":6619,"name":"deleteAllCookies","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":223,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.deleteAllCookies"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.deleteAllCookies"}},{"id":6620,"name":"title","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":229,"character":10}],"signatures":[{"id":6621,"name":"title","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":229,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.title"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.title"}},{"id":6622,"name":"name","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":233,"character":10}],"signatures":[{"id":6623,"name":"name","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":233,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.name"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.name"}},{"id":6624,"name":"url","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":239,"character":10}],"signatures":[{"id":6625,"name":"url","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":239,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/url.d.ts","qualifiedName":"\\"url\\".URL"},"name":"URL","package":"@types/node","qualifiedName":"\\"url\\".URL"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.url"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.url"}},{"id":6626,"name":"viewportSize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":245,"character":10}],"signatures":[{"id":6627,"name":"viewportSize","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":245,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reflection","declaration":{"id":6628,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":6629,"name":"width","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":245,"character":36}],"type":{"type":"intrinsic","name":"number"}},{"id":6630,"name":"height","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":245,"character":51}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[6629,6630]}],"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":245,"character":34}]}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.viewportSize"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.viewportSize"}},{"id":6631,"name":"setViewportSize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":263,"character":10}],"signatures":[{"id":6632,"name":"setViewportSize","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":263,"character":10}],"parameters":[{"id":6633,"name":"size","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":6634,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":6635,"name":"width","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":263,"character":34}],"type":{"type":"intrinsic","name":"number"}},{"id":6636,"name":"height","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":263,"character":49}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[6635,6636]}],"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":263,"character":32}]}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.setViewportSize"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.setViewportSize"}},{"id":6637,"name":"close","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":269,"character":10}],"signatures":[{"id":6638,"name":"close","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":269,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.close"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.close"}},{"id":6639,"name":"closeOthers","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":274,"character":10}],"signatures":[{"id":6640,"name":"closeOthers","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":274,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.closeOthers"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.closeOthers"}},{"id":6641,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":278,"character":10}],"signatures":[{"id":6642,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":278,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.isPresent"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.isPresent"}},{"id":6645,"name":"discard","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":294,"character":10}],"signatures":[{"id":6646,"name":"discard","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":294,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"implementationOf":{"type":"reference","target":-1,"name":"Discardable.discard"}}],"implementationOf":{"type":"reference","target":-1,"name":"Discardable.discard"}}],"groups":[{"title":"Constructors","children":[6554]},{"title":"Properties","children":[6656]},{"title":"Methods","children":[6657,6659,6661,6565,6568,6571,6574,6577,6579,6581,6583,6586,6595,6607,6610,6612,6615,6618,6620,6622,6624,6626,6631,6637,6639,6641,6645]}],"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":30,"character":13}],"extendedTypes":[{"type":"reference","target":4302,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/index.ts","qualifiedName":"__global.WebdriverIO.Element"},"name":"WebdriverIO.Element","package":"@wdio/types","qualifiedName":"__global.WebdriverIO.Element"}],"name":"Page","package":"@serenity-js/web"}],"implementedTypes":[{"type":"reference","target":571,"name":"Discardable","package":"@serenity-js/core"}],"permalink":"/api/webdriverio/class/WebdriverIOPage","categories":[],"previousId":6437,"nextId":6663},{"id":6663,"name":"WebdriverIOPageElement","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"WebdriverIO-specific implementation of ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)."}]},"children":[{"id":6735,"name":"locator","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":19,"character":13}],"type":{"type":"reference","target":4252,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/index.ts","qualifiedName":"__global.WebdriverIO.Element"},"name":"Element","package":"@wdio/types","qualifiedName":"__global.WebdriverIO.Element"},{"type":"intrinsic","name":"any"}],"name":"Locator","package":"@serenity-js/web"},"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement.locator"}},{"id":6680,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":46,"character":4}],"signatures":[{"id":6681,"name":"new WebdriverIOPageElement","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":46,"character":4}],"parameters":[{"id":6682,"name":"locator","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4252,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/index.ts","qualifiedName":"__global.WebdriverIO.Element"},"name":"Element","package":"@wdio/types","qualifiedName":"__global.WebdriverIO.Element"},{"type":"intrinsic","name":"any"}],"name":"Locator","package":"@serenity-js/web"}}],"type":{"type":"reference","target":6663,"name":"WebdriverIOPageElement","package":"@serenity-js/webdriverio"},"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement<WebdriverIO.Element>.constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement<WebdriverIO.Element>.constructor"}},{"id":6736,"name":"nativeElement","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":107,"character":4}],"signatures":[{"id":6737,"name":"nativeElement","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An \\"escape hatch\\" providing access to the integration tool-specific implementation of a Web element."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":107,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/index.ts","qualifiedName":"__global.WebdriverIO.Element"},"name":"Element","package":"@wdio/types","qualifiedName":"__global.WebdriverIO.Element"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement.nativeElement"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement.nativeElement"}},{"id":6738,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":108,"character":4}],"signatures":[{"id":6739,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":108,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement.toString"}},{"id":6683,"name":"of","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":17,"character":4}],"signatures":[{"id":6684,"name":"of","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":17,"character":4}],"parameters":[{"id":6685,"name":"parent","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":6663,"name":"WebdriverIOPageElement","package":"@serenity-js/webdriverio"}}],"type":{"type":"reference","target":6663,"name":"WebdriverIOPageElement","package":"@serenity-js/webdriverio"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.of"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.of"}},{"id":6686,"name":"closestTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":21,"character":4}],"signatures":[{"id":6687,"name":"closestTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":21,"character":4}],"parameters":[{"id":6688,"name":"child","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":6663,"name":"WebdriverIOPageElement","package":"@serenity-js/webdriverio"}}],"type":{"type":"reference","target":6663,"name":"WebdriverIOPageElement","package":"@serenity-js/webdriverio"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.closestTo"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.closestTo"}},{"id":6689,"name":"clearValue","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":25,"character":10}],"signatures":[{"id":6690,"name":"clearValue","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":25,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.clearValue"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.clearValue"}},{"id":6691,"name":"click","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":64,"character":10}],"signatures":[{"id":6692,"name":"click","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":64,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.click"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.click"}},{"id":6693,"name":"doubleClick","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":69,"character":10}],"signatures":[{"id":6694,"name":"doubleClick","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":69,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.doubleClick"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.doubleClick"}},{"id":6695,"name":"enterValue","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":74,"character":10}],"signatures":[{"id":6696,"name":"enterValue","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":74,"character":10}],"parameters":[{"id":6697,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.enterValue"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.enterValue"}},{"id":6698,"name":"scrollIntoView","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":81,"character":10}],"signatures":[{"id":6699,"name":"scrollIntoView","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":81,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.scrollIntoView"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.scrollIntoView"}},{"id":6700,"name":"hoverOver","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":86,"character":10}],"signatures":[{"id":6701,"name":"hoverOver","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":86,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.hoverOver"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.hoverOver"}},{"id":6702,"name":"rightClick","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":91,"character":10}],"signatures":[{"id":6703,"name":"rightClick","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":91,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.rightClick"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.rightClick"}},{"id":6704,"name":"selectOptions","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":96,"character":10}],"signatures":[{"id":6705,"name":"selectOptions","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":96,"character":10}],"parameters":[{"id":6706,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":4733,"name":"SelectOption","package":"@serenity-js/web"}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.selectOptions"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.selectOptions"}},{"id":6707,"name":"selectedOptions","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":109,"character":10}],"signatures":[{"id":6708,"name":"selectedOptions","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":109,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4733,"name":"SelectOption","package":"@serenity-js/web"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.selectedOptions"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.selectedOptions"}},{"id":6709,"name":"attribute","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":137,"character":10}],"signatures":[{"id":6710,"name":"attribute","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":137,"character":10}],"parameters":[{"id":6711,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.attribute"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.attribute"}},{"id":6712,"name":"text","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":142,"character":10}],"signatures":[{"id":6713,"name":"text","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":142,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.text"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.text"}},{"id":6714,"name":"value","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":147,"character":10}],"signatures":[{"id":6715,"name":"value","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":147,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.value"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.value"}},{"id":6716,"name":"html","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":152,"character":10}],"signatures":[{"id":6717,"name":"html","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":152,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.html"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.html"}},{"id":6718,"name":"switchTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":157,"character":10}],"signatures":[{"id":6719,"name":"switchTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":157,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4866,"name":"SwitchableOrigin","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.switchTo"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.switchTo"}},{"id":6720,"name":"isActive","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":213,"character":10}],"signatures":[{"id":6721,"name":"isActive","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":213,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.isActive"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.isActive"}},{"id":6722,"name":"isClickable","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":218,"character":10}],"signatures":[{"id":6723,"name":"isClickable","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":218,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.isClickable"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.isClickable"}},{"id":6724,"name":"isEnabled","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":223,"character":10}],"signatures":[{"id":6725,"name":"isEnabled","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":223,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.isEnabled"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.isEnabled"}},{"id":6726,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":228,"character":10}],"signatures":[{"id":6727,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":228,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.isPresent"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.isPresent"}},{"id":6728,"name":"isSelected","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":233,"character":10}],"signatures":[{"id":6729,"name":"isSelected","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":233,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.isSelected"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.isSelected"}},{"id":6730,"name":"isVisible","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":238,"character":10}],"signatures":[{"id":6731,"name":"isVisible","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":238,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.isVisible"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.isVisible"}}],"groups":[{"title":"Constructors","children":[6680]},{"title":"Properties","children":[6735]},{"title":"Methods","children":[6736,6738,6683,6686,6689,6691,6693,6695,6698,6700,6702,6704,6707,6709,6712,6714,6716,6718,6720,6722,6724,6726,6728,6730]}],"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":16,"character":13}],"extendedTypes":[{"type":"reference","target":4418,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/index.ts","qualifiedName":"__global.WebdriverIO.Element"},"name":"WebdriverIO.Element","package":"@wdio/types","qualifiedName":"__global.WebdriverIO.Element"}],"name":"PageElement","package":"@serenity-js/web"}],"permalink":"/api/webdriverio/class/WebdriverIOPageElement","categories":[],"previousId":6542,"nextId":10}],"groups":[{"title":"Abilities","children":[6373]},{"title":"Configuration","children":[6368,6369]},{"title":"Models","children":[6400,6437,6542,6663]},{"title":"Variables","children":[10]}],"sources":[{"fileName":"packages/webdriverio/src/index.ts","line":1,"character":0}],"permalink":"/api/webdriverio"},"urlSlug":"webdriverio"}],"packageName":"@serenity-js/webdriverio","packageVersion":"3.32.1"},{"entryPoints":[{"index":false,"label":"Test runner adapter","reflection":{"id":44,"name":"@serenity-js/webdriverio-8/adapter","variant":"declaration","kind":2,"flags":{"isExternal":true},"children":[{"id":7219,"name":"WebdriverIOFrameworkAdapterFactory","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":7220,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/adapter/WebdriverIOFrameworkAdapterFactory.ts","line":14,"character":4}],"signatures":[{"id":7221,"name":"new WebdriverIOFrameworkAdapterFactory","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/adapter/WebdriverIOFrameworkAdapterFactory.ts","line":14,"character":4}],"parameters":[{"id":7222,"name":"serenity","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1951,"name":"Serenity","package":"@serenity-js/core"}},{"id":7223,"name":"loader","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"ModuleLoader","package":"@serenity-js/core"}},{"id":7224,"name":"cwd","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Path","package":"@serenity-js/core"}}],"type":{"type":"reference","target":7219,"name":"WebdriverIOFrameworkAdapterFactory","package":"@serenity-js/webdriverio-8"}}]},{"id":7228,"name":"init","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/adapter/WebdriverIOFrameworkAdapterFactory.ts","line":21,"character":11}],"signatures":[{"id":7229,"name":"init","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/adapter/WebdriverIOFrameworkAdapterFactory.ts","line":21,"character":11}],"parameters":[{"id":7230,"name":"cid","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":7231,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":6756,"name":"WebdriverIOConfig","package":"@serenity-js/webdriverio-8"}},{"id":7232,"name":"specs","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":7233,"name":"capabilities","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/@serenity-js/webdriverio-8/node_modules/@wdio/types/src/Capabilities.ts","qualifiedName":"RemoteCapability"},"name":"RemoteCapability","package":"@wdio/types"}},{"id":7234,"name":"reporter","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/events.d.ts","qualifiedName":"EventEmitter"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/events.d.ts","qualifiedName":"DefaultEventMap"},"name":"DefaultEventMap","package":"@types/node"}],"name":"EventEmitter","package":"@types/node"},{"type":"reference","name":"ProvidesWriteStream","package":"@serenity-js/webdriverio-8"},{"type":"reference","name":"InitialisesReporters","package":"@serenity-js/webdriverio-8"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","name":"WebdriverIOFrameworkAdapter","package":"@serenity-js/webdriverio-8"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]}],"groups":[{"title":"Constructors","children":[7220]},{"title":"Methods","children":[7228]}],"sources":[{"fileName":"packages/webdriverio-8/src/adapter/WebdriverIOFrameworkAdapterFactory.ts","line":13,"character":13}],"permalink":"/api/webdriverio-8-adapter/class/WebdriverIOFrameworkAdapterFactory","categories":[]}],"groups":[{"title":"Test Runner Adapter","children":[7219]}],"sources":[{"fileName":"packages/webdriverio-8/src/adapter/index.ts","line":1,"character":0}],"permalink":"/api/webdriverio-8-adapter"},"urlSlug":"webdriverio-8-adapter"},{"index":true,"label":"index","reflection":{"id":27,"name":"@serenity-js/webdriverio-8","variant":"declaration","kind":2,"flags":{"isExternal":true},"children":[{"id":6756,"name":"WebdriverIOConfig","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"[WebdriverIO configuration object](https://webdriver.io/docs/configurationfile/),\\nwith [Serenity/JS-specific additions](https://serenity-js.orgapi/core/class/SerenityConfig/).\\n\\n## Integrating WebdriverIO with Serenity/JS\\n\\n"},{"kind":"code","text":"```ts\\n// wdio.conf.ts\\nimport { WebdriverIOConfig } from \'@serenity-js/webdriverio-8\'\\n\\nexport const config: WebdriverIOConfig = {\\n\\n  framework: \'@serenity-js/webdriverio-8\',\\n\\n  serenity: {\\n    runner: \'cucumber\',\\n    // runner: \'mocha\',\\n    // runner: \'jasmine\',\\n\\n    crew: [\\n      // Optional, print test execution results to standard output\\n      \'@serenity-js/console-reporter\',\\n\\n      // Optional, produce Serenity BDD reports\\n      // and living documentation (HTML)\\n      \'@serenity-js/serenity-bdd\',\\n      [ \'@serenity-js/core:ArtifactArchiver\', {\\n          outputDirectory: \'target/site/serenity\'\\n      } ],\\n\\n      // Optional, automatically capture screenshots\\n      // upon interaction failure\\n      [ \'@serenity-js/web:Photographer\', {\\n          strategy: \'TakePhotosOfFailures\'\\n          // strategy: \'TakePhotosOfInteractions\'\\n      } ],\\n    ]\\n  },\\n\\n  // Configure your Cucumber runner\\n  cucumberOpts: {\\n    // see Cucumber configuration options below\\n  },\\n\\n  // ... or Jasmine runner\\n  jasmineOpts: {\\n    // see Jasmine configuration options below\\n  },\\n\\n  // ... or Mocha runner\\n  mochaOpts: {\\n     // see Mocha configuration options below\\n  },\\n\\n  runner: \'local\',\\n\\n  specs: [\\n    \'./features/*.feature\',\\n\\n    // or for Mocha/Jasmine\\n    // \'./*.spec.ts\'\\n  ],\\n\\n  // Any other WebdriverIO configuration\\n}\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- [WebdriverIO configuration file](https://webdriver.io/docs/configurationfile/)\\n- ["},{"kind":"code","text":"`CucumberConfig`"},{"kind":"text","text":"](/api/cucumber-adapter/interface/CucumberConfig/)\\n- ["},{"kind":"code","text":"`JasmineConfig`"},{"kind":"text","text":"](/api/jasmine-adapter/interface/JasmineConfig/)\\n- ["},{"kind":"code","text":"`MochaConfig`"},{"kind":"text","text":"](/api/mocha-adapter/interface/MochaConfig/)"}]},"children":[{"id":6839,"name":"protocol","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Protocol to use when communicating with the Selenium standalone server (or driver)."}],"blockTags":[{"tag":"@default","content":[{"kind":"code","text":"```ts\\n\'http\'\\n```"}]}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":65,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.protocol"}},{"id":6840,"name":"hostname","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Host of your WebDriver server."}],"blockTags":[{"tag":"@default","content":[{"kind":"code","text":"```ts\\n\'localhost\'\\n```"}]}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":71,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.hostname"}},{"id":6841,"name":"port","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Port your WebDriver server is on."}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":75,"character":4}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.port"}},{"id":6842,"name":"path","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Path to WebDriver endpoint or grid server."}],"blockTags":[{"tag":"@default","content":[{"kind":"code","text":"```ts\\n\'/\'\\n```"}]}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":81,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.path"}},{"id":6843,"name":"queryParams","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Query paramaters that are propagated to the driver server."}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":85,"character":4}],"type":{"type":"reflection","declaration":{"id":6844,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":85,"character":18}],"indexSignature":{"id":6845,"name":"__index","variant":"signature","kind":8192,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":86,"character":8}],"parameters":[{"id":6846,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}}},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.queryParams"}},{"id":6847,"name":"user","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Your cloud service username (only works for [Sauce Labs](https://saucelabs.com),\\n[Browserstack](https://www.browserstack.com), [TestingBot](https://testingbot.com),\\n[CrossBrowserTesting](https://crossbrowsertesting.com) or\\n[LambdaTest](https://www.lambdatest.com) accounts). If set, WebdriverIO will\\nautomatically set connection options for you. If you don\'t use a cloud provider this\\ncan be used to authenticate any other WebDriver backend."}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":96,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.user"}},{"id":6848,"name":"key","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Your cloud service access key or secret key (only works for\\n[Sauce Labs](https://saucelabs.com), [Browserstack](https://www.browserstack.com),\\n[TestingBot](https://testingbot.com), [CrossBrowserTesting](https://crossbrowsertesting.com)\\nor [LambdaTest](https://www.lambdatest.com) accounts). If set, WebdriverIO will\\nautomatically set connection options for you. If you don\'t use a cloud provider this\\ncan be used to authenticate any other WebDriver backend."}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":105,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.key"}},{"id":6814,"name":"logLevel","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Level of logging verbosity."}],"blockTags":[{"tag":"@default","content":[{"kind":"code","text":"```ts\\n\'info\'\\n```"}]}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":148,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/@serenity-js/webdriverio-8/node_modules/@wdio/types/src/Options.ts","qualifiedName":"WebDriverLogTypes"},"name":"WebDriverLogTypes","package":"@wdio/types"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.logLevel"}},{"id":6815,"name":"logLevels","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Set specific log levels per logger\\nuse \'silent\' level to disable logger"}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":153,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reference","target":{"sourceFileName":"node_modules/@serenity-js/webdriverio-8/node_modules/@wdio/types/src/Options.ts","qualifiedName":"WebDriverLogTypes"},"name":"WebDriverLogTypes","package":"@wdio/types"}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.logLevels"}},{"id":6816,"name":"connectionRetryTimeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Timeout for any WebDriver request to a driver or grid."}],"blockTags":[{"tag":"@default","content":[{"kind":"code","text":"```ts\\n120000\\n```"}]}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":159,"character":4}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.connectionRetryTimeout"}},{"id":6817,"name":"connectionRetryCount","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Count of request retries to the Selenium server."}],"blockTags":[{"tag":"@default","content":[{"kind":"code","text":"```ts\\n3\\n```"}]}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":165,"character":4}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.connectionRetryCount"}},{"id":6818,"name":"headers","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Specify custom headers to pass into every request."}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":169,"character":4}],"type":{"type":"reflection","declaration":{"id":6819,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":169,"character":14}],"indexSignature":{"id":6820,"name":"__index","variant":"signature","kind":8192,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":170,"character":8}],"parameters":[{"id":6821,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}}},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.headers"}},{"id":6822,"name":"agent","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Allows you to use a custom http/https/http2 [agent](https://www.npmjs.com/package/got#agent) to make requests."}],"blockTags":[{"tag":"@default","content":[{"kind":"code","text":"```js\\n{\\n    http: new http.Agent({ keepAlive: true }),\\n    https: new https.Agent({ keepAlive: true })\\n}\\n```"}]}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":183,"character":4}],"type":{"type":"reflection","declaration":{"id":6823,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":6824,"name":"http","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":184,"character":8}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/http.d.ts","qualifiedName":"\\"http\\".Agent"},"name":"Agent","package":"@types/node","qualifiedName":"\\"http\\".Agent"}},{"id":6825,"name":"https","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":185,"character":8}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/https.d.ts","qualifiedName":"\\"https\\".Agent"},"name":"Agent","package":"@types/node","qualifiedName":"\\"https\\".Agent"}}],"groups":[{"title":"Properties","children":[6824,6825]}],"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":183,"character":12}]}},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.agent"}},{"id":6826,"name":"transformRequest","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Function intercepting [HTTP request options](https://github.com/sindresorhus/got#options) before a WebDriver request is made."}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":190,"character":4}],"type":{"type":"reflection","declaration":{"id":6827,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":190,"character":23}],"signatures":[{"id":6828,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":190,"character":23}],"parameters":[{"id":6829,"name":"requestOptions","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/@serenity-js/webdriverio-8/node_modules/@wdio/types/src/Options.ts","qualifiedName":"RequestLibOptions"},"name":"RequestLibOptions","package":"@wdio/types"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/@serenity-js/webdriverio-8/node_modules/@wdio/types/src/Options.ts","qualifiedName":"RequestLibOptions"},"name":"RequestLibOptions","package":"@wdio/types"}}]}},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.transformRequest"}},{"id":6830,"name":"transformResponse","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Function intercepting HTTP response objects after a WebDriver response has arrived."}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":194,"character":4}],"type":{"type":"reflection","declaration":{"id":6831,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":194,"character":24}],"signatures":[{"id":6832,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":194,"character":24}],"parameters":[{"id":6833,"name":"response","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/@serenity-js/webdriverio-8/node_modules/@wdio/types/src/Options.ts","qualifiedName":"RequestLibResponse"},"name":"RequestLibResponse","package":"@wdio/types"}},{"id":6834,"name":"requestOptions","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/@serenity-js/webdriverio-8/node_modules/@wdio/types/src/Options.ts","qualifiedName":"RequestLibOptions"},"name":"RequestLibOptions","package":"@wdio/types"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/@serenity-js/webdriverio-8/node_modules/@wdio/types/src/Options.ts","qualifiedName":"RequestLibResponse"},"name":"RequestLibResponse","package":"@wdio/types"}}]}},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.transformResponse"}},{"id":6835,"name":"enableDirectConnect","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Appium direct connect options (see: https://appiumpro.com/editions/86-connecting-directly-to-appium-hosts-in-distributed-environments)"}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":198,"character":4}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.enableDirectConnect"}},{"id":6836,"name":"strictSSL","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether it requires SSL certificates to be valid in HTTP/s requests\\nfor an environment which cannot get process environment well."}],"blockTags":[{"tag":"@default","content":[{"kind":"code","text":"```ts\\ntrue\\n```"}]}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":205,"character":4}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.strictSSL"}},{"id":6837,"name":"outputDir","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Directory to store all testrunner log files (including reporter logs and "},{"kind":"code","text":"`wdio`"},{"kind":"text","text":" logs).\\nIf not set, all logs are streamed to "},{"kind":"code","text":"`stdout`"},{"kind":"text","text":". Since most reporters are made to log to\\n"},{"kind":"code","text":"`stdout`"},{"kind":"text","text":", it is recommended to only use this option for specific reporters where it\\nmakes more sense to push report into a file (like the "},{"kind":"code","text":"`junit`"},{"kind":"text","text":" reporter, for example).\\n\\nWhen running in standalone mode, the only log generated by WebdriverIO will be\\nthe "},{"kind":"code","text":"`wdio`"},{"kind":"text","text":" log."}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":215,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.outputDir"}},{"id":6838,"name":"cacheDir","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The path to the root of the cache directory. This directory is used to store all drivers that are downloaded\\nwhen attempting to start a session."}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":220,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.cacheDir"}},{"id":6849,"name":"automationProtocol","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Define the protocol you want to use for your browser automation.\\nCurrently only ["},{"kind":"code","text":"`webdriver`"},{"kind":"text","text":"](https://www.npmjs.com/package/webdriver) and\\n["},{"kind":"code","text":"`devtools`"},{"kind":"text","text":"](https://www.npmjs.com/package/devtools) are supported,\\nas these are the main browser automation technologies available."}],"blockTags":[{"tag":"@deprecated","content":[{"kind":"text","text":"this option will be removed in future versions of WebdriverIO. We recommend to use WebDriver for browser or mobile automation."}]}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":277,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/@serenity-js/webdriverio-8/node_modules/@wdio/types/src/Options.ts","qualifiedName":"SupportedProtocols"},"name":"SupportedProtocols","package":"@wdio/types"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.automationProtocol"}},{"id":6850,"name":"region","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If running on Sauce Labs, you can choose to run tests between different data centers:\\nUS or EU. To change your region to EU, add region: \'eu\' to your config."}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":282,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/@serenity-js/webdriverio-8/node_modules/@wdio/types/src/Options.ts","qualifiedName":"SauceRegions"},"name":"SauceRegions","package":"@wdio/types"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.region"}},{"id":6851,"name":"headless","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Sauce Labs provides a headless offering that allows you to run Chrome and Firefox tests headless."}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":286,"character":4}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.headless"}},{"id":6852,"name":"baseUrl","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Shorten url command calls by setting a base URL."}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":290,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.baseUrl"}},{"id":6853,"name":"waitforTimeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Default timeout for all "},{"kind":"code","text":"`waitFor*`"},{"kind":"text","text":" commands. (Note the lowercase f in the option name.)\\nThis timeout only affects commands starting with "},{"kind":"code","text":"`waitFor*`"},{"kind":"text","text":" and their default wait time."}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":295,"character":4}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.waitforTimeout"}},{"id":6854,"name":"waitforInterval","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Default interval for all "},{"kind":"code","text":"`waitFor*`"},{"kind":"text","text":" commands to check if an expected state (e.g.,\\nvisibility) has been changed."}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":300,"character":4}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.waitforInterval"}},{"id":6760,"name":"capabilities","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Defines a set of capabilities you want to run in your testrunner session. Check out the\\n[WebDriver Protocol](https://w3c.github.io/webdriver/#capabilities) for more details.\\nIf you want to run a multiremote session you need to define instead of an array of\\ncapabilities an object that has an arbitrary browser instance name as string and its\\ncapabilities as values."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```js\\n// wdio.conf.js\\nexport const config = {\\n  // define parallel running capabilities\\n  capabilities: [{\\n    browserName: \'safari\',\\n    platformName: \'MacOS 10.13\',\\n    ...\\n  }, {\\n    browserName: \'microsoftedge\',\\n    platformName: \'Windows 10\',\\n    ...\\n  }]\\n}\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```\\n// wdio.conf.js\\nexport const config = {\\n  // multiremote example\\n  capabilities: {\\n    browserA: {\\n      browserName: \'chrome\',\\n      browserVersion: 86\\n      platformName: \'Windows 10\'\\n    },\\n    browserB: {\\n      browserName: \'firefox\',\\n      browserVersion: 74\\n      platformName: \'Mac OS X\'\\n    }\\n  }\\n})\\n```"}]}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":347,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/@serenity-js/webdriverio-8/node_modules/@wdio/types/src/Capabilities.ts","qualifiedName":"RemoteCapabilities"},"name":"RemoteCapabilities","package":"@wdio/types"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.capabilities"}},{"id":6761,"name":"runner","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Type of runner\\n- local: every spec file group is spawned in its own local process\\n  running an independant browser session\\n- browser: all spec files are run within the browser"}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":354,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"local"},{"type":"literal","value":"browser"},{"type":"tuple","elements":[{"type":"literal","value":"browser"},{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/index.ts","qualifiedName":"__global.WebdriverIO.BrowserRunnerOptions"},"name":"BrowserRunnerOptions","package":"@wdio/types","qualifiedName":"__global.WebdriverIO.BrowserRunnerOptions"}]},{"type":"tuple","elements":[{"type":"literal","value":"local"},{"type":"intrinsic","name":"never"}]}]},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.runner"}},{"id":6762,"name":"rootDir","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Project root directory path."}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":358,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.rootDir"}},{"id":6763,"name":"specs","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Define specs for test execution. You can either specify a glob\\npattern to match multiple files at once or wrap a glob or set of\\npaths into an array to run them within a single worker process."}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":364,"character":4}],"type":{"type":"array","elementType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"array","elementType":{"type":"intrinsic","name":"string"}}]}},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.specs"}},{"id":6764,"name":"exclude","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Exclude specs from test execution."}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":368,"character":4}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.exclude"}},{"id":6765,"name":"suites","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"An object describing various of suites, which you can then specify\\nwith the --suite option on the wdio CLI."}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":373,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"union","types":[{"type":"array","elementType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"array","elementType":{"type":"intrinsic","name":"string"}}]}},{"type":"array","elementType":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}]}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.suites"}},{"id":6766,"name":"maxInstances","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Maximum number of total parallel running workers."}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":377,"character":4}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.maxInstances"}},{"id":6767,"name":"maxInstancesPerCapability","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Maximum number of total parallel running workers per capability."}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":381,"character":4}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.maxInstancesPerCapability"}},{"id":6768,"name":"injectGlobals","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Inserts WebdriverIO\'s globals (e.g. "},{"kind":"code","text":"`browser`"},{"kind":"text","text":", "},{"kind":"code","text":"`$`"},{"kind":"text","text":" and "},{"kind":"code","text":"`$$`"},{"kind":"text","text":") into the\\nglobal environment. If you set to "},{"kind":"code","text":"`false`"},{"kind":"text","text":", you should import from\\n"},{"kind":"code","text":"`@wdio/globals`"},{"kind":"text","text":", e.g.:\\n\\n"},{"kind":"code","text":"```ts\\nimport { browser, $, $$, expect } from \'@wdio/globals\'\\n```"},{"kind":"text","text":"\\n\\nNote: WebdriverIO doesn\'t handle injection of test framework specific\\nglobals."}],"blockTags":[{"tag":"@default","content":[{"kind":"code","text":"```ts\\ntrue\\n```"}]}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":396,"character":4}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.injectGlobals"}},{"id":6769,"name":"bail","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If you want your test run to stop after a specific number of test failures, use bail.\\n(It defaults to 0, which runs all tests no matter what.) Note: Please be aware that\\nwhen using a third party test runner (such as Mocha), additional configuration might\\nbe required."}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":403,"character":4}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.bail"}},{"id":6770,"name":"updateSnapshots","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Set to true if you want to update your snapshots."}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":407,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"all"},{"type":"literal","value":"new"},{"type":"literal","value":"none"}]},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.updateSnapshots"}},{"id":6771,"name":"resolveSnapshotPath","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Overrides default snapshot path. For example, to store snapshots next to test files."}],"blockTags":[{"tag":"@default","content":[{"kind":"code","text":"```ts\\n__snapshots__ stores snapshot files in __snapshots__ directory next to the test file.\\n```"}]}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":412,"character":4}],"type":{"type":"reflection","declaration":{"id":6772,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":412,"character":26}],"signatures":[{"id":6773,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":412,"character":26}],"parameters":[{"id":6774,"name":"testPath","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":6775,"name":"snapExtension","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}]}},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.resolveSnapshotPath"}},{"id":6776,"name":"specFileRetries","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The number of retry attempts for an entire specfile when it fails as a whole."}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":416,"character":4}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.specFileRetries"}},{"id":6777,"name":"specFileRetriesDelay","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Delay in seconds between the spec file retry attempts"}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":420,"character":4}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.specFileRetriesDelay"}},{"id":6778,"name":"specFileRetriesDeferred","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether or not retried spec files should be retried immediately or deferred to the end of the queue"}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":424,"character":4}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.specFileRetriesDeferred"}},{"id":6779,"name":"groupLogsByTestSpec","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Choose the log output view.\\nIf set to \\"false\\" logs from different test files will be printed in real-time.\\nPlease note that this may result in the mixing of log outputs from different Test Specs when running in parallel.\\nIf set to \\"true\\" log outputs will be grouped by test files and printed only when the test is completed.\\nBy default, it is set to \\"false\\" so logs are printed in real-time."}],"blockTags":[{"tag":"@default","content":[{"kind":"code","text":"```ts\\nfalse\\n```"}]}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":434,"character":4}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.groupLogsByTestSpec"}},{"id":6780,"name":"services","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Services take over a specific job you don\'t want to take care of. They enhance\\nyour test setup with almost no effort."}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":439,"character":4}],"type":{"type":"array","elementType":{"type":"reference","target":{"sourceFileName":"node_modules/@serenity-js/webdriverio-8/node_modules/@wdio/types/src/Services.ts","qualifiedName":"ServiceEntry"},"name":"ServiceEntry","package":"@wdio/types"}},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.services"}},{"id":6781,"name":"framework","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Defines the test framework to be used by the WDIO testrunner."}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":443,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.framework"}},{"id":6782,"name":"reporters","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"List of reporters to use. A reporter can be either a string, or an array of\\n"},{"kind":"code","text":"`[\'reporterName\', { <reporter options> }]`"},{"kind":"text","text":" where the first element is a string\\nwith the reporter name and the second element an object with reporter options."}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":449,"character":4}],"type":{"type":"array","elementType":{"type":"reference","target":{"sourceFileName":"node_modules/@serenity-js/webdriverio-8/node_modules/@wdio/types/src/Reporters.ts","qualifiedName":"ReporterEntry"},"name":"ReporterEntry","package":"@wdio/types"}},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.reporters"}},{"id":6783,"name":"reporterSyncInterval","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Determines in which interval the reporter should check if they are synchronised\\nif they report their logs asynchronously (e.g. if logs are streamed to a 3rd\\nparty vendor)."}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":455,"character":4}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.reporterSyncInterval"}},{"id":6784,"name":"reporterSyncTimeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Determines the maximum time reporters have to finish uploading all their logs\\nuntil an error is being thrown by the testrunner."}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":460,"character":4}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.reporterSyncTimeout"}},{"id":6785,"name":"execArgv","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Node arguments to specify when launching child processes."}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":464,"character":4}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.execArgv"}},{"id":6786,"name":"runnerEnv","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A set of environment variables to be injected into the worker process."}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":468,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.runnerEnv"}},{"id":6787,"name":"filesToWatch","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Files to watch when running "},{"kind":"code","text":"`wdio`"},{"kind":"text","text":" with the "},{"kind":"code","text":"`--watch`"},{"kind":"text","text":" flag."}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":472,"character":4}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.filesToWatch"}},{"id":6788,"name":"cucumberFeaturesWithLineNumbers","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"List of cucumber features with line numbers (when using [cucumber framework](https://webdriver.io/docs/frameworks.html#using-cucumber))."}],"blockTags":[{"tag":"@default","content":[{"kind":"code","text":"```ts\\n[]\\n```"}]}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":477,"character":4}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.cucumberFeaturesWithLineNumbers"}},{"id":6789,"name":"watch","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"flags"}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":481,"character":4}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.watch"}},{"id":6790,"name":"shard","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Shard tests and execute only the selected shard. Specify in the one-based form like "},{"kind":"code","text":"`{ total: 5, current: 2 }`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":485,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/@serenity-js/webdriverio-8/node_modules/@wdio/types/src/Options.ts","qualifiedName":"ShardOptions"},"name":"ShardOptions","package":"@wdio/types"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.shard"}},{"id":6791,"name":"mochaOpts","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"framework options"}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":489,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/index.ts","qualifiedName":"__global.WebdriverIO.MochaOpts"},"name":"MochaOpts","package":"@wdio/types","qualifiedName":"__global.WebdriverIO.MochaOpts"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.mochaOpts"}},{"id":6792,"name":"jasmineOpts","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":490,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/index.ts","qualifiedName":"__global.WebdriverIO.JasmineOpts"},"name":"JasmineOpts","package":"@wdio/types","qualifiedName":"__global.WebdriverIO.JasmineOpts"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.jasmineOpts"}},{"id":6793,"name":"cucumberOpts","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":491,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/index.ts","qualifiedName":"__global.WebdriverIO.CucumberOpts"},"name":"CucumberOpts","package":"@wdio/types","qualifiedName":"__global.WebdriverIO.CucumberOpts"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.cucumberOpts"}},{"id":6794,"name":"autoCompileOpts","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"autocompile options"}]},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Options.ts","line":495,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/@serenity-js/webdriverio-8/node_modules/@wdio/types/src/Options.ts","qualifiedName":"AutoCompileConfig"},"name":"AutoCompileConfig","package":"@wdio/types"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.autoCompileOpts"}},{"id":6795,"name":"onPrepare","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Services.ts","line":107,"character":4}],"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.onPrepare"}},{"id":6796,"name":"onComplete","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Services.ts","line":116,"character":4}],"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.onComplete"}},{"id":6797,"name":"onWorkerStart","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Services.ts","line":126,"character":4}],"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.onWorkerStart"}},{"id":6798,"name":"onWorkerEnd","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Services.ts","line":134,"character":4}],"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.onWorkerEnd"}},{"id":6799,"name":"before","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Services.ts","line":142,"character":4}],"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.before"}},{"id":6800,"name":"after","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Services.ts","line":150,"character":4}],"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.after"}},{"id":6801,"name":"beforeSession","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Services.ts","line":159,"character":4}],"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.beforeSession"}},{"id":6802,"name":"afterSession","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Services.ts","line":166,"character":4}],"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.afterSession"}},{"id":6803,"name":"onReload","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Services.ts","line":172,"character":4}],"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.onReload"}},{"id":6804,"name":"beforeSuite","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Services.ts","line":177,"character":4}],"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.beforeSuite"}},{"id":6805,"name":"afterSuite","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Services.ts","line":182,"character":4}],"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.afterSuite"}},{"id":6806,"name":"beforeTest","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Services.ts","line":188,"character":4}],"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.beforeTest"}},{"id":6807,"name":"afterTest","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Services.ts","line":199,"character":4}],"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.afterTest"}},{"id":6808,"name":"beforeHook","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Services.ts","line":207,"character":4}],"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.beforeHook"}},{"id":6809,"name":"afterHook","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Services.ts","line":216,"character":4}],"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.afterHook"}},{"id":6810,"name":"beforeCommand","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Services.ts","line":222,"character":4}],"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.beforeCommand"}},{"id":6811,"name":"afterCommand","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Services.ts","line":230,"character":4}],"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.afterCommand"}},{"id":6812,"name":"beforeAssertion","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Services.ts","line":236,"character":4}],"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.beforeAssertion"}},{"id":6813,"name":"afterAssertion","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/webdriverio-8/node_modules/@wdio/types/build/Services.ts","line":244,"character":4}],"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.afterAssertion"}},{"id":6757,"name":"serenity","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Serenity/JS configuration with an additional "},{"kind":"code","text":"`runner`"},{"kind":"text","text":" entry\\nallowing to specify the test runner, such as "},{"kind":"code","text":"`cucumber`"},{"kind":"text","text":", "},{"kind":"code","text":"`mocha`"},{"kind":"text","text":", or "},{"kind":"code","text":"`jasmine`"},{"kind":"text","text":".\\n\\n#### Learn more\\n\\n- [WebdriverIO configuration file](https://webdriver.io/docs/configurationfile/)\\n- ["},{"kind":"code","text":"`CucumberConfig`"},{"kind":"text","text":"](/api/cucumber-adapter/interface/CucumberConfig/)\\n- ["},{"kind":"code","text":"`JasmineConfig`"},{"kind":"text","text":"](/api/jasmine-adapter/interface/JasmineConfig/)\\n- ["},{"kind":"code","text":"`MochaConfig`"},{"kind":"text","text":"](/api/mocha-adapter/interface/MochaConfig/)"}]},"sources":[{"fileName":"packages/webdriverio-8/src/config/WebdriverIOConfig.ts","line":93,"character":4}],"type":{"type":"intersection","types":[{"type":"reference","target":85,"name":"SerenityConfig","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":6758,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":6759,"name":"runner","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/webdriverio-8/src/config/WebdriverIOConfig.ts","line":93,"character":34}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[6759]}],"sources":[{"fileName":"packages/webdriverio-8/src/config/WebdriverIOConfig.ts","line":93,"character":32}]}}]}}],"groups":[{"title":"Properties","children":[6839,6840,6841,6842,6843,6847,6848,6814,6815,6816,6817,6818,6822,6826,6830,6835,6836,6837,6838,6849,6850,6851,6852,6853,6854,6760,6761,6762,6763,6764,6765,6766,6767,6768,6769,6770,6771,6776,6777,6778,6779,6780,6781,6782,6783,6784,6785,6786,6787,6788,6789,6790,6791,6792,6793,6794,6757]},{"title":"Methods","children":[6795,6796,6797,6798,6799,6800,6801,6802,6803,6804,6805,6806,6807,6808,6809,6810,6811,6812,6813]}],"sources":[{"fileName":"packages/webdriverio-8/src/config/WebdriverIOConfig.ts","line":80,"character":17}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"node_modules/@serenity-js/webdriverio-8/node_modules/@wdio/types/src/Options.ts","qualifiedName":"Testrunner"},"name":"Testrunner","package":"@wdio/types"}],"permalink":"/api/webdriverio-8/interface/WebdriverIOConfig","categories":[],"previousId":6855,"nextId":6880},{"id":28,"name":"default","variant":"declaration","kind":32,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"WebdriverIO Framework Adapter integrates WebdriverIO with Serenity/JS"}]},"sources":[{"fileName":"packages/webdriverio-8/src/index.ts","line":12,"character":0}],"type":{"type":"reflection","declaration":{"id":29,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":30,"name":"init","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/index.ts","line":13,"character":10}],"signatures":[{"id":31,"name":"init","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/index.ts","line":13,"character":10}],"parameters":[{"id":32,"name":"cid","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":33,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":6756,"name":"WebdriverIOConfig","package":"@serenity-js/webdriverio-8"}},{"id":34,"name":"specs","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":35,"name":"capabilities","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/@serenity-js/webdriverio-8/node_modules/@wdio/types/src/Capabilities.ts","qualifiedName":"RemoteCapability"},"name":"RemoteCapability","package":"@wdio/types"}},{"id":36,"name":"reporter","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/events.d.ts","qualifiedName":"EventEmitter"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/events.d.ts","qualifiedName":"DefaultEventMap"},"name":"DefaultEventMap","package":"@types/node"}],"name":"EventEmitter","package":"@types/node"},{"type":"reference","name":"ProvidesWriteStream","package":"@serenity-js/webdriverio-8"},{"type":"reference","name":"InitialisesReporters","package":"@serenity-js/webdriverio-8"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reflection","declaration":{"id":37,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":38,"name":"hasTests","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/index.ts","line":19,"character":17}],"type":{"type":"reflection","declaration":{"id":39,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/index.ts","line":19,"character":27}],"signatures":[{"id":40,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/index.ts","line":19,"character":27}],"type":{"type":"intrinsic","name":"boolean"}}]}}},{"id":41,"name":"run","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/index.ts","line":19,"character":42}],"type":{"type":"reflection","declaration":{"id":42,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/index.ts","line":19,"character":47}],"signatures":[{"id":43,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/index.ts","line":19,"character":47}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]}}}],"groups":[{"title":"Properties","children":[38,41]}],"sources":[{"fileName":"packages/webdriverio-8/src/index.ts","line":19,"character":15}]}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]}],"groups":[{"title":"Methods","children":[30]}],"sources":[{"fileName":"packages/webdriverio-8/src/index.ts","line":12,"character":15}]}},"permalink":"/api/webdriverio-8#default","categories":[],"previousId":7142},{"id":6855,"name":"BrowseTheWebWithWebdriverIO","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"This implementation of the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\nenables the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to interact with web front-ends using [WebdriverIO](https://webdriver.io/).\\n\\n## Using WebdriverIO to "},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { BrowseTheWebWithWebdriverIO } from \'@serenity-js/webdriverio-8\'\\nimport { By, Navigate, PageElement, Text } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { browser } from \'@wdio/globals\'\\n\\nconst HomePage = {\\n  title: () =>\\n    PageElement.located(By.css(\'h1\')).describedAs(\'title\')\\n}\\n\\nawait actorCalled(\'Wendy\')\\n  .whoCan(BrowseTheWebWithWebdriverIO.using(browser))  // `browser` is global in WebdriverIO tests\\n  .attemptsTo(\\n    Navigate.to(`https://serenity-js.org`),\\n    Ensure.that(Text.of(HomePage.title()), equals(\'Serenity/JS\')),\\n  );\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- [WebdriverIO website](https://webdriver.io/)\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\n- ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/)\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)"}]},"children":[{"id":6856,"name":"using","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/abilities/BrowseTheWebWithWebdriverIO.ts","line":43,"character":11}],"signatures":[{"id":6857,"name":"using","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/abilities/BrowseTheWebWithWebdriverIO.ts","line":43,"character":11}],"parameters":[{"id":6858,"name":"browserInstance","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/index.ts","qualifiedName":"__global.WebdriverIO.Browser"},"name":"Browser","package":"@wdio/types","qualifiedName":"__global.WebdriverIO.Browser"}}],"type":{"type":"reference","target":6855,"name":"BrowseTheWebWithWebdriverIO","package":"@serenity-js/webdriverio-8"}}]},{"id":6876,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/abilities/Ability.ts","line":406,"character":4}],"signatures":[{"id":6877,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a JSON representation of the ability and its current state, if available.\\nThe purpose of this method is to enable reporting the state of the ability in a human-readable format,\\nrather than to serialise and deserialise the ability itself."}]},"sources":[{"fileName":"packages/core/lib/screenplay/abilities/Ability.ts","line":406,"character":4}],"type":{"type":"reference","target":614,"name":"SerialisedAbility","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.toJSON"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.toJSON"}},{"id":6878,"name":"abilityType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/abilities/Ability.ts","line":436,"character":4}],"signatures":[{"id":6879,"name":"abilityType","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the most abstract type of this Ability instance,\\nspecifically the first class in the inheritance hierarchy that directly extends the "},{"kind":"code","text":"`Ability`"},{"kind":"text","text":" class.\\n\\n"},{"kind":"code","text":"```ts\\nimport { Ability } from \'@serenity-js/core\';\\n\\nclass MyAbility extends Ability {}\\nclass MySpecialisedAbility extends MyAbility {}\\n\\nnew MyAbility().abilityType();            // returns MyAbility\\nnew MySpecialisedAbility().abilityType(); // returns MyAbility\\n```"}]},"sources":[{"fileName":"packages/core/lib/screenplay/abilities/Ability.ts","line":436,"character":4}],"type":{"type":"reference","target":529,"typeArguments":[{"type":"reference","target":508,"name":"Ability","package":"@serenity-js/core"}],"name":"AbilityType","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.abilityType"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.abilityType"}},{"id":6866,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":83,"character":4}],"signatures":[{"id":6867,"name":"new BrowseTheWebWithWebdriverIO","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":83,"character":4}],"parameters":[{"id":6868,"name":"session","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":3932,"typeArguments":[{"type":"reference","target":4302,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/index.ts","qualifiedName":"__global.WebdriverIO.Element"},"name":"Element","package":"@wdio/types","qualifiedName":"__global.WebdriverIO.Element"}],"name":"Page","package":"@serenity-js/web"}],"name":"BrowsingSession","package":"@serenity-js/web"}}],"type":{"type":"reference","target":6855,"name":"BrowseTheWebWithWebdriverIO","package":"@serenity-js/webdriverio-8"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb<WebdriverIO.Element>.constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb<WebdriverIO.Element>.constructor"}},{"id":6870,"name":"currentPage","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":87,"character":4}],"signatures":[{"id":6871,"name":"currentPage","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/) representing the currently active browser tab."}]},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":87,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4302,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/index.ts","qualifiedName":"__global.WebdriverIO.Element"},"name":"Element","package":"@wdio/types","qualifiedName":"__global.WebdriverIO.Element"}],"name":"Page","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.currentPage"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.currentPage"}},{"id":6872,"name":"allPages","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":92,"character":4}],"signatures":[{"id":6873,"name":"allPages","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns an array of [pages](/api/web/class/Page/) representing all the browser tabs\\navailable in the current ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/)."}]},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":92,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4302,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/index.ts","qualifiedName":"__global.WebdriverIO.Element"},"name":"Element","package":"@wdio/types","qualifiedName":"__global.WebdriverIO.Element"}],"name":"Page","package":"@serenity-js/web"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.allPages"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.allPages"}},{"id":6874,"name":"browserCapabilities","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":96,"character":4}],"signatures":[{"id":6875,"name":"browserCapabilities","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns [basic meta-data](/api/web/interface/BrowserCapabilities/) about the browser associated with this ability."}]},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":96,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":3928,"name":"BrowserCapabilities","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.browserCapabilities"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.browserCapabilities"}}],"groups":[{"title":"Constructors","children":[6866]},{"title":"Methods","children":[6856,6876,6878,6870,6872,6874]}],"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/abilities/BrowseTheWebWithWebdriverIO.ts","line":41,"character":13}],"extendedTypes":[{"type":"reference","target":3316,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/index.ts","qualifiedName":"__global.WebdriverIO.Element"},"name":"WebdriverIO.Element","package":"@wdio/types","qualifiedName":"__global.WebdriverIO.Element"}],"name":"BrowseTheWeb","package":"@serenity-js/web"}],"permalink":"/api/webdriverio-8/class/BrowseTheWebWithWebdriverIO","categories":[],"nextId":6756},{"id":6880,"name":"WebdriverIOBrowsingSession","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"WebdriverIO-specific implementation of ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/)."}]},"children":[{"id":6907,"name":"closePagesOtherThan","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":15,"character":4}],"signatures":[{"id":6908,"name":"closePagesOtherThan","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":15,"character":4}],"parameters":[{"id":6909,"name":"pageOfInterest","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":7025,"name":"WebdriverIOPage","package":"@serenity-js/webdriverio-8"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.closePagesOtherThan"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.closePagesOtherThan"}},{"id":6910,"name":"register","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":33,"character":4}],"signatures":[{"id":6911,"name":"register","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Registers specified [pages](/api/web/class/Page/) to be managed by this ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/)."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":33,"character":4}],"parameters":[{"id":6912,"name":"pages","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":7025,"name":"WebdriverIOPage","package":"@serenity-js/webdriverio-8"}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.register"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.register"}},{"id":6913,"name":"deregister","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":40,"character":4}],"signatures":[{"id":6914,"name":"deregister","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Informs this ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/) that it should no longer manage [pages](/api/web/class/Page/)\\nidentified by the given "},{"kind":"code","text":"`pageIds`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":40,"character":4}],"parameters":[{"id":6915,"name":"pageIds","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.deregister"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.deregister"}},{"id":6916,"name":"registeredPageIds","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":49,"character":4}],"signatures":[{"id":6917,"name":"registeredPageIds","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the ids of any [pages](/api/web/class/Page/) this ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/) is aware of."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":49,"character":4}],"type":{"type":"array","elementType":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.registeredPageIds"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.registeredPageIds"}},{"id":6918,"name":"closeAllPages","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":72,"character":4}],"signatures":[{"id":6919,"name":"closeAllPages","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Closes all the pages available in this browsing context"}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":72,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.closeAllPages"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.closeAllPages"}},{"id":6881,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOBrowsingSession.ts","line":21,"character":4}],"signatures":[{"id":6882,"name":"new WebdriverIOBrowsingSession","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOBrowsingSession.ts","line":21,"character":4}],"parameters":[{"id":6883,"name":"browser","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/index.ts","qualifiedName":"__global.WebdriverIO.Browser"},"name":"Browser","package":"@wdio/types","qualifiedName":"__global.WebdriverIO.Browser"}}],"type":{"type":"reference","target":6880,"name":"WebdriverIOBrowsingSession","package":"@serenity-js/webdriverio-8"},"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession<WebdriverIOPage>.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession<WebdriverIOPage>.constructor"}},{"id":6885,"name":"allPages","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOBrowsingSession.ts","line":29,"character":19}],"signatures":[{"id":6886,"name":"allPages","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOBrowsingSession.ts","line":29,"character":19}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":7025,"name":"WebdriverIOPage","package":"@serenity-js/webdriverio-8"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession.allPages"}}],"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession.allPages"}},{"id":6887,"name":"changeCurrentPageTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOBrowsingSession.ts","line":62,"character":19}],"signatures":[{"id":6888,"name":"changeCurrentPageTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOBrowsingSession.ts","line":62,"character":19}],"parameters":[{"id":6889,"name":"page","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":7025,"name":"WebdriverIOPage","package":"@serenity-js/webdriverio-8"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession.changeCurrentPageTo"}}],"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession.changeCurrentPageTo"}},{"id":6892,"name":"currentPage","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOBrowsingSession.ts","line":119,"character":19}],"signatures":[{"id":6893,"name":"currentPage","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOBrowsingSession.ts","line":119,"character":19}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":7025,"name":"WebdriverIOPage","package":"@serenity-js/webdriverio-8"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession.currentPage"}}],"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession.currentPage"}},{"id":6903,"name":"browserCapabilities","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOBrowsingSession.ts","line":191,"character":13}],"signatures":[{"id":6904,"name":"browserCapabilities","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOBrowsingSession.ts","line":191,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":3928,"name":"BrowserCapabilities","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession.browserCapabilities"}}],"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession.browserCapabilities"}}],"groups":[{"title":"Constructors","children":[6881]},{"title":"Methods","children":[6907,6910,6913,6916,6918,6885,6887,6892,6903]}],"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOBrowsingSession.ts","line":19,"character":13}],"extendedTypes":[{"type":"reference","target":3932,"typeArguments":[{"type":"reference","target":7025,"name":"WebdriverIOPage","package":"@serenity-js/webdriverio-8"}],"name":"BrowsingSession","package":"@serenity-js/web"}],"permalink":"/api/webdriverio-8/class/WebdriverIOBrowsingSession","categories":[],"previousId":6756,"nextId":6920},{"id":6920,"name":"WebdriverIOCookie","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"WebdriverIO-specific implementation of ["},{"kind":"code","text":"`Cookie`"},{"kind":"text","text":"](/api/web/class/Cookie/)."}]},"children":[{"id":7009,"name":"name","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":99,"character":4}],"signatures":[{"id":7010,"name":"name","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the name of this cookie."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":99,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.name"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.name"}},{"id":7011,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":106,"character":4}],"signatures":[{"id":7012,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Checks if a given cookie is set.\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Optional`"},{"kind":"text","text":"](/api/core/interface/Optional/)"}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":106,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.isPresent"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.isPresent"}},{"id":7013,"name":"value","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":110,"character":4}],"signatures":[{"id":7014,"name":"value","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the value of a given cookie."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":110,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.value"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.value"}},{"id":7015,"name":"path","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":114,"character":4}],"signatures":[{"id":7016,"name":"path","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the path of a given cookie, if any was set."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":114,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.path"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.path"}},{"id":7017,"name":"domain","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":118,"character":4}],"signatures":[{"id":7018,"name":"domain","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the domain of a given cookie, if any was set."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":118,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.domain"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.domain"}},{"id":7019,"name":"isHttpOnly","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":125,"character":4}],"signatures":[{"id":7020,"name":"isHttpOnly","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Checks if a given cookie is HTTP-only.\\n\\n#### Learn more\\n- [Mozilla Developer Network: Restricting access to cookies](https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies#restrict_access_to_cookies)"}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":125,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.isHttpOnly"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.isHttpOnly"}},{"id":7021,"name":"isSecure","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":132,"character":4}],"signatures":[{"id":7022,"name":"isSecure","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Checks if a given cookie is secure.\\n\\n#### Learn more\\n- [Mozilla Developer Network: Restricting access to cookies](https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies#restrict_access_to_cookies)"}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":132,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.isSecure"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.isSecure"}},{"id":7023,"name":"expiry","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":139,"character":4}],"signatures":[{"id":7024,"name":"expiry","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the expiry date of a given cookie\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Timestamp`"},{"kind":"text","text":"](/api/core/class/Timestamp/)"}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":139,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":1894,"name":"Timestamp","package":"@serenity-js/core"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.expiry"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.expiry"}},{"id":6999,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOCookie.ts","line":15,"character":4}],"signatures":[{"id":7000,"name":"new WebdriverIOCookie","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOCookie.ts","line":15,"character":4}],"parameters":[{"id":7001,"name":"browser","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/index.ts","qualifiedName":"__global.WebdriverIO.Browser"},"name":"Browser","package":"@wdio/types","qualifiedName":"__global.WebdriverIO.Browser"}},{"id":7002,"name":"cookieName","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":6920,"name":"WebdriverIOCookie","package":"@serenity-js/webdriverio-8"},"overwrites":{"type":"reference","target":-1,"name":"Cookie.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"Cookie.constructor"}},{"id":7004,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOCookie.ts","line":23,"character":10}],"signatures":[{"id":7005,"name":"delete","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOCookie.ts","line":23,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Cookie.delete"}}],"overwrites":{"type":"reference","target":-1,"name":"Cookie.delete"}}],"groups":[{"title":"Constructors","children":[6999]},{"title":"Methods","children":[7009,7011,7013,7015,7017,7019,7021,7023,7004]}],"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOCookie.ts","line":13,"character":13}],"extendedTypes":[{"type":"reference","target":3963,"name":"Cookie","package":"@serenity-js/web"}],"permalink":"/api/webdriverio-8/class/WebdriverIOCookie","categories":[],"previousId":6880,"nextId":7025},{"id":7025,"name":"WebdriverIOPage","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"WebdriverIO-specific implementation of ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/)."}]},"children":[{"id":7135,"name":"id","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":132,"character":13}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Page.id"}},{"id":7136,"name":"switchTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":432,"character":4}],"signatures":[{"id":7137,"name":"switchTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Switches the current browsing context to the given page\\nand returns an object that allows the caller to switch back\\nto the previous context when needed.\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Switch`"},{"kind":"text","text":"](/api/web/class/Switch/)\\n- ["},{"kind":"code","text":"`Switchable`"},{"kind":"text","text":"](/api/web/interface/Switchable/)"}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":432,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4866,"name":"SwitchableOrigin","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Page.switchTo"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Page.switchTo"}},{"id":7138,"name":"modalDialog","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":444,"character":4}],"signatures":[{"id":7139,"name":"modalDialog","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the ["},{"kind":"code","text":"`ModalDialogHandler`"},{"kind":"text","text":"](/api/web/class/ModalDialogHandler/) for the current ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/)."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":444,"character":4}],"type":{"type":"reference","target":4170,"name":"ModalDialogHandler","package":"@serenity-js/web"},"inheritedFrom":{"type":"reference","target":-1,"name":"Page.modalDialog"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Page.modalDialog"}},{"id":7140,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":448,"character":4}],"signatures":[{"id":7141,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a description of this Page and its ID."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":448,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Page.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Page.toString"}},{"id":7037,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":32,"character":4}],"signatures":[{"id":7038,"name":"new WebdriverIOPage","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":32,"character":4}],"parameters":[{"id":7039,"name":"session","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":6880,"name":"WebdriverIOBrowsingSession","package":"@serenity-js/webdriverio-8"}},{"id":7040,"name":"browser","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/index.ts","qualifiedName":"__global.WebdriverIO.Browser"},"name":"Browser","package":"@wdio/types","qualifiedName":"__global.WebdriverIO.Browser"}},{"id":7041,"name":"modalDialogHandler","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4170,"name":"ModalDialogHandler","package":"@serenity-js/web"}},{"id":7042,"name":"errorHandler","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"WebdriverIOErrorHandler","package":"@serenity-js/webdriverio-8"}},{"id":7043,"name":"pageId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}],"type":{"type":"reference","target":7025,"name":"WebdriverIOPage","package":"@serenity-js/webdriverio-8"},"overwrites":{"type":"reference","target":-1,"name":"Page<WebdriverIO.Element>.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"Page<WebdriverIO.Element>.constructor"}},{"id":7048,"name":"createPageElement","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":47,"character":4}],"signatures":[{"id":7049,"name":"createPageElement","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":47,"character":4}],"parameters":[{"id":7050,"name":"nativeElement","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/index.ts","qualifiedName":"__global.WebdriverIO.Element"},"name":"Element","package":"@wdio/types","qualifiedName":"__global.WebdriverIO.Element"}}],"type":{"type":"reference","target":4418,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/index.ts","qualifiedName":"__global.WebdriverIO.Element"},"name":"Element","package":"@wdio/types","qualifiedName":"__global.WebdriverIO.Element"}],"name":"PageElement","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"Page.createPageElement"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.createPageElement"}},{"id":7051,"name":"locate","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":58,"character":4}],"signatures":[{"id":7052,"name":"locate","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":58,"character":4}],"parameters":[{"id":7053,"name":"selector","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4853,"name":"Selector","package":"@serenity-js/web"}}],"type":{"type":"reference","target":4418,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/index.ts","qualifiedName":"__global.WebdriverIO.Element"},"name":"Element","package":"@wdio/types","qualifiedName":"__global.WebdriverIO.Element"}],"name":"PageElement","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"Page.locate"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.locate"}},{"id":7054,"name":"locateAll","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":64,"character":4}],"signatures":[{"id":7055,"name":"locateAll","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":64,"character":4}],"parameters":[{"id":7056,"name":"selector","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4853,"name":"Selector","package":"@serenity-js/web"}}],"type":{"type":"reference","target":4494,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/index.ts","qualifiedName":"__global.WebdriverIO.Element"},"name":"Element","package":"@wdio/types","qualifiedName":"__global.WebdriverIO.Element"}],"name":"PageElements","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"Page.locateAll"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.locateAll"}},{"id":7057,"name":"navigateTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":72,"character":10}],"signatures":[{"id":7058,"name":"navigateTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":72,"character":10}],"parameters":[{"id":7059,"name":"destination","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.navigateTo"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.navigateTo"}},{"id":7060,"name":"navigateBack","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":76,"character":10}],"signatures":[{"id":7061,"name":"navigateBack","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":76,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.navigateBack"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.navigateBack"}},{"id":7062,"name":"navigateForward","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":80,"character":10}],"signatures":[{"id":7063,"name":"navigateForward","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":80,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.navigateForward"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.navigateForward"}},{"id":7064,"name":"reload","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":84,"character":10}],"signatures":[{"id":7065,"name":"reload","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":84,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.reload"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.reload"}},{"id":7066,"name":"sendKeys","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":88,"character":10}],"signatures":[{"id":7067,"name":"sendKeys","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":88,"character":10}],"parameters":[{"id":7068,"name":"keys","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":4186,"name":"Key","package":"@serenity-js/web"}]}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.sendKeys"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.sendKeys"}},{"id":7069,"name":"executeScript","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":100,"character":10}],"signatures":[{"id":7070,"name":"executeScript","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":100,"character":10}],"typeParameter":[{"id":7071,"name":"Result","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":7072,"name":"InnerArguments","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"parameters":[{"id":7073,"name":"script","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reflection","declaration":{"id":7074,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":101,"character":26}],"signatures":[{"id":7075,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":101,"character":26}],"parameters":[{"id":7076,"name":"parameters","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"reference","target":7072,"name":"InnerArguments","package":"@serenity-js/webdriverio-8","refersToTypeParameter":true}}],"type":{"type":"reference","target":7071,"name":"Result","package":"@serenity-js/webdriverio-8","refersToTypeParameter":true}}]}}]}},{"id":7077,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"reference","target":7072,"name":"InnerArguments","package":"@serenity-js/webdriverio-8","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":7071,"name":"Result","package":"@serenity-js/webdriverio-8","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.executeScript"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.executeScript"}},{"id":7078,"name":"executeAsyncScript","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":126,"character":10}],"signatures":[{"id":7079,"name":"executeAsyncScript","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":126,"character":10}],"typeParameter":[{"id":7080,"name":"Result","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":7081,"name":"Parameters","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"parameters":[{"id":7082,"name":"script","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reflection","declaration":{"id":7083,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":127,"character":26}],"signatures":[{"id":7084,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":127,"character":26}],"parameters":[{"id":7085,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"tuple","elements":[{"type":"rest","elementType":{"type":"namedTupleMember","name":"parameters","isOptional":false,"element":{"type":"array","elementType":{"type":"reference","target":7081,"name":"Parameters","package":"@serenity-js/webdriverio-8","refersToTypeParameter":true}}}},{"type":"namedTupleMember","name":"callback","isOptional":false,"element":{"type":"reflection","declaration":{"id":7086,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":127,"character":74}],"signatures":[{"id":7087,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":127,"character":74}],"parameters":[{"id":7088,"name":"result","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":7080,"name":"Result","package":"@serenity-js/webdriverio-8","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"void"}}]}}}]}}],"type":{"type":"intrinsic","name":"void"}}]}}]}},{"id":7089,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"reference","target":7081,"name":"Parameters","package":"@serenity-js/webdriverio-8","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":7080,"name":"Result","package":"@serenity-js/webdriverio-8","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.executeAsyncScript"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.executeAsyncScript"}},{"id":7090,"name":"lastScriptExecutionResult","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":157,"character":4}],"signatures":[{"id":7091,"name":"lastScriptExecutionResult","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":157,"character":4}],"typeParameter":[{"id":7092,"name":"Result","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"any"}}],"type":{"type":"reference","target":7092,"name":"Result","package":"@serenity-js/webdriverio-8","refersToTypeParameter":true},"overwrites":{"type":"reference","target":-1,"name":"Page.lastScriptExecutionResult"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.lastScriptExecutionResult"}},{"id":7093,"name":"takeScreenshot","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":169,"character":10}],"signatures":[{"id":7094,"name":"takeScreenshot","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":169,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.takeScreenshot"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.takeScreenshot"}},{"id":7095,"name":"cookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":188,"character":10}],"signatures":[{"id":7096,"name":"cookie","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":188,"character":10}],"parameters":[{"id":7097,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":3963,"name":"Cookie","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.cookie"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.cookie"}},{"id":7098,"name":"setCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":192,"character":10}],"signatures":[{"id":7099,"name":"setCookie","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":192,"character":10}],"parameters":[{"id":7100,"name":"cookieData","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4069,"name":"CookieData","package":"@serenity-js/web"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.setCookie"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.setCookie"}},{"id":7101,"name":"deleteAllCookies","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":209,"character":10}],"signatures":[{"id":7102,"name":"deleteAllCookies","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":209,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.deleteAllCookies"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.deleteAllCookies"}},{"id":7103,"name":"title","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":215,"character":10}],"signatures":[{"id":7104,"name":"title","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":215,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.title"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.title"}},{"id":7105,"name":"name","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":219,"character":10}],"signatures":[{"id":7106,"name":"name","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":219,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.name"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.name"}},{"id":7107,"name":"url","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":223,"character":10}],"signatures":[{"id":7108,"name":"url","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":223,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/url.d.ts","qualifiedName":"\\"url\\".URL"},"name":"URL","package":"@types/node","qualifiedName":"\\"url\\".URL"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.url"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.url"}},{"id":7109,"name":"viewportSize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":229,"character":10}],"signatures":[{"id":7110,"name":"viewportSize","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":229,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reflection","declaration":{"id":7111,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":7112,"name":"width","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":229,"character":36}],"type":{"type":"intrinsic","name":"number"}},{"id":7113,"name":"height","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":229,"character":51}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[7112,7113]}],"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":229,"character":34}]}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.viewportSize"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.viewportSize"}},{"id":7114,"name":"setViewportSize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":249,"character":10}],"signatures":[{"id":7115,"name":"setViewportSize","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":249,"character":10}],"parameters":[{"id":7116,"name":"size","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":7117,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":7118,"name":"width","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":249,"character":34}],"type":{"type":"intrinsic","name":"number"}},{"id":7119,"name":"height","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":249,"character":49}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[7118,7119]}],"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":249,"character":32}]}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.setViewportSize"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.setViewportSize"}},{"id":7120,"name":"close","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":269,"character":10}],"signatures":[{"id":7121,"name":"close","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":269,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.close"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.close"}},{"id":7122,"name":"closeOthers","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":273,"character":10}],"signatures":[{"id":7123,"name":"closeOthers","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":273,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.closeOthers"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.closeOthers"}},{"id":7124,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":277,"character":10}],"signatures":[{"id":7125,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":277,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.isPresent"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.isPresent"}}],"groups":[{"title":"Constructors","children":[7037]},{"title":"Properties","children":[7135]},{"title":"Methods","children":[7136,7138,7140,7048,7051,7054,7057,7060,7062,7064,7066,7069,7078,7090,7093,7095,7098,7101,7103,7105,7107,7109,7114,7120,7122,7124]}],"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPage.ts","line":21,"character":13}],"extendedTypes":[{"type":"reference","target":4302,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/index.ts","qualifiedName":"__global.WebdriverIO.Element"},"name":"WebdriverIO.Element","package":"@wdio/types","qualifiedName":"__global.WebdriverIO.Element"}],"name":"Page","package":"@serenity-js/web"}],"permalink":"/api/webdriverio-8/class/WebdriverIOPage","categories":[],"previousId":6920,"nextId":7142},{"id":7142,"name":"WebdriverIOPageElement","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"WebdriverIO-specific implementation of ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)."}]},"children":[{"id":7214,"name":"locator","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":19,"character":13}],"type":{"type":"reference","target":4252,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/index.ts","qualifiedName":"__global.WebdriverIO.Element"},"name":"Element","package":"@wdio/types","qualifiedName":"__global.WebdriverIO.Element"},{"type":"intrinsic","name":"any"}],"name":"Locator","package":"@serenity-js/web"},"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement.locator"}},{"id":7159,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":46,"character":4}],"signatures":[{"id":7160,"name":"new WebdriverIOPageElement","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":46,"character":4}],"parameters":[{"id":7161,"name":"locator","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4252,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/index.ts","qualifiedName":"__global.WebdriverIO.Element"},"name":"Element","package":"@wdio/types","qualifiedName":"__global.WebdriverIO.Element"},{"type":"intrinsic","name":"any"}],"name":"Locator","package":"@serenity-js/web"}}],"type":{"type":"reference","target":7142,"name":"WebdriverIOPageElement","package":"@serenity-js/webdriverio-8"},"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement<WebdriverIO.Element>.constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement<WebdriverIO.Element>.constructor"}},{"id":7215,"name":"nativeElement","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":107,"character":4}],"signatures":[{"id":7216,"name":"nativeElement","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An \\"escape hatch\\" providing access to the integration tool-specific implementation of a Web element."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":107,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/index.ts","qualifiedName":"__global.WebdriverIO.Element"},"name":"Element","package":"@wdio/types","qualifiedName":"__global.WebdriverIO.Element"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement.nativeElement"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement.nativeElement"}},{"id":7217,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":108,"character":4}],"signatures":[{"id":7218,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":108,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement.toString"}},{"id":7162,"name":"of","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPageElement.ts","line":17,"character":4}],"signatures":[{"id":7163,"name":"of","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPageElement.ts","line":17,"character":4}],"parameters":[{"id":7164,"name":"parent","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":7142,"name":"WebdriverIOPageElement","package":"@serenity-js/webdriverio-8"}}],"type":{"type":"reference","target":7142,"name":"WebdriverIOPageElement","package":"@serenity-js/webdriverio-8"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.of"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.of"}},{"id":7165,"name":"closestTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPageElement.ts","line":21,"character":4}],"signatures":[{"id":7166,"name":"closestTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPageElement.ts","line":21,"character":4}],"parameters":[{"id":7167,"name":"child","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":7142,"name":"WebdriverIOPageElement","package":"@serenity-js/webdriverio-8"}}],"type":{"type":"reference","target":7142,"name":"WebdriverIOPageElement","package":"@serenity-js/webdriverio-8"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.closestTo"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.closestTo"}},{"id":7168,"name":"clearValue","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPageElement.ts","line":25,"character":10}],"signatures":[{"id":7169,"name":"clearValue","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPageElement.ts","line":25,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.clearValue"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.clearValue"}},{"id":7170,"name":"click","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPageElement.ts","line":64,"character":10}],"signatures":[{"id":7171,"name":"click","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPageElement.ts","line":64,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.click"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.click"}},{"id":7172,"name":"doubleClick","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPageElement.ts","line":69,"character":10}],"signatures":[{"id":7173,"name":"doubleClick","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPageElement.ts","line":69,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.doubleClick"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.doubleClick"}},{"id":7174,"name":"enterValue","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPageElement.ts","line":74,"character":10}],"signatures":[{"id":7175,"name":"enterValue","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPageElement.ts","line":74,"character":10}],"parameters":[{"id":7176,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.enterValue"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.enterValue"}},{"id":7177,"name":"scrollIntoView","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPageElement.ts","line":81,"character":10}],"signatures":[{"id":7178,"name":"scrollIntoView","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPageElement.ts","line":81,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.scrollIntoView"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.scrollIntoView"}},{"id":7179,"name":"hoverOver","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPageElement.ts","line":86,"character":10}],"signatures":[{"id":7180,"name":"hoverOver","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPageElement.ts","line":86,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.hoverOver"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.hoverOver"}},{"id":7181,"name":"rightClick","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPageElement.ts","line":91,"character":10}],"signatures":[{"id":7182,"name":"rightClick","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPageElement.ts","line":91,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.rightClick"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.rightClick"}},{"id":7183,"name":"selectOptions","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPageElement.ts","line":96,"character":10}],"signatures":[{"id":7184,"name":"selectOptions","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPageElement.ts","line":96,"character":10}],"parameters":[{"id":7185,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":4733,"name":"SelectOption","package":"@serenity-js/web"}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.selectOptions"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.selectOptions"}},{"id":7186,"name":"selectedOptions","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPageElement.ts","line":109,"character":10}],"signatures":[{"id":7187,"name":"selectedOptions","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPageElement.ts","line":109,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4733,"name":"SelectOption","package":"@serenity-js/web"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.selectedOptions"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.selectedOptions"}},{"id":7188,"name":"attribute","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPageElement.ts","line":137,"character":10}],"signatures":[{"id":7189,"name":"attribute","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPageElement.ts","line":137,"character":10}],"parameters":[{"id":7190,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.attribute"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.attribute"}},{"id":7191,"name":"text","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPageElement.ts","line":142,"character":10}],"signatures":[{"id":7192,"name":"text","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPageElement.ts","line":142,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.text"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.text"}},{"id":7193,"name":"value","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPageElement.ts","line":147,"character":10}],"signatures":[{"id":7194,"name":"value","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPageElement.ts","line":147,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.value"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.value"}},{"id":7195,"name":"html","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPageElement.ts","line":152,"character":10}],"signatures":[{"id":7196,"name":"html","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPageElement.ts","line":152,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.html"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.html"}},{"id":7197,"name":"switchTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPageElement.ts","line":157,"character":10}],"signatures":[{"id":7198,"name":"switchTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPageElement.ts","line":157,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4866,"name":"SwitchableOrigin","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.switchTo"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.switchTo"}},{"id":7199,"name":"isActive","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPageElement.ts","line":217,"character":10}],"signatures":[{"id":7200,"name":"isActive","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPageElement.ts","line":217,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.isActive"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.isActive"}},{"id":7201,"name":"isClickable","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPageElement.ts","line":222,"character":10}],"signatures":[{"id":7202,"name":"isClickable","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPageElement.ts","line":222,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.isClickable"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.isClickable"}},{"id":7203,"name":"isEnabled","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPageElement.ts","line":227,"character":10}],"signatures":[{"id":7204,"name":"isEnabled","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPageElement.ts","line":227,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.isEnabled"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.isEnabled"}},{"id":7205,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPageElement.ts","line":232,"character":10}],"signatures":[{"id":7206,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPageElement.ts","line":232,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.isPresent"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.isPresent"}},{"id":7207,"name":"isSelected","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPageElement.ts","line":237,"character":10}],"signatures":[{"id":7208,"name":"isSelected","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPageElement.ts","line":237,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.isSelected"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.isSelected"}},{"id":7209,"name":"isVisible","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPageElement.ts","line":242,"character":10}],"signatures":[{"id":7210,"name":"isVisible","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPageElement.ts","line":242,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.isVisible"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.isVisible"}}],"groups":[{"title":"Constructors","children":[7159]},{"title":"Properties","children":[7214]},{"title":"Methods","children":[7215,7217,7162,7165,7168,7170,7172,7174,7177,7179,7181,7183,7186,7188,7191,7193,7195,7197,7199,7201,7203,7205,7207,7209]}],"sources":[{"fileName":"packages/webdriverio-8/src/screenplay/models/WebdriverIOPageElement.ts","line":16,"character":13}],"extendedTypes":[{"type":"reference","target":4418,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/index.ts","qualifiedName":"__global.WebdriverIO.Element"},"name":"WebdriverIO.Element","package":"@wdio/types","qualifiedName":"__global.WebdriverIO.Element"}],"name":"PageElement","package":"@serenity-js/web"}],"permalink":"/api/webdriverio-8/class/WebdriverIOPageElement","categories":[],"previousId":7025,"nextId":28}],"groups":[{"title":"Abilities","children":[6855]},{"title":"Configuration","children":[6756]},{"title":"Models","children":[6880,6920,7025,7142]},{"title":"Variables","children":[28]}],"sources":[{"fileName":"packages/webdriverio-8/src/index.ts","line":1,"character":0}],"permalink":"/api/webdriverio-8"},"urlSlug":"webdriverio-8"}],"packageName":"@serenity-js/webdriverio-8","packageVersion":"3.32.1"}]')}}]);