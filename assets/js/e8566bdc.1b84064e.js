"use strict";(self.webpackChunkserenity_js_org=self.webpackChunkserenity_js_org||[]).push([[1674],{38417:e=>{e.exports=JSON.parse('[{"entryPoints":[{"index":true,"label":"Index","reflection":{"id":4,"name":"@serenity-js/assertions","variant":"declaration","kind":2,"flags":{"isExternal":true},"children":[{"id":2991,"name":"Ensure","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The [interaction](/api/core/class/Interaction/) to "},{"kind":"code","text":"`Ensure`"},{"kind":"text","text":"\\nverifies if the resolved value of the provided ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable)\\nmeets the specified ["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/).\\nIf not, it throws an ["},{"kind":"code","text":"`AssertionError`"},{"kind":"text","text":"](/api/core/class/AssertionError/).\\n\\nUse "},{"kind":"code","text":"`Ensure`"},{"kind":"text","text":" to verify the state of the system under test.\\n\\n## Basic usage with static values\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Erica\').attemptsTo(\\n  Ensure.that(\'Hello world!\', equals(\'Hello world!\'))\\n)\\n```"},{"kind":"text","text":"\\n\\n## Composing expectations with "},{"kind":"code","text":"`and`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { and, Ensure, startsWith, endsWith } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Erica\').attemptsTo(\\n  Ensure.that(\'Hello world!\', and(startsWith(\'Hello\'), endsWith(\'!\'))\\n)\\n```"},{"kind":"text","text":"\\n\\n## Overriding the type of Error thrown upon assertion failure\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, TestCompromisedError } from \'@serenity-js/core\'\\nimport { and, Ensure, startsWith, endsWith } from \'@serenity-js/assertions\'\\nimport { CallAnApi, GetRequest, LastResponse, Send } from \'@serenity-js/rest\'\\n\\nawait actorCalled(\'Erica\')\\n  .whoCan(CallAnApi.at(\'https://example.com\'))\\n  .attemptsTo(\\n    Send.a(GetRequest.to(\'/api/health\')),\\n    Ensure.that(LastResponse.status(), equals(200))\\n      .otherwiseFailWith(TestCompromisedError, \'The server is down, please cheer it up!\')\\n  )\\n```"}]},"children":[{"id":2992,"name":"that","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/assertions/src/Ensure.ts","line":88,"character":11}],"signatures":[{"id":2993,"name":"that","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates an [interaction](/api/core/class/Interaction/) to "},{"kind":"code","text":"`Ensure`"},{"kind":"text","text":", which\\nverifies if the resolved value of the provided ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable)\\nmeets the specified ["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/).\\nIf not, it immediately throws an ["},{"kind":"code","text":"`AssertionError`"},{"kind":"text","text":"](/api/core/class/AssertionError/)."}],"blockTags":[{"tag":"@returns","content":[]}]},"sources":[{"fileName":"packages/assertions/src/Ensure.ts","line":88,"character":11}],"typeParameter":[{"id":2994,"name":"Actual_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":2995,"name":"actual","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable) describing the actual state of the system."}]},"type":{"type":"reference","target":688,"typeArguments":[{"type":"reference","target":2994,"name":"Actual_Type","package":"@serenity-js/assertions","refersToTypeParameter":true}],"name":"Answerable","package":"@serenity-js/core"}},{"id":2996,"name":"expectation","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An ["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/) you expect the "},{"kind":"code","text":"`actual`"},{"kind":"text","text":" value to meet"}]},"type":{"type":"reference","target":1138,"typeArguments":[{"type":"reference","target":2994,"name":"Actual_Type","package":"@serenity-js/assertions","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2991,"typeArguments":[{"type":"reference","target":2994,"name":"Actual_Type","package":"@serenity-js/assertions","refersToTypeParameter":true}],"name":"Ensure","package":"@serenity-js/assertions"}}]},{"id":2997,"name":"eventually","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/assertions/src/Ensure.ts","line":107,"character":11}],"signatures":[{"id":2998,"name":"eventually","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates an [interaction](/api/core/class/Interaction/) to ["},{"kind":"code","text":"`EnsureEventually`"},{"kind":"text","text":"](/api/assertions/class/EnsureEventually/),\\nwhich verifies if the resolved value of the provided ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable)\\nmeets the specified ["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/) within the expected timeframe.\\n\\nIf the expectation is not met by the time the timeout expires, the interaction throws an ["},{"kind":"code","text":"`AssertionError`"},{"kind":"text","text":"](/api/core/class/AssertionError/)."}],"blockTags":[{"tag":"@returns","content":[]}]},"sources":[{"fileName":"packages/assertions/src/Ensure.ts","line":107,"character":11}],"typeParameter":[{"id":2999,"name":"Actual_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":3000,"name":"actual","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable) describing the actual state of the system."}]},"type":{"type":"reference","target":688,"typeArguments":[{"type":"reference","target":2999,"name":"Actual_Type","package":"@serenity-js/assertions","refersToTypeParameter":true}],"name":"Answerable","package":"@serenity-js/core"}},{"id":3001,"name":"expectation","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An ["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/) you expect the "},{"kind":"code","text":"`actual`"},{"kind":"text","text":" value to meet"}]},"type":{"type":"reference","target":1138,"typeArguments":[{"type":"reference","target":2999,"name":"Actual_Type","package":"@serenity-js/assertions","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}],"type":{"type":"reference","target":3047,"typeArguments":[{"type":"reference","target":2999,"name":"Actual_Type","package":"@serenity-js/assertions","refersToTypeParameter":true}],"name":"EnsureEventually","package":"@serenity-js/assertions"}}]},{"id":3020,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/Ensure.ts","line":127,"character":10}],"signatures":[{"id":3021,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/assertions/src/Ensure.ts","line":127,"character":10}],"parameters":[{"id":3022,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":600,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":1049,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":692,"name":"CollectsArtifacts","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Interaction.performAs"}}],"overwrites":{"type":"reference","target":-1,"name":"Interaction.performAs"}},{"id":3023,"name":"otherwiseFailWith","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/Ensure.ts","line":160,"character":4}],"signatures":[{"id":3024,"name":"otherwiseFailWith","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Overrides the default ["},{"kind":"code","text":"`AssertionError`"},{"kind":"text","text":"](/api/core/class/AssertionError/) thrown when\\nthe actual value does not meet the expectation."}]},"sources":[{"fileName":"packages/assertions/src/Ensure.ts","line":160,"character":4}],"parameters":[{"id":3025,"name":"typeOfRuntimeError","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A constructor function producing a subtype of ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/) to throw, e.g. ["},{"kind":"code","text":"`TestCompromisedError`"},{"kind":"text","text":"](/api/core/class/TestCompromisedError/)"}]},"type":{"type":"reflection","declaration":{"id":3026,"name":"__type","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/Ensure.ts","line":160,"character":42}],"signatures":[{"id":3027,"name":"new typeOfRuntimeError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/Ensure.ts","line":160,"character":42}],"parameters":[{"id":3028,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":3029,"name":"cause","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}],"type":{"type":"reference","target":349,"name":"RuntimeError","package":"@serenity-js/core"}}]}}},{"id":3030,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The message explaining the failure"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":793,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":3032,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"signatures":[{"id":3033,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.instantiationLocation"}},{"id":3034,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":3035,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":3036,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1049,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":600,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":3037,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3038,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3038]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.describedBy"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.describedBy"}},{"id":3044,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":3045,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.toString"}}],"groups":[{"title":"Methods","children":[2992,2997,3020,3023,3032,3034,3044]}],"sources":[{"fileName":"packages/assertions/src/Ensure.ts","line":72,"character":13}],"typeParameters":[{"id":3046,"name":"Actual","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"extendedTypes":[{"type":"reference","target":793,"name":"Interaction","package":"@serenity-js/core"}],"permalink":"/api/assertions/class/Ensure","nextId":3047},{"id":3047,"name":"EnsureEventually","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The [interaction](/api/core/class/Interaction/) to "},{"kind":"code","text":"`EnsureEventually`"},{"kind":"text","text":"\\nverifies if the resolved value of the provided ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable)\\nmeets the specified ["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/) within the expected timeframe.\\n\\nIf the expectation is not met by the time the timeout expires, the interaction throws an ["},{"kind":"code","text":"`AssertionError`"},{"kind":"text","text":"](/api/core/class/AssertionError/).\\n"},{"kind":"code","text":"`EnsureEventually`"},{"kind":"text","text":" retries the evaluation if resolving the "},{"kind":"code","text":"`actual`"},{"kind":"text","text":" results in an ["},{"kind":"code","text":"`ListItemNotFoundError`"},{"kind":"text","text":"](/api/core/class/ListItemNotFoundError/),\\nbut rethrows any other errors.\\n\\n:::tip Use the factory method\\nUse the factory method ["},{"kind":"code","text":"`Ensure.eventually`"},{"kind":"text","text":"](/api/assertions/class/Ensure/#eventually] to instantiate this interaction.\\n:::\\n\\n## Basic usage with dynamic values\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { Text, PageElement, By } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Erica\').attemptsTo(\\n  Ensure.eventually(\\n    Text.of(PageElement.located(By.css(\'h1\'))),\\n    equals(\'Learn Serenity/JS!\')\\n  )\\n)\\n```"},{"kind":"text","text":"\\n\\n## Composing expectations with "},{"kind":"code","text":"`and`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { and, Ensure, startsWith, endsWith } from \'@serenity-js/assertions\'\\nimport { Text, PageElement, By } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Erica\').attemptsTo(\\n  Ensure.eventually(\\n    Text.of(PageElement.located(By.css(\'h1\'))),\\n    and(startsWith(\'Serenity\'), endsWith(\'!\'))\\n  )\\n)\\n```"},{"kind":"text","text":"\\n\\n## Overriding the type of Error thrown upon assertion failure\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { and, Ensure, startsWith, endsWith } from \'@serenity-js/assertions\'\\nimport { Text, PageElement, By } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Erica\').attemptsTo(\\n  Ensure.eventually(\\n    Text.of(PageElement.located(By.css(\'h1\'))),\\n    and(startsWith(\'Serenity\'), endsWith(\'!\'))\\n  ).otherwiseFailWith(LogicError, `Looks like we\'re not on the right page`)\\n)\\n```"}],"modifierTags":["@experimental"]},"children":[{"id":3058,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/EnsureEventually.ts","line":92,"character":4}],"signatures":[{"id":3059,"name":"new EnsureEventually","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/EnsureEventually.ts","line":92,"character":4}],"typeParameter":[{"id":3060,"name":"Actual","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":3061,"name":"actual","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":688,"typeArguments":[{"type":"reference","target":3060,"name":"Actual","package":"@serenity-js/assertions","qualifiedName":"EnsureEventually.Actual","refersToTypeParameter":true}],"name":"Answerable","package":"@serenity-js/core"}},{"id":3062,"name":"expectation","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1138,"typeArguments":[{"type":"reference","target":3060,"name":"Actual","package":"@serenity-js/assertions","qualifiedName":"EnsureEventually.Actual","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}},{"id":3063,"name":"location","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"}},{"id":3064,"name":"timeout","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1742,"name":"Duration","package":"@serenity-js/core"}}],"type":{"type":"reference","target":3047,"typeArguments":[{"type":"reference","target":3060,"name":"Actual","package":"@serenity-js/assertions","qualifiedName":"EnsureEventually.Actual","refersToTypeParameter":true}],"name":"EnsureEventually","package":"@serenity-js/assertions"},"overwrites":{"type":"reference","target":-1,"name":"Interaction.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"Interaction.constructor"}},{"id":3068,"name":"timeoutAfter","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/EnsureEventually.ts","line":106,"character":4}],"signatures":[{"id":3069,"name":"timeoutAfter","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Override the default timeout set via ["},{"kind":"code","text":"`SerenityConfig.interactionTimeout`"},{"kind":"text","text":"](/api/core/class/SerenityConfig/#interactionTimeout)."}]},"sources":[{"fileName":"packages/assertions/src/EnsureEventually.ts","line":106,"character":4}],"parameters":[{"id":3070,"name":"timeout","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1742,"name":"Duration","package":"@serenity-js/core"}}],"type":{"type":"reference","target":3047,"typeArguments":[{"type":"reference","target":3060,"name":"Actual","package":"@serenity-js/assertions","qualifiedName":"EnsureEventually.Actual","refersToTypeParameter":true}],"name":"EnsureEventually","package":"@serenity-js/assertions"}}]},{"id":3071,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/EnsureEventually.ts","line":113,"character":10}],"signatures":[{"id":3072,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/assertions/src/EnsureEventually.ts","line":113,"character":10}],"parameters":[{"id":3073,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":600,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":1049,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":692,"name":"CollectsArtifacts","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Interaction.performAs"}}],"overwrites":{"type":"reference","target":-1,"name":"Interaction.performAs"}},{"id":3074,"name":"otherwiseFailWith","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/EnsureEventually.ts","line":161,"character":4}],"signatures":[{"id":3075,"name":"otherwiseFailWith","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Overrides the default ["},{"kind":"code","text":"`AssertionError`"},{"kind":"text","text":"](/api/core/class/AssertionError/) thrown when\\nthe actual value does not meet the expectation."}]},"sources":[{"fileName":"packages/assertions/src/EnsureEventually.ts","line":161,"character":4}],"parameters":[{"id":3076,"name":"typeOfRuntimeError","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A constructor function producing a subtype of ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/) to throw, e.g. ["},{"kind":"code","text":"`TestCompromisedError`"},{"kind":"text","text":"](/api/core/class/TestCompromisedError/)"}]},"type":{"type":"reflection","declaration":{"id":3077,"name":"__type","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/EnsureEventually.ts","line":161,"character":42}],"signatures":[{"id":3078,"name":"new typeOfRuntimeError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/EnsureEventually.ts","line":161,"character":42}],"parameters":[{"id":3079,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":3080,"name":"cause","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}],"type":{"type":"reference","target":349,"name":"RuntimeError","package":"@serenity-js/core"}}]}}},{"id":3081,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The message explaining the failure"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":793,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":3083,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"signatures":[{"id":3084,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.instantiationLocation"}},{"id":3085,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":3086,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":3087,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1049,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":600,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":3088,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3089,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3089]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.describedBy"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.describedBy"}},{"id":3095,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":3096,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.toString"}}],"groups":[{"title":"Constructors","children":[3058]},{"title":"Methods","children":[3068,3071,3074,3083,3085,3095]}],"sources":[{"fileName":"packages/assertions/src/EnsureEventually.ts","line":85,"character":13}],"typeParameters":[{"id":3097,"name":"Actual","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"extendedTypes":[{"type":"reference","target":793,"name":"Interaction","package":"@serenity-js/core"}],"permalink":"/api/assertions/class/EnsureEventually","previousId":2991,"nextId":3098},{"id":3098,"name":"and","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/expectations/and.ts","line":24,"character":16}],"signatures":[{"id":3099,"name":"and","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates an [expectation](/api/core/class/Expectation/) that is met when all the "},{"kind":"code","text":"`expectations`"},{"kind":"text","text":" are met for the given actual value.\\n\\nUse "},{"kind":"code","text":"`and`"},{"kind":"text","text":" to combine several expectations using logical \\"and\\",\\n\\n## Combining several expectations\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, and, startsWith, endsWith } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(\'Hello World!\', and(startsWith(\'Hello\'), endsWith(\'!\'))),\\n)\\n```"}]},"sources":[{"fileName":"packages/assertions/src/expectations/and.ts","line":24,"character":16}],"typeParameter":[{"id":3100,"name":"Actual_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":3101,"name":"expectations","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":1138,"typeArguments":[{"type":"reference","target":3100,"name":"Actual_Type","package":"@serenity-js/assertions","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}}],"type":{"type":"reference","target":1138,"typeArguments":[{"type":"reference","target":3100,"name":"Actual_Type","package":"@serenity-js/assertions","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/assertions/function/and","previousId":3047,"nextId":3102},{"id":3102,"name":"contain","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/expectations/contain.ts","line":28,"character":13}],"signatures":[{"id":3103,"name":"contain","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Produces an [expectation](/api/core/class/Expectation/) that is met when the actual array of "},{"kind":"code","text":"`Item[]`"},{"kind":"text","text":" contains\\nat least one "},{"kind":"code","text":"`Item`"},{"kind":"text","text":" that is equal to the resolved value of "},{"kind":"code","text":"`expected`"},{"kind":"text","text":".\\n\\nNote that the equality check performs comparison **by value**\\nusing [TinyTypes "},{"kind":"code","text":"`equal`"},{"kind":"text","text":"](https://github.com/jan-molak/tiny-types/blob/master/src/objects/equal.ts).\\n\\n## Ensuring that the array contains the given item\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, and, startsWith, endsWith } from \'@serenity-js/assertions\'\\n\\nconst items = [ { name: \'apples\' }, { name: \'bananas\' } ]\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(items, contain({ name: \'bananas\' })),\\n)\\n```"}]},"sources":[{"fileName":"packages/assertions/src/expectations/contain.ts","line":28,"character":13}],"typeParameter":[{"id":3104,"name":"Item","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":3105,"name":"answerableArguments","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"expected","isOptional":false,"element":{"type":"reference","target":688,"typeArguments":[{"type":"reference","target":3104,"name":"Item","package":"@serenity-js/assertions","refersToTypeParameter":true}],"name":"Answerable","package":"@serenity-js/core"}}]}}],"type":{"type":"reference","target":1138,"typeArguments":[{"type":"array","elementType":{"type":"reference","target":3104,"name":"Item","package":"@serenity-js/assertions","refersToTypeParameter":true}}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/assertions/function/contain","previousId":3098,"nextId":3106},{"id":3106,"name":"containAtLeastOneItemThat","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/expectations/containAtLeastOneItemThat.ts","line":25,"character":16}],"signatures":[{"id":3107,"name":"containAtLeastOneItemThat","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Produces an [expectation](/api/core/class/Expectation/) that is met when the actual array of "},{"kind":"code","text":"`Item[]`"},{"kind":"text","text":" contains\\nat least one "},{"kind":"code","text":"`Item`"},{"kind":"text","text":" for which the "},{"kind":"code","text":"`expectation`"},{"kind":"text","text":" is met.\\n\\n## Ensuring that at least one item in an array meets the expectation\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, containAtLeastOneItemThat, isGreaterThan } from \'@serenity-js/assertions\'\\n\\nconst items = [ 10, 15, 20 ]\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(items, containAtLeastOneItemThat(isGreaterThan(18))),\\n)\\n```"}]},"sources":[{"fileName":"packages/assertions/src/expectations/containAtLeastOneItemThat.ts","line":25,"character":16}],"typeParameter":[{"id":3108,"name":"Item","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":3109,"name":"expectation","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1138,"typeArguments":[{"type":"reference","target":3108,"name":"Item","package":"@serenity-js/assertions","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1138,"typeArguments":[{"type":"array","elementType":{"type":"reference","target":3108,"name":"Item","package":"@serenity-js/assertions","refersToTypeParameter":true}}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/assertions/function/containAtLeastOneItemThat","previousId":3102,"nextId":3110},{"id":3110,"name":"containItemsWhereEachItem","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/expectations/containItemsWhereEachItem.ts","line":25,"character":16}],"signatures":[{"id":3111,"name":"containItemsWhereEachItem","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Produces an [expectation](/api/core/class/Expectation/) that is met when all the items of the actual array of "},{"kind":"code","text":"`Item[]`"},{"kind":"text","text":"\\nmeet the "},{"kind":"code","text":"`expectation`"},{"kind":"text","text":".\\n\\n## Ensuring that all the items in an array meet the expectation\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, containItemsWhereEachItem, endsWith } from \'@serenity-js/assertions\'\\n\\nconst items = [ \'Monday\', \'Tuesday\', \'Wednesday\', \'Thursday\', \'Friday\' ]\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(items, containItemsWhereEachItem(endsWith(\'day\'))),\\n)\\n```"}]},"sources":[{"fileName":"packages/assertions/src/expectations/containItemsWhereEachItem.ts","line":25,"character":16}],"typeParameter":[{"id":3112,"name":"Actual","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":3113,"name":"expectation","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1138,"typeArguments":[{"type":"reference","target":3112,"name":"Actual","package":"@serenity-js/assertions","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1138,"typeArguments":[{"type":"array","elementType":{"type":"reference","target":3112,"name":"Actual","package":"@serenity-js/assertions","refersToTypeParameter":true}}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/assertions/function/containItemsWhereEachItem","previousId":3106,"nextId":3114},{"id":3114,"name":"endsWith","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/expectations/endsWith.ts","line":22,"character":13}],"signatures":[{"id":3115,"name":"endsWith","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates an [expectation](/api/core/class/Expectation/) that is met when the actual "},{"kind":"code","text":"`string`"},{"kind":"text","text":" value\\nends with the resolved value of "},{"kind":"code","text":"`expected`"},{"kind":"text","text":".\\n\\n## Ensuring that a given string ends with an expected substring\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, endsWith } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(\'Hello World!\', endsWith(\'!\')),\\n)\\n```"}]},"sources":[{"fileName":"packages/assertions/src/expectations/endsWith.ts","line":22,"character":13}],"parameters":[{"id":3116,"name":"answerableArguments","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"expected","isOptional":false,"element":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}}],"type":{"type":"reference","target":1138,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/assertions/function/endsWith","previousId":3110,"nextId":3117},{"id":3117,"name":"equals","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/expectations/equals.ts","line":29,"character":13}],"signatures":[{"id":3118,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Produces an [expectation](/api/core/class/Expectation/) that is met when the actual value\\nis equal to the resolved value of "},{"kind":"code","text":"`expectedValue`"},{"kind":"text","text":".\\n\\nNote that the equality check performs comparison **by value**\\nusing [TinyTypes "},{"kind":"code","text":"`equal`"},{"kind":"text","text":"](https://github.com/jan-molak/tiny-types/blob/master/src/objects/equal.ts).\\n\\n## Ensuring that the actual value equals expected value\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nconst actual   = { name: \'apples\' }\\nconst expected = { name: \'apples\' }\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(actual, equals(expected)),\\n)\\n```"}]},"sources":[{"fileName":"packages/assertions/src/expectations/equals.ts","line":29,"character":13}],"typeParameter":[{"id":3119,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":3120,"name":"answerableArguments","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"expected","isOptional":false,"element":{"type":"reference","target":688,"typeArguments":[{"type":"reference","target":3119,"name":"T","package":"@serenity-js/assertions","refersToTypeParameter":true}],"name":"Answerable","package":"@serenity-js/core"}}]}}],"type":{"type":"reference","target":1138,"typeArguments":[{"type":"reference","target":3119,"name":"T","package":"@serenity-js/assertions","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/assertions/function/equals","previousId":3114,"nextId":3121},{"id":3121,"name":"includes","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/expectations/includes.ts","line":41,"character":13}],"signatures":[{"id":3122,"name":"includes","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates an [expectation](/api/core/class/Expectation/) that is met when the actual "},{"kind":"code","text":"`string`"},{"kind":"text","text":" value\\nincludes a substring of "},{"kind":"code","text":"`expected`"},{"kind":"text","text":".\\n\\n## Ensuring that a given string includes the expected substring\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, includes } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(\'Hello World!\', includes(\'World\')),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Ensuring that page URL includes the expected substring\\n\\n["},{"kind":"code","text":"`Page.current().url()`"},{"kind":"text","text":"](/api/web/class/Page/#url) returns a ["},{"kind":"code","text":"`QuestionAdapter<URL>`"},{"kind":"text","text":"](/api/core/#QuestionAdapter)\\na proxy object around the standard Node.js [URL](https://nodejs.org/api/url.html) class,\\noffering access to "},{"kind":"code","text":"`string`"},{"kind":"text","text":" properties such as ["},{"kind":"code","text":"`hostname`"},{"kind":"text","text":"](https://nodejs.org/api/url.html#urlobjecthostname),\\n["},{"kind":"code","text":"`pathname`"},{"kind":"text","text":"](https://nodejs.org/api/url.html#urlobjectpathname), and so on.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, includes } from \'@serenity-js/assertions\'\\nimport { Navigate, Page } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Navigate.to(\'/handbook\'),\\n  Ensure.that(Page.current().url().hostname, includes(\'serenity-js\')),\\n  Ensure.that(Page.current().url().pathname, includes(\'book\')),\\n)\\n```"}]},"sources":[{"fileName":"packages/assertions/src/expectations/includes.ts","line":41,"character":13}],"parameters":[{"id":3123,"name":"answerableArguments","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"expected","isOptional":false,"element":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}}],"type":{"type":"reference","target":1138,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/assertions/function/includes","previousId":3117,"nextId":3124},{"id":3124,"name":"isAfter","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/expectations/isAfter.ts","line":42,"character":13}],"signatures":[{"id":3125,"name":"isAfter","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates an [expectation](/api/core/class/Expectation/) that is met when the actual value of type "},{"kind":"code","text":"`Date`"},{"kind":"text","text":"\\nis after the expected "},{"kind":"code","text":"`Date`"},{"kind":"text","text":".\\n\\n## Ensuring that a given date is after the expected date\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, isAfter } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(new Date(\'2022-01-01\'), isAfter(new Date(\'1995-01-01\'))),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Ensuring that a given date is within the expected date range\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Expectation, d } from \'@serenity-js/core\'\\nimport { Ensure, and, isAfter, isBefore } from \'@serenity-js/assertions\'\\n\\nconst isWithinDateRange = (lowerBound: Answerable<Date>, upperBound: Answerable<Date>) =>\\n  Expectation.to(d`have value that is between ${ lowerBound } and ${ upperBound }`)\\n    .soThatActual(\\n      and(isAfter(lowerBound), isBefore(upperBound))\\n    ),\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(\\n    new Date(\'2022-01-01\'),\\n    isWithinDateRange(new Date(\'1995-01-01\'), new Date(\'2025-01-01\'))\\n  ),\\n)\\n```"}]},"sources":[{"fileName":"packages/assertions/src/expectations/isAfter.ts","line":42,"character":13}],"parameters":[{"id":3126,"name":"answerableArguments","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"expected","isOptional":false,"element":{"type":"reference","target":688,"typeArguments":[{"type":"union","types":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Date"},"name":"Date","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Date"},{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"}]}],"name":"Answerable","package":"@serenity-js/core"}}]}}],"type":{"type":"reference","target":1138,"typeArguments":[{"type":"union","types":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Date"},"name":"Date","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Date"},{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"}]}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/assertions/function/isAfter","previousId":3121,"nextId":3127},{"id":3127,"name":"isBefore","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/expectations/isBefore.ts","line":42,"character":13}],"signatures":[{"id":3128,"name":"isBefore","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates an [expectation](/api/core/class/Expectation/) that is met when the actual value of type "},{"kind":"code","text":"`Date`"},{"kind":"text","text":"\\nis before the expected "},{"kind":"code","text":"`Date`"},{"kind":"text","text":".\\n\\n## Ensuring that a given date is after the expected date\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, isBefore } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(new Date(\'1995-01-01\'), isBefore(new Date(\'2022-01-01\'))),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Ensuring that a given date is within the expected date range\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Expectation, d } from \'@serenity-js/core\'\\nimport { Ensure, and, isAfter, isBefore } from \'@serenity-js/assertions\'\\n\\nconst isWithinDateRange = (lowerBound: Answerable<Date>, upperBound: Answerable<Date>) =>\\n  Expectation.to(d`have value that is between ${ lowerBound } and ${ upperBound }`)\\n    .soThatActual(\\n      and(isAfter(lowerBound), isBefore(upperBound))\\n    ),\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(\\n    new Date(\'2022-01-01\'),\\n    isWithinDateRange(new Date(\'1995-01-01\'), new Date(\'2025-01-01\'))\\n  ),\\n)\\n```"}]},"sources":[{"fileName":"packages/assertions/src/expectations/isBefore.ts","line":42,"character":13}],"parameters":[{"id":3129,"name":"answerableArguments","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"expected","isOptional":false,"element":{"type":"reference","target":688,"typeArguments":[{"type":"union","types":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Date"},"name":"Date","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Date"},{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"}]}],"name":"Answerable","package":"@serenity-js/core"}}]}}],"type":{"type":"reference","target":1138,"typeArguments":[{"type":"union","types":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Date"},"name":"Date","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Date"},{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"}]}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/assertions/function/isBefore","previousId":3124,"nextId":3130},{"id":3130,"name":"isCloseTo","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/expectations/isCloseTo.ts","line":24,"character":13}],"signatures":[{"id":3131,"name":"isCloseTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Produces an [expectation](/api/core/class/Expectation/) that is met when the actual value\\nis within a given \xb1 "},{"kind":"code","text":"`absoluteTolerance`"},{"kind":"text","text":" range of the "},{"kind":"code","text":"`expected`"},{"kind":"text","text":" value.\\n\\n## Ensuring that a given floating point number is close to the expected number\\n\\n"},{"kind":"code","text":"```ts\\n import { actorCalled } from \'@serenity-js/core\'\\n import { Ensure, isCloseTo } from \'@serenity-js/assertions\'\\n\\n await actorCalled(\'Iris\').attemptsTo(\\n     Ensure.that(10.123, isCloseTo(10, 0.2))\\n )\\n```"}]},"sources":[{"fileName":"packages/assertions/src/expectations/isCloseTo.ts","line":24,"character":13}],"parameters":[{"id":3132,"name":"answerableArguments","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"expected","isOptional":false,"element":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"type":"namedTupleMember","name":"absoluteTolerance","isOptional":false,"element":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}}]}}],"type":{"type":"reference","target":1138,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/assertions/function/isCloseTo","previousId":3127,"nextId":3133},{"id":3133,"name":"isFalse","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/expectations/isFalse.ts","line":23,"character":16}],"signatures":[{"id":3134,"name":"isFalse","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates an [expectation](/api/core/class/Expectation/) that is met when the actual "},{"kind":"code","text":"`boolean`"},{"kind":"text","text":" value\\nis "},{"kind":"code","text":"`false`"},{"kind":"text","text":".\\n\\n## Ensuring that a given value is false\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, isFalse } from \'@serenity-js/assertions\'\\nimport { Cookie } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(Cookie.called(\'example-regular-cookie\').isSecure(), isFalse()),\\n)\\n```"}]},"sources":[{"fileName":"packages/assertions/src/expectations/isFalse.ts","line":23,"character":16}],"type":{"type":"reference","target":1138,"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/assertions/function/isFalse","previousId":3130,"nextId":3135},{"id":3135,"name":"isGreaterThan","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/expectations/isGreaterThan.ts","line":45,"character":13}],"signatures":[{"id":3136,"name":"isGreaterThan","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates an [expectation](/api/core/class/Expectation/) that is met when the actual value of type "},{"kind":"code","text":"`number`"},{"kind":"text","text":"\\nis greater than the expected "},{"kind":"code","text":"`number`"},{"kind":"text","text":".\\n\\n## Ensuring that a given number is greater than the expected number\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, isGreaterThan } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(10, isGreaterThan(5)),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Ensuring that a given number is within the expected range\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Expectation, d } from \'@serenity-js/core\'\\nimport { Ensure, and, equals, isGreaterThan, isLessThan, or } from \'@serenity-js/assertions\'\\n\\nconst isWithinRange = (lowerBound: Answerable<number>, upperBound: Answerable<number>) =>\\n  Expectation.to(d`have value that is between ${ lowerBound } and ${ upperBound }`)\\n    .soThatActual(\\n      and(\\n        or(equals(lowerBound), isGreaterThan(lowerBound)),\\n        or(equals(upperBound), isLessThan(upperBound)),\\n      )\\n    ),\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(\\n    7,\\n    isWithinRange(5, 10)\\n  ),\\n)\\n```"}]},"sources":[{"fileName":"packages/assertions/src/expectations/isGreaterThan.ts","line":45,"character":13}],"parameters":[{"id":3137,"name":"answerableArguments","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"expected","isOptional":false,"element":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}}]}}],"type":{"type":"reference","target":1138,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/assertions/function/isGreaterThan","previousId":3133,"nextId":3138},{"id":3138,"name":"isLessThan","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/expectations/isLessThan.ts","line":45,"character":13}],"signatures":[{"id":3139,"name":"isLessThan","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates an [expectation](/api/core/class/Expectation/) that is met when the actual value of type "},{"kind":"code","text":"`number`"},{"kind":"text","text":"\\nis less than the expected "},{"kind":"code","text":"`number`"},{"kind":"text","text":".\\n\\n## Ensuring that a given number is less than the expected number\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, isLessThan } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(5, isLessThan(10)),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Ensuring that a given number is within the expected range\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Expectation, d } from \'@serenity-js/core\'\\nimport { Ensure, and, equals, isGreaterThan, isLessThan, or } from \'@serenity-js/assertions\'\\n\\nconst isWithinRange = (lowerBound: Answerable<number>, upperBound: Answerable<number>) =>\\n  Expectation.to(d`have value that is between ${ lowerBound } and ${ upperBound }`)\\n    .soThatActual(\\n      and(\\n        or(equals(lowerBound), isGreaterThan(lowerBound)),\\n        or(equals(upperBound), isLessThan(upperBound)),\\n      )\\n    ),\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(\\n    7,\\n    isWithinRange(5, 10)\\n  ),\\n)\\n```"}]},"sources":[{"fileName":"packages/assertions/src/expectations/isLessThan.ts","line":45,"character":13}],"parameters":[{"id":3140,"name":"answerableArguments","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"expected","isOptional":false,"element":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}}]}}],"type":{"type":"reference","target":1138,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/assertions/function/isLessThan","previousId":3135,"nextId":3141},{"id":3141,"name":"isPresent","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/expectations/isPresent.ts","line":66,"character":16}],"signatures":[{"id":3142,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates an [expectation](/api/core/class/Expectation/) that is met when the "},{"kind":"code","text":"`actual`"},{"kind":"text","text":" value is not undefined or null.\\n\\nAlso, when the "},{"kind":"code","text":"`actual`"},{"kind":"text","text":" implements ["},{"kind":"code","text":"`Optional`"},{"kind":"text","text":"](/api/core/interface/Optional/),\\nthe expectation is met when calling ["},{"kind":"code","text":"`Optional.isPresent`"},{"kind":"text","text":"](/api/core/interface/Optional/#isPresent)\\nreturns an ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable) that resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":"\\n\\n## Ensuring that a value is defined\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, Send, GetRequest, LastResponse } from \'@serenity-js/rest\'\\nimport { Ensure, isPresent } from \'@serenity-js/assertions\'\\n\\ninterface Product {\\n    name: string;\\n}\\n\\ninterface ProductsResponse {\\n    products: Product[];\\n}\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(CallAnApi.at(\'https://api.example.org\'))\\n  .attemptsTo(\\n    Send.a(GetRequest.to(\'/products\')),\\n    Ensure.that(LastResponse.body<ProductsResponse>().products[0], isPresent()),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Checking if a PageElement is present\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Check } from \'@serenity-js/core\';\\nimport { BrowseTheWebWithPlaywright } from \'@serenity-js/playwright\';\\nimport { By, Click, Navigate, PageElement } from \'@serenity-js/web\';\\nimport { Browser, chromium } from \'playwright\';\\n\\nclass NewsletterSubscription {\\n  static modal = () =>\\n    PageElement.located(By.id(\'newsletter-subscription\'))\\n      .describedAs(\'newsletter subscription modal\')\\n\\n  static closeButton = () =>\\n    PageElement.located(By.class(\'.close\'))\\n      .of(NewsletterSubscription.modal())\\n      .describedAs(\'close button\')\\n}\\n\\nconst browser = await chromium.launch({ headless: true });\\n\\nawait actorCalled(\'Isabela\')\\n  .whoCan(BrowseTheWebWithPlaywright.using(browser))\\n  .attemptsTo(\\n    Navigate.to(`https://example.org`),\\n    Check.whether(NewsletterSubscription.modal(), isPresent())\\n      .andIfSo(Click.on(NewsletterSubscription.closeButton())),\\n  )\\n```"}]},"sources":[{"fileName":"packages/assertions/src/expectations/isPresent.ts","line":66,"character":16}],"typeParameter":[{"id":3143,"name":"Actual","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"type":{"type":"reference","target":1138,"typeArguments":[{"type":"reference","target":3143,"name":"Actual","package":"@serenity-js/assertions","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/assertions/function/isPresent","previousId":3138,"nextId":3144},{"id":3144,"name":"isTrue","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/expectations/isTrue.ts","line":23,"character":16}],"signatures":[{"id":3145,"name":"isTrue","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates an [expectation](/api/core/class/Expectation/) that is met when the actual "},{"kind":"code","text":"`boolean`"},{"kind":"text","text":" value\\nis "},{"kind":"code","text":"`true`"},{"kind":"text","text":".\\n\\n## Ensuring that a given value is true\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, isTrue } from \'@serenity-js/assertions\'\\nimport { Cookie } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(Cookie.called(\'example-secure-cookie\').isSecure(), isTrue()),\\n)\\n```"}]},"sources":[{"fileName":"packages/assertions/src/expectations/isTrue.ts","line":23,"character":16}],"type":{"type":"reference","target":1138,"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/assertions/function/isTrue","previousId":3141,"nextId":3146},{"id":3146,"name":"matches","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/expectations/matches.ts","line":22,"character":13}],"signatures":[{"id":3147,"name":"matches","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates an [expectation](/api/core/class/Expectation/) that is met when the actual "},{"kind":"code","text":"`string`"},{"kind":"text","text":" value\\nmatches the "},{"kind":"code","text":"`expected`"},{"kind":"text","text":" regular expression.\\n\\n## Ensuring that a given string matches a regular expression\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, includes } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(\'Hello World!\', matches(/[Ww]orld/)),\\n)\\n```"}]},"sources":[{"fileName":"packages/assertions/src/expectations/matches.ts","line":22,"character":13}],"parameters":[{"id":3148,"name":"answerableArguments","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"expected","isOptional":false,"element":{"type":"reference","target":688,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"RegExp"},"name":"RegExp","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/RegExp"}],"name":"Answerable","package":"@serenity-js/core"}}]}}],"type":{"type":"reference","target":1138,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/assertions/function/matches","previousId":3144,"nextId":3149},{"id":3149,"name":"not","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/expectations/not.ts","line":25,"character":16}],"signatures":[{"id":3150,"name":"not","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Produces an [expectation](/api/core/class/Expectation/) that negates the provided "},{"kind":"code","text":"`expectation`"},{"kind":"text","text":".\\n\\n## Ensuring that the actual value does not equal the expected value\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, equals, not } from \'@serenity-js/assertions\'\\n\\nconst actual   = { name: \'apples\' }\\nconst expected = { name: \'bananas\' }\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(actual, not(equals(expected))),\\n)\\n```"}]},"sources":[{"fileName":"packages/assertions/src/expectations/not.ts","line":25,"character":16}],"typeParameter":[{"id":3151,"name":"Actual","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":3152,"name":"expectation","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1138,"typeArguments":[{"type":"reference","target":3151,"name":"Actual","package":"@serenity-js/assertions","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1138,"typeArguments":[{"type":"reference","target":3151,"name":"Actual","package":"@serenity-js/assertions","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/assertions/function/not","previousId":3146,"nextId":3153},{"id":3153,"name":"or","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/expectations/or.ts","line":24,"character":16}],"signatures":[{"id":3154,"name":"or","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates an [expectation](/api/core/class/Expectation/) that is met when at least one of the "},{"kind":"code","text":"`expectations`"},{"kind":"text","text":" is met for the given actual value.\\n\\nUse "},{"kind":"code","text":"`or`"},{"kind":"text","text":" to combine several expectations using logical \\"or\\",\\n\\n## Combining several expectations\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, or, startsWith } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(\'Hello World!\', or(startsWith(\'Hello\'), startsWith(\'Hi\'))),\\n)\\n```"}]},"sources":[{"fileName":"packages/assertions/src/expectations/or.ts","line":24,"character":16}],"typeParameter":[{"id":3155,"name":"Actual_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":3156,"name":"expectations","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":1138,"typeArguments":[{"type":"reference","target":3155,"name":"Actual_Type","package":"@serenity-js/assertions","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}}],"type":{"type":"reference","target":1138,"typeArguments":[{"type":"reference","target":3155,"name":"Actual_Type","package":"@serenity-js/assertions","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/assertions/function/or","previousId":3149,"nextId":3157},{"id":3157,"name":"property","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/expectations/property.ts","line":63,"character":16}],"signatures":[{"id":3158,"name":"property","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates an [expectation](/api/core/class/Expectation/) that is met when the value of\\nthe "},{"kind":"code","text":"`actual[propertyName]`"},{"kind":"text","text":" meets the "},{"kind":"code","text":"`expectation`"},{"kind":"text","text":".\\n\\n## Ensuring that an array has an item\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, property } from \'@serenity-js/assertions\'\\n\\nconst list = [ \'hello\', \'world\' ]\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(list, property(0, isPresent())),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Ensuring that the property meets an expectation\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, property, equals } from \'@serenity-js/assertions\'\\n\\nconst list = [ \'hello\', \'world\' ]\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(list, property(\'length\', equals(2))),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Asserting on a list of objects\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, property, equals } from \'@serenity-js/assertions\'\\n\\nconst developers = [{\\n    name: \'Jan\',\\n    id: \'@jan-molak\',\\n}, {\\n    name: \'John\',\\n    id: \'@wakaleo\',\\n}]\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(\\n    developers,\\n    containItemsWhereEachItem(\\n      property(\'id\', startsWith(\'@\'))\\n    ),\\n  ),\\n)\\n```"}]},"sources":[{"fileName":"packages/assertions/src/expectations/property.ts","line":63,"character":16}],"typeParameter":[{"id":3159,"name":"Actual","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"object"}},{"id":3160,"name":"PropertyName","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":3161,"name":"propertyName","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":3160,"name":"PropertyName","package":"@serenity-js/assertions","refersToTypeParameter":true}},{"id":3162,"name":"expectation","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1138,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","target":3160,"name":"PropertyName","package":"@serenity-js/assertions","refersToTypeParameter":true},"objectType":{"type":"reference","target":3159,"name":"Actual","package":"@serenity-js/assertions","refersToTypeParameter":true}}],"name":"Expectation","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1138,"typeArguments":[{"type":"reference","target":3159,"name":"Actual","package":"@serenity-js/assertions","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/assertions/function/property","previousId":3153,"nextId":3163},{"id":3163,"name":"startsWith","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/expectations/startsWith.ts","line":22,"character":13}],"signatures":[{"id":3164,"name":"startsWith","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates an [expectation](/api/core/class/Expectation/) that is met when the actual "},{"kind":"code","text":"`string`"},{"kind":"text","text":" value\\nstarts with the resolved value of "},{"kind":"code","text":"`expected`"},{"kind":"text","text":".\\n\\n## Ensuring that a given string starts with an expected substring\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, startsWith } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(\'Hello World!\', startsWith(\'Hello\')),\\n)\\n```"}]},"sources":[{"fileName":"packages/assertions/src/expectations/startsWith.ts","line":22,"character":13}],"parameters":[{"id":3165,"name":"answerableArguments","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"expected","isOptional":false,"element":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}}],"type":{"type":"reference","target":1138,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/assertions/function/startsWith","previousId":3157}],"groups":[{"title":"Activities","children":[2991,3047]},{"title":"Expectations","children":[3098,3102,3106,3110,3114,3117,3121,3124,3127,3130,3133,3135,3138,3141,3144,3146,3149,3153,3157,3163]}],"sources":[{"fileName":"packages/assertions/src/index.ts","line":1,"character":0}],"permalink":"/api/assertions"},"urlSlug":"assertions"}],"packageName":"@serenity-js/assertions","packageVersion":"3.26.0"},{"entryPoints":[{"index":true,"label":"Index","reflection":{"id":29,"name":"@serenity-js/console-reporter","variant":"declaration","kind":2,"flags":{"isExternal":true},"children":[{"id":30,"name":"default","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/console-reporter/src/index.ts","line":9,"character":24}],"signatures":[{"id":31,"name":"default","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/console-reporter/src/index.ts","line":9,"character":24}],"parameters":[{"id":32,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":22314,"name":"ConsoleReporterConfig","package":"@serenity-js/console-reporter"},"defaultValue":"undefined"}],"type":{"type":"reference","target":2188,"typeArguments":[{"type":"reference","target":22256,"name":"ConsoleReporter","package":"@serenity-js/console-reporter"}],"name":"StageCrewMemberBuilder","package":"@serenity-js/core"}}],"permalink":"/api/console-reporter/function/default","nextId":22256},{"id":22256,"name":"ConsoleReporter","variant":"declaration","kind":128,"flags":{"isPublic":true,"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/) that uses [standard output](https://en.wikipedia.org/wiki/Standard_streams)\\nto report on progress of your Serenity/JS acceptance tests.\\n\\n"},{"kind":"code","text":"`ConsoleReporter`"},{"kind":"text","text":" ships with colour themes for both dark and light terminals,\\nas well as a monochromatic theme for those moments when you\'re in a noir mood\\n(or have a terminal that doesn\'t support colours, like the good old "},{"kind":"code","text":"`cmd.exe`"},{"kind":"text","text":" on Windows).\\n\\n## Registering Console Reporter programmatically\\n\\n"},{"kind":"code","text":"```ts\\n import { configure } from \'@serenity-js/core\';\\n import { ConsoleReporter } from \'@serenity-js/console-reporter\';\\n\\n configure({\\n   crew: [\\n     ConsoleReporter.withDefaultColourSupport()\\n   ],\\n });\\n```"},{"kind":"text","text":"\\n\\n## Redirecting output to a file\\n\\n"},{"kind":"code","text":"```ts\\n import { configure } from \'@serenity-js/core\';\\n import { ConsoleReporter } from \'@serenity-js/console-reporter\';\\n import { createWriteStream } from \'fs\';\\n\\n configure({\\n   outputStream: createWriteStream(\'./output.log\'),\\n   crew: [ ConsoleReporter.withDefaultColourSupport() ],\\n });\\n ```"},{"kind":"text","text":"\\n\\n## Registering Console Reporter with Playwright Test\\n\\n"},{"kind":"code","text":"```ts\\n// playwright.config.ts\\nimport { devices } from \'@playwright/test\';\\nimport type { PlaywrightTestConfig } from \'@serenity-js/playwright-test\';\\n\\nconst config: PlaywrightTestConfig = {\\n\\n  reporter: [\\n    [ \'line\' ],\\n    [ \'html\', { open: \'never\' } ],\\n    [ \'@serenity-js/playwright-test\', {\\n      crew: [\\n        \'@serenity-js/console-reporter\',\\n      ]\\n    }]\\n  ],\\n}\\n```"},{"kind":"text","text":"\\n\\n## Registering Console Reporter with WebdriverIO\\n\\n"},{"kind":"code","text":"```ts\\n// wdio.conf.ts\\nimport { ConsoleReporter } from \'@serenity-js/console-reporter\';\\nimport { WebdriverIOConfig } from \'@serenity-js/webdriverio\';\\n\\nexport const config: WebdriverIOConfig = {\\n\\n  framework: \'@serenity-js/webdriverio\',\\n\\n  serenity: {\\n    crew: [\\n      \'@serenity-js/console-reporter\',\\n    ]\\n    // other Serenity/JS config\\n  },\\n\\n // other WebdriverIO config\\n}\\n```"},{"kind":"text","text":"\\n\\n## Registering Console Reporter with Protractor\\n\\n"},{"kind":"code","text":"```js\\n// protractor.conf.js\\nconst { ConsoleReporter } = require(\'@serenity-js/console-reporter\');\\n\\nexports.config = {\\n  framework:     \'custom\',\\n  frameworkPath: require.resolve(\'@serenity-js/protractor/adapter\'),\\n\\n  serenity: {\\n    crew: [\\n      \'@serenity-js/console-reporter\',\\n    ],\\n    // other Serenity/JS config\\n  },\\n\\n  // other Protractor config\\n}\\n```"},{"kind":"text","text":"\\n\\n## Changing the default colour theme\\n\\n"},{"kind":"code","text":"```js\\n  // ...\\n  serenity: {\\n    crew: [\\n      [ \'@serenity-js/console-reporter\', {\\n        theme: \'light\',\\n        // theme: \'dark\',\\n        // theme: \'mono\',\\n        // theme: \'auto\',\\n      } ]\\n    ],\\n  },\\n  //...\\n```"}]},"children":[{"id":22257,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/console-reporter/src/stage/crew/console-reporter/ConsoleReporter.ts","line":170,"character":11}],"signatures":[{"id":22258,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/console-reporter/src/stage/crew/console-reporter/ConsoleReporter.ts","line":170,"character":11}],"parameters":[{"id":22259,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":22314,"name":"ConsoleReporterConfig","package":"@serenity-js/console-reporter"}}],"type":{"type":"reference","target":2188,"typeArguments":[{"type":"reference","target":22256,"name":"ConsoleReporter","package":"@serenity-js/console-reporter"}],"name":"StageCrewMemberBuilder","package":"@serenity-js/core"}}]},{"id":22260,"name":"withDefaultColourSupport","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/console-reporter/src/stage/crew/console-reporter/ConsoleReporter.ts","line":184,"character":11}],"signatures":[{"id":22261,"name":"withDefaultColourSupport","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a "},{"kind":"code","text":"`ConsoleReporter`"},{"kind":"text","text":" that auto-detects\\nyour terminal\'s support for colours and uses a colour theme\\nfor dark terminals if successful.\\n\\nPlease note that spawning your test process from another process\\n(by using [npm-failsafe](https://www.npmjs.com/package/npm-failsafe), for example)\\ncauses the "},{"kind":"code","text":"`ConsoleReporter`"},{"kind":"text","text":" to use the monochromatic colour scheme,\\nas colour support can\'t be detected in child processes."}]},"sources":[{"fileName":"packages/console-reporter/src/stage/crew/console-reporter/ConsoleReporter.ts","line":184,"character":11}],"type":{"type":"reference","target":2188,"typeArguments":[{"type":"reference","target":22256,"name":"ConsoleReporter","package":"@serenity-js/console-reporter"}],"name":"StageCrewMemberBuilder","package":"@serenity-js/core"}}]},{"id":22262,"name":"forMonochromaticTerminals","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/console-reporter/src/stage/crew/console-reporter/ConsoleReporter.ts","line":194,"character":11}],"signatures":[{"id":22263,"name":"forMonochromaticTerminals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a "},{"kind":"code","text":"`ConsoleReporter`"},{"kind":"text","text":" with a monochromatic colour theme.\\nGood for terminals with no colour support (like the "},{"kind":"code","text":"`cmd.exe`"},{"kind":"text","text":" on Windows),\\nor for times when you need to pipe the output to a text file and want\\nto avoid printing control characters."}]},"sources":[{"fileName":"packages/console-reporter/src/stage/crew/console-reporter/ConsoleReporter.ts","line":194,"character":11}],"type":{"type":"reference","target":2188,"typeArguments":[{"type":"reference","target":22256,"name":"ConsoleReporter","package":"@serenity-js/console-reporter"}],"name":"StageCrewMemberBuilder","package":"@serenity-js/core"}}]},{"id":22264,"name":"forDarkTerminals","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/console-reporter/src/stage/crew/console-reporter/ConsoleReporter.ts","line":201,"character":11}],"signatures":[{"id":22265,"name":"forDarkTerminals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a "},{"kind":"code","text":"`ConsoleReporter`"},{"kind":"text","text":" with a colour theme optimised for terminals with dark backgrounds."}]},"sources":[{"fileName":"packages/console-reporter/src/stage/crew/console-reporter/ConsoleReporter.ts","line":201,"character":11}],"type":{"type":"reference","target":2188,"typeArguments":[{"type":"reference","target":22256,"name":"ConsoleReporter","package":"@serenity-js/console-reporter"}],"name":"StageCrewMemberBuilder","package":"@serenity-js/core"}}]},{"id":22266,"name":"forLightTerminals","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/console-reporter/src/stage/crew/console-reporter/ConsoleReporter.ts","line":208,"character":11}],"signatures":[{"id":22267,"name":"forLightTerminals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a "},{"kind":"code","text":"`ConsoleReporter`"},{"kind":"text","text":" with a colour theme optimised for terminals with light backgrounds."}]},"sources":[{"fileName":"packages/console-reporter/src/stage/crew/console-reporter/ConsoleReporter.ts","line":208,"character":11}],"type":{"type":"reference","target":2188,"typeArguments":[{"type":"reference","target":22256,"name":"ConsoleReporter","package":"@serenity-js/console-reporter"}],"name":"StageCrewMemberBuilder","package":"@serenity-js/core"}}]},{"id":22271,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/console-reporter/src/stage/crew/console-reporter/ConsoleReporter.ts","line":230,"character":4}],"signatures":[{"id":22272,"name":"new ConsoleReporter","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/console-reporter/src/stage/crew/console-reporter/ConsoleReporter.ts","line":230,"character":4}],"parameters":[{"id":22273,"name":"printer","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Printer","package":"@serenity-js/console-reporter"}},{"id":22274,"name":"theme","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"TerminalTheme","package":"@serenity-js/console-reporter"}},{"id":22275,"name":"stage","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":2103,"name":"Stage","package":"@serenity-js/core"}}],"type":{"type":"reference","target":22256,"name":"ConsoleReporter","package":"@serenity-js/console-reporter"}}]},{"id":22285,"name":"notifyOf","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/console-reporter/src/stage/crew/console-reporter/ConsoleReporter.ts","line":250,"character":4}],"signatures":[{"id":22286,"name":"notifyOf","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Handles ["},{"kind":"code","text":"`DomainEvent`"},{"kind":"text","text":"](/api/core-events/class/DomainEvent/) objects emitted by the ["},{"kind":"code","text":"`Stage`"},{"kind":"text","text":"](/api/core/class/Stage/)."}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/)"}]},{"tag":"@listens","content":[]}]},"sources":[{"fileName":"packages/console-reporter/src/stage/crew/console-reporter/ConsoleReporter.ts","line":250,"character":4}],"parameters":[{"id":22287,"name":"event","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":2565,"name":"DomainEvent","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"void"},"implementationOf":{"type":"reference","target":-1,"name":"ListensToDomainEvents.notifyOf"}}],"implementationOf":{"type":"reference","target":-1,"name":"ListensToDomainEvents.notifyOf"}}],"groups":[{"title":"Constructors","children":[22271]},{"title":"Methods","children":[22257,22260,22262,22264,22266,22285]}],"sources":[{"fileName":"packages/console-reporter/src/stage/crew/console-reporter/ConsoleReporter.ts","line":161,"character":13}],"implementedTypes":[{"type":"reference","target":2021,"name":"ListensToDomainEvents","package":"@serenity-js/core"}],"permalink":"/api/console-reporter/class/ConsoleReporter","previousId":30,"nextId":22314},{"id":22314,"name":"ConsoleReporterConfig","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Used to configure the ["},{"kind":"code","text":"`ConsoleReporter`"},{"kind":"text","text":"](/api/console-reporter/class/ConsoleReporter/)."}]},"children":[{"id":22315,"name":"theme","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Choose a colour theme optimised for light, dark, or monochromatic terminals.\\nOr, use \'auto\' to automatically pick the most suitable one."}]},"sources":[{"fileName":"packages/console-reporter/src/stage/crew/console-reporter/ConsoleReporterConfig.ts","line":11,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"light"},{"type":"literal","value":"dark"},{"type":"literal","value":"mono"},{"type":"literal","value":"auto"}]}}],"groups":[{"title":"Properties","children":[22315]}],"sources":[{"fileName":"packages/console-reporter/src/stage/crew/console-reporter/ConsoleReporterConfig.ts","line":6,"character":17}],"permalink":"/api/console-reporter/interface/ConsoleReporterConfig","previousId":22256}],"groups":[{"title":"Functions","children":[30]},{"title":"Stage","children":[22256,22314]}],"sources":[{"fileName":"packages/console-reporter/src/index.ts","line":1,"character":0}],"permalink":"/api/console-reporter"},"urlSlug":"console-reporter"}],"packageName":"@serenity-js/console-reporter","packageVersion":"3.26.0"},{"entryPoints":[{"index":false,"label":"Test runner adapter","reflection":{"id":2,"name":"@serenity-js/core/adapter","variant":"declaration","kind":2,"flags":{"isExternal":true},"children":[{"id":2221,"name":"OutputStream","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An output stream to be injected into [stage crew member builders](/api/core/interface/StageCrewMemberBuilder/)\\nconfigured via ["},{"kind":"code","text":"`SerenityConfig.crew`"},{"kind":"text","text":"](/api/core/class/SerenityConfig/#crew).\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMemberBuilder/)\\n- ["},{"kind":"code","text":"`Serenity.configure`"},{"kind":"text","text":"](/api/core/class/Serenity/#configure)\\n- ["},{"kind":"code","text":"`SerenityConfig.crew`"},{"kind":"text","text":"](/api/core/class/SerenityConfig/#crew)"}]},"children":[{"id":2222,"name":"write","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/adapter/OutputStream.ts","line":13,"character":4}],"signatures":[{"id":2223,"name":"write","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/adapter/OutputStream.ts","line":13,"character":4}],"parameters":[{"id":2224,"name":"content","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}]}],"groups":[{"title":"Methods","children":[2222]}],"sources":[{"fileName":"packages/core/src/adapter/OutputStream.ts","line":12,"character":17}],"permalink":"/api/core-adapter/interface/OutputStream","nextId":2225},{"id":2225,"name":"TestRunnerAdapter","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Describes an adapter needed to run a given type of tests programmatically"}]},"children":[{"id":2226,"name":"load","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/adapter/TestRunnerAdapter.ts","line":13,"character":4}],"signatures":[{"id":2227,"name":"load","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Loads test scenarios."}]},"sources":[{"fileName":"packages/core/src/adapter/TestRunnerAdapter.ts","line":13,"character":4}],"parameters":[{"id":2228,"name":"pathsToScenarios","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":2229,"name":"scenarioCount","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/adapter/TestRunnerAdapter.ts","line":21,"character":4}],"signatures":[{"id":2230,"name":"scenarioCount","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the number of loaded scenarios"}],"blockTags":[{"tag":"@throws","content":[{"kind":"text","text":"["},{"kind":"code","text":"`LogicError`"},{"kind":"text","text":"](/api/core/class/LogicError/)\\n If called before "},{"kind":"code","text":"`load`"}]}]},"sources":[{"fileName":"packages/core/src/adapter/TestRunnerAdapter.ts","line":21,"character":4}],"type":{"type":"intrinsic","name":"number"}}]},{"id":2231,"name":"run","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/adapter/TestRunnerAdapter.ts","line":29,"character":4}],"signatures":[{"id":2232,"name":"run","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Runs loaded test scenarios."}],"blockTags":[{"tag":"@throws","content":[{"kind":"text","text":"["},{"kind":"code","text":"`LogicError`"},{"kind":"text","text":"](/api/core/class/LogicError/)\\n If called before "},{"kind":"code","text":"`load`"}]}]},"sources":[{"fileName":"packages/core/src/adapter/TestRunnerAdapter.ts","line":29,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":2233,"name":"successThreshold","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/adapter/TestRunnerAdapter.ts","line":34,"character":4}],"signatures":[{"id":2234,"name":"successThreshold","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Scenario success threshold for this test runner."}]},"sources":[{"fileName":"packages/core/src/adapter/TestRunnerAdapter.ts","line":34,"character":4}],"type":{"type":"union","types":[{"type":"reference","name":"Outcome","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":2235,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":2236,"name":"Code","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/adapter/TestRunnerAdapter.ts","line":34,"character":36}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[2236]}],"sources":[{"fileName":"packages/core/src/adapter/TestRunnerAdapter.ts","line":34,"character":34}]}}]}}]}],"groups":[{"title":"Methods","children":[2226,2229,2231,2233]}],"sources":[{"fileName":"packages/core/src/adapter/TestRunnerAdapter.ts","line":8,"character":17}],"permalink":"/api/core-adapter/interface/TestRunnerAdapter","previousId":2221}],"groups":[{"title":"Integration","children":[2221,2225]}],"sources":[{"fileName":"packages/core/src/adapter/index.ts","line":1,"character":0}],"permalink":"/api/core-adapter"},"urlSlug":"core-adapter"},{"index":false,"label":"Domain Events","reflection":{"id":3,"name":"@serenity-js/core/events","variant":"declaration","kind":2,"flags":{"isExternal":true},"children":[{"id":2237,"name":"ActivityFinished","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"Emitted when an ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) is finished."}]},"children":[{"id":2238,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":13,"character":4}],"signatures":[{"id":2239,"name":"new ActivityFinished","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":13,"character":4}],"parameters":[{"id":2240,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2241,"name":"activityId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2242,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"ActivityDetails","package":"@serenity-js/core"}},{"id":2243,"name":"outcome","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Outcome","package":"@serenity-js/core"}},{"id":2244,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2237,"name":"ActivityFinished","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2245,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":14,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2246,"name":"activityId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":15,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2247,"name":"details","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":16,"character":24}],"type":{"type":"reference","name":"ActivityDetails","package":"@serenity-js/core"}},{"id":2248,"name":"outcome","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":17,"character":24}],"type":{"type":"reference","name":"Outcome","package":"@serenity-js/core"}},{"id":2249,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2569,"name":"DomainEvent.timestamp"}},{"id":2250,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2251,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2252,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2571,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2570,"name":"DomainEvent.equals"}},{"id":2253,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2254,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2574,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2573,"name":"DomainEvent.toString"}},{"id":2255,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2256,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2576,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2575,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2238]},{"title":"Properties","children":[2245,2246,2247,2248,2249]},{"title":"Methods","children":[2250,2253,2255]}],"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":12,"character":22}],"extendedTypes":[{"type":"reference","target":2565,"name":"DomainEvent","package":"@serenity-js/core"}],"extendedBy":[{"type":"reference","target":2609,"name":"InteractionFinished"},{"type":"reference","target":2845,"name":"TaskFinished"}],"permalink":"/api/core-events/class/ActivityFinished","nextId":2257},{"id":2257,"name":"ActivityRelatedArtifactArchived","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2258,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ActivityRelatedArtifactArchived.ts","line":18,"character":11}],"signatures":[{"id":2259,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ActivityRelatedArtifactArchived.ts","line":18,"character":11}],"parameters":[{"id":2260,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2257,"name":"ActivityRelatedArtifactArchived","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":2424,"name":"ArtifactArchived.fromJSON"}}],"overwrites":{"type":"reference","target":2423,"name":"ArtifactArchived.fromJSON"}},{"id":2261,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ActivityRelatedArtifactArchived.ts","line":30,"character":4}],"signatures":[{"id":2262,"name":"new ActivityRelatedArtifactArchived","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ActivityRelatedArtifactArchived.ts","line":30,"character":4}],"parameters":[{"id":2263,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2264,"name":"activityId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2265,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Name","package":"@serenity-js/core"}},{"id":2266,"name":"type","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"ArtifactType","package":"@serenity-js/core"}},{"id":2267,"name":"path","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Path","package":"@serenity-js/core"}},{"id":2268,"name":"artifactTimestamp","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"}},{"id":2269,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2257,"name":"ActivityRelatedArtifactArchived","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":2427,"name":"ArtifactArchived.constructor"}}],"overwrites":{"type":"reference","target":2426,"name":"ArtifactArchived.constructor"}},{"id":2270,"name":"activityId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityRelatedArtifactArchived.ts","line":32,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2271,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ActivityRelatedArtifactArchived.ts","line":43,"character":4}],"signatures":[{"id":2272,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[{"fileName":"packages/core/src/events/ActivityRelatedArtifactArchived.ts","line":43,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"},"overwrites":{"type":"reference","target":2440,"name":"ArtifactArchived.toJSON"}}],"overwrites":{"type":"reference","target":2439,"name":"ArtifactArchived.toJSON"}},{"id":2273,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ArtifactArchived.ts","line":26,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2434,"name":"ArtifactArchived.sceneId"}},{"id":2274,"name":"name","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ArtifactArchived.ts","line":27,"character":24}],"type":{"type":"reference","name":"Name","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2435,"name":"ArtifactArchived.name"}},{"id":2275,"name":"type","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ArtifactArchived.ts","line":28,"character":24}],"type":{"type":"reference","name":"ArtifactType","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2436,"name":"ArtifactArchived.type"}},{"id":2276,"name":"path","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ArtifactArchived.ts","line":29,"character":24}],"type":{"type":"reference","name":"Path","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2437,"name":"ArtifactArchived.path"}},{"id":2277,"name":"artifactTimestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ArtifactArchived.ts","line":30,"character":24}],"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2438,"name":"ArtifactArchived.artifactTimestamp"}},{"id":2278,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2441,"name":"ArtifactArchived.timestamp"}},{"id":2279,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2280,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2281,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2443,"name":"ArtifactArchived.equals"}}],"inheritedFrom":{"type":"reference","target":2442,"name":"ArtifactArchived.equals"}},{"id":2282,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2283,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2446,"name":"ArtifactArchived.toString"}}],"inheritedFrom":{"type":"reference","target":2445,"name":"ArtifactArchived.toString"}}],"groups":[{"title":"Constructors","children":[2261]},{"title":"Properties","children":[2270,2273,2274,2275,2276,2277,2278]},{"title":"Methods","children":[2258,2271,2279,2282]}],"sources":[{"fileName":"packages/core/src/events/ActivityRelatedArtifactArchived.ts","line":17,"character":13}],"extendedTypes":[{"type":"reference","target":2422,"name":"ArtifactArchived","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/ActivityRelatedArtifactArchived","previousId":2237,"nextId":2284},{"id":2284,"name":"ActivityRelatedArtifactGenerated","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2285,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ActivityRelatedArtifactGenerated.ts","line":13,"character":11}],"signatures":[{"id":2286,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ActivityRelatedArtifactGenerated.ts","line":13,"character":11}],"parameters":[{"id":2287,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2284,"name":"ActivityRelatedArtifactGenerated","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":2449,"name":"ArtifactGenerated.fromJSON"}}],"overwrites":{"type":"reference","target":2448,"name":"ArtifactGenerated.fromJSON"}},{"id":2288,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ActivityRelatedArtifactGenerated.ts","line":23,"character":4}],"signatures":[{"id":2289,"name":"new ActivityRelatedArtifactGenerated","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ActivityRelatedArtifactGenerated.ts","line":23,"character":4}],"parameters":[{"id":2290,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2291,"name":"activityId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2292,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Name","package":"@serenity-js/core"}},{"id":2293,"name":"artifact","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Artifact","package":"@serenity-js/core"}},{"id":2294,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2284,"name":"ActivityRelatedArtifactGenerated","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":2452,"name":"ArtifactGenerated.constructor"}}],"overwrites":{"type":"reference","target":2451,"name":"ArtifactGenerated.constructor"}},{"id":2295,"name":"activityId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityRelatedArtifactGenerated.ts","line":25,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2296,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ArtifactGenerated.ts","line":23,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2457,"name":"ArtifactGenerated.sceneId"}},{"id":2297,"name":"name","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ArtifactGenerated.ts","line":24,"character":24}],"type":{"type":"reference","name":"Name","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2458,"name":"ArtifactGenerated.name"}},{"id":2298,"name":"artifact","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ArtifactGenerated.ts","line":25,"character":24}],"type":{"type":"reference","name":"Artifact","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2459,"name":"ArtifactGenerated.artifact"}},{"id":2299,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2460,"name":"ArtifactGenerated.timestamp"}},{"id":2300,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2301,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2302,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2462,"name":"ArtifactGenerated.equals"}}],"inheritedFrom":{"type":"reference","target":2461,"name":"ArtifactGenerated.equals"}},{"id":2303,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2304,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2465,"name":"ArtifactGenerated.toString"}}],"inheritedFrom":{"type":"reference","target":2464,"name":"ArtifactGenerated.toString"}},{"id":2305,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2306,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2467,"name":"ArtifactGenerated.toJSON"}}],"inheritedFrom":{"type":"reference","target":2466,"name":"ArtifactGenerated.toJSON"}}],"groups":[{"title":"Constructors","children":[2288]},{"title":"Properties","children":[2295,2296,2297,2298,2299]},{"title":"Methods","children":[2285,2300,2303,2305]}],"sources":[{"fileName":"packages/core/src/events/ActivityRelatedArtifactGenerated.ts","line":12,"character":13}],"extendedTypes":[{"type":"reference","target":2447,"name":"ArtifactGenerated","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/ActivityRelatedArtifactGenerated","previousId":2257,"nextId":2307},{"id":2307,"name":"ActivityStarts","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"Emitted when an ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) starts."}]},"children":[{"id":2308,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ActivityStarts.ts","line":13,"character":4}],"signatures":[{"id":2309,"name":"new ActivityStarts","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ActivityStarts.ts","line":13,"character":4}],"parameters":[{"id":2310,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2311,"name":"activityId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2312,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"ActivityDetails","package":"@serenity-js/core"}},{"id":2313,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2307,"name":"ActivityStarts","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2314,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityStarts.ts","line":14,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2315,"name":"activityId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityStarts.ts","line":15,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2316,"name":"details","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityStarts.ts","line":16,"character":24}],"type":{"type":"reference","name":"ActivityDetails","package":"@serenity-js/core"}},{"id":2317,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2569,"name":"DomainEvent.timestamp"}},{"id":2318,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2319,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2320,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2571,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2570,"name":"DomainEvent.equals"}},{"id":2321,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2322,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2574,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2573,"name":"DomainEvent.toString"}},{"id":2323,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2324,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2576,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2575,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2308]},{"title":"Properties","children":[2314,2315,2316,2317]},{"title":"Methods","children":[2318,2321,2323]}],"sources":[{"fileName":"packages/core/src/events/ActivityStarts.ts","line":12,"character":22}],"extendedTypes":[{"type":"reference","target":2565,"name":"DomainEvent","package":"@serenity-js/core"}],"extendedBy":[{"type":"reference","target":2632,"name":"InteractionStarts"},{"type":"reference","target":2868,"name":"TaskStarts"}],"permalink":"/api/core-events/class/ActivityStarts","previousId":2284,"nextId":2422},{"id":2422,"name":"ArtifactArchived","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2423,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ArtifactArchived.ts","line":14,"character":11}],"signatures":[{"id":2424,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ArtifactArchived.ts","line":14,"character":11}],"parameters":[{"id":2425,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2422,"name":"ArtifactArchived","package":"@serenity-js/core"}}]},{"id":2426,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ArtifactArchived.ts","line":25,"character":4}],"signatures":[{"id":2427,"name":"new ArtifactArchived","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ArtifactArchived.ts","line":25,"character":4}],"parameters":[{"id":2428,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2429,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Name","package":"@serenity-js/core"}},{"id":2430,"name":"type","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"ArtifactType","package":"@serenity-js/core"}},{"id":2431,"name":"path","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Path","package":"@serenity-js/core"}},{"id":2432,"name":"artifactTimestamp","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"}},{"id":2433,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2422,"name":"ArtifactArchived","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2434,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ArtifactArchived.ts","line":26,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2435,"name":"name","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ArtifactArchived.ts","line":27,"character":24}],"type":{"type":"reference","name":"Name","package":"@serenity-js/core"}},{"id":2436,"name":"type","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ArtifactArchived.ts","line":28,"character":24}],"type":{"type":"reference","name":"ArtifactType","package":"@serenity-js/core"}},{"id":2437,"name":"path","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ArtifactArchived.ts","line":29,"character":24}],"type":{"type":"reference","name":"Path","package":"@serenity-js/core"}},{"id":2438,"name":"artifactTimestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ArtifactArchived.ts","line":30,"character":24}],"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"}},{"id":2439,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ArtifactArchived.ts","line":42,"character":4}],"signatures":[{"id":2440,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[{"fileName":"packages/core/src/events/ArtifactArchived.ts","line":42,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"},"overwrites":{"type":"reference","target":2576,"name":"DomainEvent.toJSON"}}],"overwrites":{"type":"reference","target":2575,"name":"DomainEvent.toJSON"}},{"id":2441,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2569,"name":"DomainEvent.timestamp"}},{"id":2442,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2443,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2444,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2571,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2570,"name":"DomainEvent.equals"}},{"id":2445,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2446,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2574,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2573,"name":"DomainEvent.toString"}}],"groups":[{"title":"Constructors","children":[2426]},{"title":"Properties","children":[2434,2435,2436,2437,2438,2441]},{"title":"Methods","children":[2423,2439,2442,2445]}],"sources":[{"fileName":"packages/core/src/events/ArtifactArchived.ts","line":13,"character":13}],"extendedTypes":[{"type":"reference","target":2565,"name":"DomainEvent","package":"@serenity-js/core"}],"extendedBy":[{"type":"reference","target":2257,"name":"ActivityRelatedArtifactArchived"}],"permalink":"/api/core-events/class/ArtifactArchived","previousId":2307,"nextId":2447},{"id":2447,"name":"ArtifactGenerated","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2448,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ArtifactGenerated.ts","line":13,"character":11}],"signatures":[{"id":2449,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ArtifactGenerated.ts","line":13,"character":11}],"parameters":[{"id":2450,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2447,"name":"ArtifactGenerated","package":"@serenity-js/core"}}]},{"id":2451,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ArtifactGenerated.ts","line":22,"character":4}],"signatures":[{"id":2452,"name":"new ArtifactGenerated","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ArtifactGenerated.ts","line":22,"character":4}],"parameters":[{"id":2453,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2454,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Name","package":"@serenity-js/core"}},{"id":2455,"name":"artifact","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Artifact","package":"@serenity-js/core"}},{"id":2456,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2447,"name":"ArtifactGenerated","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2457,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ArtifactGenerated.ts","line":23,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2458,"name":"name","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ArtifactGenerated.ts","line":24,"character":24}],"type":{"type":"reference","name":"Name","package":"@serenity-js/core"}},{"id":2459,"name":"artifact","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ArtifactGenerated.ts","line":25,"character":24}],"type":{"type":"reference","name":"Artifact","package":"@serenity-js/core"}},{"id":2460,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2569,"name":"DomainEvent.timestamp"}},{"id":2461,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2462,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2463,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2571,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2570,"name":"DomainEvent.equals"}},{"id":2464,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2465,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2574,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2573,"name":"DomainEvent.toString"}},{"id":2466,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2467,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2576,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2575,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2451]},{"title":"Properties","children":[2457,2458,2459,2460]},{"title":"Methods","children":[2448,2461,2464,2466]}],"sources":[{"fileName":"packages/core/src/events/ArtifactGenerated.ts","line":12,"character":13}],"extendedTypes":[{"type":"reference","target":2565,"name":"DomainEvent","package":"@serenity-js/core"}],"extendedBy":[{"type":"reference","target":2284,"name":"ActivityRelatedArtifactGenerated"}],"permalink":"/api/core-events/class/ArtifactGenerated","previousId":2422,"nextId":2468},{"id":2468,"name":"AsyncOperationAborted","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2469,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationAborted.ts","line":12,"character":11}],"signatures":[{"id":2470,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationAborted.ts","line":12,"character":11}],"parameters":[{"id":2471,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2468,"name":"AsyncOperationAborted","package":"@serenity-js/core"}}]},{"id":2472,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationAborted.ts","line":20,"character":4}],"signatures":[{"id":2473,"name":"new AsyncOperationAborted","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationAborted.ts","line":20,"character":4}],"parameters":[{"id":2474,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Description","package":"@serenity-js/core"}},{"id":2475,"name":"correlationId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2476,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2468,"name":"AsyncOperationAborted","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2477,"name":"description","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationAborted.ts","line":21,"character":24}],"type":{"type":"reference","name":"Description","package":"@serenity-js/core"}},{"id":2478,"name":"correlationId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationAborted.ts","line":22,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2479,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2569,"name":"DomainEvent.timestamp"}},{"id":2480,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2481,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2482,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2571,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2570,"name":"DomainEvent.equals"}},{"id":2483,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2484,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2574,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2573,"name":"DomainEvent.toString"}},{"id":2485,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2486,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2576,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2575,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2472]},{"title":"Properties","children":[2477,2478,2479]},{"title":"Methods","children":[2469,2480,2483,2485]}],"sources":[{"fileName":"packages/core/src/events/AsyncOperationAborted.ts","line":11,"character":13}],"extendedTypes":[{"type":"reference","target":2565,"name":"DomainEvent","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/AsyncOperationAborted","previousId":2447,"nextId":2487},{"id":2487,"name":"AsyncOperationAttempted","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2488,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationAttempted.ts","line":12,"character":11}],"signatures":[{"id":2489,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationAttempted.ts","line":12,"character":11}],"parameters":[{"id":2490,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2487,"name":"AsyncOperationAttempted","package":"@serenity-js/core"}}]},{"id":2491,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationAttempted.ts","line":21,"character":4}],"signatures":[{"id":2492,"name":"new AsyncOperationAttempted","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationAttempted.ts","line":21,"character":4}],"parameters":[{"id":2493,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Name","package":"@serenity-js/core"}},{"id":2494,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Description","package":"@serenity-js/core"}},{"id":2495,"name":"correlationId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2496,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2487,"name":"AsyncOperationAttempted","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2497,"name":"name","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationAttempted.ts","line":22,"character":24}],"type":{"type":"reference","name":"Name","package":"@serenity-js/core"}},{"id":2498,"name":"description","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationAttempted.ts","line":23,"character":24}],"type":{"type":"reference","name":"Description","package":"@serenity-js/core"}},{"id":2499,"name":"correlationId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationAttempted.ts","line":24,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2500,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2569,"name":"DomainEvent.timestamp"}},{"id":2501,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2502,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2503,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2571,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2570,"name":"DomainEvent.equals"}},{"id":2504,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2505,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2574,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2573,"name":"DomainEvent.toString"}},{"id":2506,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2507,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2576,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2575,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2491]},{"title":"Properties","children":[2497,2498,2499,2500]},{"title":"Methods","children":[2488,2501,2504,2506]}],"sources":[{"fileName":"packages/core/src/events/AsyncOperationAttempted.ts","line":11,"character":13}],"extendedTypes":[{"type":"reference","target":2565,"name":"DomainEvent","package":"@serenity-js/core"}],"extendedBy":[{"type":"reference","target":2344,"name":"ActorStageExitAttempted"}],"permalink":"/api/core-events/class/AsyncOperationAttempted","previousId":2468,"nextId":2508},{"id":2508,"name":"AsyncOperationCompleted","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2509,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationCompleted.ts","line":12,"character":11}],"signatures":[{"id":2510,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationCompleted.ts","line":12,"character":11}],"parameters":[{"id":2511,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2508,"name":"AsyncOperationCompleted","package":"@serenity-js/core"}}]},{"id":2512,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationCompleted.ts","line":19,"character":4}],"signatures":[{"id":2513,"name":"new AsyncOperationCompleted","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationCompleted.ts","line":19,"character":4}],"parameters":[{"id":2514,"name":"correlationId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2515,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2508,"name":"AsyncOperationCompleted","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2516,"name":"correlationId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationCompleted.ts","line":20,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2517,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2569,"name":"DomainEvent.timestamp"}},{"id":2518,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2519,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2520,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2571,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2570,"name":"DomainEvent.equals"}},{"id":2521,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2522,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2574,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2573,"name":"DomainEvent.toString"}},{"id":2523,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2524,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2576,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2575,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2512]},{"title":"Properties","children":[2516,2517]},{"title":"Methods","children":[2509,2518,2521,2523]}],"sources":[{"fileName":"packages/core/src/events/AsyncOperationCompleted.ts","line":11,"character":13}],"extendedTypes":[{"type":"reference","target":2565,"name":"DomainEvent","package":"@serenity-js/core"}],"extendedBy":[{"type":"reference","target":2365,"name":"ActorStageExitCompleted"}],"permalink":"/api/core-events/class/AsyncOperationCompleted","previousId":2487,"nextId":2525},{"id":2525,"name":"AsyncOperationFailed","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2526,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationFailed.ts","line":13,"character":11}],"signatures":[{"id":2527,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationFailed.ts","line":13,"character":11}],"parameters":[{"id":2528,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2525,"name":"AsyncOperationFailed","package":"@serenity-js/core"}}]},{"id":2529,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationFailed.ts","line":21,"character":4}],"signatures":[{"id":2530,"name":"new AsyncOperationFailed","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationFailed.ts","line":21,"character":4}],"parameters":[{"id":2531,"name":"error","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}},{"id":2532,"name":"correlationId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2533,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2525,"name":"AsyncOperationFailed","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2534,"name":"error","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationFailed.ts","line":22,"character":24}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}},{"id":2535,"name":"correlationId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationFailed.ts","line":23,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2536,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationFailed.ts","line":31,"character":4}],"signatures":[{"id":2537,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[{"fileName":"packages/core/src/events/AsyncOperationFailed.ts","line":31,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"},"overwrites":{"type":"reference","target":2576,"name":"DomainEvent.toJSON"}}],"overwrites":{"type":"reference","target":2575,"name":"DomainEvent.toJSON"}},{"id":2538,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2569,"name":"DomainEvent.timestamp"}},{"id":2539,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2540,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2541,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2571,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2570,"name":"DomainEvent.equals"}},{"id":2542,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2543,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2574,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2573,"name":"DomainEvent.toString"}}],"groups":[{"title":"Constructors","children":[2529]},{"title":"Properties","children":[2534,2535,2538]},{"title":"Methods","children":[2526,2536,2539,2542]}],"sources":[{"fileName":"packages/core/src/events/AsyncOperationFailed.ts","line":12,"character":13}],"extendedTypes":[{"type":"reference","target":2565,"name":"DomainEvent","package":"@serenity-js/core"}],"extendedBy":[{"type":"reference","target":2384,"name":"ActorStageExitFailed"}],"permalink":"/api/core-events/class/AsyncOperationFailed","previousId":2508,"nextId":2544},{"id":2544,"name":"BusinessRuleDetected","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Emitted by [@serenity-js/cucumber](/api/cucumber)\\nwhen a [business rule](https://cucumber.io/docs/gherkin/reference/#rule) is detected."}]},"children":[{"id":2545,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/BusinessRuleDetected.ts","line":15,"character":18}],"signatures":[{"id":2546,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/BusinessRuleDetected.ts","line":15,"character":18}],"parameters":[{"id":2547,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2544,"name":"BusinessRuleDetected","package":"@serenity-js/core"}}]},{"id":2548,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/BusinessRuleDetected.ts","line":24,"character":4}],"signatures":[{"id":2549,"name":"new BusinessRuleDetected","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/BusinessRuleDetected.ts","line":24,"character":4}],"parameters":[{"id":2550,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2551,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"ScenarioDetails","package":"@serenity-js/core"}},{"id":2552,"name":"rule","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"BusinessRule","package":"@serenity-js/core"}},{"id":2553,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2544,"name":"BusinessRuleDetected","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2554,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/BusinessRuleDetected.ts","line":25,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2555,"name":"details","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/BusinessRuleDetected.ts","line":26,"character":24}],"type":{"type":"reference","name":"ScenarioDetails","package":"@serenity-js/core"}},{"id":2556,"name":"rule","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/BusinessRuleDetected.ts","line":27,"character":24}],"type":{"type":"reference","name":"BusinessRule","package":"@serenity-js/core"}},{"id":2557,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2569,"name":"DomainEvent.timestamp"}},{"id":2558,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2559,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2560,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2571,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2570,"name":"DomainEvent.equals"}},{"id":2561,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2562,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2574,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2573,"name":"DomainEvent.toString"}},{"id":2563,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2564,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2576,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2575,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2548]},{"title":"Properties","children":[2554,2555,2556,2557]},{"title":"Methods","children":[2545,2558,2561,2563]}],"sources":[{"fileName":"packages/core/src/events/BusinessRuleDetected.ts","line":14,"character":13}],"extendedTypes":[{"type":"reference","target":2565,"name":"DomainEvent","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/BusinessRuleDetected","previousId":2525,"nextId":2565},{"id":2565,"name":"DomainEvent","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"Represents an internal domain event that occurs during test execution."}]},"children":[{"id":2569,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"..."},{"id":2570,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2571,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2572,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.equals"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.equals"}},{"id":2573,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2574,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.toString"}},{"id":2575,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2576,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.toJSON"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.toJSON"}}],"groups":[{"title":"Properties","children":[2569]},{"title":"Methods","children":[2570,2573,2575]}],"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":10,"character":22}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}],"extendedBy":[{"type":"reference","target":2237,"name":"ActivityFinished"},{"type":"reference","target":2307,"name":"ActivityStarts"},{"type":"reference","target":2325,"name":"ActorEntersStage"},{"type":"reference","target":2403,"name":"ActorStageExitStarts"},{"type":"reference","target":2422,"name":"ArtifactArchived"},{"type":"reference","target":2447,"name":"ArtifactGenerated"},{"type":"reference","target":2468,"name":"AsyncOperationAborted"},{"type":"reference","target":2487,"name":"AsyncOperationAttempted"},{"type":"reference","target":2508,"name":"AsyncOperationCompleted"},{"type":"reference","target":2525,"name":"AsyncOperationFailed"},{"type":"reference","target":2544,"name":"BusinessRuleDetected"},{"type":"reference","target":2590,"name":"FeatureNarrativeDetected"},{"type":"reference","target":2653,"name":"RetryableSceneDetected"},{"type":"reference","target":2670,"name":"SceneBackgroundDetected"},{"type":"reference","target":2691,"name":"SceneDescriptionDetected"},{"type":"reference","target":2710,"name":"SceneFinished"},{"type":"reference","target":2731,"name":"SceneFinishes"},{"type":"reference","target":2748,"name":"SceneParametersDetected"},{"type":"reference","target":2769,"name":"SceneSequenceDetected"},{"type":"reference","target":2788,"name":"SceneStarts"},{"type":"reference","target":2807,"name":"SceneTagged"},{"type":"reference","target":2826,"name":"SceneTemplateDetected"},{"type":"reference","target":2889,"name":"TestRunFinished"},{"type":"reference","target":2906,"name":"TestRunFinishes"},{"type":"reference","target":2921,"name":"TestRunnerDetected"},{"type":"reference","target":2940,"name":"TestRunStarts"},{"type":"reference","target":2955,"name":"TestSuiteFinished"},{"type":"reference","target":2974,"name":"TestSuiteStarts"}],"permalink":"/api/core-events/class/DomainEvent","previousId":2544,"nextId":2590},{"id":2577,"name":"EmitsDomainEvents","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Describes an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) or a supporting class capable of telling\\nthe current wall clock time.\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`Serenity`"},{"kind":"text","text":"](/api/core/class/Serenity/)\\n- ["},{"kind":"code","text":"`Stage`"},{"kind":"text","text":"](/api/core/class/Stage/)"}]},"children":[{"id":2578,"name":"currentSceneId","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/EmitsDomainEvents.ts","line":6,"character":4}],"signatures":[{"id":2579,"name":"currentSceneId","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/EmitsDomainEvents.ts","line":6,"character":4}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}]},{"id":2580,"name":"assignNewActivityId","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/EmitsDomainEvents.ts","line":7,"character":4}],"signatures":[{"id":2581,"name":"assignNewActivityId","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/EmitsDomainEvents.ts","line":7,"character":4}],"parameters":[{"id":2582,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"ActivityDetails","package":"@serenity-js/core"}}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}]},{"id":2583,"name":"announce","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/EmitsDomainEvents.ts","line":8,"character":4}],"signatures":[{"id":2584,"name":"announce","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/EmitsDomainEvents.ts","line":8,"character":4}],"parameters":[{"id":2585,"name":"event","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":2565,"name":"DomainEvent","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":2586,"name":"waitForNextCue","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/EmitsDomainEvents.ts","line":9,"character":4}],"signatures":[{"id":2587,"name":"waitForNextCue","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/EmitsDomainEvents.ts","line":9,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":2588,"name":"currentTime","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/TellsTime.ts","line":18,"character":4}],"signatures":[{"id":2589,"name":"currentTime","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns current wall clock time."}]},"sources":[{"fileName":"packages/core/src/screenplay/time/TellsTime.ts","line":18,"character":4}],"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":1895,"name":"TellsTime.currentTime"}}],"inheritedFrom":{"type":"reference","target":1894,"name":"TellsTime.currentTime"}}],"groups":[{"title":"Methods","children":[2578,2580,2583,2586,2588]}],"sources":[{"fileName":"packages/core/src/events/EmitsDomainEvents.ts","line":5,"character":17}],"extendedTypes":[{"type":"reference","target":1893,"name":"TellsTime","package":"@serenity-js/core"}],"implementedBy":[{"type":"reference","target":1898,"name":"Serenity"},{"type":"reference","target":2103,"name":"Stage"}],"permalink":"/api/core-events/interface/EmitsDomainEvents","previousId":2403},{"id":2590,"name":"FeatureNarrativeDetected","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2591,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/FeatureNarrativeDetected.ts","line":12,"character":18}],"signatures":[{"id":2592,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/FeatureNarrativeDetected.ts","line":12,"character":18}],"parameters":[{"id":2593,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2590,"name":"FeatureNarrativeDetected","package":"@serenity-js/core"}}]},{"id":2601,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2569,"name":"DomainEvent.timestamp"}},{"id":2594,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/FeatureNarrativeDetected.ts","line":20,"character":4}],"signatures":[{"id":2595,"name":"new FeatureNarrativeDetected","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/FeatureNarrativeDetected.ts","line":20,"character":4}],"parameters":[{"id":2596,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2597,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Description","package":"@serenity-js/core"}},{"id":2598,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2590,"name":"FeatureNarrativeDetected","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2599,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/FeatureNarrativeDetected.ts","line":21,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2600,"name":"description","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/FeatureNarrativeDetected.ts","line":22,"character":24}],"type":{"type":"reference","name":"Description","package":"@serenity-js/core"}},{"id":2602,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2603,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2604,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2571,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2570,"name":"DomainEvent.equals"}},{"id":2605,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2606,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2574,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2573,"name":"DomainEvent.toString"}},{"id":2607,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2608,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2576,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2575,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2594]},{"title":"Properties","children":[2601,2599,2600]},{"title":"Methods","children":[2591,2602,2605,2607]}],"sources":[{"fileName":"packages/core/src/events/FeatureNarrativeDetected.ts","line":11,"character":13}],"extendedTypes":[{"type":"reference","target":2565,"name":"DomainEvent","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/FeatureNarrativeDetected","previousId":2565,"nextId":2609},{"id":2609,"name":"InteractionFinished","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2610,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/InteractionFinished.ts","line":12,"character":11}],"signatures":[{"id":2611,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/InteractionFinished.ts","line":12,"character":11}],"parameters":[{"id":2612,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2609,"name":"InteractionFinished","package":"@serenity-js/core"}}]},{"id":2613,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":13,"character":4}],"signatures":[{"id":2614,"name":"new InteractionFinished","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":13,"character":4}],"parameters":[{"id":2615,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2616,"name":"activityId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2617,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"ActivityDetails","package":"@serenity-js/core"}},{"id":2618,"name":"outcome","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Outcome","package":"@serenity-js/core"}},{"id":2619,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2609,"name":"InteractionFinished","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2239,"name":"ActivityFinished.constructor"}}],"inheritedFrom":{"type":"reference","target":2238,"name":"ActivityFinished.constructor"}},{"id":2620,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":14,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2245,"name":"ActivityFinished.sceneId"}},{"id":2621,"name":"activityId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":15,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2246,"name":"ActivityFinished.activityId"}},{"id":2622,"name":"details","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":16,"character":24}],"type":{"type":"reference","name":"ActivityDetails","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2247,"name":"ActivityFinished.details"}},{"id":2623,"name":"outcome","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":17,"character":24}],"type":{"type":"reference","name":"Outcome","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2248,"name":"ActivityFinished.outcome"}},{"id":2624,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2249,"name":"ActivityFinished.timestamp"}},{"id":2625,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2626,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2627,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2251,"name":"ActivityFinished.equals"}}],"inheritedFrom":{"type":"reference","target":2250,"name":"ActivityFinished.equals"}},{"id":2628,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2629,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2254,"name":"ActivityFinished.toString"}}],"inheritedFrom":{"type":"reference","target":2253,"name":"ActivityFinished.toString"}},{"id":2630,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2631,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2256,"name":"ActivityFinished.toJSON"}}],"inheritedFrom":{"type":"reference","target":2255,"name":"ActivityFinished.toJSON"}}],"groups":[{"title":"Constructors","children":[2613]},{"title":"Properties","children":[2620,2621,2622,2623,2624]},{"title":"Methods","children":[2610,2625,2628,2630]}],"sources":[{"fileName":"packages/core/src/events/InteractionFinished.ts","line":11,"character":13}],"extendedTypes":[{"type":"reference","target":2237,"name":"ActivityFinished","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/InteractionFinished","previousId":2590,"nextId":2632},{"id":2632,"name":"InteractionStarts","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2633,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/InteractionStarts.ts","line":11,"character":11}],"signatures":[{"id":2634,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/InteractionStarts.ts","line":11,"character":11}],"parameters":[{"id":2635,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2632,"name":"InteractionStarts","package":"@serenity-js/core"}}]},{"id":2636,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ActivityStarts.ts","line":13,"character":4}],"signatures":[{"id":2637,"name":"new InteractionStarts","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ActivityStarts.ts","line":13,"character":4}],"parameters":[{"id":2638,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2639,"name":"activityId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2640,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"ActivityDetails","package":"@serenity-js/core"}},{"id":2641,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2632,"name":"InteractionStarts","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2309,"name":"ActivityStarts.constructor"}}],"inheritedFrom":{"type":"reference","target":2308,"name":"ActivityStarts.constructor"}},{"id":2642,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityStarts.ts","line":14,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2314,"name":"ActivityStarts.sceneId"}},{"id":2643,"name":"activityId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityStarts.ts","line":15,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2315,"name":"ActivityStarts.activityId"}},{"id":2644,"name":"details","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityStarts.ts","line":16,"character":24}],"type":{"type":"reference","name":"ActivityDetails","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2316,"name":"ActivityStarts.details"}},{"id":2645,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2317,"name":"ActivityStarts.timestamp"}},{"id":2646,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2647,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2648,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2319,"name":"ActivityStarts.equals"}}],"inheritedFrom":{"type":"reference","target":2318,"name":"ActivityStarts.equals"}},{"id":2649,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2650,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2322,"name":"ActivityStarts.toString"}}],"inheritedFrom":{"type":"reference","target":2321,"name":"ActivityStarts.toString"}},{"id":2651,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2652,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2324,"name":"ActivityStarts.toJSON"}}],"inheritedFrom":{"type":"reference","target":2323,"name":"ActivityStarts.toJSON"}}],"groups":[{"title":"Constructors","children":[2636]},{"title":"Properties","children":[2642,2643,2644,2645]},{"title":"Methods","children":[2633,2646,2649,2651]}],"sources":[{"fileName":"packages/core/src/events/InteractionStarts.ts","line":10,"character":13}],"extendedTypes":[{"type":"reference","target":2307,"name":"ActivityStarts","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/InteractionStarts","previousId":2609,"nextId":2653},{"id":2653,"name":"RetryableSceneDetected","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Indicates that the test runner will retry running the test scenario upon failure."}]},"children":[{"id":2654,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/RetryableSceneDetected.ts","line":20,"character":11}],"signatures":[{"id":2655,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Deserialises the event from a JSONObject"}]},"sources":[{"fileName":"packages/core/src/events/RetryableSceneDetected.ts","line":20,"character":11}],"parameters":[{"id":2656,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2653,"name":"RetryableSceneDetected","package":"@serenity-js/core"}}]},{"id":2662,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2569,"name":"DomainEvent.timestamp"}},{"id":2657,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/RetryableSceneDetected.ts","line":31,"character":4}],"signatures":[{"id":2658,"name":"new RetryableSceneDetected","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/RetryableSceneDetected.ts","line":31,"character":4}],"parameters":[{"id":2659,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2660,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2653,"name":"RetryableSceneDetected","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2661,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/RetryableSceneDetected.ts","line":32,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2663,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2664,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2665,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2571,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2570,"name":"DomainEvent.equals"}},{"id":2666,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2667,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2574,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2573,"name":"DomainEvent.toString"}},{"id":2668,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2669,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2576,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2575,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2657]},{"title":"Properties","children":[2662,2661]},{"title":"Methods","children":[2654,2663,2666,2668]}],"sources":[{"fileName":"packages/core/src/events/RetryableSceneDetected.ts","line":13,"character":13}],"extendedTypes":[{"type":"reference","target":2565,"name":"DomainEvent","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/RetryableSceneDetected","previousId":2632,"nextId":2670},{"id":2670,"name":"SceneBackgroundDetected","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2671,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneBackgroundDetected.ts","line":12,"character":18}],"signatures":[{"id":2672,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneBackgroundDetected.ts","line":12,"character":18}],"parameters":[{"id":2673,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2670,"name":"SceneBackgroundDetected","package":"@serenity-js/core"}}]},{"id":2683,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2569,"name":"DomainEvent.timestamp"}},{"id":2674,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneBackgroundDetected.ts","line":20,"character":4}],"signatures":[{"id":2675,"name":"new SceneBackgroundDetected","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneBackgroundDetected.ts","line":20,"character":4}],"parameters":[{"id":2676,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2677,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Name","package":"@serenity-js/core"}},{"id":2678,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Description","package":"@serenity-js/core"}},{"id":2679,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2670,"name":"SceneBackgroundDetected","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2680,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneBackgroundDetected.ts","line":21,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2681,"name":"name","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneBackgroundDetected.ts","line":22,"character":24}],"type":{"type":"reference","name":"Name","package":"@serenity-js/core"}},{"id":2682,"name":"description","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneBackgroundDetected.ts","line":23,"character":24}],"type":{"type":"reference","name":"Description","package":"@serenity-js/core"}},{"id":2684,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2685,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2686,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2571,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2570,"name":"DomainEvent.equals"}},{"id":2687,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2688,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2574,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2573,"name":"DomainEvent.toString"}},{"id":2689,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2690,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2576,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2575,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2674]},{"title":"Properties","children":[2683,2680,2681,2682]},{"title":"Methods","children":[2671,2684,2687,2689]}],"sources":[{"fileName":"packages/core/src/events/SceneBackgroundDetected.ts","line":11,"character":13}],"extendedTypes":[{"type":"reference","target":2565,"name":"DomainEvent","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/SceneBackgroundDetected","previousId":2653,"nextId":2691},{"id":2691,"name":"SceneDescriptionDetected","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2692,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneDescriptionDetected.ts","line":12,"character":18}],"signatures":[{"id":2693,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneDescriptionDetected.ts","line":12,"character":18}],"parameters":[{"id":2694,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2691,"name":"SceneDescriptionDetected","package":"@serenity-js/core"}}]},{"id":2702,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2569,"name":"DomainEvent.timestamp"}},{"id":2695,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneDescriptionDetected.ts","line":20,"character":4}],"signatures":[{"id":2696,"name":"new SceneDescriptionDetected","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneDescriptionDetected.ts","line":20,"character":4}],"parameters":[{"id":2697,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2698,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Description","package":"@serenity-js/core"}},{"id":2699,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2691,"name":"SceneDescriptionDetected","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2700,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneDescriptionDetected.ts","line":21,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2701,"name":"description","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneDescriptionDetected.ts","line":22,"character":24}],"type":{"type":"reference","name":"Description","package":"@serenity-js/core"}},{"id":2703,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2704,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2705,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2571,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2570,"name":"DomainEvent.equals"}},{"id":2706,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2707,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2574,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2573,"name":"DomainEvent.toString"}},{"id":2708,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2709,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2576,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2575,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2695]},{"title":"Properties","children":[2702,2700,2701]},{"title":"Methods","children":[2692,2703,2706,2708]}],"sources":[{"fileName":"packages/core/src/events/SceneDescriptionDetected.ts","line":11,"character":13}],"extendedTypes":[{"type":"reference","target":2565,"name":"DomainEvent","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/SceneDescriptionDetected","previousId":2670,"nextId":2710},{"id":2710,"name":"SceneFinished","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2711,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneFinished.ts","line":13,"character":11}],"signatures":[{"id":2712,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneFinished.ts","line":13,"character":11}],"parameters":[{"id":2713,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2710,"name":"SceneFinished","package":"@serenity-js/core"}}]},{"id":2723,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2569,"name":"DomainEvent.timestamp"}},{"id":2714,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneFinished.ts","line":22,"character":4}],"signatures":[{"id":2715,"name":"new SceneFinished","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneFinished.ts","line":22,"character":4}],"parameters":[{"id":2716,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2717,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"ScenarioDetails","package":"@serenity-js/core"}},{"id":2718,"name":"outcome","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Outcome","package":"@serenity-js/core"}},{"id":2719,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2710,"name":"SceneFinished","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2720,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneFinished.ts","line":23,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2721,"name":"details","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneFinished.ts","line":24,"character":24}],"type":{"type":"reference","name":"ScenarioDetails","package":"@serenity-js/core"}},{"id":2722,"name":"outcome","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneFinished.ts","line":25,"character":24}],"type":{"type":"reference","name":"Outcome","package":"@serenity-js/core"}},{"id":2724,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2725,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2726,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2571,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2570,"name":"DomainEvent.equals"}},{"id":2727,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2728,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2574,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2573,"name":"DomainEvent.toString"}},{"id":2729,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2730,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2576,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2575,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2714]},{"title":"Properties","children":[2723,2720,2721,2722]},{"title":"Methods","children":[2711,2724,2727,2729]}],"sources":[{"fileName":"packages/core/src/events/SceneFinished.ts","line":12,"character":13}],"extendedTypes":[{"type":"reference","target":2565,"name":"DomainEvent","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/SceneFinished","previousId":2691,"nextId":2731},{"id":2731,"name":"SceneFinishes","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Emitted by a Serenity/JS test runner adapter, right before a test and all its associated test hooks finish.\\nTriggers any clean-up operations that might be required, such as discarding of\\nthe [discardable](/api/core/interface/Discardable/) abilities."}]},"children":[{"id":2732,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneFinishes.ts","line":16,"character":11}],"signatures":[{"id":2733,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneFinishes.ts","line":16,"character":11}],"parameters":[{"id":2734,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2731,"name":"SceneFinishes","package":"@serenity-js/core"}}]},{"id":2740,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2569,"name":"DomainEvent.timestamp"}},{"id":2735,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneFinishes.ts","line":23,"character":4}],"signatures":[{"id":2736,"name":"new SceneFinishes","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneFinishes.ts","line":23,"character":4}],"parameters":[{"id":2737,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2738,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2731,"name":"SceneFinishes","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2739,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneFinishes.ts","line":24,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2741,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2742,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2743,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2571,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2570,"name":"DomainEvent.equals"}},{"id":2744,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2745,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2574,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2573,"name":"DomainEvent.toString"}},{"id":2746,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2747,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2576,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2575,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2735]},{"title":"Properties","children":[2740,2739]},{"title":"Methods","children":[2732,2741,2744,2746]}],"sources":[{"fileName":"packages/core/src/events/SceneFinishes.ts","line":15,"character":13}],"extendedTypes":[{"type":"reference","target":2565,"name":"DomainEvent","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/SceneFinishes","previousId":2710,"nextId":2748},{"id":2748,"name":"SceneParametersDetected","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2749,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneParametersDetected.ts","line":12,"character":18}],"signatures":[{"id":2750,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneParametersDetected.ts","line":12,"character":18}],"parameters":[{"id":2751,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2748,"name":"SceneParametersDetected","package":"@serenity-js/core"}}]},{"id":2761,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2569,"name":"DomainEvent.timestamp"}},{"id":2752,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneParametersDetected.ts","line":21,"character":4}],"signatures":[{"id":2753,"name":"new SceneParametersDetected","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneParametersDetected.ts","line":21,"character":4}],"parameters":[{"id":2754,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2755,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"ScenarioDetails","package":"@serenity-js/core"}},{"id":2756,"name":"parameters","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"ScenarioParameters","package":"@serenity-js/core"}},{"id":2757,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2748,"name":"SceneParametersDetected","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2758,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneParametersDetected.ts","line":22,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2759,"name":"details","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneParametersDetected.ts","line":23,"character":24}],"type":{"type":"reference","name":"ScenarioDetails","package":"@serenity-js/core"}},{"id":2760,"name":"parameters","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneParametersDetected.ts","line":24,"character":24}],"type":{"type":"reference","name":"ScenarioParameters","package":"@serenity-js/core"}},{"id":2762,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2763,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2764,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2571,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2570,"name":"DomainEvent.equals"}},{"id":2765,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2766,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2574,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2573,"name":"DomainEvent.toString"}},{"id":2767,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2768,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2576,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2575,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2752]},{"title":"Properties","children":[2761,2758,2759,2760]},{"title":"Methods","children":[2749,2762,2765,2767]}],"sources":[{"fileName":"packages/core/src/events/SceneParametersDetected.ts","line":11,"character":13}],"extendedTypes":[{"type":"reference","target":2565,"name":"DomainEvent","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/SceneParametersDetected","previousId":2731,"nextId":2769},{"id":2769,"name":"SceneSequenceDetected","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2770,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneSequenceDetected.ts","line":12,"character":11}],"signatures":[{"id":2771,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneSequenceDetected.ts","line":12,"character":11}],"parameters":[{"id":2772,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2769,"name":"SceneSequenceDetected","package":"@serenity-js/core"}}]},{"id":2780,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2569,"name":"DomainEvent.timestamp"}},{"id":2773,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneSequenceDetected.ts","line":20,"character":4}],"signatures":[{"id":2774,"name":"new SceneSequenceDetected","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneSequenceDetected.ts","line":20,"character":4}],"parameters":[{"id":2775,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2776,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"ScenarioDetails","package":"@serenity-js/core"}},{"id":2777,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2769,"name":"SceneSequenceDetected","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2778,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneSequenceDetected.ts","line":21,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2779,"name":"details","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneSequenceDetected.ts","line":22,"character":24}],"type":{"type":"reference","name":"ScenarioDetails","package":"@serenity-js/core"}},{"id":2781,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2782,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2783,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2571,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2570,"name":"DomainEvent.equals"}},{"id":2784,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2785,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2574,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2573,"name":"DomainEvent.toString"}},{"id":2786,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2787,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2576,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2575,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2773]},{"title":"Properties","children":[2780,2778,2779]},{"title":"Methods","children":[2770,2781,2784,2786]}],"sources":[{"fileName":"packages/core/src/events/SceneSequenceDetected.ts","line":11,"character":13}],"extendedTypes":[{"type":"reference","target":2565,"name":"DomainEvent","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/SceneSequenceDetected","previousId":2748,"nextId":2788},{"id":2788,"name":"SceneStarts","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2789,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneStarts.ts","line":12,"character":11}],"signatures":[{"id":2790,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneStarts.ts","line":12,"character":11}],"parameters":[{"id":2791,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2788,"name":"SceneStarts","package":"@serenity-js/core"}}]},{"id":2799,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2569,"name":"DomainEvent.timestamp"}},{"id":2792,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneStarts.ts","line":20,"character":4}],"signatures":[{"id":2793,"name":"new SceneStarts","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneStarts.ts","line":20,"character":4}],"parameters":[{"id":2794,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2795,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"ScenarioDetails","package":"@serenity-js/core"}},{"id":2796,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2788,"name":"SceneStarts","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2797,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneStarts.ts","line":21,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2798,"name":"details","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneStarts.ts","line":22,"character":24}],"type":{"type":"reference","name":"ScenarioDetails","package":"@serenity-js/core"}},{"id":2800,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2801,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2802,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2571,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2570,"name":"DomainEvent.equals"}},{"id":2803,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2804,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2574,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2573,"name":"DomainEvent.toString"}},{"id":2805,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2806,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2576,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2575,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2792]},{"title":"Properties","children":[2799,2797,2798]},{"title":"Methods","children":[2789,2800,2803,2805]}],"sources":[{"fileName":"packages/core/src/events/SceneStarts.ts","line":11,"character":13}],"extendedTypes":[{"type":"reference","target":2565,"name":"DomainEvent","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/SceneStarts","previousId":2769,"nextId":2807},{"id":2807,"name":"SceneTagged","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2808,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneTagged.ts","line":12,"character":11}],"signatures":[{"id":2809,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneTagged.ts","line":12,"character":11}],"parameters":[{"id":2810,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2807,"name":"SceneTagged","package":"@serenity-js/core"}}]},{"id":2818,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2569,"name":"DomainEvent.timestamp"}},{"id":2811,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneTagged.ts","line":19,"character":4}],"signatures":[{"id":2812,"name":"new SceneTagged","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneTagged.ts","line":19,"character":4}],"parameters":[{"id":2813,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2814,"name":"tag","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Tag","package":"@serenity-js/core"}},{"id":2815,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2807,"name":"SceneTagged","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2816,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneTagged.ts","line":20,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2817,"name":"tag","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneTagged.ts","line":21,"character":24}],"type":{"type":"reference","name":"Tag","package":"@serenity-js/core"}},{"id":2819,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2820,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2821,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2571,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2570,"name":"DomainEvent.equals"}},{"id":2822,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2823,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2574,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2573,"name":"DomainEvent.toString"}},{"id":2824,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2825,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2576,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2575,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2811]},{"title":"Properties","children":[2818,2816,2817]},{"title":"Methods","children":[2808,2819,2822,2824]}],"sources":[{"fileName":"packages/core/src/events/SceneTagged.ts","line":11,"character":13}],"extendedTypes":[{"type":"reference","target":2565,"name":"DomainEvent","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/SceneTagged","previousId":2788,"nextId":2826},{"id":2826,"name":"SceneTemplateDetected","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2827,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneTemplateDetected.ts","line":12,"character":18}],"signatures":[{"id":2828,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneTemplateDetected.ts","line":12,"character":18}],"parameters":[{"id":2829,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2826,"name":"SceneTemplateDetected","package":"@serenity-js/core"}}]},{"id":2837,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2569,"name":"DomainEvent.timestamp"}},{"id":2830,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneTemplateDetected.ts","line":20,"character":4}],"signatures":[{"id":2831,"name":"new SceneTemplateDetected","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneTemplateDetected.ts","line":20,"character":4}],"parameters":[{"id":2832,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2833,"name":"template","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Description","package":"@serenity-js/core"}},{"id":2834,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2826,"name":"SceneTemplateDetected","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2835,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneTemplateDetected.ts","line":21,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2836,"name":"template","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneTemplateDetected.ts","line":22,"character":24}],"type":{"type":"reference","name":"Description","package":"@serenity-js/core"}},{"id":2838,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2839,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2840,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2571,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2570,"name":"DomainEvent.equals"}},{"id":2841,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2842,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2574,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2573,"name":"DomainEvent.toString"}},{"id":2843,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2844,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2576,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2575,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2830]},{"title":"Properties","children":[2837,2835,2836]},{"title":"Methods","children":[2827,2838,2841,2843]}],"sources":[{"fileName":"packages/core/src/events/SceneTemplateDetected.ts","line":11,"character":13}],"extendedTypes":[{"type":"reference","target":2565,"name":"DomainEvent","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/SceneTemplateDetected","previousId":2807,"nextId":2845},{"id":2845,"name":"TaskFinished","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2846,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TaskFinished.ts","line":12,"character":11}],"signatures":[{"id":2847,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TaskFinished.ts","line":12,"character":11}],"parameters":[{"id":2848,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2845,"name":"TaskFinished","package":"@serenity-js/core"}}]},{"id":2849,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":13,"character":4}],"signatures":[{"id":2850,"name":"new TaskFinished","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":13,"character":4}],"parameters":[{"id":2851,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2852,"name":"activityId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2853,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"ActivityDetails","package":"@serenity-js/core"}},{"id":2854,"name":"outcome","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Outcome","package":"@serenity-js/core"}},{"id":2855,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2845,"name":"TaskFinished","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2239,"name":"ActivityFinished.constructor"}}],"inheritedFrom":{"type":"reference","target":2238,"name":"ActivityFinished.constructor"}},{"id":2856,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":14,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2245,"name":"ActivityFinished.sceneId"}},{"id":2857,"name":"activityId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":15,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2246,"name":"ActivityFinished.activityId"}},{"id":2858,"name":"details","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":16,"character":24}],"type":{"type":"reference","name":"ActivityDetails","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2247,"name":"ActivityFinished.details"}},{"id":2859,"name":"outcome","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":17,"character":24}],"type":{"type":"reference","name":"Outcome","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2248,"name":"ActivityFinished.outcome"}},{"id":2860,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2249,"name":"ActivityFinished.timestamp"}},{"id":2861,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2862,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2863,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2251,"name":"ActivityFinished.equals"}}],"inheritedFrom":{"type":"reference","target":2250,"name":"ActivityFinished.equals"}},{"id":2864,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2865,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2254,"name":"ActivityFinished.toString"}}],"inheritedFrom":{"type":"reference","target":2253,"name":"ActivityFinished.toString"}},{"id":2866,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2867,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2256,"name":"ActivityFinished.toJSON"}}],"inheritedFrom":{"type":"reference","target":2255,"name":"ActivityFinished.toJSON"}}],"groups":[{"title":"Constructors","children":[2849]},{"title":"Properties","children":[2856,2857,2858,2859,2860]},{"title":"Methods","children":[2846,2861,2864,2866]}],"sources":[{"fileName":"packages/core/src/events/TaskFinished.ts","line":11,"character":13}],"extendedTypes":[{"type":"reference","target":2237,"name":"ActivityFinished","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/TaskFinished","previousId":2826,"nextId":2868},{"id":2868,"name":"TaskStarts","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2869,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TaskStarts.ts","line":11,"character":11}],"signatures":[{"id":2870,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TaskStarts.ts","line":11,"character":11}],"parameters":[{"id":2871,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2868,"name":"TaskStarts","package":"@serenity-js/core"}}]},{"id":2872,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ActivityStarts.ts","line":13,"character":4}],"signatures":[{"id":2873,"name":"new TaskStarts","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ActivityStarts.ts","line":13,"character":4}],"parameters":[{"id":2874,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2875,"name":"activityId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2876,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"ActivityDetails","package":"@serenity-js/core"}},{"id":2877,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2868,"name":"TaskStarts","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2309,"name":"ActivityStarts.constructor"}}],"inheritedFrom":{"type":"reference","target":2308,"name":"ActivityStarts.constructor"}},{"id":2878,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityStarts.ts","line":14,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2314,"name":"ActivityStarts.sceneId"}},{"id":2879,"name":"activityId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityStarts.ts","line":15,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2315,"name":"ActivityStarts.activityId"}},{"id":2880,"name":"details","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityStarts.ts","line":16,"character":24}],"type":{"type":"reference","name":"ActivityDetails","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2316,"name":"ActivityStarts.details"}},{"id":2881,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2317,"name":"ActivityStarts.timestamp"}},{"id":2882,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2883,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2884,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2319,"name":"ActivityStarts.equals"}}],"inheritedFrom":{"type":"reference","target":2318,"name":"ActivityStarts.equals"}},{"id":2885,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2886,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2322,"name":"ActivityStarts.toString"}}],"inheritedFrom":{"type":"reference","target":2321,"name":"ActivityStarts.toString"}},{"id":2887,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2888,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2324,"name":"ActivityStarts.toJSON"}}],"inheritedFrom":{"type":"reference","target":2323,"name":"ActivityStarts.toJSON"}}],"groups":[{"title":"Constructors","children":[2872]},{"title":"Properties","children":[2878,2879,2880,2881]},{"title":"Methods","children":[2869,2882,2885,2887]}],"sources":[{"fileName":"packages/core/src/events/TaskStarts.ts","line":10,"character":13}],"extendedTypes":[{"type":"reference","target":2307,"name":"ActivityStarts","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/TaskStarts","previousId":2845,"nextId":2889},{"id":2889,"name":"TestRunFinished","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Emitted when all the test scenarios have finished running."}]},"children":[{"id":2890,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestRunFinished.ts","line":14,"character":11}],"signatures":[{"id":2891,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestRunFinished.ts","line":14,"character":11}],"parameters":[{"id":2892,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2889,"name":"TestRunFinished","package":"@serenity-js/core"}}]},{"id":2898,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2569,"name":"DomainEvent.timestamp"}},{"id":2893,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestRunFinished.ts","line":21,"character":4}],"signatures":[{"id":2894,"name":"new TestRunFinished","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestRunFinished.ts","line":21,"character":4}],"parameters":[{"id":2895,"name":"outcome","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Outcome","package":"@serenity-js/core"}},{"id":2896,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2889,"name":"TestRunFinished","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2897,"name":"outcome","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/TestRunFinished.ts","line":22,"character":24}],"type":{"type":"reference","name":"Outcome","package":"@serenity-js/core"}},{"id":2899,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2900,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2901,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2571,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2570,"name":"DomainEvent.equals"}},{"id":2902,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2903,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2574,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2573,"name":"DomainEvent.toString"}},{"id":2904,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2905,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2576,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2575,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2893]},{"title":"Properties","children":[2898,2897]},{"title":"Methods","children":[2890,2899,2902,2904]}],"sources":[{"fileName":"packages/core/src/events/TestRunFinished.ts","line":13,"character":13}],"extendedTypes":[{"type":"reference","target":2565,"name":"DomainEvent","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/TestRunFinished","previousId":2868,"nextId":2906},{"id":2906,"name":"TestRunFinishes","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Emitted when the last test in the test suite has finished running\\nand it\'s time for any last-minute reporting activities to take place."}]},"children":[{"id":2907,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestRunFinishes.ts","line":11,"character":11}],"signatures":[{"id":2908,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestRunFinishes.ts","line":11,"character":11}],"parameters":[{"id":2909,"name":"v","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":2906,"name":"TestRunFinishes","package":"@serenity-js/core"}}]},{"id":2913,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2569,"name":"DomainEvent.timestamp"}},{"id":2910,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestRunFinishes.ts","line":17,"character":4}],"signatures":[{"id":2911,"name":"new TestRunFinishes","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestRunFinishes.ts","line":17,"character":4}],"parameters":[{"id":2912,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2906,"name":"TestRunFinishes","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2914,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2915,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2916,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2571,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2570,"name":"DomainEvent.equals"}},{"id":2917,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2918,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2574,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2573,"name":"DomainEvent.toString"}},{"id":2919,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2920,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2576,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2575,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2910]},{"title":"Properties","children":[2913]},{"title":"Methods","children":[2907,2914,2917,2919]}],"sources":[{"fileName":"packages/core/src/events/TestRunFinishes.ts","line":10,"character":13}],"extendedTypes":[{"type":"reference","target":2565,"name":"DomainEvent","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/TestRunFinishes","previousId":2889,"nextId":2940},{"id":2940,"name":"TestRunStarts","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Emitted when the very first test is about to start"}]},"children":[{"id":2941,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestRunStarts.ts","line":10,"character":11}],"signatures":[{"id":2942,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestRunStarts.ts","line":10,"character":11}],"parameters":[{"id":2943,"name":"v","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":2940,"name":"TestRunStarts","package":"@serenity-js/core"}}]},{"id":2947,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2569,"name":"DomainEvent.timestamp"}},{"id":2944,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestRunStarts.ts","line":16,"character":4}],"signatures":[{"id":2945,"name":"new TestRunStarts","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestRunStarts.ts","line":16,"character":4}],"parameters":[{"id":2946,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2940,"name":"TestRunStarts","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2948,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2949,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2950,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2571,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2570,"name":"DomainEvent.equals"}},{"id":2951,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2952,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2574,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2573,"name":"DomainEvent.toString"}},{"id":2953,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2954,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2576,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2575,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2944]},{"title":"Properties","children":[2947]},{"title":"Methods","children":[2941,2948,2951,2953]}],"sources":[{"fileName":"packages/core/src/events/TestRunStarts.ts","line":9,"character":13}],"extendedTypes":[{"type":"reference","target":2565,"name":"DomainEvent","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/TestRunStarts","previousId":2906,"nextId":2921},{"id":2921,"name":"TestRunnerDetected","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2922,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestRunnerDetected.ts","line":12,"character":18}],"signatures":[{"id":2923,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestRunnerDetected.ts","line":12,"character":18}],"parameters":[{"id":2924,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2921,"name":"TestRunnerDetected","package":"@serenity-js/core"}}]},{"id":2932,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2569,"name":"DomainEvent.timestamp"}},{"id":2925,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestRunnerDetected.ts","line":20,"character":4}],"signatures":[{"id":2926,"name":"new TestRunnerDetected","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestRunnerDetected.ts","line":20,"character":4}],"parameters":[{"id":2927,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2928,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Name","package":"@serenity-js/core"}},{"id":2929,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2921,"name":"TestRunnerDetected","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2930,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/TestRunnerDetected.ts","line":21,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2931,"name":"name","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/TestRunnerDetected.ts","line":22,"character":24}],"type":{"type":"reference","name":"Name","package":"@serenity-js/core"}},{"id":2933,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2934,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2935,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2571,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2570,"name":"DomainEvent.equals"}},{"id":2936,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2937,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2574,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2573,"name":"DomainEvent.toString"}},{"id":2938,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2939,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2576,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2575,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2925]},{"title":"Properties","children":[2932,2930,2931]},{"title":"Methods","children":[2922,2933,2936,2938]}],"sources":[{"fileName":"packages/core/src/events/TestRunnerDetected.ts","line":11,"character":13}],"extendedTypes":[{"type":"reference","target":2565,"name":"DomainEvent","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/TestRunnerDetected","previousId":2940,"nextId":2955},{"id":2955,"name":"TestSuiteFinished","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2956,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestSuiteFinished.ts","line":13,"character":11}],"signatures":[{"id":2957,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestSuiteFinished.ts","line":13,"character":11}],"parameters":[{"id":2958,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2955,"name":"TestSuiteFinished","package":"@serenity-js/core"}}]},{"id":2966,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2569,"name":"DomainEvent.timestamp"}},{"id":2959,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestSuiteFinished.ts","line":21,"character":4}],"signatures":[{"id":2960,"name":"new TestSuiteFinished","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestSuiteFinished.ts","line":21,"character":4}],"parameters":[{"id":2961,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"TestSuiteDetails","package":"@serenity-js/core"}},{"id":2962,"name":"outcome","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Outcome","package":"@serenity-js/core"}},{"id":2963,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2955,"name":"TestSuiteFinished","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2964,"name":"details","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/TestSuiteFinished.ts","line":22,"character":24}],"type":{"type":"reference","name":"TestSuiteDetails","package":"@serenity-js/core"}},{"id":2965,"name":"outcome","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/TestSuiteFinished.ts","line":23,"character":24}],"type":{"type":"reference","name":"Outcome","package":"@serenity-js/core"}},{"id":2967,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2968,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2969,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2571,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2570,"name":"DomainEvent.equals"}},{"id":2970,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2971,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2574,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2573,"name":"DomainEvent.toString"}},{"id":2972,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2973,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2576,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2575,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2959]},{"title":"Properties","children":[2966,2964,2965]},{"title":"Methods","children":[2956,2967,2970,2972]}],"sources":[{"fileName":"packages/core/src/events/TestSuiteFinished.ts","line":12,"character":13}],"extendedTypes":[{"type":"reference","target":2565,"name":"DomainEvent","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/TestSuiteFinished","previousId":2921,"nextId":2974},{"id":2974,"name":"TestSuiteStarts","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2975,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestSuiteStarts.ts","line":12,"character":11}],"signatures":[{"id":2976,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestSuiteStarts.ts","line":12,"character":11}],"parameters":[{"id":2977,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2974,"name":"TestSuiteStarts","package":"@serenity-js/core"}}]},{"id":2983,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2569,"name":"DomainEvent.timestamp"}},{"id":2978,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestSuiteStarts.ts","line":19,"character":4}],"signatures":[{"id":2979,"name":"new TestSuiteStarts","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestSuiteStarts.ts","line":19,"character":4}],"parameters":[{"id":2980,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"TestSuiteDetails","package":"@serenity-js/core"}},{"id":2981,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2974,"name":"TestSuiteStarts","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2982,"name":"details","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/TestSuiteStarts.ts","line":20,"character":24}],"type":{"type":"reference","name":"TestSuiteDetails","package":"@serenity-js/core"}},{"id":2984,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2985,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2986,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2571,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2570,"name":"DomainEvent.equals"}},{"id":2987,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2988,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2574,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2573,"name":"DomainEvent.toString"}},{"id":2989,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2990,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2576,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2575,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2978]},{"title":"Properties","children":[2983,2982]},{"title":"Methods","children":[2975,2984,2987,2989]}],"sources":[{"fileName":"packages/core/src/events/TestSuiteStarts.ts","line":11,"character":13}],"extendedTypes":[{"type":"reference","target":2565,"name":"DomainEvent","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/TestSuiteStarts","previousId":2955,"nextId":2325},{"id":2325,"name":"ActorEntersStage","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Emitted when an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) is activated\\nas the result of invoking ["},{"kind":"code","text":"`actorCalled`"},{"kind":"text","text":"](/api/core/function/actorCalled/)."}]},"children":[{"id":2326,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/actor/ActorEntersStage.ts","line":15,"character":18}],"signatures":[{"id":2327,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/actor/ActorEntersStage.ts","line":15,"character":18}],"parameters":[{"id":2328,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2325,"name":"ActorEntersStage","package":"@serenity-js/core"}}]},{"id":2336,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2569,"name":"DomainEvent.timestamp"}},{"id":2329,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/actor/ActorEntersStage.ts","line":23,"character":4}],"signatures":[{"id":2330,"name":"new ActorEntersStage","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/actor/ActorEntersStage.ts","line":23,"character":4}],"parameters":[{"id":2331,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2332,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1584,"name":"SerialisedActor","package":"@serenity-js/core"}},{"id":2333,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2325,"name":"ActorEntersStage","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2334,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/actor/ActorEntersStage.ts","line":24,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2335,"name":"actor","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/actor/ActorEntersStage.ts","line":25,"character":24}],"type":{"type":"reference","target":1584,"name":"SerialisedActor","package":"@serenity-js/core"}},{"id":2337,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2338,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2339,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2571,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2570,"name":"DomainEvent.equals"}},{"id":2340,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2341,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2574,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2573,"name":"DomainEvent.toString"}},{"id":2342,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2343,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2576,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2575,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2329]},{"title":"Properties","children":[2336,2334,2335]},{"title":"Methods","children":[2326,2337,2340,2342]}],"sources":[{"fileName":"packages/core/src/events/actor/ActorEntersStage.ts","line":14,"character":13}],"extendedTypes":[{"type":"reference","target":2565,"name":"DomainEvent","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/ActorEntersStage","previousId":2974,"nextId":2344},{"id":2344,"name":"ActorStageExitAttempted","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Emitted when an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) is dismissed\\neither upon the ["},{"kind":"code","text":"`SceneFinishes`"},{"kind":"text","text":"](/api/core-events/class/SceneFinishes/) event\\nfor actors initialised within the scope of a test scenario,\\nor upon the ["},{"kind":"code","text":"`TestRunFinishes`"},{"kind":"text","text":"](/api/core-events/class/TestRunFinishes/) event\\nfor actors initialised within the scope of a test suite."}]},"children":[{"id":2345,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/actor/ActorStageExitAttempted.ts","line":18,"character":11}],"signatures":[{"id":2346,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/actor/ActorStageExitAttempted.ts","line":18,"character":11}],"parameters":[{"id":2347,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2344,"name":"ActorStageExitAttempted","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":2489,"name":"AsyncOperationAttempted.fromJSON"}}],"overwrites":{"type":"reference","target":2488,"name":"AsyncOperationAttempted.fromJSON"}},{"id":2354,"name":"name","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationAttempted.ts","line":22,"character":24}],"type":{"type":"reference","name":"Name","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2497,"name":"AsyncOperationAttempted.name"}},{"id":2355,"name":"description","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationAttempted.ts","line":23,"character":24}],"type":{"type":"reference","name":"Description","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2498,"name":"AsyncOperationAttempted.description"}},{"id":2356,"name":"correlationId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationAttempted.ts","line":24,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2499,"name":"AsyncOperationAttempted.correlationId"}},{"id":2357,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2500,"name":"AsyncOperationAttempted.timestamp"}},{"id":2348,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/actor/ActorStageExitAttempted.ts","line":26,"character":4}],"signatures":[{"id":2349,"name":"new ActorStageExitAttempted","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/actor/ActorStageExitAttempted.ts","line":26,"character":4}],"parameters":[{"id":2350,"name":"correlationId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2351,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Name","package":"@serenity-js/core"}},{"id":2352,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2344,"name":"ActorStageExitAttempted","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":2492,"name":"AsyncOperationAttempted.constructor"}}],"overwrites":{"type":"reference","target":2491,"name":"AsyncOperationAttempted.constructor"}},{"id":2353,"name":"actor","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/actor/ActorStageExitAttempted.ts","line":28,"character":24}],"type":{"type":"reference","name":"Name","package":"@serenity-js/core"}},{"id":2358,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2359,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2360,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2502,"name":"AsyncOperationAttempted.equals"}}],"inheritedFrom":{"type":"reference","target":2501,"name":"AsyncOperationAttempted.equals"}},{"id":2361,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2362,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2505,"name":"AsyncOperationAttempted.toString"}}],"inheritedFrom":{"type":"reference","target":2504,"name":"AsyncOperationAttempted.toString"}},{"id":2363,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2364,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2507,"name":"AsyncOperationAttempted.toJSON"}}],"inheritedFrom":{"type":"reference","target":2506,"name":"AsyncOperationAttempted.toJSON"}}],"groups":[{"title":"Constructors","children":[2348]},{"title":"Properties","children":[2354,2355,2356,2357,2353]},{"title":"Methods","children":[2345,2358,2361,2363]}],"sources":[{"fileName":"packages/core/src/events/actor/ActorStageExitAttempted.ts","line":17,"character":13}],"extendedTypes":[{"type":"reference","target":2487,"name":"AsyncOperationAttempted","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/ActorStageExitAttempted","previousId":2325,"nextId":2365},{"id":2365,"name":"ActorStageExitCompleted","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Emitted when an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) and its abilities\\nare correctly [released](/api/core/interface/Discardable/) either\\nupon the ["},{"kind":"code","text":"`SceneFinishes`"},{"kind":"text","text":"](/api/core-events/class/SceneFinishes/) event\\nfor actors initialised within the scope of a test scenario,\\nor upon the ["},{"kind":"code","text":"`TestRunFinishes`"},{"kind":"text","text":"](/api/core-events/class/TestRunFinishes/) event\\nfor actors initialised within the scope of a test suite."}]},"children":[{"id":2366,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/actor/ActorStageExitCompleted.ts","line":18,"character":11}],"signatures":[{"id":2367,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/actor/ActorStageExitCompleted.ts","line":18,"character":11}],"parameters":[{"id":2368,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2365,"name":"ActorStageExitCompleted","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":2510,"name":"AsyncOperationCompleted.fromJSON"}}],"overwrites":{"type":"reference","target":2509,"name":"AsyncOperationCompleted.fromJSON"}},{"id":2375,"name":"correlationId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationCompleted.ts","line":20,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2516,"name":"AsyncOperationCompleted.correlationId"}},{"id":2376,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2517,"name":"AsyncOperationCompleted.timestamp"}},{"id":2369,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/actor/ActorStageExitCompleted.ts","line":26,"character":4}],"signatures":[{"id":2370,"name":"new ActorStageExitCompleted","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/actor/ActorStageExitCompleted.ts","line":26,"character":4}],"parameters":[{"id":2371,"name":"correlationId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2372,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Name","package":"@serenity-js/core"}},{"id":2373,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2365,"name":"ActorStageExitCompleted","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":2513,"name":"AsyncOperationCompleted.constructor"}}],"overwrites":{"type":"reference","target":2512,"name":"AsyncOperationCompleted.constructor"}},{"id":2374,"name":"actor","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/actor/ActorStageExitCompleted.ts","line":28,"character":24}],"type":{"type":"reference","name":"Name","package":"@serenity-js/core"}},{"id":2377,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2378,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2379,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2519,"name":"AsyncOperationCompleted.equals"}}],"inheritedFrom":{"type":"reference","target":2518,"name":"AsyncOperationCompleted.equals"}},{"id":2380,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2381,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2522,"name":"AsyncOperationCompleted.toString"}}],"inheritedFrom":{"type":"reference","target":2521,"name":"AsyncOperationCompleted.toString"}},{"id":2382,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2383,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2524,"name":"AsyncOperationCompleted.toJSON"}}],"inheritedFrom":{"type":"reference","target":2523,"name":"AsyncOperationCompleted.toJSON"}}],"groups":[{"title":"Constructors","children":[2369]},{"title":"Properties","children":[2375,2376,2374]},{"title":"Methods","children":[2366,2377,2380,2382]}],"sources":[{"fileName":"packages/core/src/events/actor/ActorStageExitCompleted.ts","line":17,"character":13}],"extendedTypes":[{"type":"reference","target":2508,"name":"AsyncOperationCompleted","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/ActorStageExitCompleted","previousId":2344,"nextId":2384},{"id":2384,"name":"ActorStageExitFailed","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Emitted when [releasing](/api/core/interface/Discardable/) an\\n["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) or its abilities\\nresulted in an error either\\nupon the ["},{"kind":"code","text":"`SceneFinishes`"},{"kind":"text","text":"](/api/core-events/class/SceneFinishes/) event\\nfor actors initialised within the scope of a test scenario,\\nor upon the ["},{"kind":"code","text":"`TestRunFinishes`"},{"kind":"text","text":"](/api/core-events/class/TestRunFinishes/) event\\nfor actors initialised within the scope of a test suite."}]},"children":[{"id":2385,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/actor/ActorStageExitFailed.ts","line":20,"character":11}],"signatures":[{"id":2386,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/actor/ActorStageExitFailed.ts","line":20,"character":11}],"parameters":[{"id":2387,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2384,"name":"ActorStageExitFailed","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":2527,"name":"AsyncOperationFailed.fromJSON"}}],"overwrites":{"type":"reference","target":2526,"name":"AsyncOperationFailed.fromJSON"}},{"id":2388,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationFailed.ts","line":21,"character":4}],"signatures":[{"id":2389,"name":"new ActorStageExitFailed","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationFailed.ts","line":21,"character":4}],"parameters":[{"id":2390,"name":"error","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}},{"id":2391,"name":"correlationId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2392,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2384,"name":"ActorStageExitFailed","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2530,"name":"AsyncOperationFailed.constructor"}}],"inheritedFrom":{"type":"reference","target":2529,"name":"AsyncOperationFailed.constructor"}},{"id":2393,"name":"error","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationFailed.ts","line":22,"character":24}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"},"inheritedFrom":{"type":"reference","target":2534,"name":"AsyncOperationFailed.error"}},{"id":2394,"name":"correlationId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationFailed.ts","line":23,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2535,"name":"AsyncOperationFailed.correlationId"}},{"id":2395,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationFailed.ts","line":31,"character":4}],"signatures":[{"id":2396,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[{"fileName":"packages/core/src/events/AsyncOperationFailed.ts","line":31,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2537,"name":"AsyncOperationFailed.toJSON"}}],"inheritedFrom":{"type":"reference","target":2536,"name":"AsyncOperationFailed.toJSON"}},{"id":2397,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2538,"name":"AsyncOperationFailed.timestamp"}},{"id":2398,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2399,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2400,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2540,"name":"AsyncOperationFailed.equals"}}],"inheritedFrom":{"type":"reference","target":2539,"name":"AsyncOperationFailed.equals"}},{"id":2401,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2402,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2543,"name":"AsyncOperationFailed.toString"}}],"inheritedFrom":{"type":"reference","target":2542,"name":"AsyncOperationFailed.toString"}}],"groups":[{"title":"Constructors","children":[2388]},{"title":"Properties","children":[2393,2394,2397]},{"title":"Methods","children":[2385,2395,2398,2401]}],"sources":[{"fileName":"packages/core/src/events/actor/ActorStageExitFailed.ts","line":19,"character":13}],"extendedTypes":[{"type":"reference","target":2525,"name":"AsyncOperationFailed","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/ActorStageExitFailed","previousId":2365,"nextId":2403},{"id":2403,"name":"ActorStageExitStarts","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Emitted upon the ["},{"kind":"code","text":"`SceneFinishes`"},{"kind":"text","text":"](/api/core-events/class/SceneFinishes/) and\\n["},{"kind":"code","text":"`TestRunFinishes`"},{"kind":"text","text":"](/api/core-events/class/TestRunFinishes/) events\\nto notify the [stage crew members](/api/core/interface/StageCrewMember/)\\nabout the final state of the [actors](/api/core/class/Actor/) and their abilities\\nbefore they\'re [released](/api/core/interface/Discardable/)."}]},"children":[{"id":2404,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/actor/ActorStageExitStarts.ts","line":18,"character":11}],"signatures":[{"id":2405,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/actor/ActorStageExitStarts.ts","line":18,"character":11}],"parameters":[{"id":2406,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2403,"name":"ActorStageExitStarts","package":"@serenity-js/core"}}]},{"id":2414,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2569,"name":"DomainEvent.timestamp"}},{"id":2407,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/actor/ActorStageExitStarts.ts","line":26,"character":4}],"signatures":[{"id":2408,"name":"new ActorStageExitStarts","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/actor/ActorStageExitStarts.ts","line":26,"character":4}],"parameters":[{"id":2409,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2410,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1584,"name":"SerialisedActor","package":"@serenity-js/core"}},{"id":2411,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2403,"name":"ActorStageExitStarts","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2412,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/actor/ActorStageExitStarts.ts","line":27,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2413,"name":"actor","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/actor/ActorStageExitStarts.ts","line":28,"character":24}],"type":{"type":"reference","target":1584,"name":"SerialisedActor","package":"@serenity-js/core"}},{"id":2415,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2416,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2417,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2571,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2570,"name":"DomainEvent.equals"}},{"id":2418,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2419,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2574,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2573,"name":"DomainEvent.toString"}},{"id":2420,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2421,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2576,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2575,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2407]},{"title":"Properties","children":[2414,2412,2413]},{"title":"Methods","children":[2404,2415,2418,2420]}],"sources":[{"fileName":"packages/core/src/events/actor/ActorStageExitStarts.ts","line":17,"character":13}],"extendedTypes":[{"type":"reference","target":2565,"name":"DomainEvent","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/ActorStageExitStarts","previousId":2384,"nextId":2577}],"groups":[{"title":"Events","children":[2237,2257,2284,2307,2422,2447,2468,2487,2508,2525,2544,2565,2590,2609,2632,2653,2670,2691,2710,2731,2748,2769,2788,2807,2826,2845,2868,2889,2906,2940,2921,2955,2974,2325,2344,2365,2384,2403]},{"title":"Time","children":[2577]}],"sources":[{"fileName":"packages/core/src/events/index.ts","line":1,"character":0}],"permalink":"/api/core-events"},"urlSlug":"core-events"},{"index":true,"label":"index","reflection":{"id":1,"name":"@serenity-js/core","variant":"declaration","kind":2,"flags":{"isExternal":true},"children":[{"id":1898,"name":"Serenity","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":1902,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":37,"character":4}],"signatures":[{"id":1903,"name":"new Serenity","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":37,"character":4}],"parameters":[{"id":1904,"name":"clock","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1712,"name":"Clock","package":"@serenity-js/core"},"defaultValue":"..."},{"id":1905,"name":"cwd","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"},"defaultValue":"..."}],"type":{"type":"reference","target":1898,"name":"Serenity","package":"@serenity-js/core"}}]},{"id":1912,"name":"configure","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":67,"character":4}],"signatures":[{"id":1913,"name":"configure","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures Serenity/JS. Every call to this function\\nreplaces the previous configuration provided,\\nso this function should be called exactly once\\nin your test suite."}]},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":67,"character":4}],"parameters":[{"id":1914,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":67,"name":"SerenityConfig","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":1915,"name":"engage","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":190,"character":4}],"signatures":[{"id":1916,"name":"engage","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Re-configures Serenity/JS with a new [cast](/api/core/class/Cast/) of [actors](/api/core/class/Actor/)\\nyou want to use in any subsequent calls to ["},{"kind":"code","text":"`actorCalled`"},{"kind":"text","text":"](/api/core/function/actorCalled/).\\n\\nFor your convenience, use ["},{"kind":"code","text":"`engage`"},{"kind":"text","text":"](/api/core/function/engage/) function instead,\\nwhich provides an alternative to calling ["},{"kind":"code","text":"`Actor.whoCan`"},{"kind":"text","text":"](/api/core/class/Actor/#whoCan) directly in your tests\\nand is typically invoked in a \\"before all\\" or \\"before each\\" hook of your test runner of choice.\\n\\nIf your implementation of the [cast](/api/core/class/Cast/) interface is stateless,\\nyou can invoke this function just once before your entire test suite is executed, see\\n- ["},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":"](https://jasmine.github.io/api/3.6/global.html#beforeAll) in Jasmine,\\n- ["},{"kind":"code","text":"`before`"},{"kind":"text","text":"](https://mochajs.org/#hooks) in Mocha,\\n- ["},{"kind":"code","text":"`BeforeAll`"},{"kind":"text","text":"](https://github.com/cucumber/cucumber-js/blob/master/docs/support_files/hooks.md#beforeall--afterall) in Cucumber.js\\n\\nHowever, if your [cast](/api/core/class/Cast/) holds state that you want to reset before each scenario,\\nit\'s better to invoke "},{"kind":"code","text":"`engage`"},{"kind":"text","text":" before each test using:\\n- ["},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":"](https://jasmine.github.io/api/3.6/global.html#beforeEach) in Jasmine\\n- ["},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":"](https://mochajs.org/#hooks) in Mocha,\\n- ["},{"kind":"code","text":"`Before`"},{"kind":"text","text":"](https://github.com/cucumber/cucumber-js/blob/master/docs/support_files/hooks.md#hooks) in Cucumber.js\\n\\n## Engaging a cast of actors\\n\\n"},{"kind":"code","text":"```ts\\nimport { Actor, Cast } from \'@serenity-js/core\';\\n\\nclass Actors implements Cast {\\n  prepare(actor: Actor) {\\n    return actor.whoCan(\\n      // ... abilities you\'d like the Actor to have\\n    );\\n  }\\n}\\n\\nengage(new Actors());\\n```"},{"kind":"text","text":"\\n\\n### Using with Mocha test runner\\n\\n"},{"kind":"code","text":"```ts\\nimport { beforeEach } from \'mocha\'\\n\\nbeforeEach(() => engage(new Actors()))\\n```"},{"kind":"text","text":"\\n\\n### Using with Jasmine test runner\\n\\n"},{"kind":"code","text":"```ts\\nimport \'jasmine\'\\n\\nbeforeEach(() => engage(new Actors()))\\n```"},{"kind":"text","text":"\\n\\n### Using with Cucumber.js test runner\\n\\n"},{"kind":"code","text":"```ts\\nimport { Before } from \'@cucumber/cucumber\'\\n\\nBefore(() => engage(new Actors()))\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`Cast`"},{"kind":"text","text":"](/api/core/class/Cast/)\\n- ["},{"kind":"code","text":"`engage`"},{"kind":"text","text":"](/api/core/function/engage/)"}]},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":190,"character":4}],"parameters":[{"id":1917,"name":"actors","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1947,"name":"Cast","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":1918,"name":"theActorCalled","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":254,"character":4}],"signatures":[{"id":1919,"name":"theActorCalled","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates or retrieves an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\ncalled "},{"kind":"code","text":"`name`"},{"kind":"text","text":" if one has already been instantiated.\\n\\nFor your convenience, use ["},{"kind":"code","text":"`actorCalled`"},{"kind":"text","text":"](/api/core/function/actorCalled/) function instead.\\n\\n## Usage with Mocha\\n\\n"},{"kind":"code","text":"```typescript\\n  import { describe, it } from \'mocha\';\\n  import { actorCalled } from \'@serenity-js/core\';\\n\\n  describe(\'Feature\', () => {\\n\\n     it(\'should have some behaviour\', () =>\\n         actorCalled(\'James\').attemptsTo(\\n             // ... activities\\n         ))\\n  })\\n```"},{"kind":"text","text":"\\n\\n## Usage with Jasmine\\n\\n"},{"kind":"code","text":"```typescript\\n  import \'jasmine\';\\n  import { actorCalled } from \'@serenity-js/core\';\\n\\n  describe(\'Feature\', () => {\\n\\n     it(\'should have some behaviour\', () =>\\n         actorCalled(\'James\').attemptsTo(\\n             // ... activities\\n         ))\\n  })\\n```"},{"kind":"text","text":"\\n\\n## Usage with Cucumber\\n\\n"},{"kind":"code","text":"```typescript\\nimport { actorCalled } from \'@serenity-js/core\';\\nimport { Given } from \'@cucumber/cucumber\';\\n\\nGiven(/(.*?) is a registered user/, (name: string) =>\\n  actorCalled(name).attemptsTo(\\n    // ... activities\\n  ))\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`engage`"},{"kind":"text","text":"](/api/core/function/engage/)\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`Cast`"},{"kind":"text","text":"](/api/core/class/Cast/)\\n- ["},{"kind":"code","text":"`actorCalled`"},{"kind":"text","text":"](/api/core/function/actorCalled/)"}]},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":254,"character":4}],"parameters":[{"id":1920,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The name of the actor to instantiate or retrieve"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":637,"name":"Actor","package":"@serenity-js/core"}}]},{"id":1921,"name":"theActorInTheSpotlight","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":291,"character":4}],"signatures":[{"id":1922,"name":"theActorInTheSpotlight","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Retrieves an actor who was last instantiated or retrieved\\nusing ["},{"kind":"code","text":"`Serenity.theActorCalled`"},{"kind":"text","text":"](/api/core/class/Serenity/#theActorCalled).\\n\\nThis function is particularly useful when automating Cucumber scenarios.\\n\\nFor your convenience, use ["},{"kind":"code","text":"`actorInTheSpotlight`"},{"kind":"text","text":"](/api/core/function/actorInTheSpotlight/) function instead.\\n\\n## Usage with Cucumber\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\';\\nimport { Given, When } from \'@cucumber/cucumber\';\\n\\nGiven(/(.*?) is a registered user/, (name: string) =>\\n  actorCalled(name).attemptsTo(\\n    // ... activities\\n  ))\\n\\nWhen(/(?:he|she|they) browse their recent orders/, () =>\\n  actorInTheSpotlight().attemptsTo(\\n    // ... activities\\n  ))\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`engage`"},{"kind":"text","text":"](/api/core/function/engage/)\\n- ["},{"kind":"code","text":"`actorCalled`"},{"kind":"text","text":"](/api/core/function/actorCalled/)\\n- ["},{"kind":"code","text":"`actorInTheSpotlight`"},{"kind":"text","text":"](/api/core/function/actorInTheSpotlight/)\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`Cast`"},{"kind":"text","text":"](/api/core/class/Cast/)"}]},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":291,"character":4}],"type":{"type":"reference","target":637,"name":"Actor","package":"@serenity-js/core"}}]},{"id":1923,"name":"announce","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":295,"character":4}],"signatures":[{"id":1924,"name":"announce","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":295,"character":4}],"parameters":[{"id":1925,"name":"events","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":2565,"name":"DomainEvent","package":"@serenity-js/core"}}}],"type":{"type":"intrinsic","name":"void"},"implementationOf":{"type":"reference","target":2584,"name":"EmitsDomainEvents.announce"}}],"implementationOf":{"type":"reference","target":2583,"name":"EmitsDomainEvents.announce"}},{"id":1926,"name":"currentTime","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":299,"character":4}],"signatures":[{"id":1927,"name":"currentTime","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns current wall clock time."}]},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":299,"character":4}],"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"},"implementationOf":{"type":"reference","target":2589,"name":"EmitsDomainEvents.currentTime"}}],"implementationOf":{"type":"reference","target":2588,"name":"EmitsDomainEvents.currentTime"}},{"id":1928,"name":"assignNewSceneId","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":303,"character":4}],"signatures":[{"id":1929,"name":"assignNewSceneId","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":303,"character":4}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}]},{"id":1930,"name":"currentSceneId","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":307,"character":4}],"signatures":[{"id":1931,"name":"currentSceneId","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":307,"character":4}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"},"implementationOf":{"type":"reference","target":2579,"name":"EmitsDomainEvents.currentSceneId"}}],"implementationOf":{"type":"reference","target":2578,"name":"EmitsDomainEvents.currentSceneId"}},{"id":1932,"name":"assignNewActivityId","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":311,"character":4}],"signatures":[{"id":1933,"name":"assignNewActivityId","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":311,"character":4}],"parameters":[{"id":1934,"name":"activityDetails","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"ActivityDetails","package":"@serenity-js/core"}}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"},"implementationOf":{"type":"reference","target":2581,"name":"EmitsDomainEvents.assignNewActivityId"}}],"implementationOf":{"type":"reference","target":2580,"name":"EmitsDomainEvents.assignNewActivityId"}},{"id":1935,"name":"createError","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":315,"character":4}],"signatures":[{"id":1936,"name":"createError","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":315,"character":4}],"typeParameter":[{"id":1937,"name":"RE","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":349,"name":"RuntimeError","package":"@serenity-js/core"}}],"parameters":[{"id":1938,"name":"errorType","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":1939,"name":"__type","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":315,"character":52}],"signatures":[{"id":1940,"name":"new errorType","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":315,"character":52}],"parameters":[{"id":1941,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"reference","target":1937,"name":"RE","package":"@serenity-js/core","refersToTypeParameter":true}}]}}},{"id":1942,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":148,"name":"ErrorOptions","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1937,"name":"RE","package":"@serenity-js/core","refersToTypeParameter":true}}]},{"id":1943,"name":"waitForNextCue","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":322,"character":4}],"signatures":[{"id":1944,"name":"waitForNextCue","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@package","content":[]}]},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":322,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"implementationOf":{"type":"reference","target":2587,"name":"EmitsDomainEvents.waitForNextCue"}}],"implementationOf":{"type":"reference","target":2586,"name":"EmitsDomainEvents.waitForNextCue"}},{"id":1945,"name":"cwd","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":326,"character":4}],"signatures":[{"id":1946,"name":"cwd","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":326,"character":4}],"type":{"type":"reference","name":"Path","package":"@serenity-js/core"}}]}],"groups":[{"title":"Constructors","children":[1902]},{"title":"Methods","children":[1912,1915,1918,1921,1923,1926,1928,1930,1932,1935,1943,1945]}],"sources":[{"fileName":"packages/core/src/Serenity.ts","line":21,"character":13}],"implementedTypes":[{"type":"reference","target":2577,"name":"EmitsDomainEvents","package":"@serenity-js/core"}],"permalink":"/api/core/class/Serenity","previousId":490,"nextId":66},{"id":66,"name":"ClassDescription","variant":"declaration","kind":2097152,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"code","text":"`ClassDescription`"},{"kind":"text","text":" describes the Node module ID and optionally:\\n- a named export that you want to import\\n- a parameter that should be passed to the static "},{"kind":"code","text":"`fromJSON`"},{"kind":"text","text":" method if the imported type provides it.\\n\\n"},{"kind":"code","text":"`ClassDescription`"},{"kind":"text","text":" is used to describe the [stage crew members](/api/core/interface/StageCrewMember/) passed to ["},{"kind":"code","text":"`SerenityConfig`"},{"kind":"text","text":"](/api/core/class/SerenityConfig/).\\n\\nThe most basic class description is the name of a Node module that must provide a "},{"kind":"code","text":"`default`"},{"kind":"text","text":" export.\\nFor example, below definition would be interpreted as a request to import the "},{"kind":"code","text":"`default`"},{"kind":"text","text":" export from the "},{"kind":"code","text":"`@serenity-js/serenity-bdd`"},{"kind":"text","text":" module and instantiate it using its no-arg constructor:\\n"},{"kind":"code","text":"```typescript\\nimport { configure } from \'@serenity-js/core\'\\n\\nconfigure({\\n  crew: [\\n    `@serenity-js/serenity-bdd`\\n  ]\\n})\\n```"},{"kind":"text","text":"\\n\\nClass description can also include a named export to be imported. For example, below definition would be interpreted as a request\\nto import the "},{"kind":"code","text":"`SerenityBDDReporter`"},{"kind":"text","text":" type from "},{"kind":"code","text":"`@serenity-js/serenity-bdd`"},{"kind":"text","text":" and instantiate it using its no-arg constructor:\\n\\n"},{"kind":"code","text":"```typescript\\nimport { configure } from \'@serenity-js/core\'\\n\\nconfigure({\\n  crew: [\\n    `@serenity-js/serenity-bdd:SerenityBDDReporter`\\n  ]\\n})\\n```"},{"kind":"text","text":"\\n\\nHowever, not all types have no-arg constructors. In those cases, a type offering a "},{"kind":"code","text":"`static fromJSON(configParam)`"},{"kind":"text","text":" method can be described using a tuple\\nwhere the first item describes the Node module and optionally the class name, and the second item describes the "},{"kind":"code","text":"`configParam`"},{"kind":"text","text":".\\n\\n"},{"kind":"code","text":"```typescript\\nimport { configure } from \'@serenity-js/core\'\\n\\nconfigure({\\n  crew: [\\n    [ `@serenity-js/core:ArtifactArchiver`, { outputDirectory: \'./target/site/serenity\' } ]\\n  ]\\n})\\n```"},{"kind":"text","text":"\\n\\nNote that the class description could also describe a local Node module. This can be useful when you\'re writing a custom StageCrewMember implementation.\\nFor example, "},{"kind":"code","text":"`./my-reporter:MyReporter`"},{"kind":"text","text":" would be interpreted as a request to load the "},{"kind":"code","text":"`MyReporter`"},{"kind":"text","text":" type from "},{"kind":"code","text":"`./my-reporter`"},{"kind":"text","text":" file, located\\nrelative to the [working directory](https://nodejs.org/api/process.html#processcwd) of the current Node.js process."}]},"sources":[{"fileName":"packages/core/src/config/ClassDescription.ts","line":52,"character":12}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"tuple","elements":[{"type":"intrinsic","name":"string"}]},{"type":"tuple","elements":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}]}]},"permalink":"/api/core#ClassDescription","previousId":1898,"nextId":67},{"id":67,"name":"SerenityConfig","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"Describes the configuration object accepted by the ["},{"kind":"code","text":"`configure`"},{"kind":"text","text":"](/api/core/function/configure/) function.\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`configure`"},{"kind":"text","text":"](/api/core/function/configure/)\\n- ["},{"kind":"code","text":"`Cast`"},{"kind":"text","text":"](/api/core/class/Cast/)\\n- ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/)\\n- ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMemberBuilder/)\\n- ["},{"kind":"code","text":"`ClassDescription`"},{"kind":"text","text":"](/api/core/#ClassDescription)\\n- ["},{"kind":"code","text":"`Stage.waitForNextCue`"},{"kind":"text","text":"](/api/core/class/Stage/#waitForNextCue)"}]},"children":[{"id":68,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":69,"name":"new SerenityConfig","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":67,"name":"SerenityConfig","package":"@serenity-js/core"}}]},{"id":70,"name":"actors","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A [cast](/api/core/class/Cast/) of [actors](/api/core/class/Actor/) to be used when ["},{"kind":"code","text":"`actorCalled`"},{"kind":"text","text":"](/api/core/function/actorCalled/)\\nand ["},{"kind":"code","text":"`actorInTheSpotlight`"},{"kind":"text","text":"](/api/core/function/actorInTheSpotlight/) functions are called."}]},"sources":[{"fileName":"packages/core/src/config/SerenityConfig.ts","line":26,"character":4}],"type":{"type":"reference","target":1947,"name":"Cast","package":"@serenity-js/core"}},{"id":71,"name":"crew","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A list of [stage crew member builders](/api/core/interface/StageCrewMemberBuilder/) or [stage crew members](/api/core/interface/StageCrewMember/)\\nto be notified of [Serenity/JS domain events](/api/core-events/class/DomainEvent/) that occur during the scenario execution.\\n\\nNote that the "},{"kind":"code","text":"`crew`"},{"kind":"text","text":" can also be configured using [class descriptions](/api/core/#ClassDescription).\\nThis is useful when you need to load the configuration from a static "},{"kind":"code","text":"`json`"},{"kind":"text","text":" file, or when the test runner doesn\'t support\\nproviding class instances in configuration (e.g. Playwright Test)."}]},"sources":[{"fileName":"packages/core/src/config/SerenityConfig.ts","line":36,"character":4}],"type":{"type":"array","elementType":{"type":"union","types":[{"type":"reference","target":2181,"name":"StageCrewMember","package":"@serenity-js/core"},{"type":"reference","target":2188,"typeArguments":[{"type":"reference","target":2021,"name":"ListensToDomainEvents","package":"@serenity-js/core"}],"name":"StageCrewMemberBuilder","package":"@serenity-js/core"},{"type":"reference","target":66,"name":"ClassDescription","package":"@serenity-js/core"}]}}},{"id":72,"name":"cueTimeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The maximum amount of time between [SceneFinishes](/api/core-events/class/SceneFinishes/) and [SceneFinished](/api/core-events/class/SceneFinished/) events\\nthat Serenity/JS should wait for any post-scenario\\nasync operations to complete. Those include generating the screenshots,\\nsaving reports to disk, [dismissing the actors](/api/core/interface/Discardable/), and so on.\\n\\nDefaults to 5 seconds.\\n\\n**Please note** that this is not\\na scenario timeout, which should be configured in your test runner."}]},"sources":[{"fileName":"packages/core/src/config/SerenityConfig.ts","line":49,"character":4}],"type":{"type":"reference","target":1742,"name":"Duration","package":"@serenity-js/core"}},{"id":73,"name":"interactionTimeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The maximum default amount of time allowed for interactions such as ["},{"kind":"code","text":"`Wait.until`"},{"kind":"text","text":"](/api/core/class/Wait/#until)\\nto complete.\\n\\nDefaults to 5 seconds, can be overridden per interaction.\\n\\n**Please note** that this is not\\na scenario timeout, which should be configured in your test runner.\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Wait.until`"},{"kind":"text","text":"](/api/core/class/Wait/#until)"}]},"sources":[{"fileName":"packages/core/src/config/SerenityConfig.ts","line":63,"character":4}],"type":{"type":"reference","target":1742,"name":"Duration","package":"@serenity-js/core"}},{"id":74,"name":"diffFormatter","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"["},{"kind":"code","text":"`DiffFormatter`"},{"kind":"text","text":"](/api/core/interface/DiffFormatter/) that\\nshould be used by the ["},{"kind":"code","text":"`ErrorFactory`"},{"kind":"text","text":"](/api/core/class/ErrorFactory/) and the ability\\nto ["},{"kind":"code","text":"`RaiseErrors`"},{"kind":"text","text":"](/api/core/class/RaiseErrors/)\\nwhen generating diffs included in ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/) objects.\\n\\nBy default, Serenity/JS uses ["},{"kind":"code","text":"`NoOpDiffFormatter`"},{"kind":"text","text":"](/api/core/class/NoOpDiffFormatter/)"}]},"sources":[{"fileName":"packages/core/src/config/SerenityConfig.ts","line":73,"character":4}],"type":{"type":"reference","target":171,"name":"DiffFormatter","package":"@serenity-js/core"}},{"id":75,"name":"outputStream","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"An output stream to be injected into [stage crew member builders](/api/core/interface/StageCrewMemberBuilder/)\\n\\nDefaults to ["},{"kind":"code","text":"`process.stdout`"},{"kind":"text","text":"](https://nodejs.org/api/process.html#process_process_stdout)."}]},"sources":[{"fileName":"packages/core/src/config/SerenityConfig.ts","line":80,"character":4}],"type":{"type":"reference","target":2221,"name":"OutputStream","package":"@serenity-js/core"}}],"groups":[{"title":"Constructors","children":[68]},{"title":"Properties","children":[70,71,72,73,74,75]}],"sources":[{"fileName":"packages/core/src/config/SerenityConfig.ts","line":20,"character":22}],"permalink":"/api/core/class/SerenityConfig","previousId":66,"nextId":489},{"id":126,"name":"ErrorFactory","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Generates Serenity/JS ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/) objects based\\non the provided [configuration](/api/core/interface/ErrorOptions/)."}]},"children":[{"id":127,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/ErrorFactory.ts","line":21,"character":4}],"signatures":[{"id":128,"name":"new ErrorFactory","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/ErrorFactory.ts","line":21,"character":4}],"parameters":[{"id":129,"name":"formatter","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":171,"name":"DiffFormatter","package":"@serenity-js/core"},"defaultValue":"..."}],"type":{"type":"reference","target":126,"name":"ErrorFactory","package":"@serenity-js/core"}}]},{"id":131,"name":"create","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/ErrorFactory.ts","line":24,"character":4}],"signatures":[{"id":132,"name":"create","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/ErrorFactory.ts","line":24,"character":4}],"typeParameter":[{"id":133,"name":"RE","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":349,"name":"RuntimeError","package":"@serenity-js/core"}}],"parameters":[{"id":134,"name":"errorType","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":135,"name":"__type","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/ErrorFactory.ts","line":24,"character":47}],"signatures":[{"id":136,"name":"new errorType","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/ErrorFactory.ts","line":24,"character":47}],"parameters":[{"id":137,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"reference","target":133,"name":"RE","package":"@serenity-js/core","refersToTypeParameter":true}}]}}},{"id":138,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":148,"name":"ErrorOptions","package":"@serenity-js/core"}}],"type":{"type":"reference","target":133,"name":"RE","package":"@serenity-js/core","refersToTypeParameter":true}}]}],"groups":[{"title":"Constructors","children":[127]},{"title":"Methods","children":[131]}],"sources":[{"fileName":"packages/core/src/errors/ErrorFactory.ts","line":19,"character":13}],"permalink":"/api/core/class/ErrorFactory","previousId":1049,"nextId":148},{"id":148,"name":"ErrorOptions","variant":"declaration","kind":256,"flags":{"isExternal":true},"children":[{"id":149,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/ErrorOptions.ts","line":8,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":150,"name":"location","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/core/src/errors/ErrorOptions.ts","line":9,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"}},{"id":151,"name":"expectation","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/core/src/errors/ErrorOptions.ts","line":10,"character":4}],"type":{"type":"reference","target":1207,"name":"ExpectationDetails","package":"@serenity-js/core"}},{"id":152,"name":"diff","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/core/src/errors/ErrorOptions.ts","line":11,"character":4}],"type":{"type":"reflection","declaration":{"id":153,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":154,"name":"expected","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/ErrorOptions.ts","line":12,"character":8}],"type":{"type":"intrinsic","name":"unknown"}},{"id":155,"name":"actual","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/ErrorOptions.ts","line":13,"character":8}],"type":{"type":"intrinsic","name":"unknown"}}],"groups":[{"title":"Properties","children":[154,155]}],"sources":[{"fileName":"packages/core/src/errors/ErrorOptions.ts","line":11,"character":11}]}}},{"id":156,"name":"cause","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/core/src/errors/ErrorOptions.ts","line":15,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}],"groups":[{"title":"Properties","children":[149,150,151,152,156]}],"sources":[{"fileName":"packages/core/src/errors/ErrorOptions.ts","line":7,"character":17}],"permalink":"/api/core/interface/ErrorOptions","previousId":126,"nextId":76},{"id":76,"name":"ErrorSerialiser","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":81,"name":"serialise","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/ErrorSerialiser.ts","line":19,"character":11}],"signatures":[{"id":82,"name":"serialise","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/ErrorSerialiser.ts","line":19,"character":11}],"parameters":[{"id":83,"name":"error","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}],"type":{"type":"intrinsic","name":"string"}}]},{"id":84,"name":"registerErrorTypes","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/ErrorSerialiser.ts","line":36,"character":11}],"signatures":[{"id":85,"name":"registerErrorTypes","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/ErrorSerialiser.ts","line":36,"character":11}],"parameters":[{"id":86,"name":"types","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reflection","declaration":{"id":87,"name":"__type","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/ErrorSerialiser.ts","line":36,"character":46}],"signatures":[{"id":88,"name":"new types","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/ErrorSerialiser.ts","line":36,"character":46}],"parameters":[{"id":89,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}]}}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":90,"name":"deserialise","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/ErrorSerialiser.ts","line":44,"character":11}],"signatures":[{"id":91,"name":"deserialise","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/ErrorSerialiser.ts","line":44,"character":11}],"parameters":[{"id":92,"name":"serialised","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}]},{"id":115,"name":"deserialiseFromStackTrace","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/ErrorSerialiser.ts","line":78,"character":11}],"signatures":[{"id":116,"name":"deserialiseFromStackTrace","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/ErrorSerialiser.ts","line":78,"character":11}],"parameters":[{"id":117,"name":"stack","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}]},{"id":118,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":119,"name":"new ErrorSerialiser","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":76,"name":"ErrorSerialiser","package":"@serenity-js/core"}}]}],"groups":[{"title":"Constructors","children":[118]},{"title":"Methods","children":[81,84,90,115]}],"sources":[{"fileName":"packages/core/src/errors/ErrorSerialiser.ts","line":7,"character":13}],"permalink":"/api/core/class/ErrorSerialiser","previousId":148,"nextId":120},{"id":120,"name":"ErrorStackParser","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A thin wrapper around error-stack-parser module\\n\\n## Learn more\\n- [Error stack parser](https://www.npmjs.com/package/error-stack-parser)"}]},"children":[{"id":121,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":122,"name":"new ErrorStackParser","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":120,"name":"ErrorStackParser","package":"@serenity-js/core"}}]},{"id":123,"name":"parse","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/ErrorStackParser.ts","line":12,"character":4}],"signatures":[{"id":124,"name":"parse","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/ErrorStackParser.ts","line":12,"character":4}],"parameters":[{"id":125,"name":"error","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}],"type":{"type":"array","elementType":{"type":"reference","target":{"sourceFileName":"node_modules/stackframe/stackframe.d.ts","qualifiedName":"StackFrame"},"name":"StackFrame","package":"stackframe"}}}]}],"groups":[{"title":"Constructors","children":[121]},{"title":"Methods","children":[123]}],"sources":[{"fileName":"packages/core/src/errors/ErrorStackParser.ts","line":11,"character":13}],"permalink":"/api/core/class/ErrorStackParser","previousId":76,"nextId":454},{"id":454,"name":"RaiseErrors","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/) that enables an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to create a Serenity/JS ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/)\\nfrom within a custom ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/).\\n\\nThe stack trace of an error created this way includes the filesystem location pointing to where the interaction was invoked,\\nwhich makes debugging any failures easier.\\n\\n:::info Pro tip\\nThe ability to "},{"kind":"code","text":"`RaiseErrors`"},{"kind":"text","text":" is given to all Serenity/JS actors by default, so you don\'t need to configure it explicitly.\\n:::\\n\\n## Raising an error\\n\\n"},{"kind":"code","text":"```typescript\\nimport { Interaction, LogicError, RaiseErrors, the } from \'@serenity-js/core\'\\nimport isPathInside from \'is-path-inside\'\\nimport { unlink } from \'fs/promises\'\\n\\nconst RemoveFile = (pathToFile: string) =>\\n  Interaction.where(the`#actor removes a file at ${ pathToFile }`, async actor => {\\n\\n    if (! isPathInside(pathToFile, process.cwd())) {\\n\\n      throw RaiseErrors.as(actor).create(LogicError, {\\n        message: `Removing files outside the current working directory is not allowed`\\n        diff: {\\n          expected: process.cwd(),\\n          actual: pathToFile,\\n        }\\n      })\\n    }\\n\\n    await unlink(pathToFile);\\n  })\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`ErrorOptions`"},{"kind":"text","text":"](/api/core/interface/ErrorOptions/)\\n- ["},{"kind":"code","text":"`ErrorFactory`"},{"kind":"text","text":"](/api/core/class/ErrorFactory/)\\n- ["},{"kind":"code","text":"`AssertionError`"},{"kind":"text","text":"](/api/core/class/AssertionError/)\\n- ["},{"kind":"code","text":"`ConfigurationError`"},{"kind":"text","text":"](/api/core/class/ConfigurationError/)\\n- ["},{"kind":"code","text":"`LogicError`"},{"kind":"text","text":"](/api/core/class/LogicError/)\\n- ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/)\\n- ["},{"kind":"code","text":"`TestCompromisedError`"},{"kind":"text","text":"](/api/core/class/TestCompromisedError/)"}]},"children":[{"id":462,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/RaiseErrors.ts","line":54,"character":4}],"signatures":[{"id":463,"name":"new RaiseErrors","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/RaiseErrors.ts","line":54,"character":4}],"parameters":[{"id":464,"name":"stage","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":2103,"name":"Stage","package":"@serenity-js/core"}}],"type":{"type":"reference","target":454,"name":"RaiseErrors","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":506,"name":"Ability.constructor"}}],"overwrites":{"type":"reference","target":505,"name":"Ability.constructor"}},{"id":466,"name":"create","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/RaiseErrors.ts","line":58,"character":4}],"signatures":[{"id":467,"name":"create","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/RaiseErrors.ts","line":58,"character":4}],"typeParameter":[{"id":468,"name":"RE","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":349,"name":"RuntimeError","package":"@serenity-js/core"}}],"parameters":[{"id":469,"name":"errorType","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":470,"name":"__type","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/RaiseErrors.ts","line":58,"character":47}],"signatures":[{"id":471,"name":"new errorType","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/RaiseErrors.ts","line":58,"character":47}],"parameters":[{"id":472,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"reference","target":468,"name":"RE","package":"@serenity-js/core","refersToTypeParameter":true}}]}}},{"id":473,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":148,"name":"ErrorOptions","package":"@serenity-js/core"}}],"type":{"type":"reference","target":468,"name":"RE","package":"@serenity-js/core","refersToTypeParameter":true}}]},{"id":474,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Ability.ts","line":414,"character":4}],"signatures":[{"id":475,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a JSON representation of the ability and its current state, if available.\\nThe purpose of this method is to enable reporting the state of the ability in a human-readable format,\\nrather than to serialise and deserialise the ability itself."}]},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Ability.ts","line":414,"character":4}],"type":{"type":"reference","target":596,"name":"SerialisedAbility","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":508,"name":"Ability.toJSON"}}],"inheritedFrom":{"type":"reference","target":507,"name":"Ability.toJSON"}},{"id":476,"name":"abilityType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Ability.ts","line":461,"character":4}],"signatures":[{"id":477,"name":"abilityType","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the most abstract type of this Ability instance,\\nspecifically the first class in the inheritance hierarchy that directly extends the "},{"kind":"code","text":"`Ability`"},{"kind":"text","text":" class.\\n\\n"},{"kind":"code","text":"```ts\\nimport { Ability } from \'@serenity-js/core\';\\n\\nclass MyAbility extends Ability {}\\nclass MySpecialisedAbility extends MyAbility {}\\n\\nnew MyAbility().abilityType();            // returns MyAbility\\nnew MySpecialisedAbility().abilityType(); // returns MyAbility\\n```"}]},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Ability.ts","line":461,"character":4}],"type":{"type":"reference","target":511,"typeArguments":[{"type":"reference","target":490,"name":"Ability","package":"@serenity-js/core"}],"name":"AbilityType","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":510,"name":"Ability.abilityType"}}],"inheritedFrom":{"type":"reference","target":509,"name":"Ability.abilityType"}}],"groups":[{"title":"Constructors","children":[462]},{"title":"Methods","children":[466,474,476]}],"sources":[{"fileName":"packages/core/src/errors/RaiseErrors.ts","line":53,"character":13}],"extendedTypes":[{"type":"reference","target":490,"name":"Ability","package":"@serenity-js/core"}],"permalink":"/api/core/class/RaiseErrors","previousId":120,"nextId":157},{"id":157,"name":"AnsiDiffFormatter","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A ["},{"kind":"code","text":"`DiffFormatter`"},{"kind":"text","text":"](/api/core/interface/DiffFormatter/) that uses [ANSI escape codes](https://en.wikipedia.org/wiki/ANSI_escape_code)\\nto format the output."}]},"children":[{"id":158,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/diff/AnsiDiffFormatter.ts","line":27,"character":4}],"signatures":[{"id":159,"name":"new AnsiDiffFormatter","variant":"signature","kind":16384,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates an "},{"kind":"code","text":"`AnsiDiffFormatter`"},{"kind":"text","text":", configured with colour support options for [Chalk](https://github.com/chalk/chalk).\\nWhen no "},{"kind":"code","text":"`chalkOptions`"},{"kind":"text","text":" object is provided, Chalk will auto-detect colour support automatically based on the execution environment.\\n\\nAvailable colour support levels:\\n- "},{"kind":"code","text":"`0`"},{"kind":"text","text":" - All colours disabled.\\n- "},{"kind":"code","text":"`1`"},{"kind":"text","text":" - Basic 16 colours support.\\n- "},{"kind":"code","text":"`2`"},{"kind":"text","text":" - ANSI 256 colours support.\\n- "},{"kind":"code","text":"`3`"},{"kind":"text","text":" - Truecolor - 16 million colours support."}]},"sources":[{"fileName":"packages/core/src/errors/diff/AnsiDiffFormatter.ts","line":27,"character":4}],"parameters":[{"id":160,"name":"chalkOptions","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/chalk/index.d.ts","qualifiedName":"chalk.Options"},"name":"Options","package":"chalk","qualifiedName":"chalk.Options"}}],"type":{"type":"reference","target":157,"name":"AnsiDiffFormatter","package":"@serenity-js/core"}}]},{"id":162,"name":"expected","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/diff/AnsiDiffFormatter.ts","line":31,"character":4}],"signatures":[{"id":163,"name":"expected","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/diff/AnsiDiffFormatter.ts","line":31,"character":4}],"parameters":[{"id":164,"name":"line","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"},"implementationOf":{"type":"reference","target":173,"name":"DiffFormatter.expected"}}],"implementationOf":{"type":"reference","target":172,"name":"DiffFormatter.expected"}},{"id":165,"name":"received","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/diff/AnsiDiffFormatter.ts","line":35,"character":4}],"signatures":[{"id":166,"name":"received","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/diff/AnsiDiffFormatter.ts","line":35,"character":4}],"parameters":[{"id":167,"name":"line","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"},"implementationOf":{"type":"reference","target":176,"name":"DiffFormatter.received"}}],"implementationOf":{"type":"reference","target":175,"name":"DiffFormatter.received"}},{"id":168,"name":"unchanged","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/diff/AnsiDiffFormatter.ts","line":39,"character":4}],"signatures":[{"id":169,"name":"unchanged","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/diff/AnsiDiffFormatter.ts","line":39,"character":4}],"parameters":[{"id":170,"name":"line","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"},"implementationOf":{"type":"reference","target":179,"name":"DiffFormatter.unchanged"}}],"implementationOf":{"type":"reference","target":178,"name":"DiffFormatter.unchanged"}}],"groups":[{"title":"Constructors","children":[158]},{"title":"Methods","children":[162,165,168]}],"sources":[{"fileName":"packages/core/src/errors/diff/AnsiDiffFormatter.ts","line":12,"character":13}],"implementedTypes":[{"type":"reference","target":171,"name":"DiffFormatter","package":"@serenity-js/core"}],"permalink":"/api/core/class/AnsiDiffFormatter","previousId":454,"nextId":171},{"id":171,"name":"DiffFormatter","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Formats text representing expected, received, and unchanged lines of a diff\\nproduced by the ["},{"kind":"code","text":"`ErrorFactory`"},{"kind":"text","text":"](/api/core/class/ErrorFactory/), so that they can be presented to a developer\\nin a visually distinctive way."}]},"children":[{"id":172,"name":"expected","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/diff/DiffFormatter.ts","line":9,"character":4}],"signatures":[{"id":173,"name":"expected","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/diff/DiffFormatter.ts","line":9,"character":4}],"parameters":[{"id":174,"name":"line","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}]},{"id":175,"name":"received","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/diff/DiffFormatter.ts","line":10,"character":4}],"signatures":[{"id":176,"name":"received","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/diff/DiffFormatter.ts","line":10,"character":4}],"parameters":[{"id":177,"name":"line","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}]},{"id":178,"name":"unchanged","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/diff/DiffFormatter.ts","line":11,"character":4}],"signatures":[{"id":179,"name":"unchanged","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/diff/DiffFormatter.ts","line":11,"character":4}],"parameters":[{"id":180,"name":"line","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}]}],"groups":[{"title":"Methods","children":[172,175,178]}],"sources":[{"fileName":"packages/core/src/errors/diff/DiffFormatter.ts","line":8,"character":17}],"implementedBy":[{"type":"reference","target":157,"name":"AnsiDiffFormatter"},{"type":"reference","target":181,"name":"NoOpDiffFormatter"}],"permalink":"/api/core/interface/DiffFormatter","previousId":157,"nextId":181},{"id":181,"name":"NoOpDiffFormatter","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A no-op ["},{"kind":"code","text":"`DiffFormatter`"},{"kind":"text","text":"](/api/core/interface/DiffFormatter/) that produces output identical to input."}]},"children":[{"id":182,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":183,"name":"new NoOpDiffFormatter","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":181,"name":"NoOpDiffFormatter","package":"@serenity-js/core"}}]},{"id":184,"name":"expected","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/diff/NoOpDiffFormatter.ts","line":9,"character":4}],"signatures":[{"id":185,"name":"expected","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/diff/NoOpDiffFormatter.ts","line":9,"character":4}],"parameters":[{"id":186,"name":"line","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"},"implementationOf":{"type":"reference","target":173,"name":"DiffFormatter.expected"}}],"implementationOf":{"type":"reference","target":172,"name":"DiffFormatter.expected"}},{"id":187,"name":"received","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/diff/NoOpDiffFormatter.ts","line":13,"character":4}],"signatures":[{"id":188,"name":"received","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/diff/NoOpDiffFormatter.ts","line":13,"character":4}],"parameters":[{"id":189,"name":"line","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"},"implementationOf":{"type":"reference","target":176,"name":"DiffFormatter.received"}}],"implementationOf":{"type":"reference","target":175,"name":"DiffFormatter.received"}},{"id":190,"name":"unchanged","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/diff/NoOpDiffFormatter.ts","line":17,"character":4}],"signatures":[{"id":191,"name":"unchanged","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/diff/NoOpDiffFormatter.ts","line":17,"character":4}],"parameters":[{"id":192,"name":"line","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"},"implementationOf":{"type":"reference","target":179,"name":"DiffFormatter.unchanged"}}],"implementationOf":{"type":"reference","target":178,"name":"DiffFormatter.unchanged"}}],"groups":[{"title":"Constructors","children":[182]},{"title":"Methods","children":[184,187,190]}],"sources":[{"fileName":"packages/core/src/errors/diff/NoOpDiffFormatter.ts","line":8,"character":13}],"implementedTypes":[{"type":"reference","target":171,"name":"DiffFormatter","package":"@serenity-js/core"}],"permalink":"/api/core/class/NoOpDiffFormatter","previousId":171,"nextId":193},{"id":193,"name":"AssertionError","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Thrown to indicate that an assertion has failed."}]},"children":[{"id":194,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/AssertionError.ts","line":13,"character":11}],"signatures":[{"id":195,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/AssertionError.ts","line":13,"character":11}],"parameters":[{"id":196,"name":"serialised","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":193,"name":"AssertionError","package":"@serenity-js/core"}}]},{"id":207,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/AssertionError.ts","line":28,"character":4}],"signatures":[{"id":208,"name":"new AssertionError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/AssertionError.ts","line":28,"character":4}],"parameters":[{"id":209,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error and the difference between the expected and actual values"}]},"type":{"type":"intrinsic","name":"string"}},{"id":210,"name":"cause","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/), if any"}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}],"type":{"type":"reference","target":193,"name":"AssertionError","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"RuntimeError.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"RuntimeError.constructor"}},{"id":211,"name":"cause","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isOptional":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/), if any"}]},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":78,"character":24}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"},"inheritedFrom":{"type":"reference","target":368,"name":"RuntimeError.cause"}},{"id":212,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":103,"character":4}],"signatures":[{"id":213,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":103,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":370,"name":"RuntimeError.toString"}}],"inheritedFrom":{"type":"reference","target":369,"name":"RuntimeError.toString"}},{"id":214,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":107,"character":4}],"signatures":[{"id":215,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":107,"character":4}],"type":{"type":"intrinsic","name":"object"},"inheritedFrom":{"type":"reference","target":372,"name":"RuntimeError.toJSON"}}],"inheritedFrom":{"type":"reference","target":371,"name":"RuntimeError.toJSON"}},{"id":216,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":373,"name":"RuntimeError.name"}},{"id":217,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":374,"name":"RuntimeError.message"}},{"id":218,"name":"stack","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":375,"name":"RuntimeError.stack"}}],"groups":[{"title":"Constructors","children":[207]},{"title":"Properties","children":[211,216,217,218]},{"title":"Methods","children":[194,212,214]}],"sources":[{"fileName":"packages/core/src/errors/model/AssertionError.ts","line":11,"character":13}],"extendedTypes":[{"type":"reference","target":349,"name":"RuntimeError","package":"@serenity-js/core"}],"permalink":"/api/core/class/AssertionError","previousId":181,"nextId":219},{"id":219,"name":"ConfigurationError","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Thrown to indicate that a test framework or test suite configuration error occurred."}]},"children":[{"id":220,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/ConfigurationError.ts","line":13,"character":11}],"signatures":[{"id":221,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/ConfigurationError.ts","line":13,"character":11}],"parameters":[{"id":222,"name":"serialised","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":219,"name":"ConfigurationError","package":"@serenity-js/core"}}]},{"id":233,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/ConfigurationError.ts","line":28,"character":4}],"signatures":[{"id":234,"name":"new ConfigurationError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/ConfigurationError.ts","line":28,"character":4}],"parameters":[{"id":235,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"type":{"type":"intrinsic","name":"string"}},{"id":236,"name":"cause","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/), if any"}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}],"type":{"type":"reference","target":219,"name":"ConfigurationError","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"RuntimeError.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"RuntimeError.constructor"}},{"id":237,"name":"cause","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isOptional":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/), if any"}]},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":78,"character":24}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"},"inheritedFrom":{"type":"reference","target":368,"name":"RuntimeError.cause"}},{"id":238,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":103,"character":4}],"signatures":[{"id":239,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":103,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":370,"name":"RuntimeError.toString"}}],"inheritedFrom":{"type":"reference","target":369,"name":"RuntimeError.toString"}},{"id":240,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":107,"character":4}],"signatures":[{"id":241,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":107,"character":4}],"type":{"type":"intrinsic","name":"object"},"inheritedFrom":{"type":"reference","target":372,"name":"RuntimeError.toJSON"}}],"inheritedFrom":{"type":"reference","target":371,"name":"RuntimeError.toJSON"}},{"id":242,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":373,"name":"RuntimeError.name"}},{"id":243,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":374,"name":"RuntimeError.message"}},{"id":244,"name":"stack","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":375,"name":"RuntimeError.stack"}}],"groups":[{"title":"Constructors","children":[233]},{"title":"Properties","children":[237,242,243,244]},{"title":"Methods","children":[220,238,240]}],"sources":[{"fileName":"packages/core/src/errors/model/ConfigurationError.ts","line":11,"character":13}],"extendedTypes":[{"type":"reference","target":349,"name":"RuntimeError","package":"@serenity-js/core"}],"permalink":"/api/core/class/ConfigurationError","previousId":193,"nextId":245},{"id":245,"name":"ImplementationPendingError","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Thrown to indicate that the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) attempted to perform\\na ["},{"kind":"code","text":"`Task`"},{"kind":"text","text":"](/api/core/class/Task/) or ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/) that hasn\'t been implemented yet.\\n\\n## A pending Task\\n\\n"},{"kind":"code","text":"```ts\\nimport { Task } from \'@serenity-js/core\'\\n\\n// A pending Task is one that encapsulates no other activities\\nconst Authenticate = () =>\\n  Task.where(`#actor authenticates with the service up a test database` )\\n```"},{"kind":"text","text":"\\n\\n## A pending Interaction\\n\\n"},{"kind":"code","text":"```ts\\nimport { Interaction } from \'@serenity-js/core\'\\n\\n// A pending Interaction is one that doesn\'t perform any action\\nconst DoubleClick = () =>\\n  Interaction.where(`#actor double-clicks`)\\n```"}]},"children":[{"id":246,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/ImplementationPendingError.ts","line":34,"character":11}],"signatures":[{"id":247,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/ImplementationPendingError.ts","line":34,"character":11}],"parameters":[{"id":248,"name":"serialised","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":245,"name":"ImplementationPendingError","package":"@serenity-js/core"}}]},{"id":259,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/ImplementationPendingError.ts","line":49,"character":4}],"signatures":[{"id":260,"name":"new ImplementationPendingError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/ImplementationPendingError.ts","line":49,"character":4}],"parameters":[{"id":261,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"type":{"type":"intrinsic","name":"string"}},{"id":262,"name":"cause","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/), if any"}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}],"type":{"type":"reference","target":245,"name":"ImplementationPendingError","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"RuntimeError.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"RuntimeError.constructor"}},{"id":263,"name":"cause","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isOptional":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/), if any"}]},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":78,"character":24}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"},"inheritedFrom":{"type":"reference","target":368,"name":"RuntimeError.cause"}},{"id":264,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":103,"character":4}],"signatures":[{"id":265,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":103,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":370,"name":"RuntimeError.toString"}}],"inheritedFrom":{"type":"reference","target":369,"name":"RuntimeError.toString"}},{"id":266,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":107,"character":4}],"signatures":[{"id":267,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":107,"character":4}],"type":{"type":"intrinsic","name":"object"},"inheritedFrom":{"type":"reference","target":372,"name":"RuntimeError.toJSON"}}],"inheritedFrom":{"type":"reference","target":371,"name":"RuntimeError.toJSON"}},{"id":268,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":373,"name":"RuntimeError.name"}},{"id":269,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":374,"name":"RuntimeError.message"}},{"id":270,"name":"stack","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":375,"name":"RuntimeError.stack"}}],"groups":[{"title":"Constructors","children":[259]},{"title":"Properties","children":[263,268,269,270]},{"title":"Methods","children":[246,264,266]}],"sources":[{"fileName":"packages/core/src/errors/model/ImplementationPendingError.ts","line":32,"character":13}],"extendedTypes":[{"type":"reference","target":349,"name":"RuntimeError","package":"@serenity-js/core"}],"permalink":"/api/core/class/ImplementationPendingError","previousId":219,"nextId":271},{"id":271,"name":"ListItemNotFoundError","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Thrown to indicate that an ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/), a ["},{"kind":"code","text":"`Task`"},{"kind":"text","text":"](/api/core/class/Task/) or a test scenario\\ncan\'t be executed due to no items are found in a list.\\n\\nFor example, it\'s not possible to get the first() or the last() item of a list\\nif the list is empty."}]},"children":[{"id":272,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/ListItemNotFoundError.ts","line":17,"character":11}],"signatures":[{"id":273,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/ListItemNotFoundError.ts","line":17,"character":11}],"parameters":[{"id":274,"name":"serialised","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":271,"name":"ListItemNotFoundError","package":"@serenity-js/core"}}]},{"id":285,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/ListItemNotFoundError.ts","line":32,"character":4}],"signatures":[{"id":286,"name":"new ListItemNotFoundError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/ListItemNotFoundError.ts","line":32,"character":4}],"parameters":[{"id":287,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"type":{"type":"intrinsic","name":"string"}},{"id":288,"name":"cause","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this ["},{"kind":"code","text":"`ListItemNotFoundError`"},{"kind":"text","text":"](/api/core/class/ListItemNotFoundError/), if any"}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}],"type":{"type":"reference","target":271,"name":"ListItemNotFoundError","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"RuntimeError.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"RuntimeError.constructor"}},{"id":289,"name":"cause","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isOptional":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/), if any"}]},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":78,"character":24}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"},"inheritedFrom":{"type":"reference","target":368,"name":"RuntimeError.cause"}},{"id":290,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":103,"character":4}],"signatures":[{"id":291,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":103,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":370,"name":"RuntimeError.toString"}}],"inheritedFrom":{"type":"reference","target":369,"name":"RuntimeError.toString"}},{"id":292,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":107,"character":4}],"signatures":[{"id":293,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":107,"character":4}],"type":{"type":"intrinsic","name":"object"},"inheritedFrom":{"type":"reference","target":372,"name":"RuntimeError.toJSON"}}],"inheritedFrom":{"type":"reference","target":371,"name":"RuntimeError.toJSON"}},{"id":294,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":373,"name":"RuntimeError.name"}},{"id":295,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":374,"name":"RuntimeError.message"}},{"id":296,"name":"stack","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":375,"name":"RuntimeError.stack"}}],"groups":[{"title":"Constructors","children":[285]},{"title":"Properties","children":[289,294,295,296]},{"title":"Methods","children":[272,290,292]}],"sources":[{"fileName":"packages/core/src/errors/model/ListItemNotFoundError.ts","line":15,"character":13}],"extendedTypes":[{"type":"reference","target":349,"name":"RuntimeError","package":"@serenity-js/core"}],"permalink":"/api/core/class/ListItemNotFoundError","previousId":245,"nextId":297},{"id":297,"name":"LogicError","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Thrown to indicate that an ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/), a ["},{"kind":"code","text":"`Task`"},{"kind":"text","text":"](/api/core/class/Task/) or a test scenario\\ncan\'t be executed due to a logical error.\\n\\nFor example, it\'s not possible to assert on the last HTTP Response if the request\\nhasn\'t been performed yet."}]},"children":[{"id":298,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/LogicError.ts","line":17,"character":11}],"signatures":[{"id":299,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/LogicError.ts","line":17,"character":11}],"parameters":[{"id":300,"name":"serialised","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":297,"name":"LogicError","package":"@serenity-js/core"}}]},{"id":311,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/LogicError.ts","line":32,"character":4}],"signatures":[{"id":312,"name":"new LogicError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/LogicError.ts","line":32,"character":4}],"parameters":[{"id":313,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"type":{"type":"intrinsic","name":"string"}},{"id":314,"name":"cause","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/), if any"}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}],"type":{"type":"reference","target":297,"name":"LogicError","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"RuntimeError.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"RuntimeError.constructor"}},{"id":315,"name":"cause","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isOptional":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/), if any"}]},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":78,"character":24}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"},"inheritedFrom":{"type":"reference","target":368,"name":"RuntimeError.cause"}},{"id":316,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":103,"character":4}],"signatures":[{"id":317,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":103,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":370,"name":"RuntimeError.toString"}}],"inheritedFrom":{"type":"reference","target":369,"name":"RuntimeError.toString"}},{"id":318,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":107,"character":4}],"signatures":[{"id":319,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":107,"character":4}],"type":{"type":"intrinsic","name":"object"},"inheritedFrom":{"type":"reference","target":372,"name":"RuntimeError.toJSON"}}],"inheritedFrom":{"type":"reference","target":371,"name":"RuntimeError.toJSON"}},{"id":320,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":373,"name":"RuntimeError.name"}},{"id":321,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":374,"name":"RuntimeError.message"}},{"id":322,"name":"stack","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":375,"name":"RuntimeError.stack"}}],"groups":[{"title":"Constructors","children":[311]},{"title":"Properties","children":[315,320,321,322]},{"title":"Methods","children":[298,316,318]}],"sources":[{"fileName":"packages/core/src/errors/model/LogicError.ts","line":15,"character":13}],"extendedTypes":[{"type":"reference","target":349,"name":"RuntimeError","package":"@serenity-js/core"}],"permalink":"/api/core/class/LogicError","previousId":271,"nextId":323},{"id":323,"name":"OperationInterruptedError","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Thrown to indicate that a [scheduled operation](/api/core/class/Scheduler/)\\nhas been stopped before it was completed."}]},"children":[{"id":324,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/OperationInterruptedError.ts","line":14,"character":11}],"signatures":[{"id":325,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/OperationInterruptedError.ts","line":14,"character":11}],"parameters":[{"id":326,"name":"serialised","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":323,"name":"OperationInterruptedError","package":"@serenity-js/core"}}]},{"id":337,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/OperationInterruptedError.ts","line":32,"character":4}],"signatures":[{"id":338,"name":"new OperationInterruptedError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/OperationInterruptedError.ts","line":32,"character":4}],"parameters":[{"id":339,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"type":{"type":"intrinsic","name":"string"}},{"id":340,"name":"cause","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/), if any"}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}],"type":{"type":"reference","target":323,"name":"OperationInterruptedError","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"RuntimeError.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"RuntimeError.constructor"}},{"id":341,"name":"cause","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isOptional":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/), if any"}]},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":78,"character":24}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"},"inheritedFrom":{"type":"reference","target":368,"name":"RuntimeError.cause"}},{"id":342,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":103,"character":4}],"signatures":[{"id":343,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":103,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":370,"name":"RuntimeError.toString"}}],"inheritedFrom":{"type":"reference","target":369,"name":"RuntimeError.toString"}},{"id":344,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":107,"character":4}],"signatures":[{"id":345,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":107,"character":4}],"type":{"type":"intrinsic","name":"object"},"inheritedFrom":{"type":"reference","target":372,"name":"RuntimeError.toJSON"}}],"inheritedFrom":{"type":"reference","target":371,"name":"RuntimeError.toJSON"}},{"id":346,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":373,"name":"RuntimeError.name"}},{"id":347,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":374,"name":"RuntimeError.message"}},{"id":348,"name":"stack","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":375,"name":"RuntimeError.stack"}}],"groups":[{"title":"Constructors","children":[337]},{"title":"Properties","children":[341,346,347,348]},{"title":"Methods","children":[324,342,344]}],"sources":[{"fileName":"packages/core/src/errors/model/OperationInterruptedError.ts","line":12,"character":13}],"extendedTypes":[{"type":"reference","target":349,"name":"RuntimeError","package":"@serenity-js/core"}],"permalink":"/api/core/class/OperationInterruptedError","previousId":297,"nextId":349},{"id":349,"name":"RuntimeError","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"Base class for custom errors that may occur during execution of a test scenario.\\n\\n## Defining a custom error\\n\\n"},{"kind":"code","text":"```ts\\nimport { RuntimeError } from \'@serenity-js/core\'\\n\\nexport class CustomError extends RuntimeError {\\n  constructor(message: string, cause?: Error) {\\n      super(CustomError, message, cause);\\n  }\\n}\\n```"},{"kind":"text","text":"\\n\\n## Wrapping a sync error\\n\\n"},{"kind":"code","text":"```ts\\ntry {\\n    operationThatMightThrowAnError();\\n} catch(error) {\\n    // catch and re-throw\\n    throw new CustomError(\'operationThatMightThrowAnError has failed\', error);\\n}\\n```"},{"kind":"text","text":"\\n\\n## Wrapping an async error\\n\\n"},{"kind":"code","text":"```ts\\noperationThatMightRejectAPromise()\\n  .catch(error => {\\n    // catch and re-throw\\n    throw new CustomError(\'operationThatMightThrowAnError has failed\', error)\\n  })\\n```"},{"kind":"text","text":"\\n\\n## Registering a custom error with ["},{"kind":"code","text":"`ErrorSerialiser`"},{"kind":"text","text":"](/api/core/class/ErrorSerialiser/)\\n\\n"},{"kind":"code","text":"```ts\\nimport { RuntimeError } from \'@serenity-js/core\'\\nimport { ErrorSerialiser } from \'@serenity-js/core/lib/io\'\\n\\nexport class CustomError extends RuntimeError {\\n\\n   static fromJSON(serialised: JSONObject): CustomError {\\n        const error = new CustomError(\\n            serialised.message as string,\\n            ErrorSerialiser.deserialise(serialised.cause as string | undefined),\\n        );\\n\\n        error.stack = serialised.stack as string;\\n\\n        return error;\\n    }\\n\\n  constructor(message: string, cause?: Error) {\\n      super(CustomError, message, cause);\\n  }\\n}\\n\\nErrorSerialiser.registerErrorTypes(CustomError)\\n```"}]},"children":[{"id":368,"name":"cause","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isOptional":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/), if any"}]},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":78,"character":24}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}},{"id":369,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":103,"character":4}],"signatures":[{"id":370,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":103,"character":4}],"type":{"type":"intrinsic","name":"string"}}]},{"id":371,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":107,"character":4}],"signatures":[{"id":372,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":107,"character":4}],"type":{"type":"intrinsic","name":"object"}}]},{"id":373,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Error.name","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error/name"}},{"id":374,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Error.message","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error/message"}},{"id":375,"name":"stack","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Error.stack","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error/stack"}}],"groups":[{"title":"Properties","children":[368,373,374,375]},{"title":"Methods","children":[369,371]}],"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":68,"character":22}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}],"extendedBy":[{"type":"reference","target":193,"name":"AssertionError"},{"type":"reference","target":219,"name":"ConfigurationError"},{"type":"reference","target":245,"name":"ImplementationPendingError"},{"type":"reference","target":271,"name":"ListItemNotFoundError"},{"type":"reference","target":297,"name":"LogicError"},{"type":"reference","target":323,"name":"OperationInterruptedError"},{"type":"reference","target":376,"name":"TestCompromisedError"},{"type":"reference","target":402,"name":"TimeoutExpiredError"},{"type":"reference","target":428,"name":"UnknownError"}],"permalink":"/api/core/class/RuntimeError","previousId":323,"nextId":376},{"id":376,"name":"TestCompromisedError","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Thrown to indicate that the test can\'t be performed due to an issue with a downstream dependency.\\nFor example, it makes no sense to run a full-stack integration test if we already know that\\nthe database server is down.\\n\\n## Throwing a TestCompromisedError from a custom Interaction\\n\\n"},{"kind":"code","text":"```ts\\nimport { Interaction } from \'@serenity-js/core\';\\n\\nconst SetUpTestDatabase = () =>\\n  Interaction.where(`#actor sets up a test database`, actor => {\\n    return SomeCustomDatabaseSpecificAbility.as(actor).setUpTestDatabase().catch(error => {\\n      throw new TestCompromisedError(\'Could not set up the test database\', error)\\n    })\\n})\\n```"}]},"children":[{"id":377,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/TestCompromisedError.ts","line":28,"character":11}],"signatures":[{"id":378,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/TestCompromisedError.ts","line":28,"character":11}],"parameters":[{"id":379,"name":"serialised","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":376,"name":"TestCompromisedError","package":"@serenity-js/core"}}]},{"id":394,"name":"cause","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isOptional":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/), if any"}]},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":78,"character":24}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"},"inheritedFrom":{"type":"reference","target":368,"name":"RuntimeError.cause"}},{"id":395,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":103,"character":4}],"signatures":[{"id":396,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":103,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":370,"name":"RuntimeError.toString"}}],"inheritedFrom":{"type":"reference","target":369,"name":"RuntimeError.toString"}},{"id":397,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":107,"character":4}],"signatures":[{"id":398,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":107,"character":4}],"type":{"type":"intrinsic","name":"object"},"inheritedFrom":{"type":"reference","target":372,"name":"RuntimeError.toJSON"}}],"inheritedFrom":{"type":"reference","target":371,"name":"RuntimeError.toJSON"}},{"id":390,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/TestCompromisedError.ts","line":43,"character":4}],"signatures":[{"id":391,"name":"new TestCompromisedError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/TestCompromisedError.ts","line":43,"character":4}],"parameters":[{"id":392,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"type":{"type":"intrinsic","name":"string"}},{"id":393,"name":"cause","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/), if any"}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}],"type":{"type":"reference","target":376,"name":"TestCompromisedError","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"RuntimeError.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"RuntimeError.constructor"}},{"id":399,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":373,"name":"RuntimeError.name"}},{"id":400,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":374,"name":"RuntimeError.message"}},{"id":401,"name":"stack","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":375,"name":"RuntimeError.stack"}}],"groups":[{"title":"Constructors","children":[390]},{"title":"Properties","children":[394,399,400,401]},{"title":"Methods","children":[377,395,397]}],"sources":[{"fileName":"packages/core/src/errors/model/TestCompromisedError.ts","line":26,"character":13}],"extendedTypes":[{"type":"reference","target":349,"name":"RuntimeError","package":"@serenity-js/core"}],"permalink":"/api/core/class/TestCompromisedError","previousId":349,"nextId":402},{"id":402,"name":"TimeoutExpiredError","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Thrown to indicate that an ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/), a ["},{"kind":"code","text":"`Task`"},{"kind":"text","text":"](/api/core/class/Task/) or a test scenario\\ntook longer to execute than the expected timeout."}]},"children":[{"id":403,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/TimeoutExpiredError.ts","line":14,"character":11}],"signatures":[{"id":404,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/TimeoutExpiredError.ts","line":14,"character":11}],"parameters":[{"id":405,"name":"serialised","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":402,"name":"TimeoutExpiredError","package":"@serenity-js/core"}}]},{"id":420,"name":"cause","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isOptional":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/), if any"}]},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":78,"character":24}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"},"inheritedFrom":{"type":"reference","target":368,"name":"RuntimeError.cause"}},{"id":421,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":103,"character":4}],"signatures":[{"id":422,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":103,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":370,"name":"RuntimeError.toString"}}],"inheritedFrom":{"type":"reference","target":369,"name":"RuntimeError.toString"}},{"id":423,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":107,"character":4}],"signatures":[{"id":424,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":107,"character":4}],"type":{"type":"intrinsic","name":"object"},"inheritedFrom":{"type":"reference","target":372,"name":"RuntimeError.toJSON"}}],"inheritedFrom":{"type":"reference","target":371,"name":"RuntimeError.toJSON"}},{"id":416,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/TimeoutExpiredError.ts","line":32,"character":4}],"signatures":[{"id":417,"name":"new TimeoutExpiredError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/TimeoutExpiredError.ts","line":32,"character":4}],"parameters":[{"id":418,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"type":{"type":"intrinsic","name":"string"}},{"id":419,"name":"cause","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/), if any"}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}],"type":{"type":"reference","target":402,"name":"TimeoutExpiredError","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"RuntimeError.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"RuntimeError.constructor"}},{"id":425,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":373,"name":"RuntimeError.name"}},{"id":426,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":374,"name":"RuntimeError.message"}},{"id":427,"name":"stack","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":375,"name":"RuntimeError.stack"}}],"groups":[{"title":"Constructors","children":[416]},{"title":"Properties","children":[420,425,426,427]},{"title":"Methods","children":[403,421,423]}],"sources":[{"fileName":"packages/core/src/errors/model/TimeoutExpiredError.ts","line":12,"character":13}],"extendedTypes":[{"type":"reference","target":349,"name":"RuntimeError","package":"@serenity-js/core"}],"permalink":"/api/core/class/TimeoutExpiredError","previousId":376,"nextId":428},{"id":428,"name":"UnknownError","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Thrown to indicate that an unknown error has occurred."}]},"children":[{"id":429,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/UnknownError.ts","line":13,"character":11}],"signatures":[{"id":430,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/UnknownError.ts","line":13,"character":11}],"parameters":[{"id":431,"name":"serialised","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":428,"name":"UnknownError","package":"@serenity-js/core"}}]},{"id":446,"name":"cause","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isOptional":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/), if any"}]},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":78,"character":24}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"},"inheritedFrom":{"type":"reference","target":368,"name":"RuntimeError.cause"}},{"id":447,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":103,"character":4}],"signatures":[{"id":448,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":103,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":370,"name":"RuntimeError.toString"}}],"inheritedFrom":{"type":"reference","target":369,"name":"RuntimeError.toString"}},{"id":449,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":107,"character":4}],"signatures":[{"id":450,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":107,"character":4}],"type":{"type":"intrinsic","name":"object"},"inheritedFrom":{"type":"reference","target":372,"name":"RuntimeError.toJSON"}}],"inheritedFrom":{"type":"reference","target":371,"name":"RuntimeError.toJSON"}},{"id":442,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/UnknownError.ts","line":28,"character":4}],"signatures":[{"id":443,"name":"new UnknownError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/UnknownError.ts","line":28,"character":4}],"parameters":[{"id":444,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"type":{"type":"intrinsic","name":"string"}},{"id":445,"name":"cause","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/), if any"}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}],"type":{"type":"reference","target":428,"name":"UnknownError","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"RuntimeError.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"RuntimeError.constructor"}},{"id":451,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":373,"name":"RuntimeError.name"}},{"id":452,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":374,"name":"RuntimeError.message"}},{"id":453,"name":"stack","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":375,"name":"RuntimeError.stack"}}],"groups":[{"title":"Constructors","children":[442]},{"title":"Properties","children":[446,451,452,453]},{"title":"Methods","children":[429,447,449]}],"sources":[{"fileName":"packages/core/src/errors/model/UnknownError.ts","line":11,"character":13}],"extendedTypes":[{"type":"reference","target":349,"name":"RuntimeError","package":"@serenity-js/core"}],"permalink":"/api/core/class/UnknownError","previousId":402,"nextId":1132},{"id":489,"name":"serenity","variant":"declaration","kind":32,"flags":{"isExternal":true,"isConst":true},"comment":{"summary":[{"kind":"text","text":"Serenity object is the root object of the Serenity/JS framework."}]},"sources":[{"fileName":"packages/core/src/instance.ts","line":14,"character":13}],"type":{"type":"reference","target":1898,"name":"Serenity","package":"@serenity-js/core"},"defaultValue":"...","permalink":"/api/core#serenity","previousId":67,"nextId":478},{"id":478,"name":"configure","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/instance.ts","line":32,"character":16}],"signatures":[{"id":479,"name":"configure","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures Serenity/JS. Every call to this function\\nreplaces the previous configuration provided,\\nso this function should be called exactly once\\nin your test suite.\\n\\nThis function is an alias for ["},{"kind":"code","text":"`Serenity.configure`"},{"kind":"text","text":"](/api/core/class/Serenity/#configure).\\n\\n:::tip configure vs engage\\n * If you want to retain the configuration but reset the [cast of actors](/api/core/class/Cast/), use ["},{"kind":"code","text":"`engage`"},{"kind":"text","text":"](/api/core/function/engage/) instead.\\n:::"}]},"sources":[{"fileName":"packages/core/src/instance.ts","line":32,"character":16}],"parameters":[{"id":480,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":67,"name":"SerenityConfig","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"void"}}],"permalink":"/api/core/function/configure","previousId":489,"nextId":481},{"id":481,"name":"engage","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/instance.ts","line":145,"character":16}],"signatures":[{"id":482,"name":"engage","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Re-configures Serenity/JS with a new [cast](/api/core/class/Cast/) of [actors](/api/core/class/Actor/)\\nyou want to use in any subsequent calls to ["},{"kind":"code","text":"`actorCalled`"},{"kind":"text","text":"](/api/core/function/actorCalled/).\\n\\nThis function is an alias for ["},{"kind":"code","text":"`Serenity.engage`"},{"kind":"text","text":"](/api/core/class/Serenity/#engage),\\nwhich provides an alternative to calling ["},{"kind":"code","text":"`Actor.whoCan`"},{"kind":"text","text":"](/api/core/class/Actor/#whoCan) directly in your tests\\nand is typically invoked in a \\"before all\\" or \\"before each\\" hook of your test runner of choice.\\n\\n:::tip configure vs engage\\nCalling ["},{"kind":"code","text":"`engage`"},{"kind":"text","text":"](/api/core/function/engage/) replaces the currently configured [cast of actors](/api/core/class/Cast/),\\nbut doesn\'t affect any other configuration.\\nIf you want to reset the Serenity/JS configuration completely, use ["},{"kind":"code","text":"`configure`"},{"kind":"text","text":"](/api/core/function/configure/) instead.\\n:::\\n\\nIf your implementation of the [cast](/api/core/class/Cast/) interface is stateless,\\nyou can invoke this function just once before your entire test suite is executed, see\\n- ["},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":"](https://jasmine.github.io/api/3.6/global.html#beforeAll) in Jasmine,\\n- ["},{"kind":"code","text":"`before`"},{"kind":"text","text":"](https://mochajs.org/#hooks) in Mocha,\\n- ["},{"kind":"code","text":"`BeforeAll`"},{"kind":"text","text":"](https://github.com/cucumber/cucumber-js/blob/master/docs/support_files/hooks.md#beforeall--afterall) in Cucumber.js\\n\\nHowever, if your [cast](/api/core/class/Cast/) holds state that you want to reset before each scenario,\\nit\'s better to invoke "},{"kind":"code","text":"`engage`"},{"kind":"text","text":" before each test using:\\n- ["},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":"](https://jasmine.github.io/api/3.6/global.html#beforeEach) in Jasmine\\n- ["},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":"](https://mochajs.org/#hooks) in Mocha,\\n- ["},{"kind":"code","text":"`Before`"},{"kind":"text","text":"](https://github.com/cucumber/cucumber-js/blob/master/docs/support_files/hooks.md#hooks) in Cucumber.js\\n\\n## Engaging a cast of actors\\n\\n"},{"kind":"code","text":"```ts\\nimport { Actor, Cast } from \'@serenity-js/core\';\\n\\nclass Actors implements Cast {\\n  prepare(actor: Actor) {\\n    return actor.whoCan(\\n      // ... abilities you\'d like the Actor to have\\n    );\\n  }\\n}\\n\\nengage(new Actors());\\n```"},{"kind":"text","text":"\\n\\n### Using with Mocha test runner\\n\\n"},{"kind":"code","text":"```ts\\nimport { beforeEach } from \'mocha\'\\n\\nbeforeEach(() => engage(new Actors()))\\n```"},{"kind":"text","text":"\\n\\n### Using with Jasmine test runner\\n\\n"},{"kind":"code","text":"```typescript\\nimport \'jasmine\'\\n\\ndescribe(\'My feature\', () => {\\n  beforeEach(() => engage(new Actors()))\\n\\n\\n})\\n```"},{"kind":"text","text":"\\n\\n### Using with Cucumber.js test runner\\n\\nEngage "},{"kind":"code","text":"`Actors`"},{"kind":"text","text":" [before](https://github.com/cucumber/cucumber-js/blob/main/docs/support_files/hooks.md)\\neach test scenario:\\n\\n"},{"kind":"code","text":"```typescript\\nimport { Before } from \'@cucumber/cucumber\'\\n\\nBefore(() => engage(new Actors()))\\n```"},{"kind":"text","text":"\\n\\nEngage "},{"kind":"code","text":"`Actors`"},{"kind":"text","text":" before scenarios with [specific tags](https://github.com/cucumber/cucumber-js/blob/main/docs/support_files/hooks.md#tagged-hooks):\\n\\n"},{"kind":"code","text":"```typescript\\nimport { Before } from \'@cucumber/cucumber\'\\n\\nBefore(\'@web\', () => engage(new Actors()))\\n```"},{"kind":"text","text":"\\n\\n### Using with Playwright Test runner\\n\\n[Serenity/JS Playwright Test module](/api/playwright-test) will configure the cast on your behalf,\\nso you don\'t need to call ["},{"kind":"code","text":"`engage`"},{"kind":"text","text":"](/api/core/function/engage/).\\n\\n"},{"kind":"code","text":"```ts\\nimport { describe, it, test } from \'@serenity-js/playwright-test\'\\n\\ndescribe(\'My feature\', () => {\\n\\n  this.use({\\n    actors: new Actors()\\n  })\\n\\n  // test scenarios\\n\\n})\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`Cast`"},{"kind":"text","text":"](/api/core/class/Cast/)\\n- ["},{"kind":"code","text":"`Serenity.engage`"},{"kind":"text","text":"](/api/core/class/Serenity/#engage)"}]},"sources":[{"fileName":"packages/core/src/instance.ts","line":145,"character":16}],"parameters":[{"id":483,"name":"actors","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1947,"name":"Cast","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"void"}}],"permalink":"/api/core/function/engage","previousId":478,"nextId":1947},{"id":484,"name":"actorCalled","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/instance.ts","line":232,"character":16}],"signatures":[{"id":485,"name":"actorCalled","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates or retrieves an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\ncalled "},{"kind":"code","text":"`name`"},{"kind":"text","text":" if one has already been instantiated.\\n\\nThis method is an alias for ["},{"kind":"code","text":"`Serenity.theActorCalled`"},{"kind":"text","text":"](/api/core/class/Serenity/#theActorCalled).\\n\\n## Usage with Cucumber\\n\\n"},{"kind":"code","text":"```typescript\\nimport { actorCalled } from \'@serenity-js/core\';\\nimport { Given } from \'@cucumber/cucumber\';\\n\\nGiven(/(.*?) is a registered user/, async (name: string) => {\\n  await actorCalled(name).attemptsTo(\\n    // ... activities\\n  )\\n})\\n```"},{"kind":"text","text":"\\n\\n## Usage with Jasmine\\n\\n"},{"kind":"code","text":"```typescript\\nimport \'jasmine\';\\nimport { actorCalled } from \'@serenity-js/core\';\\n\\ndescribe(\'Feature\', () => {\\n\\n    it(\'should have some behaviour\', async () {\\n        await actorCalled(\'James\').attemptsTo(\\n            // ... activities\\n        )\\n    })\\n})\\n```"},{"kind":"text","text":"\\n\\n## Usage with Mocha\\n\\n"},{"kind":"code","text":"```typescript\\nimport { describe, it } from \'mocha\';\\nimport { actorCalled } from \'@serenity-js/core\';\\n\\ndescribe(\'Feature\', () => {\\n\\n    it(\'should have some behaviour\', async () => {\\n        await actorCalled(\'James\').attemptsTo(\\n            // ... activities\\n        )\\n    })\\n})\\n```"},{"kind":"text","text":"\\n\\n## Usage with Playwright Test\\n\\nWhen using [Serenity/JS with Playwright Test](/api/playwright-test/), you should use either\\nthe default ["},{"kind":"code","text":"`actor`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityFixtures/#actorCalled) fixture\\nor the injected ["},{"kind":"code","text":"`actorCalled`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityFixtures/#actorCalled) function\\ninstead of importing it from "},{"kind":"code","text":"`@serenity-js/core`"},{"kind":"text","text":".\\n\\n"},{"kind":"code","text":"```typescript\\nimport { describe, it } from \'@serenity-js/playwright-test\';\\n\\ndescribe(\'Feature\', () => {\\n\\n    it(\'should have some behaviour\', async ({ actorCalled }) => {\\n        await actorCalled(\'James\').attemptsTo(\\n            // ... activities\\n        )\\n    })\\n})\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`engage`"},{"kind":"text","text":"](/api/core/function/engage/)\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`Cast`"},{"kind":"text","text":"](/api/core/class/Cast/)\\n- ["},{"kind":"code","text":"`Serenity.theActorCalled`"},{"kind":"text","text":"](/api/core/class/Serenity/#theActorCalled)"}]},"sources":[{"fileName":"packages/core/src/instance.ts","line":232,"character":16}],"parameters":[{"id":486,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The name of the actor to instantiate or retrieve"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":637,"name":"Actor","package":"@serenity-js/core"}}],"permalink":"/api/core/function/actorCalled","previousId":1062,"nextId":487},{"id":487,"name":"actorInTheSpotlight","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/instance.ts","line":270,"character":16}],"signatures":[{"id":488,"name":"actorInTheSpotlight","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Retrieves an actor who was last instantiated or retrieved\\nusing ["},{"kind":"code","text":"`actorCalled`"},{"kind":"text","text":"](/api/core/function/actorCalled/).\\n\\nThis function is particularly useful when automating Cucumber scenarios.\\n\\nThis function is an alias for ["},{"kind":"code","text":"`Serenity.theActorInTheSpotlight`"},{"kind":"text","text":"](/api/core/class/Serenity/#theActorInTheSpotlight).\\n\\n## Usage with Cucumber\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\';\\nimport { Given, When } from \'@cucumber/cucumber\';\\n\\nGiven(/(.*?) is a registered user/, (name: string) =>\\n  actorCalled(name).attemptsTo(\\n    // ... activities\\n  ))\\n\\nWhen(/(?:he|she|they) browse their recent orders/, () =>\\n  actorInTheSpotlight().attemptsTo(\\n    // ... activities\\n  ))\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`engage`"},{"kind":"text","text":"](/api/core/function/engage/)\\n- ["},{"kind":"code","text":"`actorCalled`"},{"kind":"text","text":"](/api/core/function/actorCalled/)\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`Cast`"},{"kind":"text","text":"](/api/core/class/Cast/)"}]},"sources":[{"fileName":"packages/core/src/instance.ts","line":270,"character":16}],"type":{"type":"reference","target":637,"name":"Actor","package":"@serenity-js/core"}}],"permalink":"/api/core/function/actorInTheSpotlight","previousId":484,"nextId":1584},{"id":57,"name":"format","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/io/format.ts","line":70,"character":16}],"signatures":[{"id":58,"name":"format","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"code","text":"`format`"},{"kind":"text","text":" is a factory function returning\\na [tag function](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#Tagged_template_literals)\\nthat produces a human-readable "},{"kind":"code","text":"`string`"},{"kind":"text","text":" description of a template containing\\none or more [answerables](/api/core/#Answerable).\\n\\nTypically, you\'ll want to use "},{"kind":"code","text":"`d`"},{"kind":"text","text":" and "},{"kind":"code","text":"`f`"},{"kind":"text","text":" shorthands instead, or the modern alternative - "},{"kind":"code","text":"`the`"},{"kind":"text","text":":\\n- the ["},{"kind":"code","text":"`d`"},{"kind":"text","text":"](/api/core/function/d/) function works best for generating a **static description** of a parameterised ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/)\\n- the ["},{"kind":"code","text":"`f`"},{"kind":"text","text":"](/api/core/function/f/) function is better suited for debugging\\n- the ["},{"kind":"code","text":"`the`"},{"kind":"text","text":"](/api/core/function/f/) function works best for generating a **dynamic description** of a parameterised ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/)\\n\\n:::tip Use "},{"kind":"code","text":"`the`"},{"kind":"text","text":" instead of "},{"kind":"code","text":"`format`"},{"kind":"text","text":"\\n"},{"kind":"code","text":"`format`"},{"kind":"text","text":", "},{"kind":"code","text":"`d`"},{"kind":"text","text":" and "},{"kind":"code","text":"`f`"},{"kind":"text","text":" are the original Serenity/JS string formatting functions,\\nstill present in the framework for backwards compatibility purposes.\\n\\nTo generate a dynamic description of a "},{"kind":"code","text":"`Question`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":",\\nuse ["},{"kind":"code","text":"`the`"},{"kind":"text","text":"](/api/core/function/the/) function instead.\\n:::\\n\\n## Using "},{"kind":"code","text":"`format`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport { format, Question } from \'@serenity-js/core\'\\n\\nconst someQuestion = () =>\\n  Question.about(\'some question\', actor => \'some value\')\\n\\nformat({ markQuestions: true }) `actor answers ${ question() }`\\n // returns: actor answers <<some question>>\\n\\nformat({ markQuestions: false }) `actor answers ${ question() }`\\n // returns: actor answers some question\\n```"},{"kind":"text","text":"\\n\\n## Using "},{"kind":"code","text":"`d`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport { d, Question } from \'@serenity-js/core\'\\n\\nconst someQuestion = () =>\\n  Question.about(\'some question\', actor => \'some value\')\\n\\nd`actor answers ${ question() }`\\n // returns: actor answers <<some question>>\\n```"},{"kind":"text","text":"\\n\\n## Using "},{"kind":"code","text":"`f`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport { f, Question } from \'@serenity-js/core\'\\n\\nconst someQuestion = () =>\\n  Question.about(\'some question\', actor => \'some value\')\\n\\nf`actor answers ${ question() }`\\n // returns: actor answers <<some question>>\\n\\nformat({ markQuestions: false }) `actor answers ${ question() }`\\n // returns: actor answers <<some question>>\\n```"}]},"sources":[{"fileName":"packages/core/src/io/format.ts","line":70,"character":16}],"parameters":[{"id":59,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"code","text":"`markQuestions`"},{"kind":"text","text":": boolean - if set to true, descriptions of questions passed in as arguments will be surrounded with double angled brackets, i.e. "},{"kind":"code","text":"`<<description>>`"}]},"type":{"type":"reflection","declaration":{"id":60,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":61,"name":"markQuestions","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/io/format.ts","line":70,"character":33}],"type":{"type":"intrinsic","name":"boolean"}}],"groups":[{"title":"Properties","children":[61]}],"sources":[{"fileName":"packages/core/src/io/format.ts","line":70,"character":31}]}}}],"type":{"type":"reflection","declaration":{"id":62,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/io/format.ts","line":70,"character":60}],"signatures":[{"id":63,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"parameters":[{"id":64,"name":"templates","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"TemplateStringsArray"},"name":"TemplateStringsArray","package":"typescript"}},{"id":65,"name":"placeholders","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Answerable","package":"@serenity-js/core"}}}],"type":{"type":"intrinsic","name":"string"}}]}}}],"permalink":"/api/core/function/format","previousId":908,"nextId":53},{"id":53,"name":"f","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/io/format.ts","line":82,"character":13}],"signatures":[{"id":54,"name":"f","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/io/format.ts","line":82,"character":13}],"parameters":[{"id":55,"name":"templates","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"TemplateStringsArray"},"name":"TemplateStringsArray","package":"typescript"}},{"id":56,"name":"placeholders","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/api/core/function/f","previousId":57,"nextId":49},{"id":49,"name":"d","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/io/format.ts","line":85,"character":13}],"signatures":[{"id":50,"name":"d","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/io/format.ts","line":85,"character":13}],"parameters":[{"id":51,"name":"templates","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"TemplateStringsArray"},"name":"TemplateStringsArray","package":"typescript"}},{"id":52,"name":"placeholders","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/api/core/function/d","previousId":53,"nextId":688},{"id":610,"name":"Activity","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"**Activities** represents [tasks](/api/core/class/Task/) and [interactions](/api/core/class/Interaction/) to be performed by an [actor](/api/core/class/Actor/).\\n\\nLearn more about:\\n- [Performing activities at multiple levels](/handbook/design/screenplay-pattern#performing-activities-at-multiple-levels)\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`PerformsActivities`"},{"kind":"text","text":"](/api/core/interface/PerformsActivities/)\\n- [Command design pattern on Wikipedia](https://en.wikipedia.org/wiki/Command_pattern)"}]},"children":[{"id":615,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":27,"character":4}],"signatures":[{"id":616,"name":"new Activity","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":27,"character":4}],"parameters":[{"id":617,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":618,"name":"location","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"defaultValue":"..."}],"type":{"type":"reference","target":610,"name":"Activity","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"Describable.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"Describable.constructor"}},{"id":620,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":38,"character":4}],"signatures":[{"id":621,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":38,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"}}]},{"id":622,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":53,"character":13}],"signatures":[{"id":623,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the provided ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to perform this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/)."}]},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":53,"character":13}],"parameters":[{"id":624,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"#### Learn more\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`PerformsActivities`"},{"kind":"text","text":"](/api/core/interface/PerformsActivities/)\\n- ["},{"kind":"code","text":"`UsesAbilities`"},{"kind":"text","text":"](/api/core/interface/UsesAbilities/)\\n- ["},{"kind":"code","text":"`AnswersQuestions`"},{"kind":"text","text":"](/api/core/interface/AnswersQuestions/)"}]},"type":{"type":"union","types":[{"type":"reference","target":600,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":1049,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":605,"name":"PerformsActivities","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":625,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"signatures":[{"id":626,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"parameters":[{"id":627,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1049,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":600,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":628,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":629,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":66}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[629]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":64}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":1118,"name":"Describable.describedBy"}}],"inheritedFrom":{"type":"reference","target":1117,"name":"Describable.describedBy"}},{"id":635,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"signatures":[{"id":636,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":1128,"name":"Describable.toString"}}],"inheritedFrom":{"type":"reference","target":1127,"name":"Describable.toString"}}],"groups":[{"title":"Constructors","children":[615]},{"title":"Methods","children":[620,622,625,635]}],"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":22,"character":22}],"extendedTypes":[{"type":"reference","target":1113,"name":"Describable","package":"@serenity-js/core"}],"extendedBy":[{"type":"reference","target":793,"name":"Interaction"},{"type":"reference","target":1587,"name":"Task"}],"permalink":"/api/core/class/Activity","previousId":1563,"nextId":637},{"id":637,"name":"Actor","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"**Actors** represent **people** and **external systems** interacting with the system under test.\\nTheir role is to perform [activities](/api/core/class/Activity/) that demonstrate how to accomplish a given goal.\\n\\nActors are the core building block of the [Screenplay Pattern](/handbook/design/screenplay-pattern),\\nalong with [abilities](/api/core/class/Ability/), [interactions](/api/core/class/Interaction/), [tasks](/api/core/class/Task/), and [questions](/api/core/class/Question/).\\nActors are also the first thing you see in a typical Serenity/JS test scenario.\\n\\n![Screenplay Pattern](/images/design/serenity-js-screenplay-pattern.png)\\n\\nLearn more about:\\n- ["},{"kind":"code","text":"`Cast`"},{"kind":"text","text":"](/api/core/class/Cast/)\\n- ["},{"kind":"code","text":"`Stage`"},{"kind":"text","text":"](/api/core/class/Stage/)\\n- ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/)\\n- ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/)\\n- ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/)\\n- ["},{"kind":"code","text":"`Task`"},{"kind":"text","text":"](/api/core/class/Task/)\\n- ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/)\\n\\n## Representing people and systems as actors\\n\\nTo use a Serenity/JS ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/), all you need is to say their name:\\n\\n"},{"kind":"code","text":"```typescript\\nimport { actorCalled } from \'@serenity-js/core\'\\n\\nactorCalled(\'Alice\')\\n// returns: Actor\\n```"},{"kind":"text","text":"\\n\\nSerenity/JS actors perform within the scope of a test scenario, so the first time you invoke ["},{"kind":"code","text":"`actorCalled`"},{"kind":"text","text":"](/api/core/function/actorCalled/),\\nSerenity/JS instantiates a new actor from the default [cast](/api/core/class/Cast/) of actors (or any custom cast you might have [configured](/api/core/function/configure/)).\\nAny subsequent invocations of this function within the scope of the same test scenario retrieve the already instantiated actor, identified by their name.\\n\\n"},{"kind":"code","text":"```typescript\\nimport { actorCalled } from \'@serenity-js/core\'\\n\\nactorCalled(\'Alice\')    // instantiates Alice\\nactorCalled(\'Bob\')      // instantiates Bob\\nactorCalled(\'Alice\')    // retrieves Alice, since she\'s already been instantiated\\n```"},{"kind":"text","text":"\\n\\nSerenity/JS scenarios can involve as many or as few actors as you need to model the given business workflow.\\nFor example, you might want to use **multiple actors** in test scenarios that model how **different people** perform different parts of a larger business process, such as reviewing and approving a loan application.\\nIt is also quite common to introduce **supporting actors** to perform **administrative tasks**, like setting up test data and environment, or **audit tasks**, like checking the logs or messages emitted to a message queue\\nby the system under test.\\n\\n:::info The Stan Lee naming convention\\nActor names can be much more than just simple identifiers like "},{"kind":"code","text":"`Alice`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Bob`"},{"kind":"text","text":". While you can give your actors any names you like, a good convention to follow is to give them\\nnames indicating the [personae](https://articles.uie.com/goodwin_interview/) they represent or the role they play in the system.\\n\\nJust like the characters in [Stan Lee](https://en.wikipedia.org/wiki/Stan_Lee) graphic novels,\\nactors in Serenity/JS test scenarios are often given alliterate names as a mnemonic device.\\nNames like \\"Adam the Admin\\", \\"Edna the Editor\\", \\"Trevor the Traveller\\", are far more memorable than a generic \\"UI user\\" or \\"API user\\".\\nThey\'re also much easier for people to associate with the context, constraints, and affordances of the given actor.\\n:::"}]},"children":[{"id":638,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":85,"character":4}],"signatures":[{"id":639,"name":"new Actor","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":85,"character":4}],"parameters":[{"id":640,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":641,"name":"stage","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":2103,"name":"Stage","package":"@serenity-js/core"}},{"id":642,"name":"abilities","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"reference","target":490,"name":"Ability","package":"@serenity-js/core"}},"defaultValue":"[]"}],"type":{"type":"reference","target":637,"name":"Actor","package":"@serenity-js/core"}}]},{"id":644,"name":"name","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":86,"character":24}],"type":{"type":"intrinsic","name":"string"}},{"id":646,"name":"abilityTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":108,"character":4}],"signatures":[{"id":647,"name":"abilityTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Retrieves actor\'s ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/) of "},{"kind":"code","text":"`abilityType`"},{"kind":"text","text":", or one that extends "},{"kind":"code","text":"`abilityType`"},{"kind":"text","text":".\\n\\nPlease note that this method performs an ["},{"kind":"code","text":"`instanceof`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/instanceof) check against abilities\\ngiven to this actor via ["},{"kind":"code","text":"`Actor.whoCan`"},{"kind":"text","text":"](/api/core/class/Actor/#whoCan).\\n\\nPlease also note that ["},{"kind":"code","text":"`Actor.whoCan`"},{"kind":"text","text":"](/api/core/class/Actor/#whoCan) performs the same check when abilities are assigned to the actor\\nto ensure the actor has at most one instance of a given ability type."}]},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":108,"character":4}],"typeParameter":[{"id":648,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":490,"name":"Ability","package":"@serenity-js/core"}}],"parameters":[{"id":649,"name":"abilityType","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":511,"typeArguments":[{"type":"reference","target":648,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"AbilityType","package":"@serenity-js/core"}}],"type":{"type":"reference","target":648,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true},"implementationOf":{"type":"reference","target":602,"name":"UsesAbilities.abilityTo"}}],"implementationOf":{"type":"reference","target":601,"name":"UsesAbilities.abilityTo"}},{"id":650,"name":"attemptsTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Makes the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) attempt to perform a sequence of [activities](/api/core/class/Activity/)."}]},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":129,"character":4}],"signatures":[{"id":651,"name":"attemptsTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the actor to attempt to perform a number of [activities](/api/core/class/Activity/),\\nso either [tasks](/api/core/class/Task/) or [interactions](/api/core/class/Interaction/)),\\none by one."}]},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":129,"character":4}],"parameters":[{"id":652,"name":"activities","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":610,"name":"Activity","package":"@serenity-js/core"}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"implementationOf":{"type":"reference","target":606,"name":"PerformsActivities.attemptsTo"}}],"implementationOf":{"type":"reference","target":606,"name":"PerformsActivities.attemptsTo"}},{"id":653,"name":"whoCan","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":150,"character":4}],"signatures":[{"id":654,"name":"whoCan","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Gives this Actor a list of [abilities](/api/core/class/Ability/) they can use\\nto interact with the system under test or the test environment."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"The actor with newly gained abilities"}]},{"tag":"@throws","content":[{"kind":"text","text":"["},{"kind":"code","text":"`ConfigurationError`"},{"kind":"text","text":"](/api/core/class/ConfigurationError/)\\n Throws a ConfigurationError if the actor already has an ability of this type."}]}]},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":150,"character":4}],"parameters":[{"id":655,"name":"abilities","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"comment":{"summary":[{"kind":"text","text":"A vararg list of abilities to give the actor"}]},"type":{"type":"array","elementType":{"type":"reference","target":490,"name":"Ability","package":"@serenity-js/core"}}}],"type":{"type":"reference","target":637,"name":"Actor","package":"@serenity-js/core"},"implementationOf":{"type":"reference","target":550,"name":"CanHaveAbilities.whoCan"}}],"implementationOf":{"type":"reference","target":549,"name":"CanHaveAbilities.whoCan"}},{"id":656,"name":"answer","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":163,"character":4}],"signatures":[{"id":657,"name":"answer","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"The answer to the Answerable"}]}]},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":163,"character":4}],"typeParameter":[{"id":658,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":659,"name":"answerable","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable) to answer (resolve the value of)."}]},"type":{"type":"reference","target":688,"typeArguments":[{"type":"reference","target":658,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":658,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"implementationOf":{"type":"reference","target":1051,"name":"AnswersQuestions.answer"}}],"implementationOf":{"type":"reference","target":1050,"name":"AnswersQuestions.answer"}},{"id":660,"name":"collect","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":170,"character":4}],"signatures":[{"id":661,"name":"collect","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Makes the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) collect an artifact so that it can be included in the test report.\\n\\n#### Implementing a custom interaction to attach artifacts\\n\\n"},{"kind":"code","text":"```ts\\nimport * as fs from \'node:fs\'\\nimport { Answerable, Interaction, the } from \'@serenity-js/core\'\\nimport { Path } from \'@serenity-js/core/lib/io\'\\nimport { Name, TextData } from \'@serenity-js/core/lib/model\'\\n\\nexport class Attach {\\n\\n  static contentsOf = (pathToFile: Path): Interaction =>\\n    Interaction.where(`#actor attaches contents of ${ pathToFile.basename() }`, async actor => {\\n      const data = fs.readFileSync(pathToFile.value).toString(\'utf-8\');\\n\\n      actor.collect(\\n        TextData.fromJSON({ contentType: \'text/plain\', data }),\\n        new Name(pathToFile.basename()),\\n      )\\n    })\\n\\n  static textData = (contents: Answerable<string>, name?: string): Interaction =>\\n    Interaction.where(the`#actor attaches text data`, async actor => {\\n      const data = await actor.answer(contents);\\n\\n      actor.collect(\\n        TextData.fromJSON({ contentType: \'text/plain\', data }),\\n        name && new Name(name),\\n      )\\n    })\\n}\\n```"},{"kind":"text","text":"\\n\\n#### Attaching plain text\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Path } from \'@serenity-js/core/lib/io\'\\n\\nactorCalled(\'Alice\').attemptsTo(\\n  Attach.textData(\'some text\', \'some name\'),\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Attaching contents of a text file\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Log } from \'@serenity-js/core\'\\n\\nactorCalled(\'Alice\').attemptsTo(\\n  Attach.contentsOf(Path.from(__dirname, \'output/server.log\')),\\n)\\n```"}]},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":170,"character":4}],"parameters":[{"id":662,"name":"artifact","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The artifact to be collected, such as "},{"kind":"code","text":"`JSON`"},{"kind":"text","text":" data."}]},"type":{"type":"reference","name":"Artifact","package":"@serenity-js/core"}},{"id":663,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The name of the artifact to make it easy to recognise in the test report"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"Name","package":"@serenity-js/core"}]}}],"type":{"type":"intrinsic","name":"void"},"implementationOf":{"type":"reference","target":694,"name":"CollectsArtifacts.collect"}}],"implementationOf":{"type":"reference","target":693,"name":"CollectsArtifacts.collect"}},{"id":664,"name":"currentTime","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":183,"character":4}],"signatures":[{"id":665,"name":"currentTime","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns current time."}]},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":183,"character":4}],"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"},"implementationOf":{"type":"reference","target":1895,"name":"TellsTime.currentTime"}}],"implementationOf":{"type":"reference","target":1894,"name":"TellsTime.currentTime"}},{"id":666,"name":"dismiss","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":191,"character":4}],"signatures":[{"id":667,"name":"dismiss","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the actor to invoke ["},{"kind":"code","text":"`Discardable.discard`"},{"kind":"text","text":"](/api/core/interface/Discardable/#discard) method on any\\n[discardable](/api/core/interface/Discardable/) [ability](/api/core/class/Ability/) it\'s been configured with."}]},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":191,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":668,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":205,"character":4}],"signatures":[{"id":669,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable, string representation of this actor and their abilities.\\n\\n**PRO TIP:** To get the name of the actor, use ["},{"kind":"code","text":"`Actor.name`"},{"kind":"text","text":"](/api/core/class/Actor/#name)"}]},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":205,"character":4}],"type":{"type":"intrinsic","name":"string"}}]},{"id":670,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":217,"character":4}],"signatures":[{"id":671,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a JSON representation of the actor and its current state.\\n\\nThe purpose of this method is to enable reporting the state of the actor in a human-readable format,\\nrather than to serialise and deserialise the actor itself."}]},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":217,"character":4}],"type":{"type":"reference","target":1584,"name":"SerialisedActor","package":"@serenity-js/core"}}]}],"groups":[{"title":"Constructors","children":[638]},{"title":"Properties","children":[644]},{"title":"Methods","children":[646,650,653,656,660,664,666,668,670]}],"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":76,"character":13}],"implementedTypes":[{"type":"reference","target":605,"name":"PerformsActivities","package":"@serenity-js/core"},{"type":"reference","target":600,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":548,"typeArguments":[{"type":"reference","target":637,"name":"Actor","package":"@serenity-js/core"}],"name":"CanHaveAbilities","package":"@serenity-js/core"},{"type":"reference","target":1049,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":692,"name":"CollectsArtifacts","package":"@serenity-js/core"},{"type":"reference","target":1893,"name":"TellsTime","package":"@serenity-js/core"}],"permalink":"/api/core/class/Actor","previousId":610,"nextId":793},{"id":688,"name":"Answerable","variant":"declaration","kind":2097152,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A union type that provides a convenient way to represent any value\\nthat can be resolved by ["},{"kind":"code","text":"`Actor.answer`"},{"kind":"text","text":"](/api/core/class/Actor/#answer)."}]},"sources":[{"fileName":"packages/core/src/screenplay/Answerable.ts","line":9,"character":12}],"typeParameters":[{"id":689,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"type":{"type":"union","types":[{"type":"reference","target":939,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":689,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"},{"type":"reference","target":939,"typeArguments":[{"type":"reference","target":689,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Question","package":"@serenity-js/core"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":689,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},{"type":"reference","target":689,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true}]},"permalink":"/api/core#Answerable","previousId":49,"nextId":690},{"id":690,"name":"Answered","variant":"declaration","kind":2097152,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Describes the type of answer a given ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable) would\\nresolve to when given to ["},{"kind":"code","text":"`Actor.answer`"},{"kind":"text","text":"](/api/core/class/Actor/#answer).\\n\\n"},{"kind":"code","text":"```ts\\nAnswered<Answerable<T>> === T\\n```"}]},"sources":[{"fileName":"packages/core/src/screenplay/Answered.ts","line":13,"character":12}],"typeParameters":[{"id":691,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"type":{"type":"conditional","checkType":{"type":"reference","target":691,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true},"extendsType":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"undefined"}]},"trueType":{"type":"reference","target":691,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true},"falseType":{"type":"conditional","checkType":{"type":"reference","target":691,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true},"extendsType":{"type":"union","types":[{"type":"reference","target":939,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"inferred","name":"A"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"},{"type":"reference","target":939,"typeArguments":[{"type":"inferred","name":"A"}],"name":"Question","package":"@serenity-js/core"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"inferred","name":"A"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]},"trueType":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Awaited"},"typeArguments":[{"type":"reference","name":"A","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Awaited","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#awaitedtype"},"falseType":{"type":"reference","target":691,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true}}},"permalink":"/api/core#Answered","previousId":688,"nextId":936},{"id":793,"name":"Interaction","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"**Interactions** are low-level [activities](/api/core/class/Activity/) that encapsulate\\na handful of instructions for an [actor](/api/core/class/Actor/) on how to use their [abilities](/api/core/class/Ability/)\\nto perform an individual interaction with the given interface of the system under test.\\n\\n:::tip Tasks or interactions?\\nBecause of their low-level nature, interactions are named using the vocabulary of the [solution domain](https://blog.mattwynne.net/2013/01/17/the-problem-with-solutions/),\\nand represent an individual interaction with the given interface, e.g. ["},{"kind":"code","text":"`Click`"},{"kind":"text","text":"](/api/web/class/Click/), ["},{"kind":"code","text":"`Enter`"},{"kind":"text","text":"](/api/web/class/Enter/), or ["},{"kind":"code","text":"`Send`"},{"kind":"text","text":"](/api/rest/class/Send/).\\n\\nInteractions follow the [Single Responsibility Principle](https://en.wikipedia.org/wiki/Single_responsibility_principle) which means that they do _one thing and one thing only_.\\nIf you\'re considering implementing an \\"interaction\\" that performs more than one logical activity, e.g. checks if the button is visible and then clicks on it if is,\\nconsider using separate interactions for separate responsibilities and then composing them using a [task](/api/core/class/Task/).\\n:::\\n\\nInteractions are the core building block of the [Screenplay Pattern](/handbook/design/screenplay-pattern),\\nalong with [actors](/api/core/class/Actor/), [abilities](/api/core/class/Ability/), [questions](/api/core/class/Question/), and [tasks](/api/core/class/Task/).\\n\\n![Screenplay Pattern](/images/design/serenity-js-screenplay-pattern.png)\\n\\nLearn more about:\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- [Abilities](/api/core/class/Ability/)\\n- [Activities](/api/core/class/Activity/)\\n\\n## Writing a custom interaction\\n\\n[Serenity/JS modules](/handbook/getting-started/architecture) ship with dozens of interactions to help you compose your test scenarios.\\nHowever, if you need to interact with a non-standard interface, or want to create a flavour of a given interaction that behaves slightly differently than the built-in version,\\nyou can easily create your own implementations using the ["},{"kind":"code","text":"`Interaction.where`"},{"kind":"text","text":"](/api/core/class/Interaction/#where) factory method.\\n\\n"},{"kind":"code","text":"```ts\\nimport { Actor, Interaction, the } from \'@serenity-js/core\'\\nimport { BrowseTheWeb, Page } from \'@serenity-js/web\'\\n\\nexport const ClearLocalStorage = () =>\\n  Interaction.where(the`#actor clears local storage`, async (actor: Actor) => {\\n    // Interaction to ClearLocalStorage directly uses Actor\'s ability to BrowseTheWeb\\n    const page: Page = await BrowseTheWeb.as(actor).currentPage()\\n    await page.executeScript(() => window.localStorage.clear())\\n  })\\n```"},{"kind":"text","text":"\\n\\n## Using a custom interaction\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\';\\nimport { BrowseTheWebWithPlaywright } from \'@serenity-js/playwright\'\\nimport { By, Navigate, PageElement } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { Browser, chromium } from \'playwright\'\\n\\nconst browser = await chromium.launch({ headless: true })\\n\\nawait actorCalled(\'In\xeas\')\\n  .whoCan(BrowseTheWebWithPlaywright.using(browser))\\n  .attemptsTo(\\n    Navigate.to(`https://serenity-js.org`),\\n    ClearLocalStorage(), // reported as \\"In\xeas clears local storage\\"\\n  )\\n```"}]},"children":[{"id":794,"name":"where","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Interaction.ts","line":79,"character":11}],"signatures":[{"id":795,"name":"where","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Interaction.ts","line":79,"character":11}],"parameters":[{"id":796,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Description to be used when reporting this interaction, for example "},{"kind":"code","text":"`#actor clears local storage`"},{"kind":"text","text":".\\n Note that "},{"kind":"code","text":"`#actor`"},{"kind":"text","text":" will be replaced with the name of the actor performing this interaction."}]},"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":797,"name":"interaction","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":798,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Interaction.ts","line":81,"character":21}],"signatures":[{"id":799,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Interaction.ts","line":81,"character":21}],"parameters":[{"id":800,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":600,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":1049,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":692,"name":"CollectsArtifacts","package":"@serenity-js/core"}]}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"void"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reference","target":793,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":804,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":27,"character":4}],"signatures":[{"id":805,"name":"new Interaction","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":27,"character":4}],"parameters":[{"id":806,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":807,"name":"location","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"defaultValue":"..."}],"type":{"type":"reference","target":793,"name":"Interaction","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":616,"name":"Activity.constructor"}}],"inheritedFrom":{"type":"reference","target":615,"name":"Activity.constructor"}},{"id":812,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":38,"character":4}],"signatures":[{"id":813,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":38,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":621,"name":"Activity.instantiationLocation"}}],"inheritedFrom":{"type":"reference","target":620,"name":"Activity.instantiationLocation"}},{"id":808,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/core/src/screenplay/Interaction.ts","line":97,"character":13}],"signatures":[{"id":809,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the provided ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to perform this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/).\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`PerformsActivities`"},{"kind":"text","text":"](/api/core/interface/PerformsActivities/)\\n- ["},{"kind":"code","text":"`UsesAbilities`"},{"kind":"text","text":"](/api/core/interface/UsesAbilities/)\\n- ["},{"kind":"code","text":"`AnswersQuestions`"},{"kind":"text","text":"](/api/core/interface/AnswersQuestions/)"}]},"sources":[{"fileName":"packages/core/src/screenplay/Interaction.ts","line":97,"character":13}],"parameters":[{"id":810,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":600,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":1049,"name":"AnswersQuestions","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":623,"name":"Activity.performAs"}}],"overwrites":{"type":"reference","target":622,"name":"Activity.performAs"}},{"id":814,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"signatures":[{"id":815,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"parameters":[{"id":816,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1049,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":600,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":817,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":818,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":66}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[818]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":64}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":626,"name":"Activity.describedBy"}}],"inheritedFrom":{"type":"reference","target":625,"name":"Activity.describedBy"}},{"id":824,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"signatures":[{"id":825,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":636,"name":"Activity.toString"}}],"inheritedFrom":{"type":"reference","target":635,"name":"Activity.toString"}}],"groups":[{"title":"Constructors","children":[804]},{"title":"Methods","children":[794,812,808,814,824]}],"sources":[{"fileName":"packages/core/src/screenplay/Interaction.ts","line":70,"character":22}],"extendedTypes":[{"type":"reference","target":610,"name":"Activity","package":"@serenity-js/core"}],"extendedBy":[{"type":"reference","target":697,"name":"Debug"},{"type":"reference","target":757,"name":"Log"},{"type":"reference","target":1668,"name":"WaitUntil"}],"permalink":"/api/core/class/Interaction","previousId":637,"nextId":939},{"id":936,"name":"Optional","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"code","text":"`Optional`"},{"kind":"text","text":" is a container object, which holds a value that may or may not be \\"present\\",\\n\\nThe meaning of being \\"present\\" depends on the context and typically means a value that:\\n- is other than "},{"kind":"code","text":"`null`"},{"kind":"text","text":" or "},{"kind":"code","text":"`undefined`"},{"kind":"text","text":"\\n- is retrievable, so retrieving it doesn\'t throw any errors\\n\\nAdditionally, "},{"kind":"code","text":"`Optional`"},{"kind":"text","text":" can also have a context-specific meaning. For example, "},{"kind":"code","text":"`Optional#isPresent()`"},{"kind":"text","text":":\\n- in the context of a "},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":" means that the element exists in the DOM.\\n- in the context of a "},{"kind":"code","text":"`ModalWindow`"},{"kind":"text","text":" means that the modal window is open.\\n- in the case of a REST API response, "},{"kind":"code","text":"`LastResponse.body().books[0].author.name.isPresent()`"},{"kind":"text","text":"\\n  will inform us if a given entry exists (so "},{"kind":"code","text":"`books[0].author.name`"},{"kind":"text","text":"),\\n  and if all the links of the property chain leading to the entry of interest exist too\\n  (so "},{"kind":"code","text":"`books`"},{"kind":"text","text":" is present, and so is "},{"kind":"code","text":"`books[0]`"},{"kind":"text","text":", "},{"kind":"code","text":"`books[0].author`"},{"kind":"text","text":", "},{"kind":"code","text":"`books[0].author.name`"},{"kind":"text","text":")."}]},"children":[{"id":937,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Optional.ts","line":25,"character":4}],"signatures":[{"id":938,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns an ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable) that resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":" when the optional value\\nis present, "},{"kind":"code","text":"`false`"},{"kind":"text","text":" otherwise."}]},"sources":[{"fileName":"packages/core/src/screenplay/Optional.ts","line":25,"character":4}],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Answerable","package":"@serenity-js/core"}}]}],"groups":[{"title":"Methods","children":[937]}],"sources":[{"fileName":"packages/core/src/screenplay/Optional.ts","line":20,"character":17}],"permalink":"/api/core/interface/Optional","previousId":690,"nextId":1029},{"id":939,"name":"Question","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"**Questions** describe how [actors](/api/core/class/Actor/) should query the system under test or the test environment to retrieve some information.\\n\\nQuestions are the core building block of the [Screenplay Pattern](/handbook/design/screenplay-pattern),\\nalong with [actors](/api/core/class/Actor/), [abilities](/api/core/class/Ability/),\\n[interactions](/api/core/class/Interaction/),\\nand [tasks](/api/core/class/Task/).\\n\\n![Screenplay Pattern](/images/design/serenity-js-screenplay-pattern.png)\\n\\nLearn more about:\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/)\\n- ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/)\\n- ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter)\\n\\n## Implementing a basic custom Question\\n\\n"},{"kind":"code","text":"```ts\\n import { actorCalled, AnswersQuestions, UsesAbilities, Question } from \'@serenity-js/core\'\\n import { Ensure, equals } from \'@serenity-js/assertions\'\\n\\n const LastItemOf = <T>(list: T[]): Question<T> =>\\n   Question.about(\'last item from the list\', (actor: AnswersQuestions & UsesAbilities) => {\\n     return list[list.length - 1]\\n   });\\n\\n await actorCalled(\'Quentin\').attemptsTo(\\n   Ensure.that(LastItemFrom([1,2,3]), equals(3)),\\n )\\n```"},{"kind":"text","text":"\\n\\n## Implementing a Question that uses an Ability\\n\\nJust like the [interactions](/api/core/class/Interaction/), a ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/)\\nalso can use [actor\'s](/api/core/class/Actor/) [abilities](/api/core/class/Ability/).\\n\\nHere, we use the ability to ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/) to retrieve a property of\\nan HTTP response.\\n\\n"},{"kind":"code","text":"```ts\\n import { AnswersQuestions, UsesAbilities, Question } from \'@serenity-js/core\'\\n import { CallAnApi } from \'@serenity-js/rest\'\\n\\n const TextOfLastResponseStatus = () =>\\n   Question.about<number>(`the text of the last response status`, actor => {\\n     return CallAnApi.as(actor).mapLastResponse(response => response.statusText)\\n   })\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/)\\n- ["},{"kind":"code","text":"`LastResponse`"},{"kind":"text","text":"](/api/rest/class/LastResponse/)\\n\\n## Mapping answers to other questions\\n\\nApart from retrieving information, [questions](/api/core/class/Question/) can be used to transform information retrieved by other questions.\\n\\nHere, we use the factory method ["},{"kind":"code","text":"`Question.about`"},{"kind":"text","text":"](/api/core/class/Question/#about) to produce a question that makes the received [actor](/api/core/class/Actor/)\\nanswer ["},{"kind":"code","text":"`LastResponse.status`"},{"kind":"text","text":"](/api/rest/class/LastResponse/#status) and then compare it against some expected value.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, AnswersQuestions, UsesAbilities, Question } from \'@serenity-js/core\'\\nimport { CallAnApi, LastResponse } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nconst RequestWasSuccessful = () =>\\n  Question.about<number>(`the text of the last response status`, async actor => {\\n    const status = await actor.answer(LastResponse.status());\\n\\n    return status === 200;\\n  })\\n\\nawait actorCalled(\'Quentin\')\\n  .whoCan(CallAnApi.at(\'https://api.example.org/\'));\\n  .attemptsTo(\\n    Send.a(GetRequest.to(\'/books/0-688-00230-7\')),\\n    Ensure.that(RequestWasSuccessful(), isTrue()),\\n  )\\n```"},{"kind":"text","text":"\\n\\nNote that the above example is for demonstration purposes only, Serenity/JS provides an easier way to\\nverify the response status of the ["},{"kind":"code","text":"`LastResponse`"},{"kind":"text","text":"](/api/rest/class/LastResponse/):\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, LastResponse } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Quentin\')\\n  .whoCan(CallAnApi.at(\'https://api.example.org/\'));\\n  .attemptsTo(\\n    Send.a(GetRequest.to(\'/books/0-688-00230-7\')),\\n    Ensure.that(LastResponse.status(), equals(200)),\\n  )\\n```"}]},"children":[{"id":940,"name":"about","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":137,"character":11},{"fileName":"packages/core/src/screenplay/Question.ts","line":143,"character":11},{"fileName":"packages/core/src/screenplay/Question.ts","line":148,"character":11}],"signatures":[{"id":941,"name":"about","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Factory method that simplifies the process of defining custom questions.\\n\\n#### Defining a custom question\\n\\n"},{"kind":"code","text":"```ts\\nimport { Question } from \'@serenity-js/core\'\\n\\nconst EnvVariable = (name: string) =>\\n  Question.about(`the ${ name } env variable`, actor => process.env[name])\\n```"}]},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":137,"character":11}],"typeParameter":[{"id":942,"name":"Answer_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":943,"name":"Supported_Context_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":944,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":945,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":946,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":139,"character":14}],"signatures":[{"id":947,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":139,"character":14}],"parameters":[{"id":948,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1049,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":600,"name":"UsesAbilities","package":"@serenity-js/core"}]}}],"type":{"type":"union","types":[{"type":"reference","target":942,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":942,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}},{"id":949,"name":"metaQuestionBody","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reflection","declaration":{"id":950,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":140,"character":26}],"signatures":[{"id":951,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":140,"character":26}],"parameters":[{"id":952,"name":"answerable","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":688,"typeArguments":[{"type":"reference","target":943,"name":"Supported_Context_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"union","types":[{"type":"reference","target":939,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":942,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"},{"type":"reference","target":939,"typeArguments":[{"type":"reference","target":942,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Question","package":"@serenity-js/core"}]}}]}}}],"type":{"type":"reference","target":1046,"typeArguments":[{"type":"reference","target":943,"name":"Supported_Context_Type","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Awaited"},"typeArguments":[{"type":"reference","target":942,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Awaited","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#awaitedtype"}],"name":"MetaQuestionAdapter","package":"@serenity-js/core"}},{"id":953,"name":"about","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":143,"character":11}],"typeParameter":[{"id":954,"name":"Answer_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":955,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":956,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":957,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":145,"character":14}],"signatures":[{"id":958,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":145,"character":14}],"parameters":[{"id":959,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1049,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":600,"name":"UsesAbilities","package":"@serenity-js/core"}]}}],"type":{"type":"union","types":[{"type":"reference","target":954,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":954,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reference","target":1041,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Awaited"},"typeArguments":[{"type":"reference","target":954,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Awaited","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#awaitedtype"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":960,"name":"fromObject","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":225,"character":11}],"signatures":[{"id":961,"name":"fromObject","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Generates a ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter) that recursively resolves\\nany ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable) fields of the provided object,\\nincluding ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable) fields\\nof [nested objects](/api/core/#WithAnswerableProperties).\\n\\nOptionally, the method accepts "},{"kind":"code","text":"`overrides`"},{"kind":"text","text":" to be shallow-merged with the fields of the original "},{"kind":"code","text":"`source`"},{"kind":"text","text":",\\nproducing a new merged object.\\n\\nOverrides are applied from left to right, with subsequent objects overwriting property assignments of the previous ones.\\n\\n#### Resolving an object recursively using "},{"kind":"code","text":"`Question.fromObject`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Question } from \'@serenity-js/core\'\\nimport { Send, PostRequest } from \'@serenity-js/rest\'\\nimport { By, Text, PageElement } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Daisy\')\\n  .whoCan(CallAnApi.at(\'https://api.example.org\'))\\n  .attemptsTo(\\n    Send.a(\\n      PostRequest.to(\'/products/2\')\\n        .with(\\n          Question.fromObject({\\n            name: Text.of(PageElement.located(By.css(\'.name\'))),\\n          })\\n        )\\n      )\\n  );\\n```"},{"kind":"text","text":"\\n\\n#### Merging objects using "},{"kind":"code","text":"`Question.fromObject`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\n import { actorCalled, Question } from \'@serenity-js/core\'\\n import { Send, PostRequest } from \'@serenity-js/rest\'\\n import { By, Text, PageElement } from \'@serenity-js/web\'\\n\\n await actorCalled(\'Daisy\')\\n   .whoCan(CallAnApi.at(\'https://api.example.org\'))\\n   .attemptsTo(\\n     Send.a(\\n       PostRequest.to(\'/products/2\')\\n         .with(\\n           Question.fromObject({\\n             name: Text.of(PageElement.located(By.css(\'.name\'))),\\n             quantity: undefined,\\n           }, {\\n             quantity: 2,\\n           })\\n         )\\n       )\\n   );\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`WithAnswerableProperties`"},{"kind":"text","text":"](/api/core/#WithAnswerableProperties)\\n- ["},{"kind":"code","text":"`RecursivelyAnswered`"},{"kind":"text","text":"](/api/core/#RecursivelyAnswered)\\n- ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable)"}]},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":225,"character":11}],"typeParameter":[{"id":962,"name":"Source_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"object"}}],"parameters":[{"id":963,"name":"source","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":688,"typeArguments":[{"type":"reference","target":1896,"typeArguments":[{"type":"reference","target":962,"name":"Source_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"WithAnswerableProperties","package":"@serenity-js/core"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":964,"name":"overrides","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":688,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Partial"},"typeArguments":[{"type":"reference","target":1896,"typeArguments":[{"type":"reference","target":962,"name":"Source_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"WithAnswerableProperties","package":"@serenity-js/core"}],"name":"Partial","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#partialtype"}],"name":"Answerable","package":"@serenity-js/core"}}}],"type":{"type":"reference","target":1041,"typeArguments":[{"type":"reference","target":1582,"typeArguments":[{"type":"reference","target":962,"name":"Source_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"RecursivelyAnswered","package":"@serenity-js/core"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":965,"name":"fromArray","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":250,"character":11}],"signatures":[{"id":966,"name":"fromArray","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Generates a ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter) that resolves\\nany ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable) elements of the provided array."}]},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":250,"character":11}],"typeParameter":[{"id":967,"name":"Source_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":968,"name":"source","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"reference","target":688,"typeArguments":[{"type":"reference","target":967,"name":"Source_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Answerable","package":"@serenity-js/core"}}},{"id":969,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1130,"name":"DescriptionFormattingOptions","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1041,"typeArguments":[{"type":"array","elementType":{"type":"reference","target":967,"name":"Source_Type","package":"@serenity-js/core","refersToTypeParameter":true}}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":970,"name":"isAQuestion","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":276,"character":11}],"signatures":[{"id":971,"name":"isAQuestion","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Checks if the value is a ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/)."}]},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":276,"character":11}],"typeParameter":[{"id":972,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":973,"name":"maybeQuestion","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The value to check"}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"maybeQuestion","asserts":false,"targetType":{"type":"reference","target":939,"typeArguments":[{"type":"reference","target":972,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Question","package":"@serenity-js/core"}}}]},{"id":974,"name":"isAMetaQuestion","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":287,"character":11}],"signatures":[{"id":975,"name":"isAMetaQuestion","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Checks if the value is a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/)."}]},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":287,"character":11}],"typeParameter":[{"id":976,"name":"CT","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":977,"name":"RQT","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":939,"typeArguments":[{"type":"intrinsic","name":"unknown"}],"name":"Question","package":"@serenity-js/core"}}],"parameters":[{"id":978,"name":"maybeMetaQuestion","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The value to check"}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"maybeMetaQuestion","asserts":false,"targetType":{"type":"reference","target":1543,"typeArguments":[{"type":"reference","target":976,"name":"CT","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":977,"name":"RQT","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"MetaQuestion","package":"@serenity-js/core"}}}]},{"id":979,"name":"formattedValue","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":314,"character":11}],"signatures":[{"id":980,"name":"formattedValue","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/) that can be composed with any ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable)\\nto produce a single-line description of its value.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Question } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nconst accountDetails = () =>\\n  Question.about(\'account details\', actor => ({ name: \'Alice\', age: 28 }))\\n\\nawait actorCalled(\'Alice\').attemptsTo(\\n  Ensure.that(\\n    Question.formattedValue().of(accountDetails()),\\n    equals(\'{ name: \\"Alice\\", age: 28 }\'),\\n  ),\\n)\\n```"}]},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":314,"character":11}],"parameters":[{"id":981,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1130,"name":"DescriptionFormattingOptions","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1543,"typeArguments":[{"type":"intrinsic","name":"any"},{"type":"reference","target":939,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}}]},{"id":982,"name":"value","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":345,"character":11}],"signatures":[{"id":983,"name":"value","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/) that can be composed with any ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable)\\nto return its value when the answerable is a ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/),\\nor the answerable itself otherwise.\\n\\nThe description of the resulting question is produced by calling ["},{"kind":"code","text":"`Question.describedBy`"},{"kind":"text","text":"](/api/core/class/Question/#describedBy) on the\\nprovided answerable.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Question } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nconst accountDetails = () =>\\n  Question.about(\'account details\', actor => ({ name: \'Alice\', age: 28 }))\\n\\nawait actorCalled(\'Alice\').attemptsTo(\\n  Ensure.that(\\n    Question.description().of(accountDetails()),\\n    equals(\'account details\'),\\n  ),\\n  Ensure.that(\\n    Question.value().of(accountDetails()),\\n    equals({ name: \'Alice\', age: 28 }),\\n  ),\\n)\\n```"}]},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":345,"character":11}],"typeParameter":[{"id":984,"name":"Answer_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"type":{"type":"reference","target":1543,"typeArguments":[{"type":"reference","target":984,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":939,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":984,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}}]},{"id":1003,"name":"answeredBy","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":483,"character":13}],"signatures":[{"id":1004,"name":"answeredBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the provided ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to use their [abilities](/api/core/class/Ability/)\\nto answer this question."}]},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":483,"character":13}],"parameters":[{"id":1005,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1049,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":600,"name":"UsesAbilities","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":1028,"name":"T","package":"@serenity-js/core","qualifiedName":"Question.T","refersToTypeParameter":true}}]},{"id":1006,"name":"describedAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":494,"character":4}],"signatures":[{"id":1007,"name":"describedAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Changes the description of this object, as returned by ["},{"kind":"code","text":"`Describable.describedBy`"},{"kind":"text","text":"](/api/core/class/Describable/#describedBy)\\nand ["},{"kind":"code","text":"`Describable.toString`"},{"kind":"text","text":"](/api/core/class/Describable/#toString)."}]},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":494,"character":4}],"parameters":[{"id":1008,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Replaces the current description according to the following rules:\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is an ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable), it replaces the current description\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/), the current description is passed as "},{"kind":"code","text":"`context`"},{"kind":"text","text":" to "},{"kind":"code","text":"`description.of(context)`"},{"kind":"text","text":", and the result replaces the current description"}]},"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":1543,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Awaited"},"typeArguments":[{"type":"reference","target":1028,"name":"T","package":"@serenity-js/core","qualifiedName":"Question.T","refersToTypeParameter":true}],"name":"Awaited","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#awaitedtype"},{"type":"reference","target":939,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}]}}],"type":{"type":"intrinsic","name":"this"}}]},{"id":1009,"name":"as","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":514,"character":11}],"signatures":[{"id":1010,"name":"as","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Maps this question to one of a different type.\\n\\n"},{"kind":"code","text":"```ts\\nQuestion.about(\'number returned as string\', actor => \'42\')   // returns: QuestionAdapter<string>\\n  .as(Number)                                                // returns: QuestionAdapter<number>\\n```"}]},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":514,"character":11}],"typeParameter":[{"id":1011,"name":"O","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":1012,"name":"mapping","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":1013,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":514,"character":26}],"signatures":[{"id":1014,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":514,"character":26}],"parameters":[{"id":1015,"name":"answer","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Awaited"},"typeArguments":[{"type":"reference","target":1028,"name":"T","package":"@serenity-js/core","qualifiedName":"Question.T","refersToTypeParameter":true}],"name":"Awaited","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#awaitedtype"}}],"type":{"type":"union","types":[{"type":"reference","target":1011,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":1011,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reference","target":1041,"typeArguments":[{"type":"reference","target":1011,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":1016,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"signatures":[{"id":1017,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"parameters":[{"id":1018,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1049,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":600,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":1019,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":1020,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":66}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[1020]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":64}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":1118,"name":"Describable.describedBy"}}],"inheritedFrom":{"type":"reference","target":1117,"name":"Describable.describedBy"}},{"id":1026,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"signatures":[{"id":1027,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":1128,"name":"Describable.toString"}}],"inheritedFrom":{"type":"reference","target":1127,"name":"Describable.toString"}}],"groups":[{"title":"Methods","children":[940,960,965,970,974,979,982,1003,1006,1009,1016,1026]}],"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":119,"character":22}],"typeParameters":[{"id":1028,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"extendedTypes":[{"type":"reference","target":1113,"name":"Describable","package":"@serenity-js/core"}],"extendedBy":[{"type":"reference","target":1288,"name":"List"}],"permalink":"/api/core/class/Question","previousId":793,"nextId":1587},{"id":1029,"name":"QuestionAdapterFieldDecorator","variant":"declaration","kind":2097152,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Describes an object recursively wrapped in ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter) proxies, so that:\\n- both methods and fields of the wrapped object can be used as [questions](/api/core/class/Question/) or [interactions](/api/core/class/Interaction/)\\n- method parameters of the wrapped object will accept ["},{"kind":"code","text":"`Answerable<T>`"},{"kind":"text","text":"](/api/core/#Answerable)"}]},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":537,"character":12}],"typeParameters":[{"id":1040,"name":"Original_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"type":{"type":"mapped","parameter":"Field","parameterType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":1040,"name":"Original_Type","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"typeOperator","operator":"keyof","target":{"type":"reference","typeArguments":[{"type":"reference","target":1040,"name":"Original_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"QuestionStatement","package":"@serenity-js/core"}}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"}},"templateType":{"type":"conditional","checkType":{"type":"indexedAccess","indexType":{"type":"reference","name":"Field","package":"@serenity-js/core","refersToTypeParameter":true},"objectType":{"type":"reference","target":1040,"name":"Original_Type","package":"@serenity-js/core","refersToTypeParameter":true}},"extendsType":{"type":"reflection","declaration":{"id":1030,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":540,"character":37}],"signatures":[{"id":1031,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"parameters":[{"id":1032,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"inferred","name":"OriginalParameters"}}],"type":{"type":"inferred","name":"OriginalMethodResult"}}]}},"trueType":{"type":"conditional","checkType":{"type":"reference","name":"Field","package":"@serenity-js/core","refersToTypeParameter":true},"extendsType":{"type":"union","types":[{"type":"literal","value":"replace"},{"type":"literal","value":"replaceAll"}]},"trueType":{"type":"reflection","declaration":{"id":1033,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":543,"character":18}],"signatures":[{"id":1034,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"parameters":[{"id":1035,"name":"searchValue","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":688,"typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"RegExp"},"name":"RegExp","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/RegExp"}]}],"name":"Answerable","package":"@serenity-js/core"}},{"id":1036,"name":"replaceValue","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1041,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]}},"falseType":{"type":"reflection","declaration":{"id":1037,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":544,"character":18}],"signatures":[{"id":1038,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"parameters":[{"id":1039,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"mapped","parameter":"P","parameterType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","name":"OriginalParameters","package":"@serenity-js/core","refersToTypeParameter":true}},"templateType":{"type":"reference","target":688,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Awaited"},"typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","name":"P","package":"@serenity-js/core","refersToTypeParameter":true},"objectType":{"type":"reference","name":"OriginalParameters","package":"@serenity-js/core","refersToTypeParameter":true}}],"name":"Awaited","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#awaitedtype"}],"name":"Answerable","package":"@serenity-js/core"}}}],"type":{"type":"reference","target":1041,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Awaited"},"typeArguments":[{"type":"reference","name":"OriginalMethodResult","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Awaited","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#awaitedtype"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]}}},"falseType":{"type":"conditional","checkType":{"type":"indexedAccess","indexType":{"type":"reference","name":"Field","package":"@serenity-js/core","refersToTypeParameter":true},"objectType":{"type":"reference","target":1040,"name":"Original_Type","package":"@serenity-js/core","refersToTypeParameter":true}},"extendsType":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"bigint"},{"type":"intrinsic","name":"boolean"},{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"},{"type":"intrinsic","name":"object"}]},"trueType":{"type":"reference","target":1041,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Awaited"},"typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","name":"Field","package":"@serenity-js/core","refersToTypeParameter":true},"objectType":{"type":"reference","target":1040,"name":"Original_Type","package":"@serenity-js/core","refersToTypeParameter":true}}],"name":"Awaited","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#awaitedtype"}],"name":"QuestionAdapter","package":"@serenity-js/core"},"falseType":{"type":"intrinsic","name":"any"}}}},"permalink":"/api/core#QuestionAdapterFieldDecorator","previousId":936,"nextId":1041},{"id":1041,"name":"QuestionAdapter","variant":"declaration","kind":2097152,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A union type representing a proxy object returned by ["},{"kind":"code","text":"`Question.about`"},{"kind":"text","text":"](/api/core/class/Question/#about).\\n\\n["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter) proxies the methods and fields of the wrapped object recursively,\\nallowing them to be used as either a ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/) or an ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/)."}]},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":561,"character":12}],"typeParameters":[{"id":1045,"name":"Answer_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"type":{"type":"intersection","types":[{"type":"reference","target":939,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":1045,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"},{"type":"reference","target":793,"name":"Interaction","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":1042,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":1043,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":564,"character":8}],"signatures":[{"id":1044,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":564,"character":8}],"type":{"type":"reference","target":939,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}}]}],"groups":[{"title":"Methods","children":[1043]}],"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":564,"character":6}]}},{"type":"reference","target":1029,"typeArguments":[{"type":"reference","target":1045,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"QuestionAdapterFieldDecorator","package":"@serenity-js/core"}]},"permalink":"/api/core#QuestionAdapter","previousId":1029,"nextId":1046},{"id":1046,"name":"MetaQuestionAdapter","variant":"declaration","kind":2097152,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An extension of ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter), that in addition to proxying methods and fields\\nof the wrapped object can also act as a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/)."}]},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":573,"character":12}],"typeParameters":[{"id":1047,"name":"Context_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":1048,"name":"Answer_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"type":{"type":"intersection","types":[{"type":"reference","target":1041,"typeArguments":[{"type":"reference","target":1048,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"},{"type":"reference","target":1543,"typeArguments":[{"type":"reference","target":1047,"name":"Context_Type","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":1041,"typeArguments":[{"type":"reference","target":1048,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}]},"permalink":"/api/core#MetaQuestionAdapter","previousId":1041,"nextId":1582},{"id":1582,"name":"RecursivelyAnswered","variant":"declaration","kind":2097152,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Describes a recursively resolved plain JavaScript object with [answerable properties](/api/core/#WithAnswerableProperties).\\n\\nTypically, used in conjunction with ["},{"kind":"code","text":"`Question.fromObject`"},{"kind":"text","text":"](/api/core/class/Question/#fromObject).\\n\\n## Using "},{"kind":"code","text":"`RecursivelyAnswered`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport {\\n  actorCalled, notes, q, Question, QuestionAdapter, WithAnswerableProperties\\n} from \'@serenity-js/core\';\\n\\ninterface RequestConfiguration {\\n  headers: Record<string, string>;\\n}\\n\\nconst requestConfiguration: WithAnswerableProperties<RequestConfiguration> = {\\n  headers: {\\n    Authorization: q`Bearer ${ notes().get(\'authDetails\').token }`\\n  }\\n}\\n\\nconst question: QuestionAdapter<RequestConfiguration> =\\n  Question.fromObject<RequestConfiguration>(requestConfiguration)\\n\\nconst answer = await actorCalled(\'Annie\').answer(question);\\n\\nconst a1: RequestConfiguration = answer;\\nconst a2: RecursivelyAnswered<WithAnswerableProperties<RequestConfiguration>> = answer;\\n\\n// RequestConfiguration === RecursivelyAnswered<WithAnswerableProperties<RequestConfiguration>>\\n```"}]},"sources":[{"fileName":"packages/core/src/screenplay/RecursivelyAnswered.ts","line":38,"character":12}],"typeParameters":[{"id":1583,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"type":{"type":"conditional","checkType":{"type":"reference","target":1583,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true},"extendsType":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"undefined"}]},"trueType":{"type":"reference","target":1583,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true},"falseType":{"type":"conditional","checkType":{"type":"reference","target":1583,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true},"extendsType":{"type":"union","types":[{"type":"reference","target":939,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"inferred","name":"A"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"},{"type":"reference","target":939,"typeArguments":[{"type":"inferred","name":"A"}],"name":"Question","package":"@serenity-js/core"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"inferred","name":"A"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]},"trueType":{"type":"reference","target":1582,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Awaited"},"typeArguments":[{"type":"reference","name":"A","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Awaited","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#awaitedtype"}],"name":"RecursivelyAnswered","package":"@serenity-js/core"},"falseType":{"type":"conditional","checkType":{"type":"reference","target":1583,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true},"extendsType":{"type":"intrinsic","name":"object"},"trueType":{"type":"mapped","parameter":"K","parameterType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":1583,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true}},"templateType":{"type":"reference","target":1582,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","name":"K","package":"@serenity-js/core","refersToTypeParameter":true},"objectType":{"type":"reference","target":1583,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true}}],"name":"RecursivelyAnswered","package":"@serenity-js/core"}},"falseType":{"type":"reference","target":1583,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true}}}},"permalink":"/api/core#RecursivelyAnswered","previousId":1046,"nextId":1896},{"id":1584,"name":"SerialisedActor","variant":"declaration","kind":256,"flags":{"isExternal":true},"children":[{"id":1585,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/SerialisedActor.ts","line":7,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":1586,"name":"abilities","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/SerialisedActor.ts","line":8,"character":4}],"type":{"type":"array","elementType":{"type":"reference","target":596,"name":"SerialisedAbility","package":"@serenity-js/core"}}}],"groups":[{"title":"Properties","children":[1585,1586]}],"sources":[{"fileName":"packages/core/src/screenplay/SerialisedActor.ts","line":6,"character":17}],"permalink":"/api/core/interface/SerialisedActor","previousId":487,"nextId":548},{"id":1587,"name":"Task","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"**Tasks** model **[sequences of activities](/api/core/class/Activity/)**\\nand help you capture meaningful steps of an [actor](/api/core/class/Actor/) workflow\\nin your domain.\\n\\nTypically, tasks correspond to higher-level, business domain-specific activities\\nlike to "},{"kind":"code","text":"`BookAPlaneTicket`"},{"kind":"text","text":", "},{"kind":"code","text":"`PlaceATrade`"},{"kind":"text","text":", "},{"kind":"code","text":"`TransferFunds`"},{"kind":"text","text":", and so on.\\nHowever, higher-level tasks can and should be composed of lower-level tasks.\\nFor example, a task to "},{"kind":"code","text":"`SignUp`"},{"kind":"text","text":" could be composed of tasks to "},{"kind":"code","text":"`ProvideUsername`"},{"kind":"text","text":" and "},{"kind":"code","text":"`ProvidePassword`"},{"kind":"text","text":".\\n\\nThe lowest-level tasks in your abstraction hierarchy should be composed of [interactions](/api/core/class/Interaction/).\\nFor example, a low-level task to "},{"kind":"code","text":"`ProvideUsername`"},{"kind":"text","text":" could be composed of an interaction to [enter](/api/web/class/Enter/) the value\\ninto a form field and [press](/api/web/class/Press/) the ["},{"kind":"code","text":"`Key.Enter`"},{"kind":"text","text":"](/api/web/class/Key/#Enter).\\n\\nTasks are the core building block of the [Screenplay Pattern](/handbook/design/screenplay-pattern),\\nalong with [actors](/api/core/class/Actor/), [abilities](/api/core/class/Ability/), [interactions](/api/core/class/Interaction/), and [questions](/api/core/class/Question/).\\n\\n![Screenplay Pattern](/images/design/serenity-js-screenplay-pattern.png)\\n\\nLearn more about:\\n- [User-Centred Design: How a 50 year old technique became the key to scalable test automation](https://janmolak.com/user-centred-design-how-a-50-year-old-technique-became-the-key-to-scalable-test-automation-66a658a36555)\\n- [Actors](/api/core/class/Actor/)\\n- [Activities](/api/core/class/Activity/)\\n- [Interactions](/api/core/class/Interaction/)\\n\\n## Defining a task\\n\\n"},{"kind":"code","text":"```ts\\nimport { Answerable, Task, the } from \'@serenity-js/core\'\\nimport { By, Click, Enter, PageElement, Press, Key } from \'@serenity-js/web\'\\n\\nconst SignIn = (username: Answerable<string>, password: Answerable<string>) =>\\n  Task.where(the`#actor signs is as ${ username }`,\\n    Enter.theValue(username).into(PageElement.located(By.id(\'username\'))),\\n    Enter.theValue(password).into(PageElement.located(By.id(\'password\'))),\\n    Press.the(Key.Enter),\\n  );\\n```"},{"kind":"text","text":"\\n\\n## Defining a not implemented task\\n\\nNote that calling ["},{"kind":"code","text":"`Task.where`"},{"kind":"text","text":"](/api/core/class/Task/#where) method without providing the sequence of [activities](/api/core/class/Activity/)\\nproduces a Task that\'s marked as \\"pending\\" in the test report.\\n\\nThis feature is useful when you want to quickly write down a task that will be needed in the scenario,\\nbut you\'re not yet sure what activities it will involve.\\n\\n"},{"kind":"code","text":"```ts\\nimport { Task, the } from \'@serenity-js/core\'\\n\\nconst SignUp = () =>\\n    Task.where(the`#actor signs up for a newsletter`) // no activities provided\\n                                                      // => task marked as pending\\n```"},{"kind":"text","text":"\\n\\n## Composing activities into tasks\\n\\nThe purpose of **tasks** is to help you capture domain vocabulary by **associating domain meaning** with a **sequence of activities**.\\nFrom the implementation perspective, tasks help you give a **meaningful description** to such sequence\\nand provide a way to **easily reuse activities across your code base**.\\n\\n:::tip Remember\\n**Tasks** associate **domain meaning** with a sequence of **lower-level activities** and provide a mechanism for **code reuse**.\\n:::\\n\\nFor example, a task to _find a flight connection from London to New York_ could be modelled as a sequence of the following lower-level activities:\\n- specify origin city of \\"London\\"\\n- specify destination city of \\"New York\\"\\n\\nThe easiest way to implement such task, and any custom Serenity/JS task for this matter, is to use the ["},{"kind":"code","text":"`Task.where`"},{"kind":"text","text":"](/api/core/class/Task/#where) method to compose the lower-level activities:\\n\\n"},{"kind":"code","text":"```typescript\\nimport { Task, the } from \'@serenity-js/core\'\\n\\nconst findFlight = (originCity: string, destinationCity: string) =>\\n    Task.where(the`#actor finds a flight from ${ originCity } to ${ destinationCity }`,   // task goal\\n        specifyOriginCity(originCity),                                                  // activities\\n        specifyDestinationCity(originCity),\\n    )\\n```"},{"kind":"text","text":"\\n\\nFurthermore, if the actor was interacting with a web UI, a task to _specify origin city_ could again be composed of other activities:\\n- click on the "},{"kind":"code","text":"`origin airport`"},{"kind":"text","text":" widget\\n- enter city name of "},{"kind":"code","text":"`London`"},{"kind":"text","text":"\\n- pick the first suggested airport from the list\\n\\nConversely, a task to _specify destination city_ could be composed of:\\n- click on the "},{"kind":"code","text":"`destination airport`"},{"kind":"text","text":" widget\\n- enter city name of "},{"kind":"code","text":"`New York`"},{"kind":"text","text":"\\n- pick the first suggested airport from the list\\n\\nConveniently, [Serenity/JS modules](/handbook/getting-started/architecture) provide low-level activities that\\nallow actors to interact with the various interfaces of the system under test.\\nFor example, [Serenity/JS Web module](/api/web) ships with activities such as ["},{"kind":"code","text":"`Click`"},{"kind":"text","text":"](/api/web/class/Click/) or ["},{"kind":"code","text":"`Enter`"},{"kind":"text","text":"](/api/web/class/Enter/),\\nwhich we can incorporate into our task definitions just like any other activities:\\n\\n"},{"kind":"code","text":"```typescript\\nimport { Task, the } from \'@serenity-js/core\'\\nimport { Click, Enter, Key, Press } from \'@serenity-js/web\'\\n\\nimport { FlightFinder } from \'./ui/flight-finder\'\\n\\nconst specifyOriginCity = (originCity: string) =>\\n    Task.where(the`#actor specifies origin city of ${ originCity }`,\\n        Click.on(FlightFinder.originAirport),\\n        Enter.theValue(originCity).into(FlightFinder.originAirport),\\n        Press.the(Key.ArrowDown, Key.Enter).into(FlightFinder.originAirport),\\n    )\\n\\nconst specifyDestinationCity = (destinationCity: string) =>\\n    Task.where(the`#actor specifies destination city of ${ destinationCity }`,\\n        Click.on(FlightFinder.destinationAirport),\\n        Enter.theValue(destinationCity).into(FlightFinder.destinationAirport),\\n        Press.the(Key.ArrowDown, Key.Enter).into(FlightFinder.destinationAirport),\\n    )\\n```"},{"kind":"text","text":"\\n\\nAs you can already see, tasks to _specify origin city_ and _specify destination city_ are almost identical,\\nsave for the name of the widget and the text value the actor is supposed to enter.\\nSerenity/JS **task-based code reuse model** means that we can clean up such duplicated implementation\\nby **extracting a parameterised task**, in this case called "},{"kind":"code","text":"`specifyCity`"},{"kind":"text","text":":\\n\\n"},{"kind":"code","text":"```typescript\\nimport { Task, the } from \'@serenity-js/core\'\\nimport { Click, Enter, Key, PageElement, Press } from \'@serenity-js/web\'\\n\\nimport { FlightFinder } from \'./ui/flight-finder\'\\n\\nconst specifyOriginCity = (originCity: string) =>\\n    Task.where(the`#actor specifies origin city of ${ originCity }`,\\n        specifyCity(originCity, FlightFinder.originAirport)\\n    )\\n\\nconst specifyDestinationCity = (destinationCity: string) =>\\n    Task.where(the`#actor specifies destination city of ${ destinationCity }`,\\n        specifyCity(destinationCity, FlightFinder.destinationAirport),\\n    )\\n\\nconst specifyCity = (cityName: string, widget: PageElement) =>\\n    Task.where(the`#actor specifies city of ${ cityName } in ${ widget }`,\\n        Click.on(widget),\\n        Enter.theValue(cityName).into(widget),\\n        Press.the(Key.ArrowDown, Key.Enter).into(widget),\\n    )\\n```"},{"kind":"text","text":"\\n\\nAs you work with Serenity/JS, you\'ll notice that the ideas of **functional decomposition**, so thinking of tasks as sequences of lower-level activities,\\nas well as **functional composition**, so implementing reusable activities and composing them into higher-level tasks,\\nare at the heart of the Screenplay Pattern. You\'ll also notice that the entire Serenity/JS framework does it best to help your team follow this approach.\\n\\n:::info The power of the Serenity/JS task-based code reuse model\\nWhat makes the Serenity/JS task-based code reuse model so **powerful at scale** is the observation that:\\n- for most software systems, a vast number of **diverse test scenarios** can be composed of a relatively **small number of high-level activities**\\n- all **high-level activities** can be composed of a relatively **small number of lower-level activities**\\n- in a reasonably consistently-designed software system, most lower-level activities tend to be similar and rather consistent across the various aspects of a given interface.\\nIn particular, **there are only so many ways** one can interact with a UI button or send an HTTP request to a web service.\\n\\nWhat this means in practice is that by investing your time in properly designing **relatively few reusable tasks**\\nto test your system, you give your team a **significant productivity boost** and **leverage** when producing high-level test scenarios.\\n\\nOn top of that, this design approach results not only in **simpler test scenarios** that reduce\\nthe [cognitive load](https://en.wikipedia.org/wiki/Cognitive_load) on the reader as they require them to process\\nthe scenario only one level of abstraction at the time.\\nIt also allows for the test to **take shortcuts** in well-defined points of the workflow - use a REST API request to create\\na test user account instead of going through the registration form.\\n:::"}]},"children":[{"id":1588,"name":"where","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Task.ts","line":186,"character":11}],"signatures":[{"id":1589,"name":"where","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A factory method that makes defining custom tasks more convenient."}]},"sources":[{"fileName":"packages/core/src/screenplay/Task.ts","line":186,"character":11}],"parameters":[{"id":1590,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A description to be used when reporting this task"}]},"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":1591,"name":"activities","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"comment":{"summary":[{"kind":"text","text":"A sequence of lower-level activities that constitute this task"}]},"type":{"type":"array","elementType":{"type":"reference","target":610,"name":"Activity","package":"@serenity-js/core"}}}],"type":{"type":"reference","target":1587,"name":"Task","package":"@serenity-js/core"}}]},{"id":1595,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":27,"character":4}],"signatures":[{"id":1596,"name":"new Task","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":27,"character":4}],"parameters":[{"id":1597,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":1598,"name":"location","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"defaultValue":"..."}],"type":{"type":"reference","target":1587,"name":"Task","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":616,"name":"Activity.constructor"}}],"inheritedFrom":{"type":"reference","target":615,"name":"Activity.constructor"}},{"id":1603,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":38,"character":4}],"signatures":[{"id":1604,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":38,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":621,"name":"Activity.instantiationLocation"}}],"inheritedFrom":{"type":"reference","target":620,"name":"Activity.instantiationLocation"}},{"id":1599,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/core/src/screenplay/Task.ts","line":202,"character":13}],"signatures":[{"id":1600,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the provided ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to perform this ["},{"kind":"code","text":"`Task`"},{"kind":"text","text":"](/api/core/class/Task/)."}]},"sources":[{"fileName":"packages/core/src/screenplay/Task.ts","line":202,"character":13}],"parameters":[{"id":1601,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"#### Learn more\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`PerformsActivities`"},{"kind":"text","text":"](/api/core/interface/PerformsActivities/)\\n- ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/)"}]},"type":{"type":"reference","target":605,"name":"PerformsActivities","package":"@serenity-js/core"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":623,"name":"Activity.performAs"}}],"overwrites":{"type":"reference","target":622,"name":"Activity.performAs"}},{"id":1605,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"signatures":[{"id":1606,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"parameters":[{"id":1607,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1049,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":600,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":1608,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":1609,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":66}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[1609]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":64}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":626,"name":"Activity.describedBy"}}],"inheritedFrom":{"type":"reference","target":625,"name":"Activity.describedBy"}},{"id":1615,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"signatures":[{"id":1616,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":636,"name":"Activity.toString"}}],"inheritedFrom":{"type":"reference","target":635,"name":"Activity.toString"}}],"groups":[{"title":"Constructors","children":[1595]},{"title":"Methods","children":[1588,1603,1599,1605,1615]}],"sources":[{"fileName":"packages/core/src/screenplay/Task.ts","line":175,"character":22}],"extendedTypes":[{"type":"reference","target":610,"name":"Activity","package":"@serenity-js/core"}],"extendedBy":[{"type":"reference","target":1062,"name":"Check"}],"permalink":"/api/core/class/Task","previousId":939,"nextId":490},{"id":1896,"name":"WithAnswerableProperties","variant":"declaration","kind":2097152,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Describes a plain JavaScript object with ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable) properties.\\nTypically, used in conjunction with ["},{"kind":"code","text":"`RecursivelyAnswered`"},{"kind":"text","text":"](/api/core/#RecursivelyAnswered) and ["},{"kind":"code","text":"`Question.fromObject`"},{"kind":"text","text":"](/api/core/class/Question/#fromObject).\\n\\n"},{"kind":"code","text":"```ts\\nimport {\\n  actorCalled, notes, q, Question, QuestionAdapter, WithAnswerableProperties\\n} from \'@serenity-js/core\';\\n\\ninterface RequestConfiguration {\\n  headers: Record<string, string>;\\n}\\n\\nconst requestConfiguration: WithAnswerableProperties<RequestConfiguration> = {\\n  headers: {\\n    Authorization: q`Bearer ${ notes().get(\'authDetails\').token }`\\n  }\\n}\\n\\nconst question: QuestionAdapter<RequestConfiguration> =\\n    Question.fromObject<RequestConfiguration>(requestConfiguration)\\n\\nconst answer: RequestConfiguration = await actorCalled(\'Annie\').answer(question);\\n```"}]},"sources":[{"fileName":"packages/core/src/screenplay/WithAnswerableProperties.ts","line":31,"character":12}],"typeParameters":[{"id":1897,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"type":{"type":"conditional","checkType":{"type":"reference","target":1897,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true},"extendsType":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"undefined"}]},"trueType":{"type":"reference","target":1897,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true},"falseType":{"type":"conditional","checkType":{"type":"reference","target":1897,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true},"extendsType":{"type":"union","types":[{"type":"reference","target":939,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"inferred","name":"A"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"},{"type":"reference","target":939,"typeArguments":[{"type":"inferred","name":"A"}],"name":"Question","package":"@serenity-js/core"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"inferred","name":"A"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]},"trueType":{"type":"reference","target":688,"typeArguments":[{"type":"reference","name":"A","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Answerable","package":"@serenity-js/core"},"falseType":{"type":"conditional","checkType":{"type":"reference","target":1897,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true},"extendsType":{"type":"intrinsic","name":"object"},"trueType":{"type":"mapped","parameter":"K","parameterType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":1897,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true}},"templateType":{"type":"reference","target":1896,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","name":"K","package":"@serenity-js/core","refersToTypeParameter":true},"objectType":{"type":"reference","target":1897,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true}}],"name":"WithAnswerableProperties","package":"@serenity-js/core"}},"falseType":{"type":"reference","target":688,"typeArguments":[{"type":"reference","target":1897,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Answerable","package":"@serenity-js/core"}}}},"permalink":"/api/core#WithAnswerableProperties","previousId":1582,"nextId":1054},{"id":490,"name":"Ability","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"**Abilities** enable [actors](/api/core/class/Actor/)\\nto perform [interactions](/api/core/class/Interaction/) with the system under test\\nand answer [questions](/api/core/class/Question/) about its state.\\n\\nFrom the technical perspective, **abilities** act as **wrappers** around any **integration libraries** required\\nto communicate with the external interfaces of system under test,\\nsuch as [web browser drivers](/api/web/class/BrowseTheWeb/) or an [HTTP client](/api/rest/class/CallAnApi/).\\nThey also enable [portability](/handbook/design/portable-test-code)\\nof your test code across such integration libraries.\\n\\nAbilities are the core building block of the [Screenplay Pattern](/handbook/design/screenplay-pattern),\\nalong with [actors](/api/core/class/Actor/), [interactions](/api/core/class/Interaction/),\\n[questions](/api/core/class/Question/), and [tasks](/api/core/class/Task/).\\n\\n![Screenplay Pattern](/images/design/serenity-js-screenplay-pattern.png)\\n\\nLearn more about:\\n- [Actors](/api/core/class/Actor/)\\n- [Configuring actors using Casts](/api/core/class/Cast/)\\n- [Interactions](/api/core/class/Interaction/)\\n- [Questions](/api/core/class/Question/)\\n- [Web testing](/handbook/web-testing/)\\n- [API testing](/handbook/api-testing/)\\n- [Mobile testing](/handbook/mobile-testing/)\\n\\n## Giving actors the abilities to interact\\n\\nSerenity/JS actors are capable of interacting with **any interface** of the system under test,\\nbe it a [web UI](/handbook/web-testing/), a [mobile app](/handbook/mobile-testing/), a [web service](/handbook/api-testing/),\\nor [anything else](/api/core/class/Ability/) that a Node.js program can talk to.\\nThis flexibility is enabled by a mechanism called _**abilities**_\\nand achieved without introducing any unnecessary dependencies to your code base thanks to the [modular architecture](/handbook/getting-started/architecture) of Serenity/JS.\\n\\n:::tip Remember\\n**Actors** have **abilities** that enable them to **perform interactions** and **answer questions**.\\n:::\\n\\nFrom the technical perspective, an **ability** is an [adapter](https://en.wikipedia.org/wiki/Adapter_pattern)\\naround an interface-specific integration library, such as a web browser driver, an HTTP client, a database client, and so on.\\nYou give an actor an ability, and it\'s the ability\'s responsibility to provide a consistent API around the integration library and deal with any of its quirks.\\nAbilities **encapsulate integration libraries** and handle their [configuration and initialisation](/api/core/interface/Initialisable/),\\nthe process of [freeing up any resources](/api/core/interface/Discardable/) they hold,\\nas well as managing any state associated with the library.\\n\\n### Portable interactions with web interfaces\\n\\nTo make your Serenity/JS actors interact with web interfaces,\\nyou call the ["},{"kind":"code","text":"`Actor.whoCan`"},{"kind":"text","text":"](/api/core/class/Actor#whoCan) method and give them an implementation of the ability to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb),\\nspecific to your web integration tool of choice.\\n\\nNote how ["},{"kind":"code","text":"`BrowseTheWebWithPlaywright`"},{"kind":"text","text":"](/api/playwright/class/BrowseTheWebWithPlaywright/), ["},{"kind":"code","text":"`BrowseTheWebWithWebdriverIO`"},{"kind":"text","text":"](/api/webdriverio/class/BrowseTheWebWithWebdriverIO/), and ["},{"kind":"code","text":"`BrowseTheWebWithProtractor`"},{"kind":"text","text":"](/api/protractor/class/BrowseTheWebWithProtractor/)\\nall **extend** the base ability to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/).\\n\\n#### Playwright\\n\\n"},{"kind":"code","text":"```typescript\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { BrowseTheWebWithPlaywright } from \'@serenity-js/playwright\'   // Serenity/JS integration module\\nimport { chromium } from \'playwright\'\\n\\nconst browser = await chromium.launch({ headless: true })              // integration library\\n\\nawait actorCalled(\'Trevor\')                                            // generic actor\\n  .whoCan(BrowseTheWebWithPlaywright.using(browser))                   // tool-specific ability\\n```"},{"kind":"text","text":"\\n\\n#### WebdriverIO\\n\\n"},{"kind":"code","text":"```typescript\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { BrowseTheWebWithWebdriverIO } from \'@serenity-js/webdriverio\' // Serenity/JS integration module\\n\\nawait actorCalled(\'Trevor\')                                            // generic actor\\n  .whoCan(BrowseTheWebWithWebdriverIO.using(browser))                  // tool-specific ability\\n```"},{"kind":"text","text":"\\n\\n#### Protractor\\n\\n"},{"kind":"code","text":"```typescript\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { BrowseTheWebWithProtractor } from \'@serenity-js/protractor\'   // Serenity/JS integration module\\nimport { protractor } from \'protractor\'                                // integration library\\n\\nawait actorCalled(\'Trevor\')                                            // generic actor\\n  .whoCan(BrowseTheWebWithProtractor.using(protractor.browser))        // tool-specific ability\\n```"},{"kind":"text","text":"\\n\\n### Retrieving an ability\\n\\nUse ["},{"kind":"code","text":"`PerformActivities`"},{"kind":"text","text":"](/api/core/class/PerformActivities/)} to retrieve an ability in a custom ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/) or ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/) implementation.\\n\\nHere, "},{"kind":"code","text":"`Ability`"},{"kind":"text","text":" can be the integration library-specific class, for example ["},{"kind":"code","text":"`BrowseTheWebWithPlaywright`"},{"kind":"text","text":"](/api/playwright/class/BrowseTheWebWithPlaywright/),\\nor its library-agnostic parent class, like ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/).\\n\\nTo make your code portable across the various integration libraries, retrieve the ability\\nusing the library-agnostic parent class:\\n\\n"},{"kind":"code","text":"```typescript\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { BrowseTheWeb } from \'@serenity-js/web\' // Serenity/JS web module\\n\\nconst actor    = actorCalled(\'Trevor\')\\nconst ability  = await BrowseTheWeb.as(actor)   // retrieve implementation of BrowseTheWeb\\n```"},{"kind":"text","text":"\\n\\nAs you can already see, providing **encapsulation** and a **cleaner API** around the integration libraries are not the only reasons why you\'d want to use the abilities.\\n\\nAnother reason is that the Serenity/JS implementation of the Screenplay Pattern lets you **completely decouple the actor from the integration libraries**\\nand make the abilities of the same type **interchangeable**.\\nFor example, [Serenity/JS web modules](/handbook/web-testing/serenity-js-web-modules) offer an abstraction that lets you switch between web integration libraries\\nas vastly different as Selenium, WebdriverIO, or Playwright without having to change _anything whatsoever_ in your test scenarios.\\n\\nWhat this means is that your test code can become [portable and reusable across projects and teams](/handbook/design/portable-test-code),\\neven if they don\'t use the same low-level integration tools. It also helps you to **avoid vendor lock-in**, as you can wrap any third-party integration library\\ninto an ability and swap it out for another implementation if you need to.\\n\\nHowever, Serenity/JS **doesn\'t prevent you** from using the integration libraries directly.\\nWhen you need to, you can use a library-specific ability like ["},{"kind":"code","text":"`BrowseTheWebWithPlaywright`"},{"kind":"text","text":"](/api/playwright/class/BrowseTheWebWithPlaywright/)\\nto trade portability for access to library-specific low-level methods:\\n\\n"},{"kind":"code","text":"```typescript\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { BrowseTheWebWithPlaywright, PlaywrightPage } from \'@serenity-js/playwright\'\\n\\nconst actor          = actorCalled(\'Trevor\')\\nconst ability        = await BrowseTheWebWithPlaywright.as(actor)\\nconst page           = (await ability.currentPage()) as PlaywrightPage;\\nconst playwrightPage = await page.nativePage();\\n// use any Playwright-specific APIs on playwrightPage\\n```"},{"kind":"text","text":"\\n\\n:::warning Using integration library-specific APIs reduces portability\\nWhile Serenity/JS provides you with escape hatches and ways to access the low-level APIs of your integration libraries,\\ndoing so can reduce the portability of your code. Only do it when you have a good reason to trade portability for low-level access.\\n:::\\n\\n\\n## Associating actors with data\\n\\nOne more reason to use abilities is that abilities can also help you to **associate actors with data** they need to perform their activities.\\nFor example, a commonly used ability is one to ["},{"kind":"code","text":"`TakeNotes`"},{"kind":"text","text":"](/api/core/class/TakeNotes), which allows your actors to start the test scenario\\nequipped with some data set, or record information about what they see in the test scenario so that they can act upon it later:\\n\\n"},{"kind":"code","text":"```typescript\\nimport { actorCalled, Notepad, TakeNotes } from \'@serenity-js/core\'\\n\\ninterface MyNotes {\\n  firstName: string;\\n  lastName: string;\\n  emailAddress: string;\\n}\\n\\nawait actorCalled(\'Trevor\')\\n  .whoCan(\\n    TakeNotes.using(Notepad.with<MyNotes>({\\n      firstName: \'Trevor\',\\n      lastName: \'Traveller\',\\n      emailAddress: \'Trevor.Traveller@example.org\',\\n    }))\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Actors with multiple abilities\\n\\nOf course, an actor can have **any number of abilities** they need to play their role.\\nFor example, it is quite common for an actor to be able to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb), ["},{"kind":"code","text":"`TakeNotes`"},{"kind":"text","text":"](/api/core/class/TakeNotes), and ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi):\\n\\n"},{"kind":"code","text":"```typescript\\nimport { actorCalled, Notepad, TakeNotes } from \'@serenity-js/core\'\\nimport { BrowseTheWebWithPlaywright } from \'@serenity-js/playwright\'\\nimport { CallAnApi } from \'@serenity-js/rest\'\\nimport { chromium } from \'playwright\'\\n\\nconst browser = await chromium.launch({ headless: true })\\nconst baseURL = \'https://example.org\'\\n\\ninterface MyNotes {\\n  firstName: string;\\n  lastName: string;\\n  emailAddress: string;\\n}\\n\\nawait actorCalled(\'Trevor\')\\n  .whoCan(\\n    BrowseTheWebWithPlaywright.using(browser, { baseURL }),\\n    CallAnApi.at(`${ baseURL }/api`),\\n    TakeNotes.using(Notepad.with<MyNotes>({\\n      firstName: \'Trevor\',\\n      lastName: \'Traveller\',\\n      emailAddress: \'Trevor.Traveller@example.org\',\\n    }))\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Writing custom abilities\\n\\nIf your system under test provides a type of interface that Serenity/JS doesn\'t support yet,\\nyou might want to implement a custom ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/), as well as [interactions](/api/core/class/Interaction/)\\nand [questions](/api/core/class/Question/) to interact with it.\\n\\nThe best way to start with that is for you to review the examples in the [Screenplay Pattern API docs](/api/core/class/Ability/),\\nas well as the [Serenity/JS code base on GitHub](https://github.com/serenity-js/serenity-js/tree/main/packages).\\nAlso note that all the [Serenity/JS modules](/handbook/getting-started/architecture)\\nhave their automated tests written in such a way to not only provide an **extremely high test coverage** for the framework itself,\\nbut to be **accessible** and act as a **reference implementation for you** to create your own integrations.\\n\\nIf you believe that the custom integration you\'ve developed could benefit the wider Serenity/JS community,\\nplease consider open-sourcing it yourself, or [contributing it](/community/contributing/) to the main framework.\\n\\n[![Join Serenity/JS Community Chat](https://img.shields.io/badge/Chat-Serenity%2FJS%20Community-FBD30B?logo=matrix)](https://matrix.to/#/#serenity-js:gitter.im)\\n\\n### Defining a custom ability to "},{"kind":"code","text":"`MakePhoneCalls`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport { Ability, actorCalled, Interaction } from \'@serenity-js/core\'\\n\\nclass MakePhoneCalls extends Ability {\\n\\n  // A static method is typically used to inject a client of a given interface\\n  // and instantiate the ability, for example:\\n  //   actorCalled(\'Phil\').whoCan(MakePhoneCalls.using(phone))\\n  static using(phone: Phone) {\\n    return new MakePhoneCalls(phone);\\n  }\\n\\n  // Abilities can hold state, for example: the client of a given interface,\\n  // additional configuration, or the result of the last interaction with a given interface.\\n  protected constructor(private readonly phone: Phone) {\\n  }\\n\\n  // Abilities expose methods that enable Interactions to call the system under test,\\n  // and Questions to retrieve information about its state.\\n  dial(phoneNumber: string): Promise<void> {\\n    // ...\\n  }\\n}\\n```"},{"kind":"text","text":"\\n\\n### Defining a custom interaction using the custom ability\\n\\n"},{"kind":"code","text":"```ts\\nimport { Answerable, Interaction, the } from \'@serenity-js/core\'\\n\\n// A custom interaction using the actor\'s ability:\\nconst Call = (phoneNumber: Answerable<string>) =>\\n  Interaction.where(the`#actor calls ${ phoneNumber }`, async actor => {\\n    await MakePhoneCalls.as(actor).dial(phoneNumber)\\n  })\\n```"},{"kind":"text","text":"\\n\\n### Using the custom ability and interaction in a test scenario\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\n\\nawait actorCalled(\'Connie\')\\n  .whoCan(MakePhoneCalls.using(phone))\\n  .attemptsTo(\\n    Call(phoneNumber)\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Using auto-initialisable and auto-discardable abilities\\n\\nAbilities that rely on resources that need to be initialised before they can be used,\\nor discarded before the actor is dismissed can implement\\nthe ["},{"kind":"code","text":"`Initialisable`"},{"kind":"text","text":"](/api/core/interface/Initialisable/)\\nor ["},{"kind":"code","text":"`Discardable`"},{"kind":"text","text":"](/api/core/interface/Discardable/) interfaces, respectively.\\n\\n### Defining a custom ability to "},{"kind":"code","text":"`QueryPostgresDB`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport {\\n  Ability, actorCalled, Discardable, Initialisable, Question, UsesAbilities,\\n} from \'@serenity-js/core\'\\n\\n// Some low-level interface-specific client we want the Actor to use,\\n// for example a PostgreSQL database client:\\nconst { Client } = require(\'pg\');\\n\\n// A custom Ability to give an Actor access to the low-level client:\\nclass QueryPostgresDB\\n  extends Ability\\n  implements Initialisable, Discardable\\n{\\n  constructor(private readonly client) {\\n  }\\n\\n  // Invoked by Serenity/JS upon the first invocation of `actor.attemptsTo`\\n  initialise(): Promise<void> | void {\\n    return this.client.connect();\\n  }\\n\\n  // Used to ensure that the Ability is not initialised more than once\\n  isInitialised(): boolean {\\n    return this.client._connected;\\n  }\\n\\n  // Discards any resources the Ability uses when the Actor is dismissed,\\n  // so when the Stage receives a SceneFinishes event for scenario-scoped actor,\\n  // or TestRunFinishes for cross-scenario-scoped actors\\n  discard(): Promise<void> | void {\\n    return this.client.end();\\n  }\\n\\n  // Any custom integration APIs the Ability, should make available to the Actor.\\n  // Here, we want the ability to enable the actor to query the database.\\n  query(query: string) {\\n    return this.client.query(query);\\n  }\\n\\n  // ... other custom integration APIs\\n}\\n```"},{"kind":"text","text":"\\n\\n### Defining a custom question using the custom ability\\n\\n"},{"kind":"code","text":"```ts\\n// A custom Question to allow the Actor query the database\\nconst CurrentDBUser = () =>\\n  Question.about(\'current db user\', actor =>\\n    QueryPostgresDB.as(actor)\\n      .query(\'SELECT current_user\')\\n      .then(result => result.rows[0].current_user)\\n  );\\n```"},{"kind":"text","text":"\\n\\n### Using the custom ability and question in a test scenario\\n\\n"},{"kind":"code","text":"```ts\\n// Example test scenario where the Actor uses the Ability to QueryPostgresDB\\n// to assert on the username the connection has been established with\\n\\nimport { describe, it } from \'mocha\'\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\ndescribe(\'Serenity/JS\', () => {\\n  it(\'can initialise and discard abilities automatically\', () =>\\n    actorCalled(\'Debbie\')\\n      .whoCan(new QueryPostgresDB(new Client()))\\n      .attemptsTo(\\n        Ensure.that(CurrentDBUser(), equals(\'jan\'))\\n      ))\\n})\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`AbilityType`"},{"kind":"text","text":"](/api/core/#AbilityType)\\n- ["},{"kind":"code","text":"`Initialisable`"},{"kind":"text","text":"](/api/core/interface/Initialisable/)\\n- ["},{"kind":"code","text":"`Discardable`"},{"kind":"text","text":"](/api/core/interface/Discardable/)\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\n- ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/)\\n- ["},{"kind":"code","text":"`TakeNotes`"},{"kind":"text","text":"](/api/core/class/TakeNotes/)"}]},"children":[{"id":491,"name":"as","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Ability.ts","line":402,"character":11}],"signatures":[{"id":492,"name":"as","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Used to access an [actor\'s](/api/core/class/Actor/) [ability](/api/core/class/Ability/) of the given type\\nfrom within the ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/) and ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/) classes.\\n\\n#### Retrieving an ability in an interaction definition\\n\\n"},{"kind":"code","text":"```ts\\nimport { Actor, Interaction } from \'@serenity-js/core\'\\nimport { BrowseTheWeb, Page } from \'@serenity-js/web\'\\n\\nexport const ClearLocalStorage = () =>\\n  Interaction.where(`#actor clears local storage`, async (actor: Actor) => {\\n    const browseTheWeb: BrowseTheWeb = BrowseTheWeb.as(actor)    // retrieve an ability\\n    const page: Page = await browseTheWeb.currentPage()\\n    await page.executeScript(() => window.localStorage.clear())\\n  })\\n```"},{"kind":"text","text":"\\n\\n#### Retrieving an ability in a question definition\\n\\n"},{"kind":"code","text":"```ts\\nimport { Actor, Question } from \'@serenity-js/core\'\\nimport { BrowseTheWeb, Page } from \'@serenity-js/web\'\\nimport { CallAnApi } from \'@serenity-js/rest\'\\n\\nconst LocalStorage = {\\n  numberOfItems: () =>\\n    Question.about<number>(`number of items in local storage`, async (actor: Actor) => {\\n      const browseTheWeb: BrowseTheWeb = BrowseTheWeb.as(actor)    // retrieve an ability\\n      const page: Page = await browseTheWeb.currentPage()\\n      return page.executeScript(() => window.localStorage.length)\\n    })\\n}\\n```"}]},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Ability.ts","line":402,"character":11}],"typeParameter":[{"id":493,"name":"A","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":490,"name":"Ability","package":"@serenity-js/core"}}],"parameters":[{"id":494,"name":"this","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":511,"typeArguments":[{"type":"reference","target":493,"name":"A","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"AbilityType","package":"@serenity-js/core"}},{"id":495,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":600,"name":"UsesAbilities","package":"@serenity-js/core"}}],"type":{"type":"reference","target":493,"name":"A","package":"@serenity-js/core","refersToTypeParameter":true}}]},{"id":496,"name":"abilityType","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Ability.ts","line":443,"character":11}],"signatures":[{"id":497,"name":"abilityType","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the most abstract type of this Ability class,\\nspecifically the first class in the inheritance hierarchy that directly extends the "},{"kind":"code","text":"`Ability`"},{"kind":"text","text":" class.\\n\\n"},{"kind":"code","text":"```ts\\nimport { Ability } from \'@serenity-js/core\';\\n\\nclass MyAbility extends Ability {}\\nclass MySpecialisedAbility extends MyAbility {}\\n\\nMyAbility.abilityType();            // returns MyAbility\\nMySpecialisedAbility.abilityType(); // returns MyAbility\\n```"}]},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Ability.ts","line":443,"character":11}],"type":{"type":"reference","target":511,"typeArguments":[{"type":"reference","target":490,"name":"Ability","package":"@serenity-js/core"}],"name":"AbilityType","package":"@serenity-js/core"}}]},{"id":505,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":506,"name":"new Ability","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":490,"name":"Ability","package":"@serenity-js/core"}}]},{"id":507,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Ability.ts","line":414,"character":4}],"signatures":[{"id":508,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a JSON representation of the ability and its current state, if available.\\nThe purpose of this method is to enable reporting the state of the ability in a human-readable format,\\nrather than to serialise and deserialise the ability itself."}]},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Ability.ts","line":414,"character":4}],"type":{"type":"reference","target":596,"name":"SerialisedAbility","package":"@serenity-js/core"}}]},{"id":509,"name":"abilityType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Ability.ts","line":461,"character":4}],"signatures":[{"id":510,"name":"abilityType","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the most abstract type of this Ability instance,\\nspecifically the first class in the inheritance hierarchy that directly extends the "},{"kind":"code","text":"`Ability`"},{"kind":"text","text":" class.\\n\\n"},{"kind":"code","text":"```ts\\nimport { Ability } from \'@serenity-js/core\';\\n\\nclass MyAbility extends Ability {}\\nclass MySpecialisedAbility extends MyAbility {}\\n\\nnew MyAbility().abilityType();            // returns MyAbility\\nnew MySpecialisedAbility().abilityType(); // returns MyAbility\\n```"}]},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Ability.ts","line":461,"character":4}],"type":{"type":"reference","target":511,"typeArguments":[{"type":"reference","target":490,"name":"Ability","package":"@serenity-js/core"}],"name":"AbilityType","package":"@serenity-js/core"}}]}],"groups":[{"title":"Constructors","children":[505]},{"title":"Methods","children":[491,496,507,509]}],"sources":[{"fileName":"packages/core/src/screenplay/abilities/Ability.ts","line":363,"character":22}],"extendedBy":[{"type":"reference","target":454,"name":"RaiseErrors"},{"type":"reference","target":524,"name":"AnswerQuestions"},{"type":"reference","target":561,"name":"PerformActivities"},{"type":"reference","target":911,"name":"TakeNotes"},{"type":"reference","target":1617,"name":"ScheduleWork"}],"permalink":"/api/core/class/Ability","previousId":1587,"nextId":1898},{"id":511,"name":"AbilityType","variant":"declaration","kind":2097152,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An interface describing the static access method that every ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/) class\\nneeds to provide in order to be accessible from within the [interactions](/api/core/class/Interaction/).\\n\\n#### Retrieving an ability from an interaction\\n\\n"},{"kind":"code","text":"```ts\\nimport { Ability, Answerable, actorCalled, Interaction, the } from \'@serenity-js/core\';\\n\\nclass MakePhoneCalls extends Ability {\\n  static using(phone: Phone) {\\n    return new MakePhoneCalls(phone);\\n  }\\n\\n  protected constructor(private readonly phone: Phone) {\\n  }\\n\\n  // some method that allows us to interact with the external interface of the system under test\\n  dial(phoneNumber: string): Promise<void> {\\n    // ...\\n  }\\n}\\n\\nconst Call = (phoneNumber: Answerable<string>) =>\\n  Interaction.where(the`#actor calls ${ phoneNumber }`, async actor => {\\n    await MakePhoneCalls.as(actor).dial(phoneNumber)\\n  });\\n\\nawait actorCalled(\'Connie\')\\n  .whoCan(MakePhoneCalls.using(phone))\\n  .attemptsTo(\\n    Call(phoneNumber),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/)\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/)"}]},"sources":[{"fileName":"packages/core/src/screenplay/abilities/AbilityType.ts","line":46,"character":12}],"typeParameters":[{"id":523,"name":"A","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":490,"name":"Ability","package":"@serenity-js/core"}}],"type":{"type":"intersection","types":[{"type":"reflection","declaration":{"id":512,"name":"__type","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/AbilityType.ts","line":47,"character":5}],"signatures":[{"id":513,"name":"__type","variant":"signature","kind":16384,"flags":{"isExternal":true,"isAbstract":true},"parameters":[{"id":514,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"reference","target":523,"name":"A","package":"@serenity-js/core","refersToTypeParameter":true}}]}},{"type":"reflection","declaration":{"id":515,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":516,"name":"as","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/AbilityType.ts","line":48,"character":8}],"signatures":[{"id":517,"name":"as","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/AbilityType.ts","line":48,"character":8}],"typeParameter":[{"id":518,"name":"S","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":490,"name":"Ability","package":"@serenity-js/core"}}],"parameters":[{"id":519,"name":"this","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":511,"typeArguments":[{"type":"reference","target":518,"name":"S","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"AbilityType","package":"@serenity-js/core"}},{"id":520,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":600,"name":"UsesAbilities","package":"@serenity-js/core"}}],"type":{"type":"reference","target":518,"name":"S","package":"@serenity-js/core","refersToTypeParameter":true}}]},{"id":521,"name":"abilityType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/AbilityType.ts","line":52,"character":8}],"signatures":[{"id":522,"name":"abilityType","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/AbilityType.ts","line":52,"character":8}],"type":{"type":"reference","target":511,"typeArguments":[{"type":"reference","target":490,"name":"Ability","package":"@serenity-js/core"}],"name":"AbilityType","package":"@serenity-js/core"}}]}],"groups":[{"title":"Methods","children":[516,521]}],"sources":[{"fileName":"packages/core/src/screenplay/abilities/AbilityType.ts","line":47,"character":44}]}}]},"permalink":"/api/core#AbilityType","nextId":524},{"id":524,"name":"AnswerQuestions","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"This ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/) enables an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to resolve the value of a given ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable).\\n\\n"},{"kind":"code","text":"`AnswerQuestions`"},{"kind":"text","text":" is used internally by ["},{"kind":"code","text":"`Actor.answer`"},{"kind":"text","text":"](/api/core/class/Actor/#answer), and it is unlikely you\'ll ever need to use it directly in your code.\\nThat is, unless you\'re building a custom Serenity/JS extension and want to override the default behaviour of the framework,\\nin which case you should check out the [Contributor\'s Guide](/community/contributing/)."}]},"children":[{"id":544,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Ability.ts","line":414,"character":4}],"signatures":[{"id":545,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a JSON representation of the ability and its current state, if available.\\nThe purpose of this method is to enable reporting the state of the ability in a human-readable format,\\nrather than to serialise and deserialise the ability itself."}]},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Ability.ts","line":414,"character":4}],"type":{"type":"reference","target":596,"name":"SerialisedAbility","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":508,"name":"Ability.toJSON"}}],"inheritedFrom":{"type":"reference","target":507,"name":"Ability.toJSON"}},{"id":546,"name":"abilityType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Ability.ts","line":461,"character":4}],"signatures":[{"id":547,"name":"abilityType","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the most abstract type of this Ability instance,\\nspecifically the first class in the inheritance hierarchy that directly extends the "},{"kind":"code","text":"`Ability`"},{"kind":"text","text":" class.\\n\\n"},{"kind":"code","text":"```ts\\nimport { Ability } from \'@serenity-js/core\';\\n\\nclass MyAbility extends Ability {}\\nclass MySpecialisedAbility extends MyAbility {}\\n\\nnew MyAbility().abilityType();            // returns MyAbility\\nnew MySpecialisedAbility().abilityType(); // returns MyAbility\\n```"}]},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Ability.ts","line":461,"character":4}],"type":{"type":"reference","target":511,"typeArguments":[{"type":"reference","target":490,"name":"Ability","package":"@serenity-js/core"}],"name":"AbilityType","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":510,"name":"Ability.abilityType"}}],"inheritedFrom":{"type":"reference","target":509,"name":"Ability.abilityType"}},{"id":536,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/AnswerQuestions.ts","line":18,"character":4}],"signatures":[{"id":537,"name":"new AnswerQuestions","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/AnswerQuestions.ts","line":18,"character":4}],"parameters":[{"id":538,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1049,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":600,"name":"UsesAbilities","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":524,"name":"AnswerQuestions","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":506,"name":"Ability.constructor"}}],"overwrites":{"type":"reference","target":505,"name":"Ability.constructor"}},{"id":540,"name":"answer","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/AnswerQuestions.ts","line":22,"character":4}],"signatures":[{"id":541,"name":"answer","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/AnswerQuestions.ts","line":22,"character":4}],"typeParameter":[{"id":542,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":543,"name":"answerable","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":688,"typeArguments":[{"type":"reference","target":542,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":542,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]}],"groups":[{"title":"Constructors","children":[536]},{"title":"Methods","children":[544,546,540]}],"sources":[{"fileName":"packages/core/src/screenplay/abilities/AnswerQuestions.ts","line":17,"character":13}],"extendedTypes":[{"type":"reference","target":490,"name":"Ability","package":"@serenity-js/core"}],"permalink":"/api/core/class/AnswerQuestions","previousId":511,"nextId":553},{"id":548,"name":"CanHaveAbilities","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Describes an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) who can have an ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/) to perform some ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/).\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/)\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)"}]},"children":[{"id":549,"name":"whoCan","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/CanHaveAbilities.ts","line":19,"character":4}],"signatures":[{"id":550,"name":"whoCan","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Assigns an ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/) or several abilities to the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)"}]},"sources":[{"fileName":"packages/core/src/screenplay/abilities/CanHaveAbilities.ts","line":19,"character":4}],"parameters":[{"id":551,"name":"abilities","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":490,"name":"Ability","package":"@serenity-js/core"}}}],"type":{"type":"reference","target":552,"name":"Returned_Type","package":"@serenity-js/core","qualifiedName":"CanHaveAbilities.Returned_Type","refersToTypeParameter":true}}]}],"groups":[{"title":"Methods","children":[549]}],"sources":[{"fileName":"packages/core/src/screenplay/abilities/CanHaveAbilities.ts","line":14,"character":17}],"typeParameters":[{"id":552,"name":"Returned_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"reference","target":600,"name":"UsesAbilities","package":"@serenity-js/core"}}],"implementedBy":[{"type":"reference","target":637,"name":"Actor"}],"permalink":"/api/core/interface/CanHaveAbilities","previousId":1584,"nextId":600},{"id":553,"name":"Discardable","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An interface to be implemented by any ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/) that needs to free up\\nthe resources it uses, e.g. disconnect from a database.\\n\\nThis ["},{"kind":"code","text":"`Discardable.discard`"},{"kind":"text","text":"](/api/core/interface/Discardable/#discard) method is invoked directly by the [actor](/api/core/class/Actor/), and indirectly by the [stage](/api/core/class/Stage/):\\n- when [SceneFinishes](/api/core-events/class/SceneFinishes/), for actors instantiated after [SceneStarts](/api/core-events/class/SceneStarts/) - e.g. within a test scenario or in a \\"before each\\" hook\\n- when ["},{"kind":"code","text":"`TestRunFinishes`"},{"kind":"text","text":"](/api/core-events/class/TestRunFinishes/), for actors instantiated before [SceneStarts](/api/core-events/class/SceneStarts/) - e.g. in a \\"before all\\" hook\\n\\nNote that events such as [SceneFinishes](/api/core-events/class/SceneFinishes/) and ["},{"kind":"code","text":"`TestRunFinishes`"},{"kind":"text","text":"](/api/core-events/class/TestRunFinishes/) are emitted by Serenity/JS test runner adapters,\\nsuch as "},{"kind":"code","text":"`@serenity-js/cucumber`"},{"kind":"text","text":", "},{"kind":"code","text":"`@serenity-js/mocha`"},{"kind":"text","text":", "},{"kind":"code","text":"`@serenity-js/jasmine`"},{"kind":"text","text":", and so on.\\nConsult their respective readmes to learn how to register them with your test runner of choice.\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/)\\n- ["},{"kind":"code","text":"`AbilityType`"},{"kind":"text","text":"](/api/core/#AbilityType)\\n- ["},{"kind":"code","text":"`Initialisable`"},{"kind":"text","text":"](/api/core/interface/Initialisable/)"}]},"children":[{"id":554,"name":"discard","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Discardable.ts","line":25,"character":4}],"signatures":[{"id":555,"name":"discard","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Discards the resources associated with this ability."}]},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Discardable.ts","line":25,"character":4}],"type":{"type":"union","types":[{"type":"intrinsic","name":"void"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}],"groups":[{"title":"Methods","children":[554]}],"sources":[{"fileName":"packages/core/src/screenplay/abilities/Discardable.ts","line":20,"character":17}],"implementedBy":[{"type":"reference","target":1617,"name":"ScheduleWork"}],"permalink":"/api/core/interface/Discardable","previousId":524,"nextId":556},{"id":556,"name":"Initialisable","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An interface to be implemented by any ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/) that needs to initialise\\nthe resources it uses, e.g. establish a database connection.\\n\\nThe ["},{"kind":"code","text":"`Initialisable.initialise`"},{"kind":"text","text":"](/api/core/interface/Initialisable/#initialise) method is invoked whenever ["},{"kind":"code","text":"`Actor.attemptsTo`"},{"kind":"text","text":"](/api/core/class/Actor/#attemptsTo) method is called,\\nbut **only when** ["},{"kind":"code","text":"`Initialisable.isInitialised`"},{"kind":"text","text":"](/api/core/interface/Initialisable/#isInitialised) returns false. This is to avoid initialising abilities more than once.\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/)\\n- ["},{"kind":"code","text":"`AbilityType`"},{"kind":"text","text":"](/api/core/#AbilityType)\\n- ["},{"kind":"code","text":"`Discardable`"},{"kind":"text","text":"](/api/core/interface/Discardable/)"}]},"children":[{"id":557,"name":"initialise","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Initialisable.ts","line":24,"character":4}],"signatures":[{"id":558,"name":"initialise","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Initialises the ability. Invoked whenever ["},{"kind":"code","text":"`Actor.attemptsTo`"},{"kind":"text","text":"](/api/core/class/Actor/#attemptsTo) method is called,\\nbut **only when** ["},{"kind":"code","text":"`Initialisable.isInitialised`"},{"kind":"text","text":"](/api/core/interface/Initialisable/#isInitialised) returns false.\\n\\nMake sure to implement ["},{"kind":"code","text":"`Initialisable.isInitialised`"},{"kind":"text","text":"](/api/core/interface/Initialisable/#isInitialised) so that it returns "},{"kind":"code","text":"`true`"},{"kind":"text","text":"\\nwhen the ability has been successfully initialised."}]},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Initialisable.ts","line":24,"character":4}],"type":{"type":"union","types":[{"type":"intrinsic","name":"void"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]},{"id":559,"name":"isInitialised","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Initialisable.ts","line":33,"character":4}],"signatures":[{"id":560,"name":"isInitialised","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Should return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" when all the resources that the given ability needs\\nhave been initialised. Should return "},{"kind":"code","text":"`false`"},{"kind":"text","text":" if the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) should\\ninitialise them again when ["},{"kind":"code","text":"`Actor.attemptsTo`"},{"kind":"text","text":"](/api/core/class/Actor/#attemptsTo) is called."}],"blockTags":[{"tag":"@returns","content":[]}]},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Initialisable.ts","line":33,"character":4}],"type":{"type":"intrinsic","name":"boolean"}}]}],"groups":[{"title":"Methods","children":[557,559]}],"sources":[{"fileName":"packages/core/src/screenplay/abilities/Initialisable.ts","line":15,"character":17}],"permalink":"/api/core/interface/Initialisable","previousId":553,"nextId":561},{"id":561,"name":"PerformActivities","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/) that enables an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to perform a given ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/).\\n\\n["},{"kind":"code","text":"`PerformActivities`"},{"kind":"text","text":"](/api/core/class/PerformActivities/) is used internally by ["},{"kind":"code","text":"`Actor.attemptsTo`"},{"kind":"text","text":"](/api/core/class/Actor/#attemptsTo), and it is unlikely you\'ll ever need to use it directly in your code.\\nThat is, unless you\'re building a custom Serenity/JS extension and want to override the default behaviour of the framework,\\nin which case you should check out the [Contributor\'s Guide](/community/contributing)."}]},"children":[{"id":592,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Ability.ts","line":414,"character":4}],"signatures":[{"id":593,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a JSON representation of the ability and its current state, if available.\\nThe purpose of this method is to enable reporting the state of the ability in a human-readable format,\\nrather than to serialise and deserialise the ability itself."}]},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Ability.ts","line":414,"character":4}],"type":{"type":"reference","target":596,"name":"SerialisedAbility","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":508,"name":"Ability.toJSON"}}],"inheritedFrom":{"type":"reference","target":507,"name":"Ability.toJSON"}},{"id":594,"name":"abilityType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Ability.ts","line":461,"character":4}],"signatures":[{"id":595,"name":"abilityType","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the most abstract type of this Ability instance,\\nspecifically the first class in the inheritance hierarchy that directly extends the "},{"kind":"code","text":"`Ability`"},{"kind":"text","text":" class.\\n\\n"},{"kind":"code","text":"```ts\\nimport { Ability } from \'@serenity-js/core\';\\n\\nclass MyAbility extends Ability {}\\nclass MySpecialisedAbility extends MyAbility {}\\n\\nnew MyAbility().abilityType();            // returns MyAbility\\nnew MySpecialisedAbility().abilityType(); // returns MyAbility\\n```"}]},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Ability.ts","line":461,"character":4}],"type":{"type":"reference","target":511,"typeArguments":[{"type":"reference","target":490,"name":"Ability","package":"@serenity-js/core"}],"name":"AbilityType","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":510,"name":"Ability.abilityType"}}],"inheritedFrom":{"type":"reference","target":509,"name":"Ability.abilityType"}},{"id":569,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/PerformActivities.ts","line":34,"character":4}],"signatures":[{"id":570,"name":"new PerformActivities","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/PerformActivities.ts","line":34,"character":4}],"parameters":[{"id":571,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1049,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":600,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":605,"name":"PerformsActivities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":572,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":573,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/PerformActivities.ts","line":35,"character":92}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[573]}],"sources":[{"fileName":"packages/core/src/screenplay/abilities/PerformActivities.ts","line":35,"character":90}]}}]}},{"id":574,"name":"stage","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":2577,"name":"EmitsDomainEvents","package":"@serenity-js/core"}}],"type":{"type":"reference","target":561,"name":"PerformActivities","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":506,"name":"Ability.constructor"}}],"overwrites":{"type":"reference","target":505,"name":"Ability.constructor"}},{"id":579,"name":"perform","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/PerformActivities.ts","line":41,"character":10}],"signatures":[{"id":580,"name":"perform","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/PerformActivities.ts","line":41,"character":10}],"parameters":[{"id":581,"name":"activity","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":610,"name":"Activity","package":"@serenity-js/core"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]}],"groups":[{"title":"Constructors","children":[569]},{"title":"Methods","children":[592,594,579]}],"sources":[{"fileName":"packages/core/src/screenplay/abilities/PerformActivities.ts","line":33,"character":13}],"extendedTypes":[{"type":"reference","target":490,"name":"Ability","package":"@serenity-js/core"}],"permalink":"/api/core/class/PerformActivities","previousId":556,"nextId":596},{"id":596,"name":"SerialisedAbility","variant":"declaration","kind":256,"flags":{"isExternal":true},"children":[{"id":597,"name":"type","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/SerialisedAbility.ts","line":7,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":598,"name":"class","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/SerialisedAbility.ts","line":8,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":599,"name":"options","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/SerialisedAbility.ts","line":9,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"}}],"groups":[{"title":"Properties","children":[597,598,599]}],"sources":[{"fileName":"packages/core/src/screenplay/abilities/SerialisedAbility.ts","line":6,"character":17}],"permalink":"/api/core/interface/SerialisedAbility","previousId":561,"nextId":697},{"id":600,"name":"UsesAbilities","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Describes an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) who can use their [abilities](/api/core/class/Ability/) to perform an ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/)\\nor answer a ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/).\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/)\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)"}]},"children":[{"id":601,"name":"abilityTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/UsesAbilities.ts","line":23,"character":4}],"signatures":[{"id":602,"name":"abilityTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Provides access to the [actor\'s](/api/core/class/Actor/) ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/) to do something"}]},"sources":[{"fileName":"packages/core/src/screenplay/abilities/UsesAbilities.ts","line":23,"character":4}],"typeParameter":[{"id":603,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":490,"name":"Ability","package":"@serenity-js/core"}}],"parameters":[{"id":604,"name":"doSomething","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The type of ability to look up, e.g. ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/) or ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/)"}]},"type":{"type":"reference","target":511,"typeArguments":[{"type":"reference","target":603,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"AbilityType","package":"@serenity-js/core"}}],"type":{"type":"reference","target":603,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true}}]}],"groups":[{"title":"Methods","children":[601]}],"sources":[{"fileName":"packages/core/src/screenplay/abilities/UsesAbilities.ts","line":15,"character":17}],"implementedBy":[{"type":"reference","target":637,"name":"Actor"}],"permalink":"/api/core/interface/UsesAbilities","previousId":548,"nextId":605},{"id":605,"name":"PerformsActivities","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Describes an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) who can perform a sequence of [activities](/api/core/class/Activity/),\\nsuch as [tasks](/api/core/class/Task/) or [interactions](/api/core/class/Interaction/).\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/)\\n- ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/)\\n- ["},{"kind":"code","text":"`Task`"},{"kind":"text","text":"](/api/core/class/Task/)\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)"}]},"children":[{"id":606,"name":"attemptsTo","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Makes the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) attempt to perform a sequence of [activities](/api/core/class/Activity/)."}]},"sources":[{"fileName":"packages/core/src/screenplay/activities/PerformsActivities.ts","line":20,"character":4}],"type":{"type":"reflection","declaration":{"id":607,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/activities/PerformsActivities.ts","line":20,"character":16}],"signatures":[{"id":608,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/activities/PerformsActivities.ts","line":20,"character":16}],"parameters":[{"id":609,"name":"activities","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":610,"name":"Activity","package":"@serenity-js/core"}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]}}}],"groups":[{"title":"Properties","children":[606]}],"sources":[{"fileName":"packages/core/src/screenplay/activities/PerformsActivities.ts","line":15,"character":17}],"implementedBy":[{"type":"reference","target":637,"name":"Actor"}],"permalink":"/api/core/interface/PerformsActivities","previousId":600,"nextId":692},{"id":692,"name":"CollectsArtifacts","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Describes an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) who can collect artifacts, such as photos or "},{"kind":"code","text":"`JSON`"},{"kind":"text","text":" data.,\\nwhile the scenario is being executed\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)"}]},"children":[{"id":693,"name":"collect","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/artifacts/CollectsArtifacts.ts","line":77,"character":4}],"signatures":[{"id":694,"name":"collect","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Makes the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) collect an artifact so that it can be included in the test report.\\n\\n#### Implementing a custom interaction to attach artifacts\\n\\n"},{"kind":"code","text":"```ts\\nimport * as fs from \'node:fs\'\\nimport { Answerable, Interaction, the } from \'@serenity-js/core\'\\nimport { Path } from \'@serenity-js/core/lib/io\'\\nimport { Name, TextData } from \'@serenity-js/core/lib/model\'\\n\\nexport class Attach {\\n\\n  static contentsOf = (pathToFile: Path): Interaction =>\\n    Interaction.where(`#actor attaches contents of ${ pathToFile.basename() }`, async actor => {\\n      const data = fs.readFileSync(pathToFile.value).toString(\'utf-8\');\\n\\n      actor.collect(\\n        TextData.fromJSON({ contentType: \'text/plain\', data }),\\n        new Name(pathToFile.basename()),\\n      )\\n    })\\n\\n  static textData = (contents: Answerable<string>, name?: string): Interaction =>\\n    Interaction.where(the`#actor attaches text data`, async actor => {\\n      const data = await actor.answer(contents);\\n\\n      actor.collect(\\n        TextData.fromJSON({ contentType: \'text/plain\', data }),\\n        name && new Name(name),\\n      )\\n    })\\n}\\n```"},{"kind":"text","text":"\\n\\n#### Attaching plain text\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Path } from \'@serenity-js/core/lib/io\'\\n\\nactorCalled(\'Alice\').attemptsTo(\\n  Attach.textData(\'some text\', \'some name\'),\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Attaching contents of a text file\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Log } from \'@serenity-js/core\'\\n\\nactorCalled(\'Alice\').attemptsTo(\\n  Attach.contentsOf(Path.from(__dirname, \'output/server.log\')),\\n)\\n```"}]},"sources":[{"fileName":"packages/core/src/screenplay/artifacts/CollectsArtifacts.ts","line":77,"character":4}],"parameters":[{"id":695,"name":"artifact","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The artifact to be collected, such as "},{"kind":"code","text":"`JSON`"},{"kind":"text","text":" data."}]},"type":{"type":"reference","name":"Artifact","package":"@serenity-js/core"}},{"id":696,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The name of the artifact to make it easy to recognise in the test report"}]},"type":{"type":"reference","name":"Name","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"void"}}]}],"groups":[{"title":"Methods","children":[693]}],"sources":[{"fileName":"packages/core/src/screenplay/artifacts/CollectsArtifacts.ts","line":12,"character":17}],"implementedBy":[{"type":"reference","target":637,"name":"Actor"}],"permalink":"/api/core/interface/CollectsArtifacts","previousId":605,"nextId":1049},{"id":697,"name":"Debug","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the [actor](/api/core/class/Actor/) to evaluate and [log](/api/core/class/Log/) the provided [answerable](/api/core/#Answerable) values.\\n\\nSince this interaction **accepts a callback function** that receives the evaluated results,\\nthe best way to use it is while **running the test scenario via a Node.js debugger**.\\nSee the links below to learn how to do it in popular IDEs.\\n\\n## Debugging Answerable values\\n\\n["},{"kind":"code","text":"`Debug.values`"},{"kind":"text","text":"](/api/core/class/Debug/#values) accepts a callback function that receives an array of ["},{"kind":"code","text":"`DebuggingResult`"},{"kind":"text","text":"](/api/core/interface/DebuggingResult/) objects,\\nas well as the result of evaluating each provided [answerable](/api/core/#Answerable) with ["},{"kind":"code","text":"`Actor.answer`"},{"kind":"text","text":"](/api/core/class/Actor/#answer).\\n\\n"},{"kind":"code","text":"```typescript\\nimport { actorCalled, Debug } from \'@serenity-js/core\'\\nimport { Navigate, Page } from \'@serenity-js/web\'\\n\\n// Running the below through the Node.js debugger makes the actor resolve the provided values\\n// and return them to the debugger function, where you can investigate their contents,\\n// or inspect any Errors the evaluation has resulted with.\\nawait actorCalled(\'Debbie\').attemptsTo(\\n    Navigate.to(\'http://example.org\'),\\n    Debug.values((results, title, url) => {\\n        // set a breakpoint here to view `results`, `title` and `url` in your IDE debugger\\n    }, Page.current().title(), Page.current().url()), // accepts multiple values\\n);\\n```"},{"kind":"text","text":"\\n\\n## Accessing Playwright Page\\n\\n[Playwright Test for VSCode](https://marketplace.visualstudio.com/items?itemName=ms-playwright.playwright)\\nprovides features that allow for [experimenting with web UI locators](https://marketplace.visualstudio.com/items?itemName=ms-playwright.playwright#tune-locators)\\nwhile the test is paused at breakpoint.\\n\\nSince this functionality is specific to [Playwright](/api/playwright),\\nyou can use it by passing ["},{"kind":"code","text":"`PlaywrightPage.current().nativePage()`"},{"kind":"text","text":"](/api/playwright/class/PlaywrightPage/#current)\\nto Serenity/JS ["},{"kind":"code","text":"`Debug.values`"},{"kind":"text","text":"](/api/core/class/Debug/#values). Also make sure to name the evaluated value "},{"kind":"code","text":"`page`"},{"kind":"text","text":", as this is the variable name that the Playwright VSCode extension expects.\\n\\n"},{"kind":"code","text":"```typescript\\nimport { actorCalled, Debug } from \'@serenity-js/core\'\\nimport { PlaywrightPage } from \'@serenity-js/playwright\'\\n\\n// Running the below through the Node.js debugger makes the actor resolve the provided values\\n// and return them to the debugger function, where you can investigate their contents,\\n// or inspect any Errors the evaluation has resulted with.\\nawait actorCalled(\'Debbie\').attemptsTo(\\n    Navigate.to(\'http://example.org\'),\\n    Debug.values((results, page) => {\\n        // set a breakpoint here to use Playwright locator debugging features\\n        page.locator(\'.example-css-class\')\\n        // note that you can change this selector while having the test paused at breakpoint\\n    }, PlaywrightPage.current().nativePage()),\\n);\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- [Node.js debugging - Getting started](https://nodejs.org/en/docs/guides/debugging-getting-started/)\\n- [Node.js debugging in VS Code](https://code.visualstudio.com/docs/nodejs/nodejs-debugging)\\n- [Running and debugging Node.js in WebStorm](https://www.jetbrains.com/help/webstorm/running-and-debugging-node-js.html)\\n- [Playwright Test for VSCode](https://marketplace.visualstudio.com/items?itemName=ms-playwright.playwright)"}]},"children":[{"id":698,"name":"values","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/debugging/Debug.ts","line":87,"character":11}],"signatures":[{"id":699,"name":"values","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the [actor](/api/core/class/Actor/) to evaluate the provided "},{"kind":"code","text":"`values`"},{"kind":"text","text":",\\nlog the results, and then pass them to your "},{"kind":"code","text":"`debuggerFunction`"},{"kind":"text","text":".\\n\\nTo use this interaction, run your test scenario in the Node.js debugger\\nand set a breakpoint inside the "},{"kind":"code","text":"`debuggerFunction`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/src/screenplay/debugging/Debug.ts","line":87,"character":11}],"typeParameter":[{"id":700,"name":"Values","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"unknown"}}}],"parameters":[{"id":701,"name":"debuggerFunction","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":702,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/debugging/Debug.ts","line":87,"character":79}],"signatures":[{"id":703,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/debugging/Debug.ts","line":87,"character":79}],"parameters":[{"id":704,"name":"results","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"mapped","parameter":"Index","parameterType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]},"templateType":{"type":"reference","target":752,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","typeArguments":[{"type":"reference","name":"Index","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Index","package":"@serenity-js/core","refersToTypeParameter":true},"objectType":{"type":"reference","target":700,"name":"Values","package":"@serenity-js/core","refersToTypeParameter":true}}],"name":"DebuggingResult","package":"@serenity-js/core"}}},{"id":705,"name":"answers","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"mapped","parameter":"Index","parameterType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]},"templateType":{"type":"reference","target":690,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","typeArguments":[{"type":"reference","name":"Index","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Index","package":"@serenity-js/core","refersToTypeParameter":true},"objectType":{"type":"reference","target":700,"name":"Values","package":"@serenity-js/core","refersToTypeParameter":true}}],"name":"Answered","package":"@serenity-js/core"}}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"void"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}},{"id":706,"name":"values","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"reference","target":700,"name":"Values","package":"@serenity-js/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":793,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":737,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":38,"character":4}],"signatures":[{"id":738,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":38,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":813,"name":"Interaction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","target":812,"name":"Interaction.instantiationLocation"}},{"id":733,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/debugging/Debug.ts","line":122,"character":10}],"signatures":[{"id":734,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the provided ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to perform this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/).\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`PerformsActivities`"},{"kind":"text","text":"](/api/core/interface/PerformsActivities/)\\n- ["},{"kind":"code","text":"`UsesAbilities`"},{"kind":"text","text":"](/api/core/interface/UsesAbilities/)\\n- ["},{"kind":"code","text":"`AnswersQuestions`"},{"kind":"text","text":"](/api/core/interface/AnswersQuestions/)"}]},"sources":[{"fileName":"packages/core/src/screenplay/debugging/Debug.ts","line":122,"character":10}],"parameters":[{"id":735,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":600,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":1049,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":692,"name":"CollectsArtifacts","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":809,"name":"Interaction.performAs"}}],"overwrites":{"type":"reference","target":808,"name":"Interaction.performAs"}},{"id":739,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"signatures":[{"id":740,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"parameters":[{"id":741,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1049,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":600,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":742,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":743,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":66}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[743]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":64}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":815,"name":"Interaction.describedBy"}}],"inheritedFrom":{"type":"reference","target":814,"name":"Interaction.describedBy"}},{"id":749,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"signatures":[{"id":750,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":825,"name":"Interaction.toString"}}],"inheritedFrom":{"type":"reference","target":824,"name":"Interaction.toString"}}],"groups":[{"title":"Methods","children":[698,737,733,739,749]}],"sources":[{"fileName":"packages/core/src/screenplay/debugging/Debug.ts","line":75,"character":13}],"typeParameters":[{"id":751,"name":"Values","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"unknown"}],"name":"Answerable","package":"@serenity-js/core"}}}],"extendedTypes":[{"type":"reference","target":793,"name":"Interaction","package":"@serenity-js/core"}],"permalink":"/api/core/class/Debug","previousId":596,"nextId":752},{"id":752,"name":"DebuggingResult","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An interface describing debugging data received by the callback function passed to ["},{"kind":"code","text":"`Debug.values`"},{"kind":"text","text":"](/api/core/class/Debug/#values)."}]},"children":[{"id":753,"name":"description","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/debugging/DebuggingResult.ts","line":7,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":754,"name":"value","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/debugging/DebuggingResult.ts","line":8,"character":4}],"type":{"type":"reference","target":756,"name":"T","package":"@serenity-js/core","qualifiedName":"DebuggingResult.T","refersToTypeParameter":true}},{"id":755,"name":"error","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/debugging/DebuggingResult.ts","line":9,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}],"groups":[{"title":"Properties","children":[753,754,755]}],"sources":[{"fileName":"packages/core/src/screenplay/debugging/DebuggingResult.ts","line":6,"character":17}],"typeParameters":[{"id":756,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"permalink":"/api/core/interface/DebuggingResult","previousId":697,"nextId":757},{"id":757,"name":"Log","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\nto [collect](/api/core/interface/CollectsArtifacts/) arbitrary static values\\nand answers to [answerables](/api/core/#Answerable),\\nso that they can be sent to the [stage crew members](/api/core/interface/StageCrewMember/)\\nand printed to the terminal by the ["},{"kind":"code","text":"`ConsoleReporter`"},{"kind":"text","text":"](/api/console-reporter/class/ConsoleReporter/)\\nor attached to the HTML report by the ["},{"kind":"code","text":"`SerenityBDDReporter`"},{"kind":"text","text":"](/api/serenity-bdd/class/SerenityBDDReporter/).\\n\\n## Logging static and "},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":" values\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Log } from \'@serenity-js/core\'\\nimport { Page } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Laura\').attemptsTo(\\n  Log.the(\'Current page\', Page.current().title(), Page.current().url()),\\n)\\n```"}]},"children":[{"id":758,"name":"the","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/debugging/Log.ts","line":42,"character":11}],"signatures":[{"id":759,"name":"the","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a new [interaction](/api/core/class/Interaction/) to ["},{"kind":"code","text":"`Log`"},{"kind":"text","text":"](/api/core/class/Log/)\\n\\nNote that this method accepts [variable number of arguments](https://www.typescriptlang.org/docs/handbook/functions.html#rest-parameters),\\nso that you can easily log several values at the same time."}]},"sources":[{"fileName":"packages/core/src/screenplay/debugging/Log.ts","line":42,"character":11}],"parameters":[{"id":760,"name":"items","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"comment":{"summary":[{"kind":"text","text":"The items to be logged"}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"reference","target":793,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":779,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":38,"character":4}],"signatures":[{"id":780,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":38,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":813,"name":"Interaction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","target":812,"name":"Interaction.instantiationLocation"}},{"id":775,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/debugging/Log.ts","line":59,"character":10}],"signatures":[{"id":776,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the provided ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to perform this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/).\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`PerformsActivities`"},{"kind":"text","text":"](/api/core/interface/PerformsActivities/)\\n- ["},{"kind":"code","text":"`UsesAbilities`"},{"kind":"text","text":"](/api/core/interface/UsesAbilities/)\\n- ["},{"kind":"code","text":"`AnswersQuestions`"},{"kind":"text","text":"](/api/core/interface/AnswersQuestions/)"}]},"sources":[{"fileName":"packages/core/src/screenplay/debugging/Log.ts","line":59,"character":10}],"parameters":[{"id":777,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":600,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":1049,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":692,"name":"CollectsArtifacts","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":809,"name":"Interaction.performAs"}}],"overwrites":{"type":"reference","target":808,"name":"Interaction.performAs"}},{"id":781,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"signatures":[{"id":782,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"parameters":[{"id":783,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1049,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":600,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":784,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":785,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":66}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[785]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":64}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":815,"name":"Interaction.describedBy"}}],"inheritedFrom":{"type":"reference","target":814,"name":"Interaction.describedBy"}},{"id":791,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"signatures":[{"id":792,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":825,"name":"Interaction.toString"}}],"inheritedFrom":{"type":"reference","target":824,"name":"Interaction.toString"}}],"groups":[{"title":"Methods","children":[758,779,775,781,791]}],"sources":[{"fileName":"packages/core/src/screenplay/debugging/Log.ts","line":31,"character":13}],"extendedTypes":[{"type":"reference","target":793,"name":"Interaction","package":"@serenity-js/core"}],"permalink":"/api/core/class/Log","previousId":752,"nextId":1062},{"id":826,"name":"ChainableSetter","variant":"declaration","kind":256,"flags":{"isExternal":true},"children":[{"id":827,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/ChainableSetter.ts","line":8,"character":4}],"signatures":[{"id":828,"name":"set","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/ChainableSetter.ts","line":8,"character":4}],"typeParameter":[{"id":829,"name":"K","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":830,"name":"key","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":829,"name":"K","package":"@serenity-js/core","refersToTypeParameter":true}},{"id":831,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":688,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","target":829,"name":"K","package":"@serenity-js/core","refersToTypeParameter":true},"objectType":{"type":"reference","target":832,"name":"T","package":"@serenity-js/core","qualifiedName":"ChainableSetter.T","refersToTypeParameter":true}}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"intersection","types":[{"type":"reference","target":826,"typeArguments":[{"type":"reference","target":832,"name":"T","package":"@serenity-js/core","qualifiedName":"ChainableSetter.T","refersToTypeParameter":true}],"name":"ChainableSetter","package":"@serenity-js/core"},{"type":"reference","target":793,"name":"Interaction","package":"@serenity-js/core"}]}}]}],"groups":[{"title":"Methods","children":[827]}],"sources":[{"fileName":"packages/core/src/screenplay/notes/ChainableSetter.ts","line":7,"character":17}],"typeParameters":[{"id":832,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"}}],"implementedBy":[{"type":"reference","target":878,"name":"NotepadAdapter"}],"permalink":"/api/core/interface/ChainableSetter","previousId":1270,"nextId":833},{"id":833,"name":"Notepad","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Stores notes recorded by an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/).\\n\\nSee ["},{"kind":"code","text":"`TakeNotes`"},{"kind":"text","text":"](/api/core/class/TakeNotes/) and [notes](/api/core/function/notes) for more usage examples.\\n\\n## Sharing a notepad between actors\\n\\n"},{"kind":"code","text":"```ts\\nimport { Actor, Cast, Notepad, TakeNotes } from \'@serenity-js/core\'\\n\\ninterface MyNotes {\\n  auth: {\\n    username: string;\\n    password: string;\\n  }\\n}\\n\\nexport class Actors implements Cast {\\n\\n  // initialise a shared notepad when the Actors class is initialised\\n  private readonly sharedNotepad = Notepad.with<MyNotes>({\\n    auth: {\\n      username: \'test-user\',\\n      password: \'SuperSecretP@ssword!\',\\n    }\\n  });\\n\\n  prepare(actor: Actor): Actor {\\n    switch (actor.name) {\\n      case \'Alice\':\\n      case \'Bob\':\\n        // Alice and Bob will share their notepad\\n        return actor.whoCan(TakeNotes.using(this.sharedNotepad));\\n      default:\\n        // other actors will get their own notepads\\n        return actor.whoCan(TakeNotes.using(Notepad.empty<AuthCredentials>()));\\n    }\\n  }\\n}\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`TakeNotes`"},{"kind":"text","text":"](/api/core/class/TakeNotes/)\\n- [notes](/api/core/function/notes)\\n- ["},{"kind":"code","text":"`Cast`"},{"kind":"text","text":"](/api/core/class/Cast/)"}]},"children":[{"id":834,"name":"empty","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/Notepad.ts","line":61,"character":11}],"signatures":[{"id":835,"name":"empty","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a new empty Notepad."}]},"sources":[{"fileName":"packages/core/src/screenplay/notes/Notepad.ts","line":61,"character":11}],"typeParameter":[{"id":836,"name":"N","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"}}],"type":{"type":"reference","target":833,"typeArguments":[{"type":"reference","target":836,"name":"N","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Notepad","package":"@serenity-js/core"}}]},{"id":837,"name":"with","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/Notepad.ts","line":100,"character":11}],"signatures":[{"id":838,"name":"with","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a new Notepad with an initial state.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Notepad, notes, TakeNotes } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\ninterface MyNotes {\\n  personalDetails: {\\n    firstName: string;\\n    lastName: string;\\n  }\\n}\\n\\nactorCalled(\'Leonard\')\\n  .whoCan(\\n    TakeNotes.using(\\n      Notepad.with<MyNotes>({\\n        personalDetails: {\\n          firstName: \'Leonard\',\\n          lastName: \'McLaud\',\\n        }\\n      })\\n    )\\n  )\\n  .attemptsTo(\\n    Ensure.that(\\n      notes<MyNotes>().get(\'personalDetails\').firstName,\\n      equals(\'Leonard\')\\n    ),\\n  )\\n```"}]},"sources":[{"fileName":"packages/core/src/screenplay/notes/Notepad.ts","line":100,"character":11}],"typeParameter":[{"id":839,"name":"N","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"}}],"parameters":[{"id":840,"name":"notes","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":839,"name":"N","package":"@serenity-js/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":833,"typeArguments":[{"type":"reference","target":839,"name":"N","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Notepad","package":"@serenity-js/core"}}]},{"id":841,"name":"notes","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/Notepad.ts","line":113,"character":11}],"signatures":[{"id":842,"name":"notes","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates a ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter) that simplifies access to the notes\\nstored in this notepad. Allows the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to record, read, and remove notes.\\n\\n#### Learn more\\n- [notes](/api/core/function/notes)\\n- ["},{"kind":"code","text":"`TakeNotes`"},{"kind":"text","text":"](/api/core/class/TakeNotes/)\\n- ["},{"kind":"code","text":"`Notepad`"},{"kind":"text","text":"](/api/core/class/Notepad/)"}]},"sources":[{"fileName":"packages/core/src/screenplay/notes/Notepad.ts","line":113,"character":11}],"typeParameter":[{"id":843,"name":"N","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"}}],"type":{"type":"reference","target":878,"typeArguments":[{"type":"reference","target":843,"name":"N","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"NotepadAdapter","package":"@serenity-js/core"}}]},{"id":849,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/Notepad.ts","line":136,"character":4}],"signatures":[{"id":850,"name":"has","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Checks if a note identified by "},{"kind":"code","text":"`subject`"},{"kind":"text","text":" exists in the notepad."}],"blockTags":[{"tag":"@returns","content":[{"kind":"code","text":"`true`"},{"kind":"text","text":" if the note exists, "},{"kind":"code","text":"`false`"},{"kind":"text","text":" otherwise"}]}]},"sources":[{"fileName":"packages/core/src/screenplay/notes/Notepad.ts","line":136,"character":4}],"typeParameter":[{"id":851,"name":"Subject","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":852,"name":"subject","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A subject (name) that uniquely identifies a given note"}]},"type":{"type":"reference","target":851,"name":"Subject","package":"@serenity-js/core","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":853,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/Notepad.ts","line":153,"character":4}],"signatures":[{"id":854,"name":"get","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Retrieves a note, identified by "},{"kind":"code","text":"`subject`"},{"kind":"text","text":", from the notepad."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"The value of the previously recorded note."}]},{"tag":"@throws","content":[{"kind":"text","text":"["},{"kind":"code","text":"`LogicError`"},{"kind":"text","text":"](/api/core/class/LogicError/)\\n Throws a ["},{"kind":"code","text":"`LogicError`"},{"kind":"text","text":"](/api/core/class/LogicError/) if the note with a given "},{"kind":"code","text":"`subject`"},{"kind":"text","text":"\\n has never been recorded."}]}]},"sources":[{"fileName":"packages/core/src/screenplay/notes/Notepad.ts","line":153,"character":4}],"typeParameter":[{"id":855,"name":"Subject","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":856,"name":"subject","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A subject (name) that uniquely identifies a given note"}]},"type":{"type":"reference","target":855,"name":"Subject","package":"@serenity-js/core","refersToTypeParameter":true}}],"type":{"type":"indexedAccess","indexType":{"type":"reference","target":855,"name":"Subject","package":"@serenity-js/core","refersToTypeParameter":true},"objectType":{"type":"reference","target":877,"name":"Notes","package":"@serenity-js/core","qualifiedName":"Notepad.Notes","refersToTypeParameter":true}}}]},{"id":857,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/Notepad.ts","line":170,"character":4}],"signatures":[{"id":858,"name":"set","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Stores a given "},{"kind":"code","text":"`value`"},{"kind":"text","text":" uniquely identified by "},{"kind":"code","text":"`subject`"},{"kind":"text","text":" in the notepad."}]},"sources":[{"fileName":"packages/core/src/screenplay/notes/Notepad.ts","line":170,"character":4}],"typeParameter":[{"id":859,"name":"Subject","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":860,"name":"subject","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A subject (name) that uniquely identifies a given note"}]},"type":{"type":"reference","target":859,"name":"Subject","package":"@serenity-js/core","refersToTypeParameter":true}},{"id":861,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The value to record."}]},"type":{"type":"indexedAccess","indexType":{"type":"reference","target":859,"name":"Subject","package":"@serenity-js/core","refersToTypeParameter":true},"objectType":{"type":"reference","target":877,"name":"Notes","package":"@serenity-js/core","qualifiedName":"Notepad.Notes","refersToTypeParameter":true}}}],"type":{"type":"reference","target":833,"typeArguments":[{"type":"reference","target":877,"name":"Notes","package":"@serenity-js/core","qualifiedName":"Notepad.Notes","refersToTypeParameter":true}],"name":"Notepad","package":"@serenity-js/core"}}]},{"id":862,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/Notepad.ts","line":184,"character":4}],"signatures":[{"id":863,"name":"delete","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Removes the note identified by "},{"kind":"code","text":"`subject`"},{"kind":"text","text":" from the notepad."}],"blockTags":[{"tag":"@returns","content":[{"kind":"code","text":"`true`"},{"kind":"text","text":" if the item in the Notepad object existed and has been removed,\\n "},{"kind":"code","text":"`false`"},{"kind":"text","text":" otherwise."}]}]},"sources":[{"fileName":"packages/core/src/screenplay/notes/Notepad.ts","line":184,"character":4}],"typeParameter":[{"id":864,"name":"Subject","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":865,"name":"subject","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":864,"name":"Subject","package":"@serenity-js/core","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":866,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/Notepad.ts","line":194,"character":4}],"signatures":[{"id":867,"name":"clear","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Deletes all the notes stored in this notepad."}]},"sources":[{"fileName":"packages/core/src/screenplay/notes/Notepad.ts","line":194,"character":4}],"type":{"type":"intrinsic","name":"void"}}]},{"id":868,"name":"size","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/Notepad.ts","line":205,"character":4}],"signatures":[{"id":869,"name":"size","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the number of notes stored in the notepad."}]},"sources":[{"fileName":"packages/core/src/screenplay/notes/Notepad.ts","line":205,"character":4}],"type":{"type":"intrinsic","name":"number"}}]},{"id":870,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":871,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":872,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.equals"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.equals"}},{"id":873,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":874,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.toString"}},{"id":875,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":876,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.toJSON"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.toJSON"}}],"groups":[{"title":"Methods","children":[834,837,841,849,853,857,862,866,868,870,873,875]}],"sources":[{"fileName":"packages/core/src/screenplay/notes/Notepad.ts","line":56,"character":13}],"typeParameters":[{"id":877,"name":"Notes","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"}}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}],"permalink":"/api/core/class/Notepad","previousId":826,"nextId":878},{"id":878,"name":"NotepadAdapter","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Serenity/JS Screenplay Pattern-style adapter for the ["},{"kind":"code","text":"`Notepad`"},{"kind":"text","text":"](/api/core/class/Notepad/),\\nthat makes it easier for the [actors](/api/core/class/Actor/) to access its APIs.\\n\\nSee ["},{"kind":"code","text":"`TakeNotes`"},{"kind":"text","text":"](/api/core/class/TakeNotes/), ["},{"kind":"code","text":"`Notepad`"},{"kind":"text","text":"](/api/core/class/Notepad/) and ["},{"kind":"code","text":"`notes`"},{"kind":"text","text":"](/api/core/function/notes/) for more examples."}]},"children":[{"id":879,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":880,"name":"new NotepadAdapter","variant":"signature","kind":16384,"flags":{"isExternal":true},"typeParameter":[{"id":881,"name":"Notes","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"}}],"type":{"type":"reference","target":878,"typeArguments":[{"type":"reference","target":881,"name":"Notes","package":"@serenity-js/core","qualifiedName":"NotepadAdapter.Notes","refersToTypeParameter":true}],"name":"NotepadAdapter","package":"@serenity-js/core"}}]},{"id":882,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/NotepadAdapter.ts","line":36,"character":4}],"signatures":[{"id":883,"name":"has","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Checks if a note identified by "},{"kind":"code","text":"`subject`"},{"kind":"text","text":" exists in the notepad.\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Notepad.has`"},{"kind":"text","text":"](/api/core/class/Notepad/#has)}"}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Question that resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the note exists, "},{"kind":"code","text":"`false`"},{"kind":"text","text":" otherwise"}]}]},"sources":[{"fileName":"packages/core/src/screenplay/notes/NotepadAdapter.ts","line":36,"character":4}],"typeParameter":[{"id":884,"name":"Subject","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":885,"name":"subject","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A subject (name) that uniquely identifies a given note"}]},"type":{"type":"reference","target":884,"name":"Subject","package":"@serenity-js/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":1041,"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":886,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/NotepadAdapter.ts","line":58,"character":4}],"signatures":[{"id":887,"name":"get","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Retrieves a note, identified by "},{"kind":"code","text":"`subject`"},{"kind":"text","text":", from the notepad.\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Notepad.get`"},{"kind":"text","text":"](/api/core/class/Notepad/#get)}"}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"The value of the previously recorded note."}]},{"tag":"@throws","content":[{"kind":"text","text":"Throws a ["},{"kind":"code","text":"`LogicError`"},{"kind":"text","text":"](/api/core/class/LogicError/) if the note with a given "},{"kind":"code","text":"`subject`"},{"kind":"text","text":"\\n has never been recorded."}]}]},"sources":[{"fileName":"packages/core/src/screenplay/notes/NotepadAdapter.ts","line":58,"character":4}],"typeParameter":[{"id":888,"name":"Subject","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":889,"name":"subject","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A subject (name) that uniquely identifies a given note"}]},"type":{"type":"reference","target":888,"name":"Subject","package":"@serenity-js/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":1041,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","target":888,"name":"Subject","package":"@serenity-js/core","refersToTypeParameter":true},"objectType":{"type":"reference","target":881,"name":"Notes","package":"@serenity-js/core","qualifiedName":"NotepadAdapter.Notes","refersToTypeParameter":true}}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":890,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/NotepadAdapter.ts","line":110,"character":4}],"signatures":[{"id":891,"name":"set","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves a given "},{"kind":"code","text":"`Answerable<value>`"},{"kind":"text","text":" and stores it in the notepad,\\nuniquely identified by its "},{"kind":"code","text":"`subject`"},{"kind":"text","text":".\\n\\n**Pro tip:** calls to "},{"kind":"code","text":"`set`"},{"kind":"text","text":" can be chained and result in an accumulation\\nof values to be recorded in the ["},{"kind":"code","text":"`Notepad`"},{"kind":"text","text":"](/api/core/class/Notepad/).\\nThose values are resolved and recorded when the ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/)\\nreturned by this method is performed by an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/).\\n\\nIf a note identified by a given "},{"kind":"code","text":"`subject`"},{"kind":"text","text":" is set multiple times,\\nthe last call wins.\\n\\n"},{"kind":"code","text":"```ts\\n import { actorCalled, notes, TakeNotes } from \'@serenity-js/core\'\\n import { Ensure, equals } from \'@serenity-js/assertions\'\\n\\n interface MyNotes {\\n     stringNote: string;\\n     numberNote: number;\\n }\\n\\nawait actorCalled(\'Alice\')\\n  .whoCan(TakeNotes.usingAnEmptyNotepad<MyNotes>());\\n  .attemptsTo(\\n\\n    notes<MyNotes>()\\n      .set(\'stringNote\', \'example\')\\n      .set(\'numberNote\', Promise.resolve(42))\\n      .set(\'stringNote\', \'another example\'),\\n\\n    Ensure.equal(notes().toJSON(), {\\n      firstNote: \'another example\',\\n      secondNote: 42,\\n    })\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Notepad.set`"},{"kind":"text","text":"](/api/core/class/Notepad/#set)"}]},"sources":[{"fileName":"packages/core/src/screenplay/notes/NotepadAdapter.ts","line":110,"character":4}],"typeParameter":[{"id":892,"name":"Subject","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":893,"name":"subject","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A subject (name) that uniquely identifies a given note"}]},"type":{"type":"reference","target":892,"name":"Subject","package":"@serenity-js/core","refersToTypeParameter":true}},{"id":894,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The value to record"}]},"type":{"type":"reference","target":688,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","target":892,"name":"Subject","package":"@serenity-js/core","refersToTypeParameter":true},"objectType":{"type":"reference","target":881,"name":"Notes","package":"@serenity-js/core","qualifiedName":"NotepadAdapter.Notes","refersToTypeParameter":true}}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"intersection","types":[{"type":"reference","target":826,"typeArguments":[{"type":"reference","target":881,"name":"Notes","package":"@serenity-js/core","qualifiedName":"NotepadAdapter.Notes","refersToTypeParameter":true}],"name":"ChainableSetter","package":"@serenity-js/core"},{"type":"reference","target":793,"name":"Interaction","package":"@serenity-js/core"}]},"implementationOf":{"type":"reference","target":828,"name":"ChainableSetter.set"}}],"implementationOf":{"type":"reference","target":827,"name":"ChainableSetter.set"}},{"id":895,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/NotepadAdapter.ts","line":180,"character":4}],"signatures":[{"id":896,"name":"delete","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Removes the note identified by "},{"kind":"code","text":"`subject`"},{"kind":"text","text":" from the notepad.\\n\\n#### Using as an "},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Check, Log, notes } from \'@serenity-js/core\'\\nimport { isPresent } from \'@serenity-js/assertions\'\\n\\ninterface MyNotes {\\n  myNote: string;\\n}\\n\\nawait actorCalled(\'Alice\')\\n  .whoCan(TakeNotes.using(Notepad.empty<MyNotes>()))\\n  .attemptsTo(\\n    notes<MyNotes>().set(\'myNote\', \'example value\'),\\n\\n    notes<MyNotes>().delete(\'myNote\'),\\n\\n    Check.whether(notes<MyNotes>().get(\'myNote\'), isPresent())\\n      .andIfSo(\\n        Log.the(\'myNote is present\'),\\n      )\\n      .otherwise(\\n        Log.the(\'myNote was deleted\'),\\n      )\\n  )\\n  // logs: myNote was deleted\\n```"},{"kind":"text","text":"\\n\\n#### Using as a "},{"kind":"code","text":"`Question`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Check, Log, notes } from \'@serenity-js/core\'\\nimport { isTrue } from \'@serenity-js/assertions\'\\n\\ninterface MyNotes {\\n  myNote: string;\\n}\\n\\nawait actorCalled(\'Alice\')\\n  .whoCan(TakeNotes.using(Notepad.empty<MyNotes>()))\\n  .attemptsTo(\\n    notes<MyNotes>().set(\'myNote\', \'example value\'),\\n\\n    Check.whether(notes<MyNotes>().delete(\'myNote\'), isTrue())\\n      .andIfSo(\\n        Log.the(\'myNote was deleted\'),\\n      )\\n      .otherwise(\\n        Log.the(\'myNote could not be deleted because it was not set\'),\\n      )\\n  )\\n  // logs: myNote was deleted\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Notepad.delete`"},{"kind":"text","text":"](/api/core/class/Notepad/#delete)"}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"When used as a "},{"kind":"code","text":"`Question`"},{"kind":"text","text":", resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the item in the Notepad object existed and has been removed,\\n "},{"kind":"code","text":"`false`"},{"kind":"text","text":" otherwise."}]}]},"sources":[{"fileName":"packages/core/src/screenplay/notes/NotepadAdapter.ts","line":180,"character":4}],"typeParameter":[{"id":897,"name":"Subject","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":898,"name":"subject","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":897,"name":"Subject","package":"@serenity-js/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":1041,"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":899,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/NotepadAdapter.ts","line":210,"character":4}],"signatures":[{"id":900,"name":"clear","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Deletes all the notes stored in this notepad.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, notes } from \'@serenity-js/core\'\\nimport { isTrue } from \'@serenity-js/assertions\'\\n\\ninterface MyNotes {\\n  myNote: string;\\n}\\n\\nawait actorCalled(\'Alice\')\\n  .whoCan(TakeNotes.using(Notepad.empty<MyNotes>()))\\n  .attemptsTo(\\n    notes<MyNotes>().set(\'myNote\', \'example value\'),\\n    Log.the(notes<MyNotes>().size()),   // emits 1\\n    notes<MyNotes>().clear(),\\n    Log.the(notes<MyNotes>().size()),   // emits 0\\n  )\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Notepad.clear`"},{"kind":"text","text":"](/api/core/class/Notepad/#clear)"}]},"sources":[{"fileName":"packages/core/src/screenplay/notes/NotepadAdapter.ts","line":210,"character":4}],"type":{"type":"reference","target":793,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":901,"name":"size","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/NotepadAdapter.ts","line":239,"character":4}],"signatures":[{"id":902,"name":"size","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the number of notes stored in the notepad.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, notes } from \'@serenity-js/core\'\\nimport { isTrue } from \'@serenity-js/assertions\'\\n\\ninterface MyNotes {\\n  myNote: string;\\n}\\n\\nawait actorCalled(\'Alice\')\\n  .whoCan(TakeNotes.using(Notepad.empty<MyNotes>()))\\n  .attemptsTo(\\n    Log.the(notes<MyNotes>().size()),   // emits 0\\n    notes<MyNotes>().set(\'myNote\', \'example value\'),\\n    Log.the(notes<MyNotes>().size()),   // emits 1\\n  )\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Notepad.size`"},{"kind":"text","text":"](/api/core/class/Notepad/#size)"}]},"sources":[{"fileName":"packages/core/src/screenplay/notes/NotepadAdapter.ts","line":239,"character":4}],"type":{"type":"reference","target":1041,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":903,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/NotepadAdapter.ts","line":276,"character":4}],"signatures":[{"id":904,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Produces a ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter) that resolves to a "},{"kind":"code","text":"`JSONObject`"},{"kind":"text","text":"\\nrepresenting the resolved notes stored in the notepad.\\n\\nNote that serialisation to JSON will simplify some data types that might not be serialisable by default,\\nbut are commonly used in data structures representing actor\'s notes.\\nFor example a ["},{"kind":"code","text":"`Map`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map) will be serialised as a regular JSON object, a ["},{"kind":"code","text":"`Set`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set) will be serialised as ["},{"kind":"code","text":"`Array`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array).\\n\\nAdditionally, notepad assumes that the data structure you use it with does not contain cyclic references.\\n\\nTo learn more about the serialisation mechanism used by the notepad, please refer to [TinyTypes documentation](https://jan-molak.github.io/tiny-types/).\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, notes } from \'@serenity-js/core\'\\n\\nawait actorCalled(\'Alice\')\\n  .whoCan(TakeNotes.using(Notepad.with({\\n    aSet: new Set([\'apples\', \'bananas\', \'cucumbers\']),\\n    aPromisedValue: Promise.resolve(42),\\n    aString: \'example\'\\n  })))\\n  .attemptsTo(\\n    Log.the(notes().toJSON()),\\n  )\\n  // emits: {\\n  //    aSet: [\'apples\', \'bananas\', \'cucumbers\']\\n  //    aPromisedValue: 42,\\n  //    aString: \'example\',\\n  // }\\n```"}]},"sources":[{"fileName":"packages/core/src/screenplay/notes/NotepadAdapter.ts","line":276,"character":4}],"type":{"type":"reference","target":1041,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":905,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/NotepadAdapter.ts","line":285,"character":4}],"signatures":[{"id":906,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/core/src/screenplay/notes/NotepadAdapter.ts","line":285,"character":4}],"type":{"type":"intrinsic","name":"string"}}]}],"groups":[{"title":"Constructors","children":[879]},{"title":"Methods","children":[882,886,890,895,899,901,903,905]}],"sources":[{"fileName":"packages/core/src/screenplay/notes/NotepadAdapter.ts","line":22,"character":13}],"typeParameters":[{"id":907,"name":"Notes","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"}}],"implementedTypes":[{"type":"reference","target":826,"typeArguments":[{"type":"reference","target":881,"name":"Notes","package":"@serenity-js/core","qualifiedName":"NotepadAdapter.Notes","refersToTypeParameter":true}],"name":"ChainableSetter","package":"@serenity-js/core"}],"permalink":"/api/core/class/NotepadAdapter","previousId":833,"nextId":911},{"id":911,"name":"TakeNotes","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/) that enables an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to remember information\\nto be recalled during a test scenario.\\n\\nUnder the hood, ["},{"kind":"code","text":"`TakeNotes`"},{"kind":"text","text":"](/api/core/class/TakeNotes/) uses a ["},{"kind":"code","text":"`Notepad`"},{"kind":"text","text":"](/api/core/class/Notepad/), which state\\ncan be populated both during initialisation or while the test scenario is executed.\\nPopulating the notepad when it\'s initialised can be useful to associate authentication credentials\\nor personal details with a given actor, while dynamic recording of notes during a test scenario\\ncan be useful when the data to be recorded is not known upfront - for example when we want\\nthe actor to remember a JWT stored in the browser and then use it when sending API requests.\\n\\n**Pro tip:** ["},{"kind":"code","text":"`TakeNotes`"},{"kind":"text","text":"](/api/core/class/TakeNotes/), ["},{"kind":"code","text":"`Notepad`"},{"kind":"text","text":"](/api/core/class/Notepad/) and ["},{"kind":"code","text":"`notes`"},{"kind":"text","text":"](/api/core/function/notes/) can be typed\\nusing [TypeScript generics](https://www.typescriptlang.org/docs/handbook/2/generics.html)\\nto help you avoid typos when specifying note names.\\n\\nSee [notes](/api/core/function/notes) and ["},{"kind":"code","text":"`Notepad`"},{"kind":"text","text":"](/api/core/class/Notepad/) for more usage examples.\\n\\n## Remembering and retrieving a value\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Log, notes, TakeNotes } from \'@serenity-js/core\'\\n\\nawait actorCalled(\'Leonard\')\\n  .whoCan(TakeNotes.usingAnEmptyNotepad())\\n  .attemptsTo(\\n    notes().set(\'my_note\', \'some value\'),\\n    Log.the(notes().get(\'my_note\')),\\n    // emits \'some value\'\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Using generics\\n\\n"},{"kind":"code","text":"```ts\\n import { actorCalled, Log, notes, TakeNotes } from \'@serenity-js/core\'\\n\\n interface MyNotes {\\n   personalDetails: {\\n     firstName: string;\\n     lastName: string;\\n   }\\n }\\n\\nawait actorCalled(\'Leonard\')\\n  .whoCan(TakeNotes.usingAnEmptyNotepad<MyNotes>())\\n  .attemptsTo(\\n    Log.the(notes<MyNotes>().has(\'personalDetails\')),\\n    // emits false\\n\\n    Log.the(notes<MyNotes>().get(\'personalDetails\').isPresent()),\\n    // emits false\\n\\n    notes<MyNotes>().set(\'personalDetails\', { firstName: \'Leonard\', lastName: \'McLaud\' }),\\n\\n    Log.the(notes<MyNotes>().has(\'personalDetails\')),\\n    // emits true\\n\\n    Log.the(notes<MyNotes>().get(\'personalDetails\').isPresent()),\\n    // emits true\\n\\n    Log.the(notes().get(\'personalDetails\').firstName),\\n    // emits \'Leonard\'\\n\\n    Log.the(notes().get(\'personalDetails\').firstName.toLocaleUpperCase()),\\n    // emits \'LEONARD\'\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Populating the notepad with initial state\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Log, Note, Notepad, TakeNotes } from \'@serenity-js/core\'\\n\\ninterface MyNotes {\\n  firstName: string;\\n  lastName: string;\\n}\\n\\nawait actorCalled(\'Leonard\')\\n  .whoCan(\\n    TakeNotes.using(Notepad.with<MyNotes>({\\n      firstName: \'Leonard\',\\n      lastName: \'McLaud\',\\n    }))\\n  )\\n  .attemptsTo(\\n    notes<MyNotes>().set(\'lastName\', \'Shelby\'),\\n    Log.the(notes().get(\'firstName\')),\\n    // emits \'Leonard\'\\n\\n    Log.the(notes().get(\'lastName\')),\\n    // emits \'Shelby\'\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Recording a dynamic note\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Log, Notepad, notes, TakeNotes } from \'@serenity-js/core\'\\nimport { By, Text, PageElement } from \'@serenity-js/web\'\\nimport { BrowseTheWebWithWebdriverIO } from \'@serenity-js/webdriverio\'\\n\\ninterface OnlineShoppingNotes {\\n  promoCode: string;\\n}\\n\\nconst promoCodeBanner = () =>\\n  PageElement.located(By.css(\'[data-testid=\\"promo-code\\"]\'))\\n    .describedAs(\'promo code\');\\n\\nconst promoCodeInput = () =>\\n  PageElement.located(By.css(\'[data-testid=\\"promo-code-input\\"]\'))\\n    .describedAs(\'promo code field\');\\n\\nawait actorCalled(\'Leonard\')\\n  .whoCan(\\n    BrowseTheWebWithWebdriverIO.using(browser),\\n    TakeNotes.using(Notepad.empty<OnlineShoppingNotes>())\\n  )\\n  .attemptsTo(\\n    notes<OnlineShoppingNotes>().set(\'promoCode\', Text.of(promoCode()),\\n    // ...\\n    Enter.theValue(notes<OnlineShoppingNotes>().get(\'promoCode\'))\\n      .into(promoCodeInput())\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Clearing a notepad before each test scenario (Mocha)\\n\\n"},{"kind":"code","text":"```ts\\nimport \'mocha\';\\n\\nbeforeEach(() =>\\n  actorCalled(\'Leonard\')\\n    .attemptsTo(\\n      notes().clear(),\\n    ))\\n```"},{"kind":"text","text":"\\n\\n## Clearing a notepad before each test scenario (Cucumber)\\n\\n"},{"kind":"code","text":"```ts\\nimport { Before } from \'@cucumber/cucumber\'\\n\\nBefore(() =>\\n  actorCalled(\'Leonard\')\\n    .attemptsTo(\\n      notes().clear(),\\n    ));\\n```"},{"kind":"text","text":"\\n\\n## Importing notes from an API response\\n\\n"},{"kind":"code","text":"```ts\\n // given an example API:\\n //   GET /generate-test-user\\n // which returns:\\n //   { \\"first_name\\": \\"Leonard\\", \\"last_name\\": \\"Shelby\\" }\\n\\nimport { actorCalled, Log, Notepad, notes, TakeNotes } from \'@serenity-js/core\'\\nimport { CallAnApi, GetRequest, Send } from \'@serenity-js/rest\'\\n\\ninterface PersonalDetails {\\n  first_name: string;\\n  last_name: string;\\n}\\n\\ninterface MyNotes {\\n  personalDetails?: PersonalDetails;\\n}\\n\\nawait actorCalled(\'Leonard\')\\n  .whoCan(\\n    CallAnApi.at(\'https://api.example.org/\'),\\n    TakeNotes.using(Notepad.empty<MyNotes>())\\n  )\\n  .attemptsTo(\\n     Send.a(GetRequest.to(\'/generate-test-user\')),\\n     notes<MyNotes>().set(\'personalDetails\', LastResponse.body<PersonalDetails>()),\\n\\n     Log.the(notes<MyNotes>().get(\'personalDetails\').first_name),    // emits \'Leonard\'\\n     Log.the(notes<MyNotes>().get(\'personalDetails\').last_name),     // emits \'Shelby\'\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Using the QuestionAdapter\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Log, Notepad, notes, TakeNotes } from \'@serenity-js/core\'\\n\\ninterface AuthCredentials {\\n  username?: string;\\n  password?: string;\\n}\\n\\ninterface MyNotes {\\n  auth: AuthCredentials;\\n}\\n\\nawait actorCalled(\'Leonard\')\\n  .whoCan(\\n    TakeNotes.using(\\n      Notepad.with<MyNotes>({     // typed initial state\\n        auth: {\\n          username: \'leonard@example.org\',\\n          password: \'SuperSecretP@ssword!\',\\n        }\\n      })\\n    )\\n  )\\n  .attemptsTo(\\n    Log.the(\\n      notes<MyNotes>()          // typed notes\\n        .get(\'auth\')            // returns QuestionAdapter<AuthCredentials>\\n        .password               // returns QuestionAdapter<string>\\n        .charAt(0)\\n        .toLocaleLowerCase(),   // emits \\"s\\"\\n    ),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- [notes](/api/core/function/notes)\\n- ["},{"kind":"code","text":"`Notepad`"},{"kind":"text","text":"](/api/core/class/Notepad/)"}]},"children":[{"id":912,"name":"usingAnEmptyNotepad","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/TakeNotes.ts","line":237,"character":11}],"signatures":[{"id":913,"name":"usingAnEmptyNotepad","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Initialises an ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/) to ["},{"kind":"code","text":"`TakeNotes`"},{"kind":"text","text":"](/api/core/class/TakeNotes/) with ["},{"kind":"code","text":"`Notepad.empty`"},{"kind":"text","text":"](/api/core/class/Notepad/#empty)."}]},"sources":[{"fileName":"packages/core/src/screenplay/notes/TakeNotes.ts","line":237,"character":11}],"typeParameter":[{"id":914,"name":"N","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"}}],"type":{"type":"reference","target":911,"typeArguments":[{"type":"reference","target":914,"name":"N","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"TakeNotes","package":"@serenity-js/core"}}]},{"id":915,"name":"using","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/TakeNotes.ts","line":247,"character":11}],"signatures":[{"id":916,"name":"using","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Initialises an ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/) to ["},{"kind":"code","text":"`TakeNotes`"},{"kind":"text","text":"](/api/core/class/TakeNotes/) using\\na ["},{"kind":"code","text":"`Notepad.with`"},{"kind":"text","text":"](/api/core/class/Notepad/#with) some initial state."}]},"sources":[{"fileName":"packages/core/src/screenplay/notes/TakeNotes.ts","line":247,"character":11}],"typeParameter":[{"id":917,"name":"N","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"}}],"parameters":[{"id":918,"name":"notepad","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":833,"typeArguments":[{"type":"reference","target":917,"name":"N","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Notepad","package":"@serenity-js/core"}}],"type":{"type":"reference","target":911,"typeArguments":[{"type":"reference","target":917,"name":"N","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"TakeNotes","package":"@serenity-js/core"}}]},{"id":933,"name":"abilityType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Ability.ts","line":461,"character":4}],"signatures":[{"id":934,"name":"abilityType","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the most abstract type of this Ability instance,\\nspecifically the first class in the inheritance hierarchy that directly extends the "},{"kind":"code","text":"`Ability`"},{"kind":"text","text":" class.\\n\\n"},{"kind":"code","text":"```ts\\nimport { Ability } from \'@serenity-js/core\';\\n\\nclass MyAbility extends Ability {}\\nclass MySpecialisedAbility extends MyAbility {}\\n\\nnew MyAbility().abilityType();            // returns MyAbility\\nnew MySpecialisedAbility().abilityType(); // returns MyAbility\\n```"}]},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Ability.ts","line":461,"character":4}],"type":{"type":"reference","target":511,"typeArguments":[{"type":"reference","target":490,"name":"Ability","package":"@serenity-js/core"}],"name":"AbilityType","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":510,"name":"Ability.abilityType"}}],"inheritedFrom":{"type":"reference","target":509,"name":"Ability.abilityType"}},{"id":926,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/TakeNotes.ts","line":254,"character":4}],"signatures":[{"id":927,"name":"new TakeNotes","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/TakeNotes.ts","line":254,"character":4}],"typeParameter":[{"id":928,"name":"Notes_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"}}],"parameters":[{"id":929,"name":"notepad","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":833,"typeArguments":[{"type":"reference","target":928,"name":"Notes_Type","package":"@serenity-js/core","qualifiedName":"TakeNotes.Notes_Type","refersToTypeParameter":true}],"name":"Notepad","package":"@serenity-js/core"}}],"type":{"type":"reference","target":911,"typeArguments":[{"type":"reference","target":928,"name":"Notes_Type","package":"@serenity-js/core","qualifiedName":"TakeNotes.Notes_Type","refersToTypeParameter":true}],"name":"TakeNotes","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":506,"name":"Ability.constructor"}}],"overwrites":{"type":"reference","target":505,"name":"Ability.constructor"}},{"id":930,"name":"notepad","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/TakeNotes.ts","line":254,"character":32}],"type":{"type":"reference","target":833,"typeArguments":[{"type":"reference","target":928,"name":"Notes_Type","package":"@serenity-js/core","qualifiedName":"TakeNotes.Notes_Type","refersToTypeParameter":true}],"name":"Notepad","package":"@serenity-js/core"}},{"id":931,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/TakeNotes.ts","line":258,"character":4}],"signatures":[{"id":932,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a JSON representation of the ability and its current state, if available.\\nThe purpose of this method is to enable reporting the state of the ability in a human-readable format,\\nrather than to serialise and deserialise the ability itself."}]},"sources":[{"fileName":"packages/core/src/screenplay/notes/TakeNotes.ts","line":258,"character":4}],"type":{"type":"reference","target":596,"name":"SerialisedAbility","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":508,"name":"Ability.toJSON"}}],"overwrites":{"type":"reference","target":507,"name":"Ability.toJSON"}}],"groups":[{"title":"Constructors","children":[926]},{"title":"Properties","children":[930]},{"title":"Methods","children":[912,915,933,931]}],"sources":[{"fileName":"packages/core/src/screenplay/notes/TakeNotes.ts","line":232,"character":13}],"typeParameters":[{"id":935,"name":"Notes_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"}}],"extendedTypes":[{"type":"reference","target":490,"name":"Ability","package":"@serenity-js/core"}],"permalink":"/api/core/class/TakeNotes","previousId":878,"nextId":908},{"id":908,"name":"notes","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/notes.ts","line":118,"character":16}],"signatures":[{"id":909,"name":"notes","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Alias for ["},{"kind":"code","text":"`Notepad.notes`"},{"kind":"text","text":"](/api/core/class/Notepad/#notes).\\n\\n**Pro tip:** "},{"kind":"code","text":"`notes<T>().get(subject)`"},{"kind":"text","text":" returns a ["},{"kind":"code","text":"`NotepadAdapter`"},{"kind":"text","text":"](/api/core/class/NotepadAdapter/) to make accessing the APIs\\nof the underlying type easier. Check ["},{"kind":"code","text":"`NotepadAdapter`"},{"kind":"text","text":"](/api/core/class/NotepadAdapter/) for more examples.\\n\\n## Working with untyped notes\\n\\nYou can use "},{"kind":"code","text":"`notes<T>()`"},{"kind":"text","text":" without parameterising it with an [interface](https://www.typescriptlang.org/docs/handbook/interfaces.html)\\ndescribing the structure of your notes.\\n\\n**Note:** this approach _is not type-safe_ and the type-safe alternative presented below should be used in most cases.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Log, notes, TakeNotes } from \'@serenity-js/core\';\\n\\nawait actorCalled(\'Leonard\')\\n  .whoCan(TakeNotes.usingAnEmptyNotepad())\\n  .attemptsTo(\\n    notes().set(\'my_note\', \'some value\'),\\n\\n    Log.the(notes().get(\'my_note\')),\\n    // emits \\"some value\\"\\n\\n    Log.the(notes().get(\'my_note\').toLocaleUpperCase()),\\n    // emits \\"SOME VALUE\\"\\n  );\\n```"},{"kind":"text","text":"\\n\\n## Working with typed notes\\n\\nThe **recommended** way to use "},{"kind":"code","text":"`notes<T>()`"},{"kind":"text","text":" is to parameterise it\\nwith an [interface](https://www.typescriptlang.org/docs/handbook/interfaces.html)\\ndescribing the structure of your notes.\\n\\n**Note:** this approach _is type-safe_.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Log, notes, TakeNotes } from \'@serenity-js/core\';\\n\\ninterface MyNotes {\\n  username: string;\\n  token?: string;     // optional value\\n}\\n\\nawait actorCalled(\'Leonard\')\\n  .whoCan(TakeNotes.using(Notepad.with<MyNotes>({\\n    username: \'Leonard.McLaud@example.org\',\\n  }))\\n  .attemptsTo(\\n    notes<MyNotes>().set(\'token\', \'my-auth-token\')\\n\\n    Log.the(notes<MyNotes>().get(\'token\').length),\\n    // emits 13\\n\\n    Log.the(notes<MyNotes>().get(\'username\').toLocaleLowerCase()),\\n    // emits \'leonard.mclaud@example.org\'\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Checking if a note is present\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Check, notes, TakeNotes } from \'@serenity-js/core\'\\nimport { isPresent } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Leonard\')\\n  .whoCan(TakeNotes.using(Notepad.empty()))\\n  .attemptsTo(\\n    Check.whether(notes().get(\'token\'), isPresent())\\n     .andIfSo(\\n       Authenticate.using(notes().get(\'token\')),\\n     )\\n     .otherwise(\\n       SignIn.using(\'username\', \'password\'),\\n     )\\n   )\\n```"},{"kind":"text","text":"\\n\\n## Working with complex data structures\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Log, notes, TakeNotes } from \'@serenity-js/core\'\\n\\ninterface MyNotes {\\n  recordedItems: string[];\\n}\\n\\nawait actorCalled(\'Leonard\')\\n  .whoCan(TakeNotes.using(Notepad.with<MyNotes>({\\n    recordedItems: [],\\n  }))\\n  .attemptsTo(\\n     // push 3 items\\n     notes().get(\'recordedItems\').push(\'apples\'),\\n     notes().get(\'recordedItems\').push(\'cucumbers\'),\\n     notes().get(\'recordedItems\').push(\'bananas\'),\\n\\n     // use QuestionAdapter to access Array.sort()\\n     notes().get(\'recordedItems\').sort(),\\n\\n     Log.the(notes().get(\'recordedItems\')),\\n     // emits \'apples\', \'bananas\', \'cucumbers\'\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`NotepadAdapter`"},{"kind":"text","text":"](/api/core/class/NotepadAdapter/)\\n- ["},{"kind":"code","text":"`Notepad.notes`"},{"kind":"text","text":"](/api/core/class/Notepad/#notes)\\n- ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter)"}]},"sources":[{"fileName":"packages/core/src/screenplay/notes/notes.ts","line":118,"character":16}],"typeParameter":[{"id":910,"name":"N","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"}}],"type":{"type":"reference","target":878,"typeArguments":[{"type":"reference","target":910,"name":"N","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"NotepadAdapter","package":"@serenity-js/core"}}],"permalink":"/api/core/function/notes","previousId":911,"nextId":57},{"id":1049,"name":"AnswersQuestions","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Describes an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) who can answer a ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/) about the system under test.\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/)\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)"}]},"children":[{"id":1050,"name":"answer","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/AnswersQuestions.ts","line":19,"character":4}],"signatures":[{"id":1051,"name":"answer","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Makes the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) evaluate an ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable)\\nand return the value it holds."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/AnswersQuestions.ts","line":19,"character":4}],"typeParameter":[{"id":1052,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":1053,"name":"answerable","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":688,"typeArguments":[{"type":"reference","target":1052,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":1052,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]}],"groups":[{"title":"Methods","children":[1050]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/AnswersQuestions.ts","line":13,"character":17}],"implementedBy":[{"type":"reference","target":637,"name":"Actor"}],"permalink":"/api/core/interface/AnswersQuestions","previousId":692,"nextId":126},{"id":1054,"name":"ChainableMetaQuestion","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A chainable meta-question is a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/) that can be answered\\nin the context of another ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable),\\nand form a chain of transformations.\\n\\n[Meta-questions](/api/core/interface/MetaQuestion/) are typically used when filtering a ["},{"kind":"code","text":"`List`"},{"kind":"text","text":"](/api/core/class/List/).\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`List`"},{"kind":"text","text":"](/api/core/class/List/)"}]},"children":[{"id":1055,"name":"of","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/ChainableMetaQuestion.ts","line":29,"character":4}],"signatures":[{"id":1056,"name":"of","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Answers the given "},{"kind":"code","text":"`ChainableMetaQuestion`"},{"kind":"text","text":" in the context of another ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable)\\nand returns another "},{"kind":"code","text":"`ChainableMetaQuestion`"},{"kind":"text","text":" ready for further chaining.\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`List`"},{"kind":"text","text":"](/api/core/class/List/)"}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/ChainableMetaQuestion.ts","line":29,"character":4}],"parameters":[{"id":1057,"name":"context","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":688,"typeArguments":[{"type":"reference","target":1060,"name":"Supported_Context_Type","package":"@serenity-js/core","qualifiedName":"ChainableMetaQuestion.Supported_Context_Type","refersToTypeParameter":true}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"intersection","types":[{"type":"reference","target":1061,"name":"Returned_Question_Type","package":"@serenity-js/core","qualifiedName":"ChainableMetaQuestion.Returned_Question_Type","refersToTypeParameter":true},{"type":"reference","target":1054,"typeArguments":[{"type":"reference","target":1060,"name":"Supported_Context_Type","package":"@serenity-js/core","qualifiedName":"ChainableMetaQuestion.Supported_Context_Type","refersToTypeParameter":true},{"type":"reference","target":1061,"name":"Returned_Question_Type","package":"@serenity-js/core","qualifiedName":"ChainableMetaQuestion.Returned_Question_Type","refersToTypeParameter":true}],"name":"ChainableMetaQuestion","package":"@serenity-js/core"}]},"overwrites":{"type":"reference","target":1545,"name":"MetaQuestion.of"}}],"overwrites":{"type":"reference","target":1544,"name":"MetaQuestion.of"}},{"id":1058,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/MetaQuestion.ts","line":36,"character":4}],"signatures":[{"id":1059,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of this ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/),\\ntypically involving the description of the subject.\\n\\nFor example, a description of a meta question obout \\"the text of an element\\"\\nwould be "},{"kind":"code","text":"`text of ${ element.toString() }`"}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/MetaQuestion.ts","line":36,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":1548,"name":"MetaQuestion.toString"}}],"inheritedFrom":{"type":"reference","target":1547,"name":"MetaQuestion.toString"}}],"groups":[{"title":"Methods","children":[1055,1058]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/ChainableMetaQuestion.ts","line":17,"character":17}],"typeParameters":[{"id":1060,"name":"Supported_Context_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":1061,"name":"Returned_Question_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":939,"typeArguments":[{"type":"intrinsic","name":"unknown"}],"name":"Question","package":"@serenity-js/core"}}],"extendedTypes":[{"type":"reference","target":1543,"typeArguments":[{"type":"reference","target":1060,"name":"Supported_Context_Type","package":"@serenity-js/core","qualifiedName":"ChainableMetaQuestion.Supported_Context_Type","refersToTypeParameter":true},{"type":"intersection","types":[{"type":"reference","target":1061,"name":"Returned_Question_Type","package":"@serenity-js/core","qualifiedName":"ChainableMetaQuestion.Returned_Question_Type","refersToTypeParameter":true},{"type":"reference","target":1054,"typeArguments":[{"type":"reference","target":1060,"name":"Supported_Context_Type","package":"@serenity-js/core","qualifiedName":"ChainableMetaQuestion.Supported_Context_Type","refersToTypeParameter":true},{"type":"reference","target":1061,"name":"Returned_Question_Type","package":"@serenity-js/core","qualifiedName":"ChainableMetaQuestion.Returned_Question_Type","refersToTypeParameter":true}],"name":"ChainableMetaQuestion","package":"@serenity-js/core"}]}],"name":"MetaQuestion","package":"@serenity-js/core"}],"implementedBy":[{"type":"reference","target":1408,"name":"MetaList"}],"permalink":"/api/core/interface/ChainableMetaQuestion","previousId":1896,"nextId":1113},{"id":1062,"name":"Check","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A [flow control statement](https://en.wikipedia.org/wiki/Control_flow)\\nthat enables an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to decide between two alternate series of [activities](/api/core/class/Activity/).\\n\\nThink of it as a Screenplay Pattern equivalent of the traditional "},{"kind":"code","text":"`if`"},{"kind":"text","text":" statement.\\n\\n## Choose between two alternative sequences of activities\\n\\n"},{"kind":"code","text":"```ts\\nimport { equals } from \'@serenity-js/assertions\'\\nimport { actorCalled, Check } from \'@serenity-js/core\'\\n\\nawait actorCalled(\'Chuck\').attemptsTo(\\n  Check.whether(process.env.MODE, equals(\'prod\'))\\n    .andIfSo(\\n      LogInAsProdUser(),\\n    )\\n    .otherwise(\\n      LogInAsTestUser(),\\n    )\\n)\\n```"},{"kind":"text","text":"\\n\\n## Perform a sequence of activities when a condition is met\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Check } from \'@serenity-js/core\'\\nimport { isVisible } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Chuck\').attemptsTo(\\n  Check.whether(CookieConsentBanner(), isVisible())\\n    .andIfSo(\\n        AcceptNecessaryCookies(),\\n    )\\n)\\n```"}]},"children":[{"id":1063,"name":"whether","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Check.ts","line":51,"character":11}],"signatures":[{"id":1064,"name":"whether","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Check.ts","line":51,"character":11}],"typeParameter":[{"id":1065,"name":"Actual_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":1066,"name":"actual","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":688,"typeArguments":[{"type":"reference","target":1065,"name":"Actual_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Answerable","package":"@serenity-js/core"}},{"id":1067,"name":"expectation","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1138,"typeArguments":[{"type":"reference","target":1065,"name":"Actual_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}],"type":{"type":"reflection","declaration":{"id":1068,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":1069,"name":"andIfSo","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Check.ts","line":51,"character":107}],"type":{"type":"reflection","declaration":{"id":1070,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Check.ts","line":51,"character":116}],"signatures":[{"id":1071,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Check.ts","line":51,"character":116}],"parameters":[{"id":1072,"name":"activities","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":610,"name":"Activity","package":"@serenity-js/core"}}}],"type":{"type":"reference","target":1062,"typeArguments":[{"type":"reference","target":1065,"name":"Actual_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Check","package":"@serenity-js/core"}}]}}}],"groups":[{"title":"Properties","children":[1069]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/Check.ts","line":51,"character":105}]}}}]},{"id":1098,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":38,"character":4}],"signatures":[{"id":1099,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":38,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":1604,"name":"Task.instantiationLocation"}}],"inheritedFrom":{"type":"reference","target":1603,"name":"Task.instantiationLocation"}},{"id":1091,"name":"otherwise","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Check.ts","line":71,"character":4}],"signatures":[{"id":1092,"name":"otherwise","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Check.ts","line":71,"character":4}],"parameters":[{"id":1093,"name":"alternativeActivities","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"comment":{"summary":[{"kind":"text","text":"A sequence of [activities](/api/core/class/Activity/) to perform when the ["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/) is not met."}]},"type":{"type":"array","elementType":{"type":"reference","target":610,"name":"Activity","package":"@serenity-js/core"}}}],"type":{"type":"reference","target":1587,"name":"Task","package":"@serenity-js/core"}}]},{"id":1094,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Check.ts","line":78,"character":10}],"signatures":[{"id":1095,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the provided ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to perform this ["},{"kind":"code","text":"`Task`"},{"kind":"text","text":"](/api/core/class/Task/)."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Check.ts","line":78,"character":10}],"parameters":[{"id":1096,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"#### Learn more\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`PerformsActivities`"},{"kind":"text","text":"](/api/core/interface/PerformsActivities/)\\n- ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/)"}]},"type":{"type":"intersection","types":[{"type":"reference","target":1049,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":605,"name":"PerformsActivities","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":1600,"name":"Task.performAs"}}],"overwrites":{"type":"reference","target":1599,"name":"Task.performAs"}},{"id":1100,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"signatures":[{"id":1101,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"parameters":[{"id":1102,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1049,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":600,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":1103,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":1104,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":66}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[1104]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":64}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":1606,"name":"Task.describedBy"}}],"inheritedFrom":{"type":"reference","target":1605,"name":"Task.describedBy"}},{"id":1110,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"signatures":[{"id":1111,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":1616,"name":"Task.toString"}}],"inheritedFrom":{"type":"reference","target":1615,"name":"Task.toString"}}],"groups":[{"title":"Methods","children":[1063,1098,1091,1094,1100,1110]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/Check.ts","line":49,"character":13}],"typeParameters":[{"id":1112,"name":"Actual","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"extendedTypes":[{"type":"reference","target":1587,"name":"Task","package":"@serenity-js/core"}],"permalink":"/api/core/class/Check","previousId":757,"nextId":484},{"id":1113,"name":"Describable","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"children":[{"id":1117,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"signatures":[{"id":1118,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"parameters":[{"id":1119,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1049,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":600,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":1120,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":1121,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":66}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[1121]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":64}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":1127,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"signatures":[{"id":1128,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"type":{"type":"intrinsic","name":"string"}}]}],"groups":[{"title":"Methods","children":[1117,1127]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":11,"character":22}],"extendedBy":[{"type":"reference","target":610,"name":"Activity"},{"type":"reference","target":939,"name":"Question"},{"type":"reference","target":1138,"name":"Expectation"}],"permalink":"/api/core/class/Describable","previousId":1054,"nextId":1130},{"id":1130,"name":"DescriptionFormattingOptions","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configuration options for ["},{"kind":"code","text":"`Question.formattedValue`"},{"kind":"text","text":"](/api/core/class/Question/#formattedValue) and\\nthe ["},{"kind":"code","text":"`the`"},{"kind":"text","text":"](/api/core/function/the/) function."}]},"children":[{"id":1131,"name":"maxLength","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The maximum length of the string representation of the value.\\nString representations longer than this value will be truncated and appended with an ellipsis."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/DescriptionFormattingOptions.ts","line":12,"character":4}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[1131]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/DescriptionFormattingOptions.ts","line":7,"character":17}],"permalink":"/api/core/interface/DescriptionFormattingOptions","previousId":1113,"nextId":1288},{"id":1132,"name":"Predicate","variant":"declaration","kind":2097152,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":14,"character":12}],"typeParameters":[{"id":1137,"name":"Actual","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"type":{"type":"reflection","declaration":{"id":1133,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":14,"character":32}],"signatures":[{"id":1134,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"parameters":[{"id":1135,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1049,"name":"AnswersQuestions","package":"@serenity-js/core"}},{"id":1136,"name":"actual","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":688,"typeArguments":[{"type":"reference","target":1137,"name":"Actual","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"union","types":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":1270,"name":"ExpectationOutcome","package":"@serenity-js/core"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},{"type":"reference","target":1270,"name":"ExpectationOutcome","package":"@serenity-js/core"}]}}]}},"permalink":"/api/core#Predicate","previousId":428,"nextId":1138},{"id":1138,"name":"Expectation","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Defines an expectation to be used with ["},{"kind":"code","text":"`Wait.until`"},{"kind":"text","text":"](/api/core/class/Wait/#until),\\n["},{"kind":"code","text":"`Check.whether`"},{"kind":"text","text":"](/api/core/class/Check/#whether),\\n["},{"kind":"code","text":"`Ensure.that`"},{"kind":"text","text":"](/api/assertions/class/Ensure/#that)\\nand as part of the Page Element Query Language with ["},{"kind":"code","text":"`PageElements.where`"},{"kind":"text","text":"](/api/web/class/PageElements/#where)\\nand ["},{"kind":"code","text":"`List.where`"},{"kind":"text","text":"](/api/core/class/List/#where)."}]},"children":[{"id":1139,"name":"define","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":115,"character":11}],"signatures":[{"id":1140,"name":"define","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A factory method to that makes defining custom [expectations](/api/core/class/Expectation/) easier\\n\\n#### Defining a custom expectation\\n\\n"},{"kind":"code","text":"```ts\\nimport { Expectation } from \'@serenity-js/core\'\\nimport { PageElement } from \'@serenity-js/web\'\\n\\nconst isEmpty = Expectation.define(\\n  \'isEmpty\',         // name of the expectation function to be used when producing an AssertionError\\n  \'become empty\',    // human-readable description of the relationship between expected and actual values\\n  async (actual: PageElement) => {\\n    const value = await actual.value();\\n    return value.length === 0;\\n  }\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Using a custom expectation in an assertion\\n\\n"},{"kind":"code","text":"```ts\\nimport { Ensure } from \'@serenity-js/assertions\'\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { By, Clear, PageElement } from \'@serenity-js/web\'\\n\\nconst nameField = () =>\\n  PageElement.located(By.css(\'[data-test-id=\\"name\\"]\')).describedAs(\'name field\');\\n\\nawait actorCalled(\'Izzy\').attemptsTo(\\n  Clear.the(nameField()),\\n  Ensure.that(nameField(), isEmpty())\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Using a custom expectation in a control flow statement\\n\\n"},{"kind":"code","text":"```ts\\nimport { not } from \'@serenity-js/assertions\'\\nimport { actorCalled, Check, Duration, Wait } from \'@serenity-js/core\'\\nimport { By, PageElement } from \'@serenity-js/web\'\\n\\nconst nameField = () =>\\n  PageElement.located(By.css(\'[data-test-id=\\"name\\"]\')).describedAs(\'name field\');\\n\\nawait actorCalled(\'Izzy\').attemptsTo(\\n  Check.whether(nameField(), isEmpty())\\n    .andIfSo(\\n      Enter.theValue(actorInTheSpotlight().name).into(nameField()),\\n    ),\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Using a custom expectation in a synchronisation statement\\n\\n"},{"kind":"code","text":"```ts\\nimport { not } from \'@serenity-js/assertions\'\\nimport { actorCalled, Duration, Wait } from \'@serenity-js/core\'\\nimport { By, PageElement } from \'@serenity-js/web\'\\n\\nconst nameField = () =>\\n  PageElement.located(By.css(\'[data-test-id=\\"name\\"]\')).describedAs(\'name field\');\\n\\nawait actorCalled(\'Izzy\').attemptsTo(\\n  Enter.theValue(actorInTheSpotlight().name).into(nameField()),\\n\\n  Wait.upTo(Duration.ofSeconds(2))\\n    .until(nameField(), not(isEmpty())),\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Ensure`"},{"kind":"text","text":"](/api/assertions/class/Ensure/)\\n- ["},{"kind":"code","text":"`Check`"},{"kind":"text","text":"](/api/core/class/Check/)\\n- ["},{"kind":"code","text":"`Wait`"},{"kind":"text","text":"](/api/core/class/Wait/)"}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":115,"character":11}],"typeParameter":[{"id":1141,"name":"Actual_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":1142,"name":"PredicateArguments","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"unknown"}}}],"parameters":[{"id":1143,"name":"functionName","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Name of the expectation function to be used when producing an ["},{"kind":"code","text":"`AssertionError`"},{"kind":"text","text":"](/api/core/class/AssertionError/)"}]},"type":{"type":"intrinsic","name":"string"}},{"id":1144,"name":"relationship","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the relationship between the "},{"kind":"code","text":"`expected`"},{"kind":"text","text":" and the "},{"kind":"code","text":"`actual`"},{"kind":"text","text":" values.\\n Used when reporting [activities](/api/core/class/Activity/) performed by an [actor](/api/core/class/Actor/)"}]},"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":1145,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":117,"character":23}],"signatures":[{"id":1146,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":117,"character":23}],"parameters":[{"id":1147,"name":"answerableArguments","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"reference","typeArguments":[{"type":"reference","target":1142,"name":"PredicateArguments","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"AnswerableArguments","package":"@serenity-js/core"}}],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}}]}},{"id":1148,"name":"predicate","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":1149,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":118,"character":19}],"signatures":[{"id":1150,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":118,"character":19}],"parameters":[{"id":1151,"name":"actual","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1141,"name":"Actual_Type","package":"@serenity-js/core","refersToTypeParameter":true}},{"id":1152,"name":"predicateArguments","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"reference","target":1142,"name":"PredicateArguments","package":"@serenity-js/core","refersToTypeParameter":true}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"boolean"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reflection","declaration":{"id":1153,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":119,"character":7}],"signatures":[{"id":1154,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":119,"character":7}],"parameters":[{"id":1155,"name":"answerableArguments","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"reference","typeArguments":[{"type":"reference","target":1142,"name":"PredicateArguments","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"AnswerableArguments","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1138,"typeArguments":[{"type":"reference","target":1141,"name":"Actual_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}]}}}]},{"id":1156,"name":"thatActualShould","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":180,"character":11}],"signatures":[{"id":1157,"name":"thatActualShould","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Used to define a simple ["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/)\\n\\n#### Simple parameterised expectation\\n\\n"},{"kind":"code","text":"```ts\\n import { actorCalled, Expectation } from \'@serenity-js/core\'\\n import { Ensure } from \'@serenity-js/assertions\'\\n\\n function isDivisibleBy(expected: Answerable<number>): Expectation<number> {\\n     return Expectation.thatActualShould<number, number>(\'have value divisible by\', expected)\\n         .soThat((actualValue, expectedValue) => actualValue % expectedValue === 0);\\n }\\n\\n await actorCalled(\'Erica\').attemptsTo(\\n     Ensure.that(4, isDivisibleBy(2)),\\n )\\n```"}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":180,"character":11}],"typeParameter":[{"id":1158,"name":"Expected_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":1159,"name":"Actual_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":1160,"name":"relationshipName","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Name of the relationship between the "},{"kind":"code","text":"`actual`"},{"kind":"text","text":" and the "},{"kind":"code","text":"`expected`"},{"kind":"text","text":". Use format "},{"kind":"code","text":"`have value <adjective>`"},{"kind":"text","text":"\\n so that the description works in both positive and negative contexts, e.g. "},{"kind":"code","text":"`Waited until 5 does have value greater than 2`"},{"kind":"text","text":",\\n "},{"kind":"code","text":"`Expected 5 to not have value greater than 2`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"string"}},{"id":1161,"name":"expectedValue","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":688,"typeArguments":[{"type":"reference","target":1158,"name":"Expected_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reflection","declaration":{"id":1162,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":1163,"name":"soThat","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":181,"character":8}],"type":{"type":"reflection","declaration":{"id":1164,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":181,"character":16}],"signatures":[{"id":1165,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":181,"character":16}],"parameters":[{"id":1166,"name":"simplifiedPredicate","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":1167,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":181,"character":38}],"signatures":[{"id":1168,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":181,"character":38}],"parameters":[{"id":1169,"name":"actualValue","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1159,"name":"Actual_Type","package":"@serenity-js/core","refersToTypeParameter":true}},{"id":1170,"name":"expectedValue","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1158,"name":"Expected_Type","package":"@serenity-js/core","refersToTypeParameter":true}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"boolean"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reference","target":1138,"typeArguments":[{"type":"reference","target":1159,"name":"Actual_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}]}}}],"groups":[{"title":"Properties","children":[1163]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":180,"character":126}]}}}]},{"id":1171,"name":"to","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":236,"character":11}],"signatures":[{"id":1172,"name":"to","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Used to compose [expectations](/api/core/class/Expectation/).\\n\\n#### Composing [expectations](/api/core/class/Expectation/)\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Expectation } from \'@serenity-js/core\'\\nimport { Ensure, and, or, isGreaterThan, isLessThan, equals  } from \'@serenity-js/assertions\'\\n\\nfunction isWithin(lowerBound: number, upperBound: number) {\\n  return Expectation\\n    .to(`have value within ${ lowerBound } and ${ upperBound }`)\\n    .soThatActual(\\n      and(\\n        or(isGreaterThan(lowerBound), equals(lowerBound)),\\n        or(isLessThan(upperBound), equals(upperBound)),\\n      )\\n    )\\n }\\n\\n await actorCalled(\'Erica\').attemptsTo(\\n     Ensure.that(5, isWithin(3, 6)),\\n )\\n```"}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":236,"character":11}],"typeParameter":[{"id":1173,"name":"Actual_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":1174,"name":"relationshipName","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Name of the relationship between the "},{"kind":"code","text":"`actual`"},{"kind":"text","text":" and the "},{"kind":"code","text":"`expected`"},{"kind":"text","text":". Use format "},{"kind":"code","text":"`have value <adjective>`"},{"kind":"text","text":"\\n so that the description works in both positive and negative contexts, e.g. "},{"kind":"code","text":"`Waited until 5 does have value greater than 2`"},{"kind":"text","text":",\\n "},{"kind":"code","text":"`Expected 5 to not have value greater than 2`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reflection","declaration":{"id":1175,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":1176,"name":"soThatActual","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":237,"character":8}],"type":{"type":"reflection","declaration":{"id":1177,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":237,"character":22}],"signatures":[{"id":1178,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":237,"character":22}],"parameters":[{"id":1179,"name":"expectation","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1138,"typeArguments":[{"type":"reference","target":1173,"name":"Actual_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1138,"typeArguments":[{"type":"reference","target":1173,"name":"Actual_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}]}}}],"groups":[{"title":"Properties","children":[1176]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":236,"character":54}]}}}]},{"id":1194,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"signatures":[{"id":1195,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"parameters":[{"id":1196,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1049,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":600,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":1197,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":1198,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":66}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[1198]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":64}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":1118,"name":"Describable.describedBy"}}],"inheritedFrom":{"type":"reference","target":1117,"name":"Describable.describedBy"}},{"id":1204,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"signatures":[{"id":1205,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":1128,"name":"Describable.toString"}}],"inheritedFrom":{"type":"reference","target":1127,"name":"Describable.toString"}},{"id":1188,"name":"isMetFor","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":267,"character":4}],"signatures":[{"id":1189,"name":"isMetFor","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter) that resolves to ["},{"kind":"code","text":"`ExpectationOutcome`"},{"kind":"text","text":"](/api/core/class/ExpectationOutcome/)\\nindicating that the [expectation was met](/api/core/class/ExpectationMet/)\\nor that the [expectation was not met](/api/core/class/ExpectationNotMet/)"}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":267,"character":4}],"parameters":[{"id":1190,"name":"actual","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":688,"typeArguments":[{"type":"reference","target":1206,"name":"Actual","package":"@serenity-js/core","qualifiedName":"Expectation.Actual","refersToTypeParameter":true}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1041,"typeArguments":[{"type":"reference","target":1270,"name":"ExpectationOutcome","package":"@serenity-js/core"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":1191,"name":"describedAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":274,"character":4}],"signatures":[{"id":1192,"name":"describedAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":274,"character":4}],"parameters":[{"id":1193,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"this"}}]}],"groups":[{"title":"Methods","children":[1139,1156,1171,1194,1204,1188,1191]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":28,"character":13}],"typeParameters":[{"id":1206,"name":"Actual","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"extendedTypes":[{"type":"reference","target":1113,"name":"Describable","package":"@serenity-js/core"}],"permalink":"/api/core/class/Expectation","previousId":1132,"nextId":1207},{"id":1288,"name":"List","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"Serenity/JS Screenplay Pattern-style wrapper around ["},{"kind":"code","text":"`Array`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array)\\nand array-like structures - see ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElements/)."}]},"children":[{"id":1289,"name":"of","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":22,"character":11},{"fileName":"packages/core/src/screenplay/questions/List.ts","line":23,"character":11},{"fileName":"packages/core/src/screenplay/questions/List.ts","line":24,"character":11}],"signatures":[{"id":1290,"name":"of","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":22,"character":11}],"typeParameter":[{"id":1291,"name":"IT","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":1292,"name":"CT","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":1293,"name":"RQT","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":939,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":1291,"name":"IT","package":"@serenity-js/core","refersToTypeParameter":true}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"},{"type":"reference","target":939,"typeArguments":[{"type":"array","elementType":{"type":"reference","target":1291,"name":"IT","package":"@serenity-js/core","refersToTypeParameter":true}}],"name":"Question","package":"@serenity-js/core"}]}}],"parameters":[{"id":1294,"name":"collection","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":688,"typeArguments":[{"type":"array","elementType":{"type":"reference","target":1291,"name":"IT","package":"@serenity-js/core","refersToTypeParameter":true}}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":1054,"typeArguments":[{"type":"reference","target":1292,"name":"CT","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":1293,"name":"RQT","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"ChainableMetaQuestion","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":1408,"typeArguments":[{"type":"reference","target":1292,"name":"CT","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":1291,"name":"IT","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"MetaList","package":"@serenity-js/core"}},{"id":1295,"name":"of","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":23,"character":11}],"typeParameter":[{"id":1296,"name":"IT","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":1297,"name":"collection","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":688,"typeArguments":[{"type":"array","elementType":{"type":"reference","target":1296,"name":"IT","package":"@serenity-js/core","refersToTypeParameter":true}}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1288,"typeArguments":[{"type":"reference","target":1296,"name":"IT","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"List","package":"@serenity-js/core"}}]},{"id":1385,"name":"describedAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":494,"character":4}],"signatures":[{"id":1386,"name":"describedAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Changes the description of this object, as returned by ["},{"kind":"code","text":"`Describable.describedBy`"},{"kind":"text","text":"](/api/core/class/Describable/#describedBy)\\nand ["},{"kind":"code","text":"`Describable.toString`"},{"kind":"text","text":"](/api/core/class/Describable/#toString)."}]},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":494,"character":4}],"parameters":[{"id":1387,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Replaces the current description according to the following rules:\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is an ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable), it replaces the current description\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/), the current description is passed as "},{"kind":"code","text":"`context`"},{"kind":"text","text":" to "},{"kind":"code","text":"`description.of(context)`"},{"kind":"text","text":", and the result replaces the current description"}]},"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":1543,"typeArguments":[{"type":"array","elementType":{"type":"reference","target":1349,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"List.Item_Type","refersToTypeParameter":true}},{"type":"reference","target":939,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}]}}],"type":{"type":"intrinsic","name":"this"},"inheritedFrom":{"type":"reference","target":1007,"name":"Question.describedAs"}}],"inheritedFrom":{"type":"reference","target":1006,"name":"Question.describedAs"}},{"id":1388,"name":"as","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":514,"character":11}],"signatures":[{"id":1389,"name":"as","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Maps this question to one of a different type.\\n\\n"},{"kind":"code","text":"```ts\\nQuestion.about(\'number returned as string\', actor => \'42\')   // returns: QuestionAdapter<string>\\n  .as(Number)                                                // returns: QuestionAdapter<number>\\n```"}]},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":514,"character":11}],"typeParameter":[{"id":1390,"name":"O","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":1391,"name":"mapping","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":1392,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":514,"character":26}],"signatures":[{"id":1393,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":514,"character":26}],"parameters":[{"id":1394,"name":"answer","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"reference","target":1349,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"List.Item_Type","refersToTypeParameter":true}}}],"type":{"type":"union","types":[{"type":"reference","target":1011,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":1011,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reference","target":1041,"typeArguments":[{"type":"reference","target":1011,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":1010,"name":"Question.as"}}],"inheritedFrom":{"type":"reference","target":1009,"name":"Question.as"}},{"id":1395,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"signatures":[{"id":1396,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"parameters":[{"id":1397,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1049,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":600,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":1398,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":1399,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":66}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[1399]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":64}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":1017,"name":"Question.describedBy"}}],"inheritedFrom":{"type":"reference","target":1016,"name":"Question.describedBy"}},{"id":1405,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"signatures":[{"id":1406,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":1027,"name":"Question.toString"}}],"inheritedFrom":{"type":"reference","target":1026,"name":"Question.toString"}},{"id":1347,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":32,"character":4}],"signatures":[{"id":1348,"name":"new List","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":32,"character":4}],"typeParameter":[{"id":1349,"name":"Item_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":1350,"name":"collection","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":688,"typeArguments":[{"type":"array","elementType":{"type":"reference","target":1349,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"List.Item_Type","refersToTypeParameter":true}}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1288,"typeArguments":[{"type":"reference","target":1349,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"List.Item_Type","refersToTypeParameter":true}],"name":"List","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"Question<Promise<Array<Item_Type>>>.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"Question<Promise<Array<Item_Type>>>.constructor"}},{"id":1353,"name":"forEach","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":36,"character":4}],"signatures":[{"id":1354,"name":"forEach","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":36,"character":4}],"parameters":[{"id":1355,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":1356,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":36,"character":22}],"signatures":[{"id":1357,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":36,"character":22}],"parameters":[{"id":1358,"name":"current","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1533,"typeArguments":[{"type":"reference","target":1349,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"List.Item_Type","refersToTypeParameter":true}],"name":"CurrentItem","package":"@serenity-js/core"}},{"id":1359,"name":"index","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}},{"id":1360,"name":"items","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"reference","target":1349,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"List.Item_Type","refersToTypeParameter":true}}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"void"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reference","target":1587,"name":"Task","package":"@serenity-js/core"}}]},{"id":1361,"name":"eachMappedTo","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":40,"character":13}],"signatures":[{"id":1362,"name":"eachMappedTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":40,"character":13}],"typeParameter":[{"id":1363,"name":"Mapped_Item_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":1364,"name":"question","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1543,"typeArguments":[{"type":"reference","target":1349,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"List.Item_Type","refersToTypeParameter":true},{"type":"reference","target":939,"typeArguments":[{"type":"union","types":[{"type":"reference","target":1363,"name":"Mapped_Item_Type","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":1363,"name":"Mapped_Item_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1288,"typeArguments":[{"type":"reference","target":1363,"name":"Mapped_Item_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"List","package":"@serenity-js/core"}}]},{"id":1365,"name":"where","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":44,"character":13}],"signatures":[{"id":1366,"name":"where","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":44,"character":13}],"typeParameter":[{"id":1367,"name":"Answer_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":1368,"name":"question","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1543,"typeArguments":[{"type":"reference","target":1349,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"List.Item_Type","refersToTypeParameter":true},{"type":"reference","target":939,"typeArguments":[{"type":"union","types":[{"type":"reference","target":1367,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":1367,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}},{"id":1369,"name":"expectation","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1138,"typeArguments":[{"type":"reference","target":1367,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1288,"typeArguments":[{"type":"reference","target":1349,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"List.Item_Type","refersToTypeParameter":true}],"name":"List","package":"@serenity-js/core"}}]},{"id":1370,"name":"count","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":49,"character":13}],"signatures":[{"id":1371,"name":"count","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":49,"character":13}],"type":{"type":"reference","target":1041,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":1372,"name":"first","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":51,"character":13}],"signatures":[{"id":1373,"name":"first","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":51,"character":13}],"type":{"type":"reference","target":1041,"typeArguments":[{"type":"reference","target":1349,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"List.Item_Type","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":1374,"name":"last","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":53,"character":13}],"signatures":[{"id":1375,"name":"last","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":53,"character":13}],"type":{"type":"reference","target":1041,"typeArguments":[{"type":"reference","target":1349,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"List.Item_Type","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":1376,"name":"nth","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":55,"character":13}],"signatures":[{"id":1377,"name":"nth","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":55,"character":13}],"parameters":[{"id":1378,"name":"index","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":1041,"typeArguments":[{"type":"reference","target":1349,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"List.Item_Type","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":1379,"name":"answeredBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":57,"character":10}],"signatures":[{"id":1380,"name":"answeredBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the provided ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to use their [abilities](/api/core/class/Ability/)\\nto answer this question."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":57,"character":10}],"parameters":[{"id":1381,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1049,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":600,"name":"UsesAbilities","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":1349,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"List.Item_Type","refersToTypeParameter":true}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":1004,"name":"Question.answeredBy"}}],"overwrites":{"type":"reference","target":1003,"name":"Question.answeredBy"}}],"groups":[{"title":"Constructors","children":[1347]},{"title":"Methods","children":[1289,1385,1388,1395,1405,1353,1361,1365,1370,1372,1374,1376,1379]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":19,"character":22}],"typeParameters":[{"id":1407,"name":"Item_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"extendedTypes":[{"type":"reference","target":939,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":1349,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"List.Item_Type","refersToTypeParameter":true}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"extendedBy":[{"type":"reference","target":1408,"name":"MetaList"}],"permalink":"/api/core/class/List","previousId":1130,"nextId":1408},{"id":1408,"name":"MetaList","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Serenity/JS Screenplay Pattern-style wrapper around\\na ["},{"kind":"code","text":"`ChainableMetaQuestion`"},{"kind":"text","text":"](/api/core/interface/ChainableMetaQuestion/) representing a collection\\nthat can be resolved in "},{"kind":"code","text":"`Supported_Context_Type`"},{"kind":"text","text":" of another ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/).\\n\\nFor example, ["},{"kind":"code","text":"`PageElements.located`"},{"kind":"text","text":"](/api/web/class/PageElements/#located) returns "},{"kind":"code","text":"`MetaList<PageElement>`"},{"kind":"text","text":",\\nwhich allows for the collection of page elements to be resolved in the context\\nof dynamically-provided root element.\\n\\n"},{"kind":"code","text":"```typescript\\nimport { By, PageElements, PageElement } from \'@serenity-js/web\'\\n\\nconst firstLabel = () =>\\n  PageElements.located(By.css(\'label\'))\\n     .first()\\n     .describedAs(\'first label\')\\n\\nconst exampleForm = () =>\\n  PageElement.located(By.css(\'form#example1\'))\\n     .describedAs(\'example form\')\\n\\nconst anotherExampleForm = () =>\\n  PageElement.located(By.css(\'form#example2\'))\\n     .describedAs(\'another example form\')\\n\\n// Next, you can compose the above questions dynamically with various \\"contexts\\":\\n//   firstLabel().of(exampleForm())\\n//   firstLabel().of(anotherExampleForm())\\n```"}]},"children":[{"id":1509,"name":"describedAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":494,"character":4}],"signatures":[{"id":1510,"name":"describedAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Changes the description of this object, as returned by ["},{"kind":"code","text":"`Describable.describedBy`"},{"kind":"text","text":"](/api/core/class/Describable/#describedBy)\\nand ["},{"kind":"code","text":"`Describable.toString`"},{"kind":"text","text":"](/api/core/class/Describable/#toString)."}]},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":494,"character":4}],"parameters":[{"id":1511,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Replaces the current description according to the following rules:\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is an ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable), it replaces the current description\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/), the current description is passed as "},{"kind":"code","text":"`context`"},{"kind":"text","text":" to "},{"kind":"code","text":"`description.of(context)`"},{"kind":"text","text":", and the result replaces the current description"}]},"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":1543,"typeArguments":[{"type":"array","elementType":{"type":"reference","target":1470,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Item_Type","refersToTypeParameter":true}},{"type":"reference","target":939,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}]}}],"type":{"type":"intrinsic","name":"this"},"inheritedFrom":{"type":"reference","target":1386,"name":"List.describedAs"}}],"inheritedFrom":{"type":"reference","target":1385,"name":"List.describedAs"}},{"id":1512,"name":"as","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":514,"character":11}],"signatures":[{"id":1513,"name":"as","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Maps this question to one of a different type.\\n\\n"},{"kind":"code","text":"```ts\\nQuestion.about(\'number returned as string\', actor => \'42\')   // returns: QuestionAdapter<string>\\n  .as(Number)                                                // returns: QuestionAdapter<number>\\n```"}]},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":514,"character":11}],"typeParameter":[{"id":1514,"name":"O","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":1515,"name":"mapping","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":1516,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":514,"character":26}],"signatures":[{"id":1517,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":514,"character":26}],"parameters":[{"id":1518,"name":"answer","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"reference","target":1470,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Item_Type","refersToTypeParameter":true}}}],"type":{"type":"union","types":[{"type":"reference","target":1011,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":1011,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reference","target":1041,"typeArguments":[{"type":"reference","target":1011,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":1389,"name":"List.as"}}],"inheritedFrom":{"type":"reference","target":1388,"name":"List.as"}},{"id":1519,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"signatures":[{"id":1520,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"parameters":[{"id":1521,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1049,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":600,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":1522,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":1523,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":66}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[1523]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":64}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":1396,"name":"List.describedBy"}}],"inheritedFrom":{"type":"reference","target":1395,"name":"List.describedBy"}},{"id":1529,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"signatures":[{"id":1530,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":1406,"name":"List.toString"},"implementationOf":{"type":"reference","target":1059,"name":"ChainableMetaQuestion.toString"}}],"inheritedFrom":{"type":"reference","target":1405,"name":"List.toString"},"implementationOf":{"type":"reference","target":1058,"name":"ChainableMetaQuestion.toString"}},{"id":1495,"name":"forEach","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":36,"character":4}],"signatures":[{"id":1496,"name":"forEach","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":36,"character":4}],"parameters":[{"id":1497,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":1498,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":36,"character":22}],"signatures":[{"id":1499,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":36,"character":22}],"parameters":[{"id":1500,"name":"current","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1533,"typeArguments":[{"type":"reference","target":1470,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Item_Type","refersToTypeParameter":true}],"name":"CurrentItem","package":"@serenity-js/core"}},{"id":1501,"name":"index","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}},{"id":1502,"name":"items","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"reference","target":1470,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Item_Type","refersToTypeParameter":true}}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"void"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reference","target":1587,"name":"Task","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":1354,"name":"List.forEach"}}],"inheritedFrom":{"type":"reference","target":1353,"name":"List.forEach"}},{"id":1503,"name":"answeredBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":57,"character":10}],"signatures":[{"id":1504,"name":"answeredBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the provided ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to use their [abilities](/api/core/class/Ability/)\\nto answer this question."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":57,"character":10}],"parameters":[{"id":1505,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1049,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":600,"name":"UsesAbilities","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":1470,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Item_Type","refersToTypeParameter":true}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":1380,"name":"List.answeredBy"}}],"inheritedFrom":{"type":"reference","target":1379,"name":"List.answeredBy"}},{"id":1467,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":190,"character":4}],"signatures":[{"id":1468,"name":"new MetaList","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":190,"character":4}],"typeParameter":[{"id":1469,"name":"Supported_Context_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":1470,"name":"Item_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":1471,"name":"collection","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":688,"typeArguments":[{"type":"array","elementType":{"type":"reference","target":1470,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Item_Type","refersToTypeParameter":true}}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":1054,"typeArguments":[{"type":"reference","target":1469,"name":"Supported_Context_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Supported_Context_Type","refersToTypeParameter":true},{"type":"union","types":[{"type":"reference","target":939,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":1470,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Item_Type","refersToTypeParameter":true}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"},{"type":"reference","target":939,"typeArguments":[{"type":"array","elementType":{"type":"reference","target":1470,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Item_Type","refersToTypeParameter":true}}],"name":"Question","package":"@serenity-js/core"}]}],"name":"ChainableMetaQuestion","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":1408,"typeArguments":[{"type":"reference","target":1469,"name":"Supported_Context_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Supported_Context_Type","refersToTypeParameter":true},{"type":"reference","target":1470,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Item_Type","refersToTypeParameter":true}],"name":"MetaList","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":1348,"name":"List.constructor"}}],"overwrites":{"type":"reference","target":1347,"name":"List.constructor"}},{"id":1473,"name":"of","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":196,"character":4}],"signatures":[{"id":1474,"name":"of","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Answers the given "},{"kind":"code","text":"`ChainableMetaQuestion`"},{"kind":"text","text":" in the context of another ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable)\\nand returns another "},{"kind":"code","text":"`ChainableMetaQuestion`"},{"kind":"text","text":" ready for further chaining.\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`List`"},{"kind":"text","text":"](/api/core/class/List/)"}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":196,"character":4}],"parameters":[{"id":1475,"name":"context","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":688,"typeArguments":[{"type":"reference","target":1469,"name":"Supported_Context_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Supported_Context_Type","refersToTypeParameter":true}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1408,"typeArguments":[{"type":"reference","target":1469,"name":"Supported_Context_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Supported_Context_Type","refersToTypeParameter":true},{"type":"reference","target":1470,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Item_Type","refersToTypeParameter":true}],"name":"MetaList","package":"@serenity-js/core"},"implementationOf":{"type":"reference","target":1056,"name":"ChainableMetaQuestion.of"}}],"implementationOf":{"type":"reference","target":1055,"name":"ChainableMetaQuestion.of"}},{"id":1476,"name":"eachMappedTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":202,"character":13}],"signatures":[{"id":1477,"name":"eachMappedTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":202,"character":13}],"typeParameter":[{"id":1478,"name":"Mapped_Item_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":1479,"name":"question","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1543,"typeArguments":[{"type":"reference","target":1470,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Item_Type","refersToTypeParameter":true},{"type":"reference","target":939,"typeArguments":[{"type":"union","types":[{"type":"reference","target":1478,"name":"Mapped_Item_Type","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":1478,"name":"Mapped_Item_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1408,"typeArguments":[{"type":"reference","target":1469,"name":"Supported_Context_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Supported_Context_Type","refersToTypeParameter":true},{"type":"reference","target":1478,"name":"Mapped_Item_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"MetaList","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":1362,"name":"List.eachMappedTo"}}],"overwrites":{"type":"reference","target":1361,"name":"List.eachMappedTo"}},{"id":1480,"name":"where","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":210,"character":13}],"signatures":[{"id":1481,"name":"where","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":210,"character":13}],"typeParameter":[{"id":1482,"name":"Answer_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":1483,"name":"question","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1543,"typeArguments":[{"type":"reference","target":1470,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Item_Type","refersToTypeParameter":true},{"type":"reference","target":939,"typeArguments":[{"type":"union","types":[{"type":"reference","target":1482,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":1482,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}},{"id":1484,"name":"expectation","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1138,"typeArguments":[{"type":"reference","target":1482,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1408,"typeArguments":[{"type":"reference","target":1469,"name":"Supported_Context_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Supported_Context_Type","refersToTypeParameter":true},{"type":"reference","target":1470,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Item_Type","refersToTypeParameter":true}],"name":"MetaList","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":1366,"name":"List.where"}}],"overwrites":{"type":"reference","target":1365,"name":"List.where"}},{"id":1485,"name":"count","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":219,"character":13}],"signatures":[{"id":1486,"name":"count","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":219,"character":13}],"type":{"type":"reference","target":1046,"typeArguments":[{"type":"reference","target":1469,"name":"Supported_Context_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Supported_Context_Type","refersToTypeParameter":true},{"type":"intrinsic","name":"number"}],"name":"MetaQuestionAdapter","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":1371,"name":"List.count"}}],"overwrites":{"type":"reference","target":1370,"name":"List.count"}},{"id":1487,"name":"first","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":229,"character":13}],"signatures":[{"id":1488,"name":"first","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":229,"character":13}],"type":{"type":"reference","target":1046,"typeArguments":[{"type":"reference","target":1469,"name":"Supported_Context_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Supported_Context_Type","refersToTypeParameter":true},{"type":"reference","target":1470,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Item_Type","refersToTypeParameter":true}],"name":"MetaQuestionAdapter","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":1373,"name":"List.first"}}],"overwrites":{"type":"reference","target":1372,"name":"List.first"}},{"id":1489,"name":"last","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":244,"character":13}],"signatures":[{"id":1490,"name":"last","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":244,"character":13}],"type":{"type":"reference","target":1046,"typeArguments":[{"type":"reference","target":1469,"name":"Supported_Context_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Supported_Context_Type","refersToTypeParameter":true},{"type":"reference","target":1470,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Item_Type","refersToTypeParameter":true}],"name":"MetaQuestionAdapter","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":1375,"name":"List.last"}}],"overwrites":{"type":"reference","target":1374,"name":"List.last"}},{"id":1491,"name":"nth","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":259,"character":13}],"signatures":[{"id":1492,"name":"nth","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":259,"character":13}],"parameters":[{"id":1493,"name":"index","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":1046,"typeArguments":[{"type":"reference","target":1469,"name":"Supported_Context_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Supported_Context_Type","refersToTypeParameter":true},{"type":"reference","target":1470,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Item_Type","refersToTypeParameter":true}],"name":"MetaQuestionAdapter","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":1377,"name":"List.nth"}}],"overwrites":{"type":"reference","target":1376,"name":"List.nth"}}],"groups":[{"title":"Constructors","children":[1467]},{"title":"Methods","children":[1509,1512,1519,1529,1495,1503,1473,1476,1480,1485,1487,1489,1491]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":186,"character":13}],"typeParameters":[{"id":1531,"name":"Supported_Context_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":1532,"name":"Item_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"extendedTypes":[{"type":"reference","target":1288,"typeArguments":[{"type":"reference","target":1470,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Item_Type","refersToTypeParameter":true}],"name":"List","package":"@serenity-js/core"}],"implementedTypes":[{"type":"reference","target":1054,"typeArguments":[{"type":"reference","target":1469,"name":"Supported_Context_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Supported_Context_Type","refersToTypeParameter":true},{"type":"reference","target":1408,"typeArguments":[{"type":"reference","target":1469,"name":"Supported_Context_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Supported_Context_Type","refersToTypeParameter":true},{"type":"reference","target":1470,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Item_Type","refersToTypeParameter":true}],"name":"MetaList","package":"@serenity-js/core"}],"name":"ChainableMetaQuestion","package":"@serenity-js/core"}],"permalink":"/api/core/class/MetaList","previousId":1288,"nextId":1533},{"id":1533,"name":"CurrentItem","variant":"declaration","kind":256,"flags":{"isExternal":true},"children":[{"id":1534,"name":"item","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":400,"character":4}],"type":{"type":"reference","target":1536,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"CurrentItem.Item_Type","refersToTypeParameter":true}},{"id":1535,"name":"actor","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":401,"character":4}],"type":{"type":"reference","target":637,"name":"Actor","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[1534,1535]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":399,"character":17}],"typeParameters":[{"id":1536,"name":"Item_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"permalink":"/api/core/interface/CurrentItem","previousId":1408,"nextId":1537},{"id":1537,"name":"Masked","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"This question masks sensitive data handled by the actors and prevents\\nit from being shown in Serenity/JS reports and console logs.\\nYou should use it to wrap passwords, secret tokens, phone numbers,\\ncredit card numbers, or any other personally identifiable information (PII).\\nHowever, even though the wrapped value is masked in the output,\\nyou can still retrieve the unmasked value by making the actor answer\\nthe question in your custom interactions."}]},"children":[{"id":1538,"name":"valueOf","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Masked.ts","line":37,"character":11}],"signatures":[{"id":1539,"name":"valueOf","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Retrieves the value of a sensitive parameter and mask it in any report.\\n\\n#### Example\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Masked } from \'@serenity-js/core\';\\nimport { Ensure, equals } from \'@serenity-js/assertions\';\\n\\nawait actorCalled(\'John\')\\n  .attemptsTo(\\n    Enter.theValue(Masked.valueOf(\'your little secret\')).into(Form.exampleInput())\\n  );\\n```"}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter) representing the masked value."}]}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Masked.ts","line":37,"character":11}],"parameters":[{"id":1540,"name":"parameter","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable) representing the masked value."}]},"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1041,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":1541,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":1542,"name":"new Masked","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":1537,"name":"Masked","package":"@serenity-js/core"}}]}],"groups":[{"title":"Constructors","children":[1541]},{"title":"Methods","children":[1538]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/Masked.ts","line":15,"character":13}],"permalink":"/api/core/class/Masked","previousId":1533,"nextId":1543},{"id":1543,"name":"MetaQuestion","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A meta-question is a ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/) that can be answered\\nin the context of another ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable),\\ntypically to transform its value.\\n\\nFor example, the question ["},{"kind":"code","text":"`Text.of`"},{"kind":"text","text":"](/api/web/class/Text/#of) can be answered in the context\\nof a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) to return its text content.\\n\\n[Meta-questions](/api/core/interface/MetaQuestion/) are typically used when filtering a ["},{"kind":"code","text":"`List`"},{"kind":"text","text":"](/api/core/class/List/).\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`List`"},{"kind":"text","text":"](/api/core/class/List/)"}]},"children":[{"id":1544,"name":"of","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/MetaQuestion.ts","line":27,"character":4}],"signatures":[{"id":1545,"name":"of","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Answers the given "},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":" in the context of another ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable).\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`List`"},{"kind":"text","text":"](/api/core/class/List/)"}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/MetaQuestion.ts","line":27,"character":4}],"parameters":[{"id":1546,"name":"context","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":688,"typeArguments":[{"type":"reference","target":1549,"name":"Supported_Context_Type","package":"@serenity-js/core","qualifiedName":"MetaQuestion.Supported_Context_Type","refersToTypeParameter":true}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1550,"name":"Returned_Question_Type","package":"@serenity-js/core","qualifiedName":"MetaQuestion.Returned_Question_Type","refersToTypeParameter":true}}]},{"id":1547,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/MetaQuestion.ts","line":36,"character":4}],"signatures":[{"id":1548,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of this ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/),\\ntypically involving the description of the subject.\\n\\nFor example, a description of a meta question obout \\"the text of an element\\"\\nwould be "},{"kind":"code","text":"`text of ${ element.toString() }`"}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/MetaQuestion.ts","line":36,"character":4}],"type":{"type":"intrinsic","name":"string"}}]}],"groups":[{"title":"Methods","children":[1544,1547]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/MetaQuestion.ts","line":19,"character":17}],"typeParameters":[{"id":1549,"name":"Supported_Context_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":1550,"name":"Returned_Question_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":939,"typeArguments":[{"type":"intrinsic","name":"unknown"}],"name":"Question","package":"@serenity-js/core"}}],"extendedBy":[{"type":"reference","target":1054,"name":"ChainableMetaQuestion"}],"permalink":"/api/core/interface/MetaQuestion","previousId":1537,"nextId":1567},{"id":1567,"name":"Unanswered","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A placeholder value signifying that a ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/)\\nhas not been answered by an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) when producing an ["},{"kind":"code","text":"`ExpectationOutcome`"},{"kind":"text","text":"](/api/core/class/ExpectationOutcome/).\\nThis happens when Serenity/JS decides that answering a given question\\nwon\'t affect the outcome.\\n\\nFor example, making the actor answer questions about the expected value\\nand the actual value of each list item is unnecessary if we already know that the list itself is empty."}]},"children":[{"id":1568,"name":"isUnanswered","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Unanswered.ts","line":17,"character":11}],"signatures":[{"id":1569,"name":"isUnanswered","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Unanswered.ts","line":17,"character":11}],"parameters":[{"id":1570,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"value","asserts":false,"targetType":{"type":"reference","target":1567,"name":"Unanswered","package":"@serenity-js/core"}}}]},{"id":1571,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":1572,"name":"new Unanswered","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":1567,"name":"Unanswered","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.constructor"}},{"id":1577,"name":"[custom]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Unanswered.ts","line":21,"character":4}],"signatures":[{"id":1578,"name":"[custom]","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Unanswered.ts","line":21,"character":4}],"type":{"type":"intrinsic","name":"string"}}]},{"id":1573,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Unanswered.ts","line":25,"character":4}],"signatures":[{"id":1574,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Unanswered.ts","line":25,"character":4}],"type":{"type":"intrinsic","name":"string"},"overwrites":{"type":"reference","target":-1,"name":"TinyType.toString"}}],"overwrites":{"type":"reference","target":-1,"name":"TinyType.toString"}},{"id":1575,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Unanswered.ts","line":29,"character":4}],"signatures":[{"id":1576,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Unanswered.ts","line":29,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"overwrites":{"type":"reference","target":-1,"name":"TinyType.toJSON"}}],"overwrites":{"type":"reference","target":-1,"name":"TinyType.toJSON"}},{"id":1579,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":1580,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":1581,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.equals"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.equals"}}],"groups":[{"title":"Constructors","children":[1571]},{"title":"Methods","children":[1568,1577,1573,1575,1579]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/Unanswered.ts","line":16,"character":13}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}],"permalink":"/api/core/class/Unanswered","previousId":1543,"nextId":1551},{"id":1207,"name":"ExpectationDetails","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Used with ["},{"kind":"code","text":"`ExpectationOutcome`"},{"kind":"text","text":"](/api/core/class/ExpectationOutcome/) to describe an ["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/) and the arguments it\'s been executed with."}]},"children":[{"id":1208,"name":"of","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts","line":15,"character":11}],"signatures":[{"id":1209,"name":"of","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts","line":15,"character":11}],"parameters":[{"id":1210,"name":"functionName","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":1211,"name":"functionArguments","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"union","types":[{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},{"type":"reference","target":1207,"name":"ExpectationDetails","package":"@serenity-js/core"},{"type":"reference","target":1567,"name":"Unanswered","package":"@serenity-js/core"}]}}}],"type":{"type":"reference","target":1207,"name":"ExpectationDetails","package":"@serenity-js/core"}}]},{"id":1212,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts","line":19,"character":11}],"signatures":[{"id":1213,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts","line":19,"character":11}],"parameters":[{"id":1214,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":1207,"name":"ExpectationDetails","package":"@serenity-js/core"}}]},{"id":1219,"name":"name","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts","line":36,"character":24}],"type":{"type":"reference","name":"Name","package":"@serenity-js/core"}},{"id":1220,"name":"args","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts","line":37,"character":24}],"type":{"type":"array","elementType":{"type":"union","types":[{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},{"type":"reference","target":1207,"name":"ExpectationDetails","package":"@serenity-js/core"},{"type":"reference","target":1567,"name":"Unanswered","package":"@serenity-js/core"}]}}},{"id":1221,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts","line":44,"character":4}],"signatures":[{"id":1222,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts","line":44,"character":4}],"type":{"type":"intrinsic","name":"string"},"overwrites":{"type":"reference","target":-1,"name":"TinyType.toString"}}],"overwrites":{"type":"reference","target":-1,"name":"TinyType.toString"}},{"id":1223,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts","line":54,"character":4}],"signatures":[{"id":1224,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts","line":54,"character":4}],"type":{"type":"reflection","declaration":{"id":1225,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":1226,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts","line":54,"character":16}],"type":{"type":"intrinsic","name":"string"}},{"id":1227,"name":"args","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts","line":54,"character":30}],"type":{"type":"array","elementType":{"type":"reflection","declaration":{"id":1228,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":1229,"name":"type","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts","line":54,"character":44}],"type":{"type":"intrinsic","name":"string"}},{"id":1230,"name":"value","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts","line":54,"character":58}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"}}],"groups":[{"title":"Properties","children":[1229,1230]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts","line":54,"character":42}]}}}}],"groups":[{"title":"Properties","children":[1226,1227]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts","line":54,"character":14}]}},"overwrites":{"type":"reference","target":-1,"name":"TinyType.toJSON"}}],"overwrites":{"type":"reference","target":-1,"name":"TinyType.toJSON"}},{"id":1231,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":1232,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":1233,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.equals"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.equals"}}],"groups":[{"title":"Properties","children":[1219,1220]},{"title":"Methods","children":[1208,1212,1221,1223,1231]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts","line":13,"character":13}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}],"permalink":"/api/core/class/ExpectationDetails","previousId":1138,"nextId":1234},{"id":1234,"name":"ExpectationMet","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Indicates that an ["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/) was met."}]},"children":[{"id":1235,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":12,"character":4}],"signatures":[{"id":1236,"name":"new ExpectationMet","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":12,"character":4}],"parameters":[{"id":1237,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":1238,"name":"expectation","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1207,"name":"ExpectationDetails","package":"@serenity-js/core"}},{"id":1239,"name":"expected","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"unknown"}},{"id":1240,"name":"actual","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":1234,"name":"ExpectationMet","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":1272,"name":"ExpectationOutcome.constructor"}}],"inheritedFrom":{"type":"reference","target":1271,"name":"ExpectationOutcome.constructor"}},{"id":1241,"name":"message","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":13,"character":24}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":1277,"name":"ExpectationOutcome.message"}},{"id":1242,"name":"expectation","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":14,"character":24}],"type":{"type":"reference","target":1207,"name":"ExpectationDetails","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":1278,"name":"ExpectationOutcome.expectation"}},{"id":1243,"name":"expected","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":15,"character":24}],"type":{"type":"intrinsic","name":"unknown"},"inheritedFrom":{"type":"reference","target":1279,"name":"ExpectationOutcome.expected"}},{"id":1244,"name":"actual","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":16,"character":24}],"type":{"type":"intrinsic","name":"unknown"},"inheritedFrom":{"type":"reference","target":1280,"name":"ExpectationOutcome.actual"}},{"id":1245,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":1246,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":1247,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":1282,"name":"ExpectationOutcome.equals"}}],"inheritedFrom":{"type":"reference","target":1281,"name":"ExpectationOutcome.equals"}},{"id":1248,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":1249,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":1285,"name":"ExpectationOutcome.toString"}}],"inheritedFrom":{"type":"reference","target":1284,"name":"ExpectationOutcome.toString"}},{"id":1250,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":1251,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":1287,"name":"ExpectationOutcome.toJSON"}}],"inheritedFrom":{"type":"reference","target":1286,"name":"ExpectationOutcome.toJSON"}}],"groups":[{"title":"Constructors","children":[1235]},{"title":"Properties","children":[1241,1242,1243,1244]},{"title":"Methods","children":[1245,1248,1250]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationMet.ts","line":8,"character":13}],"extendedTypes":[{"type":"reference","target":1270,"name":"ExpectationOutcome","package":"@serenity-js/core"}],"permalink":"/api/core/class/ExpectationMet","previousId":1207,"nextId":1252},{"id":1252,"name":"ExpectationNotMet","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Indicates that an ["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/) was not met."}]},"children":[{"id":1253,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":12,"character":4}],"signatures":[{"id":1254,"name":"new ExpectationNotMet","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":12,"character":4}],"parameters":[{"id":1255,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":1256,"name":"expectation","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1207,"name":"ExpectationDetails","package":"@serenity-js/core"}},{"id":1257,"name":"expected","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"unknown"}},{"id":1258,"name":"actual","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":1252,"name":"ExpectationNotMet","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":1272,"name":"ExpectationOutcome.constructor"}}],"inheritedFrom":{"type":"reference","target":1271,"name":"ExpectationOutcome.constructor"}},{"id":1259,"name":"message","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":13,"character":24}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":1277,"name":"ExpectationOutcome.message"}},{"id":1260,"name":"expectation","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":14,"character":24}],"type":{"type":"reference","target":1207,"name":"ExpectationDetails","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":1278,"name":"ExpectationOutcome.expectation"}},{"id":1261,"name":"expected","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":15,"character":24}],"type":{"type":"intrinsic","name":"unknown"},"inheritedFrom":{"type":"reference","target":1279,"name":"ExpectationOutcome.expected"}},{"id":1262,"name":"actual","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":16,"character":24}],"type":{"type":"intrinsic","name":"unknown"},"inheritedFrom":{"type":"reference","target":1280,"name":"ExpectationOutcome.actual"}},{"id":1263,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":1264,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":1265,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":1282,"name":"ExpectationOutcome.equals"}}],"inheritedFrom":{"type":"reference","target":1281,"name":"ExpectationOutcome.equals"}},{"id":1266,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":1267,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":1285,"name":"ExpectationOutcome.toString"}}],"inheritedFrom":{"type":"reference","target":1284,"name":"ExpectationOutcome.toString"}},{"id":1268,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":1269,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":1287,"name":"ExpectationOutcome.toJSON"}}],"inheritedFrom":{"type":"reference","target":1286,"name":"ExpectationOutcome.toJSON"}}],"groups":[{"title":"Constructors","children":[1253]},{"title":"Properties","children":[1259,1260,1261,1262]},{"title":"Methods","children":[1263,1266,1268]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationNotMet.ts","line":8,"character":13}],"extendedTypes":[{"type":"reference","target":1270,"name":"ExpectationOutcome","package":"@serenity-js/core"}],"permalink":"/api/core/class/ExpectationNotMet","previousId":1234,"nextId":1270},{"id":1270,"name":"ExpectationOutcome","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An outcome of an ["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/),\\nwhich could be either [met](/api/core/class/ExpectationMet/) or [not met](/api/core/class/ExpectationNotMet/)."}]},"children":[{"id":1271,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":12,"character":4}],"signatures":[{"id":1272,"name":"new ExpectationOutcome","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":12,"character":4}],"parameters":[{"id":1273,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":1274,"name":"expectation","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1207,"name":"ExpectationDetails","package":"@serenity-js/core"}},{"id":1275,"name":"expected","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"unknown"}},{"id":1276,"name":"actual","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":1270,"name":"ExpectationOutcome","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"TinyType.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"TinyType.constructor"}},{"id":1277,"name":"message","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":13,"character":24}],"type":{"type":"intrinsic","name":"string"}},{"id":1278,"name":"expectation","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":14,"character":24}],"type":{"type":"reference","target":1207,"name":"ExpectationDetails","package":"@serenity-js/core"}},{"id":1279,"name":"expected","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":15,"character":24}],"type":{"type":"intrinsic","name":"unknown"}},{"id":1280,"name":"actual","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":16,"character":24}],"type":{"type":"intrinsic","name":"unknown"}},{"id":1281,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":1282,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":1283,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.equals"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.equals"}},{"id":1284,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":1285,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.toString"}},{"id":1286,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":1287,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.toJSON"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.toJSON"}}],"groups":[{"title":"Constructors","children":[1271]},{"title":"Properties","children":[1277,1278,1279,1280]},{"title":"Methods","children":[1281,1284,1286]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":11,"character":13}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}],"extendedBy":[{"type":"reference","target":1234,"name":"ExpectationMet"},{"type":"reference","target":1252,"name":"ExpectationNotMet"}],"permalink":"/api/core/class/ExpectationOutcome","previousId":1252,"nextId":826},{"id":1551,"name":"the","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/tag-functions.ts","line":171,"character":16},{"fileName":"packages/core/src/screenplay/questions/tag-functions.ts","line":172,"character":16},{"fileName":"packages/core/src/screenplay/questions/tag-functions.ts","line":173,"character":16}],"signatures":[{"id":1552,"name":"the","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates a single-line description of an ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) by transforming\\na [template literal](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#Tagged_templates),\\nparameterised with [primitive data types](https://developer.mozilla.org/en-US/docs/Glossary/Primitive),\\n[complex data structures](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#objects),\\nor any other [answerables](/api/core/#Answerable),\\ninto a ["},{"kind":"code","text":"`QuestionAdapter<string>`"},{"kind":"text","text":"](/api/core/#QuestionAdapter)\\nthat can be used with ["},{"kind":"code","text":"`Task.where`"},{"kind":"text","text":"](/api/core/class/Task/#where) and ["},{"kind":"code","text":"`Interaction.where`"},{"kind":"text","text":"](/api/core/class/Interaction/#where) methods.\\n\\n"},{"kind":"code","text":"```ts\\nconst dial = (phoneNumber: Answerable<string>) =>\\n Task.where(the `#actor dials ${ phoneNumber }`, /* */)\\n\\nawait actorCalled(\'Alice\').attemptsTo(\\n  dial(\'(555) 123-4567\'),\\n  // reported as: Alice dials \\"(555) 123-4567\\"\\n)\\n```"},{"kind":"text","text":"\\n\\n## Trimming the output\\n\\nUse ["},{"kind":"code","text":"`DescriptionFormattingOptions`"},{"kind":"text","text":"](http://serenity-js.org/api/core/interface/DescriptionFormattingOptions/)\\nto trim the descriptions of template parameters.\\nBy default, the output is displayed in full.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Task, the } from \'@serenity-js/core\'\\n\\nconst dial = (phoneNumber: Answerable<string>) =>\\n Task.where(dial({ maxLength: 10 }) `#actor dials ${ phoneNumber }`, /* */)\\n\\nawait actorCalled(\'Alice\').attemptsTo(\\n  dial(\'(555) 123-4567\'),\\n  // reported as: Alice dials \\"(555) 123-...\'\\n)\\n```"},{"kind":"text","text":"\\n\\n## Using with Questions\\n\\nWhen "},{"kind":"code","text":"`the`"},{"kind":"text","text":" is parameterised with [questions](/api/core/class/Question/),\\nit retrieves their description by calling ["},{"kind":"code","text":"`Question.describedBy`"},{"kind":"text","text":"](/api/core/class/Question/#describedBy)\\nin the context of the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) performing the ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/).\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Question, Task, the } from \'@serenity-js/core\'\\n\\nconst phoneNumber = (areaCode: string, centralOfficeCode: string, lineNumber: string) =>\\n Question.about(\'phone number\', actor => {\\n    return `(${ this.areaCode }) ${ this.centralOfficeCode }-${ this.lineNumber }`\\n  })\\n\\nconst dial = (phoneNumber: Answerable<string>) =>\\n Task.where(dial({ maxLength: 10 }) `#actor dials ${ phoneNumber }`, /* */)\\n\\nawait actorCalled(\'Alice\').attemptsTo(\\n  dial(phoneNumber(\'555\', \'123\', \'4567\'),\\n  // reported as: Alice dials phone number\\n)\\n```"},{"kind":"text","text":"\\n\\nIf you\'d like the question to be described using its formatted value instead of its description, use ["},{"kind":"code","text":"`Question.formattedValue`"},{"kind":"text","text":"](/api/core/class/Question/#formattedValue).\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Question, Task, the } from \'@serenity-js/core\'\\n\\nconst phoneNumber = (areaCode: string, centralOfficeCode: string, lineNumber: string) =>\\n  Question.about(\'phone number\', actor => {\\n    return `(${ this.areaCode }) ${ this.centralOfficeCode }-${ this.lineNumber }`\\n  }).describedAs(Question.formattedValue())\\n\\nconst dial = (phoneNumber: Answerable<string>) =>\\n Task.where(dial({ maxLength: 10 }) `#actor dials ${ phoneNumber }`, /* */)\\n\\nawait actorCalled(\'Alice\').attemptsTo(\\n  dial(phoneNumber(\'555\', \'123\', \'4567\'),\\n  // reported as: Alice dials \\"(555) 123-4567\\"\\n)\\n```"},{"kind":"text","text":"\\n\\n## Using with objects with a custom "},{"kind":"code","text":"`toString`"},{"kind":"text","text":" method\\n\\nWhen "},{"kind":"code","text":"`the`"},{"kind":"text","text":" is parameterised with objects that have\\na custom ["},{"kind":"code","text":"`toString()`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toString) method,\\nor [answerables](/api/core/#Answerable) resolving to such objects, the "},{"kind":"code","text":"`toString()`"},{"kind":"text","text":" method is called to produce the resulting description.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, description, Task } from \'@serenity-js/core\'\\n\\nclass PhoneNumber {\\n  constructor(\\n    private readonly areaCode: string,\\n    private readonly centralOfficeCode: string,\\n    private readonly lineNumber: string,\\n  ) {}\\n\\n  toString() {\\n    return `(${ this.areaCode }) ${ this.centralOfficeCode }-${ this.lineNumber }`\\n  }\\n}\\n\\nconst dial = (phoneNumber: Answerable<PhoneNumber>) =>\\n Task.where(description `#actor dials ${ phoneNumber }`, /* */)\\n\\nawait actorCalled(\'Alice\').attemptsTo(\\n  dial(new PhoneNumber(\'555\', \'123\', \'4567\')),\\n  // reported as: Alice dials (555) 123-4567\\n)\\n```"},{"kind":"text","text":"\\n\\n## Using with objects without a custom "},{"kind":"code","text":"`toString`"},{"kind":"text","text":" method\\n\\nWhen "},{"kind":"code","text":"`the`"},{"kind":"text","text":" is parameterised with complex objects that don\'t have a custom "},{"kind":"code","text":"`toString()`"},{"kind":"text","text":" method,\\nor ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable)s resolving to such objects,\\nthe resulting description will contain a JSON-like string representation of the object.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, description, Task } from \'@serenity-js/core\'\\n\\ninterface PhoneNumber {\\n  areaCode: string;\\n  centralOfficeCode: string;\\n  lineNumber: string;\\n}\\n\\nconst dial = (phoneNumber: Answerable<PhoneNumber>) =>\\n Task.where(the `#actor dials ${ phoneNumber }`, /* */)\\n\\nawait actorCalled(\'Alice\').attemptsTo(\\n  dial({ areaCode: \'555\', centralOfficeCode: \'123\', lineNumber: \'4567\' }),\\n  // reported as: Alice dials { areaCode: \\"555\\", centralOfficeCode: \\"123\\", lineNumber: \\"4567\\" }\\n)\\n```"},{"kind":"text","text":"\\n\\n## Using with masked values\\n\\nWhen "},{"kind":"code","text":"`the`"},{"kind":"text","text":" is parameterised with [masked values](/api/core/class/Masked/),\\nthe resulting description will contain a masked representation of the values.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, description, Task } from \'@serenity-js/core\'\\n\\nconst dial = (phoneNumber: Answerable<string>) =>\\n Task.where(description `#actor dials ${ phoneNumber }`, /* */)\\n\\nawait actorCalled(\'Alice\').attemptsTo(\\n  dial(Masked.valueOf(\'(555) 123-4567\')),\\n  // reported as: Alice dials [a masked value]\\n)\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable)\\n- ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/)\\n- ["},{"kind":"code","text":"`Question.describedAs`"},{"kind":"text","text":"](/api/core/class/Question/#describedAs)\\n- ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter)\\n- ["},{"kind":"code","text":"`Masked`"},{"kind":"text","text":"](/api/core/class/Masked/)"}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/tag-functions.ts","line":171,"character":16}],"parameters":[{"id":1553,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1130,"name":"DescriptionFormattingOptions","package":"@serenity-js/core"}}],"type":{"type":"reflection","declaration":{"id":1554,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/tag-functions.ts","line":171,"character":60}],"signatures":[{"id":1555,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"typeParameter":[{"id":1558,"name":"Supported_Context_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":1556,"name":"templates","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"TemplateStringsArray"},"name":"TemplateStringsArray","package":"typescript"}},{"id":1557,"name":"placeholders","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"union","types":[{"type":"reference","target":1543,"typeArguments":[{"type":"reference","target":1558,"name":"Supported_Context_Type","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"intrinsic","name":"any"}],"name":"MetaQuestion","package":"@serenity-js/core"},{"type":"intrinsic","name":"any"}]}}}],"type":{"type":"reference","target":1046,"typeArguments":[{"type":"reference","target":1558,"name":"Supported_Context_Type","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"intrinsic","name":"string"}],"name":"MetaQuestionAdapter","package":"@serenity-js/core"}}]}}},{"id":1559,"name":"the","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/tag-functions.ts","line":172,"character":16}],"typeParameter":[{"id":1560,"name":"Supported_Context_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":1561,"name":"templates","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"TemplateStringsArray"},"name":"TemplateStringsArray","package":"typescript"}},{"id":1562,"name":"parameters","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"reference","target":1046,"typeArguments":[{"type":"reference","target":1560,"name":"Supported_Context_Type","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"intrinsic","name":"string"}],"name":"MetaQuestionAdapter","package":"@serenity-js/core"}}],"permalink":"/api/core/function/the","previousId":1567,"nextId":1563},{"id":1563,"name":"q","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/tag-functions.ts","line":246,"character":16}],"signatures":[{"id":1564,"name":"q","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A Serenity/JS Screenplay Pattern-flavour\\nof a [tagged template literal](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#Tagged_templates),\\n"},{"kind":"code","text":"`q`"},{"kind":"text","text":" is a tag function capable of resolving any "},{"kind":"code","text":"`Answerable<string>`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Answerable<number>`"},{"kind":"text","text":"\\nyou parametrise it with, and returning a "},{"kind":"code","text":"`QuestionAdapter<string>`"},{"kind":"text","text":".\\n\\nUse "},{"kind":"code","text":"`q`"},{"kind":"text","text":" to concatenate "},{"kind":"code","text":"`string`"},{"kind":"text","text":" and "},{"kind":"code","text":"`number`"},{"kind":"text","text":" values returned from synchronous an asynchronous sources.\\n\\n## Interpolating questions\\n\\n"},{"kind":"code","text":"```ts\\nimport { q, actorCalled } from \'@serenity-js/core\'\\nimport { Send, DeleteRequest } from \'@serenity-js/rest\'\\nimport { Text } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Alice\').attemptsTo(\\n  Send.a(DeleteRequest.to(\\n    q `/articles/${ Text.of(Article.id()) }`\\n  ))\\n)\\n```"},{"kind":"text","text":"\\n\\n## Using a custom description\\n\\n"},{"kind":"code","text":"```ts\\nimport { q, actorCalled } from \'@serenity-js/core\'\\nimport { Send, DeleteRequest } from \'@serenity-js/rest\'\\n\\nawait actorCalled(\'Alice\').attemptsTo(\\n  Send.a(DeleteRequest.to(\\n    q `/articles/${ Text.of(Article.id()) }`.describedAs(\'/articles/:id\')\\n  ))\\n)\\n```"},{"kind":"text","text":"\\n\\n## Transforming the interpolated string\\n\\nThe mechanism presented below relies on ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter).\\n\\n"},{"kind":"code","text":"```ts\\nimport { q, actorCalled } from \'@serenity-js/core\'\\nimport { Send, DeleteRequest } from \'@serenity-js/rest\'\\n\\nawait actorCalled(\'Alice\').attemptsTo(\\n  Send.a(DeleteRequest.to(\\n    q `/articles/${ Text.of(Article.id()) }`.toLocaleLowerCase()\\n  ))\\n)\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable)\\n- ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/)\\n- ["},{"kind":"code","text":"`Question.describedAs`"},{"kind":"text","text":"](/api/core/class/Question/#describedAs)\\n- ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter)"}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/tag-functions.ts","line":246,"character":16}],"parameters":[{"id":1565,"name":"templates","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"TemplateStringsArray"},"name":"TemplateStringsArray","package":"typescript"}},{"id":1566,"name":"parameters","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":688,"typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]}],"name":"Answerable","package":"@serenity-js/core"}}}],"type":{"type":"reference","target":1041,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}],"permalink":"/api/core/function/q","previousId":1551,"nextId":610},{"id":1893,"name":"TellsTime","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Describes an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) or a supporting class capable of telling\\nthe current wall clock time.\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`Serenity`"},{"kind":"text","text":"](/api/core/class/Serenity/)\\n- ["},{"kind":"code","text":"`Stage`"},{"kind":"text","text":"](/api/core/class/Stage/)"}]},"children":[{"id":1894,"name":"currentTime","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/TellsTime.ts","line":18,"character":4}],"signatures":[{"id":1895,"name":"currentTime","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns current wall clock time."}]},"sources":[{"fileName":"packages/core/src/screenplay/time/TellsTime.ts","line":18,"character":4}],"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"}}]}],"groups":[{"title":"Methods","children":[1894]}],"sources":[{"fileName":"packages/core/src/screenplay/time/TellsTime.ts","line":14,"character":17}],"extendedBy":[{"type":"reference","target":2577,"name":"EmitsDomainEvents"}],"implementedBy":[{"type":"reference","target":637,"name":"Actor"},{"type":"reference","target":2197,"name":"StageManager"}],"permalink":"/api/core/interface/TellsTime","previousId":2061,"nextId":1617},{"id":1617,"name":"ScheduleWork","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/) that enables an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to schedule a callback function\\nto be executed with a delay, or until some condition is met.\\n\\nUsed internally by the [interaction](/api/core/class/Interaction/) to ["},{"kind":"code","text":"`Wait`"},{"kind":"text","text":"](/api/core/class/Wait/)."}],"modifierTags":["@experimental"]},"children":[{"id":1642,"name":"abilityType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Ability.ts","line":461,"character":4}],"signatures":[{"id":1643,"name":"abilityType","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the most abstract type of this Ability instance,\\nspecifically the first class in the inheritance hierarchy that directly extends the "},{"kind":"code","text":"`Ability`"},{"kind":"text","text":" class.\\n\\n"},{"kind":"code","text":"```ts\\nimport { Ability } from \'@serenity-js/core\';\\n\\nclass MyAbility extends Ability {}\\nclass MySpecialisedAbility extends MyAbility {}\\n\\nnew MyAbility().abilityType();            // returns MyAbility\\nnew MySpecialisedAbility().abilityType(); // returns MyAbility\\n```"}]},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Ability.ts","line":461,"character":4}],"type":{"type":"reference","target":511,"typeArguments":[{"type":"reference","target":490,"name":"Ability","package":"@serenity-js/core"}],"name":"AbilityType","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":510,"name":"Ability.abilityType"}}],"inheritedFrom":{"type":"reference","target":509,"name":"Ability.abilityType"}},{"id":1625,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/abilities/ScheduleWork.ts","line":20,"character":4}],"signatures":[{"id":1626,"name":"new ScheduleWork","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/abilities/ScheduleWork.ts","line":20,"character":4}],"parameters":[{"id":1627,"name":"clock","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1712,"name":"Clock","package":"@serenity-js/core"}},{"id":1628,"name":"interactionTimeout","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1742,"name":"Duration","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1617,"name":"ScheduleWork","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":506,"name":"Ability.constructor"}}],"overwrites":{"type":"reference","target":505,"name":"Ability.constructor"}},{"id":1630,"name":"repeatUntil","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/abilities/ScheduleWork.ts","line":29,"character":4}],"signatures":[{"id":1631,"name":"repeatUntil","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/abilities/ScheduleWork.ts","line":29,"character":4}],"typeParameter":[{"id":1632,"name":"Result","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":1633,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1735,"typeArguments":[{"type":"reference","target":1632,"name":"Result","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"DelayedCallback","package":"@serenity-js/core"}},{"id":1634,"name":"limits","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1799,"typeArguments":[{"type":"reference","target":1632,"name":"Result","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"RepeatUntilLimits","package":"@serenity-js/core"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":1632,"name":"Result","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":1635,"name":"waitFor","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/abilities/ScheduleWork.ts","line":36,"character":4}],"signatures":[{"id":1636,"name":"waitFor","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/abilities/ScheduleWork.ts","line":36,"character":4}],"parameters":[{"id":1637,"name":"delay","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1742,"name":"Duration","package":"@serenity-js/core"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":1638,"name":"discard","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/abilities/ScheduleWork.ts","line":40,"character":4}],"signatures":[{"id":1639,"name":"discard","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Discards the resources associated with this ability."}]},"sources":[{"fileName":"packages/core/src/screenplay/time/abilities/ScheduleWork.ts","line":40,"character":4}],"type":{"type":"intrinsic","name":"void"},"implementationOf":{"type":"reference","target":555,"name":"Discardable.discard"}}],"implementationOf":{"type":"reference","target":554,"name":"Discardable.discard"}},{"id":1640,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/abilities/ScheduleWork.ts","line":44,"character":13}],"signatures":[{"id":1641,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a JSON representation of the ability and its current state, if available.\\nThe purpose of this method is to enable reporting the state of the ability in a human-readable format,\\nrather than to serialise and deserialise the ability itself."}]},"sources":[{"fileName":"packages/core/src/screenplay/time/abilities/ScheduleWork.ts","line":44,"character":13}],"type":{"type":"reference","target":596,"name":"SerialisedAbility","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":508,"name":"Ability.toJSON"}}],"overwrites":{"type":"reference","target":507,"name":"Ability.toJSON"}}],"groups":[{"title":"Constructors","children":[1625]},{"title":"Methods","children":[1642,1630,1635,1638,1640]}],"sources":[{"fileName":"packages/core/src/screenplay/time/abilities/ScheduleWork.ts","line":16,"character":13}],"extendedTypes":[{"type":"reference","target":490,"name":"Ability","package":"@serenity-js/core"}],"implementedTypes":[{"type":"reference","target":553,"name":"Discardable","package":"@serenity-js/core"}],"permalink":"/api/core/class/ScheduleWork","previousId":1893,"nextId":1644},{"id":1644,"name":"Wait","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"code","text":"`Wait`"},{"kind":"text","text":" is a synchronisation statement that instructs the [actor](/api/core/class/Actor/)\\nto wait before proceeding with their next [activity](/api/core/class/Activity/),\\neither for a set [duration](/api/core/class/Duration/), or until a given [expectation](/api/core/class/Expectation/) is met.\\n\\nYou can configure the timeout of the interaction to ["},{"kind":"code","text":"`Wait.until`"},{"kind":"text","text":"](/api/core/class/Wait/#until):\\n- globally, using ["},{"kind":"code","text":"`SerenityConfig.interactionTimeout`"},{"kind":"text","text":"](/api/core/class/SerenityConfig/#interactionTimeout)\\n- locally, on a per-interaction basis using ["},{"kind":"code","text":"`Wait.upTo`"},{"kind":"text","text":"](/api/core/class/Wait/#upTo)\\n\\n:::tip Portable waiting\\nSerenity/JS implements "},{"kind":"code","text":"`Wait`"},{"kind":"text","text":" from scratch, so that the behaviour is consistent no matter the integration tool you use (Playwright, WebdriverIO, Selenium, etc.)\\nor the type of testing you do (Web, REST API, component testing, etc.)\\n:::\\n\\n## Wait with Web-based tests\\n\\n### Example widget\\n\\n"},{"kind":"code","text":"```html\\n\x3c!--\\n    After about 1 second, the text will change from \'Loading...\' to \'Ready!\'\\n--\x3e\\n<h1 id=\\"status\\">Loading...</h1>\\n<script>\\n    (function () {\\n        setTimeout(function () {\\n            document.getElementById(\'status\').textContent = \'Ready!\'\\n        }, 1000);\\n    })();\\n<\/script>\\n```"},{"kind":"text","text":"\\n\\n### Lean Page Object describing the widget\\n\\n"},{"kind":"code","text":"```ts\\nimport { By, PageElement, Text } from \'@serenity-js/web\'\\n\\nclass App {\\n  static status = () =>\\n     Text.of(PageElement.located(By.id(\'status\'))\\n         .describedAs(\'status widget\'))\\n }\\n```"},{"kind":"text","text":"\\n\\n### Waiting for a set duration\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Duration, Wait } from \'@serenity-js/core\'\\nimport { BrowseTheWebWithPlaywright } from \'@serenity-js/playwright\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { Browser, chromium } from \'playwright\'\\n\\nconst browser = await chromium.launch({ headless: true })\\n\\nawait actorCalled(\'In\xeas\')\\n  .whoCan(BrowseTheWebWithPlaywright.using(browser))\\n  .attemptsTo(\\n      Wait.for(Duration.ofMilliseconds(1_500)),\\n      Ensure.that(App.status(), equals(\'Ready!\')),\\n  );\\n```"},{"kind":"text","text":"\\n\\n**Please note** that while the above implementation works,\\nthis approach is inefficient because at best\\nthe actor might wait too long and at worst the test\\nmight become \\"flaky\\" if any external interference\\n(like network glitches, animations taking a bit too long etc.)\\nmakes the actor wait not long enough.\\n\\n### Waiting until a condition is met\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Wait } from \'@serenity-js/core\'\\nimport { BrowseTheWebWithPlaywright } from \'@serenity-js/playwright\'\\nimport { equals } from \'@serenity-js/assertions\'\\nimport { Browser, chromium } from \'playwright\'\\n\\nconst browser = await chromium.launch({ headless: true })\\n\\nawait actorCalled(\'Wendy\')\\n    .whoCan(BrowseTheWebWithPlaywright.using(browser))\\n    .attemptsTo(\\n        Wait.until(App.status(), equals(\'Ready!\')),\\n        // app is ready, proceed with the scenario\\n    );\\n```"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"`Wait.until`"},{"kind":"text","text":" makes the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\nkeep asking the ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/),\\nin this case "},{"kind":"code","text":"`Text.of(App.status)`"},{"kind":"text","text":", until the answer meets\\nthe expectation, or a timeout expires (default: 5s).\\n\\n**Please note** that both Ensure and Wait can be used with\\nthe same expectations, like "},{"kind":"code","text":"`equals`"},{"kind":"text","text":" or "},{"kind":"code","text":"`includes`"},{"kind":"text","text":".\\n\\n### Changing the default timeout\\n\\n"},{"kind":"code","text":"```ts\\n import { actorCalled, Duration, Wait } from \'@serenity-js/core\';\\n import { BrowseTheWebWithPlaywright } from \'@serenity-js/playwright\';\\n import { equals } from \'@serenity-js/assertions\';\\n import { Browser, chromium } from \'playwright\';\\n\\n const browser: Browser = await chromium.launch({ headless: true });\\n\\n await actorCalled(\'Polly\')\\n     .whoCan(BrowseTheWebWithPlaywright.using(browser))\\n     .attemptsTo(\\n         Wait.upTo(Duration.ofSeconds(3))\\n             .until(App.status(), equals(\'Ready!\')),\\n         // app is ready, proceed with the scenario\\n     );\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`SerenityConfig.interactionTimeout`"},{"kind":"text","text":"](/api/core/class/SerenityConfig/#interactionTimeout)\\n- ["},{"kind":"code","text":"`Duration`"},{"kind":"text","text":"](/api/core/class/Duration/)\\n- ["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/)"}]},"children":[{"id":1645,"name":"minimumTimeout","variant":"declaration","kind":1024,"flags":{"isStatic":true,"isExternal":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Minimum timeout that can be used with ["},{"kind":"code","text":"`Wait.until`"},{"kind":"text","text":"](/api/core/class/Wait/#until),\\ndefaults to 250 milliseconds,"}]},"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":141,"character":20}],"type":{"type":"reference","target":1742,"name":"Duration","package":"@serenity-js/core"},"defaultValue":"..."},{"id":1646,"name":"defaultPollingInterval","variant":"declaration","kind":1024,"flags":{"isStatic":true,"isExternal":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The amount of time ["},{"kind":"code","text":"`Wait.until`"},{"kind":"text","text":"](/api/core/class/Wait/#until) should wait between condition checks,\\ndefaults to 500ms.\\n\\nUse ["},{"kind":"code","text":"`WaitUntil.pollingEvery`"},{"kind":"text","text":"](/api/core/class/WaitUntil/#pollingEvery) to override it for a given interaction."}]},"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":151,"character":20}],"type":{"type":"reference","target":1742,"name":"Duration","package":"@serenity-js/core"},"defaultValue":"..."},{"id":1647,"name":"minimumPollingInterval","variant":"declaration","kind":1024,"flags":{"isStatic":true,"isExternal":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Minimum polling interval of 50ms between condition checks, used with ["},{"kind":"code","text":"`Wait.until`"},{"kind":"text","text":"](/api/core/class/Wait/#until)."}]},"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":156,"character":20}],"type":{"type":"reference","target":1742,"name":"Duration","package":"@serenity-js/core"},"defaultValue":"..."},{"id":1648,"name":"for","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":165,"character":11}],"signatures":[{"id":1649,"name":"for","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a version of this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/)\\nconfigured to wait for a set duration."}]},"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":165,"character":11}],"parameters":[{"id":1650,"name":"duration","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A set duration the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) should wait for before proceeding."}]},"type":{"type":"reference","target":688,"typeArguments":[{"type":"reference","target":1742,"name":"Duration","package":"@serenity-js/core"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":793,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":1651,"name":"upTo","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":177,"character":11}],"signatures":[{"id":1652,"name":"upTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a version of this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/)\\nconfigured to wait until the answer to the question "},{"kind":"code","text":"`actual`"},{"kind":"text","text":" meets the "},{"kind":"code","text":"`expectation`"},{"kind":"text","text":",\\nor the "},{"kind":"code","text":"`timeout`"},{"kind":"text","text":" expires."}]},"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":177,"character":11}],"parameters":[{"id":1653,"name":"timeout","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Custom timeout to override ["},{"kind":"code","text":"`SerenityConfig.interactionTimeout`"},{"kind":"text","text":"](/api/core/class/SerenityConfig/#interactionTimeout)"}]},"type":{"type":"reference","target":1742,"name":"Duration","package":"@serenity-js/core"}}],"type":{"type":"reflection","declaration":{"id":1654,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":1655,"name":"until","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":177,"character":38}],"type":{"type":"reflection","declaration":{"id":1656,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":177,"character":45}],"signatures":[{"id":1657,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":177,"character":45}],"typeParameter":[{"id":1658,"name":"Actual","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":1659,"name":"actual","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":688,"typeArguments":[{"type":"reference","target":1658,"name":"Actual","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Answerable","package":"@serenity-js/core"}},{"id":1660,"name":"expectation","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1138,"typeArguments":[{"type":"reference","target":1658,"name":"Actual","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1668,"typeArguments":[{"type":"reference","target":1658,"name":"Actual","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"WaitUntil","package":"@serenity-js/core"}}]}}}],"groups":[{"title":"Properties","children":[1655]}],"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":177,"character":36}]}}}]},{"id":1661,"name":"until","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":197,"character":11}],"signatures":[{"id":1662,"name":"until","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a version of this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/) configured to\\npoll every ["},{"kind":"code","text":"`Wait.defaultPollingInterval`"},{"kind":"text","text":"](/api/core/class/Wait/#defaultPollingInterval) for the result of the provided\\nquestion ("},{"kind":"code","text":"`actual`"},{"kind":"text","text":") until it meets the "},{"kind":"code","text":"`expectation`"},{"kind":"text","text":",\\nor the timeout expires."}]},"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":197,"character":11}],"typeParameter":[{"id":1663,"name":"Actual","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":1664,"name":"actual","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable) that the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) will keep answering\\n until the answer meets the ["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/) provided, or the timeout expires."}]},"type":{"type":"reference","target":688,"typeArguments":[{"type":"reference","target":1663,"name":"Actual","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Answerable","package":"@serenity-js/core"}},{"id":1665,"name":"expectation","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An ["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/) to be met before proceeding"}]},"type":{"type":"reference","target":1138,"typeArguments":[{"type":"reference","target":1663,"name":"Actual","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1668,"typeArguments":[{"type":"reference","target":1663,"name":"Actual","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"WaitUntil","package":"@serenity-js/core"}}]},{"id":1666,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":1667,"name":"new Wait","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":1644,"name":"Wait","package":"@serenity-js/core"}}]}],"groups":[{"title":"Constructors","children":[1666]},{"title":"Properties","children":[1645,1646,1647]},{"title":"Methods","children":[1648,1651,1661]}],"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":135,"character":13}],"permalink":"/api/core/class/Wait","previousId":1617,"nextId":1668},{"id":1668,"name":"WaitUntil","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Synchronisation statement that instructs the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to wait before proceeding until a given ["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/) is met.\\n\\n:::tip\\nTo instantiate the [interaction](/api/core/class/Interaction/) to ["},{"kind":"code","text":"`WaitUntil`"},{"kind":"text","text":"](/api/core/class/WaitUntil/),\\nuse the factory method ["},{"kind":"code","text":"`Wait.until`"},{"kind":"text","text":"](/api/core/class/Wait/#until).\\n:::\\n\\n## Learn more\\n* ["},{"kind":"code","text":"`Wait.until`"},{"kind":"text","text":"](/api/core/class/Wait/#until)"}]},"children":[{"id":1697,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":38,"character":4}],"signatures":[{"id":1698,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":38,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":813,"name":"Interaction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","target":812,"name":"Interaction.instantiationLocation"}},{"id":1699,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"signatures":[{"id":1700,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"parameters":[{"id":1701,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1049,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":600,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":1702,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":1703,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":66}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[1703]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":64}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":815,"name":"Interaction.describedBy"}}],"inheritedFrom":{"type":"reference","target":814,"name":"Interaction.describedBy"}},{"id":1709,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"signatures":[{"id":1710,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":825,"name":"Interaction.toString"}}],"inheritedFrom":{"type":"reference","target":824,"name":"Interaction.toString"}},{"id":1679,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":231,"character":4}],"signatures":[{"id":1680,"name":"new WaitUntil","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":231,"character":4}],"typeParameter":[{"id":1681,"name":"Actual","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":1682,"name":"actual","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":688,"typeArguments":[{"type":"reference","target":1681,"name":"Actual","package":"@serenity-js/core","qualifiedName":"WaitUntil.Actual","refersToTypeParameter":true}],"name":"Answerable","package":"@serenity-js/core"}},{"id":1683,"name":"expectation","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1138,"typeArguments":[{"type":"reference","target":1681,"name":"Actual","package":"@serenity-js/core","qualifiedName":"WaitUntil.Actual","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}},{"id":1684,"name":"pollingInterval","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1742,"name":"Duration","package":"@serenity-js/core"}},{"id":1685,"name":"timeout","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1742,"name":"Duration","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1668,"typeArguments":[{"type":"reference","target":1681,"name":"Actual","package":"@serenity-js/core","qualifiedName":"WaitUntil.Actual","refersToTypeParameter":true}],"name":"WaitUntil","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":805,"name":"Interaction.constructor"}}],"overwrites":{"type":"reference","target":804,"name":"Interaction.constructor"}},{"id":1690,"name":"pollingEvery","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":256,"character":4}],"signatures":[{"id":1691,"name":"pollingEvery","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configure how frequently the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) should check if the answer meets the expectation.\\n\\nNote that the polling interval defines the delay between subsequent attempts\\nto evaluate the expected value, and doesn\'t include the amount of time\\nit take the actor to evaluate the value itself."}]},"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":256,"character":4}],"parameters":[{"id":1692,"name":"interval","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1742,"name":"Duration","package":"@serenity-js/core"}}],"type":{"type":"reference","target":793,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":1693,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":263,"character":10}],"signatures":[{"id":1694,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the provided ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to perform this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/).\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`PerformsActivities`"},{"kind":"text","text":"](/api/core/interface/PerformsActivities/)\\n- ["},{"kind":"code","text":"`UsesAbilities`"},{"kind":"text","text":"](/api/core/interface/UsesAbilities/)\\n- ["},{"kind":"code","text":"`AnswersQuestions`"},{"kind":"text","text":"](/api/core/interface/AnswersQuestions/)"}]},"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":263,"character":10}],"parameters":[{"id":1695,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":600,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":1049,"name":"AnswersQuestions","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":809,"name":"Interaction.performAs"}}],"overwrites":{"type":"reference","target":808,"name":"Interaction.performAs"}}],"groups":[{"title":"Constructors","children":[1679]},{"title":"Methods","children":[1697,1699,1709,1690,1693]}],"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":230,"character":13}],"typeParameters":[{"id":1711,"name":"Actual","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"extendedTypes":[{"type":"reference","target":793,"name":"Interaction","package":"@serenity-js/core"}],"permalink":"/api/core/class/WaitUntil","previousId":1644,"nextId":1712},{"id":1712,"name":"Clock","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A ["},{"kind":"code","text":"`Clock`"},{"kind":"text","text":"](/api/core/class/Clock/) tells the time. This abstraction allows Serenity/JS to have a single place\\nin the framework responsible for telling the time, and one that can be easily mocked for internal testing.\\n\\n"},{"kind":"code","text":"```ts\\nconst now: Timestamp = new Clock().now()\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Timestamp`"},{"kind":"text","text":"](/api/core/class/Timestamp/)\\n- ["},{"kind":"code","text":"`Duration`"},{"kind":"text","text":"](/api/core/class/Duration/)"}]},"children":[{"id":1714,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Clock.ts","line":24,"character":4}],"signatures":[{"id":1715,"name":"new Clock","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Clock.ts","line":24,"character":4}],"parameters":[{"id":1716,"name":"checkTime","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":1717,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Clock.ts","line":24,"character":44}],"signatures":[{"id":1718,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Clock.ts","line":24,"character":44}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Date"},"name":"Date","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Date"}}]}},"defaultValue":"..."}],"type":{"type":"reference","target":1712,"name":"Clock","package":"@serenity-js/core"}}]},{"id":1723,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Clock.ts","line":27,"character":4}],"signatures":[{"id":1724,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Clock.ts","line":27,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}]},{"id":1725,"name":"setAhead","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Clock.ts","line":41,"character":4}],"signatures":[{"id":1726,"name":"setAhead","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Sets the clock ahead to force early resolution of promises\\nreturned by ["},{"kind":"code","text":"`Clock.waitFor`"},{"kind":"text","text":"](/api/core/class/Clock/#waitFor).\\n\\nUseful for test purposes to avoid unnecessary delays."}]},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Clock.ts","line":41,"character":4}],"parameters":[{"id":1727,"name":"duration","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1742,"name":"Duration","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":1728,"name":"tick","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Clock.ts","line":50,"character":10}],"signatures":[{"id":1729,"name":"tick","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a Promise that resolves after one tick of the clock.\\n\\nUseful for test purposes to avoid unnecessary delays."}]},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Clock.ts","line":50,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":1730,"name":"now","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Clock.ts","line":57,"character":4}],"signatures":[{"id":1731,"name":"now","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns current time"}]},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Clock.ts","line":57,"character":4}],"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"}}]},{"id":1732,"name":"waitFor","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Clock.ts","line":66,"character":10}],"signatures":[{"id":1733,"name":"waitFor","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a Promise that will be resolved after the given duration"}]},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Clock.ts","line":66,"character":10}],"parameters":[{"id":1734,"name":"duration","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1742,"name":"Duration","package":"@serenity-js/core"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]}],"groups":[{"title":"Constructors","children":[1714]},{"title":"Methods","children":[1723,1725,1728,1730,1732]}],"sources":[{"fileName":"packages/core/src/screenplay/time/models/Clock.ts","line":20,"character":13}],"permalink":"/api/core/class/Clock","previousId":1668,"nextId":1735},{"id":1735,"name":"DelayedCallback","variant":"declaration","kind":256,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/DelayedCallback.ts","line":6,"character":17}],"typeParameters":[{"id":1736,"name":"Result","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"signatures":[{"id":1737,"name":"DelayedCallback","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/DelayedCallback.ts","line":7,"character":4}],"parameters":[{"id":1738,"name":"stats","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":1739,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":1740,"name":"currentTime","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/DelayedCallback.ts","line":7,"character":14}],"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"}},{"id":1741,"name":"i","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/DelayedCallback.ts","line":7,"character":38}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[1740,1741]}],"sources":[{"fileName":"packages/core/src/screenplay/time/models/DelayedCallback.ts","line":7,"character":12}]}}}],"type":{"type":"union","types":[{"type":"reference","target":1736,"name":"Result","package":"@serenity-js/core","qualifiedName":"DelayedCallback.Result","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":1736,"name":"Result","package":"@serenity-js/core","qualifiedName":"DelayedCallback.Result","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}],"permalink":"/api/core/interface/DelayedCallback","previousId":1712,"nextId":1742},{"id":1742,"name":"Duration","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Represents a duration in milliseconds between two [timestamps](/api/core/class/Timestamp/)."}]},"children":[{"id":1748,"name":"ofMilliseconds","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":17,"character":11}],"signatures":[{"id":1749,"name":"ofMilliseconds","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":17,"character":30}],"parameters":[{"id":1750,"name":"milliseconds","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":1742,"name":"Duration","package":"@serenity-js/core"}}]},{"id":1751,"name":"ofSeconds","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":18,"character":11}],"signatures":[{"id":1752,"name":"ofSeconds","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":18,"character":30}],"parameters":[{"id":1753,"name":"seconds","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":1742,"name":"Duration","package":"@serenity-js/core"}}]},{"id":1754,"name":"ofMinutes","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":19,"character":11}],"signatures":[{"id":1755,"name":"ofMinutes","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":19,"character":30}],"parameters":[{"id":1756,"name":"minutes","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":1742,"name":"Duration","package":"@serenity-js/core"}}]},{"id":1757,"name":"ofHours","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":20,"character":11}],"signatures":[{"id":1758,"name":"ofHours","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":20,"character":30}],"parameters":[{"id":1759,"name":"hours","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":1742,"name":"Duration","package":"@serenity-js/core"}}]},{"id":1760,"name":"ofDays","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":21,"character":11}],"signatures":[{"id":1761,"name":"ofDays","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":21,"character":30}],"parameters":[{"id":1762,"name":"days","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":1742,"name":"Duration","package":"@serenity-js/core"}}]},{"id":1763,"name":"ofYears","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":22,"character":11}],"signatures":[{"id":1764,"name":"ofYears","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":22,"character":30}],"parameters":[{"id":1765,"name":"years","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":1742,"name":"Duration","package":"@serenity-js/core"}}]},{"id":1766,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":24,"character":11}],"signatures":[{"id":1767,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":24,"character":11}],"parameters":[{"id":1768,"name":"__namedParameters","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":1769,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":1770,"name":"milliseconds","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":24,"character":40}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[1770]}],"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":24,"character":38}]}}}],"type":{"type":"reference","target":1742,"name":"Duration","package":"@serenity-js/core"}}]},{"id":1771,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":28,"character":4}],"signatures":[{"id":1772,"name":"new Duration","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":28,"character":4}],"parameters":[{"id":1773,"name":"milliseconds","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":1742,"name":"Duration","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"TinyType.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"TinyType.constructor"}},{"id":1775,"name":"isLessThan","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":33,"character":4}],"signatures":[{"id":1776,"name":"isLessThan","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":33,"character":4}],"parameters":[{"id":1777,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1742,"name":"Duration","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":1778,"name":"isLessThanOrEqualTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":37,"character":4}],"signatures":[{"id":1779,"name":"isLessThanOrEqualTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":37,"character":4}],"parameters":[{"id":1780,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1742,"name":"Duration","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":1781,"name":"isGreaterThan","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":41,"character":4}],"signatures":[{"id":1782,"name":"isGreaterThan","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":41,"character":4}],"parameters":[{"id":1783,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1742,"name":"Duration","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":1784,"name":"isGreaterThanOrEqualTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":45,"character":4}],"signatures":[{"id":1785,"name":"isGreaterThanOrEqualTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":45,"character":4}],"parameters":[{"id":1786,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1742,"name":"Duration","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":1787,"name":"plus","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":49,"character":4}],"signatures":[{"id":1788,"name":"plus","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":49,"character":4}],"parameters":[{"id":1789,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1742,"name":"Duration","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1742,"name":"Duration","package":"@serenity-js/core"}}]},{"id":1790,"name":"inMilliseconds","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":53,"character":4}],"signatures":[{"id":1791,"name":"inMilliseconds","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":53,"character":4}],"type":{"type":"intrinsic","name":"number"}}]},{"id":1792,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":57,"character":4}],"signatures":[{"id":1793,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":57,"character":4}],"type":{"type":"intrinsic","name":"string"},"overwrites":{"type":"reference","target":-1,"name":"TinyType.toString"}}],"overwrites":{"type":"reference","target":-1,"name":"TinyType.toString"}},{"id":1794,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":75,"character":4}],"signatures":[{"id":1795,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":75,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"},"overwrites":{"type":"reference","target":-1,"name":"TinyType.toJSON"}}],"overwrites":{"type":"reference","target":-1,"name":"TinyType.toJSON"}},{"id":1796,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":1797,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":1798,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.equals"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.equals"}}],"groups":[{"title":"Constructors","children":[1771]},{"title":"Methods","children":[1748,1751,1754,1757,1760,1763,1766,1775,1778,1781,1784,1787,1790,1792,1794,1796]}],"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":9,"character":13}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}],"permalink":"/api/core/class/Duration","previousId":1735,"nextId":1799},{"id":1799,"name":"RepeatUntilLimits","variant":"declaration","kind":256,"flags":{"isExternal":true},"children":[{"id":1800,"name":"exitCondition","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/RepeatUntilLimits.ts","line":7,"character":4}],"type":{"type":"reflection","declaration":{"id":1801,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/RepeatUntilLimits.ts","line":7,"character":20}],"signatures":[{"id":1802,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/RepeatUntilLimits.ts","line":7,"character":20}],"parameters":[{"id":1803,"name":"result","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1815,"name":"Result","package":"@serenity-js/core","qualifiedName":"RepeatUntilLimits.Result","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"boolean"}}]}}},{"id":1804,"name":"maxInvocations","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/RepeatUntilLimits.ts","line":8,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":1805,"name":"delayBetweenInvocations","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/RepeatUntilLimits.ts","line":9,"character":4}],"type":{"type":"reflection","declaration":{"id":1806,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/RepeatUntilLimits.ts","line":9,"character":30}],"signatures":[{"id":1807,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/RepeatUntilLimits.ts","line":9,"character":30}],"parameters":[{"id":1808,"name":"i","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":1742,"name":"Duration","package":"@serenity-js/core"}}]}}},{"id":1809,"name":"timeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/RepeatUntilLimits.ts","line":10,"character":4}],"type":{"type":"reference","target":1742,"name":"Duration","package":"@serenity-js/core"}},{"id":1810,"name":"errorHandler","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/RepeatUntilLimits.ts","line":11,"character":4}],"type":{"type":"reflection","declaration":{"id":1811,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/RepeatUntilLimits.ts","line":11,"character":19}],"signatures":[{"id":1812,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/RepeatUntilLimits.ts","line":11,"character":19}],"parameters":[{"id":1813,"name":"error","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}},{"id":1814,"name":"result","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1815,"name":"Result","package":"@serenity-js/core","qualifiedName":"RepeatUntilLimits.Result","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"groups":[{"title":"Properties","children":[1800,1804,1805,1809,1810]}],"sources":[{"fileName":"packages/core/src/screenplay/time/models/RepeatUntilLimits.ts","line":6,"character":17}],"typeParameters":[{"id":1815,"name":"Result","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"permalink":"/api/core/interface/RepeatUntilLimits","previousId":1742,"nextId":1816},{"id":1816,"name":"Scheduler","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":1817,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Scheduler.ts","line":22,"character":4}],"signatures":[{"id":1818,"name":"new Scheduler","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Scheduler.ts","line":22,"character":4}],"parameters":[{"id":1819,"name":"clock","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1712,"name":"Clock","package":"@serenity-js/core"}},{"id":1820,"name":"interactionTimeout","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The maximum amount of time to give to a callback to complete before throwing an error"}]},"type":{"type":"reference","target":1742,"name":"Duration","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1816,"name":"Scheduler","package":"@serenity-js/core"}}]},{"id":1824,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Scheduler.ts","line":28,"character":4}],"signatures":[{"id":1825,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Scheduler.ts","line":28,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}]},{"id":1826,"name":"after","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Scheduler.ts","line":41,"character":4}],"signatures":[{"id":1827,"name":"after","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Schedules a callback function to be invoked after a delay"}]},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Scheduler.ts","line":41,"character":4}],"typeParameter":[{"id":1828,"name":"Result","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":1829,"name":"delay","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1742,"name":"Duration","package":"@serenity-js/core"}},{"id":1830,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1735,"typeArguments":[{"type":"reference","target":1828,"name":"Result","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"DelayedCallback","package":"@serenity-js/core"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":1828,"name":"Result","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":1831,"name":"waitFor","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Scheduler.ts","line":57,"character":4}],"signatures":[{"id":1832,"name":"waitFor","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a "},{"kind":"code","text":"`Promise`"},{"kind":"text","text":" to be resolved after a "},{"kind":"code","text":"`delay`"}]},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Scheduler.ts","line":57,"character":4}],"parameters":[{"id":1833,"name":"delay","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1742,"name":"Duration","package":"@serenity-js/core"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":1834,"name":"repeatUntil","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Scheduler.ts","line":76,"character":10}],"signatures":[{"id":1835,"name":"repeatUntil","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Schedules a callback function to be repeated, according to configured limits."}]},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Scheduler.ts","line":76,"character":10}],"typeParameter":[{"id":1836,"name":"Result","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":1837,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1735,"typeArguments":[{"type":"reference","target":1836,"name":"Result","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"DelayedCallback","package":"@serenity-js/core"}},{"id":1838,"name":"limits","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1799,"typeArguments":[{"type":"reference","target":1836,"name":"Result","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"RepeatUntilLimits","package":"@serenity-js/core"},"defaultValue":"{}"}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":1836,"name":"Result","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":1839,"name":"stop","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Scheduler.ts","line":105,"character":4}],"signatures":[{"id":1840,"name":"stop","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Scheduler.ts","line":105,"character":4}],"type":{"type":"intrinsic","name":"void"}}]}],"groups":[{"title":"Constructors","children":[1817]},{"title":"Methods","children":[1824,1826,1831,1834,1839]}],"sources":[{"fileName":"packages/core/src/screenplay/time/models/Scheduler.ts","line":13,"character":13}],"permalink":"/api/core/class/Scheduler","previousId":1799,"nextId":1841},{"id":1841,"name":"Timestamp","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Represents a point in time.\\n\\n"},{"kind":"code","text":"`Timestamp`"},{"kind":"text","text":" makes it easier for you to work with information related to time, like [Serenity/JS domain events](/api/core-events/class/DomainEvent/).\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Duration`"},{"kind":"text","text":"](/api/core/class/Duration/)\\n- [Date](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date)"}]},"children":[{"id":1842,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":18,"character":11}],"signatures":[{"id":1843,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":18,"character":11}],"parameters":[{"id":1844,"name":"v","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"}}]},{"id":1845,"name":"fromTimestampInSeconds","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":22,"character":11}],"signatures":[{"id":1846,"name":"fromTimestampInSeconds","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":22,"character":11}],"parameters":[{"id":1847,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"}}]},{"id":1848,"name":"fromTimestampInMilliseconds","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":26,"character":11}],"signatures":[{"id":1849,"name":"fromTimestampInMilliseconds","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":26,"character":11}],"parameters":[{"id":1850,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"}}]},{"id":1851,"name":"now","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":30,"character":11}],"signatures":[{"id":1852,"name":"now","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":30,"character":11}],"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"}}]},{"id":1853,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":34,"character":4}],"signatures":[{"id":1854,"name":"new Timestamp","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":34,"character":4}],"parameters":[{"id":1855,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Date"},"name":"Date","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Date"},"defaultValue":"..."}],"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"TinyType.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"TinyType.constructor"}},{"id":1856,"name":"value","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":34,"character":32}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Date"},"name":"Date","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Date"},"defaultValue":"..."},{"id":1857,"name":"diff","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":39,"character":4}],"signatures":[{"id":1858,"name":"diff","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":39,"character":4}],"parameters":[{"id":1859,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1742,"name":"Duration","package":"@serenity-js/core"}}]},{"id":1860,"name":"plus","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":44,"character":4}],"signatures":[{"id":1861,"name":"plus","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":44,"character":4}],"parameters":[{"id":1862,"name":"duration","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1742,"name":"Duration","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"}}]},{"id":1863,"name":"less","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":49,"character":4}],"signatures":[{"id":1864,"name":"less","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":49,"character":4}],"parameters":[{"id":1865,"name":"duration","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1742,"name":"Duration","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"}}]},{"id":1866,"name":"isBefore","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":54,"character":4}],"signatures":[{"id":1867,"name":"isBefore","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":54,"character":4}],"parameters":[{"id":1868,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":1869,"name":"isBeforeOrEqual","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":59,"character":4}],"signatures":[{"id":1870,"name":"isBeforeOrEqual","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":59,"character":4}],"parameters":[{"id":1871,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":1872,"name":"isAfter","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":64,"character":4}],"signatures":[{"id":1873,"name":"isAfter","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":64,"character":4}],"parameters":[{"id":1874,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":1875,"name":"isAfterOrEqual","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":69,"character":4}],"signatures":[{"id":1876,"name":"isAfterOrEqual","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":69,"character":4}],"parameters":[{"id":1877,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":1878,"name":"toMilliseconds","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":74,"character":4}],"signatures":[{"id":1879,"name":"toMilliseconds","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":74,"character":4}],"type":{"type":"intrinsic","name":"number"}}]},{"id":1880,"name":"toSeconds","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":78,"character":4}],"signatures":[{"id":1881,"name":"toSeconds","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":78,"character":4}],"type":{"type":"intrinsic","name":"number"}}]},{"id":1882,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":82,"character":4}],"signatures":[{"id":1883,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":82,"character":4}],"type":{"type":"intrinsic","name":"string"},"overwrites":{"type":"reference","target":-1,"name":"TinyType.toJSON"}}],"overwrites":{"type":"reference","target":-1,"name":"TinyType.toJSON"}},{"id":1884,"name":"toISOString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":86,"character":4}],"signatures":[{"id":1885,"name":"toISOString","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":86,"character":4}],"type":{"type":"intrinsic","name":"string"}}]},{"id":1886,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":90,"character":4}],"signatures":[{"id":1887,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":90,"character":4}],"type":{"type":"intrinsic","name":"string"},"overwrites":{"type":"reference","target":-1,"name":"TinyType.toString"}}],"overwrites":{"type":"reference","target":-1,"name":"TinyType.toString"}},{"id":1888,"name":"[custom]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":94,"character":4}],"signatures":[{"id":1889,"name":"[custom]","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":94,"character":4}],"type":{"type":"intrinsic","name":"string"}}]},{"id":1890,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":1891,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":1892,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.equals"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.equals"}}],"groups":[{"title":"Constructors","children":[1853]},{"title":"Properties","children":[1856]},{"title":"Methods","children":[1842,1845,1848,1851,1857,1860,1863,1866,1869,1872,1875,1878,1880,1882,1884,1886,1888,1890]}],"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":17,"character":13}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}],"permalink":"/api/core/class/Timestamp","previousId":1816},{"id":1947,"name":"Cast","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"Serenity/JS uses the concept of a _**cast of actors**_ to centralise the process of configuring the [actors](/api/core/class/Actor/) and assigning their [abilities](/api/core/class/Ability/).\\n\\nWhen you invoke ["},{"kind":"code","text":"`actorCalled`"},{"kind":"text","text":"](/api/core/function/actorCalled/) for the first time in a test scenario,\\nSerenity/JS [instantiates a new actor](/api/core/class/Actor/)\\nand passes it through the ["},{"kind":"code","text":"`Cast.prepare`"},{"kind":"text","text":"](/api/core/class/Cast/#prepare) method.\\nSpecifying a **custom cast** gives you an opportunity to configure the actor with the abilities\\nthey need before it\'s returned to the caller,\\nor configure the actors differently **depending on their name**.\\nIt also helps you to avoid having to configure abilities individually in every test scenario.\\n\\n:::tip Remember\\nA **cast** is responsible for assigning **abilities** to **actors** in a central location.\\n:::\\n\\n## Configuring a cast of actors for the entire test suite\\n\\nWhen working with relatively **simple scenarios** where all the actors should always receive the same set of abilities,\\nyou can ["},{"kind":"code","text":"`engage`"},{"kind":"text","text":"](/api/core/function/engage/) Serenity/JS to use a generic ["},{"kind":"code","text":"`Cast.where`"},{"kind":"text","text":"](/api/core/class/Cast/#where):\\n\\n"},{"kind":"code","text":"```typescript\\nimport { Cast, configure } from \'@serenity-js/core\'\\nimport { CallAnApi } from \'@serenity-js/rest\'\\n\\nconfigure({\\n  actors: Cast.where(actor => actor.whoCan(\\n    CallAnApi.at(\'http://api.example.org\'),\\n    // other abilities\\n  ))\\n})\\n```"},{"kind":"text","text":"\\n\\nIf you\'re using Serenity/JS with one of the [supported test runners](/handbook/test-runners/),\\nyou might prefer to use your test runner\'s native configuration mechanism\\ninstead of invoking ["},{"kind":"code","text":"`engage`"},{"kind":"text","text":"](/api/core/function/engage/) explicitly.\\n\\n:::tip configure vs engage\\nCalling ["},{"kind":"code","text":"`configure`"},{"kind":"text","text":"](/api/core/function/configure/) resets the entire Serenity/JS configuration\\nand should be done exactly once in your entire test suite.\\nIf you want to retain the configuration but reset the cast, use ["},{"kind":"code","text":"`engage`"},{"kind":"text","text":"](/api/core/function/engage/) instead.\\n:::\\n\\nLearn more about configuring Serenity/JS with:\\n- [Cucumber.js](/handbook/test-runners/cucumber)\\n- [Jasmine](/handbook/test-runners/jasmine)\\n- [Mocha](/handbook/test-runners/mocha)\\n- [Playwright Test](/handbook/test-runners/playwright-test)\\n- [Protractor](/handbook/test-runners/protractor)\\n- [WebdriverIO](/handbook/test-runners/webdriverio)\\n\\n## Engaging a cast of actors for the specific scenario\\n\\nIf you want to retain Serenity/JS configuration, but set a different [cast](/api/core/class/Cast/)\\nfor the given test scenario you should use ["},{"kind":"code","text":"`engage`"},{"kind":"text","text":"](/api/core/function/engage/) instead of ["},{"kind":"code","text":"`configure`"},{"kind":"text","text":"](/api/core/function/configure/).\\n\\nThis approach is useful for example when your entire test suite is dedicated to interacting with the system\\nunder test via its REST APIs, and you have a handful of scenarios that need a web browser.\\n\\n"},{"kind":"code","text":"```ts\\nimport { describe, beforeEach } from \'mocha\'\\nimport { engage, Cast } from \'@serenity-js/core\';\\nimport { BrowseTheWebWithPlaywright } from \'@serenity-js/playwright\'\\nimport { Browser, chromium } from \'playwright\'\\n\\ndescribe(\'My UI feature\', () => {\\n  beforeEach(async () => {\\n    const browser = await chromium.launch({ headless: true })\\n    engage(Cast.where(actor => actor.whoCan(BrowseTheWebWithPlaywright.using(browser))))\\n  })\\n\\n  // test scenarios\\n})\\n```"},{"kind":"text","text":"\\n\\n## Writing custom casts for complex scenarios\\n\\nIn **complex scenarios** that involve multiple **actors with different abilities**,\\nyou should create a custom implementation of the [cast](/api/core/class/Cast/).\\n\\nExamples of such scenarios include those where actors use separate browser instances, interact with different REST APIs,\\nor start with different data in their [notepads](/api/core/class/Notepad/).\\n\\n### Defining a custom cast of actors interacting with a Web UI\\n\\n"},{"kind":"code","text":"```ts\\nimport { beforeEach } from \'mocha\'\\nimport { engage, Actor, Cast } from \'@serenity-js/core\'\\nimport { BrowseTheWebWithPlaywright, PlaywrightOptions } from \'@serenity-js/playwright\'\\nimport { Browser, chromium } from \'playwright\'\\n\\nexport class UIActors implements Cast {\\n  constructor(\\n    private readonly browser: Browser,\\n    private readonly options?: PlaywrightOptions,\\n  ) {\\n  }\\n\\n  prepare(actor: Actor): Actor {\\n    return actor.whoCan(\\n      BrowseTheWebWithPlaywright.using(this.browser, this.options),\\n    )\\n  }\\n}\\n\\nbeforeEach(async () => {\\n  const browser = await chromium.launch({ headless: true })\\n  engage(new UIActors(browser));\\n});\\n```"},{"kind":"text","text":"\\n\\n### Preparing actors differently based on their name\\n\\n"},{"kind":"code","text":"```ts\\nimport { beforeEach } from \'mocha\'\\nimport { actorCalled, engage, Cast } from \'@serenity-js/core\'\\nimport { BrowseTheWebWithPlaywright } from \'@serenity-js/playwright\'\\nimport { CallAnApi } from \'@serenity-js/rest\'\\nimport { Browser, chromium } from \'playwright\'\\n\\nclass Actors implements Cast {\\n  constructor(\\n    private readonly browser: Browser,\\n    private readonly options: PlaywrightOptions,\\n  ) {\\n  }\\n\\n  prepare(actor: Actor) {\\n    switch (actor.name) {\\n      case \'James\':\\n        return actor.whoCan(BrowseTheWebWithPlaywright.using(this.browser, this.options));\\n      default:\\n        return actor.whoCan(CallAnApi.at(this.options.baseURL));\\n    }\\n  }\\n}\\n\\nbeforeEach(async () => {\\n  const browser = await chromium.launch({ headless: true })\\n  engage(new Actors(browser, { baseURL: \'https://example.org\' }));\\n});\\n\\nactorCalled(\'James\') // returns an actor using a browser\\nactorCalled(\'Alice\') // returns an actor interacting with an API\\n```"}]},"children":[{"id":1948,"name":"where","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/Cast.ts","line":158,"character":11}],"signatures":[{"id":1949,"name":"where","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates a generic "},{"kind":"code","text":"`Cast`"},{"kind":"text","text":" implementation, where new actors receive the abilities\\nconfigured by the "},{"kind":"code","text":"`prepareFunction`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/src/stage/Cast.ts","line":158,"character":11}],"parameters":[{"id":1950,"name":"prepareFunction","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":1951,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/Cast.ts","line":158,"character":34}],"signatures":[{"id":1952,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/Cast.ts","line":158,"character":34}],"parameters":[{"id":1953,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":637,"name":"Actor","package":"@serenity-js/core"}}],"type":{"type":"reference","target":637,"name":"Actor","package":"@serenity-js/core"}}]}}}],"type":{"type":"reference","target":1947,"name":"Cast","package":"@serenity-js/core"}}]},{"id":1954,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":1955,"name":"new Cast","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":1947,"name":"Cast","package":"@serenity-js/core"}}]},{"id":1956,"name":"prepare","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/core/src/stage/Cast.ts","line":174,"character":13}],"signatures":[{"id":1957,"name":"prepare","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) instantiated when ["},{"kind":"code","text":"`Stage.actor`"},{"kind":"text","text":"](/api/core/class/Stage/#actor) is invoked."}]},"sources":[{"fileName":"packages/core/src/stage/Cast.ts","line":174,"character":13}],"parameters":[{"id":1958,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"#### Learn more\\n- ["},{"kind":"code","text":"`engage`"},{"kind":"text","text":"](/api/core/function/engage/)"}]},"type":{"type":"reference","target":637,"name":"Actor","package":"@serenity-js/core"}}],"type":{"type":"reference","target":637,"name":"Actor","package":"@serenity-js/core"}}]}],"groups":[{"title":"Constructors","children":[1954]},{"title":"Methods","children":[1948,1956]}],"sources":[{"fileName":"packages/core/src/stage/Cast.ts","line":150,"character":22}],"permalink":"/api/core/class/Cast","previousId":481,"nextId":2021},{"id":2021,"name":"ListensToDomainEvents","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/) that can listen and react to [Serenity/JS domain events](/api/core-events/class/DomainEvent/)\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/)\\n- ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMemberBuilder/)\\n- ["},{"kind":"code","text":"`engage`"},{"kind":"text","text":"](/api/core/function/engage/)\\n- ["},{"kind":"code","text":"`SerenityConfig.crew`"},{"kind":"text","text":"](/api/core/class/SerenityConfig/#crew)"}]},"children":[{"id":2022,"name":"notifyOf","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/ListensToDomainEvents.ts","line":23,"character":4}],"signatures":[{"id":2023,"name":"notifyOf","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Handles ["},{"kind":"code","text":"`DomainEvent`"},{"kind":"text","text":"](/api/core-events/class/DomainEvent/) objects emitted by the ["},{"kind":"code","text":"`Stage`"},{"kind":"text","text":"](/api/core/class/Stage/)\\nthat this ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/) is assigned to."}]},"sources":[{"fileName":"packages/core/src/stage/ListensToDomainEvents.ts","line":23,"character":4}],"parameters":[{"id":2024,"name":"event","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":2565,"name":"DomainEvent","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"void"}}]}],"groups":[{"title":"Methods","children":[2022]}],"sources":[{"fileName":"packages/core/src/stage/ListensToDomainEvents.ts","line":15,"character":17}],"extendedBy":[{"type":"reference","target":2181,"name":"StageCrewMember"}],"permalink":"/api/core/interface/ListensToDomainEvents","previousId":1947,"nextId":2103},{"id":2103,"name":"Stage","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Stage is the place where [actors](/api/core/class/Actor/) perform.\\n\\nIn more technical terms, the Stage is the main event bus propagating [Serenity/JS domain events](/api/core-events/class/DomainEvent/)\\nto [actors](/api/core/class/Actor/) it instantiates and [stage crew members](/api/core/interface/StageCrewMember/) that have been registered with it.\\n\\nIt is unlikely that you\'ll ever need to interact with the "},{"kind":"code","text":"`Stage`"},{"kind":"text","text":" directly in your tests. Instead, you\'ll use functions like\\n["},{"kind":"code","text":"`actorCalled`"},{"kind":"text","text":"](/api/core/function/actorCalled/) and ["},{"kind":"code","text":"`actorInTheSpotlight`"},{"kind":"text","text":"](/api/core/function/actorInTheSpotlight/).\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`configure`"},{"kind":"text","text":"](/api/core/function/configure/)\\n- ["},{"kind":"code","text":"`engage`"},{"kind":"text","text":"](/api/core/function/engage/)\\n- ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/)"}]},"children":[{"id":2104,"name":"unknownSceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":40,"character":27}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"},"defaultValue":"..."},{"id":2105,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":72,"character":4}],"signatures":[{"id":2106,"name":"new Stage","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":72,"character":4}],"parameters":[{"id":2107,"name":"cast","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1947,"name":"Cast","package":"@serenity-js/core"}},{"id":2108,"name":"manager","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":2197,"name":"StageManager","package":"@serenity-js/core"}},{"id":2109,"name":"errors","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":126,"name":"ErrorFactory","package":"@serenity-js/core"}},{"id":2110,"name":"clock","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1712,"name":"Clock","package":"@serenity-js/core"}},{"id":2111,"name":"interactionTimeout","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1742,"name":"Duration","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2103,"name":"Stage","package":"@serenity-js/core"}}]},{"id":2126,"name":"theActorCalled","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":91,"character":4}],"signatures":[{"id":2127,"name":"theActorCalled","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An alias for ["},{"kind":"code","text":"`Stage.actor`"},{"kind":"text","text":"](/api/core/class/Stage/#actor)"}]},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":91,"character":4}],"parameters":[{"id":2128,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":637,"name":"Actor","package":"@serenity-js/core"}}]},{"id":2129,"name":"actor","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":102,"character":4}],"signatures":[{"id":2130,"name":"actor","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a new ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) or fetches an existing one\\nidentified by their name if they\'ve already been instantiated."}]},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":102,"character":4}],"parameters":[{"id":2131,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Case-sensitive name of the Actor, e.g. "},{"kind":"code","text":"`Alice`"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":637,"name":"Actor","package":"@serenity-js/core"}}]},{"id":2132,"name":"theActorInTheSpotlight","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":152,"character":4}],"signatures":[{"id":2133,"name":"theActorInTheSpotlight","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the last ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) instantiated via ["},{"kind":"code","text":"`Stage.actor`"},{"kind":"text","text":"](/api/core/class/Stage/#actor).\\nUseful when you don\'t can\'t or choose not to reference the actor by their name."}],"blockTags":[{"tag":"@throws","content":[{"kind":"text","text":"["},{"kind":"code","text":"`LogicError`"},{"kind":"text","text":"](/api/core/class/LogicError/)\\n If no ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) has been activated yet"}]}]},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":152,"character":4}],"type":{"type":"reference","target":637,"name":"Actor","package":"@serenity-js/core"}}]},{"id":2134,"name":"theShowHasStarted","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":163,"character":4}],"signatures":[{"id":2135,"name":"theShowHasStarted","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if there is an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) in the spotlight, "},{"kind":"code","text":"`false`"},{"kind":"text","text":" otherwise."}]},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":163,"character":4}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":2136,"name":"engage","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":173,"character":4}],"signatures":[{"id":2137,"name":"engage","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the Stage to prepare [actors](/api/core/class/Actor/)\\ninstantiated via ["},{"kind":"code","text":"`Stage.actor`"},{"kind":"text","text":"](/api/core/class/Stage/#actor) using the provided [cast](/api/core/class/Cast/)."}]},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":173,"character":4}],"parameters":[{"id":2138,"name":"actors","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1947,"name":"Cast","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":2139,"name":"assign","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":185,"character":4}],"signatures":[{"id":2140,"name":"assign","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Assigns listeners to be notified of [Serenity/JS domain events](/api/core-events/class/DomainEvent/)\\nemitted via ["},{"kind":"code","text":"`Stage.announce`"},{"kind":"text","text":"](/api/core/class/Stage/#announce).s"}]},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":185,"character":4}],"parameters":[{"id":2141,"name":"listeners","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":2021,"name":"ListensToDomainEvents","package":"@serenity-js/core"}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":2142,"name":"announce","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":195,"character":4}],"signatures":[{"id":2143,"name":"announce","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Notifies all the assigned listeners of the events,\\nemitting them one by one."}]},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":195,"character":4}],"parameters":[{"id":2144,"name":"events","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":2565,"name":"DomainEvent","package":"@serenity-js/core"}}}],"type":{"type":"intrinsic","name":"void"},"implementationOf":{"type":"reference","target":2584,"name":"EmitsDomainEvents.announce"}}],"implementationOf":{"type":"reference","target":2583,"name":"EmitsDomainEvents.announce"}},{"id":2148,"name":"currentTime","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":227,"character":4}],"signatures":[{"id":2149,"name":"currentTime","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns current time. This method should be used whenever\\n["},{"kind":"code","text":"`DomainEvent`"},{"kind":"text","text":"](/api/core-events/class/DomainEvent/) objects are instantiated by you programmatically."}]},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":227,"character":4}],"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"},"implementationOf":{"type":"reference","target":2589,"name":"EmitsDomainEvents.currentTime"}}],"implementationOf":{"type":"reference","target":2588,"name":"EmitsDomainEvents.currentTime"}},{"id":2150,"name":"assignNewSceneId","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":241,"character":4}],"signatures":[{"id":2151,"name":"assignNewSceneId","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Generates and remembers a "},{"kind":"code","text":"`CorrelationId`"},{"kind":"text","text":"\\nfor the current scene.\\n\\nThis method should be used in custom test runner adapters\\nwhen instantiating a [SceneStarts](/api/core-events/class/SceneStarts/) event.\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Stage.currentSceneId`"},{"kind":"text","text":"](/api/core/class/Stage/#currentSceneId)"}]},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":241,"character":4}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}]},{"id":2152,"name":"currentSceneId","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":254,"character":4}],"signatures":[{"id":2153,"name":"currentSceneId","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the "},{"kind":"code","text":"`CorrelationId`"},{"kind":"text","text":" for the current scene.\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Stage.assignNewSceneId`"},{"kind":"text","text":"](/api/core/class/Stage/#assignNewSceneId)"}]},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":254,"character":4}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"},"implementationOf":{"type":"reference","target":2579,"name":"EmitsDomainEvents.currentSceneId"}}],"implementationOf":{"type":"reference","target":2578,"name":"EmitsDomainEvents.currentSceneId"}},{"id":2154,"name":"assignNewActivityId","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":268,"character":4}],"signatures":[{"id":2155,"name":"assignNewActivityId","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Generates and remembers a "},{"kind":"code","text":"`CorrelationId`"},{"kind":"text","text":"\\nfor the current ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/).\\n\\nThis method should be used in custom test runner adapters\\nwhen instantiating the [ActivityStarts](/api/core-events/class/ActivityStarts/) event.\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Stage.currentActivityId`"},{"kind":"text","text":"](/api/core/class/Stage/#currentActivityId)"}]},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":268,"character":4}],"parameters":[{"id":2156,"name":"activityDetails","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"ActivityDetails","package":"@serenity-js/core"}}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"},"implementationOf":{"type":"reference","target":2581,"name":"EmitsDomainEvents.assignNewActivityId"}}],"implementationOf":{"type":"reference","target":2580,"name":"EmitsDomainEvents.assignNewActivityId"}},{"id":2157,"name":"currentActivityId","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":283,"character":4}],"signatures":[{"id":2158,"name":"currentActivityId","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the "},{"kind":"code","text":"`CorrelationId`"},{"kind":"text","text":" for the current ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/).\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Stage.assignNewSceneId`"},{"kind":"text","text":"](/api/core/class/Stage/#assignNewSceneId)"}]},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":283,"character":4}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}]},{"id":2159,"name":"waitForNextCue","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":299,"character":4}],"signatures":[{"id":2160,"name":"waitForNextCue","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a Promise that will be resolved when any asynchronous\\npost-processing activities performed by Serenity/JS are completed.\\n\\nInvoked in Serenity/JS test runner adapters to inform the test runner when\\nthe scenario has finished and when it\'s safe for the test runner to proceed\\nwith the next test, or finish execution."}]},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":299,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"implementationOf":{"type":"reference","target":2587,"name":"EmitsDomainEvents.waitForNextCue"}}],"implementationOf":{"type":"reference","target":2586,"name":"EmitsDomainEvents.waitForNextCue"}},{"id":2161,"name":"createError","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":303,"character":4}],"signatures":[{"id":2162,"name":"createError","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":303,"character":4}],"typeParameter":[{"id":2163,"name":"RE","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":349,"name":"RuntimeError","package":"@serenity-js/core"}}],"parameters":[{"id":2164,"name":"errorType","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":2165,"name":"__type","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":303,"character":52}],"signatures":[{"id":2166,"name":"new errorType","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":303,"character":52}],"parameters":[{"id":2167,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"reference","target":2163,"name":"RE","package":"@serenity-js/core","refersToTypeParameter":true}}]}}},{"id":2168,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":148,"name":"ErrorOptions","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2163,"name":"RE","package":"@serenity-js/core","refersToTypeParameter":true}}]}],"groups":[{"title":"Constructors","children":[2105]},{"title":"Properties","children":[2104]},{"title":"Methods","children":[2126,2129,2132,2134,2136,2139,2142,2148,2150,2152,2154,2157,2159,2161]}],"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":38,"character":13}],"implementedTypes":[{"type":"reference","target":2577,"name":"EmitsDomainEvents","package":"@serenity-js/core"}],"permalink":"/api/core/class/Stage","previousId":2021,"nextId":2181},{"id":2181,"name":"StageCrewMember","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"You can think of the ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/) as an in-memory microservice that reacts to [Serenity/JS domain events](/api/core-events/class/DomainEvent/),\\npublished by the ["},{"kind":"code","text":"`StageManager`"},{"kind":"text","text":"](/api/core/class/StageManager/), and originally emitted by [actors](/api/core/class/Actor/) performing activities and Serenity/JS\\ntest runner adapters notifying the framework about test scenario-specific events like [SceneStarts](/api/core-events/class/SceneStarts/) or [SceneFinishes](/api/core-events/class/SceneFinishes/).\\n\\nEvery [stage crew member](/api/core/interface/StageCrewMember/) receives a reference to the [stage](/api/core/class/Stage/),\\nand therefore the [stage manager](/api/core/class/StageManager/), which enables them to emit [domain events](/api/core-events/class/DomainEvent/) back.\\n\\nThis interface is useful when you\'re interested in implementing custom Serenity/JS reporters or supporting services.\\n\\n## Implementing a custom StageCrewMember\\n\\n"},{"kind":"code","text":"```ts\\nimport { Stage, StageCrewMember } from \'@serenity-js/core\'\\nimport * as events from \'@serenity-js/core/lib/events\'\\nimport { ArbitraryTag } from \'@serenity-js/core/lib/model\'\\n\\nexport class TestRunnerTagger implements StageCrewMember {\\n\\n  static using(tagName: string) {\\n    return new TestRunnerTagger(tagName);\\n  }\\n\\n  protected constructor(\\n    private readonly tagName: string,\\n    private stage?: Stage,\\n  ) {\\n  }\\n\\n  assignedTo(stage: Stage): StageCrewMember {\\n    this.stage = stage;\\n    return this;\\n  }\\n\\n  notifyOf(event: events.DomainEvent): void {\\n    if (event instanceof events.TestRunnerDetected) {\\n      this.stage.announce(\\n        new events.SceneTagged(\\n          this.stage.currentSceneId(),\\n          new ArbitraryTag(this.tagName),\\n          this.stage.currentTime()\\n        )\\n      )\\n    }\\n  }\\n}\\n```"},{"kind":"text","text":"\\n\\n## Using the custom StageCrewMember\\n\\n"},{"kind":"code","text":"```ts\\nimport { configure } from \'@serenity-js/core\'\\n\\nconfigure({\\n  crew: [\\n    TestRunnerTagger.using(`Node:${ process.version }`),\\n  ]\\n})\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`SerenityConfig.crew`"},{"kind":"text","text":"](/api/core/class/SerenityConfig/#crew)\\n- ["},{"kind":"code","text":"`configure`"},{"kind":"text","text":"](/api/core/function/configure/)\\n- ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMemberBuilder/)\\n- ["},{"kind":"code","text":"`ListensToDomainEvents`"},{"kind":"text","text":"](/api/core/interface/ListensToDomainEvents/)\\n- ["},{"kind":"code","text":"`DomainEvent`"},{"kind":"text","text":"](/api/core-events/class/DomainEvent/)"}]},"children":[{"id":2185,"name":"notifyOf","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/ListensToDomainEvents.ts","line":23,"character":4}],"signatures":[{"id":2186,"name":"notifyOf","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Handles ["},{"kind":"code","text":"`DomainEvent`"},{"kind":"text","text":"](/api/core-events/class/DomainEvent/) objects emitted by the ["},{"kind":"code","text":"`Stage`"},{"kind":"text","text":"](/api/core/class/Stage/)\\nthat this ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/) is assigned to."}]},"sources":[{"fileName":"packages/core/src/stage/ListensToDomainEvents.ts","line":23,"character":4}],"parameters":[{"id":2187,"name":"event","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":2565,"name":"DomainEvent","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","target":2023,"name":"ListensToDomainEvents.notifyOf"}}],"inheritedFrom":{"type":"reference","target":2022,"name":"ListensToDomainEvents.notifyOf"}},{"id":2182,"name":"assignedTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/StageCrewMember.ts","line":78,"character":4}],"signatures":[{"id":2183,"name":"assignedTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Assigns a ["},{"kind":"code","text":"`Stage`"},{"kind":"text","text":"](/api/core/class/Stage/) to this ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/)"}]},"sources":[{"fileName":"packages/core/src/stage/StageCrewMember.ts","line":78,"character":4}],"parameters":[{"id":2184,"name":"stage","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":2103,"name":"Stage","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2181,"name":"StageCrewMember","package":"@serenity-js/core"}}]}],"groups":[{"title":"Methods","children":[2185,2182]}],"sources":[{"fileName":"packages/core/src/stage/StageCrewMember.ts","line":73,"character":17}],"extendedTypes":[{"type":"reference","target":2021,"name":"ListensToDomainEvents","package":"@serenity-js/core"}],"implementedBy":[{"type":"reference","target":1959,"name":"ArtifactArchiver"},{"type":"reference","target":2002,"name":"StreamReporter"}],"permalink":"/api/core/interface/StageCrewMember","previousId":2103,"nextId":2188},{"id":2188,"name":"StageCrewMemberBuilder","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Use a ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMemberBuilder/) to configure complex ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/) objects.\\n\\nUseful when you\'re interested in implementing custom reporters with multiple configuration options.\\nSee ["},{"kind":"code","text":"`ConsoleReporter`"},{"kind":"text","text":"](/api/console-reporter/class/ConsoleReporter/) for an example.\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/)\\n- ["},{"kind":"code","text":"`StageCrewMemberBuilderDependencies`"},{"kind":"text","text":"](/api/core/interface/StageCrewMemberBuilderDependencies/)\\n- ["},{"kind":"code","text":"`SerenityConfig.crew`"},{"kind":"text","text":"](/api/core/class/SerenityConfig/#crew)"}]},"children":[{"id":2189,"name":"build","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/StageCrewMemberBuilder.ts","line":23,"character":4}],"signatures":[{"id":2190,"name":"build","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/), giving it access to shared dependencies\\nsuch as ["},{"kind":"code","text":"`Stage`"},{"kind":"text","text":"](/api/core/class/Stage/) or ["},{"kind":"code","text":"`OutputStream`"},{"kind":"text","text":"](/api/core-adapter/interface/OutputStream/)"}]},"sources":[{"fileName":"packages/core/src/stage/StageCrewMemberBuilder.ts","line":23,"character":4}],"parameters":[{"id":2191,"name":"dependencies","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":2193,"name":"StageCrewMemberBuilderDependencies","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2192,"name":"T","package":"@serenity-js/core","qualifiedName":"StageCrewMemberBuilder.T","refersToTypeParameter":true}}]}],"groups":[{"title":"Methods","children":[2189]}],"sources":[{"fileName":"packages/core/src/stage/StageCrewMemberBuilder.ts","line":17,"character":17}],"typeParameters":[{"id":2192,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":2021,"name":"ListensToDomainEvents","package":"@serenity-js/core"},"default":{"type":"reference","target":2021,"name":"ListensToDomainEvents","package":"@serenity-js/core"}}],"permalink":"/api/core/interface/StageCrewMemberBuilder","previousId":2181,"nextId":2193},{"id":2193,"name":"StageCrewMemberBuilderDependencies","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Dependencies injected by ["},{"kind":"code","text":"`Serenity.configure`"},{"kind":"text","text":"](/api/core/class/Serenity/#configure) into ["},{"kind":"code","text":"`StageCrewMemberBuilder.build`"},{"kind":"text","text":"](/api/core/interface/StageCrewMemberBuilder/#build)\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMemberBuilder/)"}]},"children":[{"id":2194,"name":"stage","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/StageCrewMemberBuilderDependencies.ts","line":14,"character":4}],"type":{"type":"reference","target":2103,"name":"Stage","package":"@serenity-js/core"}},{"id":2195,"name":"fileSystem","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/StageCrewMemberBuilderDependencies.ts","line":15,"character":4}],"type":{"type":"reference","name":"FileSystem","package":"@serenity-js/core"}},{"id":2196,"name":"outputStream","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/StageCrewMemberBuilderDependencies.ts","line":16,"character":4}],"type":{"type":"reference","target":2221,"name":"OutputStream","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[2194,2195,2196]}],"sources":[{"fileName":"packages/core/src/stage/StageCrewMemberBuilderDependencies.ts","line":13,"character":17}],"permalink":"/api/core/interface/StageCrewMemberBuilderDependencies","previousId":2188,"nextId":2197},{"id":2197,"name":"StageManager","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2198,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/StageManager.ts","line":14,"character":4}],"signatures":[{"id":2199,"name":"new StageManager","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/StageManager.ts","line":14,"character":4}],"parameters":[{"id":2200,"name":"cueTimeout","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1742,"name":"Duration","package":"@serenity-js/core"}},{"id":2201,"name":"clock","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1712,"name":"Clock","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2197,"name":"StageManager","package":"@serenity-js/core"}}]},{"id":2206,"name":"register","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/StageManager.ts","line":18,"character":4}],"signatures":[{"id":2207,"name":"register","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/StageManager.ts","line":18,"character":4}],"parameters":[{"id":2208,"name":"subscribers","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":2021,"name":"ListensToDomainEvents","package":"@serenity-js/core"}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":2209,"name":"deregister","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/StageManager.ts","line":22,"character":4}],"signatures":[{"id":2210,"name":"deregister","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/StageManager.ts","line":22,"character":4}],"parameters":[{"id":2211,"name":"subscriber","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":2021,"name":"ListensToDomainEvents","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":2212,"name":"notifyOf","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/StageManager.ts","line":26,"character":4}],"signatures":[{"id":2213,"name":"notifyOf","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/StageManager.ts","line":26,"character":4}],"parameters":[{"id":2214,"name":"event","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":2565,"name":"DomainEvent","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":2215,"name":"waitForAsyncOperationsToComplete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/StageManager.ts","line":32,"character":4}],"signatures":[{"id":2216,"name":"waitForAsyncOperationsToComplete","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/StageManager.ts","line":32,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":2217,"name":"waitForNextCue","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/StageManager.ts","line":52,"character":10}],"signatures":[{"id":2218,"name":"waitForNextCue","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/StageManager.ts","line":52,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":2219,"name":"currentTime","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/StageManager.ts","line":69,"character":4}],"signatures":[{"id":2220,"name":"currentTime","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns current wall clock time."}]},"sources":[{"fileName":"packages/core/src/stage/StageManager.ts","line":69,"character":4}],"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"},"implementationOf":{"type":"reference","target":1895,"name":"TellsTime.currentTime"}}],"implementationOf":{"type":"reference","target":1894,"name":"TellsTime.currentTime"}}],"groups":[{"title":"Constructors","children":[2198]},{"title":"Methods","children":[2206,2209,2212,2215,2217,2219]}],"sources":[{"fileName":"packages/core/src/stage/StageManager.ts","line":10,"character":13}],"implementedTypes":[{"type":"reference","target":1893,"name":"TellsTime","package":"@serenity-js/core"}],"permalink":"/api/core/class/StageManager","previousId":2193,"nextId":1959},{"id":1959,"name":"ArtifactArchiver","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Stores any artifacts emitted via ["},{"kind":"code","text":"`ArtifactGenerated`"},{"kind":"text","text":"](/api/core-events/class/ArtifactGenerated/) events on the file system.\\n\\n## Registering Artifact Archiver programmatically\\n\\n"},{"kind":"code","text":"```ts\\nimport { ArtifactArchiver, configure } from \'@serenity-js/core\'\\n\\nconfigure({\\n  crew: [\\n    ArtifactArchiver.storingArtifactsAt(`/target/site/serenity`),\\n  ]\\n  // other Serenity/JS config\\n})\\n```"},{"kind":"text","text":"\\n\\n## Using Artifact Archiver with Playwright Test\\n\\n"},{"kind":"code","text":"```ts\\n// playwright.config.ts\\nimport type { PlaywrightTestConfig } from \'@serenity-js/playwright-test\'\\n\\nconst config: PlaywrightTestConfig = {\\n  testDir: \'./spec\',\\n\\n  reporter: [\\n    [ \'@serenity-js/playwright-test\', {\\n      crew: [\\n        \'@serenity-js/serenity-bdd\',\\n        [ \'@serenity-js/core:ArtifactArchiver\', { outputDirectory: \'target/site/serenity\' } ],\\n      ]\\n      // other Serenity/JS config\\n    }]\\n  ],\\n  // other Playwright Test config\\n}\\n```"},{"kind":"text","text":"\\n\\n## Using Artifact Archiver with WebdriverIO\\n\\n"},{"kind":"code","text":"```ts\\n// wdio.conf.ts\\nimport { WebdriverIOConfig } from \'@serenity-js/webdriverio\'\\n\\nexport const config: WebdriverIOConfig = {\\n\\n  framework: \'@serenity-js/webdriverio\',\\n\\n  serenity: {\\n    crew: [\\n     \'@serenity-js/serenity-bdd\',\\n      [ \'@serenity-js/core:ArtifactArchiver\', { outputDirectory: \'target/site/serenity\' } ],\\n    ]\\n    // other Serenity/JS config\\n  },\\n  // other WebdriverIO config\\n}\\n```"},{"kind":"text","text":"\\n\\n## Using Artifact Archiver with Protractor\\n\\n"},{"kind":"code","text":"```js\\n// protractor.conf.js\\nexports.config = {\\n  framework:     \'custom\',\\n  frameworkPath: require.resolve(\'@serenity-js/protractor/adapter\'),\\n\\n  serenity: {\\n    crew: [\\n      \'@serenity-js/serenity-bdd\',\\n      [ \'@serenity-js/core:ArtifactArchiver\', { outputDirectory: \'target/site/serenity\' } ],\\n    ],\\n    // other Serenity/JS config\\n  },\\n  // other Protractor config\\n}\\n```"}]},"children":[{"id":1960,"name":"storingArtifactsAt","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/crew/artifact-archiver/ArtifactArchiver.ts","line":110,"character":11}],"signatures":[{"id":1961,"name":"storingArtifactsAt","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates an "},{"kind":"code","text":"`ArtifactArchiver`"},{"kind":"text","text":" storing artifacts in a given "},{"kind":"code","text":"`destination`"},{"kind":"text","text":".\\nThe "},{"kind":"code","text":"`destination`"},{"kind":"text","text":" directory will be created automatically and recursively if it doesn\'t exist."}]},"sources":[{"fileName":"packages/core/src/stage/crew/artifact-archiver/ArtifactArchiver.ts","line":110,"character":11}],"parameters":[{"id":1962,"name":"destination","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"type":{"type":"reference","target":2181,"name":"StageCrewMember","package":"@serenity-js/core"}}]},{"id":1963,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/crew/artifact-archiver/ArtifactArchiver.ts","line":124,"character":11}],"signatures":[{"id":1964,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates an "},{"kind":"code","text":"`ArtifactArchiver`"},{"kind":"text","text":" storing artifacts in a given "},{"kind":"code","text":"`outputDirectory`"},{"kind":"text","text":".\\nThe "},{"kind":"code","text":"`outputDirectory`"},{"kind":"text","text":" will be created automatically and recursively if it doesn\'t exist."}]},"sources":[{"fileName":"packages/core/src/stage/crew/artifact-archiver/ArtifactArchiver.ts","line":124,"character":11}],"parameters":[{"id":1965,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":1966,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":1967,"name":"outputDirectory","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/crew/artifact-archiver/ArtifactArchiver.ts","line":124,"character":30}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[1967]}],"sources":[{"fileName":"packages/core/src/stage/crew/artifact-archiver/ArtifactArchiver.ts","line":124,"character":28}]}}}],"type":{"type":"reference","target":2181,"name":"StageCrewMember","package":"@serenity-js/core"}}]},{"id":1968,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/crew/artifact-archiver/ArtifactArchiver.ts","line":135,"character":4}],"signatures":[{"id":1969,"name":"new ArtifactArchiver","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/crew/artifact-archiver/ArtifactArchiver.ts","line":135,"character":4}],"parameters":[{"id":1970,"name":"fileSystem","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"FileSystem","package":"@serenity-js/core"}},{"id":1971,"name":"stage","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The stage this ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/) should be assigned to"}]},"type":{"type":"reference","target":2103,"name":"Stage","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1959,"name":"ArtifactArchiver","package":"@serenity-js/core"}}]},{"id":1974,"name":"assignedTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/crew/artifact-archiver/ArtifactArchiver.ts","line":141,"character":4}],"signatures":[{"id":1975,"name":"assignedTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Assigns a ["},{"kind":"code","text":"`Stage`"},{"kind":"text","text":"](/api/core/class/Stage/) to this ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/)"}]},"sources":[{"fileName":"packages/core/src/stage/crew/artifact-archiver/ArtifactArchiver.ts","line":141,"character":4}],"parameters":[{"id":1976,"name":"stage","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":2103,"name":"Stage","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2181,"name":"StageCrewMember","package":"@serenity-js/core"},"implementationOf":{"type":"reference","target":2183,"name":"StageCrewMember.assignedTo"}}],"implementationOf":{"type":"reference","target":2182,"name":"StageCrewMember.assignedTo"}},{"id":1977,"name":"notifyOf","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/crew/artifact-archiver/ArtifactArchiver.ts","line":156,"character":4}],"signatures":[{"id":1978,"name":"notifyOf","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Handles ["},{"kind":"code","text":"`DomainEvent`"},{"kind":"text","text":"](/api/core-events/class/DomainEvent/) objects emitted by the ["},{"kind":"code","text":"`StageManager`"},{"kind":"text","text":"](/api/core/class/StageManager/)."}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/)"}]},{"tag":"@listens","content":[]},{"tag":"@emits","content":[]}]},"sources":[{"fileName":"packages/core/src/stage/crew/artifact-archiver/ArtifactArchiver.ts","line":156,"character":4}],"parameters":[{"id":1979,"name":"event","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":2565,"name":"DomainEvent","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"void"},"implementationOf":{"type":"reference","target":2186,"name":"StageCrewMember.notifyOf"}}],"implementationOf":{"type":"reference","target":2185,"name":"StageCrewMember.notifyOf"}}],"groups":[{"title":"Constructors","children":[1968]},{"title":"Methods","children":[1960,1963,1974,1977]}],"sources":[{"fileName":"packages/core/src/stage/crew/artifact-archiver/ArtifactArchiver.ts","line":102,"character":13}],"implementedTypes":[{"type":"reference","target":2181,"name":"StageCrewMember","package":"@serenity-js/core"}],"permalink":"/api/core/class/ArtifactArchiver","previousId":2197,"nextId":2002},{"id":2002,"name":"StreamReporter","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Serialises all the ["},{"kind":"code","text":"`DomainEvent`"},{"kind":"text","text":"](/api/core-events/class/DomainEvent/) objects it receives and streams\\nthem as [ndjson](http://ndjson.org/) to the output stream or file.\\n\\nUseful when debugging issues related to custom Serenity/JS test runner adapters.\\n\\n## Registering Stream Reporter programmatically\\n\\n"},{"kind":"code","text":"```ts\\nimport { configure, StreamReporter } from \'@serenity-js/core\'\\n\\nconfigure({\\n  crew: [\\n    new StreamReporter(process.stdout)\\n  ],\\n})\\n```"},{"kind":"text","text":"\\n\\n## Writing Domain Events to a file\\n\\n"},{"kind":"code","text":"```ts\\nimport { configure, StreamReporter } from \'@serenity-js/core\'\\nimport fs = require(\'fs\')\\n\\nconfigure({\\n  crew: [\\n    new StreamReporter(fs.createWriteStream(\'./events.ndjson\'))\\n  ],\\n})\\n```"},{"kind":"text","text":"\\n\\n## Using Stream Reporter with Playwright Test\\n\\n"},{"kind":"code","text":"```ts\\n// playwright.config.ts\\nimport type { PlaywrightTestConfig } from \'@serenity-js/playwright-test\'\\n\\nconst config: PlaywrightTestConfig = {\\n\\n  reporter: [\\n    [ \'@serenity-js/playwright-test\', {\\n      crew: [\\n        [ \'@serenity-js/core:StreamReporter\', { outputFile: \'./events.ndjson\' } ]\\n      ]\\n      // other Serenity/JS config\\n    }]\\n  ],\\n  // other Playwright Test config\\n}\\n```"},{"kind":"text","text":"\\n\\n## Using Stream Reporter with WebdriverIO\\n\\n"},{"kind":"code","text":"```ts\\n// wdio.conf.ts\\nimport { WebdriverIOConfig } from \'@serenity-js/webdriverio\'\\n\\nexport const config: WebdriverIOConfig = {\\n\\n  framework: \'@serenity-js/webdriverio\',\\n\\n  serenity: {\\n    crew: [\\n      \'@serenity-js/serenity-bdd\',\\n      [ \'@serenity-js/core:StreamReporter\', { outputFile: \'./events.ndjson\' }]\\n    ]\\n    // other Serenity/JS config\\n  },\\n  // other WebdriverIO config\\n}\\n```"},{"kind":"text","text":"\\n\\n## Using Stream Reporter with Protractor\\n\\n"},{"kind":"code","text":"```js\\n// protractor.conf.js\\nexports.config = {\\n  framework:     \'custom\',\\n  frameworkPath: require.resolve(\'@serenity-js/protractor/adapter\'),\\n\\n  serenity: {\\n    crew: [\\n      [ \'@serenity-js/core:StreamReporter\', { outputFile: \'./events.ndjson\' }]\\n    ],\\n    // other Serenity/JS config\\n  },\\n  // other Protractor config\\n}\\n```"}]},"children":[{"id":2003,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/crew/stream-reporter/StreamReporter.ts","line":109,"character":11}],"signatures":[{"id":2004,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a "},{"kind":"code","text":"`StreamReporter`"},{"kind":"text","text":" outputting a stream of [Serenity/JS domain events](/api/core-events/class/DomainEvent/)\\nto an "},{"kind":"code","text":"`outputFile`"},{"kind":"text","text":" at the given location."}]},"sources":[{"fileName":"packages/core/src/stage/crew/stream-reporter/StreamReporter.ts","line":109,"character":11}],"parameters":[{"id":2005,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":2006,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":2007,"name":"outputFile","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/crew/stream-reporter/StreamReporter.ts","line":109,"character":30}],"type":{"type":"intrinsic","name":"string"}},{"id":2008,"name":"cwd","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/core/src/stage/crew/stream-reporter/StreamReporter.ts","line":109,"character":50}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[2007,2008]}],"sources":[{"fileName":"packages/core/src/stage/crew/stream-reporter/StreamReporter.ts","line":109,"character":28}]}}}],"type":{"type":"reference","target":2181,"name":"StageCrewMember","package":"@serenity-js/core"}}]},{"id":2009,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/crew/stream-reporter/StreamReporter.ts","line":125,"character":4}],"signatures":[{"id":2010,"name":"new StreamReporter","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/crew/stream-reporter/StreamReporter.ts","line":125,"character":4}],"parameters":[{"id":2011,"name":"output","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A Writable stream that should receive the output"}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/stream.d.ts","qualifiedName":"internal.Writable"},"name":"Writable","package":"@types/node","qualifiedName":"internal.Writable"},"defaultValue":"process.stdout"},{"id":2012,"name":"stage","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The stage this ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/) should be assigned to"}]},"type":{"type":"reference","target":2103,"name":"Stage","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2002,"name":"StreamReporter","package":"@serenity-js/core"}}]},{"id":2015,"name":"assignedTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/crew/stream-reporter/StreamReporter.ts","line":140,"character":4}],"signatures":[{"id":2016,"name":"assignedTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates a new instance of this ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/) and assigns it to a given ["},{"kind":"code","text":"`Stage`"},{"kind":"text","text":"](/api/core/class/Stage/)."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A new instance of this ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/)"}]}]},"sources":[{"fileName":"packages/core/src/stage/crew/stream-reporter/StreamReporter.ts","line":140,"character":4}],"parameters":[{"id":2017,"name":"stage","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An instance of a ["},{"kind":"code","text":"`Stage`"},{"kind":"text","text":"](/api/core/class/Stage/) this ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/) will be assigned to"}]},"type":{"type":"reference","target":2103,"name":"Stage","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2181,"name":"StageCrewMember","package":"@serenity-js/core"},"implementationOf":{"type":"reference","target":2183,"name":"StageCrewMember.assignedTo"}}],"implementationOf":{"type":"reference","target":2182,"name":"StageCrewMember.assignedTo"}},{"id":2018,"name":"notifyOf","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/crew/stream-reporter/StreamReporter.ts","line":151,"character":4}],"signatures":[{"id":2019,"name":"notifyOf","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Handles ["},{"kind":"code","text":"`DomainEvent`"},{"kind":"text","text":"](/api/core-events/class/DomainEvent/) objects emitted by the ["},{"kind":"code","text":"`StageManager`"},{"kind":"text","text":"](/api/core/class/StageManager/)."}],"blockTags":[{"tag":"@listens","content":[]}]},"sources":[{"fileName":"packages/core/src/stage/crew/stream-reporter/StreamReporter.ts","line":151,"character":4}],"parameters":[{"id":2020,"name":"event","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":2565,"name":"DomainEvent","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"void"},"implementationOf":{"type":"reference","target":2186,"name":"StageCrewMember.notifyOf"}}],"implementationOf":{"type":"reference","target":2185,"name":"StageCrewMember.notifyOf"}}],"groups":[{"title":"Constructors","children":[2009]},{"title":"Methods","children":[2003,2015,2018]}],"sources":[{"fileName":"packages/core/src/stage/crew/stream-reporter/StreamReporter.ts","line":101,"character":13}],"implementedTypes":[{"type":"reference","target":2181,"name":"StageCrewMember","package":"@serenity-js/core"}],"permalink":"/api/core/class/StreamReporter","previousId":1959,"nextId":2025},{"id":2025,"name":"DomainEventQueue","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2026,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":12,"character":4}],"signatures":[{"id":2027,"name":"new DomainEventQueue","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":12,"character":4}],"parameters":[{"id":2028,"name":"items","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"intersection","types":[{"type":"reference","target":2565,"name":"DomainEvent","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":2029,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":2030,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":12,"character":48}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[2030]}],"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":12,"character":46}]}}]}}}],"type":{"type":"reference","target":2025,"name":"DomainEventQueue","package":"@serenity-js/core"}}]},{"id":2034,"name":"sceneId","variant":"declaration","kind":262144,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":16,"character":8}],"getSignature":{"id":2035,"name":"sceneId","variant":"signature","kind":524288,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":16,"character":8}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}},{"id":2036,"name":"first","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":22,"character":4}],"signatures":[{"id":2037,"name":"first","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":22,"character":4}],"type":{"type":"intersection","types":[{"type":"reference","target":2565,"name":"DomainEvent","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":2038,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":2039,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":22,"character":29}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[2039]}],"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":22,"character":27}]}}]}}]},{"id":2040,"name":"enqueue","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":26,"character":4}],"signatures":[{"id":2041,"name":"enqueue","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":26,"character":4}],"parameters":[{"id":2042,"name":"event","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":2565,"name":"DomainEvent","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":2043,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":2044,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":26,"character":35}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[2044]}],"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":26,"character":33}]}}]}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":2045,"name":"drain","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":30,"character":4}],"signatures":[{"id":2046,"name":"drain","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":30,"character":4}],"type":{"type":"array","elementType":{"type":"intersection","types":[{"type":"reference","target":2565,"name":"DomainEvent","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":2047,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":2048,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":30,"character":35}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[2048]}],"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":30,"character":33}]}}]}}}]},{"id":2049,"name":"reduce","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":34,"character":4}],"signatures":[{"id":2050,"name":"reduce","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":34,"character":4}],"typeParameter":[{"id":2051,"name":"U","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":2052,"name":"fn","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":2053,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":34,"character":18}],"signatures":[{"id":2054,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":34,"character":18}],"parameters":[{"id":2055,"name":"previousValue","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":2051,"name":"U","package":"@serenity-js/core","refersToTypeParameter":true}},{"id":2056,"name":"currentValue","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":2565,"name":"DomainEvent","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":2057,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":2058,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":34,"character":67}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[2058]}],"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":34,"character":65}]}}]}},{"id":2059,"name":"currentIndex","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":2051,"name":"U","package":"@serenity-js/core","refersToTypeParameter":true}}]}}},{"id":2060,"name":"initialValue","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":2051,"name":"U","package":"@serenity-js/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":2051,"name":"U","package":"@serenity-js/core","refersToTypeParameter":true}}]}],"groups":[{"title":"Constructors","children":[2026]},{"title":"Accessors","children":[2034]},{"title":"Methods","children":[2036,2040,2045,2049]}],"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":9,"character":13}],"permalink":"/api/core/class/DomainEventQueue","previousId":2002,"nextId":2061},{"id":2061,"name":"DomainEventQueues","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2062,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":2063,"name":"new DomainEventQueues","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":2061,"name":"DomainEventQueues","package":"@serenity-js/core"}}]},{"id":2071,"name":"enqueue","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueues.ts","line":18,"character":4}],"signatures":[{"id":2072,"name":"enqueue","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueues.ts","line":18,"character":4}],"parameters":[{"id":2073,"name":"event","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":2565,"name":"DomainEvent","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":2074,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":2075,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueues.ts","line":18,"character":35}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[2075]}],"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueues.ts","line":18,"character":33}]}}]}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":2076,"name":"forEach","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueues.ts","line":29,"character":4}],"signatures":[{"id":2077,"name":"forEach","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueues.ts","line":29,"character":4}],"parameters":[{"id":2078,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":2079,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueues.ts","line":29,"character":22}],"signatures":[{"id":2080,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueues.ts","line":29,"character":22}],"parameters":[{"id":2081,"name":"queue","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":2025,"name":"DomainEventQueue","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":2082,"name":"drainQueueFor","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueues.ts","line":33,"character":4}],"signatures":[{"id":2083,"name":"drainQueueFor","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueues.ts","line":33,"character":4}],"parameters":[{"id":2084,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}],"type":{"type":"array","elementType":{"type":"intersection","types":[{"type":"reference","target":2565,"name":"DomainEvent","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":2085,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":2086,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueues.ts","line":33,"character":65}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[2086]}],"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueues.ts","line":33,"character":63}]}}]}}}]}],"groups":[{"title":"Constructors","children":[2062]},{"title":"Methods","children":[2071,2076,2082]}],"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueues.ts","line":11,"character":13}],"permalink":"/api/core/class/DomainEventQueues","previousId":2025,"nextId":1893}],"groups":[{"title":"Abilities","children":[511,524,553,556,561,596]},{"title":"Activities","children":[697,752,757,1062]},{"title":"Actors","children":[484,487,1584,548,600,605,692,1049]},{"title":"Errors","children":[126,148,76,120,454,157,171,181,193,219,245,271,297,323,349,376,402,428]},{"title":"Expectations","children":[1132,1138,1207,1234,1252,1270]},{"title":"Notes","children":[826,833,878,911,908]},{"title":"Questions","children":[57,53,49,688,690,936,1029,1041,1046,1582,1896,1054,1113,1130,1288,1408,1533,1537,1543,1567,1551,1563]},{"title":"Screenplay Pattern","children":[610,637,793,939,1587,490]},{"title":"Serenity","children":[1898,66,67,489,478,481]},{"title":"Stage","children":[1947,2021,2103,2181,2188,2193,2197,1959,2002,2025,2061]},{"title":"Time","children":[1893,1617,1644,1668,1712,1735,1742,1799,1816,1841]}],"sources":[{"fileName":"packages/core/src/index.ts","line":1,"character":0}],"permalink":"/api/core"},"urlSlug":"core"}],"packageName":"@serenity-js/core","packageVersion":"3.26.0"},{"entryPoints":[{"index":false,"label":"Test runner adapter","reflection":{"id":39,"name":"@serenity-js/cucumber/adapter","variant":"declaration","kind":2,"flags":{"isExternal":true},"children":[{"id":22343,"name":"CucumberCLIAdapter","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Allows for programmatic execution of Cucumber test scenarios.\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`TestRunnerAdapter`"},{"kind":"text","text":"](/api/core-adapter/interface/TestRunnerAdapter/)"}]},"children":[{"id":22344,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberCLIAdapter.ts","line":26,"character":4}],"signatures":[{"id":22345,"name":"new CucumberCLIAdapter","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberCLIAdapter.ts","line":26,"character":4}],"parameters":[{"id":22346,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":22408,"name":"CucumberConfig","package":"@serenity-js/cucumber"}},{"id":22347,"name":"loader","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"ModuleLoader","package":"@serenity-js/core"}},{"id":22348,"name":"fileSystem","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"FileSystem","package":"@serenity-js/core"}},{"id":22349,"name":"output","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":22443,"name":"SerenityFormatterOutput","package":"@serenity-js/cucumber"}}],"type":{"type":"reference","target":22343,"name":"CucumberCLIAdapter","package":"@serenity-js/cucumber"}}]},{"id":22354,"name":"successThreshold","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberCLIAdapter.ts","line":38,"character":4}],"signatures":[{"id":22355,"name":"successThreshold","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Scenario success threshold for this test runner, calculated based on ["},{"kind":"code","text":"`CucumberConfig`"},{"kind":"text","text":"](/api/cucumber-adapter/interface/CucumberConfig/)"}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberCLIAdapter.ts","line":38,"character":4}],"type":{"type":"union","types":[{"type":"reference","name":"Outcome","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":22356,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":22357,"name":"Code","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberCLIAdapter.ts","line":38,"character":36}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[22357]}],"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberCLIAdapter.ts","line":38,"character":34}]}}]},"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.successThreshold"}}],"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.successThreshold"}},{"id":22358,"name":"load","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberCLIAdapter.ts","line":50,"character":10}],"signatures":[{"id":22359,"name":"load","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Loads feature files."}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberCLIAdapter.ts","line":50,"character":10}],"parameters":[{"id":22360,"name":"pathsToScenarios","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Absolute or relative paths to feature files"}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.load"}}],"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.load"}},{"id":22361,"name":"scenarioCount","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberCLIAdapter.ts","line":68,"character":4}],"signatures":[{"id":22362,"name":"scenarioCount","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the number of loaded scenarios"}],"blockTags":[{"tag":"@throws","content":[{"kind":"text","text":"["},{"kind":"code","text":"`LogicError`"},{"kind":"text","text":"](/api/core/class/LogicError/)\\n If called before "},{"kind":"code","text":"`load`"}]}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberCLIAdapter.ts","line":68,"character":4}],"type":{"type":"intrinsic","name":"number"},"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.scenarioCount"}}],"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.scenarioCount"}},{"id":22363,"name":"run","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberCLIAdapter.ts","line":83,"character":10}],"signatures":[{"id":22364,"name":"run","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs Cucumber to execute feature files located at "},{"kind":"code","text":"`pathsToScenarios`"}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberCLIAdapter.ts","line":83,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.run"}}],"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.run"}}],"groups":[{"title":"Constructors","children":[22344]},{"title":"Methods","children":[22354,22358,22361,22363]}],"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberCLIAdapter.ts","line":20,"character":13}],"implementedTypes":[{"type":"reference","target":2225,"name":"TestRunnerAdapter","package":"@serenity-js/core"}],"permalink":"/api/cucumber-adapter/class/CucumberCLIAdapter","previousId":22408,"nextId":22428},{"id":22408,"name":"CucumberConfig","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configuration options to be passed to [Cucumber CLI](https://github.com/cucumber/cucumber-js/blob/master/docs/cli.md).\\nYou can specify the options using either camelCase (i.e. "},{"kind":"code","text":"`retryTagFilter`"},{"kind":"text","text":") or kebab-case (i.e. "},{"kind":"code","text":"`retry-tag-filter`"},{"kind":"text","text":")\\nas Serenity/JS will convert them to an appropriate format for you."}]},"children":[{"id":22409,"name":"paths","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Paths to where your feature files are. Note that you don\'t need to specify the paths when\\nusing Serenity/JS with WebdriverIO or Protractor, as their respective adapters will do it for you.\\n\\n#### Learn more\\n- [Cucumber docs: configuration](https://github.com/cucumber/cucumber-js/blob/main/docs/configuration.md)"}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":17,"character":4}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":22410,"name":"dryRun","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Prepare a test run but don\'t run it\\n\\n#### Learn more\\n- [Cucumber docs: configuration](https://github.com/cucumber/cucumber-js/blob/main/docs/configuration.md)\\n- [Cucumber docs: dry run mode](https://github.com/cucumber/cucumber-js/blob/main/docs/dry_run.md)"}],"blockTags":[{"tag":"@version","content":[{"kind":"text","text":"8.x"}]}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":28,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":22411,"name":"failFast","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Stop running tests when a test fails\\n\\n#### Learn more\\n- [Cucumber docs: configuration](https://github.com/cucumber/cucumber-js/blob/main/docs/configuration.md)\\n- [Cucumber docs: fail fast](https://github.com/cucumber/cucumber-js/blob/main/docs/fail_fast.md)"}],"blockTags":[{"tag":"@version","content":[{"kind":"text","text":"8.x"}]}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":39,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":22412,"name":"colors","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Enable/disable colors in output. Cucumber 1.x only!\\nFor Cucumber 2.x and above use "},{"kind":"code","text":"`formatOptions: { colorsEnabled: false }`"},{"kind":"text","text":"\\n\\n**Note** For Cucumber 2.x and above use the ["},{"kind":"code","text":"`CucumberConfig.formatOptions`"},{"kind":"text","text":"](/api/cucumber-adapter/interface/CucumberConfig/#formatOptions) instead.\\n\\n#### Disable colors in output in Cucumber 1.x\\n\\n"},{"kind":"code","text":"```ts\\ncolors: false\\n```"},{"kind":"text","text":"\\n\\n#### Disable colors in output in Cucumber 2.x and above\\n\\n "},{"kind":"code","text":"```ts\\n formatOptions: { colorsEnabled: false }\\n ```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- [Cucumber 1.x CLI options](https://github.com/cucumber/cucumber-js/blob/1.x/lib/cucumber/cli.js#L38)"}],"blockTags":[{"tag":"@version","content":[{"kind":"text","text":"1.x"}]}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":64,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":22413,"name":"compiler","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Step definitions and support files can be written in languages that transpile to JavaScript.\\nTo do set the "},{"kind":"code","text":"`compiler`"},{"kind":"text","text":" option to "},{"kind":"code","text":"`<file_extension>:<module_name>`"},{"kind":"text","text":"\\n\\n**NoteL** For Cucumber 4.x and above use the ["},{"kind":"code","text":"`CucumberConfig.require`"},{"kind":"text","text":"](/api/cucumber-adapter/interface/CucumberConfig/#require) option instead.\\n\\n#### Enable TypeScript support in Cucumber 1.x - 3.x\\n"},{"kind":"code","text":"```ts\\ncompiler: \'ts:ts-node/register\'\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- [Cucumber 3.x documentation](https://github.com/cucumber/cucumber-js/blob/3.x/docs/cli.md#transpilers)"}],"blockTags":[{"tag":"@version","content":[{"kind":"text","text":"1.x - 3.x"}]}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":82,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":22414,"name":"format","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Specify additional output formats, optionally supply PATH to redirect formatter output\\n\\n#### Learn more\\n- [Cucumber output formats](https://github.com/cucumber/cucumber-js/blob/master/docs/cli.md#formats)"}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":90,"character":4}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"array","elementType":{"type":"intrinsic","name":"string"}}]}},{"id":22415,"name":"formatOptions","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Provide options for formatters\\n\\n#### Cucumber 1.x\\n"},{"kind":"code","text":"```ts\\nformatOptions: JSON.stringify({ option: \'value\' })\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- [Cucumber format options](https://github.com/cucumber/cucumber-js/blob/master/docs/cli.md#format-options)"}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":103,"character":4}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"object"}]}},{"id":22416,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Only execute the scenarios with name matching the expression.\\n\\n#### Learn more\\n- [Cucumber docs: running specific features](https://github.com/cucumber/cucumber-js/blob/master/docs/cli.md#running-specific-features)"}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":111,"character":4}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":22417,"name":"profile","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"In order to store and reuse commonly used CLI options,\\nyou can add a "},{"kind":"code","text":"`cucumber.js`"},{"kind":"text","text":" file to your project root directory.\\nThe file should export an object where the key is the profile name\\nand the value is a string of CLI options.\\n\\nThe profile can be applied with "},{"kind":"code","text":"`-p <NAME>`"},{"kind":"text","text":" or "},{"kind":"code","text":"`--profile <NAME>`"},{"kind":"text","text":".\\nThis will prepend the profile\'s CLI options to the ones provided by the command line.\\nMultiple profiles can be specified at a time.\\n\\nIf no profile is specified and a profile named default exists,\\nit will be applied.\\n\\n#### Learn more\\n- [Cucumber profiles](https://github.com/cucumber/cucumber-js/blob/master/docs/cli.md#profiles)"}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":129,"character":4}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":22418,"name":"retry","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The number of times to retry a failing scenario before marking it as failed.\\n\\n#### Cucumber 7.x\\n\\n"},{"kind":"code","text":"```ts\\nretry: 3\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- [Cucumber docs: retry failing tests](https://github.com/cucumber/cucumber-js/blob/master/docs/cli.md#retry-failing-tests)"}],"blockTags":[{"tag":"@version","content":[{"kind":"text","text":"7.x"}]}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":145,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":22419,"name":"rerun","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Relative path to an output file produced by Cucumber.js ["},{"kind":"code","text":"`rerun`"},{"kind":"text","text":" formatter](https://github.com/cucumber/cucumber-js/blob/master/features/rerun_formatter.feature).\\n\\n**Note:** that the name of the output file *must* start with an "},{"kind":"code","text":"`@`"},{"kind":"text","text":" symbol.\\n\\n#### Saving details of failed scenarios to "},{"kind":"code","text":"`@rerun-output.txt`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nformat: [ \'rerun:@rerun-output.txt\' ]\\n```"},{"kind":"text","text":"\\n\\n#### Re-running scenarios saved to "},{"kind":"code","text":"`@rerun-output.txt`"},{"kind":"text","text":"\\n"},{"kind":"code","text":"```ts\\nrerun: \'@rerun-output.txt\'\\n```"}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":163,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":22420,"name":"retryTagFilter","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Only retry tests matching the given [tag expression](https://github.com/cucumber/cucumber/tree/master/tag-expressions).\\n\\n#### Cucumber 7.x\\n"},{"kind":"code","text":"```ts\\nretry: 3,\\nretryTagFilter: \'@flaky\',\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- [Cucumber docs: retry failing tests](https://github.com/cucumber/cucumber-js/blob/master/docs/cli.md#retry-failing-tests)"}],"blockTags":[{"tag":"@version","content":[{"kind":"text","text":"7.x"}]}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":179,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":22421,"name":"require","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Require files or node modules before executing features\\n\\n#### Enable TypeScript support in Cucumber 4.x and above\\n"},{"kind":"code","text":"```ts\\nrequire: \'ts:ts-node/register\'\\n```"},{"kind":"text","text":"\\n#### Learn more\\n- [Cucumber docs: requiring support files](https://github.com/cucumber/cucumber-js/blob/master/docs/cli.md#requiring-support-files)"}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":191,"character":4}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":22422,"name":"import","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Paths to where your support code is.\\n\\n#### Learn more\\n- [Cucumber docs: configuration](https://github.com/cucumber/cucumber-js/blob/main/docs/configuration.md)"}],"blockTags":[{"tag":"@version","content":[{"kind":"text","text":"8.x"}]}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":201,"character":4}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":22423,"name":"requireModule","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Names of transpilation modules to load, loaded via require()\\n\\n#### Learn more\\n- [Cucumber docs: transpiling](https://github.com/cucumber/cucumber-js/blob/main/docs/transpiling.md)"}],"blockTags":[{"tag":"@version","content":[{"kind":"text","text":"8.x"}]}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":211,"character":4}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":22424,"name":"language","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Default language for your feature files\\n\\n#### Learn more\\n- [Cucumber docs: configuration](https://github.com/cucumber/cucumber-js/blob/main/docs/configuration.md)"}],"blockTags":[{"tag":"@version","content":[{"kind":"text","text":"8.x"}]}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":221,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":22425,"name":"tags","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Only run scenarios that match the given tags.\\n\\n**Note**: Cucumber 1.x requires the "},{"kind":"code","text":"`tags`"},{"kind":"text","text":" option to be an array of Cucumber tags,\\nwhile Cucumber 2.x and above uses a "},{"kind":"code","text":"`string`"},{"kind":"text","text":"\\nwith a [tag expression](https://github.com/cucumber/cucumber/tree/master/tag-expressions).\\n\\n#### Cucumber 1.x\\n"},{"kind":"code","text":"```ts\\n// Run all scenarios tagged with `@smoketest`, but not with `@wip`:\\ntag: [ \'@smoketest\', \'~@wip\' ]\\n```"},{"kind":"text","text":"\\n\\n#### Cucumber >= 2.x\\n"},{"kind":"code","text":"```ts\\n// Run all scenarios tagged with `@smoketest`, but not with `@wip`:\\ntag: \'@smoketest and not @wip\'\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n\\n- [Cucumber 1.x docs: tags](https://github.com/cucumber/cucumber-js/blob/1.x/docs/cli.md#tags)\\n- [Cucumber 2.x docs: tags](https://github.com/cucumber/cucumber-js/blob/2.x/docs/cli.md#tags)\\n- [Cucumber docs: tag expressions](https://github.com/cucumber/cucumber/tree/master/tag-expressions)"}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":248,"character":4}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"array","elementType":{"type":"intrinsic","name":"string"}}]}},{"id":22426,"name":"strict","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Fail if there are any undefined or pending steps"}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":253,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":22427,"name":"worldParameters","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Provide parameters that will be passed to the world constructor\\n\\n#### Specifying "},{"kind":"code","text":"`worldParameters`"},{"kind":"text","text":" as "},{"kind":"code","text":"`string`"},{"kind":"text","text":"\\n"},{"kind":"code","text":"```ts\\nworldParameters: JSON.stringify({ isDev: process.env.NODE_ENV !== \'production\' })\\n```"},{"kind":"text","text":"\\n\\n#### Specifying "},{"kind":"code","text":"`worldParameters`"},{"kind":"text","text":" as "},{"kind":"code","text":"`object`"},{"kind":"text","text":"\\n"},{"kind":"code","text":"```ts\\nworldParameters: { isDev: process.env.NODE_ENV !== \'production\' }\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n\\n- [Cucumber docs: world parameters](https://github.com/cucumber/cucumber-js/blob/master/docs/cli.md#world-parameters)"}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":272,"character":4}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"object"}]}}],"groups":[{"title":"Properties","children":[22409,22410,22411,22412,22413,22414,22415,22416,22417,22418,22419,22420,22421,22422,22423,22424,22425,22426,22427]}],"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":8,"character":17}],"permalink":"/api/cucumber-adapter/interface/CucumberConfig","nextId":22343},{"id":22428,"name":"CucumberFormat","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Represents a Cucumber.js formatter\\n\\n## Learn more\\n\\n- [Cucumber formatters](https://github.com/cucumber/cucumber-js/blob/master/docs/cli.md#built-in-formatters)"}]},"children":[{"id":22435,"name":"formatter","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberFormat.ts","line":13,"character":20}],"type":{"type":"intrinsic","name":"string"}},{"id":22436,"name":"output","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberFormat.ts","line":14,"character":20}],"type":{"type":"intrinsic","name":"string"}},{"id":22432,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberFormat.ts","line":20,"character":4}],"signatures":[{"id":22433,"name":"new CucumberFormat","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberFormat.ts","line":20,"character":4}],"parameters":[{"id":22434,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Cucumber format expression, like "},{"kind":"code","text":"`pretty`"},{"kind":"text","text":" or "},{"kind":"code","text":"`json:out.json`"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":22428,"name":"CucumberFormat","package":"@serenity-js/cucumber"}}]},{"id":22437,"name":"value","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Cucumber format expression, like "},{"kind":"code","text":"`pretty`"},{"kind":"text","text":" or "},{"kind":"code","text":"`json:out.json`"}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberFormat.ts","line":20,"character":32}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Constructors","children":[22432]},{"title":"Properties","children":[22435,22436,22437]}],"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberFormat.ts","line":12,"character":13}],"permalink":"/api/cucumber-adapter/class/CucumberFormat","previousId":22343,"nextId":22438},{"id":22438,"name":"OutputDescriptor","variant":"declaration","kind":256,"flags":{"isExternal":true},"children":[{"id":22439,"name":"value","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/cucumber/src/adapter/output/OutputDescriptor.ts","line":5,"character":4}],"signatures":[{"id":22440,"name":"value","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/cucumber/src/adapter/output/OutputDescriptor.ts","line":5,"character":4}],"type":{"type":"intrinsic","name":"string"}}]},{"id":22441,"name":"cleanUp","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/cucumber/src/adapter/output/OutputDescriptor.ts","line":6,"character":4}],"signatures":[{"id":22442,"name":"cleanUp","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/cucumber/src/adapter/output/OutputDescriptor.ts","line":6,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]}],"groups":[{"title":"Methods","children":[22439,22441]}],"sources":[{"fileName":"packages/cucumber/src/adapter/output/OutputDescriptor.ts","line":4,"character":17}],"permalink":"/api/cucumber-adapter/interface/OutputDescriptor","previousId":22428,"nextId":22443},{"id":22443,"name":"SerenityFormatterOutput","variant":"declaration","kind":256,"flags":{"isExternal":true},"children":[{"id":22444,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/cucumber/src/adapter/output/SerenityFormatterOutput.ts","line":7,"character":4}],"signatures":[{"id":22445,"name":"get","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/cucumber/src/adapter/output/SerenityFormatterOutput.ts","line":7,"character":4}],"type":{"type":"reference","target":22438,"name":"OutputDescriptor","package":"@serenity-js/cucumber"}}]}],"groups":[{"title":"Methods","children":[22444]}],"sources":[{"fileName":"packages/cucumber/src/adapter/output/SerenityFormatterOutput.ts","line":6,"character":17}],"implementedBy":[{"type":"reference","target":22446,"name":"StandardOutput"},{"type":"reference","target":22451,"name":"TempFileOutput"}],"permalink":"/api/cucumber-adapter/interface/SerenityFormatterOutput","previousId":22438,"nextId":22446},{"id":22446,"name":"StandardOutput","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":22447,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":22448,"name":"new StandardOutput","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":22446,"name":"StandardOutput","package":"@serenity-js/cucumber"}}]},{"id":22449,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/cucumber/src/adapter/output/StandardOutput.ts","line":9,"character":4}],"signatures":[{"id":22450,"name":"get","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/cucumber/src/adapter/output/StandardOutput.ts","line":9,"character":4}],"type":{"type":"reference","target":22438,"name":"OutputDescriptor","package":"@serenity-js/cucumber"},"implementationOf":{"type":"reference","target":22445,"name":"SerenityFormatterOutput.get"}}],"implementationOf":{"type":"reference","target":22444,"name":"SerenityFormatterOutput.get"}}],"groups":[{"title":"Constructors","children":[22447]},{"title":"Methods","children":[22449]}],"sources":[{"fileName":"packages/cucumber/src/adapter/output/StandardOutput.ts","line":8,"character":13}],"implementedTypes":[{"type":"reference","target":22443,"name":"SerenityFormatterOutput","package":"@serenity-js/cucumber"}],"permalink":"/api/cucumber-adapter/class/StandardOutput","previousId":22443,"nextId":22451},{"id":22451,"name":"TempFileOutput","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":22452,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/cucumber/src/adapter/output/TempFileOutput.ts","line":12,"character":4}],"signatures":[{"id":22453,"name":"new TempFileOutput","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/cucumber/src/adapter/output/TempFileOutput.ts","line":12,"character":4}],"parameters":[{"id":22454,"name":"fs","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"FileSystem","package":"@serenity-js/core"}}],"type":{"type":"reference","target":22451,"name":"TempFileOutput","package":"@serenity-js/cucumber"}}]},{"id":22456,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/cucumber/src/adapter/output/TempFileOutput.ts","line":15,"character":4}],"signatures":[{"id":22457,"name":"get","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/cucumber/src/adapter/output/TempFileOutput.ts","line":15,"character":4}],"type":{"type":"reference","target":22438,"name":"OutputDescriptor","package":"@serenity-js/cucumber"},"implementationOf":{"type":"reference","target":22445,"name":"SerenityFormatterOutput.get"}}],"implementationOf":{"type":"reference","target":22444,"name":"SerenityFormatterOutput.get"}}],"groups":[{"title":"Constructors","children":[22452]},{"title":"Methods","children":[22456]}],"sources":[{"fileName":"packages/cucumber/src/adapter/output/TempFileOutput.ts","line":11,"character":13}],"implementedTypes":[{"type":"reference","target":22443,"name":"SerenityFormatterOutput","package":"@serenity-js/cucumber"}],"permalink":"/api/cucumber-adapter/class/TempFileOutput","previousId":22446}],"groups":[{"title":"Configuration","children":[22408]},{"title":"Integration","children":[22343,22428,22438,22443,22446,22451]}],"sources":[{"fileName":"packages/cucumber/src/adapter/index.ts","line":1,"character":0}],"permalink":"/api/cucumber-adapter"},"urlSlug":"cucumber-adapter"},{"index":true,"label":"index","reflection":{"id":37,"name":"@serenity-js/cucumber","variant":"declaration","kind":2,"flags":{"isExternal":true},"children":[{"id":38,"name":"export=","variant":"declaration","kind":32,"flags":{"isExternal":true,"isConst":true},"comment":{"summary":[{"kind":"text","text":"Registers a Cucumber reporter that emits [Serenity/JS domain events](/api/core-events/class/DomainEvent/)\\nand informs Serenity/JS when test scenarios and Cucumber steps start, finish, and with what result."}]},"sources":[{"fileName":"packages/cucumber/src/index.ts","line":16,"character":6}],"type":{"type":"intrinsic","name":"unknown"},"defaultValue":"...","permalink":"/api/cucumber#export="}],"groups":[{"title":"Variables","children":[38]}],"sources":[{"fileName":"packages/cucumber/src/index.ts","line":1,"character":0}],"permalink":"/api/cucumber"},"urlSlug":"cucumber"}],"packageName":"@serenity-js/cucumber","packageVersion":"3.26.0"},{"entryPoints":[{"index":false,"label":"Test runner adapter","reflection":{"id":41,"name":"@serenity-js/jasmine/adapter","variant":"declaration","kind":2,"flags":{"isExternal":true},"children":[{"id":22462,"name":"JasmineAdapter","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Allows for programmatic execution of Jasmine test scenarios,\\nusing ["},{"kind":"code","text":"`SerenityReporterForJasmine`"},{"kind":"text","text":"](/api/jasmine/function/default/) to report progress.\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`TestRunnerAdapter`"},{"kind":"text","text":"](/api/core-adapter/interface/TestRunnerAdapter/)"}]},"children":[{"id":22468,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineAdapter.ts","line":45,"character":4}],"signatures":[{"id":22469,"name":"new JasmineAdapter","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineAdapter.ts","line":45,"character":4}],"parameters":[{"id":22470,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":22497,"name":"JasmineConfig","package":"@serenity-js/jasmine"}},{"id":22471,"name":"loader","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"ModuleLoader","package":"@serenity-js/core"}}],"type":{"type":"reference","target":22462,"name":"JasmineAdapter","package":"@serenity-js/jasmine"}}]},{"id":22476,"name":"successThreshold","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineAdapter.ts","line":54,"character":4}],"signatures":[{"id":22477,"name":"successThreshold","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Scenario success threshold for this test runner."}]},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineAdapter.ts","line":54,"character":4}],"type":{"type":"union","types":[{"type":"reference","name":"Outcome","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":22478,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":22479,"name":"Code","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineAdapter.ts","line":54,"character":36}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[22479]}],"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineAdapter.ts","line":54,"character":34}]}}]},"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.successThreshold"}}],"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.successThreshold"}},{"id":22480,"name":"load","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineAdapter.ts","line":63,"character":10}],"signatures":[{"id":22481,"name":"load","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Loads test scenarios."}]},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineAdapter.ts","line":63,"character":10}],"parameters":[{"id":22482,"name":"pathsToScenarios","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.load"}}],"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.load"}},{"id":22490,"name":"scenarioCount","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineAdapter.ts","line":133,"character":4}],"signatures":[{"id":22491,"name":"scenarioCount","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the number of loaded scenarios"}]},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineAdapter.ts","line":133,"character":4}],"type":{"type":"intrinsic","name":"number"},"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.scenarioCount"}}],"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.scenarioCount"}},{"id":22495,"name":"run","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineAdapter.ts","line":151,"character":10}],"signatures":[{"id":22496,"name":"run","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Runs loaded test scenarios."}]},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineAdapter.ts","line":151,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.run"}}],"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.run"}}],"groups":[{"title":"Constructors","children":[22468]},{"title":"Methods","children":[22476,22480,22490,22495]}],"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineAdapter.ts","line":21,"character":13}],"implementedTypes":[{"type":"reference","target":2225,"name":"TestRunnerAdapter","package":"@serenity-js/core"}],"permalink":"/api/jasmine-adapter/class/JasmineAdapter","previousId":22497},{"id":22497,"name":"JasmineConfig","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configuration object that will be passed to the JasmineRunner.\\n\\n## Learn more\\n- [Jasmine configuration](https://jasmine.github.io/setup/nodejs.html)"}]},"children":[{"id":22498,"name":"specDir","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Spec dir is used as a prefix for all spec files and helpers"}]},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineConfig.ts","line":16,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":22499,"name":"helpers","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A list of paths to helper files that should be loaded and executed before the "},{"kind":"code","text":"`requires`"},{"kind":"text","text":" and the "},{"kind":"code","text":"`specs`"},{"kind":"text","text":".\\nAccepts relative and absolute paths as well as glob expressions.\\n\\n#### Learn more\\n- [Jasmine tutorial](https://jasmine.github.io/tutorials/react_with_npm)"}]},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineConfig.ts","line":25,"character":4}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":22500,"name":"requires","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A list of paths to files that should be required after the "},{"kind":"code","text":"`helpers`"},{"kind":"text","text":", but before the "},{"kind":"code","text":"`specs`"},{"kind":"text","text":".\\nThe paths need to be compatible with Node "},{"kind":"code","text":"`require`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineConfig.ts","line":31,"character":4}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":22501,"name":"random","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether or not the tests should be executed in a pseudo-random order."}]},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineConfig.ts","line":36,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":22502,"name":"grep","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Used to exclude any test scenarios which name doesn\'t match the pattern from the run."}]},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineConfig.ts","line":41,"character":4}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"RegExp"},"name":"RegExp","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/RegExp"}]}},{"id":22503,"name":"invertGrep","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Inverts \'grep\' matches, defaults to "},{"kind":"code","text":"`false`"}]},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineConfig.ts","line":46,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":22504,"name":"specFilter","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Receives the full name of a test scenario and returns "},{"kind":"code","text":"`true`"},{"kind":"text","text":"\\nfor those that should be executed.\\n\\nTakes precedence over "},{"kind":"code","text":"`grep`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineConfig.ts","line":54,"character":4}],"type":{"type":"reflection","declaration":{"id":22505,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineConfig.ts","line":54,"character":17}],"signatures":[{"id":22506,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineConfig.ts","line":54,"character":17}],"parameters":[{"id":22507,"name":"specName","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"boolean"}}]}}},{"id":22508,"name":"seed","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The randomisation seed that will be used to determine the pseudo-random order of execution,\\nif "},{"kind":"code","text":"`random`"},{"kind":"text","text":" is set to "},{"kind":"code","text":"`true`"}]},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineConfig.ts","line":60,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":22509,"name":"defaultTimeoutInterval","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Sets the global "},{"kind":"code","text":"`jasmine.DEFAULT_TIMEOUT_INTERVAL`"},{"kind":"text","text":",\\nwhich defines the default number of milliseconds Jasmine will wait for an asynchronous spec to complete.\\n\\n#### Learn more\\n- [Jasmine default timeout interval](https://jasmine.github.io/api/edge/jasmine#.DEFAULT_TIMEOUT_INTERVAL)"}]},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineConfig.ts","line":69,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":22510,"name":"reporters","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A list of Jasmine reporters to be added to the test runner.\\n\\nUseful for situations like configuring ReportPortal, because you cannot use "},{"kind":"code","text":"`jasmine.addReporter()`"},{"kind":"text","text":" in the Protractor config.\\n\\n**Note:** reporters must be instantiated before adding them to the configuration.\\n\\n#### Using ReportPortal with Protractor and Jasmine\\n\\n"},{"kind":"code","text":"```js\\n// protractor.conf.js\\nconst AgentJasmine = require(\'@reportportal/agent-js-jasmine\')\\nconst agent = new AgentJasmine(require(\'./reportportalConf\'))\\n// ...\\njasmineNodeOpts: {\\n  // ...\\n  reporters: [ agent.getJasmineReporter() ],\\n}\\n\\nafterLaunch:() => {\\n  return agent.getExitPromise();\\n},\\n```"}]},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineConfig.ts","line":95,"character":4}],"type":{"type":"array","elementType":{"type":"reference","name":"JasmineReporter","package":"@serenity-js/jasmine"}}}],"groups":[{"title":"Properties","children":[22498,22499,22500,22501,22502,22503,22504,22508,22509,22510]}],"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineConfig.ts","line":11,"character":17}],"permalink":"/api/jasmine-adapter/interface/JasmineConfig","nextId":22462}],"groups":[{"title":"Configuration","children":[22497]},{"title":"Integration","children":[22462]}],"sources":[{"fileName":"packages/jasmine/src/adapter/index.ts","line":1,"character":0}],"permalink":"/api/jasmine-adapter"},"urlSlug":"jasmine-adapter"},{"index":true,"label":"index","reflection":{"id":40,"name":"@serenity-js/jasmine","variant":"declaration","kind":2,"flags":{"isExternal":true},"children":[{"id":22458,"name":"default","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/jasmine/src/bootstrap.ts","line":29,"character":16}],"signatures":[{"id":22459,"name":"default","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Monkey-patches Jasmine\'s Suite and Spec so that they provide more accurate information,\\nand returns a bootstrapped instance of the ["},{"kind":"code","text":"`SerenityReporterForJasmine`"},{"kind":"text","text":"](/api/jasmine/function/default/) to be registered with Jasmine.\\n\\n## Registering the reporter from the command line\\n\\n"},{"kind":"code","text":"```terminal\\njasmine --reporter=@serenity-js/jasmine\\n```"},{"kind":"text","text":"\\n\\n## Registering the reporter programmatically\\n\\n"},{"kind":"code","text":"```ts\\nimport serenityReporterForJasmine = require(\'@serenity-js/jasmine\');\\n\\njasmine.getEnv().addReporter(serenityReporterForJasmine);\\n```"}]},"sources":[{"fileName":"packages/jasmine/src/bootstrap.ts","line":29,"character":16}],"parameters":[{"id":22460,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"SerenityReporterForJasmineConfig","package":"@serenity-js/jasmine"},"defaultValue":"{}"},{"id":22461,"name":"jasmine","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"the global.jasmine instance"}]},"type":{"type":"intrinsic","name":"any"},"defaultValue":"..."}],"type":{"type":"reference","name":"SerenityReporterForJasmine","package":"@serenity-js/jasmine"}}],"permalink":"/api/jasmine/function/default"}],"groups":[{"title":"Functions","children":[22458]}],"sources":[{"fileName":"packages/jasmine/src/index.ts","line":1,"character":0}],"permalink":"/api/jasmine"},"urlSlug":"jasmine"}],"packageName":"@serenity-js/jasmine","packageVersion":"3.26.0"},{"entryPoints":[{"index":true,"label":"Index","reflection":{"id":28,"name":"@serenity-js/local-server","variant":"declaration","kind":2,"flags":{"isExternal":true},"children":[{"id":22141,"name":"ManageALocalServer","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/) that enables an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\nto manage a local [Node.js](https://nodejs.org/) server.\\n\\n## Managing a raw Node.js server\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, GetRequest, Send } from \'@serenity-js/rest\'\\nimport { ManageALocalServer, LocalTestServer, StartLocalTestServer, StopLocalTestServer } from \'@serenity-js/local-server\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nimport * as axios from \'axios\'\\nimport * as http from \'http\'\\n\\nconst server = http.createServer(function (request, response) {\\n  response.setHeader(\'Connection\', \'close\');\\n  response.end(\'Hello!\');\\n})\\n\\nawait actorCalled(\'Apisit\')\\n  .whoCan(\\n    ManageALocalServer.using(server),\\n    CallAnApi.using(axios.create()),\\n  )\\n  .attemptsTo(\\n    StartLocalTestServer.onRandomPort(),\\n    Send.a(GetRequest.to(LocalServer.url())),\\n    Ensure.that(LastResponse.status(), equals(200)),\\n    Ensure.that(LastResponse.body<string>(), equals(\'Hello!\')),\\n    StopLocalTestServer.ifRunning(),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- [Anatomy of an HTTP transaction](https://nodejs.org/en/docs/guides/anatomy-of-an-http-transaction/)\\n- [Node.js HTTP server](https://nodejs.org/api/http.html#http_class_http_server)"}]},"children":[{"id":22142,"name":"runningAHttpListener","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":57,"character":11}],"signatures":[{"id":22143,"name":"runningAHttpListener","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/) to manage a Node.js HTTP server using the provided "},{"kind":"code","text":"`requestListener`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":57,"character":11}],"parameters":[{"id":22144,"name":"listener","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":22178,"name":"RequestListener","package":"@serenity-js/local-server"},{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/net.d.ts","qualifiedName":"\\"net\\".Server"},"name":"Server","package":"@types/node","qualifiedName":"\\"net\\".Server"}]}}],"type":{"type":"reference","target":22141,"name":"ManageALocalServer","package":"@serenity-js/local-server"}}]},{"id":22145,"name":"runningAHttpsListener","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":74,"character":11}],"signatures":[{"id":22146,"name":"runningAHttpsListener","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/) to manage a Node.js HTTPS server using the provided server "},{"kind":"code","text":"`requestListener`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://nodejs.org/api/https.html#https_https_createserver_options_requestlistener"}]}]},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":74,"character":11}],"parameters":[{"id":22147,"name":"listener","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":22178,"name":"RequestListener","package":"@serenity-js/local-server"},{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/https.d.ts","qualifiedName":"\\"https\\".Server"},"typeArguments":[{"type":"query","queryType":{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/http.d.ts","qualifiedName":"\\"http\\".IncomingMessage"},"name":"IncomingMessage","package":"@types/node","qualifiedName":"\\"http\\".IncomingMessage","preferValues":true}},{"type":"query","queryType":{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/http.d.ts","qualifiedName":"\\"http\\".ServerResponse"},"name":"ServerResponse","package":"@types/node","qualifiedName":"\\"http\\".ServerResponse","preferValues":true}}],"name":"Server","package":"@types/node","qualifiedName":"\\"https\\".Server"}]}},{"id":22148,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Accepts an options object from "},{"kind":"code","text":"`tls.createServer()`"},{"kind":"text","text":", "},{"kind":"code","text":"`tls.createSecureContext()`"},{"kind":"text","text":" and "},{"kind":"code","text":"`http.createServer()`"},{"kind":"text","text":"."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/https.d.ts","qualifiedName":"\\"https\\".ServerOptions"},"typeArguments":[{"type":"query","queryType":{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/http.d.ts","qualifiedName":"\\"http\\".IncomingMessage"},"name":"IncomingMessage","package":"@types/node","qualifiedName":"\\"http\\".IncomingMessage","preferValues":true}},{"type":"query","queryType":{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/http.d.ts","qualifiedName":"\\"http\\".ServerResponse"},"name":"ServerResponse","package":"@types/node","qualifiedName":"\\"http\\".ServerResponse","preferValues":true}}],"name":"ServerOptions","package":"@types/node","qualifiedName":"\\"https\\".ServerOptions"},"defaultValue":"{}"}],"type":{"type":"reference","target":22141,"name":"ManageALocalServer","package":"@serenity-js/local-server"}}]},{"id":22174,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/abilities/Ability.ts","line":406,"character":4}],"signatures":[{"id":22175,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a JSON representation of the ability and its current state, if available.\\nThe purpose of this method is to enable reporting the state of the ability in a human-readable format,\\nrather than to serialise and deserialise the ability itself."}]},"sources":[{"fileName":"packages/core/lib/screenplay/abilities/Ability.ts","line":406,"character":4}],"type":{"type":"reference","target":596,"name":"SerialisedAbility","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Ability.toJSON"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Ability.toJSON"}},{"id":22176,"name":"abilityType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/abilities/Ability.ts","line":436,"character":4}],"signatures":[{"id":22177,"name":"abilityType","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the most abstract type of this Ability instance,\\nspecifically the first class in the inheritance hierarchy that directly extends the "},{"kind":"code","text":"`Ability`"},{"kind":"text","text":" class.\\n\\n"},{"kind":"code","text":"```ts\\nimport { Ability } from \'@serenity-js/core\';\\n\\nclass MyAbility extends Ability {}\\nclass MySpecialisedAbility extends MyAbility {}\\n\\nnew MyAbility().abilityType();            // returns MyAbility\\nnew MySpecialisedAbility().abilityType(); // returns MyAbility\\n```"}]},"sources":[{"fileName":"packages/core/lib/screenplay/abilities/Ability.ts","line":436,"character":4}],"type":{"type":"reference","target":511,"typeArguments":[{"type":"reference","target":490,"name":"Ability","package":"@serenity-js/core"}],"name":"AbilityType","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Ability.abilityType"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Ability.abilityType"}},{"id":22156,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":91,"character":4}],"signatures":[{"id":22157,"name":"new ManageALocalServer","variant":"signature","kind":16384,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://www.npmjs.com/package/http-shutdown"}]}]},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":91,"character":4}],"parameters":[{"id":22158,"name":"protocol","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Protocol to be used when communicating with the running server; "},{"kind":"code","text":"`http`"},{"kind":"text","text":" or "},{"kind":"code","text":"`https`"}]},"type":{"type":"reference","target":22199,"name":"SupportedProtocols","package":"@serenity-js/local-server"}},{"id":22159,"name":"server","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A Node.js server requestListener, with support for [server shutdown](https://www.npmjs.com/package/http-shutdown)."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/net.d.ts","qualifiedName":"\\"net\\".Server"},"name":"Server","package":"@types/node","qualifiedName":"\\"net\\".Server"}}],"type":{"type":"reference","target":22141,"name":"ManageALocalServer","package":"@serenity-js/local-server"},"overwrites":{"type":"reference","target":-1,"name":"Ability.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"Ability.constructor"}},{"id":22162,"name":"listen","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":105,"character":4}],"signatures":[{"id":22163,"name":"listen","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Starts the server on the first free port between "},{"kind":"code","text":"`preferredPort`"},{"kind":"text","text":" and "},{"kind":"code","text":"`highestPort`"},{"kind":"text","text":", inclusive."}]},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":105,"character":4}],"parameters":[{"id":22164,"name":"preferredPort","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Lower bound of the preferred port range"}]},"type":{"type":"intrinsic","name":"number"},"defaultValue":"8000"},{"id":22165,"name":"highestPort","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"highestPort\\n Upper bound of the preferred port range"}]},"type":{"type":"intrinsic","name":"number"},"defaultValue":"65535"}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":22166,"name":"mapInstance","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":131,"character":4}],"signatures":[{"id":22167,"name":"mapInstance","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Provides access to the server "},{"kind":"code","text":"`requestListener`"}]},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":131,"character":4}],"typeParameter":[{"id":22168,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":22169,"name":"fn","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":22170,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":131,"character":23}],"signatures":[{"id":22171,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":131,"character":23}],"parameters":[{"id":22172,"name":"server","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":22183,"name":"ServerWithShutdown","package":"@serenity-js/local-server"}},{"id":22173,"name":"protocol","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":22199,"name":"SupportedProtocols","package":"@serenity-js/local-server"}}],"type":{"type":"reference","target":22168,"name":"T","package":"@serenity-js/local-server","refersToTypeParameter":true}}]}}}],"type":{"type":"reference","target":22168,"name":"T","package":"@serenity-js/local-server","refersToTypeParameter":true}}]}],"groups":[{"title":"Constructors","children":[22156]},{"title":"Methods","children":[22142,22145,22174,22176,22162,22166]}],"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":48,"character":13}],"extendedTypes":[{"type":"reference","target":490,"name":"Ability","package":"@serenity-js/core"}],"permalink":"/api/local-server/class/ManageALocalServer","nextId":22202},{"id":22178,"name":"RequestListener","variant":"declaration","kind":2097152,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A "},{"kind":"code","text":"`requestListener`"},{"kind":"text","text":" function accepted by Node\'s\\n["},{"kind":"code","text":"`http.createServer`"},{"kind":"text","text":"](https://nodejs.org/api/http.html#http_http_createserver_options_requestlistener)\\nor ["},{"kind":"code","text":"`https.createServer`"},{"kind":"text","text":"](https://nodejs.org/api/https.html#https_https_createserver_options_requestlistener)."}]},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":141,"character":12}],"type":{"type":"reflection","declaration":{"id":22179,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":141,"character":30}],"signatures":[{"id":22180,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"parameters":[{"id":22181,"name":"request","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/http.d.ts","qualifiedName":"\\"http\\".IncomingMessage"},"name":"http.IncomingMessage","package":"@types/node","qualifiedName":"\\"http\\".IncomingMessage"}},{"id":22182,"name":"response","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/http.d.ts","qualifiedName":"\\"http\\".ServerResponse"},"name":"http.ServerResponse","package":"@types/node","qualifiedName":"\\"http\\".ServerResponse"}}],"type":{"type":"intrinsic","name":"void"}}]}},"permalink":"/api/local-server#RequestListener","previousId":22249,"nextId":22183},{"id":22183,"name":"ServerWithShutdown","variant":"declaration","kind":2097152,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A ["},{"kind":"code","text":"`net.Server`"},{"kind":"text","text":"](https://nodejs.org/api/net.html#class-netserver) with an added shutdown method."}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://www.npmjs.com/package/http-shutdown"}]}]},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":148,"character":12}],"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/net.d.ts","qualifiedName":"\\"net\\".Server"},"name":"net.Server","package":"@types/node","qualifiedName":"\\"net\\".Server"},{"type":"reflection","declaration":{"id":22184,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":22185,"name":"shutdown","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":149,"character":4}],"type":{"type":"reflection","declaration":{"id":22186,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":149,"character":14}],"signatures":[{"id":22187,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"parameters":[{"id":22188,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":22189,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":149,"character":25}],"signatures":[{"id":22190,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"parameters":[{"id":22191,"name":"error","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"id":22192,"name":"forceShutdown","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":150,"character":4}],"type":{"type":"reflection","declaration":{"id":22193,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":150,"character":19}],"signatures":[{"id":22194,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"parameters":[{"id":22195,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":22196,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":150,"character":30}],"signatures":[{"id":22197,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"parameters":[{"id":22198,"name":"error","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"groups":[{"title":"Properties","children":[22185,22192]}],"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":148,"character":46}]}}]},"permalink":"/api/local-server#ServerWithShutdown","previousId":22178},{"id":22199,"name":"SupportedProtocols","variant":"declaration","kind":8,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The protocol supported by the instance of the ["},{"kind":"code","text":"`ServerWithShutdown`"},{"kind":"text","text":"](/api/local-server/#ServerWithShutdown),\\nwrapped by the [ability](/api/core/class/Ability/)\\nto ["},{"kind":"code","text":"`ManageALocalServer`"},{"kind":"text","text":"](/api/local-server/class/ManageALocalServer/)."}]},"children":[{"id":22200,"name":"HTTP","variant":"declaration","kind":16,"flags":{"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":161,"character":4}],"type":{"type":"literal","value":"http"}},{"id":22201,"name":"HTTPS","variant":"declaration","kind":16,"flags":{"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":162,"character":4}],"type":{"type":"literal","value":"https"}}],"groups":[{"title":"Enumeration Members","children":[22200,22201]}],"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":160,"character":12}],"permalink":"/api/local-server/enum/SupportedProtocols","previousId":22214,"nextId":22249},{"id":22202,"name":"StartLocalServer","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Starts local server so that a test can interact with it."}]},"children":[{"id":22203,"name":"onRandomPort","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/interactions/StartLocalServer.ts","line":16,"character":11}],"signatures":[{"id":22204,"name":"onRandomPort","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Starts local test server on a random available ports."}]},"sources":[{"fileName":"packages/local-server/src/screenplay/interactions/StartLocalServer.ts","line":16,"character":11}],"type":{"type":"reference","target":793,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":22205,"name":"onPort","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/interactions/StartLocalServer.ts","line":26,"character":11}],"signatures":[{"id":22206,"name":"onPort","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to start a local test server on a "},{"kind":"code","text":"`preferredPort`"},{"kind":"text","text":",\\nor a random one if that\'s not available."}]},"sources":[{"fileName":"packages/local-server/src/screenplay/interactions/StartLocalServer.ts","line":26,"character":11}],"parameters":[{"id":22207,"name":"preferredPort","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":793,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":22208,"name":"onRandomPortBetween","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/interactions/StartLocalServer.ts","line":40,"character":11}],"signatures":[{"id":22209,"name":"onRandomPortBetween","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to start a local test server on a random port\\nbetween "},{"kind":"code","text":"`lowestPort`"},{"kind":"text","text":" and "},{"kind":"code","text":"`highestPort`"},{"kind":"text","text":", inclusive."}]},"sources":[{"fileName":"packages/local-server/src/screenplay/interactions/StartLocalServer.ts","line":40,"character":11}],"parameters":[{"id":22210,"name":"lowestPort","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Lower bound of the preferred port range"}]},"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":22211,"name":"highestPort","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Upper bound of the preferred port range"}]},"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":793,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":22212,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":22213,"name":"new StartLocalServer","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":22202,"name":"StartLocalServer","package":"@serenity-js/local-server"}}]}],"groups":[{"title":"Constructors","children":[22212]},{"title":"Methods","children":[22203,22205,22208]}],"sources":[{"fileName":"packages/local-server/src/screenplay/interactions/StartLocalServer.ts","line":11,"character":13}],"permalink":"/api/local-server/class/StartLocalServer","previousId":22141,"nextId":22214},{"id":22214,"name":"StopLocalServer","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Stops the local server. Should be used in "},{"kind":"code","text":"`afterEach`"},{"kind":"text","text":" block to make sure that the server\\nis correctly shut down even when the test fails."}]},"children":[{"id":22215,"name":"ifRunning","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/interactions/StopLocalServer.ts","line":17,"character":11}],"signatures":[{"id":22216,"name":"ifRunning","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Stops the server if it\'s running. If the server hasn\'t been started, this interaction does nothing."}]},"sources":[{"fileName":"packages/local-server/src/screenplay/interactions/StopLocalServer.ts","line":17,"character":11}],"type":{"type":"reference","target":793,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":22227,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":21,"character":4}],"signatures":[{"id":22228,"name":"new StopLocalServer","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":21,"character":4}],"parameters":[{"id":22229,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":22230,"name":"location","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"}}],"type":{"type":"reference","target":22214,"name":"StopLocalServer","package":"@serenity-js/local-server"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.constructor"}},{"id":22235,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"signatures":[{"id":22236,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.instantiationLocation"}},{"id":22237,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":22238,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":22239,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1049,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":600,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":22240,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":22241,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[22241]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.describedBy"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.describedBy"}},{"id":22247,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":22248,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.toString"}},{"id":22231,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/interactions/StopLocalServer.ts","line":24,"character":4}],"signatures":[{"id":22232,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/local-server/src/screenplay/interactions/StopLocalServer.ts","line":24,"character":4}],"parameters":[{"id":22233,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":600,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":692,"name":"CollectsArtifacts","package":"@serenity-js/core"},{"type":"reference","target":1049,"name":"AnswersQuestions","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Interaction.performAs"}}],"overwrites":{"type":"reference","target":-1,"name":"Interaction.performAs"}}],"groups":[{"title":"Constructors","children":[22227]},{"title":"Methods","children":[22215,22235,22237,22247,22231]}],"sources":[{"fileName":"packages/local-server/src/screenplay/interactions/StopLocalServer.ts","line":12,"character":13}],"extendedTypes":[{"type":"reference","target":793,"name":"Interaction","package":"@serenity-js/core"}],"permalink":"/api/local-server/class/StopLocalServer","previousId":22202,"nextId":22199},{"id":22249,"name":"LocalServer","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":22250,"name":"url","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/questions/LocalServer.ts","line":17,"character":11}],"signatures":[{"id":22251,"name":"url","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Retrieves the URL of the local server started\\nusing the ["},{"kind":"code","text":"`StartLocalServer`"},{"kind":"text","text":"](/api/local-server/class/StartLocalServer/) [interaction](/api/core/class/Interaction/)."}]},"sources":[{"fileName":"packages/local-server/src/screenplay/questions/LocalServer.ts","line":17,"character":11}],"type":{"type":"reference","target":1041,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":22252,"name":"port","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/questions/LocalServer.ts","line":45,"character":11}],"signatures":[{"id":22253,"name":"port","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Retrieves the port number of the local server started\\nusing the ["},{"kind":"code","text":"`StartLocalServer`"},{"kind":"text","text":"](/api/local-server/class/StartLocalServer/) [interaction](/api/core/class/Interaction/)."}]},"sources":[{"fileName":"packages/local-server/src/screenplay/questions/LocalServer.ts","line":45,"character":11}],"type":{"type":"reference","target":1041,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":22254,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":22255,"name":"new LocalServer","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":22249,"name":"LocalServer","package":"@serenity-js/local-server"}}]}],"groups":[{"title":"Constructors","children":[22254]},{"title":"Methods","children":[22250,22252]}],"sources":[{"fileName":"packages/local-server/src/screenplay/questions/LocalServer.ts","line":11,"character":13}],"permalink":"/api/local-server/class/LocalServer","previousId":22199,"nextId":22178}],"groups":[{"title":"Abilities","children":[22141]},{"title":"Activities","children":[22202,22214]},{"title":"Models","children":[22199]},{"title":"Questions","children":[22249]},{"title":"Type Aliases","children":[22178,22183]}],"sources":[{"fileName":"packages/local-server/src/index.ts","line":1,"character":0}],"permalink":"/api/local-server"},"urlSlug":"local-server"}],"packageName":"@serenity-js/local-server","packageVersion":"3.26.0"},{"entryPoints":[{"index":false,"label":"Test runner adapter","reflection":{"id":47,"name":"@serenity-js/mocha/adapter","variant":"declaration","kind":2,"flags":{"isExternal":true},"children":[{"id":22511,"name":"MochaAdapter","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Allows for programmatic execution of Mocha test scenarios,\\nusing ["},{"kind":"code","text":"`SerenityReporterForMocha`"},{"kind":"text","text":"](/api/mocha/function/export=/) to report progress.\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`TestRunnerAdapter`"},{"kind":"text","text":"](/api/core-adapter/interface/TestRunnerAdapter/)"}]},"children":[{"id":22512,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/mocha/src/adapter/MochaAdapter.ts","line":26,"character":4}],"signatures":[{"id":22513,"name":"new MochaAdapter","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/mocha/src/adapter/MochaAdapter.ts","line":26,"character":4}],"parameters":[{"id":22514,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":22534,"name":"MochaConfig","package":"@serenity-js/mocha"}},{"id":22515,"name":"loader","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"ModuleLoader","package":"@serenity-js/core"}}],"type":{"type":"reference","target":22511,"name":"MochaAdapter","package":"@serenity-js/mocha"}}]},{"id":22520,"name":"successThreshold","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/mocha/src/adapter/MochaAdapter.ts","line":35,"character":4}],"signatures":[{"id":22521,"name":"successThreshold","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Scenario success threshold for this test runner."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaAdapter.ts","line":35,"character":4}],"type":{"type":"union","types":[{"type":"reference","name":"Outcome","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":22522,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":22523,"name":"Code","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/mocha/src/adapter/MochaAdapter.ts","line":35,"character":36}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[22523]}],"sources":[{"fileName":"packages/mocha/src/adapter/MochaAdapter.ts","line":35,"character":34}]}}]},"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.successThreshold"}}],"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.successThreshold"}},{"id":22524,"name":"load","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/mocha/src/adapter/MochaAdapter.ts","line":46,"character":10}],"signatures":[{"id":22525,"name":"load","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Loads test scenarios."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaAdapter.ts","line":46,"character":10}],"parameters":[{"id":22526,"name":"pathsToScenarios","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.load"}}],"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.load"}},{"id":22527,"name":"scenarioCount","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/mocha/src/adapter/MochaAdapter.ts","line":81,"character":4}],"signatures":[{"id":22528,"name":"scenarioCount","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the number of loaded scenarios"}],"blockTags":[{"tag":"@throws","content":[{"kind":"text","text":"["},{"kind":"code","text":"`LogicError`"},{"kind":"text","text":"](/api/core/class/LogicError/)\\n If called before "},{"kind":"code","text":"`load`"}]}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaAdapter.ts","line":81,"character":4}],"type":{"type":"intrinsic","name":"number"},"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.scenarioCount"}}],"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.scenarioCount"}},{"id":22529,"name":"run","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/mocha/src/adapter/MochaAdapter.ts","line":95,"character":4}],"signatures":[{"id":22530,"name":"run","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Runs loaded test scenarios."}],"blockTags":[{"tag":"@throws","content":[{"kind":"text","text":"["},{"kind":"code","text":"`LogicError`"},{"kind":"text","text":"](/api/core/class/LogicError/)\\n If called before "},{"kind":"code","text":"`load`"}]}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaAdapter.ts","line":95,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.run"}}],"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.run"}}],"groups":[{"title":"Constructors","children":[22512]},{"title":"Methods","children":[22520,22524,22527,22529]}],"sources":[{"fileName":"packages/mocha/src/adapter/MochaAdapter.ts","line":21,"character":13}],"implementedTypes":[{"type":"reference","target":2225,"name":"TestRunnerAdapter","package":"@serenity-js/core"}],"permalink":"/api/mocha-adapter/class/MochaAdapter","previousId":22534},{"id":22534,"name":"MochaConfig","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configuration object for the Mocha test runner.\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`.mocharc.yml`"},{"kind":"text","text":" example](https://github.com/mochajs/mocha/blob/v8.0.1/example/config/.mocharc.yml)"}]},"children":[{"id":22535,"name":"config","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Path to config file.\\n\\n#### Learn more\\n- [Mocha configuration examples](https://github.com/mochajs/mocha/tree/v8.0.1/example/config)"}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":18,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":22536,"name":"allow-uncaught","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Allow uncaught errors to propagate."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":23,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":22537,"name":"async-only","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Require all tests to use a callback (async) or return a Promise."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":28,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":22538,"name":"bail","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Abort (\\"bail\\") after first test failure."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":33,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":22539,"name":"check-leaks","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Check for global variable leaks."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":38,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":22540,"name":"delay","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Delay initial execution of root suite."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":43,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":22541,"name":"fgrep","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Only run tests containing this string.\\n\\n**Note:** ["},{"kind":"code","text":"`MochaConfig.fgrep`"},{"kind":"text","text":"](/api/mocha-adapter/interface/MochaConfig/#fgrep) and ["},{"kind":"code","text":"`MochaConfig.grep`"},{"kind":"text","text":"](/api/mocha-adapter/interface/MochaConfig/#grep) are mutually exclusive."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":50,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":22542,"name":"file","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Files to be loaded prior to root suite execution."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":55,"character":4}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":22543,"name":"forbid-only","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Fail if exclusive test(s) encountered."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":60,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":22544,"name":"forbid-pending","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Fail if pending test(s) encountered."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":65,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":22545,"name":"global","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"List of allowed global variables."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":70,"character":4}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":22546,"name":"grep","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Only run tests matching this string or regexp.\\n\\n**Note:** ["},{"kind":"code","text":"`MochaConfig.grep`"},{"kind":"text","text":"](/api/mocha-adapter/interface/MochaConfig/#grep) and ["},{"kind":"code","text":"`MochaConfig.fgrep`"},{"kind":"text","text":"](/api/mocha-adapter/interface/MochaConfig/#fgrep) are mutually exclusive."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":77,"character":4}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"RegExp"},"name":"RegExp","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/RegExp"}]}},{"id":22547,"name":"growl","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Enable Growl notifications."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":82,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":22548,"name":"invert","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Inverts ["},{"kind":"code","text":"`MochaConfig.grep`"},{"kind":"text","text":"](/api/mocha-adapter/interface/MochaConfig/#grep) and ["},{"kind":"code","text":"`MochaConfig.fgrep`"},{"kind":"text","text":"](/api/mocha-adapter/interface/MochaConfig/#fgrep) matches."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":87,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":22549,"name":"require","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Require module."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":92,"character":4}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":22550,"name":"retries","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Retry failed tests this many times."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":97,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":22551,"name":"slow","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Specify \\"slow\\" test threshold (in milliseconds)."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":102,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":22552,"name":"timeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Specify test timeout threshold (in milliseconds).\\n\\n**Note:** setting this property to 0 means \\"no timeout\\"."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":109,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":22553,"name":"ui","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Specify user interface. Defaults to "},{"kind":"code","text":"`bdd`"},{"kind":"text","text":".\\n\\n#### Learn more\\n\\n- [Mocha interfaces](https://mochajs.org/#interfaces)"}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":118,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":22554,"name":"strict","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"When set to "},{"kind":"code","text":"`true`"},{"kind":"text","text":", a skipped test is considered a failure."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":123,"character":4}],"type":{"type":"intrinsic","name":"boolean"}}],"groups":[{"title":"Properties","children":[22535,22536,22537,22538,22539,22540,22541,22542,22543,22544,22545,22546,22547,22548,22549,22550,22551,22552,22553,22554]}],"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":10,"character":17}],"permalink":"/api/mocha-adapter/interface/MochaConfig","nextId":22511}],"groups":[{"title":"Configuration","children":[22534]},{"title":"Integration","children":[22511]}],"sources":[{"fileName":"packages/mocha/src/adapter/index.ts","line":1,"character":0}],"permalink":"/api/mocha-adapter"},"urlSlug":"mocha-adapter"},{"index":true,"label":"index","reflection":{"id":42,"name":"@serenity-js/mocha","variant":"declaration","kind":2,"flags":{"isExternal":true},"children":[{"id":43,"name":"export=","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/mocha/src/index.ts","line":11,"character":9}],"signatures":[{"id":44,"name":"export=","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Registers a Mocha reporter that emits [Serenity/JS domain events](/api/core-events/class/DomainEvent/)\\nand informs Serenity/JS when a test scenario starts, finishes, and with what result."}]},"sources":[{"fileName":"packages/mocha/src/index.ts","line":11,"character":9}],"parameters":[{"id":45,"name":"runner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"","qualifiedName":"Runner"},"name":"Runner"}},{"id":46,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":{"sourceFileName":"","qualifiedName":"MochaOptions"},"name":"MochaOptions"}}],"type":{"type":"reference","name":"SerenityReporterForMocha","package":"@serenity-js/mocha"}}],"permalink":"/api/mocha/function/export="}],"groups":[{"title":"Functions","children":[43]}],"sources":[{"fileName":"packages/mocha/src/index.ts","line":1,"character":0}],"permalink":"/api/mocha"},"urlSlug":"mocha"}],"packageName":"@serenity-js/mocha","packageVersion":"3.26.0"},{"entryPoints":[{"index":true,"label":"Index","reflection":{"id":6,"name":"@serenity-js/playwright","variant":"declaration","kind":2,"flags":{"isExternal":true},"children":[{"id":5116,"name":"PlaywrightOptions","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Playwright-specific options used to configure the ability to ["},{"kind":"code","text":"`BrowseTheWebWithPlaywright`"},{"kind":"text","text":"](/api/playwright/class/BrowseTheWebWithPlaywright/)\\n\\n## Learn more\\n- [Playwright "},{"kind":"code","text":"`Browser.newContext`"},{"kind":"text","text":" options](https://playwright.dev/docs/api/class-browser#browser-new-context)"}]},"children":[{"id":5117,"name":"defaultNavigationTimeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Changes the default maximum navigation time for the browser context used by ["},{"kind":"code","text":"`BrowseTheWebWithPlaywright`"},{"kind":"text","text":"](/api/playwright/class/BrowseTheWebWithPlaywright/)\\n\\n#### Learn more\\n- [Playwright "},{"kind":"code","text":"`browserContext.setDefaultNavigationTimeout(timeout)`"},{"kind":"text","text":"](https://playwright.dev/docs/api/class-browsercontext#browser-context-set-default-navigation-timeout)"}]},"sources":[{"fileName":"packages/playwright/src/PlaywrightOptions.ts","line":19,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":5118,"name":"defaultNavigationWaitUntil","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"When to consider navigation operation succeeded, defaults to "},{"kind":"code","text":"`load`"},{"kind":"text","text":". Events can be either:\\n- "},{"kind":"code","text":"`\'domcontentloaded\'`"},{"kind":"text","text":" - consider operation to be finished when the "},{"kind":"code","text":"`DOMContentLoaded`"},{"kind":"text","text":" event is fired.\\n- "},{"kind":"code","text":"`\'load\'`"},{"kind":"text","text":" - consider operation to be finished when the "},{"kind":"code","text":"`load`"},{"kind":"text","text":" event is fired.\\n- "},{"kind":"code","text":"`\'networkidle\'`"},{"kind":"text","text":" - consider operation to be finished when there are no network connections for at least "},{"kind":"code","text":"`500`"},{"kind":"text","text":" ms.\\n- "},{"kind":"code","text":"`\'commit\'`"},{"kind":"text","text":" - consider operation to be finished when network response is received and the document started loading.\\n\\n#### Learn more\\n- [Playwright "},{"kind":"code","text":"`page.goto(url[, options])`"},{"kind":"text","text":"](https://playwright.dev/docs/api/class-page#page-goto-option-wait-until)"}]},"sources":[{"fileName":"packages/playwright/src/PlaywrightOptions.ts","line":31,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"load"},{"type":"literal","value":"domcontentloaded"},{"type":"literal","value":"networkidle"},{"type":"literal","value":"commit"}]}},{"id":5119,"name":"defaultTimeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"This setting will change the default maximum time for all Playwright methods accepting "},{"kind":"code","text":"`timeout`"},{"kind":"text","text":" option.\\n\\n#### Learn more\\n- [Playwright "},{"kind":"code","text":"`page.setDefaultTimeout(timeout)`"},{"kind":"text","text":"](https://playwright.dev/docs/api/class-page#page-set-default-timeout)"}]},"sources":[{"fileName":"packages/playwright/src/PlaywrightOptions.ts","line":39,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":5120,"name":"acceptDownloads","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether to automatically download all the attachments. Defaults to "},{"kind":"code","text":"`true`"},{"kind":"text","text":" where all the downloads are accepted."}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.acceptDownloads"}},{"id":5121,"name":"baseURL","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"When using [page.goto(url[, options])](https://playwright.dev/docs/api/class-page#page-goto),\\n[page.route(url, handler[, options])](https://playwright.dev/docs/api/class-page#page-route),\\n[page.waitForURL(url[, options])](https://playwright.dev/docs/api/class-page#page-wait-for-url),\\n[page.waitForRequest(urlOrPredicate[, options])](https://playwright.dev/docs/api/class-page#page-wait-for-request),\\nor\\n[page.waitForResponse(urlOrPredicate[, options])](https://playwright.dev/docs/api/class-page#page-wait-for-response)\\nit takes the base URL in consideration by using the\\n["},{"kind":"code","text":"`URL()`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/API/URL/URL) constructor for building the corresponding URL.\\nUnset by default. Examples:\\n- baseURL: "},{"kind":"code","text":"`http://localhost:3000`"},{"kind":"text","text":" and navigating to "},{"kind":"code","text":"`/bar.html`"},{"kind":"text","text":" results in "},{"kind":"code","text":"`http://localhost:3000/bar.html`"},{"kind":"text","text":"\\n- baseURL: "},{"kind":"code","text":"`http://localhost:3000/foo/`"},{"kind":"text","text":" and navigating to "},{"kind":"code","text":"`./bar.html`"},{"kind":"text","text":" results in\\n  "},{"kind":"code","text":"`http://localhost:3000/foo/bar.html`"},{"kind":"text","text":"\\n- baseURL: "},{"kind":"code","text":"`http://localhost:3000/foo`"},{"kind":"text","text":" (without trailing slash) and navigating to "},{"kind":"code","text":"`./bar.html`"},{"kind":"text","text":" results in\\n  "},{"kind":"code","text":"`http://localhost:3000/bar.html`"}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.baseURL"}},{"id":5122,"name":"bypassCSP","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Toggles bypassing page\'s Content-Security-Policy. Defaults to "},{"kind":"code","text":"`false`"},{"kind":"text","text":"."}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.bypassCSP"}},{"id":5123,"name":"clientCertificates","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"TLS Client Authentication allows the server to request a client certificate and verify it.\\n\\n**Details**\\n\\nAn array of client certificates to be used. Each certificate object must have both "},{"kind":"code","text":"`certPath`"},{"kind":"text","text":" and "},{"kind":"code","text":"`keyPath`"},{"kind":"text","text":" or a\\nsingle "},{"kind":"code","text":"`pfxPath`"},{"kind":"text","text":" to load the client certificate. Optionally, "},{"kind":"code","text":"`passphrase`"},{"kind":"text","text":" property should be provided if the\\ncertficiate is encrypted. The "},{"kind":"code","text":"`origin`"},{"kind":"text","text":" property should be provided with an exact match to the request origin that\\nthe certificate is valid for.\\n\\n**NOTE** Using Client Certificates in combination with Proxy Servers is not supported.\\n\\n**NOTE** When using WebKit on macOS, accessing "},{"kind":"code","text":"`localhost`"},{"kind":"text","text":" will not pick up client certificates. You can make it\\nwork by replacing "},{"kind":"code","text":"`localhost`"},{"kind":"text","text":" with "},{"kind":"code","text":"`local.playwright`"},{"kind":"text","text":"."}]},"sources":[],"type":{"type":"array","elementType":{"type":"reflection","declaration":{"id":5124,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":5125,"name":"origin","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Exact origin that the certificate is valid for. Origin includes "},{"kind":"code","text":"`https`"},{"kind":"text","text":" protocol, a hostname and optionally a port."}]},"sources":[],"type":{"type":"intrinsic","name":"string"}},{"id":5126,"name":"certPath","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Path to the file with the certificate in PEM format."}]},"sources":[],"type":{"type":"intrinsic","name":"string"}},{"id":5127,"name":"keyPath","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Path to the file with the private key in PEM format."}]},"sources":[],"type":{"type":"intrinsic","name":"string"}},{"id":5128,"name":"pfxPath","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Path to the PFX or PKCS12 encoded private key and certificate chain."}]},"sources":[],"type":{"type":"intrinsic","name":"string"}},{"id":5129,"name":"passphrase","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Passphrase for the private key (PEM or PFX)."}]},"sources":[],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[5125,5126,5127,5128,5129]}],"sources":[]}}},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.clientCertificates"}},{"id":5130,"name":"colorScheme","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Emulates "},{"kind":"code","text":"`\'prefers-colors-scheme\'`"},{"kind":"text","text":" media feature, supported values are "},{"kind":"code","text":"`\'light\'`"},{"kind":"text","text":", "},{"kind":"code","text":"`\'dark\'`"},{"kind":"text","text":", "},{"kind":"code","text":"`\'no-preference\'`"},{"kind":"text","text":". See\\n[page.emulateMedia([options])](https://playwright.dev/docs/api/class-page#page-emulate-media) for more details.\\nPassing "},{"kind":"code","text":"`null`"},{"kind":"text","text":" resets emulation to system defaults. Defaults to "},{"kind":"code","text":"`\'light\'`"},{"kind":"text","text":"."}]},"sources":[],"type":{"type":"union","types":[{"type":"literal","value":"light"},{"type":"literal","value":"dark"},{"type":"literal","value":"no-preference"}]},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.colorScheme"}},{"id":5131,"name":"deviceScaleFactor","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Specify device scale factor (can be thought of as dpr). Defaults to "},{"kind":"code","text":"`1`"},{"kind":"text","text":". Learn more about\\n[emulating devices with device scale factor](https://playwright.dev/docs/emulation#devices)."}]},"sources":[],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.deviceScaleFactor"}},{"id":5132,"name":"extraHTTPHeaders","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"An object containing additional HTTP headers to be sent with every request. Defaults to none."}]},"sources":[],"type":{"type":"reflection","declaration":{"id":5133,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"indexSignature":{"id":5134,"name":"__index","variant":"signature","kind":8192,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":5135,"name":"key","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}}},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.extraHTTPHeaders"}},{"id":5136,"name":"forcedColors","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Emulates "},{"kind":"code","text":"`\'forced-colors\'`"},{"kind":"text","text":" media feature, supported values are "},{"kind":"code","text":"`\'active\'`"},{"kind":"text","text":", "},{"kind":"code","text":"`\'none\'`"},{"kind":"text","text":". See\\n[page.emulateMedia([options])](https://playwright.dev/docs/api/class-page#page-emulate-media) for more details.\\nPassing "},{"kind":"code","text":"`null`"},{"kind":"text","text":" resets emulation to system defaults. Defaults to "},{"kind":"code","text":"`\'none\'`"},{"kind":"text","text":"."}]},"sources":[],"type":{"type":"union","types":[{"type":"literal","value":"active"},{"type":"literal","value":"none"}]},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.forcedColors"}},{"id":5137,"name":"geolocation","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Geolocation"},"name":"Geolocation","package":"playwright-core"},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.geolocation"}},{"id":5138,"name":"hasTouch","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Specifies if viewport supports touch events. Defaults to false. Learn more about\\n[mobile emulation](https://playwright.dev/docs/emulation#devices)."}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.hasTouch"}},{"id":5139,"name":"httpCredentials","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Credentials for [HTTP authentication](https://developer.mozilla.org/en-US/docs/Web/HTTP/Authentication). If no\\norigin is specified, the username and password are sent to any servers upon unauthorized responses."}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"HTTPCredentials"},"name":"HTTPCredentials","package":"playwright-core"},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.httpCredentials"}},{"id":5140,"name":"ignoreHTTPSErrors","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether to ignore HTTPS errors when sending network requests. Defaults to "},{"kind":"code","text":"`false`"},{"kind":"text","text":"."}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.ignoreHTTPSErrors"}},{"id":5141,"name":"isMobile","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether the "},{"kind":"code","text":"`meta viewport`"},{"kind":"text","text":" tag is taken into account and touch events are enabled. isMobile is a part of device,\\nso you don\'t actually need to set it manually. Defaults to "},{"kind":"code","text":"`false`"},{"kind":"text","text":" and is not supported in Firefox. Learn more\\nabout [mobile emulation](https://playwright.dev/docs/emulation#ismobile)."}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.isMobile"}},{"id":5142,"name":"javaScriptEnabled","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether or not to enable JavaScript in the context. Defaults to "},{"kind":"code","text":"`true`"},{"kind":"text","text":". Learn more about\\n[disabling JavaScript](https://playwright.dev/docs/emulation#javascript-enabled)."}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.javaScriptEnabled"}},{"id":5143,"name":"locale","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Specify user locale, for example "},{"kind":"code","text":"`en-GB`"},{"kind":"text","text":", "},{"kind":"code","text":"`de-DE`"},{"kind":"text","text":", etc. Locale will affect "},{"kind":"code","text":"`navigator.language`"},{"kind":"text","text":" value,\\n"},{"kind":"code","text":"`Accept-Language`"},{"kind":"text","text":" request header value as well as number and date formatting rules. Defaults to the system default\\nlocale. Learn more about emulation in our [emulation guide](https://playwright.dev/docs/emulation#locale--timezone)."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.locale"}},{"id":5144,"name":"logger","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Logger sink for Playwright logging."}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Logger"},"name":"Logger","package":"playwright-core"},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.logger"}},{"id":5145,"name":"offline","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether to emulate network being offline. Defaults to "},{"kind":"code","text":"`false`"},{"kind":"text","text":". Learn more about\\n[network emulation](https://playwright.dev/docs/emulation#offline)."}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.offline"}},{"id":5146,"name":"permissions","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A list of permissions to grant to all pages in this context. See\\n[browserContext.grantPermissions(permissions[, options])](https://playwright.dev/docs/api/class-browsercontext#browser-context-grant-permissions)\\nfor more details. Defaults to none."}]},"sources":[],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.permissions"}},{"id":5147,"name":"proxy","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Network proxy settings to use with this context. Defaults to none.\\n\\n**NOTE** For Chromium on Windows the browser needs to be launched with the global proxy for this option to work. If\\nall contexts override the proxy, global proxy will be never used and can be any string, for example "},{"kind":"code","text":"`launch({\\nproxy: { server: \'http://per-context\' } })`"},{"kind":"text","text":"."}]},"sources":[],"type":{"type":"reflection","declaration":{"id":5148,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":5149,"name":"server","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Proxy to be used for all requests. HTTP and SOCKS proxies are supported, for example "},{"kind":"code","text":"`http://myproxy.com:3128`"},{"kind":"text","text":" or\\n"},{"kind":"code","text":"`socks5://myproxy.com:3128`"},{"kind":"text","text":". Short form "},{"kind":"code","text":"`myproxy.com:3128`"},{"kind":"text","text":" is considered an HTTP proxy."}]},"sources":[],"type":{"type":"intrinsic","name":"string"}},{"id":5150,"name":"bypass","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional comma-separated domains to bypass proxy, for example "},{"kind":"code","text":"`\\".com, chromium.org, .domain.com\\"`"},{"kind":"text","text":"."}]},"sources":[],"type":{"type":"intrinsic","name":"string"}},{"id":5151,"name":"username","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional username to use if HTTP proxy requires authentication."}]},"sources":[],"type":{"type":"intrinsic","name":"string"}},{"id":5152,"name":"password","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional password to use if HTTP proxy requires authentication."}]},"sources":[],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[5149,5150,5151,5152]}],"sources":[]}},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.proxy"}},{"id":5153,"name":"recordHar","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Enables [HAR](http://www.softwareishard.com/blog/har-12-spec) recording for all pages into "},{"kind":"code","text":"`recordHar.path`"},{"kind":"text","text":" file.\\nIf not specified, the HAR is not recorded. Make sure to await\\n[browserContext.close([options])](https://playwright.dev/docs/api/class-browsercontext#browser-context-close) for\\nthe HAR to be saved."}]},"sources":[],"type":{"type":"reflection","declaration":{"id":5154,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":5155,"name":"omitContent","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional setting to control whether to omit request content from the HAR. Defaults to "},{"kind":"code","text":"`false`"},{"kind":"text","text":". Deprecated, use\\n"},{"kind":"code","text":"`content`"},{"kind":"text","text":" policy instead."}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"}},{"id":5156,"name":"content","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional setting to control resource content management. If "},{"kind":"code","text":"`omit`"},{"kind":"text","text":" is specified, content is not persisted. If\\n"},{"kind":"code","text":"`attach`"},{"kind":"text","text":" is specified, resources are persisted as separate files or entries in the ZIP archive. If "},{"kind":"code","text":"`embed`"},{"kind":"text","text":" is\\nspecified, content is stored inline the HAR file as per HAR specification. Defaults to "},{"kind":"code","text":"`attach`"},{"kind":"text","text":" for "},{"kind":"code","text":"`.zip`"},{"kind":"text","text":" output\\nfiles and to "},{"kind":"code","text":"`embed`"},{"kind":"text","text":" for all other file extensions."}]},"sources":[],"type":{"type":"union","types":[{"type":"literal","value":"omit"},{"type":"literal","value":"embed"},{"type":"literal","value":"attach"}]}},{"id":5157,"name":"path","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Path on the filesystem to write the HAR file to. If the file name ends with "},{"kind":"code","text":"`.zip`"},{"kind":"text","text":", "},{"kind":"code","text":"`content: \'attach\'`"},{"kind":"text","text":" is used by\\ndefault."}]},"sources":[],"type":{"type":"intrinsic","name":"string"}},{"id":5158,"name":"mode","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"When set to "},{"kind":"code","text":"`minimal`"},{"kind":"text","text":", only record information necessary for routing from HAR. This omits sizes, timing, page,\\ncookies, security and other types of HAR information that are not used when replaying from HAR. Defaults to "},{"kind":"code","text":"`full`"},{"kind":"text","text":"."}]},"sources":[],"type":{"type":"union","types":[{"type":"literal","value":"full"},{"type":"literal","value":"minimal"}]}},{"id":5159,"name":"urlFilter","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A glob or regex pattern to filter requests that are stored in the HAR. When a "},{"kind":"code","text":"`baseURL`"},{"kind":"text","text":" via the context options was\\nprovided and the passed URL is a path, it gets merged via the\\n["},{"kind":"code","text":"`new URL()`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/API/URL/URL) constructor. Defaults to none."}]},"sources":[],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"RegExp"},"name":"RegExp","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/RegExp"}]}}],"groups":[{"title":"Properties","children":[5155,5156,5157,5158,5159]}],"sources":[]}},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.recordHar"}},{"id":5160,"name":"recordVideo","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Enables video recording for all pages into "},{"kind":"code","text":"`recordVideo.dir`"},{"kind":"text","text":" directory. If not specified videos are not recorded.\\nMake sure to await\\n[browserContext.close([options])](https://playwright.dev/docs/api/class-browsercontext#browser-context-close) for\\nvideos to be saved."}]},"sources":[],"type":{"type":"reflection","declaration":{"id":5161,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":5162,"name":"dir","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Path to the directory to put videos into."}]},"sources":[],"type":{"type":"intrinsic","name":"string"}},{"id":5163,"name":"size","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional dimensions of the recorded videos. If not specified the size will be equal to "},{"kind":"code","text":"`viewport`"},{"kind":"text","text":" scaled down to\\nfit into 800x800. If "},{"kind":"code","text":"`viewport`"},{"kind":"text","text":" is not configured explicitly the video size defaults to 800x450. Actual picture of\\neach page will be scaled down if necessary to fit the specified size."}]},"sources":[],"type":{"type":"reflection","declaration":{"id":5164,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":5165,"name":"width","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Video frame width."}]},"sources":[],"type":{"type":"intrinsic","name":"number"}},{"id":5166,"name":"height","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Video frame height."}]},"sources":[],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[5165,5166]}],"sources":[]}}}],"groups":[{"title":"Properties","children":[5162,5163]}],"sources":[]}},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.recordVideo"}},{"id":5167,"name":"reducedMotion","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Emulates "},{"kind":"code","text":"`\'prefers-reduced-motion\'`"},{"kind":"text","text":" media feature, supported values are "},{"kind":"code","text":"`\'reduce\'`"},{"kind":"text","text":", "},{"kind":"code","text":"`\'no-preference\'`"},{"kind":"text","text":". See\\n[page.emulateMedia([options])](https://playwright.dev/docs/api/class-page#page-emulate-media) for more details.\\nPassing "},{"kind":"code","text":"`null`"},{"kind":"text","text":" resets emulation to system defaults. Defaults to "},{"kind":"code","text":"`\'no-preference\'`"},{"kind":"text","text":"."}]},"sources":[],"type":{"type":"union","types":[{"type":"literal","value":"reduce"},{"type":"literal","value":"no-preference"}]},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.reducedMotion"}},{"id":5168,"name":"screen","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Emulates consistent window screen size available inside web page via "},{"kind":"code","text":"`window.screen`"},{"kind":"text","text":". Is only used when the\\n"},{"kind":"code","text":"`viewport`"},{"kind":"text","text":" is set."}]},"sources":[],"type":{"type":"reflection","declaration":{"id":5169,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":5170,"name":"width","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"page width in pixels."}]},"sources":[],"type":{"type":"intrinsic","name":"number"}},{"id":5171,"name":"height","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"page height in pixels."}]},"sources":[],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[5170,5171]}],"sources":[]}},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.screen"}},{"id":5172,"name":"serviceWorkers","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether to allow sites to register Service workers. Defaults to "},{"kind":"code","text":"`\'allow\'`"},{"kind":"text","text":".\\n- "},{"kind":"code","text":"`\'allow\'`"},{"kind":"text","text":": [Service Workers](https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API) can be\\n  registered.\\n- "},{"kind":"code","text":"`\'block\'`"},{"kind":"text","text":": Playwright will block all registration of Service Workers."}]},"sources":[],"type":{"type":"union","types":[{"type":"literal","value":"allow"},{"type":"literal","value":"block"}]},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.serviceWorkers"}},{"id":5173,"name":"storageState","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Learn more about [storage state and auth](https://playwright.dev/docs/auth).\\n\\nPopulates context with given storage state. This option can be used to initialize context with logged-in\\ninformation obtained via\\n[browserContext.storageState([options])](https://playwright.dev/docs/api/class-browsercontext#browser-context-storage-state)."}]},"sources":[],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reflection","declaration":{"id":5174,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":5175,"name":"cookies","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Cookies to set for context"}]},"sources":[],"type":{"type":"array","elementType":{"type":"reflection","declaration":{"id":5176,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":5177,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"}},{"id":5178,"name":"value","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"}},{"id":5179,"name":"domain","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Domain and path are required. For the cookie to apply to all subdomains as well, prefix domain with a dot, like\\nthis: \\".example.com\\""}]},"sources":[],"type":{"type":"intrinsic","name":"string"}},{"id":5180,"name":"path","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Domain and path are required"}]},"sources":[],"type":{"type":"intrinsic","name":"string"}},{"id":5181,"name":"expires","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Unix time in seconds."}]},"sources":[],"type":{"type":"intrinsic","name":"number"}},{"id":5182,"name":"httpOnly","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"boolean"}},{"id":5183,"name":"secure","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"boolean"}},{"id":5184,"name":"sameSite","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"sameSite flag"}]},"sources":[],"type":{"type":"union","types":[{"type":"literal","value":"Lax"},{"type":"literal","value":"Strict"},{"type":"literal","value":"None"}]}}],"groups":[{"title":"Properties","children":[5177,5178,5179,5180,5181,5182,5183,5184]}],"sources":[]}}}},{"id":5185,"name":"origins","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"localStorage to set for context"}]},"sources":[],"type":{"type":"array","elementType":{"type":"reflection","declaration":{"id":5186,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":5187,"name":"origin","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"}},{"id":5188,"name":"localStorage","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"array","elementType":{"type":"reflection","declaration":{"id":5189,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":5190,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"}},{"id":5191,"name":"value","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[5190,5191]}],"sources":[]}}}}],"groups":[{"title":"Properties","children":[5187,5188]}],"sources":[]}}}}],"groups":[{"title":"Properties","children":[5175,5185]}],"sources":[]}}]},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.storageState"}},{"id":5192,"name":"strictSelectors","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If set to true, enables strict selectors mode for this context. In the strict selectors mode all operations on\\nselectors that imply single target DOM element will throw when more than one element matches the selector. This\\noption does not affect any Locator APIs (Locators are always strict). Defaults to "},{"kind":"code","text":"`false`"},{"kind":"text","text":". See "},{"kind":"inline-tag","tag":"@link","text":"Locator","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"tsLinkText":""},{"kind":"text","text":" to\\nlearn more about the strict mode."}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.strictSelectors"}},{"id":5193,"name":"timezoneId","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Changes the timezone of the context. See\\n[ICU\'s metaZones.txt](https://cs.chromium.org/chromium/src/third_party/icu/source/data/misc/metaZones.txt?rcl=faee8bc70570192d82d2978a71e2a615788597d1)\\nfor a list of supported timezone IDs. Defaults to the system timezone."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.timezoneId"}},{"id":5194,"name":"userAgent","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Specific user agent to use in this context."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.userAgent"}},{"id":5195,"name":"videoSize","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[],"blockTags":[{"tag":"@deprecated","content":[{"kind":"text","text":"Use "},{"kind":"code","text":"`recordVideo`"},{"kind":"text","text":" instead."}]}]},"sources":[],"type":{"type":"reflection","declaration":{"id":5196,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":5197,"name":"width","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Video frame width."}]},"sources":[],"type":{"type":"intrinsic","name":"number"}},{"id":5198,"name":"height","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Video frame height."}]},"sources":[],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[5197,5198]}],"sources":[]}},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.videoSize"}},{"id":5199,"name":"videosPath","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[],"blockTags":[{"tag":"@deprecated","content":[{"kind":"text","text":"Use "},{"kind":"code","text":"`recordVideo`"},{"kind":"text","text":" instead."}]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.videosPath"}},{"id":5200,"name":"viewport","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Emulates consistent viewport for each page. Defaults to an 1280x720 viewport. Use "},{"kind":"code","text":"`null`"},{"kind":"text","text":" to disable the consistent\\nviewport emulation. Learn more about [viewport emulation](https://playwright.dev/docs/emulation#viewport).\\n\\n**NOTE** The "},{"kind":"code","text":"`null`"},{"kind":"text","text":" value opts out from the default presets, makes viewport depend on the host window size defined\\nby the operating system. It makes the execution of the tests non-deterministic."}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"ViewportSize"},"name":"ViewportSize","package":"playwright-core"},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.viewport"}}],"groups":[{"title":"Properties","children":[5117,5118,5119,5120,5121,5122,5123,5130,5131,5132,5136,5137,5138,5139,5140,5141,5142,5143,5144,5145,5146,5147,5153,5160,5167,5168,5172,5173,5192,5193,5194,5195,5199,5200]}],"sources":[{"fileName":"packages/playwright/src/PlaywrightOptions.ts","line":11,"character":17}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"BrowserContextOptions"},"name":"BrowserContextOptions","package":"playwright-core"}],"permalink":"/api/playwright/interface/PlaywrightOptions","previousId":5201,"nextId":5358},{"id":5201,"name":"BrowseTheWebWithPlaywright","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"This implementation of the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\nenables the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to interact with web front-ends using [Playwright](https://playwright.dev/).\\n\\n## Using Playwright to "},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"\\n\\nIn the example below, we configure the ability to ["},{"kind":"code","text":"`BrowseTheWebWithPlaywright`"},{"kind":"text","text":"](/api/playwright/class/BrowseTheWebWithPlaywright/) with a Playwright\\n["},{"kind":"code","text":"`Browser`"},{"kind":"text","text":"](https://playwright.dev/docs/api/class-browser) so that Serenity/JS [actors](/api/core/class/Actor/)\\ncan create a new ["},{"kind":"code","text":"`BrowserContext`"},{"kind":"text","text":"](https://playwright.dev/docs/api/class-browsercontext) and\\ninstantiate Playwright ["},{"kind":"code","text":"`page`"},{"kind":"text","text":"s](https://playwright.dev/docs/api/class-page) as and when needed.\\n\\nThis configuration allows Serenity/JS to control the process of launching and shutting down browser instances\\nand is useful when your test runner, e.g. [Cucumber.js](/api/cucumber), doesn\'t offer this functionality.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { BrowseTheWebWithPlaywright } from \'@serenity-js/playwright\'\\nimport { By, Navigate, PageElement, Text } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { Browser, chromium } from \'playwright\'\\n\\nconst HomePage = {\\n  title: () =>\\n    PageElement.located(By.css(\'h1\')).describedAs(\'title\')\\n}\\n\\nconst browser = await chromium.launch({ headless: true });\\n\\nawait actorCalled(\'Wendy\')\\n  .whoCan(BrowseTheWebWithPlaywright.using(browser))\\n  .attemptsTo(\\n    Navigate.to(`https://serenity-js.org`),\\n    Ensure.that(Text.of(HomePage.title()), equals(\'Serenity/JS\')),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Using "},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":" with an existing Playwright "},{"kind":"code","text":"`page`"},{"kind":"text","text":"\\n\\nTest runners like [Playwright Test](/api/playwright-test/) manage Playwright browsers for you\\nand offer a ["},{"kind":"code","text":"`page`"},{"kind":"text","text":"](https://playwright.dev/docs/api/class-page) instance you can\\ninject into the ability to ["},{"kind":"code","text":"`BrowseTheWebWithPlaywright`"},{"kind":"text","text":"](/api/playwright/class/BrowseTheWebWithPlaywright/).\\n\\nNote that [Serenity/JS Playwright Test module](/api/playwright-test/)\\nautomatically configures all your [actors](/api/core/class/Actor/)\\nwith an ability to ["},{"kind":"code","text":"`BrowseTheWebWithPlaywright`"},{"kind":"text","text":"](/api/playwright/class/BrowseTheWebWithPlaywright/),\\nso you don\'t need to do it by hand unless you want to override the [default configuration](/api/playwright-test/interface/SerenityOptions/).\\n\\nThe example below demonstrates how to use the ["},{"kind":"code","text":"`BrowseTheWebWithPlaywright.usingPage`"},{"kind":"text","text":"](/api/playwright/class/BrowseTheWebWithPlaywright/#usingPage) API and\\noverride the default [cast](/api/core/class/Cast/) of actors.\\n\\n"},{"kind":"code","text":"```ts\\nimport { describe, it, test } from \'@playwright/playwright-test\'\\nimport { BrowseTheWebWithPlaywright } from \'@serenity-js/playwright\'\\nimport { By, Navigate, PageElement, Text } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nconst HomePage = {\\n  title: () =>\\n    PageElement.located(By.css(\'h1\')).describedAs(\'title\')\\n}\\n\\ndescribe(\'Serenity/JS with Playwright\', () => {\\n\\n  test.use({\\n    actors: async ({ page, contextOptions }, use) => {\\n      await use(\\n        Cast.where((actorName: string) => {\\n          return actor.whoCan(\\n            BrowseTheWebWithPlaywright.usingPage(page),\\n            // ... add any other abilities\\n          )\\n        })\\n      )\\n    }\\n  })\\n\\n  it(\'lets you reuse an existing page\', async ({ actor }) => {\\n    await actor.attemptsTo(\\n      Navigate.to(`https://serenity-js.org`),\\n      Ensure.that(Text.of(HomePage.title()), equals(\'Serenity/JS\')),\\n    )\\n  })\\n})\\n```"},{"kind":"text","text":"\\n\\n## Configuring Playwright\\n\\nIf you\'re using Serenity/JS with [Playwright Test](/handbook/test-runners/playwright-test/),\\nSerenity/JS will automatically pick up your configuration from the ["},{"kind":"code","text":"`playwright.config.ts`"},{"kind":"text","text":"](https://playwright.dev/docs/test-configuration) file.\\n\\nWith other [test runners](/handbook/test-runners/), you can configure Playwright by:\\n- providing the browser-level configuration when calling ["},{"kind":"code","text":"`BrowserType.launch`"},{"kind":"text","text":"](https://playwright.dev/docs/api/class-browsertype#browser-type-launch),\\n- providing the browser context-level ["},{"kind":"code","text":"`PlaywrightOptions`"},{"kind":"text","text":"](/api/playwright/interface/PlaywrightOptions/)\\nwhen initialising the ability to "},{"kind":"code","text":"`BrowseTheWebWithPlaywright`"},{"kind":"text","text":".\\n\\nThe code snippet below demonstrates how to configure the browser and some popular browser context options,\\nsuch as\\n["},{"kind":"code","text":"`viewport`"},{"kind":"text","text":" size](https://playwright.dev/docs/api/class-browser#browser-new-context-option-viewport),\\n["},{"kind":"code","text":"`geolocation`"},{"kind":"text","text":"](https://playwright.dev/docs/api/class-browser#browser-new-page-option-geolocation),\\nand ["},{"kind":"code","text":"`permissions`"},{"kind":"text","text":"](https://playwright.dev/docs/api/class-browser#browser-new-page-option-permissions),\\nbut you can use it to configure any other option available in Playwright, like\\n["},{"kind":"code","text":"`userAgent`"},{"kind":"text","text":"](https://playwright.dev/docs/api/class-browser#browser-new-context-option-user-agent)\\nor ["},{"kind":"code","text":"`storageState`"},{"kind":"text","text":"](https://playwright.dev/docs/api/class-browser#browser-new-context-option-storage-state).\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { BrowseTheWebWithPlaywright } from \'@serenity-js/playwright\'\\nimport { Navigate } from \'@serenity-js/web\'\\nimport { Browser, chromium } from \'playwright\'\\n\\n// specify browser launch options\\nconst browser = await chromium.launch({\\n  headless: true\\n});\\n\\nawait actorCalled(\'Wendy\')\\n  .whoCan(BrowseTheWebWithPlaywright.using(browser, {\\n     // specify browser context options\\n     viewport:    { width: 1600, height: 1200 },\\n     geolocation: { longitude: 51.50084271042897, latitude: -0.12462540129500639 },\\n     permissions: [ \'geolocation\' ],\\n\\n     defaultNavigationTimeout: 30_000,\\n     defaultTimeout: 10_000\\n\\n     // ... and so on\\n  }))\\n  .attemptsTo(\\n    Navigate.to(`https://serenity-js.org`),\\n    // ...\\n  )\\n```"},{"kind":"text","text":"\\n\\nNote that in addition to all the standard Playwright BrowserContextOptions, you can also provide several others defined in Serenity/JS ["},{"kind":"code","text":"`PlaywrightOptions`"},{"kind":"text","text":"](/api/playwright/interface/PlaywrightOptions/), such as:\\n- "},{"kind":"code","text":"`defaultNavigationTimeout`"},{"kind":"text","text":", which changes the default maximum navigation timeout for the browser context,\\n- "},{"kind":"code","text":"`defaultTimeout`"},{"kind":"text","text":", which changes the default maximum time for all Playwright methods accepting the "},{"kind":"code","text":"`timeout`"},{"kind":"text","text":" option.\\n\\n## Learn more\\n- [Full list of Playwright "},{"kind":"code","text":"`BrowserContextOptions`"},{"kind":"text","text":"](https://playwright.dev/docs/api/class-browser#browser-new-context)\\n- [Playwright website](https://playwright.dev/)\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\n- ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/)\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)"}]},"children":[{"id":5202,"name":"using","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/abilities/BrowseTheWebWithPlaywright.ts","line":159,"character":11}],"signatures":[{"id":5203,"name":"using","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/abilities/BrowseTheWebWithPlaywright.ts","line":159,"character":11}],"parameters":[{"id":5204,"name":"browser","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Browser"},"name":"Browser","package":"playwright-core"}},{"id":5205,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":5116,"name":"PlaywrightOptions","package":"@serenity-js/playwright"}}],"type":{"type":"reference","target":5201,"name":"BrowseTheWebWithPlaywright","package":"@serenity-js/playwright"}}]},{"id":5206,"name":"usingPage","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/abilities/BrowseTheWebWithPlaywright.ts","line":163,"character":11}],"signatures":[{"id":5207,"name":"usingPage","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/abilities/BrowseTheWebWithPlaywright.ts","line":163,"character":11}],"parameters":[{"id":5208,"name":"page","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Page"},"name":"Page","package":"playwright-core"}},{"id":5209,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":5116,"name":"PlaywrightOptions","package":"@serenity-js/playwright"}}],"type":{"type":"reference","target":5201,"name":"BrowseTheWebWithPlaywright","package":"@serenity-js/playwright"}}]},{"id":5229,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/abilities/Ability.ts","line":406,"character":4}],"signatures":[{"id":5230,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a JSON representation of the ability and its current state, if available.\\nThe purpose of this method is to enable reporting the state of the ability in a human-readable format,\\nrather than to serialise and deserialise the ability itself."}]},"sources":[{"fileName":"packages/core/lib/screenplay/abilities/Ability.ts","line":406,"character":4}],"type":{"type":"reference","target":596,"name":"SerialisedAbility","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.toJSON"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.toJSON"}},{"id":5231,"name":"abilityType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/abilities/Ability.ts","line":436,"character":4}],"signatures":[{"id":5232,"name":"abilityType","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the most abstract type of this Ability instance,\\nspecifically the first class in the inheritance hierarchy that directly extends the "},{"kind":"code","text":"`Ability`"},{"kind":"text","text":" class.\\n\\n"},{"kind":"code","text":"```ts\\nimport { Ability } from \'@serenity-js/core\';\\n\\nclass MyAbility extends Ability {}\\nclass MySpecialisedAbility extends MyAbility {}\\n\\nnew MyAbility().abilityType();            // returns MyAbility\\nnew MySpecialisedAbility().abilityType(); // returns MyAbility\\n```"}]},"sources":[{"fileName":"packages/core/lib/screenplay/abilities/Ability.ts","line":436,"character":4}],"type":{"type":"reference","target":511,"typeArguments":[{"type":"reference","target":490,"name":"Ability","package":"@serenity-js/core"}],"name":"AbilityType","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.abilityType"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.abilityType"}},{"id":5220,"name":"discard","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/abilities/BrowseTheWebWithPlaywright.ts","line":174,"character":10}],"signatures":[{"id":5221,"name":"discard","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Automatically closes any open [pages](/api/web/class/Page/) when the [SceneFinishes](/api/core-events/class/SceneFinishes/)\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`PlaywrightBrowsingSession.closeAllPages`"},{"kind":"text","text":"](/api/playwright/class/PlaywrightBrowsingSession/#closeAllPages)\\n- ["},{"kind":"code","text":"`Discardable`"},{"kind":"text","text":"](/api/core/interface/Discardable/)"}]},"sources":[{"fileName":"packages/playwright/src/screenplay/abilities/BrowseTheWebWithPlaywright.ts","line":174,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"implementationOf":{"type":"reference","target":-1,"name":"Discardable.discard"}}],"implementationOf":{"type":"reference","target":-1,"name":"Discardable.discard"}},{"id":5217,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":83,"character":4}],"signatures":[{"id":5218,"name":"new BrowseTheWebWithPlaywright","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":83,"character":4}],"parameters":[{"id":5219,"name":"session","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":3867,"typeArguments":[{"type":"reference","target":4237,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"}],"name":"Page","package":"@serenity-js/web"}],"name":"BrowsingSession","package":"@serenity-js/web"}}],"type":{"type":"reference","target":5201,"name":"BrowseTheWebWithPlaywright","package":"@serenity-js/playwright"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb<playwright.Locator>.constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb<playwright.Locator>.constructor"}},{"id":5223,"name":"currentPage","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":87,"character":4}],"signatures":[{"id":5224,"name":"currentPage","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/) representing the currently active browser tab."}]},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":87,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4237,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"}],"name":"Page","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.currentPage"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.currentPage"}},{"id":5225,"name":"allPages","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":92,"character":4}],"signatures":[{"id":5226,"name":"allPages","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns an array of [pages](/api/web/class/Page/) representing all the browser tabs\\navailable in the current ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/)."}]},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":92,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4237,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"}],"name":"Page","package":"@serenity-js/web"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.allPages"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.allPages"}},{"id":5227,"name":"browserCapabilities","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":96,"character":4}],"signatures":[{"id":5228,"name":"browserCapabilities","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns [basic meta-data](/api/web/interface/BrowserCapabilities/) about the browser associated with this ability."}]},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":96,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":3863,"name":"BrowserCapabilities","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.browserCapabilities"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.browserCapabilities"}}],"groups":[{"title":"Constructors","children":[5217]},{"title":"Methods","children":[5202,5206,5229,5231,5220,5223,5225,5227]}],"sources":[{"fileName":"packages/playwright/src/screenplay/abilities/BrowseTheWebWithPlaywright.ts","line":157,"character":13}],"extendedTypes":[{"type":"reference","target":3251,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"playwright.Locator","package":"playwright-core","qualifiedName":"Locator"}],"name":"BrowseTheWeb","package":"@serenity-js/web"}],"implementedTypes":[{"type":"reference","target":553,"name":"Discardable","package":"@serenity-js/core"}],"permalink":"/api/playwright/class/BrowseTheWebWithPlaywright","nextId":5116},{"id":5358,"name":"PlaywrightBrowsingSession","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"Playwright-specific implementation of ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/)."}]},"children":[{"id":5367,"name":"browserCapabilities","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":34,"character":20}],"signatures":[{"id":5368,"name":"browserCapabilities","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns [basic meta-data](/api/web/interface/BrowserCapabilities/) about the browser associated with this ability.\\n\\n**Please note** that since Playwright does not expose information about the operating system\\nthe tests are running on, **Serenity/JS assumes that the tests are running locally**\\nand therefore returns the value of Node.js "},{"kind":"code","text":"`process.platform`"},{"kind":"text","text":" for "},{"kind":"code","text":"`platformName`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":34,"character":20}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":3863,"name":"BrowserCapabilities","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession.browserCapabilities"}}],"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession.browserCapabilities"}},{"id":5369,"name":"cookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":36,"character":10}],"signatures":[{"id":5370,"name":"cookie","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":36,"character":10}],"parameters":[{"id":5371,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":3898,"name":"Cookie","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":5372,"name":"setCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":41,"character":10}],"signatures":[{"id":5373,"name":"setCookie","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":41,"character":10}],"parameters":[{"id":5374,"name":"cookie","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4004,"name":"CookieData","package":"@serenity-js/web"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":5375,"name":"deleteAllCookies","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":47,"character":10}],"signatures":[{"id":5376,"name":"deleteAllCookies","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":47,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":5384,"name":"closePagesOtherThan","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":15,"character":4}],"signatures":[{"id":5385,"name":"closePagesOtherThan","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":15,"character":4}],"parameters":[{"id":5386,"name":"pageOfInterest","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":5610,"name":"PlaywrightPage","package":"@serenity-js/playwright"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.closePagesOtherThan"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.closePagesOtherThan"}},{"id":5389,"name":"currentPage","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":27,"character":4}],"signatures":[{"id":5390,"name":"currentPage","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/) representing the currently active top-level browsing context."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":27,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":5610,"name":"PlaywrightPage","package":"@serenity-js/playwright"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.currentPage"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.currentPage"}},{"id":5391,"name":"register","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":33,"character":4}],"signatures":[{"id":5392,"name":"register","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Registers specified [pages](/api/web/class/Page/) to be managed by this ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/)."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":33,"character":4}],"parameters":[{"id":5393,"name":"pages","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":5610,"name":"PlaywrightPage","package":"@serenity-js/playwright"}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.register"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.register"}},{"id":5394,"name":"deregister","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":40,"character":4}],"signatures":[{"id":5395,"name":"deregister","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Informs this ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/) that it should no longer manage [pages](/api/web/class/Page/)\\nidentified by the given "},{"kind":"code","text":"`pageIds`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":40,"character":4}],"parameters":[{"id":5396,"name":"pageIds","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.deregister"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.deregister"}},{"id":5397,"name":"allPages","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":45,"character":4}],"signatures":[{"id":5398,"name":"allPages","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a [pages](/api/web/class/Page/) representing all the available\\ntop-level browsing context, e.g. all the open browser tabs."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":45,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":5610,"name":"PlaywrightPage","package":"@serenity-js/playwright"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.allPages"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.allPages"}},{"id":5399,"name":"registeredPageIds","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":49,"character":4}],"signatures":[{"id":5400,"name":"registeredPageIds","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the ids of any [pages](/api/web/class/Page/) this ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/) is aware of."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":49,"character":4}],"type":{"type":"array","elementType":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.registeredPageIds"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.registeredPageIds"}},{"id":5401,"name":"changeCurrentPageTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":68,"character":4}],"signatures":[{"id":5402,"name":"changeCurrentPageTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Informs the ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/) that the \\"current page\\" has changed to "},{"kind":"code","text":"`page`"},{"kind":"text","text":".\\n\\nPlease note that different Web integration tools have a different definition of what a \\"current page\\" is.\\nFor example, Selenium or WebdriverIO use a single \\"focused\\" window that a developer\\nneeds to explicitly \\"switch to\\" in their tests in order to interact with it.\\nThis is similar to how a regular user would interact with Web pages;\\nswitching from one tab to another, but not interacting with more than one\\nwindow/tab simultaneously.\\n\\nPlaywright and Puppeteer, on the other hand, don\'t have a concept of the \\"current\\" page at all, since they\\nallow the developer to interact with multiple open tabs/windows at the same time.\\n\\nWeb integration-specific implementations of this class should override this method to define\\nhow the concept of the \\"current page\\" should be interpreted by Serenity/JS."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":68,"character":4}],"parameters":[{"id":5403,"name":"page","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":5610,"name":"PlaywrightPage","package":"@serenity-js/playwright"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.changeCurrentPageTo"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.changeCurrentPageTo"}},{"id":5404,"name":"closeAllPages","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":72,"character":4}],"signatures":[{"id":5405,"name":"closeAllPages","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Closes all the pages available in this browsing context"}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":72,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.closeAllPages"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.closeAllPages"}}],"groups":[{"title":"Methods","children":[5367,5369,5372,5375,5384,5389,5391,5394,5397,5399,5401,5404]}],"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":15,"character":22}],"extendedTypes":[{"type":"reference","target":3867,"typeArguments":[{"type":"reference","target":5610,"name":"PlaywrightPage","package":"@serenity-js/playwright"}],"name":"BrowsingSession","package":"@serenity-js/web"}],"extendedBy":[{"type":"reference","target":5406,"name":"PlaywrightBrowsingSessionWithBrowser"},{"type":"reference","target":5455,"name":"PlaywrightBrowsingSessionWithPage"}],"permalink":"/api/playwright/class/PlaywrightBrowsingSession","previousId":5116,"nextId":5406},{"id":5406,"name":"PlaywrightBrowsingSessionWithBrowser","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":5425,"name":"cookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":36,"character":10}],"signatures":[{"id":5426,"name":"cookie","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":36,"character":10}],"parameters":[{"id":5427,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":3898,"name":"Cookie","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":5370,"name":"PlaywrightBrowsingSession.cookie"}}],"inheritedFrom":{"type":"reference","target":5369,"name":"PlaywrightBrowsingSession.cookie"}},{"id":5428,"name":"setCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":41,"character":10}],"signatures":[{"id":5429,"name":"setCookie","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":41,"character":10}],"parameters":[{"id":5430,"name":"cookie","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4004,"name":"CookieData","package":"@serenity-js/web"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":5373,"name":"PlaywrightBrowsingSession.setCookie"}}],"inheritedFrom":{"type":"reference","target":5372,"name":"PlaywrightBrowsingSession.setCookie"}},{"id":5431,"name":"deleteAllCookies","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":47,"character":10}],"signatures":[{"id":5432,"name":"deleteAllCookies","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":47,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":5376,"name":"PlaywrightBrowsingSession.deleteAllCookies"}}],"inheritedFrom":{"type":"reference","target":5375,"name":"PlaywrightBrowsingSession.deleteAllCookies"}},{"id":5407,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSessionWithBrowser.ts","line":13,"character":4}],"signatures":[{"id":5408,"name":"new PlaywrightBrowsingSessionWithBrowser","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSessionWithBrowser.ts","line":13,"character":4}],"parameters":[{"id":5409,"name":"browser","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Browser"},"name":"Browser","package":"playwright-core"}},{"id":5410,"name":"browserContextOptions","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":5116,"name":"PlaywrightOptions","package":"@serenity-js/playwright"}},{"id":5411,"name":"selectors","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Selectors"},"name":"Selectors","package":"playwright-core"}}],"type":{"type":"reference","target":5406,"name":"PlaywrightBrowsingSessionWithBrowser","package":"@serenity-js/playwright"},"overwrites":{"type":"reference","target":-1,"name":"PlaywrightBrowsingSession.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"PlaywrightBrowsingSession.constructor"}},{"id":5418,"name":"closeAllPages","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSessionWithBrowser.ts","line":39,"character":19}],"signatures":[{"id":5419,"name":"closeAllPages","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Closes all the pages available in this browsing context"}]},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSessionWithBrowser.ts","line":39,"character":19}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":5405,"name":"PlaywrightBrowsingSession.closeAllPages"}}],"overwrites":{"type":"reference","target":5404,"name":"PlaywrightBrowsingSession.closeAllPages"}},{"id":5420,"name":"browserCapabilities","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSessionWithBrowser.ts","line":46,"character":19}],"signatures":[{"id":5421,"name":"browserCapabilities","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns [basic meta-data](/api/web/interface/BrowserCapabilities/) about the browser associated with this ability.\\n\\n**Please note** that since Playwright does not expose information about the operating system\\nthe tests are running on, **Serenity/JS assumes that the tests are running locally**\\nand therefore returns the value of Node.js "},{"kind":"code","text":"`process.platform`"},{"kind":"text","text":" for "},{"kind":"code","text":"`platformName`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSessionWithBrowser.ts","line":46,"character":19}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":3863,"name":"BrowserCapabilities","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":5368,"name":"PlaywrightBrowsingSession.browserCapabilities"}}],"overwrites":{"type":"reference","target":5367,"name":"PlaywrightBrowsingSession.browserCapabilities"}},{"id":5437,"name":"closePagesOtherThan","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":15,"character":4}],"signatures":[{"id":5438,"name":"closePagesOtherThan","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":15,"character":4}],"parameters":[{"id":5439,"name":"pageOfInterest","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":5610,"name":"PlaywrightPage","package":"@serenity-js/playwright"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":5385,"name":"PlaywrightBrowsingSession.closePagesOtherThan"}}],"inheritedFrom":{"type":"reference","target":5384,"name":"PlaywrightBrowsingSession.closePagesOtherThan"}},{"id":5440,"name":"currentPage","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":27,"character":4}],"signatures":[{"id":5441,"name":"currentPage","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/) representing the currently active top-level browsing context."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":27,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":5610,"name":"PlaywrightPage","package":"@serenity-js/playwright"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":5390,"name":"PlaywrightBrowsingSession.currentPage"}}],"inheritedFrom":{"type":"reference","target":5389,"name":"PlaywrightBrowsingSession.currentPage"}},{"id":5442,"name":"register","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":33,"character":4}],"signatures":[{"id":5443,"name":"register","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Registers specified [pages](/api/web/class/Page/) to be managed by this ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/)."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":33,"character":4}],"parameters":[{"id":5444,"name":"pages","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":5610,"name":"PlaywrightPage","package":"@serenity-js/playwright"}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","target":5392,"name":"PlaywrightBrowsingSession.register"}}],"inheritedFrom":{"type":"reference","target":5391,"name":"PlaywrightBrowsingSession.register"}},{"id":5445,"name":"deregister","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":40,"character":4}],"signatures":[{"id":5446,"name":"deregister","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Informs this ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/) that it should no longer manage [pages](/api/web/class/Page/)\\nidentified by the given "},{"kind":"code","text":"`pageIds`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":40,"character":4}],"parameters":[{"id":5447,"name":"pageIds","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","target":5395,"name":"PlaywrightBrowsingSession.deregister"}}],"inheritedFrom":{"type":"reference","target":5394,"name":"PlaywrightBrowsingSession.deregister"}},{"id":5448,"name":"allPages","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":45,"character":4}],"signatures":[{"id":5449,"name":"allPages","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a [pages](/api/web/class/Page/) representing all the available\\ntop-level browsing context, e.g. all the open browser tabs."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":45,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":5610,"name":"PlaywrightPage","package":"@serenity-js/playwright"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":5398,"name":"PlaywrightBrowsingSession.allPages"}}],"inheritedFrom":{"type":"reference","target":5397,"name":"PlaywrightBrowsingSession.allPages"}},{"id":5450,"name":"registeredPageIds","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":49,"character":4}],"signatures":[{"id":5451,"name":"registeredPageIds","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the ids of any [pages](/api/web/class/Page/) this ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/) is aware of."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":49,"character":4}],"type":{"type":"array","elementType":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},"inheritedFrom":{"type":"reference","target":5400,"name":"PlaywrightBrowsingSession.registeredPageIds"}}],"inheritedFrom":{"type":"reference","target":5399,"name":"PlaywrightBrowsingSession.registeredPageIds"}},{"id":5452,"name":"changeCurrentPageTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":68,"character":4}],"signatures":[{"id":5453,"name":"changeCurrentPageTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Informs the ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/) that the \\"current page\\" has changed to "},{"kind":"code","text":"`page`"},{"kind":"text","text":".\\n\\nPlease note that different Web integration tools have a different definition of what a \\"current page\\" is.\\nFor example, Selenium or WebdriverIO use a single \\"focused\\" window that a developer\\nneeds to explicitly \\"switch to\\" in their tests in order to interact with it.\\nThis is similar to how a regular user would interact with Web pages;\\nswitching from one tab to another, but not interacting with more than one\\nwindow/tab simultaneously.\\n\\nPlaywright and Puppeteer, on the other hand, don\'t have a concept of the \\"current\\" page at all, since they\\nallow the developer to interact with multiple open tabs/windows at the same time.\\n\\nWeb integration-specific implementations of this class should override this method to define\\nhow the concept of the \\"current page\\" should be interpreted by Serenity/JS."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":68,"character":4}],"parameters":[{"id":5454,"name":"page","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":5610,"name":"PlaywrightPage","package":"@serenity-js/playwright"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":5402,"name":"PlaywrightBrowsingSession.changeCurrentPageTo"}}],"inheritedFrom":{"type":"reference","target":5401,"name":"PlaywrightBrowsingSession.changeCurrentPageTo"}}],"groups":[{"title":"Constructors","children":[5407]},{"title":"Methods","children":[5425,5428,5431,5418,5420,5437,5440,5442,5445,5448,5450,5452]}],"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSessionWithBrowser.ts","line":11,"character":13}],"extendedTypes":[{"type":"reference","target":5358,"name":"PlaywrightBrowsingSession","package":"@serenity-js/playwright"}],"permalink":"/api/playwright/class/PlaywrightBrowsingSessionWithBrowser","previousId":5358,"nextId":5455},{"id":5455,"name":"PlaywrightBrowsingSessionWithPage","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":5475,"name":"cookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":36,"character":10}],"signatures":[{"id":5476,"name":"cookie","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":36,"character":10}],"parameters":[{"id":5477,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":3898,"name":"Cookie","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":5370,"name":"PlaywrightBrowsingSession.cookie"}}],"inheritedFrom":{"type":"reference","target":5369,"name":"PlaywrightBrowsingSession.cookie"}},{"id":5478,"name":"setCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":41,"character":10}],"signatures":[{"id":5479,"name":"setCookie","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":41,"character":10}],"parameters":[{"id":5480,"name":"cookie","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4004,"name":"CookieData","package":"@serenity-js/web"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":5373,"name":"PlaywrightBrowsingSession.setCookie"}}],"inheritedFrom":{"type":"reference","target":5372,"name":"PlaywrightBrowsingSession.setCookie"}},{"id":5481,"name":"deleteAllCookies","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":47,"character":10}],"signatures":[{"id":5482,"name":"deleteAllCookies","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":47,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":5376,"name":"PlaywrightBrowsingSession.deleteAllCookies"}}],"inheritedFrom":{"type":"reference","target":5375,"name":"PlaywrightBrowsingSession.deleteAllCookies"}},{"id":5456,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSessionWithPage.ts","line":15,"character":4}],"signatures":[{"id":5457,"name":"new PlaywrightBrowsingSessionWithPage","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSessionWithPage.ts","line":15,"character":4}],"parameters":[{"id":5458,"name":"page","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Page"},"name":"Page","package":"playwright-core"}},{"id":5459,"name":"browserContextOptions","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":5116,"name":"PlaywrightOptions","package":"@serenity-js/playwright"}},{"id":5460,"name":"selectors","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Selectors"},"name":"Selectors","package":"playwright-core"}}],"type":{"type":"reference","target":5455,"name":"PlaywrightBrowsingSessionWithPage","package":"@serenity-js/playwright"},"overwrites":{"type":"reference","target":-1,"name":"PlaywrightBrowsingSession.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"PlaywrightBrowsingSession.constructor"}},{"id":5468,"name":"closeAllPages","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSessionWithPage.ts","line":40,"character":10}],"signatures":[{"id":5469,"name":"closeAllPages","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Closes any newly opened pages, leaving only the original one managed by Playwright Test."}]},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSessionWithPage.ts","line":40,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":5405,"name":"PlaywrightBrowsingSession.closeAllPages"}}],"overwrites":{"type":"reference","target":5404,"name":"PlaywrightBrowsingSession.closeAllPages"}},{"id":5470,"name":"browserCapabilities","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSessionWithPage.ts","line":51,"character":19}],"signatures":[{"id":5471,"name":"browserCapabilities","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns [basic meta-data](/api/web/interface/BrowserCapabilities/) about the browser associated with this ability.\\n\\n**Please note** that since Playwright does not expose information about the operating system\\nthe tests are running on, **Serenity/JS assumes that the tests are running locally**\\nand therefore returns the value of Node.js "},{"kind":"code","text":"`process.platform`"},{"kind":"text","text":" for "},{"kind":"code","text":"`platformName`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSessionWithPage.ts","line":51,"character":19}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":3863,"name":"BrowserCapabilities","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":5368,"name":"PlaywrightBrowsingSession.browserCapabilities"}}],"overwrites":{"type":"reference","target":5367,"name":"PlaywrightBrowsingSession.browserCapabilities"}},{"id":5487,"name":"closePagesOtherThan","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":15,"character":4}],"signatures":[{"id":5488,"name":"closePagesOtherThan","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":15,"character":4}],"parameters":[{"id":5489,"name":"pageOfInterest","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":5610,"name":"PlaywrightPage","package":"@serenity-js/playwright"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":5385,"name":"PlaywrightBrowsingSession.closePagesOtherThan"}}],"inheritedFrom":{"type":"reference","target":5384,"name":"PlaywrightBrowsingSession.closePagesOtherThan"}},{"id":5490,"name":"currentPage","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":27,"character":4}],"signatures":[{"id":5491,"name":"currentPage","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/) representing the currently active top-level browsing context."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":27,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":5610,"name":"PlaywrightPage","package":"@serenity-js/playwright"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":5390,"name":"PlaywrightBrowsingSession.currentPage"}}],"inheritedFrom":{"type":"reference","target":5389,"name":"PlaywrightBrowsingSession.currentPage"}},{"id":5492,"name":"register","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":33,"character":4}],"signatures":[{"id":5493,"name":"register","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Registers specified [pages](/api/web/class/Page/) to be managed by this ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/)."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":33,"character":4}],"parameters":[{"id":5494,"name":"pages","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":5610,"name":"PlaywrightPage","package":"@serenity-js/playwright"}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","target":5392,"name":"PlaywrightBrowsingSession.register"}}],"inheritedFrom":{"type":"reference","target":5391,"name":"PlaywrightBrowsingSession.register"}},{"id":5495,"name":"deregister","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":40,"character":4}],"signatures":[{"id":5496,"name":"deregister","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Informs this ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/) that it should no longer manage [pages](/api/web/class/Page/)\\nidentified by the given "},{"kind":"code","text":"`pageIds`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":40,"character":4}],"parameters":[{"id":5497,"name":"pageIds","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","target":5395,"name":"PlaywrightBrowsingSession.deregister"}}],"inheritedFrom":{"type":"reference","target":5394,"name":"PlaywrightBrowsingSession.deregister"}},{"id":5498,"name":"allPages","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":45,"character":4}],"signatures":[{"id":5499,"name":"allPages","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a [pages](/api/web/class/Page/) representing all the available\\ntop-level browsing context, e.g. all the open browser tabs."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":45,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":5610,"name":"PlaywrightPage","package":"@serenity-js/playwright"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":5398,"name":"PlaywrightBrowsingSession.allPages"}}],"inheritedFrom":{"type":"reference","target":5397,"name":"PlaywrightBrowsingSession.allPages"}},{"id":5500,"name":"registeredPageIds","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":49,"character":4}],"signatures":[{"id":5501,"name":"registeredPageIds","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the ids of any [pages](/api/web/class/Page/) this ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/) is aware of."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":49,"character":4}],"type":{"type":"array","elementType":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},"inheritedFrom":{"type":"reference","target":5400,"name":"PlaywrightBrowsingSession.registeredPageIds"}}],"inheritedFrom":{"type":"reference","target":5399,"name":"PlaywrightBrowsingSession.registeredPageIds"}},{"id":5502,"name":"changeCurrentPageTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":68,"character":4}],"signatures":[{"id":5503,"name":"changeCurrentPageTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Informs the ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/) that the \\"current page\\" has changed to "},{"kind":"code","text":"`page`"},{"kind":"text","text":".\\n\\nPlease note that different Web integration tools have a different definition of what a \\"current page\\" is.\\nFor example, Selenium or WebdriverIO use a single \\"focused\\" window that a developer\\nneeds to explicitly \\"switch to\\" in their tests in order to interact with it.\\nThis is similar to how a regular user would interact with Web pages;\\nswitching from one tab to another, but not interacting with more than one\\nwindow/tab simultaneously.\\n\\nPlaywright and Puppeteer, on the other hand, don\'t have a concept of the \\"current\\" page at all, since they\\nallow the developer to interact with multiple open tabs/windows at the same time.\\n\\nWeb integration-specific implementations of this class should override this method to define\\nhow the concept of the \\"current page\\" should be interpreted by Serenity/JS."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":68,"character":4}],"parameters":[{"id":5504,"name":"page","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":5610,"name":"PlaywrightPage","package":"@serenity-js/playwright"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":5402,"name":"PlaywrightBrowsingSession.changeCurrentPageTo"}}],"inheritedFrom":{"type":"reference","target":5401,"name":"PlaywrightBrowsingSession.changeCurrentPageTo"}}],"groups":[{"title":"Constructors","children":[5456]},{"title":"Methods","children":[5475,5478,5481,5468,5470,5487,5490,5492,5495,5498,5500,5502]}],"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSessionWithPage.ts","line":12,"character":13}],"extendedTypes":[{"type":"reference","target":5358,"name":"PlaywrightBrowsingSession","package":"@serenity-js/playwright"}],"permalink":"/api/playwright/class/PlaywrightBrowsingSessionWithPage","previousId":5406,"nextId":5505},{"id":5505,"name":"PlaywrightCookie","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Playwright-specific implementation of ["},{"kind":"code","text":"`Cookie`"},{"kind":"text","text":"](/api/web/class/Cookie/)."}]},"children":[{"id":5584,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightCookie.ts","line":14,"character":4}],"signatures":[{"id":5585,"name":"new PlaywrightCookie","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightCookie.ts","line":14,"character":4}],"parameters":[{"id":5586,"name":"context","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"BrowserContext"},"name":"BrowserContext","package":"playwright-core"}},{"id":5587,"name":"cookieName","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":5505,"name":"PlaywrightCookie","package":"@serenity-js/playwright"},"overwrites":{"type":"reference","target":-1,"name":"Cookie.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"Cookie.constructor"}},{"id":5589,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightCookie.ts","line":22,"character":10}],"signatures":[{"id":5590,"name":"delete","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightCookie.ts","line":22,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Cookie.delete"}}],"overwrites":{"type":"reference","target":-1,"name":"Cookie.delete"}},{"id":5594,"name":"name","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":99,"character":4}],"signatures":[{"id":5595,"name":"name","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the name of this cookie."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":99,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.name"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.name"}},{"id":5596,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":106,"character":4}],"signatures":[{"id":5597,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Checks if a given cookie is set.\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Optional`"},{"kind":"text","text":"](/api/core/interface/Optional/)"}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":106,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.isPresent"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.isPresent"}},{"id":5598,"name":"value","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":110,"character":4}],"signatures":[{"id":5599,"name":"value","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the value of a given cookie."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":110,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.value"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.value"}},{"id":5600,"name":"path","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":114,"character":4}],"signatures":[{"id":5601,"name":"path","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the path of a given cookie, if any was set."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":114,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.path"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.path"}},{"id":5602,"name":"domain","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":118,"character":4}],"signatures":[{"id":5603,"name":"domain","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the domain of a given cookie, if any was set."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":118,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.domain"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.domain"}},{"id":5604,"name":"isHttpOnly","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":125,"character":4}],"signatures":[{"id":5605,"name":"isHttpOnly","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Checks if a given cookie is HTTP-only.\\n\\n#### Learn more\\n- [Mozilla Developer Network: Restricting access to cookies](https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies#restrict_access_to_cookies)"}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":125,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.isHttpOnly"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.isHttpOnly"}},{"id":5606,"name":"isSecure","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":132,"character":4}],"signatures":[{"id":5607,"name":"isSecure","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Checks if a given cookie is secure.\\n\\n#### Learn more\\n- [Mozilla Developer Network: Restricting access to cookies](https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies#restrict_access_to_cookies)"}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":132,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.isSecure"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.isSecure"}},{"id":5608,"name":"expiry","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":139,"character":4}],"signatures":[{"id":5609,"name":"expiry","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the expiry date of a given cookie\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Timestamp`"},{"kind":"text","text":"](/api/core/class/Timestamp/)"}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":139,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.expiry"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.expiry"}}],"groups":[{"title":"Constructors","children":[5584]},{"title":"Methods","children":[5589,5594,5596,5598,5600,5602,5604,5606,5608]}],"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightCookie.ts","line":12,"character":13}],"extendedTypes":[{"type":"reference","target":3898,"name":"Cookie","package":"@serenity-js/web"}],"permalink":"/api/playwright/class/PlaywrightCookie","previousId":5455,"nextId":5610},{"id":5610,"name":"PlaywrightPage","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Playwright-specific implementation of ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/)."}]},"children":[{"id":5611,"name":"current","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":35,"character":20}],"signatures":[{"id":5612,"name":"current","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":35,"character":20}],"type":{"type":"reference","target":1041,"typeArguments":[{"type":"reference","target":5610,"name":"PlaywrightPage","package":"@serenity-js/playwright"}],"name":"QuestionAdapter","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"Page.current"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.current"}},{"id":5622,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":39,"character":4}],"signatures":[{"id":5623,"name":"new PlaywrightPage","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":39,"character":4}],"parameters":[{"id":5624,"name":"session","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":5358,"name":"PlaywrightBrowsingSession","package":"@serenity-js/playwright"}},{"id":5625,"name":"page","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Page"},"name":"Page","package":"playwright-core"}},{"id":5626,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":5116,"name":"PlaywrightOptions","package":"@serenity-js/playwright"}},{"id":5627,"name":"pageId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}],"type":{"type":"reference","target":5610,"name":"PlaywrightPage","package":"@serenity-js/playwright"},"overwrites":{"type":"reference","target":-1,"name":"Page<playwright.Locator>.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"Page<playwright.Locator>.constructor"}},{"id":5632,"name":"createPageElement","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":53,"character":4}],"signatures":[{"id":5633,"name":"createPageElement","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":53,"character":4}],"parameters":[{"id":5634,"name":"nativeElement","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"}}],"type":{"type":"reference","target":4353,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"}],"name":"PageElement","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"Page.createPageElement"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.createPageElement"}},{"id":5635,"name":"locate","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":63,"character":4}],"signatures":[{"id":5636,"name":"locate","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":63,"character":4}],"parameters":[{"id":5637,"name":"selector","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4788,"name":"Selector","package":"@serenity-js/web"}}],"type":{"type":"reference","target":4353,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"}],"name":"PageElement","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"Page.locate"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.locate"}},{"id":5638,"name":"locateAll","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":72,"character":4}],"signatures":[{"id":5639,"name":"locateAll","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":72,"character":4}],"parameters":[{"id":5640,"name":"selector","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4788,"name":"Selector","package":"@serenity-js/web"}}],"type":{"type":"reference","target":4429,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"}],"name":"PageElements","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"Page.locateAll"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.locateAll"}},{"id":5641,"name":"navigateTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":83,"character":10}],"signatures":[{"id":5642,"name":"navigateTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":83,"character":10}],"parameters":[{"id":5643,"name":"destination","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.navigateTo"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.navigateTo"}},{"id":5644,"name":"navigateBack","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":88,"character":10}],"signatures":[{"id":5645,"name":"navigateBack","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":88,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.navigateBack"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.navigateBack"}},{"id":5646,"name":"navigateForward","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":93,"character":10}],"signatures":[{"id":5647,"name":"navigateForward","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":93,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.navigateForward"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.navigateForward"}},{"id":5648,"name":"reload","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":98,"character":10}],"signatures":[{"id":5649,"name":"reload","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":98,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.reload"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.reload"}},{"id":5650,"name":"sendKeys","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":103,"character":10}],"signatures":[{"id":5651,"name":"sendKeys","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":103,"character":10}],"parameters":[{"id":5652,"name":"keys","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":4121,"name":"Key","package":"@serenity-js/web"}]}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.sendKeys"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.sendKeys"}},{"id":5653,"name":"executeScript","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":117,"character":10}],"signatures":[{"id":5654,"name":"executeScript","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":117,"character":10}],"typeParameter":[{"id":5655,"name":"Result","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":5656,"name":"InnerArguments","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"parameters":[{"id":5657,"name":"script","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reflection","declaration":{"id":5658,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":118,"character":26}],"signatures":[{"id":5659,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":118,"character":26}],"parameters":[{"id":5660,"name":"parameters","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"reference","target":5656,"name":"InnerArguments","package":"@serenity-js/playwright","refersToTypeParameter":true}}],"type":{"type":"reference","target":5655,"name":"Result","package":"@serenity-js/playwright","refersToTypeParameter":true}}]}}]}},{"id":5661,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"reference","target":5656,"name":"InnerArguments","package":"@serenity-js/playwright","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":5655,"name":"Result","package":"@serenity-js/playwright","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.executeScript"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.executeScript"}},{"id":5662,"name":"executeAsyncScript","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":145,"character":10}],"signatures":[{"id":5663,"name":"executeAsyncScript","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":145,"character":10}],"typeParameter":[{"id":5664,"name":"Result","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":5665,"name":"InnerArguments","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"parameters":[{"id":5666,"name":"script","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reflection","declaration":{"id":5667,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":145,"character":85}],"signatures":[{"id":5668,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":145,"character":85}],"parameters":[{"id":5669,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"tuple","elements":[{"type":"rest","elementType":{"type":"namedTupleMember","name":"parameters","isOptional":false,"element":{"type":"array","elementType":{"type":"reference","target":5665,"name":"InnerArguments","package":"@serenity-js/playwright","refersToTypeParameter":true}}}},{"type":"namedTupleMember","name":"callback","isOptional":false,"element":{"type":"reflection","declaration":{"id":5670,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":145,"character":137}],"signatures":[{"id":5671,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":145,"character":137}],"parameters":[{"id":5672,"name":"result","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":5664,"name":"Result","package":"@serenity-js/playwright","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"void"}}]}}}]}}],"type":{"type":"intrinsic","name":"void"}}]}}]}},{"id":5673,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"reference","target":5665,"name":"InnerArguments","package":"@serenity-js/playwright","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":5664,"name":"Result","package":"@serenity-js/playwright","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.executeAsyncScript"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.executeAsyncScript"}},{"id":5674,"name":"lastScriptExecutionResult","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":177,"character":4}],"signatures":[{"id":5675,"name":"lastScriptExecutionResult","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":177,"character":4}],"typeParameter":[{"id":5676,"name":"Result","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"any"}}],"type":{"type":"reference","target":5676,"name":"Result","package":"@serenity-js/playwright","refersToTypeParameter":true},"overwrites":{"type":"reference","target":-1,"name":"Page.lastScriptExecutionResult"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.lastScriptExecutionResult"}},{"id":5677,"name":"takeScreenshot","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":185,"character":10}],"signatures":[{"id":5678,"name":"takeScreenshot","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":185,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.takeScreenshot"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.takeScreenshot"}},{"id":5679,"name":"cookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":204,"character":10}],"signatures":[{"id":5680,"name":"cookie","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":204,"character":10}],"parameters":[{"id":5681,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":3898,"name":"Cookie","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.cookie"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.cookie"}},{"id":5682,"name":"setCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":208,"character":10}],"signatures":[{"id":5683,"name":"setCookie","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":208,"character":10}],"parameters":[{"id":5684,"name":"cookieData","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4004,"name":"CookieData","package":"@serenity-js/web"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.setCookie"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.setCookie"}},{"id":5685,"name":"deleteAllCookies","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":230,"character":10}],"signatures":[{"id":5686,"name":"deleteAllCookies","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":230,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.deleteAllCookies"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.deleteAllCookies"}},{"id":5687,"name":"title","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":234,"character":10}],"signatures":[{"id":5688,"name":"title","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":234,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.title"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.title"}},{"id":5689,"name":"name","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":239,"character":10}],"signatures":[{"id":5690,"name":"name","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":239,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.name"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.name"}},{"id":5691,"name":"url","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":246,"character":10}],"signatures":[{"id":5692,"name":"url","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":246,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/url.d.ts","qualifiedName":"\\"url\\".URL"},"name":"URL","package":"@types/node","qualifiedName":"\\"url\\".URL"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.url"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.url"}},{"id":5693,"name":"viewportSize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":251,"character":10}],"signatures":[{"id":5694,"name":"viewportSize","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":251,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reflection","declaration":{"id":5695,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":5696,"name":"width","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":251,"character":36}],"type":{"type":"intrinsic","name":"number"}},{"id":5697,"name":"height","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":251,"character":51}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[5696,5697]}],"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":251,"character":34}]}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.viewportSize"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.viewportSize"}},{"id":5698,"name":"setViewportSize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":255,"character":10}],"signatures":[{"id":5699,"name":"setViewportSize","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":255,"character":10}],"parameters":[{"id":5700,"name":"size","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":5701,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":5702,"name":"width","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":255,"character":34}],"type":{"type":"intrinsic","name":"number"}},{"id":5703,"name":"height","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":255,"character":49}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[5702,5703]}],"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":255,"character":32}]}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.setViewportSize"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.setViewportSize"}},{"id":5704,"name":"close","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":259,"character":10}],"signatures":[{"id":5705,"name":"close","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":259,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.close"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.close"}},{"id":5706,"name":"closeOthers","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":265,"character":10}],"signatures":[{"id":5707,"name":"closeOthers","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":265,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.closeOthers"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.closeOthers"}},{"id":5708,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":269,"character":4}],"signatures":[{"id":5709,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":269,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.isPresent"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.isPresent"}},{"id":5710,"name":"nativePage","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":273,"character":10}],"signatures":[{"id":5711,"name":"nativePage","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":273,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Page"},"name":"Page","package":"playwright-core"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":5719,"name":"id","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":132,"character":13}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Page.id"}},{"id":5720,"name":"switchTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":432,"character":4}],"signatures":[{"id":5721,"name":"switchTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Switches the current browsing context to the given page\\nand returns an object that allows the caller to switch back\\nto the previous context when needed.\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Switch`"},{"kind":"text","text":"](/api/web/class/Switch/)\\n- ["},{"kind":"code","text":"`Switchable`"},{"kind":"text","text":"](/api/web/interface/Switchable/)"}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":432,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4801,"name":"SwitchableOrigin","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Page.switchTo"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Page.switchTo"}},{"id":5722,"name":"modalDialog","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":444,"character":4}],"signatures":[{"id":5723,"name":"modalDialog","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the ["},{"kind":"code","text":"`ModalDialogHandler`"},{"kind":"text","text":"](/api/web/class/ModalDialogHandler/) for the current ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/)."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":444,"character":4}],"type":{"type":"reference","target":4105,"name":"ModalDialogHandler","package":"@serenity-js/web"},"inheritedFrom":{"type":"reference","target":-1,"name":"Page.modalDialog"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Page.modalDialog"}},{"id":5724,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":448,"character":4}],"signatures":[{"id":5725,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a description of this Page and its ID."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":448,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Page.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Page.toString"}}],"groups":[{"title":"Constructors","children":[5622]},{"title":"Properties","children":[5719]},{"title":"Methods","children":[5611,5632,5635,5638,5641,5644,5646,5648,5650,5653,5662,5674,5677,5679,5682,5685,5687,5689,5691,5693,5698,5704,5706,5708,5710,5720,5722,5724]}],"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":21,"character":13}],"extendedTypes":[{"type":"reference","target":4237,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"playwright.Locator","package":"playwright-core","qualifiedName":"Locator"}],"name":"Page","package":"@serenity-js/web"}],"permalink":"/api/playwright/class/PlaywrightPage","previousId":5505,"nextId":5726},{"id":5726,"name":"PlaywrightPageElement","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Playwright-specific implementation of ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)."}]},"children":[{"id":5746,"name":"of","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":16,"character":4}],"signatures":[{"id":5747,"name":"of","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":16,"character":4}],"parameters":[{"id":5748,"name":"parent","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4353,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"}],"name":"PageElement","package":"@serenity-js/web"}}],"type":{"type":"reference","target":4353,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"}],"name":"PageElement","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.of"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.of"}},{"id":5749,"name":"closestTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":20,"character":4}],"signatures":[{"id":5750,"name":"closestTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":20,"character":4}],"parameters":[{"id":5751,"name":"child","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4353,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"}],"name":"PageElement","package":"@serenity-js/web"}}],"type":{"type":"reference","target":4353,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"}],"name":"PageElement","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.closestTo"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.closestTo"}},{"id":5752,"name":"enterValue","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":24,"character":10}],"signatures":[{"id":5753,"name":"enterValue","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":24,"character":10}],"parameters":[{"id":5754,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.enterValue"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.enterValue"}},{"id":5755,"name":"clearValue","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":31,"character":10}],"signatures":[{"id":5756,"name":"clearValue","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":31,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.clearValue"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.clearValue"}},{"id":5757,"name":"click","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":41,"character":10}],"signatures":[{"id":5758,"name":"click","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":41,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.click"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.click"}},{"id":5759,"name":"doubleClick","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":46,"character":10}],"signatures":[{"id":5760,"name":"doubleClick","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":46,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.doubleClick"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.doubleClick"}},{"id":5761,"name":"scrollIntoView","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":51,"character":10}],"signatures":[{"id":5762,"name":"scrollIntoView","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":51,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.scrollIntoView"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.scrollIntoView"}},{"id":5763,"name":"hoverOver","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":56,"character":10}],"signatures":[{"id":5764,"name":"hoverOver","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":56,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.hoverOver"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.hoverOver"}},{"id":5765,"name":"rightClick","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":61,"character":10}],"signatures":[{"id":5766,"name":"rightClick","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":61,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.rightClick"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.rightClick"}},{"id":5767,"name":"selectOptions","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":66,"character":10}],"signatures":[{"id":5768,"name":"selectOptions","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":66,"character":10}],"parameters":[{"id":5769,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":4668,"name":"SelectOption","package":"@serenity-js/web"}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.selectOptions"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.selectOptions"}},{"id":5770,"name":"selectedOptions","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":79,"character":10}],"signatures":[{"id":5771,"name":"selectedOptions","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":79,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4668,"name":"SelectOption","package":"@serenity-js/web"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.selectedOptions"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.selectedOptions"}},{"id":5772,"name":"attribute","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":101,"character":10}],"signatures":[{"id":5773,"name":"attribute","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":101,"character":10}],"parameters":[{"id":5774,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.attribute"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.attribute"}},{"id":5775,"name":"text","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":106,"character":10}],"signatures":[{"id":5776,"name":"text","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":106,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.text"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.text"}},{"id":5777,"name":"value","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":111,"character":10}],"signatures":[{"id":5778,"name":"value","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":111,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.value"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.value"}},{"id":5779,"name":"html","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":116,"character":10}],"signatures":[{"id":5780,"name":"html","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":116,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.html"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.html"}},{"id":5781,"name":"switchTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":121,"character":10}],"signatures":[{"id":5782,"name":"switchTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":121,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4801,"name":"SwitchableOrigin","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.switchTo"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.switchTo"}},{"id":5783,"name":"isActive","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":156,"character":10}],"signatures":[{"id":5784,"name":"isActive","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":156,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.isActive"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.isActive"}},{"id":5785,"name":"isClickable","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":167,"character":10}],"signatures":[{"id":5786,"name":"isClickable","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":167,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.isClickable"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.isClickable"}},{"id":5787,"name":"isEnabled","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":178,"character":10}],"signatures":[{"id":5788,"name":"isEnabled","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":178,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.isEnabled"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.isEnabled"}},{"id":5789,"name":"isSelected","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":187,"character":10}],"signatures":[{"id":5790,"name":"isSelected","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":187,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.isSelected"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.isSelected"}},{"id":5791,"name":"isVisible","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":205,"character":10}],"signatures":[{"id":5792,"name":"isVisible","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":205,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.isVisible"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.isVisible"}},{"id":5793,"name":"locator","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":19,"character":13}],"type":{"type":"reference","target":4187,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"},{"type":"intrinsic","name":"any"}],"name":"Locator","package":"@serenity-js/web"},"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement.locator"}},{"id":5743,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":46,"character":4}],"signatures":[{"id":5744,"name":"new PlaywrightPageElement","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":46,"character":4}],"parameters":[{"id":5745,"name":"locator","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4187,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"},{"type":"intrinsic","name":"any"}],"name":"Locator","package":"@serenity-js/web"}}],"type":{"type":"reference","target":5726,"name":"PlaywrightPageElement","package":"@serenity-js/playwright"},"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement<playwright.Locator>.constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement<playwright.Locator>.constructor"}},{"id":5794,"name":"nativeElement","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":107,"character":4}],"signatures":[{"id":5795,"name":"nativeElement","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An \\"escape hatch\\" providing access to the integration tool-specific implementation of a Web element."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":107,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement.nativeElement"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement.nativeElement"}},{"id":5796,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":108,"character":4}],"signatures":[{"id":5797,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":108,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement.toString"}},{"id":5798,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":181,"character":4}],"signatures":[{"id":5799,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a ["},{"kind":"code","text":"`Promise`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise) that resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":" when the element\\nis present in the [Document Object Model (DOM)](https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model),\\n"},{"kind":"code","text":"`false`"},{"kind":"text","text":" otherwise."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":181,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement.isPresent"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement.isPresent"}}],"groups":[{"title":"Constructors","children":[5743]},{"title":"Properties","children":[5793]},{"title":"Methods","children":[5746,5749,5752,5755,5757,5759,5761,5763,5765,5767,5770,5772,5775,5777,5779,5781,5783,5785,5787,5789,5791,5794,5796,5798]}],"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":15,"character":13}],"extendedTypes":[{"type":"reference","target":4353,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"playwright.Locator","package":"playwright-core","qualifiedName":"Locator"}],"name":"PageElement","package":"@serenity-js/web"}],"permalink":"/api/playwright/class/PlaywrightPageElement","previousId":5610,"nextId":5233},{"id":5233,"name":"PlaywrightLocator","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Playwright-specific implementation of ["},{"kind":"code","text":"`Locator`"},{"kind":"text","text":"](/api/web/class/Locator/)."}]},"children":[{"id":5234,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts","line":18,"character":4}],"signatures":[{"id":5235,"name":"new PlaywrightLocator","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts","line":18,"character":4}],"parameters":[{"id":5236,"name":"parent","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4644,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"}],"name":"RootLocator","package":"@serenity-js/web"}},{"id":5237,"name":"selector","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4788,"name":"Selector","package":"@serenity-js/web"}}],"type":{"type":"reference","target":5233,"name":"PlaywrightLocator","package":"@serenity-js/playwright"},"overwrites":{"type":"reference","target":-1,"name":"Locator<playwright.Locator, string>.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"Locator<playwright.Locator, string>.constructor"}},{"id":5240,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts","line":54,"character":10}],"signatures":[{"id":5241,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts","line":54,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Locator.isPresent"}}],"overwrites":{"type":"reference","target":-1,"name":"Locator.isPresent"}},{"id":5242,"name":"nativeElement","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts","line":76,"character":10}],"signatures":[{"id":5243,"name":"nativeElement","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts","line":76,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Locator.nativeElement"}}],"overwrites":{"type":"reference","target":-1,"name":"Locator.nativeElement"}},{"id":5244,"name":"allNativeElements","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts","line":82,"character":10}],"signatures":[{"id":5245,"name":"allNativeElements","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts","line":82,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Locator.allNativeElements"}}],"overwrites":{"type":"reference","target":-1,"name":"Locator.allNativeElements"}},{"id":5246,"name":"of","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts","line":92,"character":4}],"signatures":[{"id":5247,"name":"of","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts","line":92,"character":4}],"parameters":[{"id":5248,"name":"parent","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":5327,"name":"PlaywrightRootLocator","package":"@serenity-js/playwright"}}],"type":{"type":"reference","target":4187,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"},{"type":"intrinsic","name":"string"}],"name":"Locator","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"Locator.of"}}],"overwrites":{"type":"reference","target":-1,"name":"Locator.of"}},{"id":5249,"name":"closestTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts","line":96,"character":4}],"signatures":[{"id":5250,"name":"closestTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts","line":96,"character":4}],"parameters":[{"id":5251,"name":"child","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":5233,"name":"PlaywrightLocator","package":"@serenity-js/playwright"}}],"type":{"type":"reference","target":4187,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"},{"type":"intrinsic","name":"string"}],"name":"Locator","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"Locator.closestTo"}}],"overwrites":{"type":"reference","target":-1,"name":"Locator.closestTo"}},{"id":5252,"name":"locate","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts","line":100,"character":4}],"signatures":[{"id":5253,"name":"locate","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts","line":100,"character":4}],"parameters":[{"id":5254,"name":"child","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":5233,"name":"PlaywrightLocator","package":"@serenity-js/playwright"}}],"type":{"type":"reference","target":4187,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"},{"type":"intrinsic","name":"string"}],"name":"Locator","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"Locator.locate"}}],"overwrites":{"type":"reference","target":-1,"name":"Locator.locate"}},{"id":5255,"name":"element","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts","line":104,"character":4}],"signatures":[{"id":5256,"name":"element","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts","line":104,"character":4}],"type":{"type":"reference","target":4353,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"}],"name":"PageElement","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"Locator.element"}}],"overwrites":{"type":"reference","target":-1,"name":"Locator.element"}},{"id":5257,"name":"allElements","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts","line":108,"character":10}],"signatures":[{"id":5258,"name":"allElements","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts","line":108,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4353,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"}],"name":"PageElement","package":"@serenity-js/web"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Locator.allElements"}}],"overwrites":{"type":"reference","target":-1,"name":"Locator.allElements"}},{"id":5260,"name":"selector","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Locator.ts","line":19,"character":13}],"type":{"type":"reference","target":4788,"name":"Selector","package":"@serenity-js/web"},"inheritedFrom":{"type":"reference","target":-1,"name":"Locator.selector"}},{"id":5261,"name":"switchToFrame","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Locator.ts","line":23,"character":4}],"signatures":[{"id":5262,"name":"switchToFrame","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Locator.ts","line":23,"character":4}],"parameters":[{"id":5263,"name":"element","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Locator.switchToFrame"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Locator.switchToFrame"}},{"id":5264,"name":"switchToParentFrame","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Locator.ts","line":24,"character":4}],"signatures":[{"id":5265,"name":"switchToParentFrame","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Locator.ts","line":24,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Locator.switchToParentFrame"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Locator.switchToParentFrame"}},{"id":5266,"name":"switchToMainFrame","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Locator.ts","line":25,"character":4}],"signatures":[{"id":5267,"name":"switchToMainFrame","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Locator.ts","line":25,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Locator.switchToMainFrame"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Locator.switchToMainFrame"}},{"id":5271,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Locator.ts","line":42,"character":4}],"signatures":[{"id":5272,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Locator.ts","line":42,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Locator.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Locator.toString"}},{"id":5273,"name":"[custom]","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Custom [Node.js inspection method](https://nodejs.org/api/util.html#utilinspectcustom)."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Locator.ts","line":46,"character":4}],"type":{"type":"reflection","declaration":{"id":5274,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Locator.ts","line":46,"character":27}],"signatures":[{"id":5275,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Locator.ts","line":46,"character":27}],"parameters":[{"id":5276,"name":"depth","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}},{"id":5277,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/util.d.ts","qualifiedName":"\\"util\\".InspectOptionsStylized"},"name":"InspectOptionsStylized","package":"@types/node","qualifiedName":"\\"util\\".InspectOptionsStylized"}},{"id":5278,"name":"inspect","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"query","queryType":{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/util.d.ts","qualifiedName":"\\"util\\".inspect"},"name":"inspect","package":"@types/node","qualifiedName":"\\"util\\".inspect","preferValues":true}}}],"type":{"type":"intrinsic","name":"string"}}]}},"inheritedFrom":{"type":"reference","target":-1,"name":"Locator.[custom]"}}],"groups":[{"title":"Constructors","children":[5234]},{"title":"Properties","children":[5260,5273]},{"title":"Methods","children":[5240,5242,5244,5246,5249,5252,5255,5257,5261,5264,5266,5271]}],"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts","line":16,"character":13}],"extendedTypes":[{"type":"reference","target":4187,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"playwright.Locator","package":"playwright-core","qualifiedName":"Locator"},{"type":"intrinsic","name":"string"}],"name":"Locator","package":"@serenity-js/web"}],"permalink":"/api/playwright/class/PlaywrightLocator","previousId":5726,"nextId":5327},{"id":5327,"name":"PlaywrightRootLocator","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Playwright-specific implementation of ["},{"kind":"code","text":"`RootLocator`"},{"kind":"text","text":"](/api/web/class/RootLocator/)."}]},"children":[{"id":5328,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightRootLocator.ts","line":17,"character":4}],"signatures":[{"id":5329,"name":"new PlaywrightRootLocator","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightRootLocator.ts","line":17,"character":4}],"parameters":[{"id":5330,"name":"page","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Page"},"name":"Page","package":"playwright-core"}}],"type":{"type":"reference","target":5327,"name":"PlaywrightRootLocator","package":"@serenity-js/playwright"},"overwrites":{"type":"reference","target":-1,"name":"RootLocator<playwright.Locator>.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"RootLocator<playwright.Locator>.constructor"}},{"id":5333,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightRootLocator.ts","line":22,"character":10}],"signatures":[{"id":5334,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightRootLocator.ts","line":22,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"RootLocator.isPresent"}}],"overwrites":{"type":"reference","target":-1,"name":"RootLocator.isPresent"}},{"id":5335,"name":"nativeElement","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightRootLocator.ts","line":26,"character":4}],"signatures":[{"id":5336,"name":"nativeElement","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightRootLocator.ts","line":26,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Pick"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"},{"type":"literal","value":"locator"}],"name":"Pick","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#picktype-keys"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"RootLocator.nativeElement"}}],"overwrites":{"type":"reference","target":-1,"name":"RootLocator.nativeElement"}},{"id":5337,"name":"evaluate","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightRootLocator.ts","line":37,"character":4},{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightRootLocator.ts","line":38,"character":4}],"signatures":[{"id":5338,"name":"evaluate","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Evaluates the given "},{"kind":"code","text":"`pageFunction`"},{"kind":"text","text":" in the context of the current frame.\\nSee ["},{"kind":"code","text":"`playwright.Frame.evaluate`"},{"kind":"text","text":"](https://playwright.dev/docs/api/class-frame#frame-evaluate)."}]},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightRootLocator.ts","line":37,"character":4}],"typeParameter":[{"id":5339,"name":"R","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":5340,"name":"Arguments","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":5341,"name":"pageFunction","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/structs.d.ts","qualifiedName":"PageFunction"},"typeArguments":[{"type":"reference","target":5340,"name":"Arguments","package":"@serenity-js/playwright","refersToTypeParameter":true},{"type":"reference","target":5339,"name":"R","package":"@serenity-js/playwright","refersToTypeParameter":true}],"name":"PageFunction","package":"playwright-core"}},{"id":5342,"name":"arg","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":5340,"name":"Arguments","package":"@serenity-js/playwright","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":5339,"name":"R","package":"@serenity-js/playwright","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":5343,"name":"switchToFrame","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightRootLocator.ts","line":47,"character":10}],"signatures":[{"id":5344,"name":"switchToFrame","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Switches the current context to the frame identified by the given locator."}]},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightRootLocator.ts","line":47,"character":10}],"parameters":[{"id":5345,"name":"frame","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"RootLocator.switchToFrame"}}],"overwrites":{"type":"reference","target":-1,"name":"RootLocator.switchToFrame"}},{"id":5346,"name":"switchToParentFrame","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightRootLocator.ts","line":55,"character":10}],"signatures":[{"id":5347,"name":"switchToParentFrame","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Switches the current context to the parent frame of the current frame."}]},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightRootLocator.ts","line":55,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"RootLocator.switchToParentFrame"}}],"overwrites":{"type":"reference","target":-1,"name":"RootLocator.switchToParentFrame"}},{"id":5348,"name":"switchToMainFrame","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightRootLocator.ts","line":62,"character":10}],"signatures":[{"id":5349,"name":"switchToMainFrame","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Switches the context to the top-level frame."}]},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightRootLocator.ts","line":62,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"RootLocator.switchToMainFrame"}}],"overwrites":{"type":"reference","target":-1,"name":"RootLocator.switchToMainFrame"}},{"id":5350,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/RootLocator.ts","line":21,"character":4}],"signatures":[{"id":5351,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/RootLocator.ts","line":21,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"RootLocator.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"RootLocator.toString"}},{"id":5352,"name":"[custom]","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/RootLocator.ts","line":22,"character":4}],"type":{"type":"reflection","declaration":{"id":5353,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/RootLocator.ts","line":22,"character":27}],"signatures":[{"id":5354,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/RootLocator.ts","line":22,"character":27}],"parameters":[{"id":5355,"name":"depth","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}},{"id":5356,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/util.d.ts","qualifiedName":"\\"util\\".InspectOptionsStylized"},"name":"InspectOptionsStylized","package":"@types/node","qualifiedName":"\\"util\\".InspectOptionsStylized"}},{"id":5357,"name":"inspect","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"query","queryType":{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/util.d.ts","qualifiedName":"\\"util\\".inspect"},"name":"inspect","package":"@types/node","qualifiedName":"\\"util\\".inspect","preferValues":true}}}],"type":{"type":"intrinsic","name":"string"}}]}},"inheritedFrom":{"type":"reference","target":-1,"name":"RootLocator.[custom]"}}],"groups":[{"title":"Constructors","children":[5328]},{"title":"Properties","children":[5352]},{"title":"Methods","children":[5333,5335,5337,5343,5346,5348,5350]}],"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightRootLocator.ts","line":13,"character":13}],"extendedTypes":[{"type":"reference","target":4644,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"playwright.Locator","package":"playwright-core","qualifiedName":"Locator"}],"name":"RootLocator","package":"@serenity-js/web"}],"permalink":"/api/playwright/class/PlaywrightRootLocator","previousId":5233}],"groups":[{"title":"Abilities","children":[5201]},{"title":"Configuration","children":[5116]},{"title":"Models","children":[5358,5406,5455,5505,5610,5726,5233,5327]}],"sources":[{"fileName":"packages/playwright/src/index.ts","line":1,"character":0}],"permalink":"/api/playwright"},"urlSlug":"playwright"}],"packageName":"@serenity-js/playwright","packageVersion":"3.26.0"},{"entryPoints":[{"index":true,"label":"index","reflection":{"id":48,"name":"@serenity-js/playwright-test","variant":"declaration","kind":2,"flags":{"isExternal":true},"children":[{"id":22558,"name":"DescribeFunction","variant":"declaration","kind":2097152,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":5,"character":12}],"type":{"type":"intersection","types":[{"type":"reference","target":22599,"name":"SuiteFunction","package":"@serenity-js/playwright-test"},{"type":"reflection","declaration":{"id":22559,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":22560,"name":"only","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a focused group of tests. If there are some focused tests or suites, all of them will be run but nothing\\nelse.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.only(\'focused group\', () => {\\n  test(\'in the focused group\', async ({ page }) => {\\n    // This test will run\\n  });\\n});\\ntest(\'not in the focused group\', async ({ page }) => {\\n  // This test will not run\\n});\\n```"}],"blockTags":[{"tag":"@param","name":"title","content":[{"kind":"text","text":"Group title."}]},{"tag":"@param","name":"callback","content":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.only(title, callback)](https://playwright.dev/docs/api/class-test#test-describe-only). Any tests\\nadded in this callback will belong to the group."}]}]},"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":28,"character":4}],"type":{"type":"reference","target":22599,"name":"SuiteFunction","package":"@serenity-js/playwright-test"}},{"id":22561,"name":"skip","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a skipped test group, similarly to\\n[test.describe(title, callback)](https://playwright.dev/docs/api/class-test#test-describe-1). Tests in the skipped\\ngroup are never run.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.skip(\'skipped group\', () => {\\n  test(\'example\', async ({ page }) => {\\n    // This test will not run\\n  });\\n});\\n```"}],"blockTags":[{"tag":"@param","name":"title","content":[{"kind":"text","text":"Group title."}]},{"tag":"@param","name":"callback","content":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.skip(title, callback)](https://playwright.dev/docs/api/class-test#test-describe-skip). Any tests\\nadded in this callback will belong to the group, and will not be run."}]}]},"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":49,"character":4}],"type":{"type":"reference","target":22599,"name":"SuiteFunction","package":"@serenity-js/playwright-test"}},{"id":22562,"name":"fixme","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a test group similarly to\\n[test.describe(title, callback)](https://playwright.dev/docs/api/class-test#test-describe-1). Tests in this group\\nare marked as \\"fixme\\" and will not be executed.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.fixme(\'broken tests\', () => {\\n  test(\'example\', async ({ page }) => {\\n    // This test will not run\\n  });\\n});\\n```"}],"blockTags":[{"tag":"@param","name":"title","content":[{"kind":"text","text":"Group title."}]},{"tag":"@param","name":"callback","content":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.fixme(title, callback)](https://playwright.dev/docs/api/class-test#test-describe-fixme). Any tests\\nadded in this callback will belong to the group, and will not be run."}]}]},"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":70,"character":4}],"type":{"type":"reference","target":22599,"name":"SuiteFunction","package":"@serenity-js/playwright-test"}},{"id":22563,"name":"serial","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"**NOTE** See [test.describe.configure([options])](https://playwright.dev/docs/api/class-test#test-describe-configure) for\\nthe preferred way of configuring the execution mode.\\n\\nDeclares a group of tests that should always be run serially. If one of the tests fails, all subsequent tests are\\nskipped. All tests in a group are retried together.\\n\\n**NOTE** Using serial is not recommended. It is usually better to make your tests isolated, so they can be run\\nindependently.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.serial(\'group\', () => {\\n  test(\'runs first\', async ({ page }) => {});\\n  test(\'runs second\', async ({ page }) => {});\\n});\\n```"}],"blockTags":[{"tag":"@param","name":"title","content":[{"kind":"text","text":"Group title."}]},{"tag":"@param","name":"callback","content":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.serial(title, callback)](https://playwright.dev/docs/api/class-test#test-describe-serial). Any tests\\nadded in this callback will belong to the group."}]}]},"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":95,"character":4}],"type":{"type":"intersection","types":[{"type":"reference","target":22599,"name":"SuiteFunction","package":"@serenity-js/playwright-test"},{"type":"reflection","declaration":{"id":22564,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":22565,"name":"only","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"**NOTE** See [test.describe.configure([options])](https://playwright.dev/docs/api/class-test#test-describe-configure) for\\nthe preferred way of configuring the execution mode.\\n\\nDeclares a focused group of tests that should always be run serially. If one of the tests fails, all subsequent\\ntests are skipped. All tests in a group are retried together. If there are some focused tests or suites, all of\\nthem will be run but nothing else.\\n\\n**NOTE** Using serial is not recommended. It is usually better to make your tests isolated, so they can be run\\nindependently.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.serial.only(\'group\', () => {\\n  test(\'runs first\', async ({ page }) => {\\n  });\\n  test(\'runs second\', async ({ page }) => {\\n  });\\n});\\n```"}],"blockTags":[{"tag":"@param","name":"title","content":[{"kind":"text","text":"Group title."}]},{"tag":"@param","name":"callback","content":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.serial.only(title, callback)](https://playwright.dev/docs/api/class-test#test-describe-serial-only).\\nAny tests added in this callback will belong to the group."}]}]},"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":123,"character":8}],"type":{"type":"reference","target":22599,"name":"SuiteFunction","package":"@serenity-js/playwright-test"}}],"groups":[{"title":"Properties","children":[22565]}],"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":95,"character":28}]}}]}},{"id":22566,"name":"parallel","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"**NOTE** See [test.describe.configure([options])](https://playwright.dev/docs/api/class-test#test-describe-configure) for\\nthe preferred way of configuring the execution mode.\\n\\nDeclares a group of tests that could be run in parallel. By default, tests in a single test file run one after\\nanother, but using\\n[test.describe.parallel(title, callback)](https://playwright.dev/docs/api/class-test#test-describe-parallel) allows\\nthem to run in parallel.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.parallel(\'group\', () => {\\n  test(\'runs in parallel 1\', async ({ page }) => {});\\n  test(\'runs in parallel 2\', async ({ page }) => {});\\n});\\n```"},{"kind":"text","text":"\\n\\nNote that parallel tests are executed in separate processes and cannot share any state or global variables. Each of\\nthe parallel tests executes all relevant hooks."}],"blockTags":[{"tag":"@param","name":"title","content":[{"kind":"text","text":"Group title."}]},{"tag":"@param","name":"callback","content":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.parallel(title, callback)](https://playwright.dev/docs/api/class-test#test-describe-parallel). Any\\ntests added in this callback will belong to the group."}]}]},"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":150,"character":4}],"type":{"type":"intersection","types":[{"type":"reference","target":22599,"name":"SuiteFunction","package":"@serenity-js/playwright-test"},{"type":"reflection","declaration":{"id":22567,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":22568,"name":"only","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"**NOTE** See [test.describe.configure([options])](https://playwright.dev/docs/api/class-test#test-describe-configure) for\\nthe preferred way of configuring the execution mode.\\n\\nDeclares a focused group of tests that could be run in parallel. This is similar to\\n[test.describe.parallel(title, callback)](https://playwright.dev/docs/api/class-test#test-describe-parallel), but\\nfocuses the group. If there are some focused tests or suites, all of them will be run but nothing else.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.parallel.only(\'group\', () => {\\n  test(\'runs in parallel 1\', async ({ page }) => {});\\n  test(\'runs in parallel 2\', async ({ page }) => {});\\n});\\n```"}],"blockTags":[{"tag":"@param","name":"title","content":[{"kind":"text","text":"Group title."}]},{"tag":"@param","name":"callback","content":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.parallel.only(title, callback)](https://playwright.dev/docs/api/class-test#test-describe-parallel-only).\\nAny tests added in this callback will belong to the group."}]}]},"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":173,"character":8}],"type":{"type":"reference","target":22599,"name":"SuiteFunction","package":"@serenity-js/playwright-test"}}],"groups":[{"title":"Properties","children":[22568]}],"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":150,"character":30}]}}]}},{"id":22569,"name":"configure","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the enclosing scope. Can be executed either on the top level or inside a describe. Configuration applies\\nto the entire scope, regardless of whether it run before or after the test declaration.\\n\\nLearn more about the execution modes [here](https://playwright.dev/docs/test-parallel).\\n\\n**Usage**\\n- Running tests in parallel.\\n\\n  "},{"kind":"code","text":"```js\\n  // Run all the tests in the file concurrently using parallel workers.\\n  test.describe.configure({ mode: \'parallel\' });\\n  test(\'runs in parallel 1\', async ({ page }) => {});\\n  test(\'runs in parallel 2\', async ({ page }) => {});\\n  ```"},{"kind":"text","text":"\\n\\n- Running tests serially, retrying from the start.\\n\\n  **NOTE** Running serially is not recommended. It is usually better to make your tests isolated, so they can be\\n  run independently.\\n\\n  "},{"kind":"code","text":"```js\\n  // Annotate tests as inter-dependent.\\n  test.describe.configure({ mode: \'serial\' });\\n  test(\'runs first\', async ({ page }) => {});\\n  test(\'runs second\', async ({ page }) => {});\\n  ```"},{"kind":"text","text":"\\n\\n- Configuring retries and timeout for each test.\\n\\n  "},{"kind":"code","text":"```js\\n  // Each test in the file will be retried twice and have a timeout of 20 seconds.\\n  test.describe.configure({ retries: 2, timeout: 20_000 });\\n  test(\'runs first\', async ({ page }) => {});\\n  test(\'runs second\', async ({ page }) => {});\\n  ```"},{"kind":"text","text":"\\n\\n- Run multiple describes in parallel, but tests inside each describe in order.\\n\\n  "},{"kind":"code","text":"```js\\n  test.describe.configure({ mode: \'parallel\' });\\n\\n  test.describe(\'A, runs in parallel with B\', () => {\\n    test.describe.configure({ mode: \'default\' });\\n    test(\'in order A1\', async ({ page }) => {});\\n    test(\'in order A2\', async ({ page }) => {});\\n  });\\n\\n  test.describe(\'B, runs in parallel with A\', () => {\\n    test.describe.configure({ mode: \'default\' });\\n    test(\'in order B1\', async ({ page }) => {});\\n    test(\'in order B2\', async ({ page }) => {});\\n  });\\n  ```"}]},"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":232,"character":4}],"type":{"type":"reflection","declaration":{"id":22570,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":232,"character":15}],"signatures":[{"id":22571,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"parameters":[{"id":22572,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":22573,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":22574,"name":"mode","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":232,"character":27}],"type":{"type":"union","types":[{"type":"literal","value":"default"},{"type":"literal","value":"parallel"},{"type":"literal","value":"serial"}]}},{"id":22575,"name":"retries","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":232,"character":69}],"type":{"type":"intrinsic","name":"number"}},{"id":22576,"name":"timeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":232,"character":87}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[22574,22575,22576]}],"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":232,"character":25}]}}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"groups":[{"title":"Properties","children":[22560,22561,22562,22563,22566,22569]}],"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":5,"character":47}]}}]},"permalink":"/api/playwright-test#DescribeFunction","previousId":22555,"nextId":22577},{"id":22577,"name":"PlaywrightTestConfig","variant":"declaration","kind":2097152,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Convenience alias for [PlaywrightTestConfig](https://playwright.dev/docs/test-configuration) object\\nthat includes ["},{"kind":"code","text":"`SerenityOptions`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityOptions/) and allows for any other custom options when needed.\\n\\n#### Example\\nConfiguring Playwright Test using the standard "},{"kind":"code","text":"`PlaywrightTestConfig`"},{"kind":"text","text":" from "},{"kind":"code","text":"`@playwright/test`"},{"kind":"text","text":":\\n\\n"},{"kind":"code","text":"```typescript\\n// playwright.config.ts\\nimport type { PlaywrightTestConfig } from \'@playwright/test\'\\nimport type { SerenityOptions } from \'@serenity-js/playwright-test\'\\n\\nconst config: PlaywrightTestConfig<SerenityOptions & MyCustomOptions> = {\\n    // ...\\n}\\n\\nexport default config\\n```"},{"kind":"text","text":"\\n\\nSimplified configuration using Serenity/JS "},{"kind":"code","text":"`PlaywrightTestConfig`"},{"kind":"text","text":" from "},{"kind":"code","text":"`@serenity-js/playwright-test`"},{"kind":"text","text":":\\n\\n"},{"kind":"code","text":"```typescript\\n// playwright.config.ts\\nimport type { PlaywrightTestConfig } from \'@serenity-js/playwright-test\'\\n\\nconst config: PlaywrightTestConfig<MyCustomOptions> = {\\n   // ...\\n}\\nexport default config\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`SerenityOptions`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityOptions/)\\n- ["},{"kind":"code","text":"`SerenityFixtures`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityFixtures/)\\n- ["},{"kind":"code","text":"`SerenityReporterForPlaywrightTestConfig`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityReporterForPlaywrightTestConfig/)\\n- [Playwright Test configuration](https://playwright.dev/docs/test-configuration)"}]},"sources":[{"fileName":"packages/playwright-test/src/api/PlaywrightTestConfig.ts","line":42,"character":12}],"typeParameters":[{"id":22578,"name":"TestArgs","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"object"}},{"id":22579,"name":"WorkerArgs","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"object"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestConfig"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":22592,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"reference","target":22578,"name":"TestArgs","package":"@serenity-js/playwright-test","refersToTypeParameter":true}]},{"type":"reference","target":22579,"name":"WorkerArgs","package":"@serenity-js/playwright-test","refersToTypeParameter":true}],"name":"BasePlaywrightTestConfig","package":"playwright","qualifiedName":"PlaywrightTestConfig"},"permalink":"/api/playwright-test#PlaywrightTestConfig","previousId":22558,"nextId":22621},{"id":22580,"name":"SerenityFixtures","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Serenity/JS-specific [Playwright Test fixtures](https://playwright.dev/docs/test-fixtures)\\ninjected into your [test scenarios](/api/playwright-test/function/it/).\\n\\n## Example test scenario\\n\\n"},{"kind":"code","text":"```typescript\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { describe, it, test } from \'@serenity-js/playwright-test\'\\nimport { Photographer, TakePhotosOfFailures } from \'@serenity-js/web\'\\n\\ndescribe(`Recording items`, () => {\\n\\n    test.use({\\n        defaultActorName: \'Serena\',\\n        crew: [\\n            Photographer.whoWill(TakePhotosOfFailures),\\n        ],\\n    })\\n\\n    describe(`Todo List App`, () => {\\n\\n        it(`should allow me to add a todo item`, async ({ actor }) => {\\n            await actor.attemptsTo(\\n                startWithAnEmptyList(),\\n\\n                recordItem(\'Buy some milk\'),\\n\\n                Ensure.that(itemNames(), equals([\\n                    \'Buy some milk\',\\n                ])),\\n            )\\n        })\\n    })\\n})\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- Declaring a Serenity/JS [test scenario](/api/playwright-test/function/it/)\\n- [Grouping test scenarios](/api/playwright-test/function/describe/)\\n- [Serenity/JS + Playwright Test project template](https://github.com/serenity-js/serenity-js-playwright-test-template/)"}]},"children":[{"id":22581,"name":"serenity","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Retrieves the root object of the Serenity/JS framework."}]},"sources":[{"fileName":"packages/playwright-test/src/api/SerenityFixtures.ts","line":50,"character":4}],"type":{"type":"reference","target":1898,"name":"Serenity","package":"@serenity-js/core"}},{"id":22582,"name":"platform","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Name and version of the operating system that Playwright Test worker process runs on."}]},"sources":[{"fileName":"packages/playwright-test/src/api/SerenityFixtures.ts","line":55,"character":4}],"type":{"type":"reflection","declaration":{"id":22583,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":22584,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/SerenityFixtures.ts","line":55,"character":16}],"type":{"type":"intrinsic","name":"string"}},{"id":22585,"name":"version","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/SerenityFixtures.ts","line":55,"character":30}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[22584,22585]}],"sources":[{"fileName":"packages/playwright-test/src/api/SerenityFixtures.ts","line":55,"character":14}]}}},{"id":22586,"name":"actors","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A cast of Serenity/JS actors to be used instead of the default cast\\nwhen instantiating ["},{"kind":"code","text":"`actor`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityFixtures/#actor)\\nand invoking ["},{"kind":"code","text":"`actorCalled`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityFixtures/#actorCalled).\\n\\n#### Overriding the default cast of Serenity/JS actors\\n\\n"},{"kind":"code","text":"```typescript\\nimport { Cast, TakeNotes } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { BrowseTheWebWithPlaywright } from \'@serenity-js/playwright\'\\nimport { describe, it, test } from \'@serenity-js/playwright-test\'\\n\\ndescribe(`Recording items`, () => {\\n\\n    test.use({\\n        defaultActorName: \'Serena\',\\n        actors: ({ browser, contextOptions }, use) => {\\n            const cast = Cast.where(actor =>\\n                actor.whoCan(\\n                    BrowseTheWebWithPlaywright.using(browser, contextOptions),\\n                    TakeNotes.usingAnEmptyNotepad(),\\n                )\\n            )\\n\\n            // Make sure to pass your custom cast to Playwright `use` callback\\n            use(cast)\\n        },\\n    })\\n\\n    describe(`Todo List App`, () => {\\n\\n        it(`should allow me to add a todo item`, async ({ actor }) => {\\n            await actor.attemptsTo(\\n                startWithAnEmptyList(),\\n\\n                recordItem(\'Buy some milk\'),\\n\\n                Ensure.that(itemNames(), equals([\\n                    \'Buy some milk\',\\n                ])),\\n            )\\n        })\\n    })\\n})\\n```"}]},"sources":[{"fileName":"packages/playwright-test/src/api/SerenityFixtures.ts","line":104,"character":4}],"type":{"type":"reference","target":1947,"name":"Cast","package":"@serenity-js/core"}},{"id":22587,"name":"actorCalled","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Uses the provided [cast](/api/core/class/Cast/) of ["},{"kind":"code","text":"`actors`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityFixtures/#actors) to instantiate an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) called "},{"kind":"code","text":"`name`"},{"kind":"text","text":"\\nand inject it into a [test scenario](/api/playwright-test/function/it/).\\n\\nRetrieves an existing actor if one has already been instantiated.\\n\\n#### Learn more\\n- Declaring a Serenity/JS [test scenario](/api/playwright-test/function/it/)\\n- ["},{"kind":"code","text":"`SerenityOptions.actors`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityOptions/#actors)\\n- ["},{"kind":"code","text":"`SerenityFixtures.actors`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityFixtures/#actors)"}]},"sources":[{"fileName":"packages/playwright-test/src/api/SerenityFixtures.ts","line":119,"character":4}],"type":{"type":"reflection","declaration":{"id":22588,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/SerenityFixtures.ts","line":119,"character":17}],"signatures":[{"id":22589,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/SerenityFixtures.ts","line":119,"character":17}],"parameters":[{"id":22590,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":637,"name":"Actor","package":"@serenity-js/core"}}]}}},{"id":22591,"name":"actor","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Default ["},{"kind":"code","text":"`actor`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityFixtures/#actor) injected into a [test scenario](/api/playwright-test/function/it/).\\n\\nUsing "},{"kind":"code","text":"`actor`"},{"kind":"text","text":" fixture is equivalent to invoking ["},{"kind":"code","text":"`actorCalled`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityFixtures/#actorCalled) with ["},{"kind":"code","text":"`defaultActorName`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityOptions/#defaultActorName).\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`actorCalled`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityFixtures/#actorCalled)\\n- ["},{"kind":"code","text":"`SerenityOptions.defaultActorName`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityOptions/#defaultActorName)\\n- Declaring a Serenity/JS [test scenario](/api/playwright-test/function/it/)"}]},"sources":[{"fileName":"packages/playwright-test/src/api/SerenityFixtures.ts","line":131,"character":4}],"type":{"type":"reference","target":637,"name":"Actor","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[22581,22582,22586,22587,22591]}],"sources":[{"fileName":"packages/playwright-test/src/api/SerenityFixtures.ts","line":45,"character":17}],"permalink":"/api/playwright-test/interface/SerenityFixtures","previousId":22615,"nextId":22592},{"id":22592,"name":"SerenityOptions","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configuration object accepted by "},{"kind":"code","text":"`@serenity-js/playwright-test`"},{"kind":"text","text":".\\n\\n## Example\\n\\n"},{"kind":"code","text":"```typescript\\n// playwright.config.ts\\nimport type { Cast, TakeNotes } from \'@serenity-js/core\'\\nimport type { BrowseTheWebWithPlaywright } from \'@serenity-js/playwright\'\\nimport type { PlaywrightTestConfig } from \'@serenity-js/playwright-test\'\\nimport type { CallAnApi } from \'@serenity-js/rest\'\\n\\n// Define any custom configuration options, if needed\\ninterface MyCustomOptions {\\n    apiUrl: string;\\n}\\n\\nconst config: PlaywrightTestConfig<MyCustomOptions> = {\\n\\n    // Register Serenity/JS reporter for Playwright Test\\n    // to enable integration with Serenity/JS stage crew members\\n    // and have them instantiated in the Playwright reporter process\\n    reporter: [\\n        [ \'@serenity-js/playwright-test\', {\\n            // Stage crew members instantiated in the test reporter process\\n            crew: [\\n                \'@serenity-js/serenity-bdd\',\\n                \'@serenity-js/console-reporter\',\\n                [ \'@serenity-js/core:ArtifactArchiver\', { outputDirectory: \'target/site/serenity\' } ],\\n            ]\\n        }]\\n    ],\\n\\n    use: {\\n\\n        // Register Serenity/JS stage crew members\\n        // and have them instantiated in Playwright Test worker processes\\n        crew: [\\n            [ \'@serenity-js/web:Photographer\', { strategy: \'TakePhotosOfFailures\' } ]\\n        ],\\n\\n        // Register a custom cast of Serenity/JS actors\\n        // if you don\'t want to use the default ones\\n        actors: ({ browser, contextOptions, apiUrl }, use) => {\\n             const cast = Cast.where(actor =>\\n                 actor.whoCan(\\n                     BrowseTheWebWithPlaywright.using(browser, contextOptions),\\n                     TakeNotes.usingAnEmptyNotepad(),\\n                     CallAnApi.at(apiUrl),\\n                 )\\n             )\\n\\n             use(cast)\\n        },\\n\\n        // Name to be given to an actor injected via `actor` fixture\\n        defaultActorName: \'Alice\',\\n\\n        // Any custom options, as per the MyCustomOptions interface\\n        apiUrl: \'https://api.serenity-js.org/v1\'\\n\\n        // Any other Playwright options\\n        baseURL: \'https://todo-app.serenity-js.org/\',\\n        video: \'on-first-retry\',\\n        trace: \'on-first-retry\',\\n    },\\n}\\n\\nexport default config\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`PlaywrightTestConfig`"},{"kind":"text","text":"](/api/playwright-test/#PlaywrightTestConfig)\\n- ["},{"kind":"code","text":"`Cast`"},{"kind":"text","text":"](/api/core/class/Cast/)\\n- ["},{"kind":"code","text":"`SerenityFixtures`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityFixtures/)"}]},"children":[{"id":22593,"name":"actors","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the ["},{"kind":"code","text":"`Cast`"},{"kind":"text","text":"](/api/core/class/Cast/) of ["},{"kind":"code","text":"`SerenityConfig.actors|actors`"},{"kind":"text","text":"](/api/core/class/SerenityConfig/#actors) to be used when injecting an ["},{"kind":"code","text":"`actor`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityFixtures/#actor)\\nor invoking ["},{"kind":"code","text":"`actorCalled`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityFixtures/#actorCalled) in a [test scenario](/api/playwright-test/function/it/).\\n\\n:::info Did you know?\\nWhen you use "},{"kind":"code","text":"`@serenity-js/playwright-test`"},{"kind":"text","text":" [test APIs](/api/playwright-test/function/it/), Serenity/JS already provides a default cast of actors for you.\\nEach one of the default actors receives [abilities](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWebWithPlaywright`"},{"kind":"text","text":"](/api/playwright/class/BrowseTheWebWithPlaywright/) and ["},{"kind":"code","text":"`TakeNotes.usingAnEmptyNotepad`"},{"kind":"text","text":"](/api/core/class/TakeNotes/#usingAnEmptyNotepad).\\n\\nThe default abilities should be sufficient in most web testing scenarios. However, you might want to override this default configuration\\nwhen you need your actors to [interact with REST APIs](/api/rest/class/CallAnApi/),\\n[manage local servers](/api/local-server/class/ManageALocalServer/),\\nstart with a notepad that has some [initial state](/api/core/class/TakeNotes/#using),\\nor receive [custom abilities](/api/core/class/Ability/).\\n:::\\n\\n#### Using a custom crew of Serenity/JS actors\\n\\n"},{"kind":"code","text":"```typescript\\n// playwright.config.ts\\nimport type { PlaywrightTestConfig } from \'@serenity-js/playwright-test\'\\nimport { Cast, TakeNotes } from \'@serenity-js/core\'\\nimport { BrowseTheWebWithPlaywright } from \'@serenity-js/playwright\'\\nimport { CallAnApi } from \'@serenity-js/rest\'\\n\\n// Define any custom configuration options, if needed\\ninterface MyCustomOptions {\\n    apiUrl: string;\\n}\\n\\n// Parameterise PlaywrightTestConfig with MyCustomOptions\\n// to enable type checking of any custom properties\\nconst config: PlaywrightTestConfig<MyCustomOptions> = {\\n    use: {\\n        contextOptions: {\\n            defaultNavigationTimeout: 30_000,\\n        },\\n\\n        // custom properties\\n        apiUrl: \'https://api.serenity-js.org/v1\',\\n\\n        // Custom cast of actors receives `contextOptions`\\n        // with the additional Serenity/JS properties (see `PlaywrightOptions`),\\n        // as well as any other custom properties you define in the destructuring expression,\\n        // such as `apiUrl`.\\n        actors: ({ browser, contextOptions, apiUrl }, use) => {\\n            const cast = Cast.where(actor => actor.whoCan(\\n                BrowseTheWebWithPlaywright.using(browser, contextOptions),\\n                TakeNotes.usingAnEmptyNotepad(),\\n                CallAnApi.at(apiUrl),\\n            ))\\n\\n            // Make sure to pass your custom cast to Playwright `use` callback\\n            use(cast)\\n        },\\n    },\\n};\\nexport default config\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- Declaring a Serenity/JS [test scenario](/api/playwright-test/function/it/)\\n- ["},{"kind":"code","text":"`SerenityFixtures`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityFixtures/)"}]},"sources":[{"fileName":"packages/playwright-test/src/api/SerenityOptions.ts","line":146,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestFixture"},"typeArguments":[{"type":"reference","target":1947,"name":"Cast","package":"@serenity-js/core"},{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"}]}],"name":"TestFixture","package":"playwright"}},{"id":22594,"name":"defaultActorName","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the name given to the default Serenity/JS ["},{"kind":"code","text":"`actor`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityFixtures/#actor)\\ninjected into a [test scenario](/api/playwright-test/function/it/).\\n\\n#### Learn more\\n- Declaring a Serenity/JS [test scenario](/api/playwright-test/function/it/)\\n- ["},{"kind":"code","text":"`SerenityFixtures`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityFixtures/)"}]},"sources":[{"fileName":"packages/playwright-test/src/api/SerenityOptions.ts","line":156,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":22595,"name":"crew","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the ["},{"kind":"code","text":"`SerenityConfig.crew|stage crew members`"},{"kind":"text","text":"](/api/core/class/SerenityConfig/#crew|stage crew members)\\nto be instantiated in Playwright Test worker processes.\\n\\n:::info Did you know?\\nBy default, Serenity/JS registers a ["},{"kind":"code","text":"`Photographer`"},{"kind":"text","text":"](/api/web/class/Photographer/).whoWill(["},{"kind":"code","text":"`TakePhotosOfFailures`"},{"kind":"text","text":"](/api/web/class/TakePhotosOfFailures/)),\\nso that any test failures are automatically accompanied by a screenshot.\\n\\nIf you prefer a different behaviour, you can configure the "},{"kind":"code","text":"`crew`"},{"kind":"text","text":" with an empty array to disable taking screenshots altogether ("},{"kind":"code","text":"`crew: []`"},{"kind":"text","text":"),\\nor with a ["},{"kind":"code","text":"`Photographer`"},{"kind":"text","text":"](/api/web/class/Photographer/) who uses a different ["},{"kind":"code","text":"`PhotoTakingStrategy`"},{"kind":"text","text":"](/api/web/class/PhotoTakingStrategy/), like to ["},{"kind":"code","text":"`TakePhotosOfInteractions`"},{"kind":"text","text":"](/api/web/class/TakePhotosOfInteractions/).\\n:::\\n\\n#### Example\\n\\n"},{"kind":"code","text":"```typescript\\n// playwright.config.ts\\nimport type { PlaywrightTestConfig } from \'@serenity-js/playwright-test\'\\n\\nconst config: PlaywrightTestConfig = {\\n    use: {\\n        crew: [\\n            [ \'@serenity-js/web:Photographer\', { strategy: \'TakePhotosOfFailures\' } ]\\n        ],\\n    },\\n};\\nexport default config\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`SerenityConfig.crew`"},{"kind":"text","text":"](/api/core/class/SerenityConfig/#crew)"}]},"sources":[{"fileName":"packages/playwright-test/src/api/SerenityOptions.ts","line":189,"character":4}],"type":{"type":"array","elementType":{"type":"union","types":[{"type":"reference","target":2181,"name":"StageCrewMember","package":"@serenity-js/core"},{"type":"reference","target":2188,"typeArguments":[{"type":"reference","target":2021,"name":"ListensToDomainEvents","package":"@serenity-js/core"}],"name":"StageCrewMemberBuilder","package":"@serenity-js/core"},{"type":"reference","target":66,"name":"ClassDescription","package":"@serenity-js/core"}]}}},{"id":22596,"name":"cueTimeout","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Sets the ["},{"kind":"code","text":"`SerenityConfig.cueTimeout|cueTimeout`"},{"kind":"text","text":"](/api/core/class/SerenityConfig/#cueTimeout) to a given [duration](/api/core/class/Duration/) or a numeric value in milliseconds.\\nDefaults to **5 seconds**.\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`SerenityConfig.cueTimeout`"},{"kind":"text","text":"](/api/core/class/SerenityConfig/#cueTimeout)\\n- ["},{"kind":"code","text":"`Discardable`"},{"kind":"text","text":"](/api/core/interface/Discardable/)\\n- ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/)"}]},"sources":[{"fileName":"packages/playwright-test/src/api/SerenityOptions.ts","line":200,"character":4}],"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"reference","target":1742,"name":"Duration","package":"@serenity-js/core"}]}},{"id":22597,"name":"interactionTimeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The maximum default amount of time allowed for interactions such as ["},{"kind":"code","text":"`Wait.until`"},{"kind":"text","text":"](/api/core/class/Wait/#until)\\nto complete.\\n\\nDefaults to **5 seconds**, can be overridden per interaction.\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Wait.until`"},{"kind":"text","text":"](/api/core/class/Wait/#until)"}]},"sources":[{"fileName":"packages/playwright-test/src/api/SerenityOptions.ts","line":211,"character":4}],"type":{"type":"reference","target":1742,"name":"Duration","package":"@serenity-js/core"}},{"id":22598,"name":"contextOptions","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Playwright [BrowserContextOptions](https://playwright.dev/docs/api/class-testoptions#test-options-context-options),\\naugmented with several convenience properties to be used with the [ability](/api/core/class/Ability/)\\nto ["},{"kind":"code","text":"`BrowseTheWebWithPlaywright`"},{"kind":"text","text":"](/api/playwright/class/BrowseTheWebWithPlaywright/).\\n\\nAdditional convenience properties include:\\n- ["},{"kind":"code","text":"`PlaywrightOptions.defaultNavigationTimeout`"},{"kind":"text","text":"](/api/playwright/interface/PlaywrightOptions/#defaultNavigationTimeout)\\n- ["},{"kind":"code","text":"`PlaywrightOptions.defaultNavigationWaitUntil`"},{"kind":"text","text":"](/api/playwright/interface/PlaywrightOptions/#defaultNavigationWaitUntil)\\n- ["},{"kind":"code","text":"`PlaywrightOptions.defaultTimeout`"},{"kind":"text","text":"](/api/playwright/interface/PlaywrightOptions/#defaultTimeout)\\n\\n#### Using "},{"kind":"code","text":"`contextOptions`"},{"kind":"text","text":" with the default cast of Serenity/JS actors\\n\\n"},{"kind":"code","text":"```typescript\\n// playwright.config.ts\\nimport type { PlaywrightTestConfig } from \'@serenity-js/playwright-test\'\\n\\nconst config: PlaywrightTestConfig = {\\n    use: {\\n        contextOptions: {\\n            defaultNavigationTimeout: 30_000,\\n        }\\n\\n        // Since `actors` property is not defined,\\n        // `contextOptions` will be passed to the default cast of Serenity/JS actors\\n        // and injected into the ability to `BrowseTheWebWithPlaywright`\\n        // that each actor receives.\\n    },\\n};\\nexport default config;\\n```"},{"kind":"text","text":"\\n\\n#### Using "},{"kind":"code","text":"`contextOptions`"},{"kind":"text","text":" with a custom cast of Serenity/JS actors\\n\\n"},{"kind":"code","text":"```typescript\\n// playwright.config.ts\\nimport type { PlaywrightTestConfig } from \'@serenity-js/playwright-test\'\\n\\nconst config: PlaywrightTestConfig = {\\n    use: {\\n        contextOptions: {\\n            defaultNavigationTimeout: 30_000,\\n        }\\n\\n        // Custom cast of actors receives `contextOptions` with the\\n        // additional Serenity/JS properties.\\n        actors: ({ browser, contextOptions }, use) => {\\n            const cast = Cast.where(actor => actor.whoCan(\\n                BrowseTheWebWithPlaywright.using(browser, contextOptions),\\n                TakeNotes.usingAnEmptyNotepad(),\\n            ))\\n\\n            use(cast)\\n        },\\n    },\\n};\\nexport default config;\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`SerenityFixtures`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityFixtures/)\\n- [Playwright Browser Context options](https://playwright.dev/docs/api/class-testoptions#test-options-context-options)\\n- [Playwright Test fixtures](https://playwright.dev/docs/test-fixtures)"}]},"sources":[{"fileName":"packages/playwright-test/src/api/SerenityOptions.ts","line":276,"character":4}],"type":{"type":"reference","target":5116,"name":"PlaywrightOptions","package":"@serenity-js/playwright"}}],"groups":[{"title":"Properties","children":[22593,22594,22595,22596,22597,22598]}],"sources":[{"fileName":"packages/playwright-test/src/api/SerenityOptions.ts","line":81,"character":17}],"permalink":"/api/playwright-test/interface/SerenityOptions","previousId":22580,"nextId":22599},{"id":22599,"name":"SuiteFunction","variant":"declaration","kind":256,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/SuiteFunction.ts","line":6,"character":17}],"signatures":[{"id":22600,"name":"SuiteFunction","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a group of tests.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe(\'two tests\', () => {\\n  test(\'one\', async ({ page }) => {\\n    // ...\\n  });\\n\\n  test(\'two\', async ({ page }) => {\\n    // ...\\n  });\\n});\\n```"}]},"sources":[{"fileName":"packages/playwright-test/src/api/SuiteFunction.ts","line":29,"character":4}],"parameters":[{"id":22601,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Group title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":22602,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe(title, callback)](https://playwright.dev/docs/api/class-test#test-describe-1). Any tests added in\\nthis callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":22603,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/SuiteFunction.ts","line":29,"character":30}],"signatures":[{"id":22604,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/SuiteFunction.ts","line":29,"character":30}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":22605,"name":"SuiteFunction","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares an anonymous group of tests. This is convenient to give a group of tests a common option with\\n[test.use(options)](https://playwright.dev/docs/api/class-test#test-use).\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe(() => {\\n  test.use({ colorScheme: \'dark\' });\\n\\n  test(\'one\', async ({ page }) => {\\n    // ...\\n  });\\n\\n  test(\'two\', async ({ page }) => {\\n    // ...\\n  });\\n});\\n```"}]},"sources":[{"fileName":"packages/playwright-test/src/api/SuiteFunction.ts","line":54,"character":4}],"parameters":[{"id":22606,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe(callback)](https://playwright.dev/docs/api/class-test#test-describe-2). Any tests added in this\\ncallback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":22607,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/SuiteFunction.ts","line":54,"character":15}],"signatures":[{"id":22608,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/SuiteFunction.ts","line":54,"character":15}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":22609,"name":"SuiteFunction","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a group of tests."}]},"sources":[{"fileName":"packages/playwright-test/src/api/SuiteFunction.ts","line":65,"character":4}],"parameters":[{"id":22610,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Group title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":22611,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Additional details for all tests in the group."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestDetails"},"name":"TestDetails","package":"playwright"}},{"id":22612,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe(title, callback)](https://playwright.dev/docs/api/class-test#test-describe-1). Any tests added in\\nthis callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":22613,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/SuiteFunction.ts","line":65,"character":52}],"signatures":[{"id":22614,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/SuiteFunction.ts","line":65,"character":52}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}],"permalink":"/api/playwright-test/interface/SuiteFunction","previousId":22592,"nextId":22555},{"id":22620,"name":"fixtures","variant":"declaration","kind":32,"flags":{"isExternal":true,"isConst":true},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":34,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"Fixtures"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22592,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22580,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"}]},{"type":"intrinsic","name":"object"},{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"}]},{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"}]}],"name":"Fixtures","package":"playwright"},"defaultValue":"...","permalink":"/api/playwright-test#fixtures","previousId":22621},{"id":22621,"name":"TestApi","variant":"declaration","kind":2097152,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Serenity/JS BDD-style test API created by ["},{"kind":"code","text":"`useBase`"},{"kind":"text","text":"](/api/playwright-test/function/useBase/)."}]},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":168,"character":12}],"typeParameters":[{"id":22632,"name":"TestArgs","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"}},{"id":22633,"name":"WorkerArgs","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"}}],"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Pick"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestType"},"typeArguments":[{"type":"reference","target":22632,"name":"TestArgs","package":"@serenity-js/playwright-test","refersToTypeParameter":true},{"type":"reference","target":22633,"name":"WorkerArgs","package":"@serenity-js/playwright-test","refersToTypeParameter":true}],"name":"TestType","package":"playwright"},{"type":"union","types":[{"type":"literal","value":"beforeAll"},{"type":"literal","value":"beforeEach"},{"type":"literal","value":"afterEach"},{"type":"literal","value":"afterAll"},{"type":"literal","value":"expect"}]}],"name":"Pick","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#picktype-keys"},{"type":"reflection","declaration":{"id":22622,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":22623,"name":"useFixtures","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates a Serenity/JS BDD-style test API around the default Playwright [base test](https://playwright.dev/docs/test-fixtures)\\nand using custom test fixtures.\\n\\n"},{"kind":"code","text":"```typescript\\nimport { useFixtures } from \'@serenity-js/playwright-test\'\\nimport { Log } from \'@serenity-js/core\'\\n\\nconst { describe, it } = useFixtures<{ message: string }>({\\n  message: \'Hello world!\'\\n})\\n\\ndescribe(\'Serenity/JS useFixtures\', () => {\\n\\n  it(\'enables injecting custom test fixtures into test scenarios\', async ({ actor, message }) => {\\n    await actor.attemptsTo(\\n      Log.the(message),\\n    )\\n  })\\n})\\n```"},{"kind":"text","text":"\\n\\nShorthand for ["},{"kind":"code","text":"`useBase`"},{"kind":"text","text":"](/api/playwright-test/function/useBase/)"}]},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":195,"character":8}],"type":{"type":"reflection","declaration":{"id":22624,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":195,"character":21}],"signatures":[{"id":22625,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"typeParameter":[{"id":22627,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"}},{"id":22628,"name":"W","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"},"default":{"type":"intrinsic","name":"object"}}],"parameters":[{"id":22626,"name":"customFixtures","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"Fixtures"},"typeArguments":[{"type":"reference","target":22627,"name":"T","package":"@serenity-js/playwright-test","refersToTypeParameter":true},{"type":"reference","target":22628,"name":"W","package":"@serenity-js/playwright-test","refersToTypeParameter":true},{"type":"reference","target":22632,"name":"TestArgs","package":"@serenity-js/playwright-test","refersToTypeParameter":true},{"type":"reference","target":22633,"name":"WorkerArgs","package":"@serenity-js/playwright-test","refersToTypeParameter":true}],"name":"Fixtures","package":"playwright"}}],"type":{"type":"reference","target":22621,"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":22632,"name":"TestArgs","package":"@serenity-js/playwright-test","refersToTypeParameter":true},{"type":"reference","target":22627,"name":"T","package":"@serenity-js/playwright-test","refersToTypeParameter":true}]},{"type":"intersection","types":[{"type":"reference","target":22633,"name":"WorkerArgs","package":"@serenity-js/playwright-test","refersToTypeParameter":true},{"type":"reference","target":22628,"name":"W","package":"@serenity-js/playwright-test","refersToTypeParameter":true}]}],"name":"TestApi","package":"@serenity-js/playwright-test"}}]}}},{"id":22629,"name":"it","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":196,"character":8}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestType"},"typeArguments":[{"type":"reference","target":22632,"name":"TestArgs","package":"@serenity-js/playwright-test","refersToTypeParameter":true},{"type":"reference","target":22633,"name":"WorkerArgs","package":"@serenity-js/playwright-test","refersToTypeParameter":true}],"name":"TestType","package":"playwright"}},{"id":22630,"name":"test","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":197,"character":8}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestType"},"typeArguments":[{"type":"reference","target":22632,"name":"TestArgs","package":"@serenity-js/playwright-test","refersToTypeParameter":true},{"type":"reference","target":22633,"name":"WorkerArgs","package":"@serenity-js/playwright-test","refersToTypeParameter":true}],"name":"TestType","package":"playwright"}},{"id":22631,"name":"describe","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":198,"character":8}],"type":{"type":"reference","target":22558,"name":"DescribeFunction","package":"@serenity-js/playwright-test"}}],"groups":[{"title":"Properties","children":[22623,22629,22630,22631]}],"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":170,"character":4}]}}]},"permalink":"/api/playwright-test#TestApi","previousId":22577,"nextId":22620},{"id":22634,"name":"it","variant":"declaration","kind":64,"flags":{"isExternal":true},"children":[{"id":22650,"name":"only","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a focused test. If there are some focused tests or suites, all of them will be run but nothing else.\\n- "},{"kind":"code","text":"`test.only(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.only(title, details, body)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.only(\'focus this test\', async ({ page }) => {\\n  // Run only focused tests in the entire project.\\n});\\n```"}],"blockTags":[{"tag":"@param","name":"title","content":[{"kind":"text","text":"Test title."}]},{"tag":"@param","name":"details","content":[{"kind":"text","text":"See [test.(call)(title[, details, body])](https://playwright.dev/docs/api/class-test#test-call) for test details\\ndescription."}]},{"tag":"@param","name":"body","content":[{"kind":"text","text":"Test body that takes one or two arguments: an object with fixtures and optional "},{"kind":"inline-tag","tag":"@link","text":"TestInfo","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"tsLinkText":""},{"kind":"text","text":"."}]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestFunction"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22592,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22580,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}],"name":"TestFunction","package":"playwright"}},{"id":22651,"name":"describe","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a group of tests.\\n- "},{"kind":"code","text":"`test.describe(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe(callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a group of tests with a title. The title will be visible in the test report as a part of each\\ntest\'s title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe(\'two tests\', () => {\\n  test(\'one\', async ({ page }) => {\\n    // ...\\n  });\\n\\n  test(\'two\', async ({ page }) => {\\n    // ...\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\n**Anonymous group**\\n\\nYou can also declare a test group without a title. This is convenient to give a group of tests a common option with\\n[test.use(options)](https://playwright.dev/docs/api/class-test#test-use).\\n\\n"},{"kind":"code","text":"```js\\ntest.describe(() => {\\n  test.use({ colorScheme: \'dark\' });\\n\\n  test(\'one\', async ({ page }) => {\\n    // ...\\n  });\\n\\n  test(\'two\', async ({ page }) => {\\n    // ...\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\n**Tags**\\n\\nYou can tag all tests in a group by providing additional details. Note that each tag must start with "},{"kind":"code","text":"`@`"},{"kind":"text","text":" symbol.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.describe(\'two tagged tests\', {\\n  tag: \'@smoke\',\\n}, () => {\\n  test(\'one\', async ({ page }) => {\\n    // ...\\n  });\\n\\n  test(\'two\', async ({ page }) => {\\n    // ...\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\nLearn more about [tagging](https://playwright.dev/docs/test-annotations#tag-tests).\\n\\n**Annotations**\\n\\nYou can annotate all tests in a group by providing additional details.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.describe(\'two annotated tests\', {\\n  annotation: {\\n    type: \'issue\',\\n    description: \'https://github.com/microsoft/playwright/issues/23180\',\\n  },\\n}, () => {\\n  test(\'one\', async ({ page }) => {\\n    // ...\\n  });\\n\\n  test(\'two\', async ({ page }) => {\\n    // ...\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\nLearn more about [test annotations](https://playwright.dev/docs/test-annotations)."}],"blockTags":[{"tag":"@param","name":"title","content":[{"kind":"text","text":"Group title."}]},{"tag":"@param","name":"details","content":[{"kind":"text","text":"Additional details for all tests in the group."}]},{"tag":"@param","name":"callback","content":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe). Any tests\\ndeclared in this callback will belong to the group."}]}]},"sources":[],"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"SuiteFunction"},"name":"SuiteFunction","package":"playwright"},{"type":"reflection","declaration":{"id":22652,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":22653,"name":"only","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a focused group of tests. If there are some focused tests or suites, all of them will be run but nothing\\nelse.\\n- "},{"kind":"code","text":"`test.describe.only(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.only(callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.only(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.only(\'focused group\', () => {\\n  test(\'in the focused group\', async ({ page }) => {\\n    // This test will run\\n  });\\n});\\ntest(\'not in the focused group\', async ({ page }) => {\\n  // This test will not run\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.only(() => {\\n  // ...\\n});\\n```"}],"blockTags":[{"tag":"@param","name":"title","content":[{"kind":"text","text":"Group title."}]},{"tag":"@param","name":"details","content":[{"kind":"text","text":"See [test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) for\\ndetails description."}]},{"tag":"@param","name":"callback","content":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.only([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-only).\\nAny tests added in this callback will belong to the group."}]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"SuiteFunction"},"name":"SuiteFunction","package":"playwright"}},{"id":22654,"name":"skip","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a skipped test group, similarly to\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe). Tests in the\\nskipped group are never run.\\n- "},{"kind":"code","text":"`test.describe.skip(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.skip(title)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.skip(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.skip(\'skipped group\', () => {\\n  test(\'example\', async ({ page }) => {\\n    // This test will not run\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.skip(() => {\\n  // ...\\n});\\n```"}],"blockTags":[{"tag":"@param","name":"title","content":[{"kind":"text","text":"Group title."}]},{"tag":"@param","name":"details","content":[{"kind":"text","text":"See [test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) for\\ndetails description."}]},{"tag":"@param","name":"callback","content":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.skip(title[, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-skip).\\nAny tests added in this callback will belong to the group, and will not be run."}]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"SuiteFunction"},"name":"SuiteFunction","package":"playwright"}},{"id":22655,"name":"fixme","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a test group similarly to\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe). Tests in\\nthis group are marked as \\"fixme\\" and will not be executed.\\n- "},{"kind":"code","text":"`test.describe.fixme(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.fixme(callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.fixme(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.fixme(\'broken tests that should be fixed\', () => {\\n  test(\'example\', async ({ page }) => {\\n    // This test will not run\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.fixme(() => {\\n  // ...\\n});\\n```"}],"blockTags":[{"tag":"@param","name":"title","content":[{"kind":"text","text":"Group title."}]},{"tag":"@param","name":"details","content":[{"kind":"text","text":"See [test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) for\\ndetails description."}]},{"tag":"@param","name":"callback","content":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.fixme([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-fixme).\\nAny tests added in this callback will belong to the group, and will not be run."}]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"SuiteFunction"},"name":"SuiteFunction","package":"playwright"}},{"id":22656,"name":"serial","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"**NOTE** See [test.describe.configure([options])](https://playwright.dev/docs/api/class-test#test-describe-configure) for\\nthe preferred way of configuring the execution mode.\\n\\nDeclares a group of tests that should always be run serially. If one of the tests fails, all subsequent tests are\\nskipped. All tests in a group are retried together.\\n\\n**NOTE** Using serial is not recommended. It is usually better to make your tests isolated, so they can be run\\nindependently.\\n- "},{"kind":"code","text":"`test.describe.serial(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.serial(title)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.serial(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.serial(\'group\', () => {\\n  test(\'runs first\', async ({ page }) => {});\\n  test(\'runs second\', async ({ page }) => {});\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.serial(() => {\\n  // ...\\n});\\n```"}],"blockTags":[{"tag":"@param","name":"title","content":[{"kind":"text","text":"Group title."}]},{"tag":"@param","name":"details","content":[{"kind":"text","text":"See [test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) for\\ndetails description."}]},{"tag":"@param","name":"callback","content":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.serial([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-serial).\\nAny tests added in this callback will belong to the group."}]}]},"sources":[],"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"SuiteFunction"},"name":"SuiteFunction","package":"playwright"},{"type":"reflection","declaration":{"id":22657,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":22658,"name":"only","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"**NOTE** See [test.describe.configure([options])](https://playwright.dev/docs/api/class-test#test-describe-configure) for\\nthe preferred way of configuring the execution mode.\\n\\nDeclares a focused group of tests that should always be run serially. If one of the tests fails, all subsequent\\ntests are skipped. All tests in a group are retried together. If there are some focused tests or suites, all of\\nthem will be run but nothing else.\\n\\n**NOTE** Using serial is not recommended. It is usually better to make your tests isolated, so they can be run\\nindependently.\\n- "},{"kind":"code","text":"`test.describe.serial.only(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.serial.only(title)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.serial.only(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.serial.only(\'group\', () => {\\n  test(\'runs first\', async ({ page }) => {\\n  });\\n  test(\'runs second\', async ({ page }) => {\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.serial.only(() => {\\n  // ...\\n});\\n```"}],"blockTags":[{"tag":"@param","name":"title","content":[{"kind":"text","text":"Group title."}]},{"tag":"@param","name":"details","content":[{"kind":"text","text":"See [test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) for\\ndetails description."}]},{"tag":"@param","name":"callback","content":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.serial.only(title[, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-serial-only).\\nAny tests added in this callback will belong to the group."}]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"SuiteFunction"},"name":"SuiteFunction","package":"playwright"}}],"groups":[{"title":"Properties","children":[22658]}],"sources":[]}}]}},{"id":22659,"name":"parallel","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"**NOTE** See [test.describe.configure([options])](https://playwright.dev/docs/api/class-test#test-describe-configure) for\\nthe preferred way of configuring the execution mode.\\n\\nDeclares a group of tests that could be run in parallel. By default, tests in a single test file run one after\\nanother, but using\\n[test.describe.parallel([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-parallel)\\nallows them to run in parallel.\\n- "},{"kind":"code","text":"`test.describe.parallel(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.parallel(callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.parallel(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.parallel(\'group\', () => {\\n  test(\'runs in parallel 1\', async ({ page }) => {});\\n  test(\'runs in parallel 2\', async ({ page }) => {});\\n});\\n```"},{"kind":"text","text":"\\n\\nNote that parallel tests are executed in separate processes and cannot share any state or global variables. Each of\\nthe parallel tests executes all relevant hooks.\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.parallel(() => {\\n  // ...\\n});\\n```"}],"blockTags":[{"tag":"@param","name":"title","content":[{"kind":"text","text":"Group title."}]},{"tag":"@param","name":"details","content":[{"kind":"text","text":"See [test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) for\\ndetails description."}]},{"tag":"@param","name":"callback","content":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.parallel([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-parallel).\\nAny tests added in this callback will belong to the group."}]}]},"sources":[],"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"SuiteFunction"},"name":"SuiteFunction","package":"playwright"},{"type":"reflection","declaration":{"id":22660,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":22661,"name":"only","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"**NOTE** See [test.describe.configure([options])](https://playwright.dev/docs/api/class-test#test-describe-configure) for\\nthe preferred way of configuring the execution mode.\\n\\nDeclares a focused group of tests that could be run in parallel. This is similar to\\n[test.describe.parallel([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-parallel),\\nbut focuses the group. If there are some focused tests or suites, all of them will be run but nothing else.\\n- "},{"kind":"code","text":"`test.describe.parallel.only(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.parallel.only(callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.parallel.only(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.parallel.only(\'group\', () => {\\n  test(\'runs in parallel 1\', async ({ page }) => {});\\n  test(\'runs in parallel 2\', async ({ page }) => {});\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.parallel.only(() => {\\n  // ...\\n});\\n```"}],"blockTags":[{"tag":"@param","name":"title","content":[{"kind":"text","text":"Group title."}]},{"tag":"@param","name":"details","content":[{"kind":"text","text":"See [test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) for\\ndetails description."}]},{"tag":"@param","name":"callback","content":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.parallel.only([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-parallel-only).\\nAny tests added in this callback will belong to the group."}]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"SuiteFunction"},"name":"SuiteFunction","package":"playwright"}}],"groups":[{"title":"Properties","children":[22661]}],"sources":[]}}]}},{"id":22662,"name":"configure","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the enclosing scope. Can be executed either on the top level or inside a describe. Configuration applies\\nto the entire scope, regardless of whether it run before or after the test declaration.\\n\\nLearn more about the execution modes [here](https://playwright.dev/docs/test-parallel).\\n\\n**Usage**\\n- Running tests in parallel.\\n\\n  "},{"kind":"code","text":"```js\\n  // Run all the tests in the file concurrently using parallel workers.\\n  test.describe.configure({ mode: \'parallel\' });\\n  test(\'runs in parallel 1\', async ({ page }) => {});\\n  test(\'runs in parallel 2\', async ({ page }) => {});\\n  ```"},{"kind":"text","text":"\\n\\n- Running tests serially, retrying from the start.\\n\\n  **NOTE** Running serially is not recommended. It is usually better to make your tests isolated, so they can be\\n  run independently.\\n\\n  "},{"kind":"code","text":"```js\\n  // Annotate tests as inter-dependent.\\n  test.describe.configure({ mode: \'serial\' });\\n  test(\'runs first\', async ({ page }) => {});\\n  test(\'runs second\', async ({ page }) => {});\\n  ```"},{"kind":"text","text":"\\n\\n- Configuring retries and timeout for each test.\\n\\n  "},{"kind":"code","text":"```js\\n  // Each test in the file will be retried twice and have a timeout of 20 seconds.\\n  test.describe.configure({ retries: 2, timeout: 20_000 });\\n  test(\'runs first\', async ({ page }) => {});\\n  test(\'runs second\', async ({ page }) => {});\\n  ```"},{"kind":"text","text":"\\n\\n- Run multiple describes in parallel, but tests inside each describe in order.\\n\\n  "},{"kind":"code","text":"```js\\n  test.describe.configure({ mode: \'parallel\' });\\n\\n  test.describe(\'A, runs in parallel with B\', () => {\\n    test.describe.configure({ mode: \'default\' });\\n    test(\'in order A1\', async ({ page }) => {});\\n    test(\'in order A2\', async ({ page }) => {});\\n  });\\n\\n  test.describe(\'B, runs in parallel with A\', () => {\\n    test.describe.configure({ mode: \'default\' });\\n    test(\'in order B1\', async ({ page }) => {});\\n    test(\'in order B2\', async ({ page }) => {});\\n  });\\n  ```"}]},"sources":[],"type":{"type":"reflection","declaration":{"id":22663,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22664,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":22665,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":22666,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":22667,"name":"mode","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"literal","value":"default"},{"type":"literal","value":"parallel"},{"type":"literal","value":"serial"}]}},{"id":22668,"name":"retries","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"number"}},{"id":22669,"name":"timeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[22667,22668,22669]}],"sources":[]}}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"groups":[{"title":"Properties","children":[22653,22654,22655,22656,22659,22662]}],"sources":[]}}]}},{"id":22670,"name":"skip","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22671,"name":"skip","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Skip a test. Playwright will not run the test past the "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":" call.\\n\\nSkipped tests are not supposed to be ever run. If you intent to fix the test, use\\n[test.fixme([title, details, body, condition, callback, description])](https://playwright.dev/docs/api/class-test#test-fixme)\\ninstead.\\n\\nTo declare a skipped test:\\n- "},{"kind":"code","text":"`test.skip(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip(title, details, body)`"},{"kind":"text","text":"\\n\\nTo skip a test at runtime:\\n- "},{"kind":"code","text":"`test.skip(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a skipped test, and Playwright will not run it.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.skip(\'never run\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test should be skipped in some configurations, but not all, you can skip the test inside the test body\\nbased on some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case. Playwright will run the test,\\nbut abort it immediately after the "},{"kind":"code","text":"`test.skip`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'Safari-only test\', async ({ page, browserName }) => {\\n  test.skip(browserName !== \'webkit\', \'This feature is Safari-only\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can skip all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group based\\non some condition with a single "},{"kind":"code","text":"`test.skip(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.skip(({ browserName }) => browserName !== \'webkit\', \'Safari-only\');\\n\\ntest(\'Safari-only test 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'Safari-only test 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend using "},{"kind":"code","text":"`test.skip(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.skip();\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":22672,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":22673,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test body that takes one or two arguments: an object with fixtures and optional "},{"kind":"inline-tag","tag":"@link","text":"TestInfo","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"tsLinkText":""},{"kind":"text","text":"."}]},"type":{"type":"reflection","declaration":{"id":22674,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22675,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":22676,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22592,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22580,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":22677,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"void"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":22678,"name":"skip","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Skip a test. Playwright will not run the test past the "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":" call.\\n\\nSkipped tests are not supposed to be ever run. If you intent to fix the test, use\\n[test.fixme([title, details, body, condition, callback, description])](https://playwright.dev/docs/api/class-test#test-fixme)\\ninstead.\\n\\nTo declare a skipped test:\\n- "},{"kind":"code","text":"`test.skip(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip(title, details, body)`"},{"kind":"text","text":"\\n\\nTo skip a test at runtime:\\n- "},{"kind":"code","text":"`test.skip(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a skipped test, and Playwright will not run it.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.skip(\'never run\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test should be skipped in some configurations, but not all, you can skip the test inside the test body\\nbased on some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case. Playwright will run the test,\\nbut abort it immediately after the "},{"kind":"code","text":"`test.skip`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'Safari-only test\', async ({ page, browserName }) => {\\n  test.skip(browserName !== \'webkit\', \'This feature is Safari-only\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can skip all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group based\\non some condition with a single "},{"kind":"code","text":"`test.skip(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.skip(({ browserName }) => browserName !== \'webkit\', \'Safari-only\');\\n\\ntest(\'Safari-only test 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'Safari-only test 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend using "},{"kind":"code","text":"`test.skip(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.skip();\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":22679,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":22680,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"See [test.(call)(title[, details, body])](https://playwright.dev/docs/api/class-test#test-call) for test details\\ndescription."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestDetails"},"name":"TestDetails","package":"playwright"}},{"id":22681,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test body that takes one or two arguments: an object with fixtures and optional "},{"kind":"inline-tag","tag":"@link","text":"TestInfo","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"tsLinkText":""},{"kind":"text","text":"."}]},"type":{"type":"reflection","declaration":{"id":22682,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22683,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":22684,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22592,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22580,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":22685,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"void"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":22686,"name":"skip","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Skip a test. Playwright will not run the test past the "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":" call.\\n\\nSkipped tests are not supposed to be ever run. If you intent to fix the test, use\\n[test.fixme([title, details, body, condition, callback, description])](https://playwright.dev/docs/api/class-test#test-fixme)\\ninstead.\\n\\nTo declare a skipped test:\\n- "},{"kind":"code","text":"`test.skip(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip(title, details, body)`"},{"kind":"text","text":"\\n\\nTo skip a test at runtime:\\n- "},{"kind":"code","text":"`test.skip(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a skipped test, and Playwright will not run it.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.skip(\'never run\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test should be skipped in some configurations, but not all, you can skip the test inside the test body\\nbased on some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case. Playwright will run the test,\\nbut abort it immediately after the "},{"kind":"code","text":"`test.skip`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'Safari-only test\', async ({ page, browserName }) => {\\n  test.skip(browserName !== \'webkit\', \'This feature is Safari-only\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can skip all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group based\\non some condition with a single "},{"kind":"code","text":"`test.skip(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.skip(({ browserName }) => browserName !== \'webkit\', \'Safari-only\');\\n\\ntest(\'Safari-only test 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'Safari-only test 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend using "},{"kind":"code","text":"`test.skip(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.skip();\\n  // ...\\n});\\n```"}]},"sources":[],"type":{"type":"intrinsic","name":"void"}},{"id":22687,"name":"skip","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Skip a test. Playwright will not run the test past the "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":" call.\\n\\nSkipped tests are not supposed to be ever run. If you intent to fix the test, use\\n[test.fixme([title, details, body, condition, callback, description])](https://playwright.dev/docs/api/class-test#test-fixme)\\ninstead.\\n\\nTo declare a skipped test:\\n- "},{"kind":"code","text":"`test.skip(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip(title, details, body)`"},{"kind":"text","text":"\\n\\nTo skip a test at runtime:\\n- "},{"kind":"code","text":"`test.skip(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a skipped test, and Playwright will not run it.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.skip(\'never run\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test should be skipped in some configurations, but not all, you can skip the test inside the test body\\nbased on some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case. Playwright will run the test,\\nbut abort it immediately after the "},{"kind":"code","text":"`test.skip`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'Safari-only test\', async ({ page, browserName }) => {\\n  test.skip(browserName !== \'webkit\', \'This feature is Safari-only\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can skip all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group based\\non some condition with a single "},{"kind":"code","text":"`test.skip(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.skip(({ browserName }) => browserName !== \'webkit\', \'Safari-only\');\\n\\ntest(\'Safari-only test 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'Safari-only test 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend using "},{"kind":"code","text":"`test.skip(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.skip();\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":22688,"name":"condition","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test is marked as \\"should fail\\" when the condition is "},{"kind":"code","text":"`true`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"boolean"}},{"id":22689,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional description that will be reflected in a test report."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}},{"id":22690,"name":"skip","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Skip a test. Playwright will not run the test past the "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":" call.\\n\\nSkipped tests are not supposed to be ever run. If you intent to fix the test, use\\n[test.fixme([title, details, body, condition, callback, description])](https://playwright.dev/docs/api/class-test#test-fixme)\\ninstead.\\n\\nTo declare a skipped test:\\n- "},{"kind":"code","text":"`test.skip(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip(title, details, body)`"},{"kind":"text","text":"\\n\\nTo skip a test at runtime:\\n- "},{"kind":"code","text":"`test.skip(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a skipped test, and Playwright will not run it.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.skip(\'never run\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test should be skipped in some configurations, but not all, you can skip the test inside the test body\\nbased on some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case. Playwright will run the test,\\nbut abort it immediately after the "},{"kind":"code","text":"`test.skip`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'Safari-only test\', async ({ page, browserName }) => {\\n  test.skip(browserName !== \'webkit\', \'This feature is Safari-only\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can skip all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group based\\non some condition with a single "},{"kind":"code","text":"`test.skip(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.skip(({ browserName }) => browserName !== \'webkit\', \'Safari-only\');\\n\\ntest(\'Safari-only test 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'Safari-only test 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend using "},{"kind":"code","text":"`test.skip(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.skip();\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":22691,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A function that returns whether to mark as \\"should fail\\", based on test fixtures. Test or tests are marked as\\n\\"should fail\\" when the return value is "},{"kind":"code","text":"`true`"},{"kind":"text","text":"."}]},"type":{"type":"reflection","declaration":{"id":22692,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22693,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":22694,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22592,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22580,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}}],"type":{"type":"intrinsic","name":"boolean"}}]}}},{"id":22695,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional description that will be reflected in a test report."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":22696,"name":"fixme","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22697,"name":"fixme","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Mark a test as \\"fixme\\", with the intention to fix it. Playwright will not run the test past the "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":"\\ncall.\\n\\nTo declare a \\"fixme\\" test:\\n- "},{"kind":"code","text":"`test.fixme(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme(title, details, body)`"},{"kind":"text","text":"\\n\\nTo annotate test as \\"fixme\\" at runtime:\\n- "},{"kind":"code","text":"`test.fixme(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a test as to be fixed, and Playwright will not run it.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fixme(\'to be fixed\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test should be fixed in some configurations, but not all, you can mark the test as \\"fixme\\" inside the test\\nbody based on some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case. Playwright will run the\\ntest, but abort it immediately after the "},{"kind":"code","text":"`test.fixme`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'to be fixed in Safari\', async ({ page, browserName }) => {\\n  test.fixme(browserName === \'webkit\', \'This feature breaks in Safari for some reason\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can mark all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group as\\n\\"fixme\\" based on some condition with a single "},{"kind":"code","text":"`test.fixme(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fixme(({ browserName }) => browserName === \'webkit\', \'Should figure out the issue\');\\n\\ntest(\'to be fixed in Safari 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'to be fixed in Safari 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend using "},{"kind":"code","text":"`test.fixme(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.fixme();\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":22698,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":22699,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test body that takes one or two arguments: an object with fixtures and optional "},{"kind":"inline-tag","tag":"@link","text":"TestInfo","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"tsLinkText":""},{"kind":"text","text":"."}]},"type":{"type":"reflection","declaration":{"id":22700,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22701,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":22702,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22592,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22580,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":22703,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"void"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":22704,"name":"fixme","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Mark a test as \\"fixme\\", with the intention to fix it. Playwright will not run the test past the "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":"\\ncall.\\n\\nTo declare a \\"fixme\\" test:\\n- "},{"kind":"code","text":"`test.fixme(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme(title, details, body)`"},{"kind":"text","text":"\\n\\nTo annotate test as \\"fixme\\" at runtime:\\n- "},{"kind":"code","text":"`test.fixme(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a test as to be fixed, and Playwright will not run it.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fixme(\'to be fixed\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test should be fixed in some configurations, but not all, you can mark the test as \\"fixme\\" inside the test\\nbody based on some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case. Playwright will run the\\ntest, but abort it immediately after the "},{"kind":"code","text":"`test.fixme`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'to be fixed in Safari\', async ({ page, browserName }) => {\\n  test.fixme(browserName === \'webkit\', \'This feature breaks in Safari for some reason\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can mark all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group as\\n\\"fixme\\" based on some condition with a single "},{"kind":"code","text":"`test.fixme(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fixme(({ browserName }) => browserName === \'webkit\', \'Should figure out the issue\');\\n\\ntest(\'to be fixed in Safari 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'to be fixed in Safari 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend using "},{"kind":"code","text":"`test.fixme(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.fixme();\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":22705,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":22706,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"See [test.(call)(title[, details, body])](https://playwright.dev/docs/api/class-test#test-call) for test details\\ndescription."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestDetails"},"name":"TestDetails","package":"playwright"}},{"id":22707,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test body that takes one or two arguments: an object with fixtures and optional "},{"kind":"inline-tag","tag":"@link","text":"TestInfo","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"tsLinkText":""},{"kind":"text","text":"."}]},"type":{"type":"reflection","declaration":{"id":22708,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22709,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":22710,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22592,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22580,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":22711,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"void"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":22712,"name":"fixme","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Mark a test as \\"fixme\\", with the intention to fix it. Playwright will not run the test past the "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":"\\ncall.\\n\\nTo declare a \\"fixme\\" test:\\n- "},{"kind":"code","text":"`test.fixme(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme(title, details, body)`"},{"kind":"text","text":"\\n\\nTo annotate test as \\"fixme\\" at runtime:\\n- "},{"kind":"code","text":"`test.fixme(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a test as to be fixed, and Playwright will not run it.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fixme(\'to be fixed\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test should be fixed in some configurations, but not all, you can mark the test as \\"fixme\\" inside the test\\nbody based on some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case. Playwright will run the\\ntest, but abort it immediately after the "},{"kind":"code","text":"`test.fixme`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'to be fixed in Safari\', async ({ page, browserName }) => {\\n  test.fixme(browserName === \'webkit\', \'This feature breaks in Safari for some reason\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can mark all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group as\\n\\"fixme\\" based on some condition with a single "},{"kind":"code","text":"`test.fixme(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fixme(({ browserName }) => browserName === \'webkit\', \'Should figure out the issue\');\\n\\ntest(\'to be fixed in Safari 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'to be fixed in Safari 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend using "},{"kind":"code","text":"`test.fixme(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.fixme();\\n  // ...\\n});\\n```"}]},"sources":[],"type":{"type":"intrinsic","name":"void"}},{"id":22713,"name":"fixme","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Mark a test as \\"fixme\\", with the intention to fix it. Playwright will not run the test past the "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":"\\ncall.\\n\\nTo declare a \\"fixme\\" test:\\n- "},{"kind":"code","text":"`test.fixme(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme(title, details, body)`"},{"kind":"text","text":"\\n\\nTo annotate test as \\"fixme\\" at runtime:\\n- "},{"kind":"code","text":"`test.fixme(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a test as to be fixed, and Playwright will not run it.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fixme(\'to be fixed\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test should be fixed in some configurations, but not all, you can mark the test as \\"fixme\\" inside the test\\nbody based on some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case. Playwright will run the\\ntest, but abort it immediately after the "},{"kind":"code","text":"`test.fixme`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'to be fixed in Safari\', async ({ page, browserName }) => {\\n  test.fixme(browserName === \'webkit\', \'This feature breaks in Safari for some reason\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can mark all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group as\\n\\"fixme\\" based on some condition with a single "},{"kind":"code","text":"`test.fixme(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fixme(({ browserName }) => browserName === \'webkit\', \'Should figure out the issue\');\\n\\ntest(\'to be fixed in Safari 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'to be fixed in Safari 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend using "},{"kind":"code","text":"`test.fixme(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.fixme();\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":22714,"name":"condition","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test is marked as \\"should fail\\" when the condition is "},{"kind":"code","text":"`true`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"boolean"}},{"id":22715,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional description that will be reflected in a test report."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}},{"id":22716,"name":"fixme","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Mark a test as \\"fixme\\", with the intention to fix it. Playwright will not run the test past the "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":"\\ncall.\\n\\nTo declare a \\"fixme\\" test:\\n- "},{"kind":"code","text":"`test.fixme(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme(title, details, body)`"},{"kind":"text","text":"\\n\\nTo annotate test as \\"fixme\\" at runtime:\\n- "},{"kind":"code","text":"`test.fixme(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a test as to be fixed, and Playwright will not run it.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fixme(\'to be fixed\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test should be fixed in some configurations, but not all, you can mark the test as \\"fixme\\" inside the test\\nbody based on some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case. Playwright will run the\\ntest, but abort it immediately after the "},{"kind":"code","text":"`test.fixme`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'to be fixed in Safari\', async ({ page, browserName }) => {\\n  test.fixme(browserName === \'webkit\', \'This feature breaks in Safari for some reason\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can mark all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group as\\n\\"fixme\\" based on some condition with a single "},{"kind":"code","text":"`test.fixme(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fixme(({ browserName }) => browserName === \'webkit\', \'Should figure out the issue\');\\n\\ntest(\'to be fixed in Safari 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'to be fixed in Safari 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend using "},{"kind":"code","text":"`test.fixme(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.fixme();\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":22717,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A function that returns whether to mark as \\"should fail\\", based on test fixtures. Test or tests are marked as\\n\\"should fail\\" when the return value is "},{"kind":"code","text":"`true`"},{"kind":"text","text":"."}]},"type":{"type":"reflection","declaration":{"id":22718,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22719,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":22720,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22592,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22580,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}}],"type":{"type":"intrinsic","name":"boolean"}}]}}},{"id":22721,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional description that will be reflected in a test report."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":22722,"name":"fail","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22723,"name":"fail","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Marks a test as \\"should fail\\". Playwright runs this test and ensures that it is actually failing. This is useful\\nfor documentation purposes to acknowledge that some functionality is broken until it is fixed.\\n\\nTo declare a \\"failing\\" test:\\n- "},{"kind":"code","text":"`test.fail(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fail(title, details, body)`"},{"kind":"text","text":"\\n\\nTo annotate test as \\"failing\\" at runtime:\\n- "},{"kind":"code","text":"`test.fail(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fail(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fail()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a test as failing, so that Playwright ensures it actually fails.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fail(\'not yet ready\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test fails in some configurations, but not all, you can mark the test as failing inside the test body based\\non some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'fail in WebKit\', async ({ page, browserName }) => {\\n  test.fail(browserName === \'webkit\', \'This feature is not implemented for Mac yet\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can mark all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group as\\n\\"should fail\\" based on some condition with a single "},{"kind":"code","text":"`test.fail(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fail(({ browserName }) => browserName === \'webkit\', \'not implemented yet\');\\n\\ntest(\'fail in WebKit 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'fail in WebKit 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.fail()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend declaring a failing test with "},{"kind":"code","text":"`test.fail(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.fail();\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":22724,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":22725,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test body that takes one or two arguments: an object with fixtures and optional "},{"kind":"inline-tag","tag":"@link","text":"TestInfo","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"tsLinkText":""},{"kind":"text","text":"."}]},"type":{"type":"reflection","declaration":{"id":22726,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22727,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":22728,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22592,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22580,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":22729,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"void"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":22730,"name":"fail","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Marks a test as \\"should fail\\". Playwright runs this test and ensures that it is actually failing. This is useful\\nfor documentation purposes to acknowledge that some functionality is broken until it is fixed.\\n\\nTo declare a \\"failing\\" test:\\n- "},{"kind":"code","text":"`test.fail(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fail(title, details, body)`"},{"kind":"text","text":"\\n\\nTo annotate test as \\"failing\\" at runtime:\\n- "},{"kind":"code","text":"`test.fail(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fail(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fail()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a test as failing, so that Playwright ensures it actually fails.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fail(\'not yet ready\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test fails in some configurations, but not all, you can mark the test as failing inside the test body based\\non some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'fail in WebKit\', async ({ page, browserName }) => {\\n  test.fail(browserName === \'webkit\', \'This feature is not implemented for Mac yet\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can mark all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group as\\n\\"should fail\\" based on some condition with a single "},{"kind":"code","text":"`test.fail(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fail(({ browserName }) => browserName === \'webkit\', \'not implemented yet\');\\n\\ntest(\'fail in WebKit 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'fail in WebKit 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.fail()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend declaring a failing test with "},{"kind":"code","text":"`test.fail(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.fail();\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":22731,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":22732,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"See [test.(call)(title[, details, body])](https://playwright.dev/docs/api/class-test#test-call) for test details\\ndescription."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestDetails"},"name":"TestDetails","package":"playwright"}},{"id":22733,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test body that takes one or two arguments: an object with fixtures and optional "},{"kind":"inline-tag","tag":"@link","text":"TestInfo","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"tsLinkText":""},{"kind":"text","text":"."}]},"type":{"type":"reflection","declaration":{"id":22734,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22735,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":22736,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22592,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22580,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":22737,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"void"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":22738,"name":"fail","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Marks a test as \\"should fail\\". Playwright runs this test and ensures that it is actually failing. This is useful\\nfor documentation purposes to acknowledge that some functionality is broken until it is fixed.\\n\\nTo declare a \\"failing\\" test:\\n- "},{"kind":"code","text":"`test.fail(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fail(title, details, body)`"},{"kind":"text","text":"\\n\\nTo annotate test as \\"failing\\" at runtime:\\n- "},{"kind":"code","text":"`test.fail(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fail(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fail()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a test as failing, so that Playwright ensures it actually fails.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fail(\'not yet ready\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test fails in some configurations, but not all, you can mark the test as failing inside the test body based\\non some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'fail in WebKit\', async ({ page, browserName }) => {\\n  test.fail(browserName === \'webkit\', \'This feature is not implemented for Mac yet\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can mark all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group as\\n\\"should fail\\" based on some condition with a single "},{"kind":"code","text":"`test.fail(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fail(({ browserName }) => browserName === \'webkit\', \'not implemented yet\');\\n\\ntest(\'fail in WebKit 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'fail in WebKit 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.fail()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend declaring a failing test with "},{"kind":"code","text":"`test.fail(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.fail();\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":22739,"name":"condition","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test is marked as \\"should fail\\" when the condition is "},{"kind":"code","text":"`true`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"boolean"}},{"id":22740,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional description that will be reflected in a test report."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}},{"id":22741,"name":"fail","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Marks a test as \\"should fail\\". Playwright runs this test and ensures that it is actually failing. This is useful\\nfor documentation purposes to acknowledge that some functionality is broken until it is fixed.\\n\\nTo declare a \\"failing\\" test:\\n- "},{"kind":"code","text":"`test.fail(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fail(title, details, body)`"},{"kind":"text","text":"\\n\\nTo annotate test as \\"failing\\" at runtime:\\n- "},{"kind":"code","text":"`test.fail(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fail(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fail()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a test as failing, so that Playwright ensures it actually fails.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fail(\'not yet ready\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test fails in some configurations, but not all, you can mark the test as failing inside the test body based\\non some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'fail in WebKit\', async ({ page, browserName }) => {\\n  test.fail(browserName === \'webkit\', \'This feature is not implemented for Mac yet\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can mark all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group as\\n\\"should fail\\" based on some condition with a single "},{"kind":"code","text":"`test.fail(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fail(({ browserName }) => browserName === \'webkit\', \'not implemented yet\');\\n\\ntest(\'fail in WebKit 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'fail in WebKit 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.fail()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend declaring a failing test with "},{"kind":"code","text":"`test.fail(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.fail();\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":22742,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A function that returns whether to mark as \\"should fail\\", based on test fixtures. Test or tests are marked as\\n\\"should fail\\" when the return value is "},{"kind":"code","text":"`true`"},{"kind":"text","text":"."}]},"type":{"type":"reflection","declaration":{"id":22743,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22744,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":22745,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22592,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22580,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}}],"type":{"type":"intrinsic","name":"boolean"}}]}}},{"id":22746,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional description that will be reflected in a test report."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}},{"id":22747,"name":"fail","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Marks a test as \\"should fail\\". Playwright runs this test and ensures that it is actually failing. This is useful\\nfor documentation purposes to acknowledge that some functionality is broken until it is fixed.\\n\\nTo declare a \\"failing\\" test:\\n- "},{"kind":"code","text":"`test.fail(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fail(title, details, body)`"},{"kind":"text","text":"\\n\\nTo annotate test as \\"failing\\" at runtime:\\n- "},{"kind":"code","text":"`test.fail(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fail(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fail()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a test as failing, so that Playwright ensures it actually fails.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fail(\'not yet ready\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test fails in some configurations, but not all, you can mark the test as failing inside the test body based\\non some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'fail in WebKit\', async ({ page, browserName }) => {\\n  test.fail(browserName === \'webkit\', \'This feature is not implemented for Mac yet\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can mark all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group as\\n\\"should fail\\" based on some condition with a single "},{"kind":"code","text":"`test.fail(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fail(({ browserName }) => browserName === \'webkit\', \'not implemented yet\');\\n\\ntest(\'fail in WebKit 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'fail in WebKit 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.fail()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend declaring a failing test with "},{"kind":"code","text":"`test.fail(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.fail();\\n  // ...\\n});\\n```"}]},"sources":[],"type":{"type":"intrinsic","name":"void"}}]},{"id":22748,"name":"slow","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22749,"name":"slow","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Marks a test as \\"slow\\". Slow test will be given triple the default timeout.\\n\\nNote that [test.slow([condition, callback, description])](https://playwright.dev/docs/api/class-test#test-slow)\\ncannot be used in a "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" or "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hook. Use\\n[test.setTimeout(timeout)](https://playwright.dev/docs/api/class-test#test-set-timeout) instead.\\n- "},{"kind":"code","text":"`test.slow()`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.slow(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.slow(callback, description)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can mark a test as slow by calling "},{"kind":"code","text":"`test.slow()`"},{"kind":"text","text":" inside the test body.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'slow test\', async ({ page }) => {\\n  test.slow();\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test is slow in some configurations, but not all, you can mark it as slow based on a condition. We\\nrecommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'slow in Safari\', async ({ page, browserName }) => {\\n  test.slow(browserName === \'webkit\', \'This feature is slow in Safari\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can mark all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group as\\n\\"slow\\" based on some condition by passing a callback.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.slow(({ browserName }) => browserName === \'webkit\', \'all tests are slow in Safari\');\\n\\ntest(\'slow in Safari 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'fail in Safari 2\', async ({ page }) => {\\n  // ...\\n});\\n```"}]},"sources":[],"type":{"type":"intrinsic","name":"void"}},{"id":22750,"name":"slow","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Marks a test as \\"slow\\". Slow test will be given triple the default timeout.\\n\\nNote that [test.slow([condition, callback, description])](https://playwright.dev/docs/api/class-test#test-slow)\\ncannot be used in a "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" or "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hook. Use\\n[test.setTimeout(timeout)](https://playwright.dev/docs/api/class-test#test-set-timeout) instead.\\n- "},{"kind":"code","text":"`test.slow()`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.slow(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.slow(callback, description)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can mark a test as slow by calling "},{"kind":"code","text":"`test.slow()`"},{"kind":"text","text":" inside the test body.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'slow test\', async ({ page }) => {\\n  test.slow();\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test is slow in some configurations, but not all, you can mark it as slow based on a condition. We\\nrecommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'slow in Safari\', async ({ page, browserName }) => {\\n  test.slow(browserName === \'webkit\', \'This feature is slow in Safari\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can mark all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group as\\n\\"slow\\" based on some condition by passing a callback.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.slow(({ browserName }) => browserName === \'webkit\', \'all tests are slow in Safari\');\\n\\ntest(\'slow in Safari 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'fail in Safari 2\', async ({ page }) => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":22751,"name":"condition","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test is marked as \\"slow\\" when the condition is "},{"kind":"code","text":"`true`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"boolean"}},{"id":22752,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional description that will be reflected in a test report."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}},{"id":22753,"name":"slow","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Marks a test as \\"slow\\". Slow test will be given triple the default timeout.\\n\\nNote that [test.slow([condition, callback, description])](https://playwright.dev/docs/api/class-test#test-slow)\\ncannot be used in a "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" or "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hook. Use\\n[test.setTimeout(timeout)](https://playwright.dev/docs/api/class-test#test-set-timeout) instead.\\n- "},{"kind":"code","text":"`test.slow()`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.slow(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.slow(callback, description)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can mark a test as slow by calling "},{"kind":"code","text":"`test.slow()`"},{"kind":"text","text":" inside the test body.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'slow test\', async ({ page }) => {\\n  test.slow();\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test is slow in some configurations, but not all, you can mark it as slow based on a condition. We\\nrecommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'slow in Safari\', async ({ page, browserName }) => {\\n  test.slow(browserName === \'webkit\', \'This feature is slow in Safari\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can mark all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group as\\n\\"slow\\" based on some condition by passing a callback.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.slow(({ browserName }) => browserName === \'webkit\', \'all tests are slow in Safari\');\\n\\ntest(\'slow in Safari 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'fail in Safari 2\', async ({ page }) => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":22754,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A function that returns whether to mark as \\"slow\\", based on test fixtures. Test or tests are marked as \\"slow\\" when\\nthe return value is "},{"kind":"code","text":"`true`"},{"kind":"text","text":"."}]},"type":{"type":"reflection","declaration":{"id":22755,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22756,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":22757,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22592,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22580,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}}],"type":{"type":"intrinsic","name":"boolean"}}]}}},{"id":22758,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional description that will be reflected in a test report."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":22759,"name":"setTimeout","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22760,"name":"setTimeout","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Changes the timeout for the test. Zero means no timeout. Learn more about [various timeouts](https://playwright.dev/docs/test-timeouts).\\n\\nTimeout for the currently running test is available through\\n[testInfo.timeout](https://playwright.dev/docs/api/class-testinfo#test-info-timeout).\\n\\n**Usage**\\n- Changing test timeout.\\n\\n  "},{"kind":"code","text":"```js\\n  test(\'very slow test\', async ({ page }) => {\\n    test.setTimeout(120000);\\n    // ...\\n  });\\n  ```"},{"kind":"text","text":"\\n\\n- Changing timeout from a slow "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":" or "},{"kind":"code","text":"`afterEach`"},{"kind":"text","text":" hook. Note that this affects the test timeout that is\\n  shared with "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":"/"},{"kind":"code","text":"`afterEach`"},{"kind":"text","text":" hooks.\\n\\n  "},{"kind":"code","text":"```js\\n  test.beforeEach(async ({ page }, testInfo) => {\\n    // Extend timeout for all tests running this hook by 30 seconds.\\n    test.setTimeout(testInfo.timeout + 30000);\\n  });\\n  ```"},{"kind":"text","text":"\\n\\n- Changing timeout for a "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" or "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hook. Note this affects the hook\'s timeout, not the test\\n  timeout.\\n\\n  "},{"kind":"code","text":"```js\\n  test.beforeAll(async () => {\\n    // Set timeout for this hook.\\n    test.setTimeout(60000);\\n  });\\n  ```"},{"kind":"text","text":"\\n\\n- Changing timeout for all tests in a\\n  [test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group.\\n\\n  "},{"kind":"code","text":"```js\\n  test.describe(\'group\', () => {\\n    // Applies to all tests in this group.\\n    test.describe.configure({ timeout: 60000 });\\n\\n    test(\'test one\', async () => { /* ... */ });\\n    test(\'test two\', async () => { /* ... */ });\\n    test(\'test three\', async () => { /* ... */ });\\n  });\\n  ```"}]},"sources":[],"parameters":[{"id":22761,"name":"timeout","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Timeout in milliseconds."}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":22762,"name":"beforeEach","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22763,"name":"beforeEach","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":" hook that is executed before each test.\\n\\nWhen called in the scope of a test file, runs before each test in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nbefore each test in the group.\\n\\nYou can access all the same "},{"kind":"inline-tag","tag":"@link","text":"Fixtures","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"Fixtures"},"tsLinkText":""},{"kind":"text","text":" as the test body itself, and also the "},{"kind":"inline-tag","tag":"@link","text":"TestInfo","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"tsLinkText":""},{"kind":"text","text":" object that\\ngives a lot of useful information. For example, you can navigate the page before starting the test.\\n\\nYou can use [test.afterEach([title, hookFunction])](https://playwright.dev/docs/api/class-test#test-after-each) to\\nteardown any resources set up in "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":".\\n- "},{"kind":"code","text":"`test.beforeEach(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.beforeEach(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.beforeEach(async ({ page }) => {\\n  console.log(`Running ${test.info().title}`);\\n  await page.goto(\'https://my.start.url/\');\\n});\\n\\ntest(\'my test\', async ({ page }) => {\\n  expect(page.url()).toBe(\'https://my.start.url/\');\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\ntest.beforeEach(\'Open start URL\', async ({ page }) => {\\n  console.log(`Running ${test.info().title}`);\\n  await page.goto(\'https://my.start.url/\');\\n});\\n```"}]},"sources":[],"parameters":[{"id":22764,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":22765,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22766,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":22767,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22592,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22580,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":22768,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":22769,"name":"beforeEach","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":" hook that is executed before each test.\\n\\nWhen called in the scope of a test file, runs before each test in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nbefore each test in the group.\\n\\nYou can access all the same "},{"kind":"inline-tag","tag":"@link","text":"Fixtures","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"Fixtures"},"tsLinkText":""},{"kind":"text","text":" as the test body itself, and also the "},{"kind":"inline-tag","tag":"@link","text":"TestInfo","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"tsLinkText":""},{"kind":"text","text":" object that\\ngives a lot of useful information. For example, you can navigate the page before starting the test.\\n\\nYou can use [test.afterEach([title, hookFunction])](https://playwright.dev/docs/api/class-test#test-after-each) to\\nteardown any resources set up in "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":".\\n- "},{"kind":"code","text":"`test.beforeEach(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.beforeEach(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.beforeEach(async ({ page }) => {\\n  console.log(`Running ${test.info().title}`);\\n  await page.goto(\'https://my.start.url/\');\\n});\\n\\ntest(\'my test\', async ({ page }) => {\\n  expect(page.url()).toBe(\'https://my.start.url/\');\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\ntest.beforeEach(\'Open start URL\', async ({ page }) => {\\n  console.log(`Running ${test.info().title}`);\\n  await page.goto(\'https://my.start.url/\');\\n});\\n```"}]},"sources":[],"parameters":[{"id":22770,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Hook title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":22771,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":22772,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22773,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":22774,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22592,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22580,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":22775,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":22776,"name":"afterEach","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22777,"name":"afterEach","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares an "},{"kind":"code","text":"`afterEach`"},{"kind":"text","text":" hook that is executed after each test.\\n\\nWhen called in the scope of a test file, runs after each test in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nafter each test in the group.\\n\\nYou can access all the same "},{"kind":"inline-tag","tag":"@link","text":"Fixtures","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"Fixtures"},"tsLinkText":""},{"kind":"text","text":" as the test body itself, and also the "},{"kind":"inline-tag","tag":"@link","text":"TestInfo","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"tsLinkText":""},{"kind":"text","text":" object that\\ngives a lot of useful information. For example, you can check whether the test succeeded or failed.\\n- "},{"kind":"code","text":"`test.afterEach(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.afterEach(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`afterEach`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.afterEach(async ({ page }) => {\\n  console.log(`Finished ${test.info().title} with status ${test.info().status}`);\\n\\n  if (test.info().status !== test.info().expectedStatus)\\n    console.log(`Did not run as expected, ended up at ${page.url()}`);\\n});\\n\\ntest(\'my test\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\ntest.afterEach(\'Status check\', async ({ page }) => {\\n  if (test.info().status !== test.info().expectedStatus)\\n    console.log(`Did not run as expected, ended up at ${page.url()}`);\\n});\\n```"}]},"sources":[],"parameters":[{"id":22778,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":22779,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22780,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":22781,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22592,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22580,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":22782,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":22783,"name":"afterEach","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares an "},{"kind":"code","text":"`afterEach`"},{"kind":"text","text":" hook that is executed after each test.\\n\\nWhen called in the scope of a test file, runs after each test in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nafter each test in the group.\\n\\nYou can access all the same "},{"kind":"inline-tag","tag":"@link","text":"Fixtures","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"Fixtures"},"tsLinkText":""},{"kind":"text","text":" as the test body itself, and also the "},{"kind":"inline-tag","tag":"@link","text":"TestInfo","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"tsLinkText":""},{"kind":"text","text":" object that\\ngives a lot of useful information. For example, you can check whether the test succeeded or failed.\\n- "},{"kind":"code","text":"`test.afterEach(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.afterEach(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`afterEach`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.afterEach(async ({ page }) => {\\n  console.log(`Finished ${test.info().title} with status ${test.info().status}`);\\n\\n  if (test.info().status !== test.info().expectedStatus)\\n    console.log(`Did not run as expected, ended up at ${page.url()}`);\\n});\\n\\ntest(\'my test\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\ntest.afterEach(\'Status check\', async ({ page }) => {\\n  if (test.info().status !== test.info().expectedStatus)\\n    console.log(`Did not run as expected, ended up at ${page.url()}`);\\n});\\n```"}]},"sources":[],"parameters":[{"id":22784,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Hook title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":22785,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":22786,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22787,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":22788,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22592,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22580,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":22789,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":22790,"name":"beforeAll","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22791,"name":"beforeAll","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" hook that is executed once per worker process before all tests.\\n\\nWhen called in the scope of a test file, runs before all tests in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nbefore all tests in the group.\\n\\nYou can use [test.afterAll([title, hookFunction])](https://playwright.dev/docs/api/class-test#test-after-all) to\\nteardown any resources set up in "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":".\\n- "},{"kind":"code","text":"`test.beforeAll(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.beforeAll(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nNote that worker process is restarted on test failures, and "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" hook runs again in the new worker. Learn\\nmore about [workers and failures](https://playwright.dev/docs/test-retries).\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.beforeAll(async () => {\\n  console.log(\'Before tests\');\\n});\\n\\ntest.afterAll(async () => {\\n  console.log(\'After tests\');\\n});\\n\\ntest(\'my test\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\ntest.beforeAll(\'Setup\', async () => {\\n  console.log(\'Before tests\');\\n});\\n```"}]},"sources":[],"parameters":[{"id":22792,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":22793,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22794,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":22795,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22592,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22580,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":22796,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":22797,"name":"beforeAll","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" hook that is executed once per worker process before all tests.\\n\\nWhen called in the scope of a test file, runs before all tests in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nbefore all tests in the group.\\n\\nYou can use [test.afterAll([title, hookFunction])](https://playwright.dev/docs/api/class-test#test-after-all) to\\nteardown any resources set up in "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":".\\n- "},{"kind":"code","text":"`test.beforeAll(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.beforeAll(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nNote that worker process is restarted on test failures, and "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" hook runs again in the new worker. Learn\\nmore about [workers and failures](https://playwright.dev/docs/test-retries).\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.beforeAll(async () => {\\n  console.log(\'Before tests\');\\n});\\n\\ntest.afterAll(async () => {\\n  console.log(\'After tests\');\\n});\\n\\ntest(\'my test\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\ntest.beforeAll(\'Setup\', async () => {\\n  console.log(\'Before tests\');\\n});\\n```"}]},"sources":[],"parameters":[{"id":22798,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Hook title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":22799,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":22800,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22801,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":22802,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22592,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22580,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":22803,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":22804,"name":"afterAll","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22805,"name":"afterAll","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares an "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hook that is executed once per worker after all tests.\\n\\nWhen called in the scope of a test file, runs after all tests in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nafter all tests in the group.\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nNote that worker process is restarted on test failures, and "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hook runs again in the new worker. Learn\\nmore about [workers and failures](https://playwright.dev/docs/test-retries).\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n- "},{"kind":"code","text":"`test.afterAll(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.afterAll(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.afterAll(async () => {\\n  console.log(\'Done with tests\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\ntest.afterAll(\'Teardown\', async () => {\\n  console.log(\'Done with tests\');\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":22806,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":22807,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22808,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":22809,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22592,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22580,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":22810,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":22811,"name":"afterAll","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares an "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hook that is executed once per worker after all tests.\\n\\nWhen called in the scope of a test file, runs after all tests in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nafter all tests in the group.\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nNote that worker process is restarted on test failures, and "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hook runs again in the new worker. Learn\\nmore about [workers and failures](https://playwright.dev/docs/test-retries).\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n- "},{"kind":"code","text":"`test.afterAll(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.afterAll(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.afterAll(async () => {\\n  console.log(\'Done with tests\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\ntest.afterAll(\'Teardown\', async () => {\\n  console.log(\'Done with tests\');\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":22812,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Hook title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":22813,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":22814,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22815,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":22816,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22592,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22580,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":22817,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":22818,"name":"use","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22819,"name":"use","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Specifies options or fixtures to use in a single test file or a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group. Most\\nuseful to set an option, for example set "},{"kind":"code","text":"`locale`"},{"kind":"text","text":" to configure "},{"kind":"code","text":"`context`"},{"kind":"text","text":" fixture.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.use({ locale: \'en-US\' });\\n\\ntest(\'test with locale\', async ({ page }) => {\\n  // Default context and page have locale as specified\\n});\\n```"},{"kind":"text","text":"\\n\\n**Details**\\n\\n"},{"kind":"code","text":"`test.use`"},{"kind":"text","text":" can be called either in the global scope or inside "},{"kind":"code","text":"`test.describe`"},{"kind":"text","text":". It is an error to call it within\\n"},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":" or "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":".\\n\\nIt is also possible to override a fixture by providing a function.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.use({\\n  locale: async ({}, use) => {\\n    // Read locale from some configuration file.\\n    const locale = await fs.promises.readFile(\'test-locale\', \'utf-8\');\\n    await use(locale);\\n  },\\n});\\n\\ntest(\'test with locale\', async ({ page }) => {\\n  // Default context and page have locale as specified\\n});\\n```"}]},"sources":[],"parameters":[{"id":22820,"name":"fixtures","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"Fixtures"},"typeArguments":[{"type":"reflection","declaration":{"id":22821,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true}}},{"type":"reflection","declaration":{"id":22822,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true}}},{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22592,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22580,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"}]},{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}],"name":"Fixtures","package":"playwright"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":22823,"name":"step","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22824,"name":"step","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a test step that is shown in the report.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'test\', async ({ page }) => {\\n  await test.step(\'Log in\', async () => {\\n    // ...\\n  });\\n\\n  await test.step(\'Outer step\', async () => {\\n    // ...\\n    // You can nest steps inside each other.\\n    await test.step(\'Inner step\', async () => {\\n      // ...\\n    });\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\n**Details**\\n\\nThe method returns the value returned by the step callback.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'test\', async ({ page }) => {\\n  const user = await test.step(\'Log in\', async () => {\\n    // ...\\n    return \'john\';\\n  });\\n  expect(user).toBe(\'john\');\\n});\\n```"},{"kind":"text","text":"\\n\\n**Decorator**\\n\\nYou can use TypeScript method decorators to turn a method into a step. Each call to the decorated method will show\\nup as a step in the report.\\n\\n"},{"kind":"code","text":"```js\\nfunction step(target: Function, context: ClassMethodDecoratorContext) {\\n  return function replacementMethod(...args: any) {\\n    const name = this.constructor.name + \'.\' + (context.name as string);\\n    return test.step(name, async () => {\\n      return await target.call(this, ...args);\\n    });\\n  };\\n}\\n\\nclass LoginPage {\\n  constructor(readonly page: Page) {}\\n\\n  @step\\n  async login() {\\n    const account = { username: \'Alice\', password: \'s3cr3t\' };\\n    await this.page.getByLabel(\'Username or email address\').fill(account.username);\\n    await this.page.getByLabel(\'Password\').fill(account.password);\\n    await this.page.getByRole(\'button\', { name: \'Sign in\' }).click();\\n    await expect(this.page.getByRole(\'button\', { name: \'View profile and more\' })).toBeVisible();\\n  }\\n}\\n\\ntest(\'example\', async ({ page }) => {\\n  const loginPage = new LoginPage(page);\\n  await loginPage.login();\\n});\\n```"},{"kind":"text","text":"\\n\\n**Boxing**\\n\\nWhen something inside a step fails, you would usually see the error pointing to the exact action that failed. For\\nexample, consider the following login step:\\n\\n"},{"kind":"code","text":"```js\\nasync function login(page) {\\n  await test.step(\'login\', async () => {\\n    const account = { username: \'Alice\', password: \'s3cr3t\' };\\n    await page.getByLabel(\'Username or email address\').fill(account.username);\\n    await page.getByLabel(\'Password\').fill(account.password);\\n    await page.getByRole(\'button\', { name: \'Sign in\' }).click();\\n    await expect(page.getByRole(\'button\', { name: \'View profile and more\' })).toBeVisible();\\n  });\\n}\\n\\ntest(\'example\', async ({ page }) => {\\n  await page.goto(\'https://github.com/login\');\\n  await login(page);\\n});\\n```"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```txt\\nError: Timed out 5000ms waiting for expect(locator).toBeVisible()\\n  ... error details omitted ...\\n\\n   8 |     await page.getByRole(\'button\', { name: \'Sign in\' }).click();\\n>  9 |     await expect(page.getByRole(\'button\', { name: \'View profile and more\' })).toBeVisible();\\n     |                                                                               ^\\n  10 |   });\\n```"},{"kind":"text","text":"\\n\\nAs we see above, the test may fail with an error pointing inside the step. If you would like the error to highlight\\nthe \\"login\\" step instead of its internals, use the "},{"kind":"code","text":"`box`"},{"kind":"text","text":" option. An error inside a boxed step points to the step\\ncall site.\\n\\n"},{"kind":"code","text":"```js\\nasync function login(page) {\\n  await test.step(\'login\', async () => {\\n    // ...\\n  }, { box: true });  // Note the \\"box\\" option here.\\n}\\n```"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```txt\\nError: Timed out 5000ms waiting for expect(locator).toBeVisible()\\n  ... error details omitted ...\\n\\n  14 |   await page.goto(\'https://github.com/login\');\\n> 15 |   await login(page);\\n     |         ^\\n  16 | });\\n```"},{"kind":"text","text":"\\n\\nYou can also create a TypeScript decorator for a boxed step, similar to a regular step decorator above:\\n\\n"},{"kind":"code","text":"```js\\nfunction boxedStep(target: Function, context: ClassMethodDecoratorContext) {\\n  return function replacementMethod(...args: any) {\\n    const name = this.constructor.name + \'.\' + (context.name as string);\\n    return test.step(name, async () => {\\n      return await target.call(this, ...args);\\n    }, { box: true });  // Note the \\"box\\" option here.\\n  };\\n}\\n\\nclass LoginPage {\\n  constructor(readonly page: Page) {}\\n\\n  @boxedStep\\n  async login() {\\n    // ....\\n  }\\n}\\n\\ntest(\'example\', async ({ page }) => {\\n  const loginPage = new LoginPage(page);\\n  await loginPage.login();  // <-- Error will be reported on this line.\\n});\\n```"}]},"sources":[],"typeParameter":[{"id":22825,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":22826,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Step name."}]},"type":{"type":"intrinsic","name":"string"}},{"id":22827,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Step body."}]},"type":{"type":"reflection","declaration":{"id":22828,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22829,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":22825,"name":"T","package":"playwright","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":22825,"name":"T","package":"playwright","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}},{"id":22830,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reflection","declaration":{"id":22831,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":22832,"name":"box","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"boolean"}}],"groups":[{"title":"Properties","children":[22832]}],"sources":[]}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":22825,"name":"T","package":"playwright","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":22833,"name":"expect","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"code","text":"`expect`"},{"kind":"text","text":" function can be used to create test assertions. Read more about [test assertions](https://playwright.dev/docs/test-assertions).\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest(\'example\', async ({ page }) => {\\n  await test.expect(page).toHaveTitle(\'Title\');\\n});\\n```"}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"Expect"},"typeArguments":[{"type":"reflection","declaration":{"id":22834,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true}}}],"name":"Expect","package":"playwright"}},{"id":22835,"name":"extend","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22836,"name":"extend","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Extends the "},{"kind":"code","text":"`test`"},{"kind":"text","text":" object by defining fixtures and/or options that can be used in the tests.\\n\\n**Usage**\\n\\nFirst define a fixture and/or an option.\\n\\n"},{"kind":"code","text":"```js\\nimport { test as base } from \'@playwright/test\';\\nimport { TodoPage } from \'./todo-page\';\\n\\nexport type Options = { defaultItem: string };\\n\\n// Extend basic test by providing a \\"defaultItem\\" option and a \\"todoPage\\" fixture.\\nexport const test = base.extend<Options & { todoPage: TodoPage }>({\\n  // Define an option and provide a default value.\\n  // We can later override it in the config.\\n  defaultItem: [\'Do stuff\', { option: true }],\\n\\n  // Define a fixture. Note that it can use built-in fixture \\"page\\"\\n  // and a new option \\"defaultItem\\".\\n  todoPage: async ({ page, defaultItem }, use) => {\\n    const todoPage = new TodoPage(page);\\n    await todoPage.goto();\\n    await todoPage.addToDo(defaultItem);\\n    await use(todoPage);\\n    await todoPage.removeAll();\\n  },\\n});\\n```"},{"kind":"text","text":"\\n\\nThen use the fixture in the test.\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\nimport { test } from \'./my-test\';\\n\\ntest(\'test 1\', async ({ todoPage }) => {\\n  await todoPage.addToDo(\'my todo\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nConfigure the option in config file.\\n\\n"},{"kind":"code","text":"```js\\n// playwright.config.ts\\nimport { defineConfig } from \'@playwright/test\';\\nimport type { Options } from \'./my-test\';\\n\\nexport default defineConfig<Options>({\\n  projects: [\\n    {\\n      name: \'shopping\',\\n      use: { defaultItem: \'Buy milk\' },\\n    },\\n    {\\n      name: \'wellbeing\',\\n      use: { defaultItem: \'Exercise!\' },\\n    },\\n  ]\\n});\\n```"},{"kind":"text","text":"\\n\\nLearn more about [fixtures](https://playwright.dev/docs/test-fixtures) and [parametrizing tests](https://playwright.dev/docs/test-parameterize)."}]},"sources":[],"typeParameter":[{"id":22837,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"KeyValue"},"name":"KeyValue","package":"playwright"}},{"id":22838,"name":"W","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"KeyValue"},"name":"KeyValue","package":"playwright"},"default":{"type":"reflection","declaration":{"id":22839,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true}}}}],"parameters":[{"id":22840,"name":"fixtures","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An object containing fixtures and/or options. Learn more about [fixtures format](https://playwright.dev/docs/test-fixtures)."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"Fixtures"},"typeArguments":[{"type":"reference","target":22837,"name":"T","package":"playwright","refersToTypeParameter":true},{"type":"reference","target":22838,"name":"W","package":"playwright","refersToTypeParameter":true},{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22592,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22580,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"}]},{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}],"name":"Fixtures","package":"playwright"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestType"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22592,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22580,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":22837,"name":"T","package":"playwright","refersToTypeParameter":true}]},{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"},{"type":"reference","target":22838,"name":"W","package":"playwright","refersToTypeParameter":true}]}],"name":"TestType","package":"playwright"}}]},{"id":22841,"name":"info","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22842,"name":"info","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns information about the currently running test. This method can only be called during the test execution,\\notherwise it throws.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest(\'example test\', async ({ page }) => {\\n  // ...\\n  await test.info().attach(\'screenshot\', {\\n    body: await page.screenshot(),\\n    contentType: \'image/png\',\\n  });\\n});\\n```"}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}]}],"groups":[{"title":"Properties","children":[22650,22651,22833]},{"title":"Methods","children":[22670,22696,22722,22748,22759,22762,22776,22790,22804,22818,22823,22835,22841]}],"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":276,"character":13}],"signatures":[{"id":22635,"name":"it","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a single test scenario.\\n\\n## Example\\n\\n"},{"kind":"code","text":"```typescript\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { describe, it } from \'@serenity-js/playwright-test\'\\n\\ndescribe(`Todo List App`, () => {\\n\\n  it(`should allow me to add a todo item`, async ({ actor }) => {\\n    await actor.attemptsTo(\\n      startWithAnEmptyList(),\\n\\n      recordItem(\'Buy some milk\'),\\n\\n      Ensure.that(itemNames(), equals([\\n        \'Buy some milk\',\\n      ])),\\n    )\\n  })\\n\\n  it(\'supports multiple actors using separate browsers\', async ({ actorCalled }) => {\\n    await actorCalled(\'Alice\').attemptsTo(\\n      startWithAListContaining(\\n        \'Feed the cat\'\\n      ),\\n    )\\n\\n    await actorCalled(\'Bob\').attemptsTo(\\n      startWithAListContaining(\\n        \'Walk the dog\'\\n      ),\\n    )\\n\\n    await actorCalled(\'Alice\').attemptsTo(\\n      Ensure.that(itemNames(), equals([\\n        \'Feed the cat\'\\n      ])),\\n    )\\n\\n    await actorCalled(\'Bob\').attemptsTo(\\n      Ensure.that(itemNames(), equals([\\n        \'Walk the dog\'\\n      ])),\\n    )\\n  })\\n})\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- [Grouping test scenarios](/api/playwright-test/function/describe/)\\n- ["},{"kind":"code","text":"`SerenityFixtures`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityFixtures/)\\n- [Playwright Test "},{"kind":"code","text":"`test`"},{"kind":"text","text":" function](https://playwright.dev/docs/api/class-test#test-call)\\n- [Serenity/JS + Playwright Test project template](https://github.com/serenity-js/serenity-js-playwright-test-template/)"}]},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":276,"character":13}],"parameters":[{"id":22636,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":22637,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":22638,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22639,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":22640,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22592,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22580,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":22641,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"void"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":22642,"name":"it","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a single test scenario.\\n\\n## Example\\n\\n"},{"kind":"code","text":"```typescript\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { describe, it } from \'@serenity-js/playwright-test\'\\n\\ndescribe(`Todo List App`, () => {\\n\\n  it(`should allow me to add a todo item`, async ({ actor }) => {\\n    await actor.attemptsTo(\\n      startWithAnEmptyList(),\\n\\n      recordItem(\'Buy some milk\'),\\n\\n      Ensure.that(itemNames(), equals([\\n        \'Buy some milk\',\\n      ])),\\n    )\\n  })\\n\\n  it(\'supports multiple actors using separate browsers\', async ({ actorCalled }) => {\\n    await actorCalled(\'Alice\').attemptsTo(\\n      startWithAListContaining(\\n        \'Feed the cat\'\\n      ),\\n    )\\n\\n    await actorCalled(\'Bob\').attemptsTo(\\n      startWithAListContaining(\\n        \'Walk the dog\'\\n      ),\\n    )\\n\\n    await actorCalled(\'Alice\').attemptsTo(\\n      Ensure.that(itemNames(), equals([\\n        \'Feed the cat\'\\n      ])),\\n    )\\n\\n    await actorCalled(\'Bob\').attemptsTo(\\n      Ensure.that(itemNames(), equals([\\n        \'Walk the dog\'\\n      ])),\\n    )\\n  })\\n})\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- [Grouping test scenarios](/api/playwright-test/function/describe/)\\n- ["},{"kind":"code","text":"`SerenityFixtures`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityFixtures/)\\n- [Playwright Test "},{"kind":"code","text":"`test`"},{"kind":"text","text":" function](https://playwright.dev/docs/api/class-test#test-call)\\n- [Serenity/JS + Playwright Test project template](https://github.com/serenity-js/serenity-js-playwright-test-template/)"}]},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":276,"character":13}],"parameters":[{"id":22643,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":22644,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestDetails"},"name":"TestDetails","package":"playwright"}},{"id":22645,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":22646,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22647,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":22648,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22592,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22580,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":22649,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"void"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"intrinsic","name":"void"}}],"permalink":"/api/playwright-test/function/it","previousId":23220,"nextId":22843},{"id":22843,"name":"test","variant":"declaration","kind":64,"flags":{"isExternal":true},"children":[{"id":22859,"name":"only","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a focused test. If there are some focused tests or suites, all of them will be run but nothing else.\\n- "},{"kind":"code","text":"`test.only(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.only(title, details, body)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.only(\'focus this test\', async ({ page }) => {\\n  // Run only focused tests in the entire project.\\n});\\n```"}],"blockTags":[{"tag":"@param","name":"title","content":[{"kind":"text","text":"Test title."}]},{"tag":"@param","name":"details","content":[{"kind":"text","text":"See [test.(call)(title[, details, body])](https://playwright.dev/docs/api/class-test#test-call) for test details\\ndescription."}]},{"tag":"@param","name":"body","content":[{"kind":"text","text":"Test body that takes one or two arguments: an object with fixtures and optional "},{"kind":"inline-tag","tag":"@link","text":"TestInfo","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"tsLinkText":""},{"kind":"text","text":"."}]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestFunction"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22592,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22580,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}],"name":"TestFunction","package":"playwright"}},{"id":22860,"name":"describe","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a group of tests.\\n- "},{"kind":"code","text":"`test.describe(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe(callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a group of tests with a title. The title will be visible in the test report as a part of each\\ntest\'s title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe(\'two tests\', () => {\\n  test(\'one\', async ({ page }) => {\\n    // ...\\n  });\\n\\n  test(\'two\', async ({ page }) => {\\n    // ...\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\n**Anonymous group**\\n\\nYou can also declare a test group without a title. This is convenient to give a group of tests a common option with\\n[test.use(options)](https://playwright.dev/docs/api/class-test#test-use).\\n\\n"},{"kind":"code","text":"```js\\ntest.describe(() => {\\n  test.use({ colorScheme: \'dark\' });\\n\\n  test(\'one\', async ({ page }) => {\\n    // ...\\n  });\\n\\n  test(\'two\', async ({ page }) => {\\n    // ...\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\n**Tags**\\n\\nYou can tag all tests in a group by providing additional details. Note that each tag must start with "},{"kind":"code","text":"`@`"},{"kind":"text","text":" symbol.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.describe(\'two tagged tests\', {\\n  tag: \'@smoke\',\\n}, () => {\\n  test(\'one\', async ({ page }) => {\\n    // ...\\n  });\\n\\n  test(\'two\', async ({ page }) => {\\n    // ...\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\nLearn more about [tagging](https://playwright.dev/docs/test-annotations#tag-tests).\\n\\n**Annotations**\\n\\nYou can annotate all tests in a group by providing additional details.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.describe(\'two annotated tests\', {\\n  annotation: {\\n    type: \'issue\',\\n    description: \'https://github.com/microsoft/playwright/issues/23180\',\\n  },\\n}, () => {\\n  test(\'one\', async ({ page }) => {\\n    // ...\\n  });\\n\\n  test(\'two\', async ({ page }) => {\\n    // ...\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\nLearn more about [test annotations](https://playwright.dev/docs/test-annotations)."}],"blockTags":[{"tag":"@param","name":"title","content":[{"kind":"text","text":"Group title."}]},{"tag":"@param","name":"details","content":[{"kind":"text","text":"Additional details for all tests in the group."}]},{"tag":"@param","name":"callback","content":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe). Any tests\\ndeclared in this callback will belong to the group."}]}]},"sources":[],"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"SuiteFunction"},"name":"SuiteFunction","package":"playwright"},{"type":"reflection","declaration":{"id":22861,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":22862,"name":"only","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a focused group of tests. If there are some focused tests or suites, all of them will be run but nothing\\nelse.\\n- "},{"kind":"code","text":"`test.describe.only(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.only(callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.only(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.only(\'focused group\', () => {\\n  test(\'in the focused group\', async ({ page }) => {\\n    // This test will run\\n  });\\n});\\ntest(\'not in the focused group\', async ({ page }) => {\\n  // This test will not run\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.only(() => {\\n  // ...\\n});\\n```"}],"blockTags":[{"tag":"@param","name":"title","content":[{"kind":"text","text":"Group title."}]},{"tag":"@param","name":"details","content":[{"kind":"text","text":"See [test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) for\\ndetails description."}]},{"tag":"@param","name":"callback","content":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.only([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-only).\\nAny tests added in this callback will belong to the group."}]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"SuiteFunction"},"name":"SuiteFunction","package":"playwright"}},{"id":22863,"name":"skip","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a skipped test group, similarly to\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe). Tests in the\\nskipped group are never run.\\n- "},{"kind":"code","text":"`test.describe.skip(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.skip(title)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.skip(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.skip(\'skipped group\', () => {\\n  test(\'example\', async ({ page }) => {\\n    // This test will not run\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.skip(() => {\\n  // ...\\n});\\n```"}],"blockTags":[{"tag":"@param","name":"title","content":[{"kind":"text","text":"Group title."}]},{"tag":"@param","name":"details","content":[{"kind":"text","text":"See [test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) for\\ndetails description."}]},{"tag":"@param","name":"callback","content":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.skip(title[, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-skip).\\nAny tests added in this callback will belong to the group, and will not be run."}]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"SuiteFunction"},"name":"SuiteFunction","package":"playwright"}},{"id":22864,"name":"fixme","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a test group similarly to\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe). Tests in\\nthis group are marked as \\"fixme\\" and will not be executed.\\n- "},{"kind":"code","text":"`test.describe.fixme(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.fixme(callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.fixme(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.fixme(\'broken tests that should be fixed\', () => {\\n  test(\'example\', async ({ page }) => {\\n    // This test will not run\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.fixme(() => {\\n  // ...\\n});\\n```"}],"blockTags":[{"tag":"@param","name":"title","content":[{"kind":"text","text":"Group title."}]},{"tag":"@param","name":"details","content":[{"kind":"text","text":"See [test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) for\\ndetails description."}]},{"tag":"@param","name":"callback","content":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.fixme([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-fixme).\\nAny tests added in this callback will belong to the group, and will not be run."}]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"SuiteFunction"},"name":"SuiteFunction","package":"playwright"}},{"id":22865,"name":"serial","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"**NOTE** See [test.describe.configure([options])](https://playwright.dev/docs/api/class-test#test-describe-configure) for\\nthe preferred way of configuring the execution mode.\\n\\nDeclares a group of tests that should always be run serially. If one of the tests fails, all subsequent tests are\\nskipped. All tests in a group are retried together.\\n\\n**NOTE** Using serial is not recommended. It is usually better to make your tests isolated, so they can be run\\nindependently.\\n- "},{"kind":"code","text":"`test.describe.serial(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.serial(title)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.serial(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.serial(\'group\', () => {\\n  test(\'runs first\', async ({ page }) => {});\\n  test(\'runs second\', async ({ page }) => {});\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.serial(() => {\\n  // ...\\n});\\n```"}],"blockTags":[{"tag":"@param","name":"title","content":[{"kind":"text","text":"Group title."}]},{"tag":"@param","name":"details","content":[{"kind":"text","text":"See [test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) for\\ndetails description."}]},{"tag":"@param","name":"callback","content":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.serial([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-serial).\\nAny tests added in this callback will belong to the group."}]}]},"sources":[],"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"SuiteFunction"},"name":"SuiteFunction","package":"playwright"},{"type":"reflection","declaration":{"id":22866,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":22867,"name":"only","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"**NOTE** See [test.describe.configure([options])](https://playwright.dev/docs/api/class-test#test-describe-configure) for\\nthe preferred way of configuring the execution mode.\\n\\nDeclares a focused group of tests that should always be run serially. If one of the tests fails, all subsequent\\ntests are skipped. All tests in a group are retried together. If there are some focused tests or suites, all of\\nthem will be run but nothing else.\\n\\n**NOTE** Using serial is not recommended. It is usually better to make your tests isolated, so they can be run\\nindependently.\\n- "},{"kind":"code","text":"`test.describe.serial.only(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.serial.only(title)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.serial.only(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.serial.only(\'group\', () => {\\n  test(\'runs first\', async ({ page }) => {\\n  });\\n  test(\'runs second\', async ({ page }) => {\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.serial.only(() => {\\n  // ...\\n});\\n```"}],"blockTags":[{"tag":"@param","name":"title","content":[{"kind":"text","text":"Group title."}]},{"tag":"@param","name":"details","content":[{"kind":"text","text":"See [test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) for\\ndetails description."}]},{"tag":"@param","name":"callback","content":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.serial.only(title[, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-serial-only).\\nAny tests added in this callback will belong to the group."}]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"SuiteFunction"},"name":"SuiteFunction","package":"playwright"}}],"groups":[{"title":"Properties","children":[22867]}],"sources":[]}}]}},{"id":22868,"name":"parallel","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"**NOTE** See [test.describe.configure([options])](https://playwright.dev/docs/api/class-test#test-describe-configure) for\\nthe preferred way of configuring the execution mode.\\n\\nDeclares a group of tests that could be run in parallel. By default, tests in a single test file run one after\\nanother, but using\\n[test.describe.parallel([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-parallel)\\nallows them to run in parallel.\\n- "},{"kind":"code","text":"`test.describe.parallel(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.parallel(callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.parallel(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.parallel(\'group\', () => {\\n  test(\'runs in parallel 1\', async ({ page }) => {});\\n  test(\'runs in parallel 2\', async ({ page }) => {});\\n});\\n```"},{"kind":"text","text":"\\n\\nNote that parallel tests are executed in separate processes and cannot share any state or global variables. Each of\\nthe parallel tests executes all relevant hooks.\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.parallel(() => {\\n  // ...\\n});\\n```"}],"blockTags":[{"tag":"@param","name":"title","content":[{"kind":"text","text":"Group title."}]},{"tag":"@param","name":"details","content":[{"kind":"text","text":"See [test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) for\\ndetails description."}]},{"tag":"@param","name":"callback","content":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.parallel([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-parallel).\\nAny tests added in this callback will belong to the group."}]}]},"sources":[],"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"SuiteFunction"},"name":"SuiteFunction","package":"playwright"},{"type":"reflection","declaration":{"id":22869,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":22870,"name":"only","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"**NOTE** See [test.describe.configure([options])](https://playwright.dev/docs/api/class-test#test-describe-configure) for\\nthe preferred way of configuring the execution mode.\\n\\nDeclares a focused group of tests that could be run in parallel. This is similar to\\n[test.describe.parallel([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-parallel),\\nbut focuses the group. If there are some focused tests or suites, all of them will be run but nothing else.\\n- "},{"kind":"code","text":"`test.describe.parallel.only(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.parallel.only(callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.parallel.only(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.parallel.only(\'group\', () => {\\n  test(\'runs in parallel 1\', async ({ page }) => {});\\n  test(\'runs in parallel 2\', async ({ page }) => {});\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.parallel.only(() => {\\n  // ...\\n});\\n```"}],"blockTags":[{"tag":"@param","name":"title","content":[{"kind":"text","text":"Group title."}]},{"tag":"@param","name":"details","content":[{"kind":"text","text":"See [test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) for\\ndetails description."}]},{"tag":"@param","name":"callback","content":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.parallel.only([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-parallel-only).\\nAny tests added in this callback will belong to the group."}]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"SuiteFunction"},"name":"SuiteFunction","package":"playwright"}}],"groups":[{"title":"Properties","children":[22870]}],"sources":[]}}]}},{"id":22871,"name":"configure","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the enclosing scope. Can be executed either on the top level or inside a describe. Configuration applies\\nto the entire scope, regardless of whether it run before or after the test declaration.\\n\\nLearn more about the execution modes [here](https://playwright.dev/docs/test-parallel).\\n\\n**Usage**\\n- Running tests in parallel.\\n\\n  "},{"kind":"code","text":"```js\\n  // Run all the tests in the file concurrently using parallel workers.\\n  test.describe.configure({ mode: \'parallel\' });\\n  test(\'runs in parallel 1\', async ({ page }) => {});\\n  test(\'runs in parallel 2\', async ({ page }) => {});\\n  ```"},{"kind":"text","text":"\\n\\n- Running tests serially, retrying from the start.\\n\\n  **NOTE** Running serially is not recommended. It is usually better to make your tests isolated, so they can be\\n  run independently.\\n\\n  "},{"kind":"code","text":"```js\\n  // Annotate tests as inter-dependent.\\n  test.describe.configure({ mode: \'serial\' });\\n  test(\'runs first\', async ({ page }) => {});\\n  test(\'runs second\', async ({ page }) => {});\\n  ```"},{"kind":"text","text":"\\n\\n- Configuring retries and timeout for each test.\\n\\n  "},{"kind":"code","text":"```js\\n  // Each test in the file will be retried twice and have a timeout of 20 seconds.\\n  test.describe.configure({ retries: 2, timeout: 20_000 });\\n  test(\'runs first\', async ({ page }) => {});\\n  test(\'runs second\', async ({ page }) => {});\\n  ```"},{"kind":"text","text":"\\n\\n- Run multiple describes in parallel, but tests inside each describe in order.\\n\\n  "},{"kind":"code","text":"```js\\n  test.describe.configure({ mode: \'parallel\' });\\n\\n  test.describe(\'A, runs in parallel with B\', () => {\\n    test.describe.configure({ mode: \'default\' });\\n    test(\'in order A1\', async ({ page }) => {});\\n    test(\'in order A2\', async ({ page }) => {});\\n  });\\n\\n  test.describe(\'B, runs in parallel with A\', () => {\\n    test.describe.configure({ mode: \'default\' });\\n    test(\'in order B1\', async ({ page }) => {});\\n    test(\'in order B2\', async ({ page }) => {});\\n  });\\n  ```"}]},"sources":[],"type":{"type":"reflection","declaration":{"id":22872,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22873,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":22874,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":22875,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":22876,"name":"mode","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"literal","value":"default"},{"type":"literal","value":"parallel"},{"type":"literal","value":"serial"}]}},{"id":22877,"name":"retries","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"number"}},{"id":22878,"name":"timeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[22876,22877,22878]}],"sources":[]}}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"groups":[{"title":"Properties","children":[22862,22863,22864,22865,22868,22871]}],"sources":[]}}]}},{"id":22879,"name":"skip","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22880,"name":"skip","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Skip a test. Playwright will not run the test past the "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":" call.\\n\\nSkipped tests are not supposed to be ever run. If you intent to fix the test, use\\n[test.fixme([title, details, body, condition, callback, description])](https://playwright.dev/docs/api/class-test#test-fixme)\\ninstead.\\n\\nTo declare a skipped test:\\n- "},{"kind":"code","text":"`test.skip(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip(title, details, body)`"},{"kind":"text","text":"\\n\\nTo skip a test at runtime:\\n- "},{"kind":"code","text":"`test.skip(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a skipped test, and Playwright will not run it.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.skip(\'never run\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test should be skipped in some configurations, but not all, you can skip the test inside the test body\\nbased on some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case. Playwright will run the test,\\nbut abort it immediately after the "},{"kind":"code","text":"`test.skip`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'Safari-only test\', async ({ page, browserName }) => {\\n  test.skip(browserName !== \'webkit\', \'This feature is Safari-only\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can skip all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group based\\non some condition with a single "},{"kind":"code","text":"`test.skip(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.skip(({ browserName }) => browserName !== \'webkit\', \'Safari-only\');\\n\\ntest(\'Safari-only test 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'Safari-only test 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend using "},{"kind":"code","text":"`test.skip(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.skip();\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":22881,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":22882,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test body that takes one or two arguments: an object with fixtures and optional "},{"kind":"inline-tag","tag":"@link","text":"TestInfo","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"tsLinkText":""},{"kind":"text","text":"."}]},"type":{"type":"reflection","declaration":{"id":22883,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22884,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":22885,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22592,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22580,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":22886,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"void"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":22887,"name":"skip","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Skip a test. Playwright will not run the test past the "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":" call.\\n\\nSkipped tests are not supposed to be ever run. If you intent to fix the test, use\\n[test.fixme([title, details, body, condition, callback, description])](https://playwright.dev/docs/api/class-test#test-fixme)\\ninstead.\\n\\nTo declare a skipped test:\\n- "},{"kind":"code","text":"`test.skip(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip(title, details, body)`"},{"kind":"text","text":"\\n\\nTo skip a test at runtime:\\n- "},{"kind":"code","text":"`test.skip(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a skipped test, and Playwright will not run it.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.skip(\'never run\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test should be skipped in some configurations, but not all, you can skip the test inside the test body\\nbased on some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case. Playwright will run the test,\\nbut abort it immediately after the "},{"kind":"code","text":"`test.skip`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'Safari-only test\', async ({ page, browserName }) => {\\n  test.skip(browserName !== \'webkit\', \'This feature is Safari-only\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can skip all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group based\\non some condition with a single "},{"kind":"code","text":"`test.skip(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.skip(({ browserName }) => browserName !== \'webkit\', \'Safari-only\');\\n\\ntest(\'Safari-only test 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'Safari-only test 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend using "},{"kind":"code","text":"`test.skip(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.skip();\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":22888,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":22889,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"See [test.(call)(title[, details, body])](https://playwright.dev/docs/api/class-test#test-call) for test details\\ndescription."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestDetails"},"name":"TestDetails","package":"playwright"}},{"id":22890,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test body that takes one or two arguments: an object with fixtures and optional "},{"kind":"inline-tag","tag":"@link","text":"TestInfo","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"tsLinkText":""},{"kind":"text","text":"."}]},"type":{"type":"reflection","declaration":{"id":22891,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22892,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":22893,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22592,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22580,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":22894,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"void"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":22895,"name":"skip","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Skip a test. Playwright will not run the test past the "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":" call.\\n\\nSkipped tests are not supposed to be ever run. If you intent to fix the test, use\\n[test.fixme([title, details, body, condition, callback, description])](https://playwright.dev/docs/api/class-test#test-fixme)\\ninstead.\\n\\nTo declare a skipped test:\\n- "},{"kind":"code","text":"`test.skip(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip(title, details, body)`"},{"kind":"text","text":"\\n\\nTo skip a test at runtime:\\n- "},{"kind":"code","text":"`test.skip(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a skipped test, and Playwright will not run it.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.skip(\'never run\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test should be skipped in some configurations, but not all, you can skip the test inside the test body\\nbased on some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case. Playwright will run the test,\\nbut abort it immediately after the "},{"kind":"code","text":"`test.skip`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'Safari-only test\', async ({ page, browserName }) => {\\n  test.skip(browserName !== \'webkit\', \'This feature is Safari-only\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can skip all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group based\\non some condition with a single "},{"kind":"code","text":"`test.skip(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.skip(({ browserName }) => browserName !== \'webkit\', \'Safari-only\');\\n\\ntest(\'Safari-only test 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'Safari-only test 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend using "},{"kind":"code","text":"`test.skip(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.skip();\\n  // ...\\n});\\n```"}]},"sources":[],"type":{"type":"intrinsic","name":"void"}},{"id":22896,"name":"skip","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Skip a test. Playwright will not run the test past the "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":" call.\\n\\nSkipped tests are not supposed to be ever run. If you intent to fix the test, use\\n[test.fixme([title, details, body, condition, callback, description])](https://playwright.dev/docs/api/class-test#test-fixme)\\ninstead.\\n\\nTo declare a skipped test:\\n- "},{"kind":"code","text":"`test.skip(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip(title, details, body)`"},{"kind":"text","text":"\\n\\nTo skip a test at runtime:\\n- "},{"kind":"code","text":"`test.skip(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a skipped test, and Playwright will not run it.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.skip(\'never run\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test should be skipped in some configurations, but not all, you can skip the test inside the test body\\nbased on some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case. Playwright will run the test,\\nbut abort it immediately after the "},{"kind":"code","text":"`test.skip`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'Safari-only test\', async ({ page, browserName }) => {\\n  test.skip(browserName !== \'webkit\', \'This feature is Safari-only\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can skip all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group based\\non some condition with a single "},{"kind":"code","text":"`test.skip(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.skip(({ browserName }) => browserName !== \'webkit\', \'Safari-only\');\\n\\ntest(\'Safari-only test 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'Safari-only test 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend using "},{"kind":"code","text":"`test.skip(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.skip();\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":22897,"name":"condition","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test is marked as \\"should fail\\" when the condition is "},{"kind":"code","text":"`true`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"boolean"}},{"id":22898,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional description that will be reflected in a test report."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}},{"id":22899,"name":"skip","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Skip a test. Playwright will not run the test past the "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":" call.\\n\\nSkipped tests are not supposed to be ever run. If you intent to fix the test, use\\n[test.fixme([title, details, body, condition, callback, description])](https://playwright.dev/docs/api/class-test#test-fixme)\\ninstead.\\n\\nTo declare a skipped test:\\n- "},{"kind":"code","text":"`test.skip(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip(title, details, body)`"},{"kind":"text","text":"\\n\\nTo skip a test at runtime:\\n- "},{"kind":"code","text":"`test.skip(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a skipped test, and Playwright will not run it.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.skip(\'never run\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test should be skipped in some configurations, but not all, you can skip the test inside the test body\\nbased on some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case. Playwright will run the test,\\nbut abort it immediately after the "},{"kind":"code","text":"`test.skip`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'Safari-only test\', async ({ page, browserName }) => {\\n  test.skip(browserName !== \'webkit\', \'This feature is Safari-only\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can skip all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group based\\non some condition with a single "},{"kind":"code","text":"`test.skip(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.skip(({ browserName }) => browserName !== \'webkit\', \'Safari-only\');\\n\\ntest(\'Safari-only test 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'Safari-only test 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend using "},{"kind":"code","text":"`test.skip(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.skip();\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":22900,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A function that returns whether to mark as \\"should fail\\", based on test fixtures. Test or tests are marked as\\n\\"should fail\\" when the return value is "},{"kind":"code","text":"`true`"},{"kind":"text","text":"."}]},"type":{"type":"reflection","declaration":{"id":22901,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22902,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":22903,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22592,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22580,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}}],"type":{"type":"intrinsic","name":"boolean"}}]}}},{"id":22904,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional description that will be reflected in a test report."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":22905,"name":"fixme","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22906,"name":"fixme","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Mark a test as \\"fixme\\", with the intention to fix it. Playwright will not run the test past the "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":"\\ncall.\\n\\nTo declare a \\"fixme\\" test:\\n- "},{"kind":"code","text":"`test.fixme(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme(title, details, body)`"},{"kind":"text","text":"\\n\\nTo annotate test as \\"fixme\\" at runtime:\\n- "},{"kind":"code","text":"`test.fixme(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a test as to be fixed, and Playwright will not run it.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fixme(\'to be fixed\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test should be fixed in some configurations, but not all, you can mark the test as \\"fixme\\" inside the test\\nbody based on some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case. Playwright will run the\\ntest, but abort it immediately after the "},{"kind":"code","text":"`test.fixme`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'to be fixed in Safari\', async ({ page, browserName }) => {\\n  test.fixme(browserName === \'webkit\', \'This feature breaks in Safari for some reason\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can mark all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group as\\n\\"fixme\\" based on some condition with a single "},{"kind":"code","text":"`test.fixme(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fixme(({ browserName }) => browserName === \'webkit\', \'Should figure out the issue\');\\n\\ntest(\'to be fixed in Safari 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'to be fixed in Safari 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend using "},{"kind":"code","text":"`test.fixme(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.fixme();\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":22907,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":22908,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test body that takes one or two arguments: an object with fixtures and optional "},{"kind":"inline-tag","tag":"@link","text":"TestInfo","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"tsLinkText":""},{"kind":"text","text":"."}]},"type":{"type":"reflection","declaration":{"id":22909,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22910,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":22911,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22592,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22580,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":22912,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"void"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":22913,"name":"fixme","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Mark a test as \\"fixme\\", with the intention to fix it. Playwright will not run the test past the "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":"\\ncall.\\n\\nTo declare a \\"fixme\\" test:\\n- "},{"kind":"code","text":"`test.fixme(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme(title, details, body)`"},{"kind":"text","text":"\\n\\nTo annotate test as \\"fixme\\" at runtime:\\n- "},{"kind":"code","text":"`test.fixme(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a test as to be fixed, and Playwright will not run it.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fixme(\'to be fixed\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test should be fixed in some configurations, but not all, you can mark the test as \\"fixme\\" inside the test\\nbody based on some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case. Playwright will run the\\ntest, but abort it immediately after the "},{"kind":"code","text":"`test.fixme`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'to be fixed in Safari\', async ({ page, browserName }) => {\\n  test.fixme(browserName === \'webkit\', \'This feature breaks in Safari for some reason\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can mark all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group as\\n\\"fixme\\" based on some condition with a single "},{"kind":"code","text":"`test.fixme(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fixme(({ browserName }) => browserName === \'webkit\', \'Should figure out the issue\');\\n\\ntest(\'to be fixed in Safari 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'to be fixed in Safari 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend using "},{"kind":"code","text":"`test.fixme(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.fixme();\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":22914,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":22915,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"See [test.(call)(title[, details, body])](https://playwright.dev/docs/api/class-test#test-call) for test details\\ndescription."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestDetails"},"name":"TestDetails","package":"playwright"}},{"id":22916,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test body that takes one or two arguments: an object with fixtures and optional "},{"kind":"inline-tag","tag":"@link","text":"TestInfo","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"tsLinkText":""},{"kind":"text","text":"."}]},"type":{"type":"reflection","declaration":{"id":22917,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22918,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":22919,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22592,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22580,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":22920,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"void"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":22921,"name":"fixme","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Mark a test as \\"fixme\\", with the intention to fix it. Playwright will not run the test past the "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":"\\ncall.\\n\\nTo declare a \\"fixme\\" test:\\n- "},{"kind":"code","text":"`test.fixme(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme(title, details, body)`"},{"kind":"text","text":"\\n\\nTo annotate test as \\"fixme\\" at runtime:\\n- "},{"kind":"code","text":"`test.fixme(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a test as to be fixed, and Playwright will not run it.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fixme(\'to be fixed\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test should be fixed in some configurations, but not all, you can mark the test as \\"fixme\\" inside the test\\nbody based on some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case. Playwright will run the\\ntest, but abort it immediately after the "},{"kind":"code","text":"`test.fixme`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'to be fixed in Safari\', async ({ page, browserName }) => {\\n  test.fixme(browserName === \'webkit\', \'This feature breaks in Safari for some reason\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can mark all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group as\\n\\"fixme\\" based on some condition with a single "},{"kind":"code","text":"`test.fixme(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fixme(({ browserName }) => browserName === \'webkit\', \'Should figure out the issue\');\\n\\ntest(\'to be fixed in Safari 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'to be fixed in Safari 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend using "},{"kind":"code","text":"`test.fixme(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.fixme();\\n  // ...\\n});\\n```"}]},"sources":[],"type":{"type":"intrinsic","name":"void"}},{"id":22922,"name":"fixme","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Mark a test as \\"fixme\\", with the intention to fix it. Playwright will not run the test past the "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":"\\ncall.\\n\\nTo declare a \\"fixme\\" test:\\n- "},{"kind":"code","text":"`test.fixme(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme(title, details, body)`"},{"kind":"text","text":"\\n\\nTo annotate test as \\"fixme\\" at runtime:\\n- "},{"kind":"code","text":"`test.fixme(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a test as to be fixed, and Playwright will not run it.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fixme(\'to be fixed\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test should be fixed in some configurations, but not all, you can mark the test as \\"fixme\\" inside the test\\nbody based on some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case. Playwright will run the\\ntest, but abort it immediately after the "},{"kind":"code","text":"`test.fixme`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'to be fixed in Safari\', async ({ page, browserName }) => {\\n  test.fixme(browserName === \'webkit\', \'This feature breaks in Safari for some reason\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can mark all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group as\\n\\"fixme\\" based on some condition with a single "},{"kind":"code","text":"`test.fixme(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fixme(({ browserName }) => browserName === \'webkit\', \'Should figure out the issue\');\\n\\ntest(\'to be fixed in Safari 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'to be fixed in Safari 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend using "},{"kind":"code","text":"`test.fixme(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.fixme();\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":22923,"name":"condition","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test is marked as \\"should fail\\" when the condition is "},{"kind":"code","text":"`true`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"boolean"}},{"id":22924,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional description that will be reflected in a test report."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}},{"id":22925,"name":"fixme","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Mark a test as \\"fixme\\", with the intention to fix it. Playwright will not run the test past the "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":"\\ncall.\\n\\nTo declare a \\"fixme\\" test:\\n- "},{"kind":"code","text":"`test.fixme(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme(title, details, body)`"},{"kind":"text","text":"\\n\\nTo annotate test as \\"fixme\\" at runtime:\\n- "},{"kind":"code","text":"`test.fixme(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a test as to be fixed, and Playwright will not run it.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fixme(\'to be fixed\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test should be fixed in some configurations, but not all, you can mark the test as \\"fixme\\" inside the test\\nbody based on some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case. Playwright will run the\\ntest, but abort it immediately after the "},{"kind":"code","text":"`test.fixme`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'to be fixed in Safari\', async ({ page, browserName }) => {\\n  test.fixme(browserName === \'webkit\', \'This feature breaks in Safari for some reason\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can mark all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group as\\n\\"fixme\\" based on some condition with a single "},{"kind":"code","text":"`test.fixme(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fixme(({ browserName }) => browserName === \'webkit\', \'Should figure out the issue\');\\n\\ntest(\'to be fixed in Safari 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'to be fixed in Safari 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend using "},{"kind":"code","text":"`test.fixme(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.fixme();\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":22926,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A function that returns whether to mark as \\"should fail\\", based on test fixtures. Test or tests are marked as\\n\\"should fail\\" when the return value is "},{"kind":"code","text":"`true`"},{"kind":"text","text":"."}]},"type":{"type":"reflection","declaration":{"id":22927,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22928,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":22929,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22592,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22580,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}}],"type":{"type":"intrinsic","name":"boolean"}}]}}},{"id":22930,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional description that will be reflected in a test report."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":22931,"name":"fail","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22932,"name":"fail","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Marks a test as \\"should fail\\". Playwright runs this test and ensures that it is actually failing. This is useful\\nfor documentation purposes to acknowledge that some functionality is broken until it is fixed.\\n\\nTo declare a \\"failing\\" test:\\n- "},{"kind":"code","text":"`test.fail(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fail(title, details, body)`"},{"kind":"text","text":"\\n\\nTo annotate test as \\"failing\\" at runtime:\\n- "},{"kind":"code","text":"`test.fail(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fail(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fail()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a test as failing, so that Playwright ensures it actually fails.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fail(\'not yet ready\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test fails in some configurations, but not all, you can mark the test as failing inside the test body based\\non some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'fail in WebKit\', async ({ page, browserName }) => {\\n  test.fail(browserName === \'webkit\', \'This feature is not implemented for Mac yet\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can mark all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group as\\n\\"should fail\\" based on some condition with a single "},{"kind":"code","text":"`test.fail(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fail(({ browserName }) => browserName === \'webkit\', \'not implemented yet\');\\n\\ntest(\'fail in WebKit 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'fail in WebKit 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.fail()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend declaring a failing test with "},{"kind":"code","text":"`test.fail(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.fail();\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":22933,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":22934,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test body that takes one or two arguments: an object with fixtures and optional "},{"kind":"inline-tag","tag":"@link","text":"TestInfo","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"tsLinkText":""},{"kind":"text","text":"."}]},"type":{"type":"reflection","declaration":{"id":22935,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22936,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":22937,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22592,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22580,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":22938,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"void"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":22939,"name":"fail","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Marks a test as \\"should fail\\". Playwright runs this test and ensures that it is actually failing. This is useful\\nfor documentation purposes to acknowledge that some functionality is broken until it is fixed.\\n\\nTo declare a \\"failing\\" test:\\n- "},{"kind":"code","text":"`test.fail(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fail(title, details, body)`"},{"kind":"text","text":"\\n\\nTo annotate test as \\"failing\\" at runtime:\\n- "},{"kind":"code","text":"`test.fail(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fail(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fail()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a test as failing, so that Playwright ensures it actually fails.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fail(\'not yet ready\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test fails in some configurations, but not all, you can mark the test as failing inside the test body based\\non some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'fail in WebKit\', async ({ page, browserName }) => {\\n  test.fail(browserName === \'webkit\', \'This feature is not implemented for Mac yet\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can mark all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group as\\n\\"should fail\\" based on some condition with a single "},{"kind":"code","text":"`test.fail(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fail(({ browserName }) => browserName === \'webkit\', \'not implemented yet\');\\n\\ntest(\'fail in WebKit 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'fail in WebKit 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.fail()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend declaring a failing test with "},{"kind":"code","text":"`test.fail(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.fail();\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":22940,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":22941,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"See [test.(call)(title[, details, body])](https://playwright.dev/docs/api/class-test#test-call) for test details\\ndescription."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestDetails"},"name":"TestDetails","package":"playwright"}},{"id":22942,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test body that takes one or two arguments: an object with fixtures and optional "},{"kind":"inline-tag","tag":"@link","text":"TestInfo","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"tsLinkText":""},{"kind":"text","text":"."}]},"type":{"type":"reflection","declaration":{"id":22943,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22944,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":22945,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22592,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22580,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":22946,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"void"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":22947,"name":"fail","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Marks a test as \\"should fail\\". Playwright runs this test and ensures that it is actually failing. This is useful\\nfor documentation purposes to acknowledge that some functionality is broken until it is fixed.\\n\\nTo declare a \\"failing\\" test:\\n- "},{"kind":"code","text":"`test.fail(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fail(title, details, body)`"},{"kind":"text","text":"\\n\\nTo annotate test as \\"failing\\" at runtime:\\n- "},{"kind":"code","text":"`test.fail(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fail(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fail()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a test as failing, so that Playwright ensures it actually fails.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fail(\'not yet ready\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test fails in some configurations, but not all, you can mark the test as failing inside the test body based\\non some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'fail in WebKit\', async ({ page, browserName }) => {\\n  test.fail(browserName === \'webkit\', \'This feature is not implemented for Mac yet\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can mark all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group as\\n\\"should fail\\" based on some condition with a single "},{"kind":"code","text":"`test.fail(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fail(({ browserName }) => browserName === \'webkit\', \'not implemented yet\');\\n\\ntest(\'fail in WebKit 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'fail in WebKit 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.fail()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend declaring a failing test with "},{"kind":"code","text":"`test.fail(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.fail();\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":22948,"name":"condition","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test is marked as \\"should fail\\" when the condition is "},{"kind":"code","text":"`true`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"boolean"}},{"id":22949,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional description that will be reflected in a test report."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}},{"id":22950,"name":"fail","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Marks a test as \\"should fail\\". Playwright runs this test and ensures that it is actually failing. This is useful\\nfor documentation purposes to acknowledge that some functionality is broken until it is fixed.\\n\\nTo declare a \\"failing\\" test:\\n- "},{"kind":"code","text":"`test.fail(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fail(title, details, body)`"},{"kind":"text","text":"\\n\\nTo annotate test as \\"failing\\" at runtime:\\n- "},{"kind":"code","text":"`test.fail(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fail(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fail()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a test as failing, so that Playwright ensures it actually fails.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fail(\'not yet ready\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test fails in some configurations, but not all, you can mark the test as failing inside the test body based\\non some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'fail in WebKit\', async ({ page, browserName }) => {\\n  test.fail(browserName === \'webkit\', \'This feature is not implemented for Mac yet\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can mark all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group as\\n\\"should fail\\" based on some condition with a single "},{"kind":"code","text":"`test.fail(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fail(({ browserName }) => browserName === \'webkit\', \'not implemented yet\');\\n\\ntest(\'fail in WebKit 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'fail in WebKit 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.fail()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend declaring a failing test with "},{"kind":"code","text":"`test.fail(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.fail();\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":22951,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A function that returns whether to mark as \\"should fail\\", based on test fixtures. Test or tests are marked as\\n\\"should fail\\" when the return value is "},{"kind":"code","text":"`true`"},{"kind":"text","text":"."}]},"type":{"type":"reflection","declaration":{"id":22952,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22953,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":22954,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22592,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22580,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}}],"type":{"type":"intrinsic","name":"boolean"}}]}}},{"id":22955,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional description that will be reflected in a test report."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}},{"id":22956,"name":"fail","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Marks a test as \\"should fail\\". Playwright runs this test and ensures that it is actually failing. This is useful\\nfor documentation purposes to acknowledge that some functionality is broken until it is fixed.\\n\\nTo declare a \\"failing\\" test:\\n- "},{"kind":"code","text":"`test.fail(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fail(title, details, body)`"},{"kind":"text","text":"\\n\\nTo annotate test as \\"failing\\" at runtime:\\n- "},{"kind":"code","text":"`test.fail(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fail(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fail()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a test as failing, so that Playwright ensures it actually fails.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fail(\'not yet ready\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test fails in some configurations, but not all, you can mark the test as failing inside the test body based\\non some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'fail in WebKit\', async ({ page, browserName }) => {\\n  test.fail(browserName === \'webkit\', \'This feature is not implemented for Mac yet\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can mark all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group as\\n\\"should fail\\" based on some condition with a single "},{"kind":"code","text":"`test.fail(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fail(({ browserName }) => browserName === \'webkit\', \'not implemented yet\');\\n\\ntest(\'fail in WebKit 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'fail in WebKit 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.fail()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend declaring a failing test with "},{"kind":"code","text":"`test.fail(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.fail();\\n  // ...\\n});\\n```"}]},"sources":[],"type":{"type":"intrinsic","name":"void"}}]},{"id":22957,"name":"slow","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22958,"name":"slow","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Marks a test as \\"slow\\". Slow test will be given triple the default timeout.\\n\\nNote that [test.slow([condition, callback, description])](https://playwright.dev/docs/api/class-test#test-slow)\\ncannot be used in a "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" or "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hook. Use\\n[test.setTimeout(timeout)](https://playwright.dev/docs/api/class-test#test-set-timeout) instead.\\n- "},{"kind":"code","text":"`test.slow()`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.slow(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.slow(callback, description)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can mark a test as slow by calling "},{"kind":"code","text":"`test.slow()`"},{"kind":"text","text":" inside the test body.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'slow test\', async ({ page }) => {\\n  test.slow();\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test is slow in some configurations, but not all, you can mark it as slow based on a condition. We\\nrecommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'slow in Safari\', async ({ page, browserName }) => {\\n  test.slow(browserName === \'webkit\', \'This feature is slow in Safari\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can mark all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group as\\n\\"slow\\" based on some condition by passing a callback.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.slow(({ browserName }) => browserName === \'webkit\', \'all tests are slow in Safari\');\\n\\ntest(\'slow in Safari 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'fail in Safari 2\', async ({ page }) => {\\n  // ...\\n});\\n```"}]},"sources":[],"type":{"type":"intrinsic","name":"void"}},{"id":22959,"name":"slow","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Marks a test as \\"slow\\". Slow test will be given triple the default timeout.\\n\\nNote that [test.slow([condition, callback, description])](https://playwright.dev/docs/api/class-test#test-slow)\\ncannot be used in a "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" or "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hook. Use\\n[test.setTimeout(timeout)](https://playwright.dev/docs/api/class-test#test-set-timeout) instead.\\n- "},{"kind":"code","text":"`test.slow()`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.slow(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.slow(callback, description)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can mark a test as slow by calling "},{"kind":"code","text":"`test.slow()`"},{"kind":"text","text":" inside the test body.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'slow test\', async ({ page }) => {\\n  test.slow();\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test is slow in some configurations, but not all, you can mark it as slow based on a condition. We\\nrecommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'slow in Safari\', async ({ page, browserName }) => {\\n  test.slow(browserName === \'webkit\', \'This feature is slow in Safari\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can mark all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group as\\n\\"slow\\" based on some condition by passing a callback.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.slow(({ browserName }) => browserName === \'webkit\', \'all tests are slow in Safari\');\\n\\ntest(\'slow in Safari 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'fail in Safari 2\', async ({ page }) => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":22960,"name":"condition","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test is marked as \\"slow\\" when the condition is "},{"kind":"code","text":"`true`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"boolean"}},{"id":22961,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional description that will be reflected in a test report."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}},{"id":22962,"name":"slow","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Marks a test as \\"slow\\". Slow test will be given triple the default timeout.\\n\\nNote that [test.slow([condition, callback, description])](https://playwright.dev/docs/api/class-test#test-slow)\\ncannot be used in a "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" or "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hook. Use\\n[test.setTimeout(timeout)](https://playwright.dev/docs/api/class-test#test-set-timeout) instead.\\n- "},{"kind":"code","text":"`test.slow()`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.slow(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.slow(callback, description)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can mark a test as slow by calling "},{"kind":"code","text":"`test.slow()`"},{"kind":"text","text":" inside the test body.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'slow test\', async ({ page }) => {\\n  test.slow();\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test is slow in some configurations, but not all, you can mark it as slow based on a condition. We\\nrecommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'slow in Safari\', async ({ page, browserName }) => {\\n  test.slow(browserName === \'webkit\', \'This feature is slow in Safari\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can mark all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group as\\n\\"slow\\" based on some condition by passing a callback.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.slow(({ browserName }) => browserName === \'webkit\', \'all tests are slow in Safari\');\\n\\ntest(\'slow in Safari 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'fail in Safari 2\', async ({ page }) => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":22963,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A function that returns whether to mark as \\"slow\\", based on test fixtures. Test or tests are marked as \\"slow\\" when\\nthe return value is "},{"kind":"code","text":"`true`"},{"kind":"text","text":"."}]},"type":{"type":"reflection","declaration":{"id":22964,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22965,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":22966,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22592,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22580,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}}],"type":{"type":"intrinsic","name":"boolean"}}]}}},{"id":22967,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional description that will be reflected in a test report."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":22968,"name":"setTimeout","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22969,"name":"setTimeout","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Changes the timeout for the test. Zero means no timeout. Learn more about [various timeouts](https://playwright.dev/docs/test-timeouts).\\n\\nTimeout for the currently running test is available through\\n[testInfo.timeout](https://playwright.dev/docs/api/class-testinfo#test-info-timeout).\\n\\n**Usage**\\n- Changing test timeout.\\n\\n  "},{"kind":"code","text":"```js\\n  test(\'very slow test\', async ({ page }) => {\\n    test.setTimeout(120000);\\n    // ...\\n  });\\n  ```"},{"kind":"text","text":"\\n\\n- Changing timeout from a slow "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":" or "},{"kind":"code","text":"`afterEach`"},{"kind":"text","text":" hook. Note that this affects the test timeout that is\\n  shared with "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":"/"},{"kind":"code","text":"`afterEach`"},{"kind":"text","text":" hooks.\\n\\n  "},{"kind":"code","text":"```js\\n  test.beforeEach(async ({ page }, testInfo) => {\\n    // Extend timeout for all tests running this hook by 30 seconds.\\n    test.setTimeout(testInfo.timeout + 30000);\\n  });\\n  ```"},{"kind":"text","text":"\\n\\n- Changing timeout for a "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" or "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hook. Note this affects the hook\'s timeout, not the test\\n  timeout.\\n\\n  "},{"kind":"code","text":"```js\\n  test.beforeAll(async () => {\\n    // Set timeout for this hook.\\n    test.setTimeout(60000);\\n  });\\n  ```"},{"kind":"text","text":"\\n\\n- Changing timeout for all tests in a\\n  [test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group.\\n\\n  "},{"kind":"code","text":"```js\\n  test.describe(\'group\', () => {\\n    // Applies to all tests in this group.\\n    test.describe.configure({ timeout: 60000 });\\n\\n    test(\'test one\', async () => { /* ... */ });\\n    test(\'test two\', async () => { /* ... */ });\\n    test(\'test three\', async () => { /* ... */ });\\n  });\\n  ```"}]},"sources":[],"parameters":[{"id":22970,"name":"timeout","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Timeout in milliseconds."}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":22971,"name":"beforeEach","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22972,"name":"beforeEach","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":" hook that is executed before each test.\\n\\nWhen called in the scope of a test file, runs before each test in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nbefore each test in the group.\\n\\nYou can access all the same "},{"kind":"inline-tag","tag":"@link","text":"Fixtures","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"Fixtures"},"tsLinkText":""},{"kind":"text","text":" as the test body itself, and also the "},{"kind":"inline-tag","tag":"@link","text":"TestInfo","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"tsLinkText":""},{"kind":"text","text":" object that\\ngives a lot of useful information. For example, you can navigate the page before starting the test.\\n\\nYou can use [test.afterEach([title, hookFunction])](https://playwright.dev/docs/api/class-test#test-after-each) to\\nteardown any resources set up in "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":".\\n- "},{"kind":"code","text":"`test.beforeEach(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.beforeEach(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.beforeEach(async ({ page }) => {\\n  console.log(`Running ${test.info().title}`);\\n  await page.goto(\'https://my.start.url/\');\\n});\\n\\ntest(\'my test\', async ({ page }) => {\\n  expect(page.url()).toBe(\'https://my.start.url/\');\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\ntest.beforeEach(\'Open start URL\', async ({ page }) => {\\n  console.log(`Running ${test.info().title}`);\\n  await page.goto(\'https://my.start.url/\');\\n});\\n```"}]},"sources":[],"parameters":[{"id":22973,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":22974,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22975,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":22976,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22592,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22580,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":22977,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":22978,"name":"beforeEach","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":" hook that is executed before each test.\\n\\nWhen called in the scope of a test file, runs before each test in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nbefore each test in the group.\\n\\nYou can access all the same "},{"kind":"inline-tag","tag":"@link","text":"Fixtures","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"Fixtures"},"tsLinkText":""},{"kind":"text","text":" as the test body itself, and also the "},{"kind":"inline-tag","tag":"@link","text":"TestInfo","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"tsLinkText":""},{"kind":"text","text":" object that\\ngives a lot of useful information. For example, you can navigate the page before starting the test.\\n\\nYou can use [test.afterEach([title, hookFunction])](https://playwright.dev/docs/api/class-test#test-after-each) to\\nteardown any resources set up in "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":".\\n- "},{"kind":"code","text":"`test.beforeEach(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.beforeEach(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.beforeEach(async ({ page }) => {\\n  console.log(`Running ${test.info().title}`);\\n  await page.goto(\'https://my.start.url/\');\\n});\\n\\ntest(\'my test\', async ({ page }) => {\\n  expect(page.url()).toBe(\'https://my.start.url/\');\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\ntest.beforeEach(\'Open start URL\', async ({ page }) => {\\n  console.log(`Running ${test.info().title}`);\\n  await page.goto(\'https://my.start.url/\');\\n});\\n```"}]},"sources":[],"parameters":[{"id":22979,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Hook title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":22980,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":22981,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22982,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":22983,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22592,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22580,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":22984,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":22985,"name":"afterEach","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22986,"name":"afterEach","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares an "},{"kind":"code","text":"`afterEach`"},{"kind":"text","text":" hook that is executed after each test.\\n\\nWhen called in the scope of a test file, runs after each test in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nafter each test in the group.\\n\\nYou can access all the same "},{"kind":"inline-tag","tag":"@link","text":"Fixtures","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"Fixtures"},"tsLinkText":""},{"kind":"text","text":" as the test body itself, and also the "},{"kind":"inline-tag","tag":"@link","text":"TestInfo","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"tsLinkText":""},{"kind":"text","text":" object that\\ngives a lot of useful information. For example, you can check whether the test succeeded or failed.\\n- "},{"kind":"code","text":"`test.afterEach(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.afterEach(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`afterEach`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.afterEach(async ({ page }) => {\\n  console.log(`Finished ${test.info().title} with status ${test.info().status}`);\\n\\n  if (test.info().status !== test.info().expectedStatus)\\n    console.log(`Did not run as expected, ended up at ${page.url()}`);\\n});\\n\\ntest(\'my test\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\ntest.afterEach(\'Status check\', async ({ page }) => {\\n  if (test.info().status !== test.info().expectedStatus)\\n    console.log(`Did not run as expected, ended up at ${page.url()}`);\\n});\\n```"}]},"sources":[],"parameters":[{"id":22987,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":22988,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22989,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":22990,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22592,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22580,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":22991,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":22992,"name":"afterEach","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares an "},{"kind":"code","text":"`afterEach`"},{"kind":"text","text":" hook that is executed after each test.\\n\\nWhen called in the scope of a test file, runs after each test in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nafter each test in the group.\\n\\nYou can access all the same "},{"kind":"inline-tag","tag":"@link","text":"Fixtures","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"Fixtures"},"tsLinkText":""},{"kind":"text","text":" as the test body itself, and also the "},{"kind":"inline-tag","tag":"@link","text":"TestInfo","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"tsLinkText":""},{"kind":"text","text":" object that\\ngives a lot of useful information. For example, you can check whether the test succeeded or failed.\\n- "},{"kind":"code","text":"`test.afterEach(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.afterEach(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`afterEach`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.afterEach(async ({ page }) => {\\n  console.log(`Finished ${test.info().title} with status ${test.info().status}`);\\n\\n  if (test.info().status !== test.info().expectedStatus)\\n    console.log(`Did not run as expected, ended up at ${page.url()}`);\\n});\\n\\ntest(\'my test\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\ntest.afterEach(\'Status check\', async ({ page }) => {\\n  if (test.info().status !== test.info().expectedStatus)\\n    console.log(`Did not run as expected, ended up at ${page.url()}`);\\n});\\n```"}]},"sources":[],"parameters":[{"id":22993,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Hook title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":22994,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":22995,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22996,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":22997,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22592,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22580,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":22998,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":22999,"name":"beforeAll","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23000,"name":"beforeAll","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" hook that is executed once per worker process before all tests.\\n\\nWhen called in the scope of a test file, runs before all tests in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nbefore all tests in the group.\\n\\nYou can use [test.afterAll([title, hookFunction])](https://playwright.dev/docs/api/class-test#test-after-all) to\\nteardown any resources set up in "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":".\\n- "},{"kind":"code","text":"`test.beforeAll(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.beforeAll(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nNote that worker process is restarted on test failures, and "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" hook runs again in the new worker. Learn\\nmore about [workers and failures](https://playwright.dev/docs/test-retries).\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.beforeAll(async () => {\\n  console.log(\'Before tests\');\\n});\\n\\ntest.afterAll(async () => {\\n  console.log(\'After tests\');\\n});\\n\\ntest(\'my test\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\ntest.beforeAll(\'Setup\', async () => {\\n  console.log(\'Before tests\');\\n});\\n```"}]},"sources":[],"parameters":[{"id":23001,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":23002,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23003,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":23004,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22592,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22580,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":23005,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":23006,"name":"beforeAll","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" hook that is executed once per worker process before all tests.\\n\\nWhen called in the scope of a test file, runs before all tests in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nbefore all tests in the group.\\n\\nYou can use [test.afterAll([title, hookFunction])](https://playwright.dev/docs/api/class-test#test-after-all) to\\nteardown any resources set up in "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":".\\n- "},{"kind":"code","text":"`test.beforeAll(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.beforeAll(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nNote that worker process is restarted on test failures, and "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" hook runs again in the new worker. Learn\\nmore about [workers and failures](https://playwright.dev/docs/test-retries).\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.beforeAll(async () => {\\n  console.log(\'Before tests\');\\n});\\n\\ntest.afterAll(async () => {\\n  console.log(\'After tests\');\\n});\\n\\ntest(\'my test\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\ntest.beforeAll(\'Setup\', async () => {\\n  console.log(\'Before tests\');\\n});\\n```"}]},"sources":[],"parameters":[{"id":23007,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Hook title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":23008,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":23009,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23010,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":23011,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22592,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22580,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":23012,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":23013,"name":"afterAll","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23014,"name":"afterAll","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares an "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hook that is executed once per worker after all tests.\\n\\nWhen called in the scope of a test file, runs after all tests in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nafter all tests in the group.\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nNote that worker process is restarted on test failures, and "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hook runs again in the new worker. Learn\\nmore about [workers and failures](https://playwright.dev/docs/test-retries).\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n- "},{"kind":"code","text":"`test.afterAll(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.afterAll(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.afterAll(async () => {\\n  console.log(\'Done with tests\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\ntest.afterAll(\'Teardown\', async () => {\\n  console.log(\'Done with tests\');\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":23015,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":23016,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23017,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":23018,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22592,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22580,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":23019,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":23020,"name":"afterAll","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares an "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hook that is executed once per worker after all tests.\\n\\nWhen called in the scope of a test file, runs after all tests in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nafter all tests in the group.\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nNote that worker process is restarted on test failures, and "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hook runs again in the new worker. Learn\\nmore about [workers and failures](https://playwright.dev/docs/test-retries).\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n- "},{"kind":"code","text":"`test.afterAll(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.afterAll(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.afterAll(async () => {\\n  console.log(\'Done with tests\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\ntest.afterAll(\'Teardown\', async () => {\\n  console.log(\'Done with tests\');\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":23021,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Hook title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":23022,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":23023,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23024,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":23025,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22592,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22580,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":23026,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":23027,"name":"use","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23028,"name":"use","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Specifies options or fixtures to use in a single test file or a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group. Most\\nuseful to set an option, for example set "},{"kind":"code","text":"`locale`"},{"kind":"text","text":" to configure "},{"kind":"code","text":"`context`"},{"kind":"text","text":" fixture.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.use({ locale: \'en-US\' });\\n\\ntest(\'test with locale\', async ({ page }) => {\\n  // Default context and page have locale as specified\\n});\\n```"},{"kind":"text","text":"\\n\\n**Details**\\n\\n"},{"kind":"code","text":"`test.use`"},{"kind":"text","text":" can be called either in the global scope or inside "},{"kind":"code","text":"`test.describe`"},{"kind":"text","text":". It is an error to call it within\\n"},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":" or "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":".\\n\\nIt is also possible to override a fixture by providing a function.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.use({\\n  locale: async ({}, use) => {\\n    // Read locale from some configuration file.\\n    const locale = await fs.promises.readFile(\'test-locale\', \'utf-8\');\\n    await use(locale);\\n  },\\n});\\n\\ntest(\'test with locale\', async ({ page }) => {\\n  // Default context and page have locale as specified\\n});\\n```"}]},"sources":[],"parameters":[{"id":23029,"name":"fixtures","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"Fixtures"},"typeArguments":[{"type":"reflection","declaration":{"id":23030,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true}}},{"type":"reflection","declaration":{"id":23031,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true}}},{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22592,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22580,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"}]},{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}],"name":"Fixtures","package":"playwright"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":23032,"name":"step","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23033,"name":"step","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a test step that is shown in the report.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'test\', async ({ page }) => {\\n  await test.step(\'Log in\', async () => {\\n    // ...\\n  });\\n\\n  await test.step(\'Outer step\', async () => {\\n    // ...\\n    // You can nest steps inside each other.\\n    await test.step(\'Inner step\', async () => {\\n      // ...\\n    });\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\n**Details**\\n\\nThe method returns the value returned by the step callback.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'test\', async ({ page }) => {\\n  const user = await test.step(\'Log in\', async () => {\\n    // ...\\n    return \'john\';\\n  });\\n  expect(user).toBe(\'john\');\\n});\\n```"},{"kind":"text","text":"\\n\\n**Decorator**\\n\\nYou can use TypeScript method decorators to turn a method into a step. Each call to the decorated method will show\\nup as a step in the report.\\n\\n"},{"kind":"code","text":"```js\\nfunction step(target: Function, context: ClassMethodDecoratorContext) {\\n  return function replacementMethod(...args: any) {\\n    const name = this.constructor.name + \'.\' + (context.name as string);\\n    return test.step(name, async () => {\\n      return await target.call(this, ...args);\\n    });\\n  };\\n}\\n\\nclass LoginPage {\\n  constructor(readonly page: Page) {}\\n\\n  @step\\n  async login() {\\n    const account = { username: \'Alice\', password: \'s3cr3t\' };\\n    await this.page.getByLabel(\'Username or email address\').fill(account.username);\\n    await this.page.getByLabel(\'Password\').fill(account.password);\\n    await this.page.getByRole(\'button\', { name: \'Sign in\' }).click();\\n    await expect(this.page.getByRole(\'button\', { name: \'View profile and more\' })).toBeVisible();\\n  }\\n}\\n\\ntest(\'example\', async ({ page }) => {\\n  const loginPage = new LoginPage(page);\\n  await loginPage.login();\\n});\\n```"},{"kind":"text","text":"\\n\\n**Boxing**\\n\\nWhen something inside a step fails, you would usually see the error pointing to the exact action that failed. For\\nexample, consider the following login step:\\n\\n"},{"kind":"code","text":"```js\\nasync function login(page) {\\n  await test.step(\'login\', async () => {\\n    const account = { username: \'Alice\', password: \'s3cr3t\' };\\n    await page.getByLabel(\'Username or email address\').fill(account.username);\\n    await page.getByLabel(\'Password\').fill(account.password);\\n    await page.getByRole(\'button\', { name: \'Sign in\' }).click();\\n    await expect(page.getByRole(\'button\', { name: \'View profile and more\' })).toBeVisible();\\n  });\\n}\\n\\ntest(\'example\', async ({ page }) => {\\n  await page.goto(\'https://github.com/login\');\\n  await login(page);\\n});\\n```"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```txt\\nError: Timed out 5000ms waiting for expect(locator).toBeVisible()\\n  ... error details omitted ...\\n\\n   8 |     await page.getByRole(\'button\', { name: \'Sign in\' }).click();\\n>  9 |     await expect(page.getByRole(\'button\', { name: \'View profile and more\' })).toBeVisible();\\n     |                                                                               ^\\n  10 |   });\\n```"},{"kind":"text","text":"\\n\\nAs we see above, the test may fail with an error pointing inside the step. If you would like the error to highlight\\nthe \\"login\\" step instead of its internals, use the "},{"kind":"code","text":"`box`"},{"kind":"text","text":" option. An error inside a boxed step points to the step\\ncall site.\\n\\n"},{"kind":"code","text":"```js\\nasync function login(page) {\\n  await test.step(\'login\', async () => {\\n    // ...\\n  }, { box: true });  // Note the \\"box\\" option here.\\n}\\n```"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```txt\\nError: Timed out 5000ms waiting for expect(locator).toBeVisible()\\n  ... error details omitted ...\\n\\n  14 |   await page.goto(\'https://github.com/login\');\\n> 15 |   await login(page);\\n     |         ^\\n  16 | });\\n```"},{"kind":"text","text":"\\n\\nYou can also create a TypeScript decorator for a boxed step, similar to a regular step decorator above:\\n\\n"},{"kind":"code","text":"```js\\nfunction boxedStep(target: Function, context: ClassMethodDecoratorContext) {\\n  return function replacementMethod(...args: any) {\\n    const name = this.constructor.name + \'.\' + (context.name as string);\\n    return test.step(name, async () => {\\n      return await target.call(this, ...args);\\n    }, { box: true });  // Note the \\"box\\" option here.\\n  };\\n}\\n\\nclass LoginPage {\\n  constructor(readonly page: Page) {}\\n\\n  @boxedStep\\n  async login() {\\n    // ....\\n  }\\n}\\n\\ntest(\'example\', async ({ page }) => {\\n  const loginPage = new LoginPage(page);\\n  await loginPage.login();  // <-- Error will be reported on this line.\\n});\\n```"}]},"sources":[],"typeParameter":[{"id":23034,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":23035,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Step name."}]},"type":{"type":"intrinsic","name":"string"}},{"id":23036,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Step body."}]},"type":{"type":"reflection","declaration":{"id":23037,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23038,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":22825,"name":"T","package":"playwright","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":22825,"name":"T","package":"playwright","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}},{"id":23039,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reflection","declaration":{"id":23040,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":23041,"name":"box","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"boolean"}}],"groups":[{"title":"Properties","children":[23041]}],"sources":[]}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":22825,"name":"T","package":"playwright","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":23042,"name":"expect","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"code","text":"`expect`"},{"kind":"text","text":" function can be used to create test assertions. Read more about [test assertions](https://playwright.dev/docs/test-assertions).\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest(\'example\', async ({ page }) => {\\n  await test.expect(page).toHaveTitle(\'Title\');\\n});\\n```"}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"Expect"},"typeArguments":[{"type":"reflection","declaration":{"id":23043,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true}}}],"name":"Expect","package":"playwright"}},{"id":23044,"name":"extend","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23045,"name":"extend","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Extends the "},{"kind":"code","text":"`test`"},{"kind":"text","text":" object by defining fixtures and/or options that can be used in the tests.\\n\\n**Usage**\\n\\nFirst define a fixture and/or an option.\\n\\n"},{"kind":"code","text":"```js\\nimport { test as base } from \'@playwright/test\';\\nimport { TodoPage } from \'./todo-page\';\\n\\nexport type Options = { defaultItem: string };\\n\\n// Extend basic test by providing a \\"defaultItem\\" option and a \\"todoPage\\" fixture.\\nexport const test = base.extend<Options & { todoPage: TodoPage }>({\\n  // Define an option and provide a default value.\\n  // We can later override it in the config.\\n  defaultItem: [\'Do stuff\', { option: true }],\\n\\n  // Define a fixture. Note that it can use built-in fixture \\"page\\"\\n  // and a new option \\"defaultItem\\".\\n  todoPage: async ({ page, defaultItem }, use) => {\\n    const todoPage = new TodoPage(page);\\n    await todoPage.goto();\\n    await todoPage.addToDo(defaultItem);\\n    await use(todoPage);\\n    await todoPage.removeAll();\\n  },\\n});\\n```"},{"kind":"text","text":"\\n\\nThen use the fixture in the test.\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\nimport { test } from \'./my-test\';\\n\\ntest(\'test 1\', async ({ todoPage }) => {\\n  await todoPage.addToDo(\'my todo\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nConfigure the option in config file.\\n\\n"},{"kind":"code","text":"```js\\n// playwright.config.ts\\nimport { defineConfig } from \'@playwright/test\';\\nimport type { Options } from \'./my-test\';\\n\\nexport default defineConfig<Options>({\\n  projects: [\\n    {\\n      name: \'shopping\',\\n      use: { defaultItem: \'Buy milk\' },\\n    },\\n    {\\n      name: \'wellbeing\',\\n      use: { defaultItem: \'Exercise!\' },\\n    },\\n  ]\\n});\\n```"},{"kind":"text","text":"\\n\\nLearn more about [fixtures](https://playwright.dev/docs/test-fixtures) and [parametrizing tests](https://playwright.dev/docs/test-parameterize)."}]},"sources":[],"typeParameter":[{"id":23046,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"KeyValue"},"name":"KeyValue","package":"playwright"}},{"id":23047,"name":"W","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"KeyValue"},"name":"KeyValue","package":"playwright"},"default":{"type":"reflection","declaration":{"id":23048,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true}}}}],"parameters":[{"id":23049,"name":"fixtures","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An object containing fixtures and/or options. Learn more about [fixtures format](https://playwright.dev/docs/test-fixtures)."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"Fixtures"},"typeArguments":[{"type":"reference","target":22837,"name":"T","package":"playwright","refersToTypeParameter":true},{"type":"reference","target":22838,"name":"W","package":"playwright","refersToTypeParameter":true},{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22592,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22580,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"}]},{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}],"name":"Fixtures","package":"playwright"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestType"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22592,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22580,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":22837,"name":"T","package":"playwright","refersToTypeParameter":true}]},{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"},{"type":"reference","target":22838,"name":"W","package":"playwright","refersToTypeParameter":true}]}],"name":"TestType","package":"playwright"}}]},{"id":23050,"name":"info","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23051,"name":"info","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns information about the currently running test. This method can only be called during the test execution,\\notherwise it throws.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest(\'example test\', async ({ page }) => {\\n  // ...\\n  await test.info().attach(\'screenshot\', {\\n    body: await page.screenshot(),\\n    contentType: \'image/png\',\\n  });\\n});\\n```"}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}]}],"groups":[{"title":"Properties","children":[22859,22860,23042]},{"title":"Methods","children":[22879,22905,22931,22957,22968,22971,22985,22999,23013,23027,23032,23044,23050]}],"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":281,"character":13}],"signatures":[{"id":22844,"name":"test","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a single test scenario. Alias for ["},{"kind":"code","text":"`it`"},{"kind":"text","text":"](/api/playwright-test/function/it/)."}]},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":281,"character":13}],"parameters":[{"id":22845,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":22846,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":22847,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22848,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":22849,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22592,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22580,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":22850,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"void"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":22851,"name":"test","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a single test scenario. Alias for ["},{"kind":"code","text":"`it`"},{"kind":"text","text":"](/api/playwright-test/function/it/)."}]},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":281,"character":13}],"parameters":[{"id":22852,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":22853,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestDetails"},"name":"TestDetails","package":"playwright"}},{"id":22854,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":22855,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22856,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":22857,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22592,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22580,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":22858,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"void"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"intrinsic","name":"void"}}],"permalink":"/api/playwright-test/function/test","previousId":22634,"nextId":23052},{"id":23052,"name":"describe","variant":"declaration","kind":64,"flags":{"isExternal":true},"children":[{"id":23068,"name":"only","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a focused group of tests. If there are some focused tests or suites, all of them will be run but nothing\\nelse.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.only(\'focused group\', () => {\\n  test(\'in the focused group\', async ({ page }) => {\\n    // This test will run\\n  });\\n});\\ntest(\'not in the focused group\', async ({ page }) => {\\n  // This test will not run\\n});\\n```"}],"blockTags":[{"tag":"@param","name":"title","content":[{"kind":"text","text":"Group title."}]},{"tag":"@param","name":"callback","content":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.only(title, callback)](https://playwright.dev/docs/api/class-test#test-describe-only). Any tests\\nadded in this callback will belong to the group."}]}]},"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":28,"character":4}],"type":{"type":"reference","target":22599,"name":"SuiteFunction","package":"@serenity-js/playwright-test"}},{"id":23069,"name":"skip","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a skipped test group, similarly to\\n[test.describe(title, callback)](https://playwright.dev/docs/api/class-test#test-describe-1). Tests in the skipped\\ngroup are never run.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.skip(\'skipped group\', () => {\\n  test(\'example\', async ({ page }) => {\\n    // This test will not run\\n  });\\n});\\n```"}],"blockTags":[{"tag":"@param","name":"title","content":[{"kind":"text","text":"Group title."}]},{"tag":"@param","name":"callback","content":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.skip(title, callback)](https://playwright.dev/docs/api/class-test#test-describe-skip). Any tests\\nadded in this callback will belong to the group, and will not be run."}]}]},"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":49,"character":4}],"type":{"type":"reference","target":22599,"name":"SuiteFunction","package":"@serenity-js/playwright-test"}},{"id":23070,"name":"fixme","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a test group similarly to\\n[test.describe(title, callback)](https://playwright.dev/docs/api/class-test#test-describe-1). Tests in this group\\nare marked as \\"fixme\\" and will not be executed.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.fixme(\'broken tests\', () => {\\n  test(\'example\', async ({ page }) => {\\n    // This test will not run\\n  });\\n});\\n```"}],"blockTags":[{"tag":"@param","name":"title","content":[{"kind":"text","text":"Group title."}]},{"tag":"@param","name":"callback","content":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.fixme(title, callback)](https://playwright.dev/docs/api/class-test#test-describe-fixme). Any tests\\nadded in this callback will belong to the group, and will not be run."}]}]},"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":70,"character":4}],"type":{"type":"reference","target":22599,"name":"SuiteFunction","package":"@serenity-js/playwright-test"}},{"id":23071,"name":"serial","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"**NOTE** See [test.describe.configure([options])](https://playwright.dev/docs/api/class-test#test-describe-configure) for\\nthe preferred way of configuring the execution mode.\\n\\nDeclares a group of tests that should always be run serially. If one of the tests fails, all subsequent tests are\\nskipped. All tests in a group are retried together.\\n\\n**NOTE** Using serial is not recommended. It is usually better to make your tests isolated, so they can be run\\nindependently.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.serial(\'group\', () => {\\n  test(\'runs first\', async ({ page }) => {});\\n  test(\'runs second\', async ({ page }) => {});\\n});\\n```"}],"blockTags":[{"tag":"@param","name":"title","content":[{"kind":"text","text":"Group title."}]},{"tag":"@param","name":"callback","content":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.serial(title, callback)](https://playwright.dev/docs/api/class-test#test-describe-serial). Any tests\\nadded in this callback will belong to the group."}]}]},"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":95,"character":4}],"type":{"type":"intersection","types":[{"type":"reference","target":22599,"name":"SuiteFunction","package":"@serenity-js/playwright-test"},{"type":"reflection","declaration":{"id":23072,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":23073,"name":"only","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"**NOTE** See [test.describe.configure([options])](https://playwright.dev/docs/api/class-test#test-describe-configure) for\\nthe preferred way of configuring the execution mode.\\n\\nDeclares a focused group of tests that should always be run serially. If one of the tests fails, all subsequent\\ntests are skipped. All tests in a group are retried together. If there are some focused tests or suites, all of\\nthem will be run but nothing else.\\n\\n**NOTE** Using serial is not recommended. It is usually better to make your tests isolated, so they can be run\\nindependently.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.serial.only(\'group\', () => {\\n  test(\'runs first\', async ({ page }) => {\\n  });\\n  test(\'runs second\', async ({ page }) => {\\n  });\\n});\\n```"}],"blockTags":[{"tag":"@param","name":"title","content":[{"kind":"text","text":"Group title."}]},{"tag":"@param","name":"callback","content":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.serial.only(title, callback)](https://playwright.dev/docs/api/class-test#test-describe-serial-only).\\nAny tests added in this callback will belong to the group."}]}]},"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":123,"character":8}],"type":{"type":"reference","target":22599,"name":"SuiteFunction","package":"@serenity-js/playwright-test"}}],"groups":[{"title":"Properties","children":[23073]}],"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":95,"character":28}]}}]}},{"id":23074,"name":"parallel","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"**NOTE** See [test.describe.configure([options])](https://playwright.dev/docs/api/class-test#test-describe-configure) for\\nthe preferred way of configuring the execution mode.\\n\\nDeclares a group of tests that could be run in parallel. By default, tests in a single test file run one after\\nanother, but using\\n[test.describe.parallel(title, callback)](https://playwright.dev/docs/api/class-test#test-describe-parallel) allows\\nthem to run in parallel.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.parallel(\'group\', () => {\\n  test(\'runs in parallel 1\', async ({ page }) => {});\\n  test(\'runs in parallel 2\', async ({ page }) => {});\\n});\\n```"},{"kind":"text","text":"\\n\\nNote that parallel tests are executed in separate processes and cannot share any state or global variables. Each of\\nthe parallel tests executes all relevant hooks."}],"blockTags":[{"tag":"@param","name":"title","content":[{"kind":"text","text":"Group title."}]},{"tag":"@param","name":"callback","content":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.parallel(title, callback)](https://playwright.dev/docs/api/class-test#test-describe-parallel). Any\\ntests added in this callback will belong to the group."}]}]},"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":150,"character":4}],"type":{"type":"intersection","types":[{"type":"reference","target":22599,"name":"SuiteFunction","package":"@serenity-js/playwright-test"},{"type":"reflection","declaration":{"id":23075,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":23076,"name":"only","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"**NOTE** See [test.describe.configure([options])](https://playwright.dev/docs/api/class-test#test-describe-configure) for\\nthe preferred way of configuring the execution mode.\\n\\nDeclares a focused group of tests that could be run in parallel. This is similar to\\n[test.describe.parallel(title, callback)](https://playwright.dev/docs/api/class-test#test-describe-parallel), but\\nfocuses the group. If there are some focused tests or suites, all of them will be run but nothing else.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.parallel.only(\'group\', () => {\\n  test(\'runs in parallel 1\', async ({ page }) => {});\\n  test(\'runs in parallel 2\', async ({ page }) => {});\\n});\\n```"}],"blockTags":[{"tag":"@param","name":"title","content":[{"kind":"text","text":"Group title."}]},{"tag":"@param","name":"callback","content":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.parallel.only(title, callback)](https://playwright.dev/docs/api/class-test#test-describe-parallel-only).\\nAny tests added in this callback will belong to the group."}]}]},"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":173,"character":8}],"type":{"type":"reference","target":22599,"name":"SuiteFunction","package":"@serenity-js/playwright-test"}}],"groups":[{"title":"Properties","children":[23076]}],"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":150,"character":30}]}}]}},{"id":23077,"name":"configure","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the enclosing scope. Can be executed either on the top level or inside a describe. Configuration applies\\nto the entire scope, regardless of whether it run before or after the test declaration.\\n\\nLearn more about the execution modes [here](https://playwright.dev/docs/test-parallel).\\n\\n**Usage**\\n- Running tests in parallel.\\n\\n  "},{"kind":"code","text":"```js\\n  // Run all the tests in the file concurrently using parallel workers.\\n  test.describe.configure({ mode: \'parallel\' });\\n  test(\'runs in parallel 1\', async ({ page }) => {});\\n  test(\'runs in parallel 2\', async ({ page }) => {});\\n  ```"},{"kind":"text","text":"\\n\\n- Running tests serially, retrying from the start.\\n\\n  **NOTE** Running serially is not recommended. It is usually better to make your tests isolated, so they can be\\n  run independently.\\n\\n  "},{"kind":"code","text":"```js\\n  // Annotate tests as inter-dependent.\\n  test.describe.configure({ mode: \'serial\' });\\n  test(\'runs first\', async ({ page }) => {});\\n  test(\'runs second\', async ({ page }) => {});\\n  ```"},{"kind":"text","text":"\\n\\n- Configuring retries and timeout for each test.\\n\\n  "},{"kind":"code","text":"```js\\n  // Each test in the file will be retried twice and have a timeout of 20 seconds.\\n  test.describe.configure({ retries: 2, timeout: 20_000 });\\n  test(\'runs first\', async ({ page }) => {});\\n  test(\'runs second\', async ({ page }) => {});\\n  ```"},{"kind":"text","text":"\\n\\n- Run multiple describes in parallel, but tests inside each describe in order.\\n\\n  "},{"kind":"code","text":"```js\\n  test.describe.configure({ mode: \'parallel\' });\\n\\n  test.describe(\'A, runs in parallel with B\', () => {\\n    test.describe.configure({ mode: \'default\' });\\n    test(\'in order A1\', async ({ page }) => {});\\n    test(\'in order A2\', async ({ page }) => {});\\n  });\\n\\n  test.describe(\'B, runs in parallel with A\', () => {\\n    test.describe.configure({ mode: \'default\' });\\n    test(\'in order B1\', async ({ page }) => {});\\n    test(\'in order B2\', async ({ page }) => {});\\n  });\\n  ```"}]},"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":232,"character":4}],"type":{"type":"reflection","declaration":{"id":23078,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":232,"character":15}],"signatures":[{"id":23079,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":232,"character":15}],"parameters":[{"id":23080,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":23081,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":23082,"name":"mode","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":232,"character":27}],"type":{"type":"union","types":[{"type":"literal","value":"default"},{"type":"literal","value":"parallel"},{"type":"literal","value":"serial"}]}},{"id":23083,"name":"retries","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":232,"character":69}],"type":{"type":"intrinsic","name":"number"}},{"id":23084,"name":"timeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":232,"character":87}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[23082,23083,23084]}],"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":232,"character":25}]}}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"groups":[{"title":"Properties","children":[23068,23069,23070,23071,23074,23077]}],"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":331,"character":13}],"signatures":[{"id":23053,"name":"describe","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a group of test scenarios.\\n\\n## Example\\n\\n"},{"kind":"code","text":"```typescript\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { describe, it, test } from \'@serenity-js/playwright-test\'\\nimport { Photographer, TakePhotosOfFailures, Value } from \'@serenity-js/web\'\\n\\ndescribe(`Todo List App`, () => {\\n\\n  test.use({\\n    defaultActorName: \'Serena\',\\n    crew: [\\n      Photographer.whoWill(TakePhotosOfFailures),\\n    ],\\n  })\\n\\n  it(`should allow me to add a todo item`, async ({ actor }) => {\\n    await actor.attemptsTo(\\n      startWithAnEmptyList(),\\n\\n      recordItem(\'Buy some milk\'),\\n\\n      Ensure.that(itemNames(), equals([\\n        \'Buy some milk\',\\n      ])),\\n    )\\n  })\\n\\n  it(\'should clear text input field when an item is added\', async ({ actor }) => {\\n    await actor.attemptsTo(\\n      startWithAnEmptyList(),\\n\\n      recordItem(\'Buy some milk\'),\\n\\n      Ensure.that(Value.of(newTodoInput()), equals(\'\')),\\n    )\\n  })\\n})\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- Declaring a Serenity/JS [test scenario](/api/playwright-test/function/it/)\\n- [Playwright Test "},{"kind":"code","text":"`describe`"},{"kind":"text","text":" function](https://playwright.dev/docs/api/class-test#test-describe-1)\\n- [Serenity/JS + Playwright Test project template](https://github.com/serenity-js/serenity-js-playwright-test-template/)"}]},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":331,"character":13}],"parameters":[{"id":23054,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":23055,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":23056,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/SuiteFunction.ts","line":29,"character":30}],"signatures":[{"id":23057,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/SuiteFunction.ts","line":29,"character":30}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":23058,"name":"describe","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a group of test scenarios.\\n\\n## Example\\n\\n"},{"kind":"code","text":"```typescript\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { describe, it, test } from \'@serenity-js/playwright-test\'\\nimport { Photographer, TakePhotosOfFailures, Value } from \'@serenity-js/web\'\\n\\ndescribe(`Todo List App`, () => {\\n\\n  test.use({\\n    defaultActorName: \'Serena\',\\n    crew: [\\n      Photographer.whoWill(TakePhotosOfFailures),\\n    ],\\n  })\\n\\n  it(`should allow me to add a todo item`, async ({ actor }) => {\\n    await actor.attemptsTo(\\n      startWithAnEmptyList(),\\n\\n      recordItem(\'Buy some milk\'),\\n\\n      Ensure.that(itemNames(), equals([\\n        \'Buy some milk\',\\n      ])),\\n    )\\n  })\\n\\n  it(\'should clear text input field when an item is added\', async ({ actor }) => {\\n    await actor.attemptsTo(\\n      startWithAnEmptyList(),\\n\\n      recordItem(\'Buy some milk\'),\\n\\n      Ensure.that(Value.of(newTodoInput()), equals(\'\')),\\n    )\\n  })\\n})\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- Declaring a Serenity/JS [test scenario](/api/playwright-test/function/it/)\\n- [Playwright Test "},{"kind":"code","text":"`describe`"},{"kind":"text","text":" function](https://playwright.dev/docs/api/class-test#test-describe-1)\\n- [Serenity/JS + Playwright Test project template](https://github.com/serenity-js/serenity-js-playwright-test-template/)"}]},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":331,"character":13}],"parameters":[{"id":23059,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":23060,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/SuiteFunction.ts","line":54,"character":15}],"signatures":[{"id":23061,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/SuiteFunction.ts","line":54,"character":15}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":23062,"name":"describe","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a group of test scenarios.\\n\\n## Example\\n\\n"},{"kind":"code","text":"```typescript\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { describe, it, test } from \'@serenity-js/playwright-test\'\\nimport { Photographer, TakePhotosOfFailures, Value } from \'@serenity-js/web\'\\n\\ndescribe(`Todo List App`, () => {\\n\\n  test.use({\\n    defaultActorName: \'Serena\',\\n    crew: [\\n      Photographer.whoWill(TakePhotosOfFailures),\\n    ],\\n  })\\n\\n  it(`should allow me to add a todo item`, async ({ actor }) => {\\n    await actor.attemptsTo(\\n      startWithAnEmptyList(),\\n\\n      recordItem(\'Buy some milk\'),\\n\\n      Ensure.that(itemNames(), equals([\\n        \'Buy some milk\',\\n      ])),\\n    )\\n  })\\n\\n  it(\'should clear text input field when an item is added\', async ({ actor }) => {\\n    await actor.attemptsTo(\\n      startWithAnEmptyList(),\\n\\n      recordItem(\'Buy some milk\'),\\n\\n      Ensure.that(Value.of(newTodoInput()), equals(\'\')),\\n    )\\n  })\\n})\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- Declaring a Serenity/JS [test scenario](/api/playwright-test/function/it/)\\n- [Playwright Test "},{"kind":"code","text":"`describe`"},{"kind":"text","text":" function](https://playwright.dev/docs/api/class-test#test-describe-1)\\n- [Serenity/JS + Playwright Test project template](https://github.com/serenity-js/serenity-js-playwright-test-template/)"}]},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":331,"character":13}],"parameters":[{"id":23063,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":23064,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestDetails"},"name":"TestDetails","package":"playwright"}},{"id":23065,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":23066,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/SuiteFunction.ts","line":65,"character":52}],"signatures":[{"id":23067,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/SuiteFunction.ts","line":65,"character":52}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}],"permalink":"/api/playwright-test/function/describe","previousId":22843,"nextId":23085},{"id":23085,"name":"beforeAll","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":333,"character":13}],"signatures":[{"id":23086,"name":"beforeAll","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" hook that is executed once per worker process before all tests.\\n\\nWhen called in the scope of a test file, runs before all tests in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nbefore all tests in the group.\\n\\nYou can use [test.afterAll([title, hookFunction])](https://playwright.dev/docs/api/class-test#test-after-all) to\\nteardown any resources set up in "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":".\\n- "},{"kind":"code","text":"`test.beforeAll(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.beforeAll(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nNote that worker process is restarted on test failures, and "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" hook runs again in the new worker. Learn\\nmore about [workers and failures](https://playwright.dev/docs/test-retries).\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.beforeAll(async () => {\\n  console.log(\'Before tests\');\\n});\\n\\ntest.afterAll(async () => {\\n  console.log(\'After tests\');\\n});\\n\\ntest(\'my test\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\ntest.beforeAll(\'Setup\', async () => {\\n  console.log(\'Before tests\');\\n});\\n```"}]},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":333,"character":13}],"parameters":[{"id":23087,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":23088,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23089,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":23090,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22592,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22580,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":23091,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":23092,"name":"beforeAll","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" hook that is executed once per worker process before all tests.\\n\\nWhen called in the scope of a test file, runs before all tests in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nbefore all tests in the group.\\n\\nYou can use [test.afterAll([title, hookFunction])](https://playwright.dev/docs/api/class-test#test-after-all) to\\nteardown any resources set up in "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":".\\n- "},{"kind":"code","text":"`test.beforeAll(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.beforeAll(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nNote that worker process is restarted on test failures, and "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" hook runs again in the new worker. Learn\\nmore about [workers and failures](https://playwright.dev/docs/test-retries).\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.beforeAll(async () => {\\n  console.log(\'Before tests\');\\n});\\n\\ntest.afterAll(async () => {\\n  console.log(\'After tests\');\\n});\\n\\ntest(\'my test\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\ntest.beforeAll(\'Setup\', async () => {\\n  console.log(\'Before tests\');\\n});\\n```"}]},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":333,"character":13}],"parameters":[{"id":23093,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Hook title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":23094,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":23095,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23096,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":23097,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22592,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22580,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":23098,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}}],"permalink":"/api/playwright-test/function/beforeAll","previousId":23052,"nextId":23099},{"id":23099,"name":"beforeEach","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":335,"character":13}],"signatures":[{"id":23100,"name":"beforeEach","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":" hook that is executed before each test.\\n\\nWhen called in the scope of a test file, runs before each test in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nbefore each test in the group.\\n\\nYou can access all the same "},{"kind":"inline-tag","tag":"@link","text":"Fixtures","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"Fixtures"},"tsLinkText":""},{"kind":"text","text":" as the test body itself, and also the "},{"kind":"inline-tag","tag":"@link","text":"TestInfo","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"tsLinkText":""},{"kind":"text","text":" object that\\ngives a lot of useful information. For example, you can navigate the page before starting the test.\\n\\nYou can use [test.afterEach([title, hookFunction])](https://playwright.dev/docs/api/class-test#test-after-each) to\\nteardown any resources set up in "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":".\\n- "},{"kind":"code","text":"`test.beforeEach(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.beforeEach(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.beforeEach(async ({ page }) => {\\n  console.log(`Running ${test.info().title}`);\\n  await page.goto(\'https://my.start.url/\');\\n});\\n\\ntest(\'my test\', async ({ page }) => {\\n  expect(page.url()).toBe(\'https://my.start.url/\');\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\ntest.beforeEach(\'Open start URL\', async ({ page }) => {\\n  console.log(`Running ${test.info().title}`);\\n  await page.goto(\'https://my.start.url/\');\\n});\\n```"}]},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":335,"character":13}],"parameters":[{"id":23101,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":23102,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23103,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":23104,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22592,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22580,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":23105,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":23106,"name":"beforeEach","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":" hook that is executed before each test.\\n\\nWhen called in the scope of a test file, runs before each test in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nbefore each test in the group.\\n\\nYou can access all the same "},{"kind":"inline-tag","tag":"@link","text":"Fixtures","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"Fixtures"},"tsLinkText":""},{"kind":"text","text":" as the test body itself, and also the "},{"kind":"inline-tag","tag":"@link","text":"TestInfo","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"tsLinkText":""},{"kind":"text","text":" object that\\ngives a lot of useful information. For example, you can navigate the page before starting the test.\\n\\nYou can use [test.afterEach([title, hookFunction])](https://playwright.dev/docs/api/class-test#test-after-each) to\\nteardown any resources set up in "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":".\\n- "},{"kind":"code","text":"`test.beforeEach(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.beforeEach(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.beforeEach(async ({ page }) => {\\n  console.log(`Running ${test.info().title}`);\\n  await page.goto(\'https://my.start.url/\');\\n});\\n\\ntest(\'my test\', async ({ page }) => {\\n  expect(page.url()).toBe(\'https://my.start.url/\');\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\ntest.beforeEach(\'Open start URL\', async ({ page }) => {\\n  console.log(`Running ${test.info().title}`);\\n  await page.goto(\'https://my.start.url/\');\\n});\\n```"}]},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":335,"character":13}],"parameters":[{"id":23107,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Hook title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":23108,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":23109,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23110,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":23111,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22592,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22580,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":23112,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}}],"permalink":"/api/playwright-test/function/beforeEach","previousId":23085,"nextId":23113},{"id":23113,"name":"afterEach","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":337,"character":13}],"signatures":[{"id":23114,"name":"afterEach","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares an "},{"kind":"code","text":"`afterEach`"},{"kind":"text","text":" hook that is executed after each test.\\n\\nWhen called in the scope of a test file, runs after each test in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nafter each test in the group.\\n\\nYou can access all the same "},{"kind":"inline-tag","tag":"@link","text":"Fixtures","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"Fixtures"},"tsLinkText":""},{"kind":"text","text":" as the test body itself, and also the "},{"kind":"inline-tag","tag":"@link","text":"TestInfo","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"tsLinkText":""},{"kind":"text","text":" object that\\ngives a lot of useful information. For example, you can check whether the test succeeded or failed.\\n- "},{"kind":"code","text":"`test.afterEach(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.afterEach(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`afterEach`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.afterEach(async ({ page }) => {\\n  console.log(`Finished ${test.info().title} with status ${test.info().status}`);\\n\\n  if (test.info().status !== test.info().expectedStatus)\\n    console.log(`Did not run as expected, ended up at ${page.url()}`);\\n});\\n\\ntest(\'my test\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\ntest.afterEach(\'Status check\', async ({ page }) => {\\n  if (test.info().status !== test.info().expectedStatus)\\n    console.log(`Did not run as expected, ended up at ${page.url()}`);\\n});\\n```"}]},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":337,"character":13}],"parameters":[{"id":23115,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":23116,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23117,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":23118,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22592,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22580,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":23119,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":23120,"name":"afterEach","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares an "},{"kind":"code","text":"`afterEach`"},{"kind":"text","text":" hook that is executed after each test.\\n\\nWhen called in the scope of a test file, runs after each test in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nafter each test in the group.\\n\\nYou can access all the same "},{"kind":"inline-tag","tag":"@link","text":"Fixtures","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"Fixtures"},"tsLinkText":""},{"kind":"text","text":" as the test body itself, and also the "},{"kind":"inline-tag","tag":"@link","text":"TestInfo","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"tsLinkText":""},{"kind":"text","text":" object that\\ngives a lot of useful information. For example, you can check whether the test succeeded or failed.\\n- "},{"kind":"code","text":"`test.afterEach(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.afterEach(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`afterEach`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.afterEach(async ({ page }) => {\\n  console.log(`Finished ${test.info().title} with status ${test.info().status}`);\\n\\n  if (test.info().status !== test.info().expectedStatus)\\n    console.log(`Did not run as expected, ended up at ${page.url()}`);\\n});\\n\\ntest(\'my test\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\ntest.afterEach(\'Status check\', async ({ page }) => {\\n  if (test.info().status !== test.info().expectedStatus)\\n    console.log(`Did not run as expected, ended up at ${page.url()}`);\\n});\\n```"}]},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":337,"character":13}],"parameters":[{"id":23121,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Hook title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":23122,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":23123,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23124,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":23125,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22592,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22580,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":23126,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}}],"permalink":"/api/playwright-test/function/afterEach","previousId":23099,"nextId":23127},{"id":23127,"name":"afterAll","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":339,"character":13}],"signatures":[{"id":23128,"name":"afterAll","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares an "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hook that is executed once per worker after all tests.\\n\\nWhen called in the scope of a test file, runs after all tests in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nafter all tests in the group.\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nNote that worker process is restarted on test failures, and "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hook runs again in the new worker. Learn\\nmore about [workers and failures](https://playwright.dev/docs/test-retries).\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n- "},{"kind":"code","text":"`test.afterAll(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.afterAll(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.afterAll(async () => {\\n  console.log(\'Done with tests\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\ntest.afterAll(\'Teardown\', async () => {\\n  console.log(\'Done with tests\');\\n  // ...\\n});\\n```"}]},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":339,"character":13}],"parameters":[{"id":23129,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":23130,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23131,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":23132,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22592,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22580,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":23133,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":23134,"name":"afterAll","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares an "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hook that is executed once per worker after all tests.\\n\\nWhen called in the scope of a test file, runs after all tests in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nafter all tests in the group.\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nNote that worker process is restarted on test failures, and "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hook runs again in the new worker. Learn\\nmore about [workers and failures](https://playwright.dev/docs/test-retries).\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n- "},{"kind":"code","text":"`test.afterAll(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.afterAll(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.afterAll(async () => {\\n  console.log(\'Done with tests\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\ntest.afterAll(\'Teardown\', async () => {\\n  console.log(\'Done with tests\');\\n  // ...\\n});\\n```"}]},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":339,"character":13}],"parameters":[{"id":23135,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Hook title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":23136,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":23137,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23138,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":23139,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22592,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22580,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":23140,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}}],"permalink":"/api/playwright-test/function/afterAll","previousId":23113,"nextId":23141},{"id":23141,"name":"expect","variant":"declaration","kind":64,"flags":{"isExternal":true},"children":[{"id":23194,"name":"any","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23195,"name":"any","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"code","text":"`expect.any()`"},{"kind":"text","text":" matches any object instance created from the "},{"kind":"code","text":"`constructor`"},{"kind":"text","text":" or a corresponding primitive type. Use it\\ninside\\n[expect(value).toEqual(expected)](https://playwright.dev/docs/api/class-genericassertions#generic-assertions-to-equal)\\nto perform pattern matching.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\n// Match instance of a class.\\nclass Example {}\\nexpect(new Example()).toEqual(expect.any(Example));\\n\\n// Match any number.\\nexpect({ prop: 1 }).toEqual({ prop: expect.any(Number) });\\n\\n// Match any string.\\nexpect(\'abc\').toEqual(expect.any(String));\\n```"}]},"sources":[],"parameters":[{"id":23196,"name":"sample","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"AsymmetricMatcher"},"name":"AsymmetricMatcher","package":"playwright"}}]},{"id":23197,"name":"anything","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23198,"name":"anything","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"code","text":"`expect.anything()`"},{"kind":"text","text":" matches everything except "},{"kind":"code","text":"`null`"},{"kind":"text","text":" and "},{"kind":"code","text":"`undefined`"},{"kind":"text","text":". Use it inside\\n[expect(value).toEqual(expected)](https://playwright.dev/docs/api/class-genericassertions#generic-assertions-to-equal)\\nto perform pattern matching.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\nconst value = { prop: 1 };\\nexpect(value).toEqual({ prop: expect.anything() });\\nexpect(value).not.toEqual({ otherProp: expect.anything() });\\n```"}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"AsymmetricMatcher"},"name":"AsymmetricMatcher","package":"playwright"}}]},{"id":23199,"name":"arrayContaining","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23200,"name":"arrayContaining","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"code","text":"`expect.arrayContaining()`"},{"kind":"text","text":" matches an array that contains all of the elements in the expected array, in any order.\\nNote that received array may be a superset of the expected array and contain some extra elements.\\n\\nUse this method inside\\n[expect(value).toEqual(expected)](https://playwright.dev/docs/api/class-genericassertions#generic-assertions-to-equal)\\nto perform pattern matching.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\nexpect([1, 2, 3]).toEqual(expect.arrayContaining([3, 1]));\\nexpect([1, 2, 3]).not.toEqual(expect.arrayContaining([1, 4]));\\n```"}]},"sources":[],"parameters":[{"id":23201,"name":"sample","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"unknown"}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"AsymmetricMatcher"},"name":"AsymmetricMatcher","package":"playwright"}}]},{"id":23202,"name":"closeTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23203,"name":"closeTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Compares floating point numbers for approximate equality. Use this method inside\\n[expect(value).toEqual(expected)](https://playwright.dev/docs/api/class-genericassertions#generic-assertions-to-equal)\\nto perform pattern matching. When just comparing two numbers, prefer\\n[expect(value).toBeCloseTo(expected[, numDigits])](https://playwright.dev/docs/api/class-genericassertions#generic-assertions-to-be-close-to).\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\nexpect({ prop: 0.1 + 0.2 }).not.toEqual({ prop: 0.3 });\\nexpect({ prop: 0.1 + 0.2 }).toEqual({ prop: expect.closeTo(0.3, 5) });\\n```"}]},"sources":[],"parameters":[{"id":23204,"name":"sample","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}},{"id":23205,"name":"precision","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"AsymmetricMatcher"},"name":"AsymmetricMatcher","package":"playwright"}}]},{"id":23206,"name":"objectContaining","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23207,"name":"objectContaining","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"code","text":"`expect.objectContaining()`"},{"kind":"text","text":" matches an object that contains and matches all of the properties in the expected\\nobject. Note that received object may be a superset of the expected object and contain some extra properties.\\n\\nUse this method inside\\n[expect(value).toEqual(expected)](https://playwright.dev/docs/api/class-genericassertions#generic-assertions-to-equal)\\nto perform pattern matching. Object properties can be matchers to further relax the expectation. See examples.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\n// Assert some of the properties.\\nexpect({ foo: 1, bar: 2 }).toEqual(expect.objectContaining({ foo: 1 }));\\n\\n// Matchers can be used on the properties as well.\\nexpect({ foo: 1, bar: 2 }).toEqual(expect.objectContaining({ bar: expect.any(Number) }));\\n\\n// Complex matching of sub-properties.\\nexpect({\\n  list: [1, 2, 3],\\n  obj: { prop: \'Hello world!\', another: \'some other value\' },\\n  extra: \'extra\',\\n}).toEqual(expect.objectContaining({\\n  list: expect.arrayContaining([2, 3]),\\n  obj: expect.objectContaining({ prop: expect.stringContaining(\'Hello\') }),\\n}));\\n```"}]},"sources":[],"parameters":[{"id":23208,"name":"sample","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"unknown"}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"AsymmetricMatcher"},"name":"AsymmetricMatcher","package":"playwright"}}]},{"id":23209,"name":"stringContaining","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23210,"name":"stringContaining","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"code","text":"`expect.stringContaining()`"},{"kind":"text","text":" matches a string that contains the expected substring. Use this method inside\\n[expect(value).toEqual(expected)](https://playwright.dev/docs/api/class-genericassertions#generic-assertions-to-equal)\\nto perform pattern matching.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\nexpect(\'Hello world!\').toEqual(expect.stringContaining(\'Hello\'));\\n```"}]},"sources":[],"parameters":[{"id":23211,"name":"sample","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"AsymmetricMatcher"},"name":"AsymmetricMatcher","package":"playwright"}}]},{"id":23212,"name":"stringMatching","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23213,"name":"stringMatching","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"code","text":"`expect.stringMatching()`"},{"kind":"text","text":" matches a received string that in turn matches the expected pattern. Use this method\\ninside\\n[expect(value).toEqual(expected)](https://playwright.dev/docs/api/class-genericassertions#generic-assertions-to-equal)\\nto perform pattern matching.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\nexpect(\'123ms\').toEqual(expect.stringMatching(/\\\\d+m?s/));\\n\\n// Inside another matcher.\\nexpect({\\n  status: \'passed\',\\n  time: \'123ms\',\\n}).toEqual({\\n  status: expect.stringMatching(/passed|failed/),\\n  time: expect.stringMatching(/\\\\d+m?s/),\\n});\\n```"}]},"sources":[],"parameters":[{"id":23214,"name":"sample","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"RegExp"},"name":"RegExp","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/RegExp"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"AsymmetricMatcher"},"name":"AsymmetricMatcher","package":"playwright"}}]},{"id":23149,"name":"soft","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reflection","declaration":{"id":23150,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23151,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"typeParameter":[{"id":23152,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"unknown"}}],"parameters":[{"id":23153,"name":"actual","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":23152,"name":"T","package":"playwright","refersToTypeParameter":true}},{"id":23154,"name":"messageOrOptions","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reflection","declaration":{"id":23155,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":23156,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[23156]}],"sources":[]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"MakeMatchers"},"typeArguments":[{"type":"intrinsic","name":"void"},{"type":"reference","target":23152,"name":"T","package":"playwright","refersToTypeParameter":true},{"type":"reflection","declaration":{"id":23157,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true}}}],"name":"MakeMatchers","package":"playwright"}}]}}},{"id":23158,"name":"poll","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reflection","declaration":{"id":23159,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23160,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"typeParameter":[{"id":23161,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"unknown"}}],"parameters":[{"id":23162,"name":"actual","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":23163,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23164,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":23161,"name":"T","package":"playwright","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":23161,"name":"T","package":"playwright","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}},{"id":23165,"name":"messageOrOptions","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reflection","declaration":{"id":23166,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":23167,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"string"}},{"id":23168,"name":"timeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"number"}},{"id":23169,"name":"intervals","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"groups":[{"title":"Properties","children":[23167,23168,23169]}],"sources":[]}}]}}],"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"GenericAssertions"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"GenericAssertions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"__global.PlaywrightTest.Matchers"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},{"type":"reference","target":23161,"name":"T","package":"playwright","refersToTypeParameter":true}],"name":"Matchers","package":"playwright","qualifiedName":"__global.PlaywrightTest.Matchers"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"SnapshotAssertions"},"name":"SnapshotAssertions","package":"playwright"},{"type":"reflection","declaration":{"id":23170,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":23171,"name":"not","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"If you know how to test something, "},{"kind":"code","text":"`.not`"},{"kind":"text","text":" lets you test its opposite."}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"BaseMatchers"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},{"type":"reference","target":23161,"name":"T","package":"playwright","refersToTypeParameter":true}],"name":"BaseMatchers","package":"playwright"}}],"groups":[{"title":"Properties","children":[23171]}],"sources":[]}}]}}]}}},{"id":23172,"name":"extend","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23173,"name":"extend","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"typeParameter":[{"id":23174,"name":"MoreMatchers","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reflection","declaration":{"id":23175,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23176,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":23177,"name":"this","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"ExpectMatcherState"},"name":"ExpectMatcherState","package":"playwright"}},{"id":23178,"name":"receiver","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}},{"id":23179,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"union","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"MatcherReturnType"},"name":"MatcherReturnType","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"MatcherReturnType"},"name":"MatcherReturnType","package":"playwright"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"}}],"parameters":[{"id":23180,"name":"matchers","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":23174,"name":"MoreMatchers","package":"playwright","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"Expect"},"typeArguments":[{"type":"intersection","types":[{"type":"reflection","declaration":{"id":23181,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true}}},{"type":"reference","target":23174,"name":"MoreMatchers","package":"playwright","refersToTypeParameter":true}]}],"name":"Expect","package":"playwright"}}]},{"id":23182,"name":"configure","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reflection","declaration":{"id":23183,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23184,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":23185,"name":"configuration","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":23186,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":23187,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"string"}},{"id":23188,"name":"timeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"number"}},{"id":23189,"name":"soft","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"boolean"}}],"groups":[{"title":"Properties","children":[23187,23188,23189]}],"sources":[]}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"Expect"},"typeArguments":[{"type":"reflection","declaration":{"id":23190,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true}}}],"name":"Expect","package":"playwright"}}]}}},{"id":23191,"name":"getState","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23192,"name":"getState","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"unknown"}}]},{"id":23193,"name":"not","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"AsymmetricMatchers"},"name":"AsymmetricMatchers","package":"playwright"},{"type":"union","types":[{"type":"literal","value":"any"},{"type":"literal","value":"anything"}]}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"}}],"groups":[{"title":"Properties","children":[23149,23158,23182,23193]},{"title":"Methods","children":[23194,23197,23199,23202,23206,23209,23212,23172,23191]}],"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":341,"character":13}],"signatures":[{"id":23142,"name":"expect","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":341,"character":13}],"typeParameter":[{"id":23143,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"unknown"}}],"parameters":[{"id":23144,"name":"actual","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":23143,"name":"T","package":"playwright","refersToTypeParameter":true}},{"id":23145,"name":"messageOrOptions","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reflection","declaration":{"id":23146,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":23147,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[23147]}],"sources":[]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"MakeMatchers"},"typeArguments":[{"type":"intrinsic","name":"void"},{"type":"reference","target":23143,"name":"T","package":"playwright","refersToTypeParameter":true},{"type":"reflection","declaration":{"id":23148,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true}}}],"name":"MakeMatchers","package":"playwright"}}],"permalink":"/api/playwright-test/function/expect","previousId":23127,"nextId":23215},{"id":23215,"name":"useFixtures","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":343,"character":13}],"signatures":[{"id":23216,"name":"useFixtures","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":343,"character":13}],"typeParameter":[{"id":23217,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"}},{"id":23218,"name":"W","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"},"default":{"type":"intrinsic","name":"object"}}],"parameters":[{"id":23219,"name":"customFixtures","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"Fixtures"},"typeArguments":[{"type":"reference","target":22627,"name":"T","package":"@serenity-js/playwright-test","refersToTypeParameter":true},{"type":"reference","target":22628,"name":"W","package":"@serenity-js/playwright-test","refersToTypeParameter":true},{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22592,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22580,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"}]},{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}],"name":"Fixtures","package":"playwright"}}],"type":{"type":"reference","target":22621,"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22592,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22580,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":22627,"name":"T","package":"@serenity-js/playwright-test","refersToTypeParameter":true}]},{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"},{"type":"reference","target":22628,"name":"W","package":"@serenity-js/playwright-test","refersToTypeParameter":true}]}],"name":"TestApi","package":"@serenity-js/playwright-test"}}],"permalink":"/api/playwright-test/function/useFixtures","previousId":23141,"nextId":22615},{"id":22615,"name":"useBase","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":483,"character":16}],"signatures":[{"id":22616,"name":"useBase","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates a Serenity/JS BDD-style test API around the given Playwright [base test](https://playwright.dev/docs/test-fixtures).\\n\\n## Using default configuration\\n\\nWhen your test scenario doesn\'t require [custom test fixtures](https://playwright.dev/docs/test-fixtures),\\nand you\'re happy with the default [base test](https://playwright.dev/docs/api/class-test#test-call) offered by Playwright,\\nyou can import test API functions such as ["},{"kind":"code","text":"`describe`"},{"kind":"text","text":"](/api/playwright-test/function/describe/) and ["},{"kind":"code","text":"`it`"},{"kind":"text","text":"](/api/playwright-test/function/describe/) directly from "},{"kind":"code","text":"`@serenity-js/playwright-test`"},{"kind":"text","text":".\\n\\n"},{"kind":"code","text":"```typescript\\nimport { describe, it, test } from \'@serenity-js/playwright-test\'\\nimport { Log } from \'@serenity-js/core\'\\n\\n// override default fixtures if needed\\ntest.use({\\n  defaultActorName: \'Alice\'\\n})\\n\\ndescribe(\'Serenity/JS default test API\', () => {\\n\\n  it(\'enables easy access to actors and standard Playwright fixtures\', async ({ actor, browserName }) => {\\n    await actor.attemptsTo(\\n      Log.the(browserName),\\n    )\\n  })\\n})\\n```"},{"kind":"text","text":"\\n\\nIn the above example, importing test API functions directly from "},{"kind":"code","text":"`@serenity-js/playwright-test`"},{"kind":"text","text":" is the equivalent of the following setup:\\n\\n"},{"kind":"code","text":"```typescript\\nimport { test as playwrightBaseTest } from \'@playwright/test\'\\nimport { useBase } from \'@serenity-js/playwright-test\'\\n\\nconst { describe, it, test, beforeEach, afterEach } = useBase(playwrightBaseTest)\\n```"},{"kind":"text","text":"\\n\\n## Using custom fixtures\\n\\nWhen your test scenario requires [custom test fixtures](https://playwright.dev/docs/test-fixtures),\\nbut you\'re still happy with the default [base test](https://playwright.dev/docs/api/class-test#test-call) offered by Playwright,\\nyou can create fixture-aware test API functions such as ["},{"kind":"code","text":"`describe`"},{"kind":"text","text":"](/api/playwright-test/function/describe/) and ["},{"kind":"code","text":"`it`"},{"kind":"text","text":"](/api/playwright-test/function/describe/)\\nby calling ["},{"kind":"code","text":"`useFixtures`"},{"kind":"text","text":"](/api/playwright-test/function/useFixtures/).\\n\\nFor example, you can create a test scenario using a static "},{"kind":"code","text":"`message`"},{"kind":"text","text":" fixture as follows:\\n\\n"},{"kind":"code","text":"```typescript\\nimport { useFixtures } from \'@serenity-js/playwright-test\'\\nimport { Log } from \'@serenity-js/core\'\\n\\nconst { describe, it } = useFixtures<{ message: string }>({\\n  message: \'Hello world!\'\\n})\\n\\ndescribe(\'Serenity/JS useFixtures\', () => {\\n\\n  it(\'enables injecting custom test fixtures into test scenarios\', async ({ actor, message }) => {\\n    await actor.attemptsTo(\\n      Log.the(message),\\n    )\\n  })\\n})\\n```"},{"kind":"text","text":"\\n\\nThe value of your test fixtures can be either static or dynamic and based on the value of other fixtures.\\n\\nTo create a dynamic test fixture use the [function syntax](https://playwright.dev/docs/test-fixtures):\\n\\n"},{"kind":"code","text":"```typescript\\nimport { Log } from \'@serenity-js/core\'\\nimport { useFixtures } from \'@serenity-js/playwright-test\'\\n\\nconst { describe, it } = useFixtures<{ message: string }>({\\n  message: async ({ actor }, use) => {\\n    await use(`Hello, ${ actor.name }`);\\n  }\\n})\\n\\ndescribe(\'Serenity/JS useFixtures\', () => {\\n\\n  it(\'enables injecting custom test fixtures into test scenarios\', async ({ actor, message }) => {\\n    await actor.attemptsTo(\\n      Log.the(message),\\n    )\\n  })\\n})\\n```"},{"kind":"text","text":"\\n\\nIn the above example, creating test API functions via "},{"kind":"code","text":"`useFixtures`"},{"kind":"text","text":" is the equivalent of the following setup:\\n\\n"},{"kind":"code","text":"```typescript\\nimport { test as playwrightBaseTest } from \'@playwright/test\'\\nimport { useBase } from \'@serenity-js/playwright-test\'\\n\\nconst { describe, it, test, beforeEach, afterEach } = useBase(playwrightBaseTest)\\n  .useFixtures<{ message: string }>({\\n    message: async ({ actor }, use) => {\\n      await use(`Hello, ${ actor.name }`);\\n    }\\n  })\\n```"},{"kind":"text","text":"\\n\\n## Using custom base test\\n\\nIn cases where you need to use a non-default base test, for example when doing [UI component testing](https://playwright.dev/docs/test-components),\\nyou can create Serenity/JS test API functions around your preferred base test.\\n\\n"},{"kind":"code","text":"```tsx\\nimport { test as componentTest } from \'@playwright/experimental-ct-react\'\\nimport { Ensure, contain } from \'@serenity-js/assertions\'\\nimport { useBase } from \'@serenity-js/playwright-test\'\\nimport { Enter, PageElement, CssClasses } from \'@serenity-js/web\'\\n\\nimport EmailInput from \'./EmailInput\';\\n\\nconst { it, describe } = useBase(componentTest).useFixtures<{ emailAddress: string }>({\\n  emailAddress: ({ actor }, use) => {\\n    use(`${ actor.name }@example.org`)\\n  }\\n})\\n\\ndescribe(\'EmailInput\', () => {\\n\\n  it(\'allows valid email addresses\', async ({ actor, mount, emailAddress }) => {\\n    const nativeComponent = await mount(<EmailInput/>);\\n\\n    const component = PageElement.from(nativeComponent);\\n\\n    await actor.attemptsTo(\\n      Enter.theValue(emailAddress).into(component),\\n      Ensure.that(CssClasses.of(component), contain(\'valid\')),\\n    )\\n  })\\n})\\n```"}]},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":483,"character":16}],"typeParameter":[{"id":22617,"name":"TestArgs","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"}},{"id":22618,"name":"WorkerArgs","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"},"default":{"type":"intrinsic","name":"object"}}],"parameters":[{"id":22619,"name":"baseTest","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestType"},"typeArguments":[{"type":"reference","target":22617,"name":"TestArgs","package":"@serenity-js/playwright-test","refersToTypeParameter":true},{"type":"reference","target":22618,"name":"WorkerArgs","package":"@serenity-js/playwright-test","refersToTypeParameter":true}],"name":"TestType","package":"playwright"}}],"type":{"type":"reference","target":22621,"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22592,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22580,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":22617,"name":"TestArgs","package":"@serenity-js/playwright-test","refersToTypeParameter":true}]},{"type":"reference","target":22618,"name":"WorkerArgs","package":"@serenity-js/playwright-test","refersToTypeParameter":true}],"name":"TestApi","package":"@serenity-js/playwright-test"}}],"permalink":"/api/playwright-test/function/useBase","previousId":23215,"nextId":22580},{"id":22555,"name":"SerenityReporterForPlaywrightTestConfig","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configuration object accepted by "},{"kind":"code","text":"`@serenity-js/playwright-test`"},{"kind":"text","text":" reporter.\\n\\nSee ["},{"kind":"code","text":"`SerenityOptions`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityOptions/) for usage examples."}]},"children":[{"id":22556,"name":"crew","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A list of [stage crew member builders](/api/core/interface/StageCrewMemberBuilder/) or [stage crew members](/api/core/interface/StageCrewMember/)\\nto be instantiated in Playwright Test reporter process and notified of [Serenity/JS domain events](/api/core-events/class/DomainEvent/) that occur during the scenario execution.\\nNote that the "},{"kind":"code","text":"`crew`"},{"kind":"text","text":" can also be configured using [class descriptions](/api/core/#ClassDescription).\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`SerenityOptions`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityOptions/)\\n- ["},{"kind":"code","text":"`SerenityConfig.crew`"},{"kind":"text","text":"](/api/core/class/SerenityConfig/#crew)"}]},"sources":[{"fileName":"packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts","line":58,"character":4}],"type":{"type":"array","elementType":{"type":"union","types":[{"type":"reference","target":2181,"name":"StageCrewMember","package":"@serenity-js/core"},{"type":"reference","target":2188,"typeArguments":[{"type":"reference","target":2021,"name":"ListensToDomainEvents","package":"@serenity-js/core"}],"name":"StageCrewMemberBuilder","package":"@serenity-js/core"},{"type":"reference","target":66,"name":"ClassDescription","package":"@serenity-js/core"}]}}},{"id":22557,"name":"outputStream","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"An output stream to be injected into [stage crew member builders](/api/core/interface/StageCrewMemberBuilder/)\\n\\nDefaults to ["},{"kind":"code","text":"`process.stdout`"},{"kind":"text","text":"](https://nodejs.org/api/process.html#process_process_stdout).\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`SerenityConfig.outputStream`"},{"kind":"text","text":"](/api/core/class/SerenityConfig/#outputStream)"}]},"sources":[{"fileName":"packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts","line":68,"character":4}],"type":{"type":"reference","target":2221,"name":"OutputStream","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[22556,22557]}],"sources":[{"fileName":"packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts","line":48,"character":17}],"permalink":"/api/playwright-test/interface/SerenityReporterForPlaywrightTestConfig","previousId":22599,"nextId":22558},{"id":23220,"name":"default","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Serenity/JS reporter that receives notifications from Playwright Test and emits them as\\nSerenity/JS [Serenity/JS domain events](/api/core-events/class/DomainEvent/) which can be used by\\nSerenity/JS [stage crew members](/api/core/interface/StageCrewMember/)."}]},"children":[{"id":23221,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts","line":89,"character":4}],"signatures":[{"id":23222,"name":"new default","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts","line":89,"character":4}],"parameters":[{"id":23223,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":22555,"name":"SerenityReporterForPlaywrightTestConfig","package":"@serenity-js/playwright-test"}},{"id":23224,"name":"serenity","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instance of ["},{"kind":"code","text":"`Serenity`"},{"kind":"text","text":"](/api/core/class/Serenity/), specific to the Node process running this Serenity reporter.\\n Note that Playwright runs test workers and reporters in separate processes."}]},"type":{"type":"reference","target":1898,"name":"Serenity","package":"@serenity-js/core"},"defaultValue":"reporterSerenityInstance"},{"id":23225,"name":"requirementsHierarchy","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Root directory of the requirements hierarchy, used to determine capabilities and themes."}]},"type":{"type":"reference","name":"RequirementsHierarchy","package":"@serenity-js/core"},"defaultValue":"..."}],"type":{"type":"reference","target":23220,"name":"SerenityReporterForPlaywrightTest","package":"@serenity-js/playwright-test"}}]},{"id":23231,"name":"onBegin","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts","line":99,"character":4}],"signatures":[{"id":23232,"name":"onBegin","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts","line":99,"character":4}],"parameters":[{"id":23233,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"FullConfig"},"typeArguments":[{"type":"reflection","declaration":{"id":23234,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true}}},{"type":"reflection","declaration":{"id":23235,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true}}}],"name":"FullConfig","package":"playwright"}},{"id":23236,"name":"suite","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/testReporter.d.ts","qualifiedName":"Suite"},"name":"Suite","package":"playwright"}}],"type":{"type":"intrinsic","name":"void"},"implementationOf":{"type":"reference","target":-1,"name":"Reporter.onBegin"}}],"implementationOf":{"type":"reference","target":-1,"name":"Reporter.onBegin"}},{"id":23237,"name":"onTestBegin","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts","line":107,"character":4}],"signatures":[{"id":23238,"name":"onTestBegin","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts","line":107,"character":4}],"parameters":[{"id":23239,"name":"test","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/testReporter.d.ts","qualifiedName":"TestCase"},"name":"TestCase","package":"playwright"}}],"type":{"type":"intrinsic","name":"void"},"implementationOf":{"type":"reference","target":-1,"name":"Reporter.onTestBegin"}}],"implementationOf":{"type":"reference","target":-1,"name":"Reporter.onTestBegin"}},{"id":23240,"name":"onTestEnd","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts","line":145,"character":4}],"signatures":[{"id":23241,"name":"onTestEnd","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts","line":145,"character":4}],"parameters":[{"id":23242,"name":"test","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/testReporter.d.ts","qualifiedName":"TestCase"},"name":"TestCase","package":"playwright"}},{"id":23243,"name":"result","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/testReporter.d.ts","qualifiedName":"TestResult"},"name":"TestResult","package":"playwright"}}],"type":{"type":"intrinsic","name":"void"},"implementationOf":{"type":"reference","target":-1,"name":"Reporter.onTestEnd"}}],"implementationOf":{"type":"reference","target":-1,"name":"Reporter.onTestEnd"}},{"id":23244,"name":"onError","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts","line":186,"character":4}],"signatures":[{"id":23245,"name":"onError","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts","line":186,"character":4}],"parameters":[{"id":23246,"name":"error","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/testReporter.d.ts","qualifiedName":"TestError"},"name":"TestError","package":"playwright"}}],"type":{"type":"intrinsic","name":"void"},"implementationOf":{"type":"reference","target":-1,"name":"Reporter.onError"}}],"implementationOf":{"type":"reference","target":-1,"name":"Reporter.onError"}},{"id":23261,"name":"onEnd","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts","line":256,"character":10}],"signatures":[{"id":23262,"name":"onEnd","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts","line":256,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"implementationOf":{"type":"reference","target":-1,"name":"Reporter.onEnd"}}],"implementationOf":{"type":"reference","target":-1,"name":"Reporter.onEnd"}},{"id":23272,"name":"printsToStdio","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts","line":324,"character":4}],"signatures":[{"id":23273,"name":"printsToStdio","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts","line":324,"character":4}],"type":{"type":"intrinsic","name":"boolean"},"implementationOf":{"type":"reference","target":-1,"name":"Reporter.printsToStdio"}}],"implementationOf":{"type":"reference","target":-1,"name":"Reporter.printsToStdio"}}],"groups":[{"title":"Constructors","children":[23221]},{"title":"Methods","children":[23231,23237,23240,23244,23261,23272]}],"sources":[{"fileName":"packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts","line":76,"character":13}],"implementedTypes":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/testReporter.d.ts","qualifiedName":"Reporter"},"name":"Reporter","package":"playwright"}],"permalink":"/api/playwright-test/class/default","nextId":22634}],"groups":[{"title":"Classes","children":[23220]},{"title":"Functions","children":[22634,22843,23052,23085,23099,23113,23127,23141,23215,22615]},{"title":"Interfaces","children":[22580,22592,22599,22555]},{"title":"Type Aliases","children":[22558,22577,22621]},{"title":"Variables","children":[22620]}],"sources":[{"fileName":"packages/playwright-test/src/index.ts","line":1,"character":0}],"permalink":"/api/playwright-test"},"urlSlug":"playwright-test"}],"packageName":"@serenity-js/playwright-test","packageVersion":"3.26.0"},{"entryPoints":[{"index":false,"label":"Test runner adapter","reflection":{"id":8,"name":"@serenity-js/protractor/adapter","variant":"declaration","kind":2,"flags":{"isExternal":true},"children":[{"id":6188,"name":"Config","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Protractor configuration object with an additional\\nsection to configure the Serenity/JS framework.\\n\\n## Learn more\\n- [Protractor config](https://github.com/angular/protractor/blob/master/lib/config.ts)\\n- ["},{"kind":"code","text":"`SerenityConfig`"},{"kind":"text","text":"](/api/core/class/SerenityConfig/)\\n- ["},{"kind":"code","text":"`configure`"},{"kind":"text","text":"](/api/core/function/configure/)"}]},"children":[{"id":6189,"name":"serenity","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"See ["},{"kind":"code","text":"`SerenityConfig`"},{"kind":"text","text":"](/api/core/class/SerenityConfig/)"}]},"sources":[{"fileName":"packages/protractor/src/adapter/Config.ts","line":19,"character":4}],"type":{"type":"intersection","types":[{"type":"reference","target":67,"name":"SerenityConfig","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":6190,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":6191,"name":"runner","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/protractor/src/adapter/Config.ts","line":19,"character":33}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[6191]}],"sources":[{"fileName":"packages/protractor/src/adapter/Config.ts","line":19,"character":31}]}}]}},{"id":6192,"name":"seleniumServerJar","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The location of the standalone Selenium Server jar file, relative\\nto the location of webdriver-manager. If no other method of starting\\nSelenium Server is found, this will default to\\nnode_modules/protractor/node_modules/webdriver-manager/selenium/<jar file>"}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.seleniumServerJar"}},{"id":6193,"name":"seleniumServerStartTimeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The timeout milliseconds waiting for a local standalone Selenium Server to start.\\n\\ndefault: 30000ms"}]},"sources":[],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.seleniumServerStartTimeout"}},{"id":6194,"name":"localSeleniumStandaloneOpts","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Can be an object which will be passed to the SeleniumServer class as args.\\nSee a full list of options at\\nhttps://github.com/SeleniumHQ/selenium/blob/master/javascript/node/selenium-webdriver/remote/index.js\\nIf you specify "},{"kind":"code","text":"`args`"},{"kind":"text","text":" or "},{"kind":"code","text":"`port`"},{"kind":"text","text":" in this object, it will overwrite the\\nvalues set via the deprecated config values "},{"kind":"code","text":"`seleniumPort`"},{"kind":"text","text":" and\\n"},{"kind":"code","text":"`seleniumArgs`"},{"kind":"text","text":"."}]},"sources":[],"type":{"type":"reflection","declaration":{"id":6195,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":6196,"name":"port","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The port to start the Selenium Server on, or null if the server should\\nfind its own unused port."}]},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":6197,"name":"args","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Additional command line options to pass to selenium. For example,\\nif you need to change the browser timeout, use\\nseleniumArgs: [\'-browserTimeout=60\']"}]},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":6198,"name":"jvmArgs","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Additional command line jvm options to pass to selenium. For example,\\nif you need to change the browser driver, use\\njvmArgs: [\'-Dwebdriver.ie.driver=IEDriverServer_Win32_2.53.1.exe\']"}]},"sources":[],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"groups":[{"title":"Properties","children":[6196,6197,6198]}],"sources":[]}},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.localSeleniumStandaloneOpts"}},{"id":6199,"name":"chromeDriver","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"ChromeDriver location is used to help find the chromedriver binary. This will be passed to the\\nSelenium jar as the system property webdriver.chrome.driver. If the value is not set when\\nlaunching locally, it will use the default values downloaded from webdriver-manager.\\n\\nexample:\\nchromeDriver: \'./node_modules/webdriver-manager/selenium/chromedriver_2.20\'"}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.chromeDriver"}},{"id":6200,"name":"geckoDriver","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"geckoDriver location is used to help find the gecko binary. This will be passed to the Selenium\\njar as the system property webdriver.gecko.driver. If the value is not set when launching\\nlocally, it will use the default values downloaded from webdriver-manager."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.geckoDriver"}},{"id":6201,"name":"seleniumAddress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The address of a running Selenium Server. If specified, Protractor will\\nconnect to an already running instance of Selenium. This usually looks like\\nseleniumAddress: \'http://localhost:4444/wd/hub\'"}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.seleniumAddress"}},{"id":6202,"name":"seleniumSessionId","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The selenium session id allows Protractor to attach to an existing selenium\\nbrowser session. The selenium session is maintained after the test has\\ncompleted. Ignored if seleniumAddress is null."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.seleniumSessionId"}},{"id":6203,"name":"sauceProxy","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The address of a proxy server to use for communicating to Sauce Labs REST APIs via the\\nsaucelabs node module. For example, the Sauce Labs Proxy can be setup with: sauceProxy:\\n\'http://localhost:3128\'"}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.sauceProxy"}},{"id":6204,"name":"webDriverProxy","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The proxy address that WebDriver (e.g. Selenium commands) traffic will go through\\nwhich is tied to the browser session."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.webDriverProxy"}},{"id":6205,"name":"useBlockingProxy","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If specified, connect to webdriver through a proxy that manages client-side\\nsynchronization. Blocking Proxy is an experimental feature and may change\\nwithout notice."}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.useBlockingProxy"}},{"id":6206,"name":"blockingProxyUrl","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If specified, Protractor will connect to the Blocking Proxy at the given\\nurl instead of starting it\'s own."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.blockingProxyUrl"}},{"id":6207,"name":"sauceUser","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If the sauceUser and sauceKey are specified, seleniumServerJar will be\\nignored. The tests will be run remotely using Sauce Labs."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.sauceUser"}},{"id":6208,"name":"sauceKey","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If the sauceUser and sauceKey are specified, seleniumServerJar will be\\nignored. The tests will be run remotely using Sauce Labs."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.sauceKey"}},{"id":6209,"name":"sauceRegion","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If you run your tests on SauceLabs you can specify the region you want to run your tests\\nin via the "},{"kind":"code","text":"`sauceRegion`"},{"kind":"text","text":" property. Available short handles for regions are:\\nus: us-west-1 (default)\\neu: eu-central-1"}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.sauceRegion"}},{"id":6210,"name":"sauceAgent","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Use sauceAgent if you need custom HTTP agent to connect to saucelabs.com APIs.\\nThis is needed if your computer is behind a corporate proxy.\\n\\nTo match sauce agent implementation, use\\n[HttpProxyAgent](https://github.com/TooTallNate/node-http-proxy-agent)\\nto generate the agent or use sauceProxy as an alternative. If a\\nsauceProxy is provided, the sauceAgent will be overridden."}]},"sources":[],"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.sauceAgent"}},{"id":6211,"name":"sauceBuild","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Use sauceBuild if you want to group test capabilites by a build ID"}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.sauceBuild"}},{"id":6212,"name":"sauceSeleniumUseHttp","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If true, Protractor will use http:// protocol instead of https:// to\\nconnect to Sauce Labs defined by sauceSeleniumAddress.\\n\\ndefault: false"}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.sauceSeleniumUseHttp"}},{"id":6213,"name":"sauceSeleniumAddress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Use sauceSeleniumAddress if you need to customize the URL Protractor\\nuses to connect to sauce labs (for example, if you are tunneling selenium\\ntraffic through a sauce connect tunnel). Default is\\nondemand.saucelabs.com:443/wd/hub"}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.sauceSeleniumAddress"}},{"id":6214,"name":"testobjectUser","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If testobjectUser and testobjectKey are specified, kobitonUser, kobitonKey, browserstackUser,\\nbrowserStackKey and seleniumServerJar will be ignored. The tests will be run remotely using\\nTestObject."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.testobjectUser"}},{"id":6215,"name":"testobjectKey","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If testobjectUser and testobjectKey are specified, kobitonUser, kobitonKey, browserStackUser,\\nbrowserStackKey and seleniumServerJar will be ignored. The tests will be run remotely using\\nTestObject."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.testobjectKey"}},{"id":6216,"name":"kobitonUser","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If kobitonUser and kobitonKey are specified, testobjectUser, testojbectKey, browserstackUser,\\nbrowserStackKey and seleniumServerJar will be ignored. The tests will be run remotely using\\nTestObject."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.kobitonUser"}},{"id":6217,"name":"kobitonKey","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If kobitonUser and kobitonKey are specified, testobjectUser, testojbectKey, browserStackUser,\\nbrowserStackKey and seleniumServerJar will be ignored. The tests will be run remotely using\\nTestObject."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.kobitonKey"}},{"id":6218,"name":"browserstackUser","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If browserstackUser and browserstackKey are specified, seleniumServerJar\\nwill be ignored. The tests will be run remotely using BrowserStack."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.browserstackUser"}},{"id":6219,"name":"browserstackKey","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If browserstackUser and browserstackKey are specified, seleniumServerJar\\nwill be ignored. The tests will be run remotely using BrowserStack."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.browserstackKey"}},{"id":6220,"name":"browserstackProxy","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Proxy server to be used for connecting to BrowserStack APIs\\ne.g. \\"http://proxy.example.com:1234\\".\\nThis should be used when you are behind a proxy server."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.browserstackProxy"}},{"id":6221,"name":"directConnect","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If true, Protractor will connect directly to the browser Drivers\\nat the locations specified by chromeDriver and firefoxPath. Only Chrome\\nand Firefox are supported for direct connect.\\n\\ndefault: false"}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.directConnect"}},{"id":6222,"name":"firefoxPath","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Path to the firefox application binary. If null, will attempt to find\\nfirefox in the default locations."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.firefoxPath"}},{"id":6223,"name":"seleniumWebDriver","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/@types/selenium-webdriver/index.d.ts","qualifiedName":"WebDriver"},"name":"WebDriver","package":"@types/selenium-webdriver"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.seleniumWebDriver"}},{"id":6224,"name":"noGlobals","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Use default globals: \'protractor\', \'browser\', \'$\', \'$$\', \'element\', \'by\'.\\nThese also exist as properties of the protractor namespace:\\n\'protractor.browser\', \'protractor.$\', \'protractor.$$\',\\n\'protractor.element\', \'protractor.by\', and \'protractor.By\'.\\n\\nWhen no globals is set to true, the only available global variable will be\\n\'protractor\'."}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.noGlobals"}},{"id":6225,"name":"specs","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Required. Spec patterns are relative to the location of this config.\\n\\nExample:\\nspecs: [\\n  \'spec/*_spec.js\'\\n]"}]},"sources":[],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.specs"}},{"id":6226,"name":"exclude","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Patterns to exclude specs."}]},"sources":[],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"array","elementType":{"type":"intrinsic","name":"string"}}]},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.exclude"}},{"id":6227,"name":"suites","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Alternatively, suites may be used. When run without a command line\\nparameter, all suites will run. If run with --suite=smoke or\\n--suite=smoke,full only the patterns matched by the specified suites will\\nrun.\\n\\nExample:\\nsuites: {\\n  smoke: \'spec/smoketests/*.js\',\\n  full: \'spec/*.js\'\\n}"}]},"sources":[],"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.suites"}},{"id":6228,"name":"suite","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If you would like protractor to use a specific suite by default instead of\\nall suites, you can put that in the config file as well."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.suite"}},{"id":6229,"name":"capabilities","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Protractor can launch your tests on one or more browsers. If you are\\ntesting on a single browser, use the capabilities option. If you are\\ntesting on multiple browsers, use the multiCapabilities array.\\n\\nFor a list of available capabilities, see\\nhttps://github.com/SeleniumHQ/selenium/wiki/DesiredCapabilities\\nIn addition, you may specify count, shardTestFiles, and maxInstances.\\n\\nExample:\\ncapabilities: {\\n  browserName: \'chrome\',\\n  name: \'Unnamed Job\',\\n  logName: \'Chrome - English\',\\n  count: 1,\\n  shardTestFiles: false,\\n  maxInstances: 1,\\n  specs: [\'spec/chromeOnlySpec.js\'],\\n  exclude: [\'spec/doNotRunInChromeSpec.js\'],\\n  seleniumAddress: \'http://localhost:4444/wd/hub\'\\n}"}]},"sources":[],"type":{"type":"reflection","declaration":{"id":6230,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":6231,"name":"browserName","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"string"}},{"id":6232,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Name of the process executing this capability.  Not used directly by\\nprotractor or the browser, but instead pass directly to third parties\\nlike BrowserStack and SauceLabs as the name of the job running this\\ntest"}]},"sources":[],"type":{"type":"intrinsic","name":"string"}},{"id":6233,"name":"logName","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"User defined name for the capability that will display in the results\\nlog. Defaults to the browser name"}]},"sources":[],"type":{"type":"intrinsic","name":"string"}},{"id":6234,"name":"count","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Number of times to run this set of capabilities (in parallel, unless\\nlimited by maxSessions). Default is 1."}]},"sources":[],"type":{"type":"intrinsic","name":"number"}},{"id":6235,"name":"shardTestFiles","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If this is set to be true, specs will be sharded by file (i.e. all\\nfiles to be run by this set of capabilities will run in parallel).\\nDefault is false."}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"}},{"id":6236,"name":"maxInstances","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Maximum number of browser instances that can run in parallel for this\\nset of capabilities. This is only needed if shardTestFiles is true.\\nDefault is 1."}]},"sources":[],"type":{"type":"intrinsic","name":"number"}},{"id":6237,"name":"specs","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Additional spec files to be run on this capability only."}]},"sources":[],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":6238,"name":"exclude","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Spec files to be excluded on this capability only."}]},"sources":[],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":6239,"name":"seleniumAddress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional: override global seleniumAddress on this capability only."}]},"sources":[],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[6231,6232,6233,6234,6235,6236,6237,6238,6239]}],"sources":[],"indexSignature":{"id":6240,"name":"__index","variant":"signature","kind":8192,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":6241,"name":"key","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"any"}}}},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.capabilities"}},{"id":6242,"name":"multiCapabilities","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If you would like to run more than one instance of WebDriver on the same\\ntests, use multiCapabilities, which takes an array of capabilities.\\nIf this is specified, capabilities will be ignored."}]},"sources":[],"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.multiCapabilities"}},{"id":6243,"name":"getMultiCapabilities","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If you need to resolve multiCapabilities asynchronously (i.e. wait for\\nserver/proxy, set firefox profile, etc), you can specify a function here\\nwhich will return either "},{"kind":"code","text":"`multiCapabilities`"},{"kind":"text","text":" or a promise to\\n"},{"kind":"code","text":"`multiCapabilities`"},{"kind":"text","text":".\\n\\nIf this returns a promise, it is resolved immediately after\\n"},{"kind":"code","text":"`beforeLaunch`"},{"kind":"text","text":" is run, and before any driver is set up. If this is\\nspecified, both capabilities and multiCapabilities will be ignored."}]},"sources":[],"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.getMultiCapabilities"}},{"id":6244,"name":"maxSessions","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Maximum number of total browser sessions to run. Tests are queued in\\nsequence if number of browser sessions is limited by this parameter.\\nUse a number less than 1 to denote unlimited. Default is unlimited."}]},"sources":[],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.maxSessions"}},{"id":6245,"name":"verboseMultiSessions","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether or not to buffer output when running tests on multiple browsers\\nin parallel. By default, when running multiple browser sessions, the\\nresults are buffered and not logged until the test run finishes. If true,\\nwhen running multiple sessions in parallel results will be logged when\\neach test finishes."}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.verboseMultiSessions"}},{"id":6246,"name":"baseUrl","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A base URL for your application under test. Calls to protractor.get()\\nwith relative paths will be resolved against this URL (via url.resolve)"}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.baseUrl"}},{"id":6247,"name":"rootElement","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A CSS Selector for a DOM element within your Angular application.\\nProtractor will attempt to automatically find your application, but it is\\nnecessary to set rootElement in certain cases.\\n\\nIn Angular 1, Protractor will use the element your app bootstrapped to by\\ndefault.  If that doesn\'t work, it will then search for hooks in "},{"kind":"code","text":"`body`"},{"kind":"text","text":" or\\n"},{"kind":"code","text":"`ng-app`"},{"kind":"text","text":" elements (details here: https://git.io/v1b2r).\\n\\nIn later versions of Angular, Protractor will try to hook into all angular\\napps on the page. Use rootElement to limit the scope of which apps\\nProtractor waits for and searches within."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.rootElement"}},{"id":6248,"name":"allScriptsTimeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The timeout in milliseconds for each script run on the browser. This\\nshould be longer than the maximum time your application needs to\\nstabilize between tasks."}]},"sources":[],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.allScriptsTimeout"}},{"id":6249,"name":"getPageTimeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"How long to wait for a page to load."}]},"sources":[],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.getPageTimeout"}},{"id":6250,"name":"beforeLaunch","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A callback function called once configs are read but before any\\nenvironment setup. This will only run once, and before onPrepare.\\n\\nYou can specify a file containing code to run by setting beforeLaunch to\\nthe filename string.\\n\\nAt this point, global variable \'protractor\' object will NOT be set up,\\nand globals from the test framework will NOT be available. The main\\npurpose of this function should be to bring up test dependencies."}]},"sources":[],"type":{"type":"reflection","declaration":{"id":6251,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":6252,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.beforeLaunch"}},{"id":6253,"name":"onPrepare","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A callback function called once protractor is ready and available, and\\nbefore the specs are executed. If multiple capabilities are being run,\\nthis will run once per capability.\\n\\nYou can specify a file containing code to run by setting onPrepare to\\nthe filename string. onPrepare can optionally return a promise, which\\nProtractor will wait for before continuing execution. This can be used if\\nthe preparation involves any asynchronous calls, e.g. interacting with\\nthe browser. Otherwise Protractor cannot guarantee order of execution\\nand may start the tests before preparation finishes.\\n\\nAt this point, global variable \'protractor\' object will be set up, and\\nglobals from the test framework will be available. For example, if you\\nare using Jasmine, you can add a reporter with:\\n\\n   jasmine.getEnv().addReporter(new jasmine.JUnitXmlReporter(\\n     \'outputdir/\', true, true));\\n\\nIf you need access back to the current configuration object,\\nuse a pattern like the following:\\n\\n   return browser.getProcessedConfig().then(function(config) {\\n     // config.capabilities is the CURRENT capability being run, if\\n     // you are using multiCapabilities.\\n     console.log(\'Executing capability\', config.capabilities);\\n   });"}]},"sources":[],"type":{"type":"reflection","declaration":{"id":6254,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":6255,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.onPrepare"}},{"id":6256,"name":"onComplete","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A callback function called once tests are finished. onComplete can\\noptionally return a promise, which Protractor will wait for before\\nshutting down webdriver.\\n\\nAt this point, tests will be done but global objects will still be\\navailable."}]},"sources":[],"type":{"type":"reflection","declaration":{"id":6257,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":6258,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.onComplete"}},{"id":6259,"name":"onCleanUp","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A callback function called once the tests have finished running and\\nthe WebDriver instance has been shut down. It is passed the exit code\\n(0 if the tests passed). This is called once per capability."}]},"sources":[],"type":{"type":"reflection","declaration":{"id":6260,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":6261,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":6262,"name":"exitCode","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"void"}}]}},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.onCleanUp"}},{"id":6263,"name":"afterLaunch","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A callback function called once all tests have finished running and\\nthe WebDriver instance has been shut down. It is passed the exit code\\n(0 if the tests passed). afterLaunch must return a promise if you want\\nasynchronous code to be executed before the program exits.\\nThis is called only once before the program exits (after onCleanUp)."}]},"sources":[],"type":{"type":"reflection","declaration":{"id":6264,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":6265,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":6266,"name":"exitCode","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"void"}}]}},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.afterLaunch"}},{"id":6267,"name":"params","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The params object will be passed directly to the Protractor instance,\\nand can be accessed from your test as browser.params. It is an arbitrary\\nobject and can contain anything you may need in your test.\\nThis can be changed via the command line as:\\n  --params.login.user \\"Joe\\"\\n\\nExample:\\nparams: {\\n  login: {\\n    user: \'Jane\',\\n    password: \'1234\'\\n  }\\n}"}]},"sources":[],"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.params"}},{"id":6268,"name":"resultJsonOutputFile","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If set, protractor will save the test output in json format at this path.\\nThe path is relative to the location of this config."}]},"sources":[],"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.resultJsonOutputFile"}},{"id":6269,"name":"restartBrowserBetweenTests","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If true, protractor will restart the browser between each test. Default\\nvalue is false.\\n\\nCAUTION: This will cause your tests to slow down drastically."}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.restartBrowserBetweenTests"}},{"id":6270,"name":"untrackOutstandingTimeouts","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Protractor will track outstanding $timeouts by default, and report them\\nin the error message if Protractor fails to synchronize with Angular in\\ntime. In order to do this Protractor needs to decorate $timeout.\\n\\nCAUTION: If your app decorates $timeout, you must turn on this flag. This\\nis false by default."}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.untrackOutstandingTimeouts"}},{"id":6271,"name":"ignoreUncaughtExceptions","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If set, Protractor will ignore uncaught exceptions instead of exiting\\nwithout an error code. The exceptions will still be logged as warnings."}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.ignoreUncaughtExceptions"}},{"id":6272,"name":"webDriverLogDir","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If set, will create a log file in the given directory with a readable log of\\nthe webdriver commands it executes.\\n\\nThis is an experimental feature. Enabling this will also turn on Blocking Proxy\\nsynchronization, which is also experimental."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.webDriverLogDir"}},{"id":6273,"name":"highlightDelay","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If set, Protractor will pause the specified amount of time (in milliseconds)\\nbefore interactions with browser elements (ie, sending keys, clicking). It will\\nalso highlight the element it\'s about to interact with.\\n\\nThis is an experimental feature. Enabling this will also turn on Blocking Proxy\\nsynchronization, which is also experimental."}]},"sources":[],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.highlightDelay"}},{"id":6274,"name":"logLevel","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Protractor log level\\n\\ndefault: INFO"}]},"sources":[],"type":{"type":"union","types":[{"type":"literal","value":"ERROR"},{"type":"literal","value":"WARN"},{"type":"literal","value":"INFO"},{"type":"literal","value":"DEBUG"}]},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.logLevel"}},{"id":6275,"name":"framework","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Test framework to use. This may be one of: jasmine, mocha or custom.\\nDefault value is \'jasmine\'\\n\\nWhen the framework is set to \\"custom\\" you\'ll need to additionally\\nset frameworkPath with the path relative to the config file or absolute:\\n\\n  framework: \'custom\',\\n  frameworkPath: \'./frameworks/my_custom_jasmine.js\',\\n\\nSee github.com/angular/protractor/blob/master/lib/frameworks/README.md\\nto comply with the interface details of your custom implementation.\\n\\nJasmine is fully supported as test and assertion frameworks.\\nMocha has limited support. You will need to include your\\nown assertion framework (such as Chai) if working with Mocha."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.framework"}},{"id":6276,"name":"jasmineNodeOpts","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Options to be passed to jasmine.\\n\\nSee https://github.com/jasmine/jasmine-npm/blob/master/lib/jasmine.js\\nfor the exact options available."}]},"sources":[],"type":{"type":"reflection","declaration":{"id":6277,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":6278,"name":"showColors","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If true, print colors to the terminal."}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"}},{"id":6279,"name":"defaultTimeoutInterval","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Default time to wait in ms before a test fails."}]},"sources":[],"type":{"type":"intrinsic","name":"number"}},{"id":6280,"name":"print","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Function called to print jasmine results."}]},"sources":[],"type":{"type":"reflection","declaration":{"id":6281,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":6282,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}},{"id":6283,"name":"grep","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If set, only execute specs whose names match the pattern, which is\\ninternally compiled to a RegExp."}]},"sources":[],"type":{"type":"intrinsic","name":"string"}},{"id":6284,"name":"invertGrep","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Inverts \'grep\' matches"}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"}},{"id":6285,"name":"random","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If true, run specs in semi-random order"}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"}},{"id":6286,"name":"seed","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Set the randomization seed if randomization is turned on"}]},"sources":[],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[6278,6279,6280,6283,6284,6285,6286]}],"sources":[],"indexSignature":{"id":6287,"name":"__index","variant":"signature","kind":8192,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":6288,"name":"key","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"any"}}}},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.jasmineNodeOpts"}},{"id":6289,"name":"mochaOpts","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Options to be passed to Mocha.\\n\\nSee the full list at http://mochajs.org/"}]},"sources":[],"type":{"type":"reflection","declaration":{"id":6290,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":6291,"name":"ui","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"string"}},{"id":6292,"name":"reporter","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[6291,6292]}],"sources":[],"indexSignature":{"id":6293,"name":"__index","variant":"signature","kind":8192,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":6294,"name":"key","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"any"}}}},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.mochaOpts"}},{"id":6295,"name":"plugins","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"See docs/plugins.md"}]},"sources":[],"type":{"type":"array","elementType":{"type":"reference","target":{"sourceFileName":"node_modules/protractor/built/plugins.d.ts","qualifiedName":"PluginConfig"},"name":"PluginConfig","package":"protractor"}},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.plugins"}},{"id":6296,"name":"skipSourceMapSupport","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Turns off source map support.  Stops protractor from registering global\\nvariable "},{"kind":"code","text":"`source-map-support`"},{"kind":"text","text":".  Defaults to "},{"kind":"code","text":"`false`"}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.skipSourceMapSupport"}},{"id":6297,"name":"disableEnvironmentOverrides","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Turns off WebDriver\'s environment variables overrides to ignore any\\nenvironment variable and to only use the configuration in this file.\\nDefaults to "},{"kind":"code","text":"`false`"}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.disableEnvironmentOverrides"}},{"id":6298,"name":"ng12Hybrid","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Tells Protractor to interpret any angular apps it comes across as hybrid\\nangular1/angular2 apps (i.e. apps using ngUpgrade)\\nDefaults to "},{"kind":"code","text":"`false`"}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.ng12Hybrid"}},{"id":6299,"name":"disableChecks","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Protractor will exit with an error if it sees any command line flags it doesn\'t\\nrecognize. Set disableChecks true to disable this check."}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.disableChecks"}},{"id":6300,"name":"SELENIUM_PROMISE_MANAGER","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Enable/disable the WebDriver Control Flow.\\n\\nWebDriverJS (and by extention, Protractor) uses a Control Flow to manage the order in which\\ncommands are executed and promises are resolved (see docs/control-flow.md for details).\\nHowever, as syntax like "},{"kind":"code","text":"`async`"},{"kind":"text","text":"/"},{"kind":"code","text":"`await`"},{"kind":"text","text":" are being introduced, WebDriverJS has decided to\\ndeprecate the control flow, and have users manage the asynchronous activity themselves\\n(details here: https://github.com/SeleniumHQ/selenium/issues/2969).\\n\\nAt the moment, the WebDriver Control Flow is still enabled by default. You can disable it by\\nsetting the environment variable "},{"kind":"code","text":"`SELENIUM_PROMISE_MANAGER`"},{"kind":"text","text":" to "},{"kind":"code","text":"`0`"},{"kind":"text","text":".  In a webdriver release in\\nQ4 2017, the Control Flow will be disabled by default, but you will be able to re-enable it by\\nsetting "},{"kind":"code","text":"`SELENIUM_PROMISE_MANAGER`"},{"kind":"text","text":" to "},{"kind":"code","text":"`1`"},{"kind":"text","text":".  At a later point, the control flow will be removed\\nfor good.\\n\\nIf you don\'t like managing environment variables, you can set this option in your config file,\\nand Protractor will handle enabling/disabling the control flow for you.  Setting this option\\nis higher priority than the "},{"kind":"code","text":"`SELENIUM_PROMISE_MANAGER`"},{"kind":"text","text":" environment variable."}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.SELENIUM_PROMISE_MANAGER"}},{"id":6301,"name":"seleniumArgs","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.seleniumArgs"}},{"id":6302,"name":"jvmArgs","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.jvmArgs"}},{"id":6303,"name":"configDir","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.configDir"}},{"id":6304,"name":"troubleshoot","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.troubleshoot"}},{"id":6305,"name":"seleniumPort","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.seleniumPort"}},{"id":6306,"name":"mockSelenium","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.mockSelenium"}},{"id":6307,"name":"v8Debug","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.v8Debug"}},{"id":6308,"name":"nodeDebug","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.nodeDebug"}},{"id":6309,"name":"debuggerServerPort","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.debuggerServerPort"}},{"id":6310,"name":"frameworkPath","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.frameworkPath"}},{"id":6311,"name":"elementExplorer","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.elementExplorer"}},{"id":6312,"name":"debug","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.debug"}},{"id":6313,"name":"unknownFlags_","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.unknownFlags_"}}],"groups":[{"title":"Properties","children":[6189,6192,6193,6194,6199,6200,6201,6202,6203,6204,6205,6206,6207,6208,6209,6210,6211,6212,6213,6214,6215,6216,6217,6218,6219,6220,6221,6222,6223,6224,6225,6226,6227,6228,6229,6242,6243,6244,6245,6246,6247,6248,6249,6250,6253,6256,6259,6263,6267,6268,6269,6270,6271,6272,6273,6274,6275,6276,6289,6295,6296,6297,6298,6299,6300,6301,6302,6303,6304,6305,6306,6307,6308,6309,6310,6311,6312,6313]}],"sources":[{"fileName":"packages/protractor/src/adapter/Config.ts","line":15,"character":17}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"node_modules/protractor/built/config.d.ts","qualifiedName":"Config"},"name":"Config","package":"protractor"}],"permalink":"/api/protractor-adapter/interface/Config","nextId":6328},{"id":6328,"name":"run","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/adapter/run.ts","line":18,"character":16}],"signatures":[{"id":6329,"name":"run","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"## Learn more\\n- [Protractor framework adapters](https://github.com/angular/protractor/blob/master/lib/frameworks/README.md#framework-adapters-for-protractor)"}]},"sources":[{"fileName":"packages/protractor/src/adapter/run.ts","line":18,"character":16}],"parameters":[{"id":6330,"name":"runner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/protractor/built/runner.d.ts","qualifiedName":"Runner"},"name":"Runner","package":"protractor"}},{"id":6331,"name":"specs","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","name":"ProtractorReport","package":"@serenity-js/protractor"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}],"permalink":"/api/protractor-adapter/function/run","previousId":6188,"nextId":6332},{"id":6332,"name":"CucumberAdapterConfig","variant":"declaration","kind":256,"flags":{"isExternal":true},"children":[{"id":6333,"name":"useStandardOutput","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instruct Serenity/JS Cucumber Adapter to take over the "},{"kind":"code","text":"`stdout`"},{"kind":"text","text":" output\\nof native Cucumber reporters to prevent them from clobbering the log."}]},"sources":[{"fileName":"packages/protractor/src/adapter/runner/CucumberAdapterConfig.ts","line":10,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":6334,"name":"uniqueFormatterOutputs","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Add "},{"kind":"code","text":"`runnerId`"},{"kind":"text","text":" to names of output files produced by native Cucumber.js formatters"}]},"sources":[{"fileName":"packages/protractor/src/adapter/runner/CucumberAdapterConfig.ts","line":15,"character":4}],"type":{"type":"intrinsic","name":"boolean"}}],"groups":[{"title":"Properties","children":[6333,6334]}],"sources":[{"fileName":"packages/protractor/src/adapter/runner/CucumberAdapterConfig.ts","line":4,"character":17}],"permalink":"/api/protractor-adapter/interface/CucumberAdapterConfig","previousId":6328,"nextId":6335},{"id":6335,"name":"TestRunnerDetector","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Detects the ["},{"kind":"code","text":"`TestRunnerAdapter`"},{"kind":"text","text":"](/api/core-adapter/interface/TestRunnerAdapter/) to use,\\nbased on Protractor configuration."}]},"children":[{"id":6336,"name":"cucumberOpts","variant":"declaration","kind":1024,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/protractor/src/adapter/runner/TestRunnerDetector.ts","line":14,"character":11}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"\'cucumberOpts\'"},{"id":6337,"name":"jasmineNodeOpts","variant":"declaration","kind":1024,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/protractor/src/adapter/runner/TestRunnerDetector.ts","line":15,"character":11}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"\'jasmineNodeOpts\'"},{"id":6338,"name":"mochaOpts","variant":"declaration","kind":1024,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/protractor/src/adapter/runner/TestRunnerDetector.ts","line":16,"character":11}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"\'mochaOpts\'"},{"id":6339,"name":"protractorCliOptions","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/protractor/src/adapter/runner/TestRunnerDetector.ts","line":18,"character":11}],"signatures":[{"id":6340,"name":"protractorCliOptions","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/adapter/runner/TestRunnerDetector.ts","line":18,"character":11}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}]},{"id":6341,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/adapter/runner/TestRunnerDetector.ts","line":26,"character":4}],"signatures":[{"id":6342,"name":"new TestRunnerDetector","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/adapter/runner/TestRunnerDetector.ts","line":26,"character":4}],"parameters":[{"id":6343,"name":"testRunnerLoader","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":6365,"name":"TestRunnerLoader","package":"@serenity-js/protractor"}}],"type":{"type":"reference","target":6335,"name":"TestRunnerDetector","package":"@serenity-js/protractor"}}]},{"id":6345,"name":"runnerFor","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/adapter/runner/TestRunnerDetector.ts","line":29,"character":4}],"signatures":[{"id":6346,"name":"runnerFor","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/adapter/runner/TestRunnerDetector.ts","line":29,"character":4}],"parameters":[{"id":6347,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/protractor/built/config.d.ts","qualifiedName":"Config"},"name":"Config","package":"protractor"}}],"type":{"type":"reference","target":2225,"name":"TestRunnerAdapter","package":"@serenity-js/core"}}]}],"groups":[{"title":"Constructors","children":[6341]},{"title":"Properties","children":[6336,6337,6338]},{"title":"Methods","children":[6339,6345]}],"sources":[{"fileName":"packages/protractor/src/adapter/runner/TestRunnerDetector.ts","line":12,"character":13}],"permalink":"/api/protractor-adapter/class/TestRunnerDetector","previousId":6332,"nextId":6365},{"id":6365,"name":"TestRunnerLoader","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Loads a ["},{"kind":"code","text":"`TestRunnerAdapter`"},{"kind":"text","text":"](/api/core-adapter/interface/TestRunnerAdapter/) needed to invoke\\nthe chosen test runner programmatically."}]},"children":[{"id":6366,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/adapter/runner/TestRunnerLoader.ts","line":32,"character":4}],"signatures":[{"id":6367,"name":"new TestRunnerLoader","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/adapter/runner/TestRunnerLoader.ts","line":32,"character":4}],"parameters":[{"id":6368,"name":"cwd","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Current working directory; used to resolve glob paths to files for Cucumber.js to "},{"kind":"code","text":"`require`"},{"kind":"text","text":",\\n and instructing Serenity/JS where to look for this module\'s optional\\n dependencies, like ["},{"kind":"code","text":"`@serenity-js/cucumber`"},{"kind":"text","text":"](/api/cucumber),\\n ["},{"kind":"code","text":"`@serenity-js/mocha`"},{"kind":"text","text":"](/api/mocha),\\n ["},{"kind":"code","text":"`@serenity-js/jasmine`"},{"kind":"text","text":"](/api/jasmine), etc."}]},"type":{"type":"reference","name":"Path","package":"@serenity-js/core"}},{"id":6369,"name":"runnerId","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Unique identifier used to differentiate output files produced by native Cucumber.js formatters.\\n For example, "},{"kind":"code","text":"`process.pid`"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]}}],"type":{"type":"reference","target":6365,"name":"TestRunnerLoader","package":"@serenity-js/protractor"}}]},{"id":6374,"name":"forJasmine","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/adapter/runner/TestRunnerLoader.ts","line":43,"character":4}],"signatures":[{"id":6375,"name":"forJasmine","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"See ["},{"kind":"code","text":"`JasmineConfig`"},{"kind":"text","text":"](/api/jasmine-adapter/interface/JasmineConfig/)"}]},"sources":[{"fileName":"packages/protractor/src/adapter/runner/TestRunnerLoader.ts","line":43,"character":4}],"parameters":[{"id":6376,"name":"jasmineNodeOpts","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"object"}}],"type":{"type":"reference","target":2225,"name":"TestRunnerAdapter","package":"@serenity-js/core"}}]},{"id":6377,"name":"forMocha","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/adapter/runner/TestRunnerLoader.ts","line":53,"character":4}],"signatures":[{"id":6378,"name":"forMocha","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"See ["},{"kind":"code","text":"`MochaConfig`"},{"kind":"text","text":"](/api/mocha-adapter/interface/MochaConfig/)"}]},"sources":[{"fileName":"packages/protractor/src/adapter/runner/TestRunnerLoader.ts","line":53,"character":4}],"parameters":[{"id":6379,"name":"mochaOpts","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"object"}}],"type":{"type":"reference","target":2225,"name":"TestRunnerAdapter","package":"@serenity-js/core"}}]},{"id":6380,"name":"forCucumber","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/adapter/runner/TestRunnerLoader.ts","line":64,"character":4}],"signatures":[{"id":6381,"name":"forCucumber","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"See ["},{"kind":"code","text":"`CucumberConfig`"},{"kind":"text","text":"](/api/cucumber-adapter/interface/CucumberConfig/)"}]},"sources":[{"fileName":"packages/protractor/src/adapter/runner/TestRunnerLoader.ts","line":64,"character":4}],"parameters":[{"id":6382,"name":"cucumberOpts","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"object"}},{"id":6383,"name":"adapterConfig","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":6332,"name":"CucumberAdapterConfig","package":"@serenity-js/protractor"}}],"type":{"type":"reference","target":2225,"name":"TestRunnerAdapter","package":"@serenity-js/core"}}]}],"groups":[{"title":"Constructors","children":[6366]},{"title":"Methods","children":[6374,6377,6380]}],"sources":[{"fileName":"packages/protractor/src/adapter/runner/TestRunnerLoader.ts","line":14,"character":13}],"permalink":"/api/protractor-adapter/class/TestRunnerLoader","previousId":6335}],"groups":[{"title":"Configuration","children":[6188]},{"title":"Integration","children":[6328,6332,6335,6365]}],"sources":[{"fileName":"packages/protractor/src/adapter/index.ts","line":1,"character":0}],"permalink":"/api/protractor-adapter"},"urlSlug":"protractor-adapter"},{"index":true,"label":"index","reflection":{"id":7,"name":"@serenity-js/protractor","variant":"declaration","kind":2,"flags":{"isExternal":true},"children":[{"id":5813,"name":"BrowseTheWebWithProtractor","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"This implementation of the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\nenables the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to interact with web front-ends using [Protractor](http://www.protractortest.org/#/).\\n\\n## Using Protractor to "},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { BrowseTheWebWithProtractor } from \'@serenity-js/protractor\\nimport { By, Navigate, PageElement, Text } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { protractor } from \'protractor\'\\n\\nconst HomePage = {\\n  title: () =>\\n    PageElement.located(By.css(\'h1\')).describedAs(\'title\')\\n}\\n\\n await actorCalled(\'Wendy\')\\n   .whoCan(BrowseTheWebWithProtractor.using(protractor.browser))\\n   .attemptsTo(\\n     Navigate.to(`https://serenity-js.org`),\\n     Ensure.that(Text.of(HomePage.title()), equals(\'Serenity/JS\')),\\n   )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- [Protractor website](https://www.protractortest.org/)\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\n- ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/)\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)"}]},"children":[{"id":5814,"name":"using","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/abilities/BrowseTheWebWithProtractor.ts","line":52,"character":11}],"signatures":[{"id":5815,"name":"using","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Ability to interact with web front-ends using\\nprovided protractor browser instance."}]},"sources":[{"fileName":"packages/protractor/src/screenplay/abilities/BrowseTheWebWithProtractor.ts","line":52,"character":11}],"parameters":[{"id":5816,"name":"browser","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"#### Learn more\\n- [Protractor Browser API docs](http://www.protractortest.org/#/api?view=ProtractorBrowser)"}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/protractor/built/browser.d.ts","qualifiedName":"ProtractorBrowser"},"name":"ProtractorBrowser","package":"protractor"}}],"type":{"type":"reference","target":5813,"name":"BrowseTheWebWithProtractor","package":"@serenity-js/protractor"}}]},{"id":5839,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/abilities/Ability.ts","line":406,"character":4}],"signatures":[{"id":5840,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a JSON representation of the ability and its current state, if available.\\nThe purpose of this method is to enable reporting the state of the ability in a human-readable format,\\nrather than to serialise and deserialise the ability itself."}]},"sources":[{"fileName":"packages/core/lib/screenplay/abilities/Ability.ts","line":406,"character":4}],"type":{"type":"reference","target":596,"name":"SerialisedAbility","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.toJSON"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.toJSON"}},{"id":5841,"name":"abilityType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/abilities/Ability.ts","line":436,"character":4}],"signatures":[{"id":5842,"name":"abilityType","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the most abstract type of this Ability instance,\\nspecifically the first class in the inheritance hierarchy that directly extends the "},{"kind":"code","text":"`Ability`"},{"kind":"text","text":" class.\\n\\n"},{"kind":"code","text":"```ts\\nimport { Ability } from \'@serenity-js/core\';\\n\\nclass MyAbility extends Ability {}\\nclass MySpecialisedAbility extends MyAbility {}\\n\\nnew MyAbility().abilityType();            // returns MyAbility\\nnew MySpecialisedAbility().abilityType(); // returns MyAbility\\n```"}]},"sources":[{"fileName":"packages/core/lib/screenplay/abilities/Ability.ts","line":436,"character":4}],"type":{"type":"reference","target":511,"typeArguments":[{"type":"reference","target":490,"name":"Ability","package":"@serenity-js/core"}],"name":"AbilityType","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.abilityType"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.abilityType"}},{"id":5824,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/abilities/BrowseTheWebWithProtractor.ts","line":60,"character":4}],"signatures":[{"id":5825,"name":"new BrowseTheWebWithProtractor","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/abilities/BrowseTheWebWithProtractor.ts","line":60,"character":4}],"parameters":[{"id":5826,"name":"browser","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An instance of a protractor browser"}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/protractor/built/browser.d.ts","qualifiedName":"ProtractorBrowser"},"name":"ProtractorBrowser","package":"protractor"}}],"type":{"type":"reference","target":5813,"name":"BrowseTheWebWithProtractor","package":"@serenity-js/protractor"},"overwrites":{"type":"reference","target":-1,"name":"BrowseTheWeb<protractor.ElementFinder>.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"BrowseTheWeb<protractor.ElementFinder>.constructor"}},{"id":5828,"name":"param","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/abilities/BrowseTheWebWithProtractor.ts","line":99,"character":4}],"signatures":[{"id":5829,"name":"param","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns Protractor configuration parameter at "},{"kind":"code","text":"`path`"},{"kind":"text","text":".\\n\\n#### Configuring a custom parameter\\n\\n"},{"kind":"code","text":"```js\\n// protractor.conf.js\\nexports.config = {\\n  params: {\\n    login: {\\n      username: \'jane@example.org\'\\n      password: process.env.PASSWORD\\n    }\\n  }\\n  // ...\\n}\\n```"},{"kind":"text","text":"\\n\\n#### Retrieving config param by name\\n"},{"kind":"code","text":"```js\\nBrowseTheWebWithProtractor.as(actor).param(\'login\')\\n // returns object with username and password\\n```"},{"kind":"text","text":"\\n\\n#### Retrieving config param by path\\n"},{"kind":"code","text":"```js\\nBrowseTheWeb.as(actor).param(\'login.username\')\\n // returns string \'jane@example.org\'\\n\\n@param path\\n Either a name or a dot-delimited path to the param.\\n\\n@throws [`ConfigurationError`](/api/core/class/ConfigurationError/)\\n Throws a `ConfigurationError` if the parameter is `undefined`"}]},"sources":[{"fileName":"packages/protractor/src/screenplay/abilities/BrowseTheWebWithProtractor.ts","line":99,"character":4}],"typeParameter":[{"id":5830,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"any"}}],"parameters":[{"id":5831,"name":"path","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":5830,"name":"T","package":"@serenity-js/protractor","refersToTypeParameter":true}}]},{"id":5833,"name":"currentPage","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":87,"character":4}],"signatures":[{"id":5834,"name":"currentPage","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/) representing the currently active browser tab."}]},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":87,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4237,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/protractor/built/element.d.ts","qualifiedName":"ElementFinder"},"name":"ElementFinder","package":"protractor"}],"name":"Page","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.currentPage"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.currentPage"}},{"id":5835,"name":"allPages","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":92,"character":4}],"signatures":[{"id":5836,"name":"allPages","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns an array of [pages](/api/web/class/Page/) representing all the browser tabs\\navailable in the current ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/)."}]},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":92,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4237,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/protractor/built/element.d.ts","qualifiedName":"ElementFinder"},"name":"ElementFinder","package":"protractor"}],"name":"Page","package":"@serenity-js/web"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.allPages"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.allPages"}},{"id":5837,"name":"browserCapabilities","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":96,"character":4}],"signatures":[{"id":5838,"name":"browserCapabilities","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns [basic meta-data](/api/web/interface/BrowserCapabilities/) about the browser associated with this ability."}]},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":96,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":3863,"name":"BrowserCapabilities","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.browserCapabilities"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.browserCapabilities"}}],"groups":[{"title":"Constructors","children":[5824]},{"title":"Methods","children":[5814,5839,5841,5828,5833,5835,5837]}],"sources":[{"fileName":"packages/protractor/src/screenplay/abilities/BrowseTheWebWithProtractor.ts","line":41,"character":13}],"extendedTypes":[{"type":"reference","target":3251,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/protractor/built/element.d.ts","qualifiedName":"ElementFinder"},"name":"protractor.ElementFinder","package":"protractor","qualifiedName":"ElementFinder"}],"name":"BrowseTheWeb","package":"@serenity-js/web"}],"permalink":"/api/protractor/class/BrowseTheWebWithProtractor","nextId":5843},{"id":5843,"name":"UseAngular","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to enable or disable automated synchronisation between Protractor and Angular 1.x application.\\n\\nUseful when a test scenario needs to interact with both Angular-based\\nand non-Angular web apps, e.g. use an external sign-in form.\\n\\n**Please note** if your tests interact with a non-Angular app you can disable\\nsynchronisation altogether in ["},{"kind":"code","text":"`protractor.conf.js`"},{"kind":"text","text":"](https://github.com/angular/protractor/blob/master/lib/config.ts).\\n\\n**Warning:** this interaction is Protractor-specific, so using it in your tests\\nwill reduce their portability across test integration tools.\\n\\n## Disabling synchronisation temporarily\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { UseAngular } from \'@serenity-js/protractor\'\\nimport { Navigate } from \'@serenity-js/web\'\\nimport { protractor } from \'protractor\'\\n\\nawait actorCalled(\'Angie\')\\n  .whoCan(BrowseTheWeb.using(protractor.browser))\\n  .attemptsTo(\\n    UseAngular.disableSynchronisation(),\\n    Navigate.to(\'https://mycompany.com/login\'),\\n    // navigate to a non-Angular app, perform some activities...\\n\\n    UseAngular.disableSynchronisation(),\\n    Navigate.to(\'https://myapp.com\'),\\n    // navigate to an Angular app, perform some more activities...\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Disabling synchronisation with Angular in "},{"kind":"code","text":"`protractor.conf.js`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```js\\nexports.config = {\\n  onPrepare: function () {\\n    return browser.waitForAngularEnabled(false);\\n  },\\n  // ... other config\\n}\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- [Cross-application testing with Serenity/JS](https://janmolak.com/cross-application-testing-with-serenity-js-4103a272b75b)"}]},"children":[{"id":5844,"name":"disableSynchronisation","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/interactions/UseAngular.ts","line":62,"character":11}],"signatures":[{"id":5845,"name":"disableSynchronisation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Produces an ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/) that instructs the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to disable\\nsynchronisation between Protractor and an Angular 1.x app."}]},"sources":[{"fileName":"packages/protractor/src/screenplay/interactions/UseAngular.ts","line":62,"character":11}],"type":{"type":"reference","target":793,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":5846,"name":"enableSynchronisation","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/interactions/UseAngular.ts","line":74,"character":11}],"signatures":[{"id":5847,"name":"enableSynchronisation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Produces an ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/) that instructs the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to enable\\nsynchronisation between Protractor and an Angular 1.x app."}]},"sources":[{"fileName":"packages/protractor/src/screenplay/interactions/UseAngular.ts","line":74,"character":11}],"type":{"type":"reference","target":793,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":5848,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":5849,"name":"new UseAngular","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":5843,"name":"UseAngular","package":"@serenity-js/protractor"}}]}],"groups":[{"title":"Constructors","children":[5848]},{"title":"Methods","children":[5844,5846]}],"sources":[{"fileName":"packages/protractor/src/screenplay/interactions/UseAngular.ts","line":56,"character":13}],"permalink":"/api/protractor/class/UseAngular","previousId":5813,"nextId":5850},{"id":5850,"name":"ProtractorBrowsingSession","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Protractor-specific implementation of ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/)."}]},"children":[{"id":5851,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorBrowsingSession.ts","line":18,"character":4}],"signatures":[{"id":5852,"name":"new ProtractorBrowsingSession","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorBrowsingSession.ts","line":18,"character":4}],"parameters":[{"id":5853,"name":"browser","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/protractor/built/browser.d.ts","qualifiedName":"ProtractorBrowser"},"name":"ProtractorBrowser","package":"protractor"}}],"type":{"type":"reference","target":5850,"name":"ProtractorBrowsingSession","package":"@serenity-js/protractor"},"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession<ProtractorPage>.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession<ProtractorPage>.constructor"}},{"id":5855,"name":"allPages","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorBrowsingSession.ts","line":22,"character":19}],"signatures":[{"id":5856,"name":"allPages","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorBrowsingSession.ts","line":22,"character":19}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":5988,"name":"ProtractorPage","package":"@serenity-js/protractor"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession.allPages"}}],"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession.allPages"}},{"id":5857,"name":"changeCurrentPageTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorBrowsingSession.ts","line":54,"character":19}],"signatures":[{"id":5858,"name":"changeCurrentPageTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorBrowsingSession.ts","line":54,"character":19}],"parameters":[{"id":5859,"name":"page","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":5988,"name":"ProtractorPage","package":"@serenity-js/protractor"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession.changeCurrentPageTo"}}],"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession.changeCurrentPageTo"}},{"id":5862,"name":"currentPage","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorBrowsingSession.ts","line":93,"character":19}],"signatures":[{"id":5863,"name":"currentPage","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorBrowsingSession.ts","line":93,"character":19}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":5988,"name":"ProtractorPage","package":"@serenity-js/protractor"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession.currentPage"}}],"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession.currentPage"}},{"id":5866,"name":"browserCapabilities","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorBrowsingSession.ts","line":134,"character":19}],"signatures":[{"id":5867,"name":"browserCapabilities","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorBrowsingSession.ts","line":134,"character":19}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":3863,"name":"BrowserCapabilities","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession.browserCapabilities"}}],"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession.browserCapabilities"}},{"id":5870,"name":"closePagesOtherThan","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":15,"character":4}],"signatures":[{"id":5871,"name":"closePagesOtherThan","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":15,"character":4}],"parameters":[{"id":5872,"name":"pageOfInterest","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":5988,"name":"ProtractorPage","package":"@serenity-js/protractor"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.closePagesOtherThan"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.closePagesOtherThan"}},{"id":5873,"name":"register","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":33,"character":4}],"signatures":[{"id":5874,"name":"register","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Registers specified [pages](/api/web/class/Page/) to be managed by this ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/)."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":33,"character":4}],"parameters":[{"id":5875,"name":"pages","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":5988,"name":"ProtractorPage","package":"@serenity-js/protractor"}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.register"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.register"}},{"id":5876,"name":"deregister","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":40,"character":4}],"signatures":[{"id":5877,"name":"deregister","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Informs this ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/) that it should no longer manage [pages](/api/web/class/Page/)\\nidentified by the given "},{"kind":"code","text":"`pageIds`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":40,"character":4}],"parameters":[{"id":5878,"name":"pageIds","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.deregister"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.deregister"}},{"id":5879,"name":"registeredPageIds","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":49,"character":4}],"signatures":[{"id":5880,"name":"registeredPageIds","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the ids of any [pages](/api/web/class/Page/) this ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/) is aware of."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":49,"character":4}],"type":{"type":"array","elementType":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.registeredPageIds"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.registeredPageIds"}},{"id":5881,"name":"closeAllPages","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":72,"character":4}],"signatures":[{"id":5882,"name":"closeAllPages","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Closes all the pages available in this browsing context"}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":72,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.closeAllPages"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.closeAllPages"}}],"groups":[{"title":"Constructors","children":[5851]},{"title":"Methods","children":[5855,5857,5862,5866,5870,5873,5876,5879,5881]}],"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorBrowsingSession.ts","line":16,"character":13}],"extendedTypes":[{"type":"reference","target":3867,"typeArguments":[{"type":"reference","target":5988,"name":"ProtractorPage","package":"@serenity-js/protractor"}],"name":"BrowsingSession","package":"@serenity-js/web"}],"permalink":"/api/protractor/class/ProtractorBrowsingSession","previousId":5843,"nextId":5883},{"id":5883,"name":"ProtractorCookie","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Protractor-specific implementation of ["},{"kind":"code","text":"`Cookie`"},{"kind":"text","text":"](/api/web/class/Cookie/)."}]},"children":[{"id":5962,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorCookie.ts","line":16,"character":4}],"signatures":[{"id":5963,"name":"new ProtractorCookie","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorCookie.ts","line":16,"character":4}],"parameters":[{"id":5964,"name":"browser","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/protractor/built/browser.d.ts","qualifiedName":"ProtractorBrowser"},"name":"ProtractorBrowser","package":"protractor"}},{"id":5965,"name":"cookieName","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":5883,"name":"ProtractorCookie","package":"@serenity-js/protractor"},"overwrites":{"type":"reference","target":-1,"name":"Cookie.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"Cookie.constructor"}},{"id":5967,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorCookie.ts","line":21,"character":10}],"signatures":[{"id":5968,"name":"delete","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorCookie.ts","line":21,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Cookie.delete"}}],"overwrites":{"type":"reference","target":-1,"name":"Cookie.delete"}},{"id":5972,"name":"name","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":99,"character":4}],"signatures":[{"id":5973,"name":"name","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the name of this cookie."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":99,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.name"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.name"}},{"id":5974,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":106,"character":4}],"signatures":[{"id":5975,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Checks if a given cookie is set.\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Optional`"},{"kind":"text","text":"](/api/core/interface/Optional/)"}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":106,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.isPresent"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.isPresent"}},{"id":5976,"name":"value","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":110,"character":4}],"signatures":[{"id":5977,"name":"value","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the value of a given cookie."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":110,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.value"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.value"}},{"id":5978,"name":"path","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":114,"character":4}],"signatures":[{"id":5979,"name":"path","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the path of a given cookie, if any was set."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":114,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.path"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.path"}},{"id":5980,"name":"domain","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":118,"character":4}],"signatures":[{"id":5981,"name":"domain","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the domain of a given cookie, if any was set."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":118,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.domain"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.domain"}},{"id":5982,"name":"isHttpOnly","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":125,"character":4}],"signatures":[{"id":5983,"name":"isHttpOnly","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Checks if a given cookie is HTTP-only.\\n\\n#### Learn more\\n- [Mozilla Developer Network: Restricting access to cookies](https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies#restrict_access_to_cookies)"}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":125,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.isHttpOnly"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.isHttpOnly"}},{"id":5984,"name":"isSecure","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":132,"character":4}],"signatures":[{"id":5985,"name":"isSecure","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Checks if a given cookie is secure.\\n\\n#### Learn more\\n- [Mozilla Developer Network: Restricting access to cookies](https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies#restrict_access_to_cookies)"}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":132,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.isSecure"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.isSecure"}},{"id":5986,"name":"expiry","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":139,"character":4}],"signatures":[{"id":5987,"name":"expiry","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the expiry date of a given cookie\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Timestamp`"},{"kind":"text","text":"](/api/core/class/Timestamp/)"}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":139,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.expiry"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.expiry"}}],"groups":[{"title":"Constructors","children":[5962]},{"title":"Methods","children":[5967,5972,5974,5976,5978,5980,5982,5984,5986]}],"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorCookie.ts","line":14,"character":13}],"extendedTypes":[{"type":"reference","target":3898,"name":"Cookie","package":"@serenity-js/web"}],"permalink":"/api/protractor/class/ProtractorCookie","previousId":5850,"nextId":5988},{"id":5988,"name":"ProtractorPage","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Protractor-specific implementation of ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/)."}]},"children":[{"id":6000,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":36,"character":4}],"signatures":[{"id":6001,"name":"new ProtractorPage","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":36,"character":4}],"parameters":[{"id":6002,"name":"session","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":5850,"name":"ProtractorBrowsingSession","package":"@serenity-js/protractor"}},{"id":6003,"name":"browser","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/protractor/built/browser.d.ts","qualifiedName":"ProtractorBrowser"},"name":"ProtractorBrowser","package":"protractor"}},{"id":6004,"name":"modalDialogHandler","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4105,"name":"ModalDialogHandler","package":"@serenity-js/web"}},{"id":6005,"name":"errorHandler","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"ProtractorErrorHandler","package":"@serenity-js/protractor"}},{"id":6006,"name":"pageId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}],"type":{"type":"reference","target":5988,"name":"ProtractorPage","package":"@serenity-js/protractor"},"overwrites":{"type":"reference","target":-1,"name":"Page<protractor.ElementFinder>.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"Page<protractor.ElementFinder>.constructor"}},{"id":6011,"name":"createPageElement","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":51,"character":4}],"signatures":[{"id":6012,"name":"createPageElement","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":51,"character":4}],"parameters":[{"id":6013,"name":"nativeElement","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/protractor/built/element.d.ts","qualifiedName":"ElementFinder"},"name":"ElementFinder","package":"protractor"}}],"type":{"type":"reference","target":4353,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/protractor/built/element.d.ts","qualifiedName":"ElementFinder"},"name":"ElementFinder","package":"protractor"}],"name":"PageElement","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"Page.createPageElement"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.createPageElement"}},{"id":6014,"name":"locate","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":62,"character":4}],"signatures":[{"id":6015,"name":"locate","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":62,"character":4}],"parameters":[{"id":6016,"name":"selector","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4788,"name":"Selector","package":"@serenity-js/web"}}],"type":{"type":"reference","target":4353,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/protractor/built/element.d.ts","qualifiedName":"ElementFinder"},"name":"ElementFinder","package":"protractor"}],"name":"PageElement","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"Page.locate"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.locate"}},{"id":6017,"name":"locateAll","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":68,"character":4}],"signatures":[{"id":6018,"name":"locateAll","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":68,"character":4}],"parameters":[{"id":6019,"name":"selector","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4788,"name":"Selector","package":"@serenity-js/web"}}],"type":{"type":"reference","target":4429,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/protractor/built/element.d.ts","qualifiedName":"ElementFinder"},"name":"ElementFinder","package":"protractor"}],"name":"PageElements","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"Page.locateAll"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.locateAll"}},{"id":6020,"name":"enableAngularSynchronisation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":100,"character":10}],"signatures":[{"id":6021,"name":"enableAngularSynchronisation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"If set to "},{"kind":"code","text":"`false`"},{"kind":"text","text":", Protractor will not wait for Angular 1.x "},{"kind":"code","text":"`$http`"},{"kind":"text","text":" and "},{"kind":"code","text":"`$timeout`"},{"kind":"text","text":"\\ntasks to complete before interacting with the browser.\\n\\nThis can be useful when:\\n- you need to switch to a non-Angular app during your tests, e.g. to sign in using an SSO gateway\\n- your app continuously polls an API with "},{"kind":"code","text":"`$timeout`"},{"kind":"text","text":"\\n\\nIf you\'re not testing an Angular app, it\'s better to disable Angular synchronisation completely\\nin protractor configuration:\\n\\n"},{"kind":"code","text":"```js\\n// protractor.conf.js\\nexports.config = {\\n    onPrepare: function () {\\n        return browser.waitForAngularEnabled(false)\\n    },\\n\\n    // ... other config\\n}\\n```"}]},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":100,"character":10}],"parameters":[{"id":6022,"name":"enable","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":6023,"name":"navigateTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":106,"character":10}],"signatures":[{"id":6024,"name":"navigateTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":106,"character":10}],"parameters":[{"id":6025,"name":"destination","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.navigateTo"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.navigateTo"}},{"id":6026,"name":"navigateBack","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":112,"character":10}],"signatures":[{"id":6027,"name":"navigateBack","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":112,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.navigateBack"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.navigateBack"}},{"id":6028,"name":"navigateForward","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":118,"character":10}],"signatures":[{"id":6029,"name":"navigateForward","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":118,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.navigateForward"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.navigateForward"}},{"id":6030,"name":"reload","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":124,"character":10}],"signatures":[{"id":6031,"name":"reload","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":124,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.reload"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.reload"}},{"id":6032,"name":"sendKeys","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":130,"character":10}],"signatures":[{"id":6033,"name":"sendKeys","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":130,"character":10}],"parameters":[{"id":6034,"name":"keys","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":4121,"name":"Key","package":"@serenity-js/web"}]}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.sendKeys"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.sendKeys"}},{"id":6035,"name":"executeScript","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":162,"character":10}],"signatures":[{"id":6036,"name":"executeScript","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":162,"character":10}],"typeParameter":[{"id":6037,"name":"Result","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":6038,"name":"InnerArguments","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"parameters":[{"id":6039,"name":"script","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reflection","declaration":{"id":6040,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":163,"character":26}],"signatures":[{"id":6041,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":163,"character":26}],"parameters":[{"id":6042,"name":"parameters","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"reference","target":6038,"name":"InnerArguments","package":"@serenity-js/protractor","refersToTypeParameter":true}}],"type":{"type":"reference","target":6037,"name":"Result","package":"@serenity-js/protractor","refersToTypeParameter":true}}]}}]}},{"id":6043,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"reference","target":6038,"name":"InnerArguments","package":"@serenity-js/protractor","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":6037,"name":"Result","package":"@serenity-js/protractor","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.executeScript"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.executeScript"}},{"id":6044,"name":"executeAsyncScript","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":188,"character":10}],"signatures":[{"id":6045,"name":"executeAsyncScript","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":188,"character":10}],"typeParameter":[{"id":6046,"name":"Result","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":6047,"name":"Parameters","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"parameters":[{"id":6048,"name":"script","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reflection","declaration":{"id":6049,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":189,"character":26}],"signatures":[{"id":6050,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":189,"character":26}],"parameters":[{"id":6051,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"tuple","elements":[{"type":"rest","elementType":{"type":"namedTupleMember","name":"parameters","isOptional":false,"element":{"type":"array","elementType":{"type":"reference","target":6047,"name":"Parameters","package":"@serenity-js/protractor","refersToTypeParameter":true}}}},{"type":"namedTupleMember","name":"callback","isOptional":false,"element":{"type":"reflection","declaration":{"id":6052,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":189,"character":74}],"signatures":[{"id":6053,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":189,"character":74}],"parameters":[{"id":6054,"name":"result","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":6046,"name":"Result","package":"@serenity-js/protractor","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"void"}}]}}}]}}],"type":{"type":"intrinsic","name":"void"}}]}}]}},{"id":6055,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"reference","target":6047,"name":"Parameters","package":"@serenity-js/protractor","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":6046,"name":"Result","package":"@serenity-js/protractor","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.executeAsyncScript"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.executeAsyncScript"}},{"id":6056,"name":"lastScriptExecutionResult","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":215,"character":4}],"signatures":[{"id":6057,"name":"lastScriptExecutionResult","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":215,"character":4}],"type":{"type":"intrinsic","name":"any"},"overwrites":{"type":"reference","target":-1,"name":"Page.lastScriptExecutionResult"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.lastScriptExecutionResult"}},{"id":6058,"name":"takeScreenshot","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":227,"character":10}],"signatures":[{"id":6059,"name":"takeScreenshot","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":227,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.takeScreenshot"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.takeScreenshot"}},{"id":6060,"name":"cookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":246,"character":10}],"signatures":[{"id":6061,"name":"cookie","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":246,"character":10}],"parameters":[{"id":6062,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":3898,"name":"Cookie","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.cookie"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.cookie"}},{"id":6063,"name":"setCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":250,"character":10}],"signatures":[{"id":6064,"name":"setCookie","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":250,"character":10}],"parameters":[{"id":6065,"name":"cookieData","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4004,"name":"CookieData","package":"@serenity-js/web"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.setCookie"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.setCookie"}},{"id":6066,"name":"deleteAllCookies","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":266,"character":10}],"signatures":[{"id":6067,"name":"deleteAllCookies","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":266,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.deleteAllCookies"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.deleteAllCookies"}},{"id":6068,"name":"title","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":272,"character":10}],"signatures":[{"id":6069,"name":"title","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":272,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.title"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.title"}},{"id":6070,"name":"name","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":278,"character":10}],"signatures":[{"id":6071,"name":"name","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":278,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.name"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.name"}},{"id":6072,"name":"url","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":284,"character":10}],"signatures":[{"id":6073,"name":"url","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":284,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/url.d.ts","qualifiedName":"\\"url\\".URL"},"name":"URL","package":"@types/node","qualifiedName":"\\"url\\".URL"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.url"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.url"}},{"id":6074,"name":"viewportSize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":290,"character":10}],"signatures":[{"id":6075,"name":"viewportSize","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":290,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reflection","declaration":{"id":6076,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":6077,"name":"width","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":290,"character":36}],"type":{"type":"intrinsic","name":"number"}},{"id":6078,"name":"height","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":290,"character":51}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[6077,6078]}],"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":290,"character":34}]}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.viewportSize"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.viewportSize"}},{"id":6079,"name":"setViewportSize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":308,"character":10}],"signatures":[{"id":6080,"name":"setViewportSize","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":308,"character":10}],"parameters":[{"id":6081,"name":"size","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":6082,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":6083,"name":"width","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":308,"character":34}],"type":{"type":"intrinsic","name":"number"}},{"id":6084,"name":"height","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":308,"character":49}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[6083,6084]}],"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":308,"character":32}]}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.setViewportSize"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.setViewportSize"}},{"id":6085,"name":"close","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":324,"character":10}],"signatures":[{"id":6086,"name":"close","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":324,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.close"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.close"}},{"id":6087,"name":"closeOthers","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":336,"character":10}],"signatures":[{"id":6088,"name":"closeOthers","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":336,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.closeOthers"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.closeOthers"}},{"id":6089,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":340,"character":10}],"signatures":[{"id":6090,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":340,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.isPresent"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.isPresent"}},{"id":6100,"name":"id","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":132,"character":13}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Page.id"}},{"id":6101,"name":"switchTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":432,"character":4}],"signatures":[{"id":6102,"name":"switchTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Switches the current browsing context to the given page\\nand returns an object that allows the caller to switch back\\nto the previous context when needed.\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Switch`"},{"kind":"text","text":"](/api/web/class/Switch/)\\n- ["},{"kind":"code","text":"`Switchable`"},{"kind":"text","text":"](/api/web/interface/Switchable/)"}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":432,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4801,"name":"SwitchableOrigin","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Page.switchTo"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Page.switchTo"}},{"id":6103,"name":"modalDialog","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":444,"character":4}],"signatures":[{"id":6104,"name":"modalDialog","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the ["},{"kind":"code","text":"`ModalDialogHandler`"},{"kind":"text","text":"](/api/web/class/ModalDialogHandler/) for the current ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/)."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":444,"character":4}],"type":{"type":"reference","target":4105,"name":"ModalDialogHandler","package":"@serenity-js/web"},"inheritedFrom":{"type":"reference","target":-1,"name":"Page.modalDialog"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Page.modalDialog"}},{"id":6105,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":448,"character":4}],"signatures":[{"id":6106,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a description of this Page and its ID."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":448,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Page.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Page.toString"}}],"groups":[{"title":"Constructors","children":[6000]},{"title":"Properties","children":[6100]},{"title":"Methods","children":[6011,6014,6017,6020,6023,6026,6028,6030,6032,6035,6044,6056,6058,6060,6063,6066,6068,6070,6072,6074,6079,6085,6087,6089,6101,6103,6105]}],"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":22,"character":13}],"extendedTypes":[{"type":"reference","target":4237,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/protractor/built/element.d.ts","qualifiedName":"ElementFinder"},"name":"protractor.ElementFinder","package":"protractor","qualifiedName":"ElementFinder"}],"name":"Page","package":"@serenity-js/web"}],"permalink":"/api/protractor/class/ProtractorPage","previousId":5883,"nextId":6107},{"id":6107,"name":"ProtractorPageElement","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Protractor-specific implementation of ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)."}]},"children":[{"id":6127,"name":"of","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":18,"character":4}],"signatures":[{"id":6128,"name":"of","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":18,"character":4}],"parameters":[{"id":6129,"name":"parent","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":6107,"name":"ProtractorPageElement","package":"@serenity-js/protractor"}}],"type":{"type":"reference","target":4353,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/protractor/built/element.d.ts","qualifiedName":"ElementFinder"},"name":"ElementFinder","package":"protractor"}],"name":"PageElement","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.of"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.of"}},{"id":6130,"name":"closestTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":22,"character":4}],"signatures":[{"id":6131,"name":"closestTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":22,"character":4}],"parameters":[{"id":6132,"name":"child","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":6107,"name":"ProtractorPageElement","package":"@serenity-js/protractor"}}],"type":{"type":"reference","target":6107,"name":"ProtractorPageElement","package":"@serenity-js/protractor"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.closestTo"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.closestTo"}},{"id":6133,"name":"clearValue","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":26,"character":10}],"signatures":[{"id":6134,"name":"clearValue","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":26,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.clearValue"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.clearValue"}},{"id":6135,"name":"click","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":67,"character":10}],"signatures":[{"id":6136,"name":"click","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":67,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.click"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.click"}},{"id":6137,"name":"doubleClick","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":73,"character":10}],"signatures":[{"id":6138,"name":"doubleClick","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":73,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.doubleClick"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.doubleClick"}},{"id":6139,"name":"enterValue","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":84,"character":10}],"signatures":[{"id":6140,"name":"enterValue","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":84,"character":10}],"parameters":[{"id":6141,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.enterValue"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.enterValue"}},{"id":6142,"name":"scrollIntoView","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":92,"character":10}],"signatures":[{"id":6143,"name":"scrollIntoView","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":92,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.scrollIntoView"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.scrollIntoView"}},{"id":6144,"name":"hoverOver","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":101,"character":10}],"signatures":[{"id":6145,"name":"hoverOver","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":101,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.hoverOver"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.hoverOver"}},{"id":6146,"name":"rightClick","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":112,"character":10}],"signatures":[{"id":6147,"name":"rightClick","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":112,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.rightClick"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.rightClick"}},{"id":6148,"name":"selectOptions","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":123,"character":10}],"signatures":[{"id":6149,"name":"selectOptions","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":123,"character":10}],"parameters":[{"id":6150,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":4668,"name":"SelectOption","package":"@serenity-js/web"}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.selectOptions"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.selectOptions"}},{"id":6151,"name":"selectedOptions","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":136,"character":10}],"signatures":[{"id":6152,"name":"selectedOptions","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":136,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4668,"name":"SelectOption","package":"@serenity-js/web"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.selectedOptions"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.selectedOptions"}},{"id":6153,"name":"attribute","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":166,"character":10}],"signatures":[{"id":6154,"name":"attribute","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":166,"character":10}],"parameters":[{"id":6155,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.attribute"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.attribute"}},{"id":6156,"name":"text","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":172,"character":10}],"signatures":[{"id":6157,"name":"text","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":172,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.text"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.text"}},{"id":6158,"name":"value","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":178,"character":10}],"signatures":[{"id":6159,"name":"value","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":178,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.value"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.value"}},{"id":6160,"name":"html","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":191,"character":10}],"signatures":[{"id":6161,"name":"html","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":191,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.html"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.html"}},{"id":6162,"name":"switchTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":200,"character":10}],"signatures":[{"id":6163,"name":"switchTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":200,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4801,"name":"SwitchableOrigin","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.switchTo"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.switchTo"}},{"id":6164,"name":"isActive","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":236,"character":10}],"signatures":[{"id":6165,"name":"isActive","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":236,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.isActive"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.isActive"}},{"id":6166,"name":"isClickable","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":245,"character":10}],"signatures":[{"id":6167,"name":"isClickable","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":245,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.isClickable"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.isClickable"}},{"id":6168,"name":"isEnabled","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":249,"character":10}],"signatures":[{"id":6169,"name":"isEnabled","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":249,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.isEnabled"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.isEnabled"}},{"id":6170,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":255,"character":10}],"signatures":[{"id":6171,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":255,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.isPresent"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.isPresent"}},{"id":6172,"name":"isSelected","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":261,"character":10}],"signatures":[{"id":6173,"name":"isSelected","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":261,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.isSelected"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.isSelected"}},{"id":6174,"name":"isVisible","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":267,"character":10}],"signatures":[{"id":6175,"name":"isVisible","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":267,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.isVisible"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.isVisible"}},{"id":6176,"name":"locator","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":19,"character":13}],"type":{"type":"reference","target":4187,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/protractor/built/element.d.ts","qualifiedName":"ElementFinder"},"name":"ElementFinder","package":"protractor"},{"type":"intrinsic","name":"any"}],"name":"Locator","package":"@serenity-js/web"},"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement.locator"}},{"id":6124,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":46,"character":4}],"signatures":[{"id":6125,"name":"new ProtractorPageElement","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":46,"character":4}],"parameters":[{"id":6126,"name":"locator","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4187,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/protractor/built/element.d.ts","qualifiedName":"ElementFinder"},"name":"ElementFinder","package":"protractor"},{"type":"intrinsic","name":"any"}],"name":"Locator","package":"@serenity-js/web"}}],"type":{"type":"reference","target":6107,"name":"ProtractorPageElement","package":"@serenity-js/protractor"},"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement<ElementFinder>.constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement<ElementFinder>.constructor"}},{"id":6177,"name":"nativeElement","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":107,"character":4}],"signatures":[{"id":6178,"name":"nativeElement","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An \\"escape hatch\\" providing access to the integration tool-specific implementation of a Web element."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":107,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/protractor/built/element.d.ts","qualifiedName":"ElementFinder"},"name":"ElementFinder","package":"protractor"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement.nativeElement"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement.nativeElement"}},{"id":6179,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":108,"character":4}],"signatures":[{"id":6180,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":108,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement.toString"}}],"groups":[{"title":"Constructors","children":[6124]},{"title":"Properties","children":[6176]},{"title":"Methods","children":[6127,6130,6133,6135,6137,6139,6142,6144,6146,6148,6151,6153,6156,6158,6160,6162,6164,6166,6168,6170,6172,6174,6177,6179]}],"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":16,"character":13}],"extendedTypes":[{"type":"reference","target":4353,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/protractor/built/element.d.ts","qualifiedName":"ElementFinder"},"name":"ElementFinder","package":"protractor"}],"name":"PageElement","package":"@serenity-js/web"}],"permalink":"/api/protractor/class/ProtractorPageElement","previousId":5988,"nextId":6181},{"id":6181,"name":"ProtractorParam","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a Protractor configuration parameter specified in "},{"kind":"code","text":"`protractor.conf.js`"},{"kind":"text","text":"\\nand identified by name. Protractor configuration parameters can be overridden via the command line.\\n\\n**Warning:** this question is Protractor-specific, so using it in your tests\\nwill reduce their portability across test integration tools.\\n\\n"},{"kind":"code","text":"```js\\n// protractor.conf.js\\nexports.config = {\\n  params: {\\n    login: {\\n      username: \'jane@example.org\'\\n      password: process.env.PASSWORD\\n    }\\n  }\\n  // ...\\n}\\n```"},{"kind":"text","text":"\\n\\n## Overriding configuration parameter using the command line\\n\\n"},{"kind":"code","text":"```shell\\nnpx protractor ./protractor.conf.js --params.login.username=\\"bob@example.org\\"\\n```"},{"kind":"text","text":"\\n\\n## Using as "},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { BrowseTheWebWithProtractor, ProtractorParam } from \'@serenity-js/protractor\'\\nimport { Enter } from \'@serenity-js/web\'\\nimport { protractor } from \'protractor\'\\n\\nawait actorCalled(\'Jane\')\\n  .whoCan( BrowseTheWebWithProtractor.using(protractor.browser))\\n  .attemptsTo(\\n    Enter.theValue(ProtractorParam.called(\'login\').username).into(Form.exampleInput),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Specifying path to param as string\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { BrowseTheWebWithProtractor, ProtractorParam } from \'@serenity-js/protractor\'\\nimport { Enter } from \'@serenity-js/web\'\\nimport { protractor } from \'protractor\\n\\nawait actorCalled(\'Jane\')\\n  .whoCan(BrowseTheWebWithProtractor.using(protractor.browser))\\n  .attemptsTo(\\n    Enter.theValue(ProtractorParam.called(\'login.username\')).into(Form.exampleInput),\\n  );\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`BrowseTheWebWithProtractor.param`"},{"kind":"text","text":"](/api/protractor/class/BrowseTheWebWithProtractor/#param)"}]},"children":[{"id":6182,"name":"called","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/questions/ProtractorParam.ts","line":76,"character":11}],"signatures":[{"id":6183,"name":"called","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Name of the parameter to retrieve. This could also be a dot-delimited path,\\ne.g. "},{"kind":"code","text":"`login.username`"}]},"sources":[{"fileName":"packages/protractor/src/screenplay/questions/ProtractorParam.ts","line":76,"character":11}],"typeParameter":[{"id":6184,"name":"Return_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":6185,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1041,"typeArguments":[{"type":"reference","target":6184,"name":"Return_Type","package":"@serenity-js/protractor","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":6186,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":6187,"name":"new ProtractorParam","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":6181,"name":"ProtractorParam","package":"@serenity-js/protractor"}}]}],"groups":[{"title":"Constructors","children":[6186]},{"title":"Methods","children":[6182]}],"sources":[{"fileName":"packages/protractor/src/screenplay/questions/ProtractorParam.ts","line":68,"character":13}],"permalink":"/api/protractor/class/ProtractorParam","previousId":6107}],"groups":[{"title":"Abilities","children":[5813]},{"title":"Activities","children":[5843]},{"title":"Models","children":[5850,5883,5988,6107]},{"title":"Questions","children":[6181]}],"sources":[{"fileName":"packages/protractor/src/index.ts","line":1,"character":0}],"permalink":"/api/protractor"},"urlSlug":"protractor"}],"packageName":"@serenity-js/protractor","packageVersion":"3.26.0"},{"entryPoints":[{"index":true,"label":"Index","reflection":{"id":27,"name":"@serenity-js/rest","variant":"declaration","kind":2,"flags":{"isExternal":true},"children":[{"id":6863,"name":"AxiosRequestConfigProxyDefaults","variant":"declaration","kind":2097152,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/io/AxiosRequestConfigDefaults.ts","line":3,"character":12}],"type":{"type":"reflection","declaration":{"id":6864,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":6865,"name":"host","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/io/AxiosRequestConfigDefaults.ts","line":4,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":6866,"name":"port","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/rest/src/io/AxiosRequestConfigDefaults.ts","line":5,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":6867,"name":"auth","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/rest/src/io/AxiosRequestConfigDefaults.ts","line":6,"character":4}],"type":{"type":"reflection","declaration":{"id":6868,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":6869,"name":"username","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/io/AxiosRequestConfigDefaults.ts","line":7,"character":8}],"type":{"type":"intrinsic","name":"string"}},{"id":6870,"name":"password","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/io/AxiosRequestConfigDefaults.ts","line":8,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[6869,6870]}],"sources":[{"fileName":"packages/rest/src/io/AxiosRequestConfigDefaults.ts","line":6,"character":11}]}}},{"id":6871,"name":"protocol","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/rest/src/io/AxiosRequestConfigDefaults.ts","line":10,"character":4}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[6865,6866,6867,6871]}],"sources":[{"fileName":"packages/rest/src/io/AxiosRequestConfigDefaults.ts","line":3,"character":46}]}},"permalink":"/api/rest#AxiosRequestConfigProxyDefaults","previousId":22120,"nextId":6872},{"id":6872,"name":"AxiosRequestConfigDefaults","variant":"declaration","kind":2097152,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/io/AxiosRequestConfigDefaults.ts","line":13,"character":12}],"typeParameters":[{"id":6875,"name":"Data","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"any"}}],"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"CreateAxiosDefaults"},"typeArguments":[{"type":"reference","target":6875,"name":"Data","package":"@serenity-js/rest","refersToTypeParameter":true}],"name":"CreateAxiosDefaults","package":"axios"},{"type":"literal","value":"proxy"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reflection","declaration":{"id":6873,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":6874,"name":"proxy","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/rest/src/io/AxiosRequestConfigDefaults.ts","line":14,"character":4}],"type":{"type":"union","types":[{"type":"reference","target":6863,"name":"AxiosRequestConfigProxyDefaults","package":"@serenity-js/rest"},{"type":"literal","value":false}]}}],"groups":[{"title":"Properties","children":[6874]}],"sources":[{"fileName":"packages/rest/src/io/AxiosRequestConfigDefaults.ts","line":13,"character":96}]}}]},"permalink":"/api/rest#AxiosRequestConfigDefaults","previousId":6863},{"id":6876,"name":"createAxios","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/io/createAxios.ts","line":12,"character":16}],"signatures":[{"id":6877,"name":"createAxios","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates an Axios instance with desired configuration and proxy support."}]},"sources":[{"fileName":"packages/rest/src/io/createAxios.ts","line":12,"character":16}],"parameters":[{"id":6878,"name":"axiosInstanceOrConfig","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosInstance"},"name":"AxiosInstance","package":"axios"},{"type":"reference","target":6872,"name":"AxiosRequestConfigDefaults","package":"@serenity-js/rest"}]},"defaultValue":"{}"}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosInstance"},"name":"AxiosInstance","package":"axios"}}],"permalink":"/api/rest/function/createAxios","previousId":6934,"nextId":6978},{"id":6879,"name":"CallAnApi","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An [ability](/api/core/class/Ability/) that wraps [axios client](https://axios-http.com/docs/api_intro) and enables\\nthe [actor](/api/core/class/Actor/) to [send](/api/rest/class/Send/)\\n[HTTP requests](/api/rest/class/HTTPRequest/) to HTTP APIs.\\n\\n"},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":" uses ["},{"kind":"code","text":"`proxy-from-env`"},{"kind":"text","text":"](https://www.npmjs.com/package/proxy-from-env) and an approach\\ndescribed in [\\"Node.js Axios behind corporate proxies\\"](https://janmolak.com/node-js-axios-behind-corporate-proxies-8b17a6f31f9d)\\nto automatically detect proxy server configuration based\\non your [environment variables](https://www.npmjs.com/package/proxy-from-env#environment-variables).\\nYou can override this configuration if needed.\\n\\n## Configuring the ability to call an API\\n\\nThe easiest way to configure the ability to "},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":" is to provide the "},{"kind":"code","text":"`baseURL`"},{"kind":"text","text":" of your HTTP API,\\nand rely on Serenity/JS to offer other sensible defaults:\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, GetRequest, LastResponse, Send } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(\\n    CallAnApi.at(\'https://api.example.org/\')\\n  )\\n  .attemptsTo(\\n    Send.a(GetRequest.to(\'/v1/users/2\')),            // GET https://api.example.org/v1/users/2\\n    Ensure.that(LastResponse.status(), equals(200)),\\n  )\\n```"},{"kind":"text","text":"\\n\\n### Resolving relative URLs\\n\\nSerenity/JS resolves request URLs using Node.js [WHATWG URL API](https://nodejs.org/api/url.html#new-urlinput-base).\\nThis means that the request URL is determined using the resource path resolved in the context of base URL, i.e. "},{"kind":"code","text":"`new URL(resourcePath, [baseURL])`"},{"kind":"text","text":".\\n\\nConsider the following example:\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, GetRequest, LastResponse, Send } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(\\n    CallAnApi.at(baseURL)\\n  )\\n  .attemptsTo(\\n    Send.a(GetRequest.to(resourcePath)),\\n    Ensure.that(LastResponse.status(), equals(200)),\\n  )\\n```"},{"kind":"text","text":"\\n\\nIn the above example:\\n- when "},{"kind":"code","text":"`resourcePath`"},{"kind":"text","text":" is defined as a full URL, it overrides the base URL\\n- when "},{"kind":"code","text":"`resourcePath`"},{"kind":"text","text":" starts with a forward slash "},{"kind":"code","text":"`/`"},{"kind":"text","text":", it replaces any path defined in the base URL\\n- when "},{"kind":"code","text":"`resourcePath`"},{"kind":"text","text":" is not a full URL and doesn\'t start with a forward slash, it gets appended to the base URL\\n\\n| baseURL                       | resourcePath               | result                               |\\n| ----------------------------- | -------------------------- | ------------------------------------ |\\n| "},{"kind":"code","text":"`https://api.example.org/`"},{"kind":"text","text":"    | "},{"kind":"code","text":"`/v1/users/2`"},{"kind":"text","text":"              | "},{"kind":"code","text":"`https://api.example.org/v1/users/2`"},{"kind":"text","text":" |\\n| "},{"kind":"code","text":"`https://example.org/api/v1/`"},{"kind":"text","text":" | "},{"kind":"code","text":"`users/2`"},{"kind":"text","text":"                  | "},{"kind":"code","text":"`https://example.org/api/v1/users/2`"},{"kind":"text","text":" |\\n| "},{"kind":"code","text":"`https://example.org/api/v1/`"},{"kind":"text","text":" | "},{"kind":"code","text":"`/secure/oauth`"},{"kind":"text","text":"            | "},{"kind":"code","text":"`https://example.org/secure/oauth`"},{"kind":"text","text":"   |\\n| "},{"kind":"code","text":"`https://v1.example.org/api/`"},{"kind":"text","text":" | "},{"kind":"code","text":"`https://v2.example.org/`"},{"kind":"text","text":"  | "},{"kind":"code","text":"`https://v2.example.org/`"},{"kind":"text","text":"            |\\n\\n### Using Axios configuration object\\n\\nWhen you need more control over how your Axios instance is configured, provide\\nan [Axios configuration object](https://axios-http.com/docs/req_config). For example:\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, GetRequest, LastResponse, Send } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(\\n    CallAnApi.using({\\n      baseURL: \'https://api.example.org/\',\\n      timeout: 30_000,\\n      // ... other configuration options\\n    })\\n  )\\n  .attemptsTo(\\n    Send.a(GetRequest.to(\'/users/2\')),\\n    Ensure.that(LastResponse.status(), equals(200)),\\n  )\\n```"},{"kind":"text","text":"\\n\\n### Working with proxy servers\\n\\n"},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":" uses ["},{"kind":"code","text":"`proxy-from-env`"},{"kind":"text","text":"](https://www.npmjs.com/package/proxy-from-env) to automatically\\ndetect proxy server configuration based on your [environment variables](https://www.npmjs.com/package/proxy-from-env#environment-variables).\\n\\nThis default behaviour can be overridden by providing explicit proxy configuration:\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, GetRequest, LastResponse, Send } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(\\n    CallAnApi.using({\\n      baseURL: \'https://api.example.org/\',\\n      proxy: {\\n        protocol: \'http\',\\n        host: \'proxy.example.org\',\\n        port: 9000,\\n        auth: {                          // `auth` is optional\\n          username: \'proxy-username\',\\n          password: \'proxy-password\',\\n        }\\n      }\\n      // ... other configuration options\\n    })\\n  )\\n  .attemptsTo(\\n    Send.a(GetRequest.to(\'/users/2\')),\\n    Ensure.that(LastResponse.status(), equals(200)),\\n  )\\n```"},{"kind":"text","text":"\\n\\nPlease note that Serenity/JS uses [proxy-agents](https://github.com/TooTallNate/proxy-agents)\\nand the approach described in [\\"Node.js Axios behind corporate proxies\\"](https://janmolak.com/node-js-axios-behind-corporate-proxies-8b17a6f31f9d)\\nto work around [limited proxy support capabilities](https://github.com/axios/axios/issues?q=is%3Aissue+is%3Aopen+proxy) in Axios itself.\\n\\n### Using Axios instance with proxy support\\n\\nTo have full control over the Axios instance used by the ability to "},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":", you can create it yourself\\nand inject it into the ability.\\nThis approach allows you to still benefit from automated proxy detection in configuration, while taking advantage\\nof the many [Axios plugins](https://www.npmjs.com/search?q=axios).\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { createAxios, CallAnApi, GetRequest, LastResponse, Send } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nimport axiosRetry from \'axios-retry\'\\n\\nconst instance = createAxios({ baseURL \'https://api.example.org/\' })\\naxiosRetry(instance, { retries: 3 })\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(\\n    CallAnApi.using(instance)\\n  )\\n  .attemptsTo(\\n    Send.a(GetRequest.to(\'/users/2\')),\\n    Ensure.that(LastResponse.status(), equals(200)),\\n  )\\n```"},{"kind":"text","text":"\\n\\n### Using raw Axios instance\\n\\nIf you don\'t want Serenity/JS to enhance your Axios instance with proxy support, instantiate the ability to\\n"},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":" using its constructor directly.\\nNote, however, that by using this approach you\'re taking the responsibility for all the aspects of configuring Axios.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, GetRequest, LastResponse, Send } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nimport { axiosCreate } from \'@serenity-js/rest\'\\nimport axiosRetry from \'axios-retry\'\\n\\nconst instance = axiosCreate({ baseURL \'https://api.example.org/\' })\\naxiosRetry(instance, { retries: 3 })\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(\\n    new CallAnApi(instance)     // using the constructor ensures your axios instance is not modified in any way.\\n  )\\n  .attemptsTo(\\n    // ...\\n  )\\n```"},{"kind":"text","text":"\\n\\n### Serenity/JS defaults\\n\\nWhen using ["},{"kind":"code","text":"`CallAnApi.at`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/#at) or ["},{"kind":"code","text":"`CallAnApi.using`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/#using) with a configuration object, Serenity/JS\\nmerges your [Axios request configuration](https://axios-http.com/docs/req_config) with the following defaults:\\n- "},{"kind":"code","text":"`timeout`"},{"kind":"text","text":": 10 seconds\\n\\n\\nYou can override them by specifying the given property in your configuration object, for example:\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, GetRequest, LastResponse, Send } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(\\n    CallAnApi.using({\\n      baseURL: \'https://api.example.org/\',\\n      timeout: 30_000\\n    })\\n  )\\n  .attemptsTo(\\n    Send.a(GetRequest.to(\'/users/2\')),\\n    Ensure.that(LastResponse.status(), equals(200)),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Interacting with multiple APIs\\n\\nSome test scenarios might require you to interact with multiple HTTP APIs. With Serenity/JS you can do this\\nusing either API-specific actors, or by specifying full URLs when performing the requests.\\n\\nThe following examples will assume that the test scenarios needs to interact with the following APIs:\\n- "},{"kind":"code","text":"`https://testdata.example.org/api/v1/`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`https://shop.example.org/api/v1/`"},{"kind":"text","text":"\\n\\nLet\'s also assume that the "},{"kind":"code","text":"`testdata`"},{"kind":"text","text":" API allows the automation to manage the test data used by the "},{"kind":"code","text":"`shop`"},{"kind":"text","text":" API.\\n\\n### Using API-specific actors\\n\\nTo create API-specific actors, configure your [test runner](/handbook/test-runners/) with a [cast](/api/core/class/Cast/)\\nthat gives your actors appropriate abilities based, for example, on their name:\\n\\n"},{"kind":"code","text":"```ts\\nimport { beforeEach } from \'mocha\'\\nimport { Actor, Cast, engage } from \'@serenity-js/core\'\\nimport { CallAnApi } from \'@serenity-js/rest\'\\n\\nexport class MyActors implements Cast {\\n  prepare(actor: Actor): Actor {\\n    switch(actor.name) {\\n      case \'Ted\':\\n        return actor.whoCan(CallAnApi.at(\'https://testdata.example.org/api/v1/\'))\\n      case \'Shelly\':\\n        return actor.whoCan(CallAnApi.at(\'https://shop.example.org/api/v1/\'))\\n      default:\\n        return actor;\\n    }\\n  }\\n}\\n\\nbeforeEach(() => engage(new MyActors()))\\n```"},{"kind":"text","text":"\\n\\nNext, retrieve the appropriate actor in your test scenario using ["},{"kind":"code","text":"`actorCalled`"},{"kind":"text","text":"](/api/core/function/actorCalled/), for example:\\n\\n"},{"kind":"code","text":"```ts\\nimport { describe, it, beforeEach } from \'mocha\'\\nimport { actorCalled, engage } from \'@serenity-js/core\\nimport { Send, GetRequest, PostRequest, LastResponse } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\ndescribe(\'Multi-actor API testing\', () => {\\n  beforeEach(() => engage(new MyActors()))\\n\\n  it(\'allows each actor to interact with their API\', async () => {\\n\\n    await actorCalled(\'Ted\').attemptsTo(\\n      Send.a(PostRequest.to(\'products\').with({ name: \'Apples\', price: \'\xa32.50\' })),\\n      Ensure.that(LastResponse.status(), equals(201)),\\n    )\\n\\n    await actorCalled(\'Shelly\').attemptsTo(\\n      Send.a(GetRequest.to(\'?product=Apples\')),\\n      Ensure.that(LastResponse.status(), equals(200)),\\n      Ensure.that(LastResponse.body(), equals([\\n        { name: \'Apples\', price: \'\xa32.50\' }\\n      ])),\\n    )\\n  })\\n})\\n```"},{"kind":"text","text":"\\n\\n### Using full URLs\\n\\nIf you prefer to have a single actor interacting with multiple APIs, you can specify the full URL for every request:\\n\\n"},{"kind":"code","text":"```ts\\nimport { describe, it, beforeEach } from \'mocha\'\\nimport { actorCalled, Cast, engage } from \'@serenity-js/core\\nimport { CallAnApi, Send, GetRequest, PostRequest, LastResponse } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\ndescribe(\'Multi-actor API testing\', () => {\\n  beforeEach(() => engage(\\n    Cast.where(actor => actor.whoCan(CallAnApi.using({})))\\n  ))\\n\\n  it(\'allows each actor to interact with their API\', async () => {\\n\\n    await actorCalled(\'Alice\').attemptsTo(\\n      Send.a(PostRequest.to(\'https://testdata.example.org/api/v1/products\')\\n        .with({ name: \'Apples\', price: \'\xa32.50\' })),\\n      Ensure.that(LastResponse.status(), equals(201)),\\n\\n      Send.a(GetRequest.to(\'https://shop.example.org/api/v1/?product=Apples\')),\\n      Ensure.that(LastResponse.status(), equals(200)),\\n      Ensure.that(LastResponse.body(), equals([\\n        { name: \'Apples\', price: \'\xa32.50\' }\\n      ])),\\n    )\\n  })\\n})\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- [Axios: Configuring requests](https://axios-http.com/docs/req_config)\\n- [MDN: HTTP methods documentation](https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods)"}]},"children":[{"id":6880,"name":"at","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":344,"character":11}],"signatures":[{"id":6881,"name":"at","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Produces an [ability](/api/core/class/Ability/) to call a REST API at a specified "},{"kind":"code","text":"`baseURL`"},{"kind":"text","text":";\\n\\nThis is the same as invoking "},{"kind":"code","text":"`CallAnApi.using({ baseURL: \'https://example.org\' })`"}]},"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":344,"character":11}],"parameters":[{"id":6882,"name":"baseURL","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/url.d.ts","qualifiedName":"\\"url\\".URL"},"name":"URL","package":"@types/node","qualifiedName":"\\"url\\".URL"}]}}],"type":{"type":"reference","target":6879,"name":"CallAnApi","package":"@serenity-js/rest"}}]},{"id":6883,"name":"using","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":369,"character":11}],"signatures":[{"id":6884,"name":"using","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Produces an [ability](/api/core/class/Ability/) to call an HTTP API using the given Axios instance,\\nor an Axios request configuration object.\\n\\nWhen you provide an [Axios configuration object](https://axios-http.com/docs/req_config),\\nit gets shallow-merged with the following defaults:\\n- request timeout of 10 seconds\\n- automatic proxy support based on\\n  your [environment variables](https://www.npmjs.com/package/proxy-from-env#environment-variables)\\n\\nWhen you provide an Axios instance, it\'s enhanced with proxy support and no other modifications are made.\\n\\nIf you don\'t want Serenity/JS to augment or modify your Axios instance in any way,\\nplease use the ["},{"kind":"code","text":"`CallAnApi.constructor`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/#constructor) directly."}]},"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":369,"character":11}],"parameters":[{"id":6885,"name":"axiosInstanceOrConfig","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosInstance"},"name":"AxiosInstance","package":"axios"},{"type":"reference","target":6872,"name":"AxiosRequestConfigDefaults","package":"@serenity-js/rest"}]}}],"type":{"type":"reference","target":6879,"name":"CallAnApi","package":"@serenity-js/rest"}}]},{"id":6919,"name":"abilityType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/abilities/Ability.ts","line":436,"character":4}],"signatures":[{"id":6920,"name":"abilityType","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the most abstract type of this Ability instance,\\nspecifically the first class in the inheritance hierarchy that directly extends the "},{"kind":"code","text":"`Ability`"},{"kind":"text","text":" class.\\n\\n"},{"kind":"code","text":"```ts\\nimport { Ability } from \'@serenity-js/core\';\\n\\nclass MyAbility extends Ability {}\\nclass MySpecialisedAbility extends MyAbility {}\\n\\nnew MyAbility().abilityType();            // returns MyAbility\\nnew MySpecialisedAbility().abilityType(); // returns MyAbility\\n```"}]},"sources":[{"fileName":"packages/core/lib/screenplay/abilities/Ability.ts","line":436,"character":4}],"type":{"type":"reference","target":511,"typeArguments":[{"type":"reference","target":490,"name":"Ability","package":"@serenity-js/core"}],"name":"AbilityType","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Ability.abilityType"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Ability.abilityType"}},{"id":6893,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":380,"character":4}],"signatures":[{"id":6894,"name":"new CallAnApi","variant":"signature","kind":16384,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"#### Learn more\\n- [AxiosInstance](https://axios-http.com/docs/instance)"}]},"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":380,"character":4}],"parameters":[{"id":6895,"name":"axiosInstance","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A pre-configured instance of the Axios HTTP client"}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosInstance"},"name":"AxiosInstance","package":"axios"}}],"type":{"type":"reference","target":6879,"name":"CallAnApi","package":"@serenity-js/rest"},"overwrites":{"type":"reference","target":-1,"name":"Ability.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"Ability.constructor"}},{"id":6898,"name":"modifyConfig","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":394,"character":4}],"signatures":[{"id":6899,"name":"modifyConfig","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Allows for the original Axios config to be changed after\\nthe [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/)\\nhas been instantiated and given to the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/).\\n\\n#### Learn more\\n- [AxiosRequestConfig](https://axios-http.com/docs/req_config)"}]},"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":394,"character":4}],"parameters":[{"id":6900,"name":"fn","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":6901,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":394,"character":21}],"signatures":[{"id":6902,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":394,"character":21}],"parameters":[{"id":6903,"name":"original","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosDefaults"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosDefaults","package":"axios"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":6904,"name":"request","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":411,"character":10}],"signatures":[{"id":6905,"name":"request","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Sends an HTTP request to a specified url.\\nResponse will be cached and available via ["},{"kind":"code","text":"`CallAnApi.mapLastResponse`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/#mapLastResponse).\\n\\n#### Learn more\\n- [AxiosRequestConfig](https://axios-http.com/docs/req_config)\\n- [AxiosResponse](https://axios-http.com/docs/res_schema)"}]},"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":411,"character":10}],"parameters":[{"id":6906,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Axios request configuration, which can be used to override the defaults\\n provided when the [ability](/api/core/class/Ability/)\\n to ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/) was instantiated."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosResponse"},"typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"AxiosResponse","package":"axios"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":6907,"name":"resolveUrl","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":451,"character":4}],"signatures":[{"id":6908,"name":"resolveUrl","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the final URL, based on the ["},{"kind":"code","text":"`AxiosRequestConfig`"},{"kind":"text","text":"](https://axios-http.com/docs/req_config) provided\\nand any defaults that the ["},{"kind":"code","text":"`AxiosInstance`"},{"kind":"text","text":"](https://axios-http.com/docs/instance) has been configured with.\\n\\nNote that unlike Axios, this method uses the Node.js [WHATWG URL API](https://nodejs.org/api/url.html#new-urlinput-base)\\nto ensure URLs are correctly resolved."}]},"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":451,"character":4}],"parameters":[{"id":6909,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"}}],"type":{"type":"intrinsic","name":"string"}}]},{"id":6910,"name":"mapLastResponse","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":468,"character":4}],"signatures":[{"id":6911,"name":"mapLastResponse","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Maps the last cached response to another type.\\nUseful when you need to extract a portion of the ["},{"kind":"code","text":"`AxiosResponse`"},{"kind":"text","text":"](https://axios-http.com/docs/res_schema) object.\\n\\n#### Learn more\\n- [AxiosResponse](https://axios-http.com/docs/res_schema)"}]},"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":468,"character":4}],"typeParameter":[{"id":6912,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":6913,"name":"mappingFunction","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":6914,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":468,"character":40}],"signatures":[{"id":6915,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":468,"character":40}],"parameters":[{"id":6916,"name":"response","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosResponse"},"typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"AxiosResponse","package":"axios"}}],"type":{"type":"reference","target":6912,"name":"T","package":"@serenity-js/rest","refersToTypeParameter":true}}]}}}],"type":{"type":"reference","target":6912,"name":"T","package":"@serenity-js/rest","refersToTypeParameter":true}}]},{"id":6917,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":476,"character":4}],"signatures":[{"id":6918,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":476,"character":4}],"type":{"type":"reference","target":596,"name":"SerialisedAbility","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"Ability.toJSON"}}],"overwrites":{"type":"reference","target":-1,"name":"Ability.toJSON"}}],"groups":[{"title":"Constructors","children":[6893]},{"title":"Methods","children":[6880,6883,6919,6898,6904,6907,6910,6917]}],"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":333,"character":13}],"extendedTypes":[{"type":"reference","target":490,"name":"Ability","package":"@serenity-js/core"}],"permalink":"/api/rest/class/CallAnApi","nextId":6921},{"id":6921,"name":"ChangeApiConfig","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Changes configuration of the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/)\\nthat the [actor](/api/core/class/Actor/) executing this [interaction](/api/core/class/Interaction/) has been configured with.\\n\\n## Changing API URL for all subsequent requests\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\';\\nimport { By Navigate, PageElement, Text } from \'@serenity-js/web\';\\nimport { axiosCreate, CallAnApi, ChangeApiConfig, GetRequest, LastResponse, Send } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\';\\n\\nimport * as axios from \'axios\';\\n\\n// Let\'s imagine that the website under test displays\\n// a dynamically generated API URL that we would like to use\\nconst ApiDetailsWidget = {\\n  url: () => PageElement.located(By.id(\'api-url\')).describedAs(\'API URL\'),\\n}\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(\\n    BrowseTheWeb.using(protractor.browser),\\n\\n    // Note: no default base URL is given when the axios instance is created\\n    CallAnApi.using(axiosCreate()),\\n  )\\n  .attemptsTo(\\n    Navigate.to(\'/profile\'),\\n\\n    // We change the API URL based on the text displayed in the widget\\n    // (although we could change it to some arbitrary string too).\\n    ChangeApiConfig.setUrlTo(Text.of(ApiDetailsWidget.url())),\\n\\n    // Any subsequent request will be sent to the newly set URL\\n    Send.a(GetRequest.to(\'/projects\')),\\n    Ensure.that(LastResponse.status(), equals(200)),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Changing API port for all subsequent requests\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { LocalServer, ManageALocalServer, StartLocalServer } from \'@serenity-js/local-server\'\\nimport { CallAnApi, ChangeApiConfig, GetRequest, LastResponse, Send } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(\\n    ManageALocalServer.runningAHttpListener(someServer),\\n    CallAnApi.at(\'http://localhost\'),\\n  )\\n  .attemptsTo(\\n    StartALocalServer.onRandomPort(),\\n    ChangeApiConfig.setPortTo(LocalServer.port()),\\n    Send.a(GetRequest.to(\'/api\')),\\n    Ensure.that(LastResponse.status(), equals(200)),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Setting a header for all subsequent requests\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Question } from \'@serenity-js/core\'\\nimport { CallAnApi, ChangeApiConfig, GetRequest, LastResponse, Send } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\n// A sample Question reading a Node process environment variable\\nconst EnvVar = (var_name: string) =>\\n    Question.about(`${ name } environment variable`, actor => process.env[var_name]);\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(\\n    CallAnApi.at(\'http://localhost\'),\\n  )\\n  .attemptsTo(\\n    ChangeApiConfig.setHeader(\'Authorization\', EnvVar(\'TOKEN\')),\\n    Send.a(GetRequest.to(\'/api\')),\\n    Ensure.that(LastResponse.status(), equals(200)),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Handling sensitive information\\n\\nBy design, any data handled by an actor appears in Serenity/JS reports.\\nTo prevent the exposure of any sensitive information, such as passwords or tokens, you should use ["},{"kind":"code","text":"`Masked`"},{"kind":"text","text":"](/api/core/class/Masked/).\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Masked } from \'@serenity-js/core\'\\nimport { CallAnApi, ChangeApiConfig, GetRequest, LastResponse, Send } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(\\n    CallAnApi.at(\'http://localhost\'),\\n  )\\n  .attemptsTo(\\n    ChangeApiConfig.setHeader(\'Authorization\', Masked.valueOf(\'secret token\')),\\n    Send.a(GetRequest.to(\'/api\')),\\n    Ensure.that(LastResponse.status(), equals(200)),\\n  )\\n```"}]},"children":[{"id":6922,"name":"setUrlTo","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/interactions/ChangeApiConfig.ts","line":121,"character":11}],"signatures":[{"id":6923,"name":"setUrlTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the [actor](/api/core/class/Actor/) to change the base URL\\nof their [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/)"}]},"sources":[{"fileName":"packages/rest/src/screenplay/interactions/ChangeApiConfig.ts","line":121,"character":11}],"parameters":[{"id":6924,"name":"newApiUrl","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":793,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":6925,"name":"setPortTo","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/interactions/ChangeApiConfig.ts","line":131,"character":11}],"signatures":[{"id":6926,"name":"setPortTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the [actor](/api/core/class/Actor/) to change the port configured in the base URL\\nof their [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/)"}]},"sources":[{"fileName":"packages/rest/src/screenplay/interactions/ChangeApiConfig.ts","line":131,"character":11}],"parameters":[{"id":6927,"name":"newApiPort","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":793,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":6928,"name":"setHeader","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/interactions/ChangeApiConfig.ts","line":144,"character":11}],"signatures":[{"id":6929,"name":"setHeader","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the [actor](/api/core/class/Actor/) to change the configuration of the ["},{"kind":"code","text":"`AxiosInstance`"},{"kind":"text","text":"](https://axios-http.com/docs/instance)\\nused by their [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/)\\nand set an HTTP request header for any subsequent [HTTP requests](/api/rest/class/HTTPRequest/)\\nissued via ["},{"kind":"code","text":"`Send`"},{"kind":"text","text":"](/api/rest/class/Send/)."}]},"sources":[{"fileName":"packages/rest/src/screenplay/interactions/ChangeApiConfig.ts","line":144,"character":11}],"parameters":[{"id":6930,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":6931,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":793,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":6932,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":6933,"name":"new ChangeApiConfig","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":6921,"name":"ChangeApiConfig","package":"@serenity-js/rest"}}]}],"groups":[{"title":"Constructors","children":[6932]},{"title":"Methods","children":[6922,6925,6928]}],"sources":[{"fileName":"packages/rest/src/screenplay/interactions/ChangeApiConfig.ts","line":113,"character":13}],"permalink":"/api/rest/class/ChangeApiConfig","previousId":6879,"nextId":6934},{"id":6934,"name":"Send","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Sends a ["},{"kind":"code","text":"`HTTPRequest`"},{"kind":"text","text":"](/api/rest/class/HTTPRequest/) to a specified URL.\\n\\nThe response to the request is made available via ["},{"kind":"code","text":"`LastResponse`"},{"kind":"text","text":"](/api/rest/class/LastResponse/).\\n\\n## Send a GET request\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, GetRequest, LastResponse, Send } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(CallAnApi.at(\'https://api.example.org/\'))\\n  .attemptsTo(\\n    Send.a(GetRequest.to(\'/books/0-688-00230-7\')),\\n    Ensure.that(LastResponse.status(), equals(200)),\\n  )\\n```"}]},"children":[{"id":6935,"name":"a","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/interactions/Send.ts","line":42,"character":11}],"signatures":[{"id":6936,"name":"a","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a new [interaction](/api/core/class/Interaction/) to ["},{"kind":"code","text":"`Send`"},{"kind":"text","text":"](/api/rest/class/Send/).\\n\\n#### Learn more\\n- [AxiosRequestConfig](https://axios-http.com/docs/req_config)"}]},"sources":[{"fileName":"packages/rest/src/screenplay/interactions/Send.ts","line":42,"character":11}],"parameters":[{"id":6937,"name":"request","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":688,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":793,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":6964,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"signatures":[{"id":6965,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.instantiationLocation"}},{"id":6966,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":6967,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":6968,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1049,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":600,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":6969,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":6970,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[6970]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.describedBy"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.describedBy"}},{"id":6976,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":6977,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.toString"}},{"id":6952,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/interactions/Send.ts","line":56,"character":4}],"signatures":[{"id":6953,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/rest/src/screenplay/interactions/Send.ts","line":56,"character":4}],"parameters":[{"id":6954,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":600,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":692,"name":"CollectsArtifacts","package":"@serenity-js/core"},{"type":"reference","target":1049,"name":"AnswersQuestions","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Interaction.performAs"}}],"overwrites":{"type":"reference","target":-1,"name":"Interaction.performAs"}}],"groups":[{"title":"Methods","children":[6935,6964,6966,6976,6952]}],"sources":[{"fileName":"packages/rest/src/screenplay/interactions/Send.ts","line":32,"character":13}],"extendedTypes":[{"type":"reference","target":793,"name":"Interaction","package":"@serenity-js/core"}],"permalink":"/api/rest/class/Send","previousId":6921,"nextId":6876},{"id":6978,"name":"DeleteRequest","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The DELETE method requests that the origin server remove the\\nassociation between the target resource and its current\\nfunctionality.\\n\\n## Create and then remove a resource\\n\\n"},{"kind":"code","text":"```ts\\n import { actorCalled } from \'@serenity-js/core\'\\n import { CallAnApi, DeleteRequest, LastResponse, PostRequest, Send } from \'@serenity-js/rest\'\\n import { Ensure, equals, startsWith } from \'@serenity-js/assertions\'\\n\\n await actorCalled(\'Apisitt\')\\n   .whoCan(CallAnApi.at(\'https://api.example.org/\'))\\n   .attemptsTo(\\n     // create a new test user account\\n     Send.a(PostRequest.to(\'/users\').with({\\n         login: \'tester\',\\n         password: \'P@ssword1\',\\n     }),\\n     Ensure.that(LastResponse.status(), equals(201)),\\n     Ensure.that(LastResponse.header(\'Location\'), startsWith(\'/users\')),\\n\\n     // delete the test user account\\n     Send.a(DeleteRequest.to(LastResponse.header(\'Location\'))),\\n     Ensure.that(LastResponse.status(), equals(200)),\\n   )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/DELETE\\n- https://tools.ietf.org/html/rfc7231#section-4.3.5"}]},"children":[{"id":6979,"name":"to","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/DeleteRequest.ts","line":55,"character":11}],"signatures":[{"id":6980,"name":"to","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the object with a destination URI.\\n\\nWhen the "},{"kind":"code","text":"`resourceUri`"},{"kind":"text","text":" is not a fully qualified URL but a path, such as "},{"kind":"code","text":"`/products/2`"},{"kind":"text","text":",\\nit gets concatenated with the URL provided to the Axios instance\\nwhen the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/) was instantiated."}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/DeleteRequest.ts","line":55,"character":11}],"parameters":[{"id":6981,"name":"resourceUri","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The URI where the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n should send the ["},{"kind":"code","text":"`HTTPRequest`"},{"kind":"text","text":"](/api/rest/class/HTTPRequest/)"}]},"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":6978,"name":"DeleteRequest","package":"@serenity-js/rest"}}]},{"id":8926,"name":"describedAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"signatures":[{"id":8927,"name":"describedAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Changes the description of this object, as returned by ["},{"kind":"code","text":"`Describable.describedBy`"},{"kind":"text","text":"](/api/core/class/Describable/#describedBy)\\nand ["},{"kind":"code","text":"`Describable.toString`"},{"kind":"text","text":"](/api/core/class/Describable/#toString)."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"parameters":[{"id":8928,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Replaces the current description according to the following rules:\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is an ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable), it replaces the current description\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/), the current description is passed as "},{"kind":"code","text":"`context`"},{"kind":"text","text":" to "},{"kind":"code","text":"`description.of(context)`"},{"kind":"text","text":", and the result replaces the current description"}]},"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":1543,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"},{"type":"reference","target":939,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}]}}],"type":{"type":"intrinsic","name":"this"},"inheritedFrom":{"type":"reference","target":14210,"name":"HTTPRequest.describedAs"}}],"inheritedFrom":{"type":"reference","target":14209,"name":"HTTPRequest.describedAs"}},{"id":8929,"name":"as","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"signatures":[{"id":8930,"name":"as","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Maps this question to one of a different type.\\n\\n"},{"kind":"code","text":"```ts\\nQuestion.about(\'number returned as string\', actor => \'42\')   // returns: QuestionAdapter<string>\\n  .as(Number)                                                // returns: QuestionAdapter<number>\\n```"}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"typeParameter":[{"id":8931,"name":"O","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":8932,"name":"mapping","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":8933,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"signatures":[{"id":8934,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"parameters":[{"id":8935,"name":"answer","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"}}],"type":{"type":"union","types":[{"type":"reference","target":4538,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4538,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reference","target":1041,"typeArguments":[{"type":"reference","target":4538,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":14213,"name":"HTTPRequest.as"}}],"inheritedFrom":{"type":"reference","target":14212,"name":"HTTPRequest.as"}},{"id":8936,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":8937,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":8938,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1049,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":600,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":8939,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":8940,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[8940]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":14220,"name":"HTTPRequest.describedBy"}}],"inheritedFrom":{"type":"reference","target":14219,"name":"HTTPRequest.describedBy"}},{"id":8946,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":8947,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":14230,"name":"HTTPRequest.toString"}}],"inheritedFrom":{"type":"reference","target":14229,"name":"HTTPRequest.toString"}},{"id":7663,"name":"using","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/DeleteRequest.ts","line":71,"character":4}],"signatures":[{"id":7664,"name":"using","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Overrides the default Axios request configuration provided\\nwhen the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/) was instantiated.\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable)\\n- ["},{"kind":"code","text":"`WithAnswerableProperties`"},{"kind":"text","text":"](/api/core/#WithAnswerableProperties)\\n- [AxiosRequestConfig](https://axios-http.com/docs/req_config)"}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/DeleteRequest.ts","line":71,"character":4}],"parameters":[{"id":7665,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Axios request configuration overrides"}]},"type":{"type":"reference","target":688,"typeArguments":[{"type":"reflection","declaration":{"id":7666,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":7667,"name":"url","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":7668,"name":"method","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":7669,"name":"baseURL","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":7670,"name":"transformRequest","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":7671,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reflection","declaration":{"id":7672,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}]}},{"id":7673,"name":"transformResponse","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":7674,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reflection","declaration":{"id":7675,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}]}},{"id":7676,"name":"headers","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":7677,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":7678,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7679,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7680,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7681,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7682,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7683,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7684,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7685,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7686,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7687,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7688,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7689,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7690,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7691,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7692,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7693,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7694,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7695,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7696,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7697,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7698,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7699,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7700,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7701,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7702,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7703,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7704,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[7678,7679,7680,7681,7682,7683,7684,7685,7686,7687,7688,7689,7690,7691,7692,7693,7694,7695,7696,7697,7698,7699,7700,7701,7702,7703,7704]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":7705,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":7706,"name":"Accept","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":7707,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":7708,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7709,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7710,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7711,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7712,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7713,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7714,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7715,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7716,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7717,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7718,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7719,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7720,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7721,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7722,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7723,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7724,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7725,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7726,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7727,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7728,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7729,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7730,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7731,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7732,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7733,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7734,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[7708,7709,7710,7711,7712,7713,7714,7715,7716,7717,7718,7719,7720,7721,7722,7723,7724,7725,7726,7727,7728,7729,7730,7731,7732,7733,7734]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":7735,"name":"Content-Length","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":7736,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":7737,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7738,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7739,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7740,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7741,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7742,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7743,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7744,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7745,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7746,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7747,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7748,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7749,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7750,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7751,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7752,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7753,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7754,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7755,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7756,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7757,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7758,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7759,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7760,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7761,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7762,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7763,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[7737,7738,7739,7740,7741,7742,7743,7744,7745,7746,7747,7748,7749,7750,7751,7752,7753,7754,7755,7756,7757,7758,7759,7760,7761,7762,7763]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":7764,"name":"User-Agent","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":7765,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":7766,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7767,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7768,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7769,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7770,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7771,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7772,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7773,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7774,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7775,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7776,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7777,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7778,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7779,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7780,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7781,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7782,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7783,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7784,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7785,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7786,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7787,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7788,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7789,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7790,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7791,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7792,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[7766,7767,7768,7769,7770,7771,7772,7773,7774,7775,7776,7777,7778,7779,7780,7781,7782,7783,7784,7785,7786,7787,7788,7789,7790,7791,7792]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":7793,"name":"Content-Encoding","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":7794,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":7795,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7796,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7797,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7798,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7799,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7800,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7801,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7802,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7803,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7804,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7805,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7806,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7807,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7808,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7809,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7810,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7811,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7812,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7813,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7814,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7815,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7816,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7817,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7818,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7819,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7820,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7821,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[7795,7796,7797,7798,7799,7800,7801,7802,7803,7804,7805,7806,7807,7808,7809,7810,7811,7812,7813,7814,7815,7816,7817,7818,7819,7820,7821]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":7822,"name":"Authorization","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":7823,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":7824,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7825,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7826,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7827,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7828,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7829,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7830,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7831,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7832,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7833,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7834,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7835,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7836,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7837,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7838,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7839,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7840,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7841,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7842,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7843,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7844,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7845,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7846,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7847,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7848,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7849,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7850,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[7824,7825,7826,7827,7828,7829,7830,7831,7832,7833,7834,7835,7836,7837,7838,7839,7840,7841,7842,7843,7844,7845,7846,7847,7848,7849,7850]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":7880,"name":"link","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":7881,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":7882,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7883,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7884,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7885,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7886,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7887,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7888,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7889,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7890,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7891,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7892,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7893,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7894,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7895,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7896,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7897,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7898,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7899,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7900,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7901,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7902,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7903,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7904,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7905,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7906,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7907,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7908,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[7882,7883,7884,7885,7886,7887,7888,7889,7890,7891,7892,7893,7894,7895,7896,7897,7898,7899,7900,7901,7902,7903,7904,7905,7906,7907,7908]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":7909,"name":"delete","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":7910,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":7911,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7912,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7913,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7914,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7915,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7916,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7917,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7918,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7919,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7920,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7921,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7922,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7923,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7924,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7925,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7926,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7927,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7928,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7929,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7930,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7931,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7932,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7933,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7934,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7935,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7936,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7937,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[7911,7912,7913,7914,7915,7916,7917,7918,7919,7920,7921,7922,7923,7924,7925,7926,7927,7928,7929,7930,7931,7932,7933,7934,7935,7936,7937]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":7938,"name":"get","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":7939,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":7940,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7941,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7942,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7943,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7944,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7945,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7946,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7947,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7948,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7949,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7950,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7951,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7952,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7953,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7954,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7955,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7956,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7957,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7958,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7959,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7960,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7961,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7962,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7963,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7964,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7965,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7966,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[7940,7941,7942,7943,7944,7945,7946,7947,7948,7949,7950,7951,7952,7953,7954,7955,7956,7957,7958,7959,7960,7961,7962,7963,7964,7965,7966]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":7967,"name":"head","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":7968,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":7969,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7970,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7971,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7972,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7973,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7974,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7975,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7976,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7977,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7978,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7979,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7980,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7981,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7982,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7983,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7984,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7985,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7986,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7987,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7988,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7989,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7990,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7991,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7992,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7993,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7994,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7995,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[7969,7970,7971,7972,7973,7974,7975,7976,7977,7978,7979,7980,7981,7982,7983,7984,7985,7986,7987,7988,7989,7990,7991,7992,7993,7994,7995]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":7996,"name":"options","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":7997,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":7998,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7999,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8000,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8001,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8002,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8003,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8004,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8005,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8006,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8007,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8008,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8009,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8010,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8011,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8012,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8013,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8014,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8015,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8016,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8017,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8018,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8019,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8020,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8021,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8022,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8023,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8024,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[7998,7999,8000,8001,8002,8003,8004,8005,8006,8007,8008,8009,8010,8011,8012,8013,8014,8015,8016,8017,8018,8019,8020,8021,8022,8023,8024]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8025,"name":"post","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":8026,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":8027,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8028,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8029,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8030,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8031,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8032,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8033,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8034,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8035,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8036,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8037,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8038,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8039,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8040,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8041,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8042,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8043,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8044,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8045,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8046,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8047,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8048,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8049,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8050,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8051,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8052,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8053,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[8027,8028,8029,8030,8031,8032,8033,8034,8035,8036,8037,8038,8039,8040,8041,8042,8043,8044,8045,8046,8047,8048,8049,8050,8051,8052,8053]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8054,"name":"put","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":8055,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":8056,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8057,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8058,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8059,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8060,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8061,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8062,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8063,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8064,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8065,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8066,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8067,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8068,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8069,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8070,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8071,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8072,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8073,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8074,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8075,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8076,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8077,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8078,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8079,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8080,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8081,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8082,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[8056,8057,8058,8059,8060,8061,8062,8063,8064,8065,8066,8067,8068,8069,8070,8071,8072,8073,8074,8075,8076,8077,8078,8079,8080,8081,8082]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8083,"name":"patch","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":8084,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":8085,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8086,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8087,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8088,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8089,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8090,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8091,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8092,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8093,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8094,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8095,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8096,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8097,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8098,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8099,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8100,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8101,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8102,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8103,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8104,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8105,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8106,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8107,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8108,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8109,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8110,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8111,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[8085,8086,8087,8088,8089,8090,8091,8092,8093,8094,8095,8096,8097,8098,8099,8100,8101,8102,8103,8104,8105,8106,8107,8108,8109,8110,8111]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8112,"name":"purge","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":8113,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":8114,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8115,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8116,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8117,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8118,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8119,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8120,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8121,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8122,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8123,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8124,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8125,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8126,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8127,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8128,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8129,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8130,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8131,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8132,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8133,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8134,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8135,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8136,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8137,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8138,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8139,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8140,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[8114,8115,8116,8117,8118,8119,8120,8121,8122,8123,8124,8125,8126,8127,8128,8129,8130,8131,8132,8133,8134,8135,8136,8137,8138,8139,8140]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8141,"name":"unlink","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":8142,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":8143,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8144,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8145,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8146,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8147,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8148,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8149,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8150,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8151,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8152,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8153,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8154,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8155,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8156,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8157,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8158,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8159,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8160,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8161,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8162,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8163,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8164,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8165,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8166,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8167,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8168,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8169,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[8143,8144,8145,8146,8147,8148,8149,8150,8151,8152,8153,8154,8155,8156,8157,8158,8159,8160,8161,8162,8163,8164,8165,8166,8167,8168,8169]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8170,"name":"common","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":8171,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":8172,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8173,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8174,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8175,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8176,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8177,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8178,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8179,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8180,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8181,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8182,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8183,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8184,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8185,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8186,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8187,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8188,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8189,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8190,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8191,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8192,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8193,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8194,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8195,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8196,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8197,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8198,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[8172,8173,8174,8175,8176,8177,8178,8179,8180,8181,8182,8183,8184,8185,8186,8187,8188,8189,8190,8191,8192,8193,8194,8195,8196,8197,8198]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":7851,"name":"Content-Type","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":7852,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":7853,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7854,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7855,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7856,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7857,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7858,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7859,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7860,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7861,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7862,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7863,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7864,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7865,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7866,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7867,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7868,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7869,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7870,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7871,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7872,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7873,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7874,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7875,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7876,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7877,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7878,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7879,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[7853,7854,7855,7856,7857,7858,7859,7860,7861,7862,7863,7864,7865,7866,7867,7868,7869,7870,7871,7872,7873,7874,7875,7876,7877,7878,7879]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}}],"groups":[{"title":"Properties","children":[7706,7735,7764,7793,7822,7880,7909,7938,7967,7996,8025,8054,8083,8112,8141,8170,7851]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":8199,"name":"params","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":8200,"name":"paramsSerializer","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":8201,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":8206,"name":"visitor","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":8207,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8208,"name":"dots","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":8209,"name":"metaTokens","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":8210,"name":"indexes","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":8202,"name":"encode","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":8203,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8204,"name":"serialize","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":8205,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[8206,8208,8209,8210,8202,8204]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":8211,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":8212,"name":"data","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":8213,"name":"timeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":8214,"name":"timeoutErrorMessage","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":8215,"name":"withCredentials","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":8216,"name":"adapter","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":8217,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"unknown","name":"Answerable<string> | {}"}}]}},{"id":8218,"name":"auth","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":8219,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":8220,"name":"username","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":8221,"name":"password","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[8220,8221]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8222,"name":"responseType","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":"text"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":"arraybuffer"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":"blob"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":"document"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":"json"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":"stream"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":"formdata"}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":8223,"name":"responseEncoding","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":8224,"name":"xsrfCookieName","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":8225,"name":"xsrfHeaderName","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":8226,"name":"onUploadProgress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":8227,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8228,"name":"onDownloadProgress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":8229,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8230,"name":"maxContentLength","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":8231,"name":"validateStatus","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":8232,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8233,"name":"maxBodyLength","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":8234,"name":"maxRedirects","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":8235,"name":"maxRate","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"tuple","elements":[{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}]}]}},{"id":8236,"name":"beforeRedirect","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":8237,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8238,"name":"socketPath","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":8239,"name":"transport","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":8240,"name":"httpAgent","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":8241,"name":"httpsAgent","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":8242,"name":"proxy","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":8243,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":8244,"name":"host","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":8245,"name":"port","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":8246,"name":"auth","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":8247,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":8248,"name":"username","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":8249,"name":"password","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[8248,8249]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8250,"name":"protocol","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[8244,8245,8246,8250]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":8251,"name":"cancelToken","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":8252,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":8253,"name":"promise","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"Cancel"},"name":"Cancel","package":"axios"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":8254,"name":"reason","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":8255,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":8256,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[8256]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8257,"name":"throwIfRequested","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Properties","children":[8253,8254]},{"title":"Methods","children":[8257]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8258,"name":"decompress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":8259,"name":"transitional","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":8260,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":8261,"name":"silentJSONParsing","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":8262,"name":"forcedJSONParsing","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":8263,"name":"clarifyTimeoutError","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}}],"groups":[{"title":"Properties","children":[8261,8262,8263]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8264,"name":"signal","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":8265,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":8266,"name":"aborted","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isReadonly":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":8267,"name":"onabort","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":8268,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8269,"name":"addEventListener","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":8270,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8271,"name":"removeEventListener","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":8272,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[8266,8267,8269,8271]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8273,"name":"insecureHTTPParser","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":8274,"name":"env","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":8275,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":8276,"name":"FormData","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":8277,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[8276]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8278,"name":"formSerializer","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":8279,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":8280,"name":"visitor","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":8281,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8282,"name":"dots","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":8283,"name":"metaTokens","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":8284,"name":"indexes","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}}],"groups":[{"title":"Properties","children":[8280,8282,8283,8284]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8285,"name":"family","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":4}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":6}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":8286,"name":"lookup","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":8287,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":8288,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":8289,"name":"withXSRFToken","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":8290,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":8291,"name":"fetchOptions","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":8292,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[7667,7668,7669,7670,7673,7676,8199,8200,8212,8213,8214,8215,8216,8218,8222,8223,8224,8225,8226,8228,8230,8231,8233,8234,8235,8236,8238,8239,8240,8241,8242,8251,8258,8259,8264,8273,8274,8278,8285,8286,8289,8291]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":6978,"name":"DeleteRequest","package":"@serenity-js/rest"}}]},{"id":8923,"name":"answeredBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/HTTPRequest.ts","line":36,"character":4}],"signatures":[{"id":8924,"name":"answeredBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/HTTPRequest.ts","line":36,"character":4}],"parameters":[{"id":8925,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1049,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":600,"name":"UsesAbilities","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":14207,"name":"HTTPRequest.answeredBy"}}],"inheritedFrom":{"type":"reference","target":14206,"name":"HTTPRequest.answeredBy"}}],"groups":[{"title":"Methods","children":[6979,8926,8929,8936,8946,7663,8923]}],"sources":[{"fileName":"packages/rest/src/screenplay/models/DeleteRequest.ts","line":42,"character":13}],"extendedTypes":[{"type":"reference","target":12888,"name":"HTTPRequest","package":"@serenity-js/rest"}],"permalink":"/api/rest/class/DeleteRequest","previousId":6876,"nextId":8948},{"id":8948,"name":"GetRequest","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The HTTP GET method requests a representation of the specified resource.\\nIt is the most frequent type of request made by consumers of a typical HTTP API.\\nFor this reason it\'s important to test every known endpoint that responds to GET requests and ensure that it\\nbehaves correctly.\\n\\nSince the GET method is used to _retrieve_ data from a server, it should be implemented\\nas [safe](https://developer.mozilla.org/en-US/docs/Glossary/Safe)\\nand [idempotent](https://developer.mozilla.org/en-US/docs/Glossary/Idempotent).\\nThis means that an identical request can be made once or several times in a row with the same effect while leaving\\nthe server in the same state.\\n\\n## Verify response to a GET request\\n\\n"},{"kind":"code","text":"```ts\\n import { actorCalled } from \'@serenity-js/core\'\\n import { CallAnApi, GetRequest, LastResponse, Send } from \'@serenity-js/rest\'\\n import { Ensure, equals } from \'@serenity-js/assertions\'\\n\\n interface Book {\\n     title: string;\\n     author: string;\\n }\\n\\n await actorCalled(\'Apisitt\')\\n   .whoCan(CallAnApi.at(\'https://api.example.org/\'))\\n   .attemptsTo(\\n     Send.a(GetRequest.to(\'/books/0-688-00230-7\')),\\n     Ensure.that(LastResponse.status(), equals(200)),\\n     Ensure.that(LastResponse.body<Book>(), equals({\\n         title: \'Zen and the Art of Motorcycle Maintenance: An Inquiry into Values\',\\n         author: \'Robert M. Pirsig\',\\n     })),\\n   )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/GET\\n- https://tools.ietf.org/html/rfc7231#section-4.3.1"}]},"children":[{"id":8949,"name":"to","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/GetRequest.ts","line":62,"character":11}],"signatures":[{"id":8950,"name":"to","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the object with a destination URI.\\n\\nWhen the "},{"kind":"code","text":"`resourceUri`"},{"kind":"text","text":" is not a fully qualified URL but a path, such as "},{"kind":"code","text":"`/products/2`"},{"kind":"text","text":",\\nit gets concatenated with the URL provided to the Axios instance\\nwhen the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/) was instantiated."}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/GetRequest.ts","line":62,"character":11}],"parameters":[{"id":8951,"name":"resourceUri","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The URI where the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n should send the ["},{"kind":"code","text":"`HTTPRequest`"},{"kind":"text","text":"](/api/rest/class/HTTPRequest/)"}]},"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":8948,"name":"GetRequest","package":"@serenity-js/rest"}}]},{"id":10896,"name":"describedAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"signatures":[{"id":10897,"name":"describedAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Changes the description of this object, as returned by ["},{"kind":"code","text":"`Describable.describedBy`"},{"kind":"text","text":"](/api/core/class/Describable/#describedBy)\\nand ["},{"kind":"code","text":"`Describable.toString`"},{"kind":"text","text":"](/api/core/class/Describable/#toString)."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"parameters":[{"id":10898,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Replaces the current description according to the following rules:\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is an ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable), it replaces the current description\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/), the current description is passed as "},{"kind":"code","text":"`context`"},{"kind":"text","text":" to "},{"kind":"code","text":"`description.of(context)`"},{"kind":"text","text":", and the result replaces the current description"}]},"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":1543,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"},{"type":"reference","target":939,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}]}}],"type":{"type":"intrinsic","name":"this"},"inheritedFrom":{"type":"reference","target":14210,"name":"HTTPRequest.describedAs"}}],"inheritedFrom":{"type":"reference","target":14209,"name":"HTTPRequest.describedAs"}},{"id":10899,"name":"as","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"signatures":[{"id":10900,"name":"as","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Maps this question to one of a different type.\\n\\n"},{"kind":"code","text":"```ts\\nQuestion.about(\'number returned as string\', actor => \'42\')   // returns: QuestionAdapter<string>\\n  .as(Number)                                                // returns: QuestionAdapter<number>\\n```"}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"typeParameter":[{"id":10901,"name":"O","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":10902,"name":"mapping","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":10903,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"signatures":[{"id":10904,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"parameters":[{"id":10905,"name":"answer","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"}}],"type":{"type":"union","types":[{"type":"reference","target":4538,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4538,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reference","target":1041,"typeArguments":[{"type":"reference","target":4538,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":14213,"name":"HTTPRequest.as"}}],"inheritedFrom":{"type":"reference","target":14212,"name":"HTTPRequest.as"}},{"id":10906,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":10907,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":10908,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1049,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":600,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":10909,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":10910,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[10910]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":14220,"name":"HTTPRequest.describedBy"}}],"inheritedFrom":{"type":"reference","target":14219,"name":"HTTPRequest.describedBy"}},{"id":10916,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":10917,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":14230,"name":"HTTPRequest.toString"}}],"inheritedFrom":{"type":"reference","target":14229,"name":"HTTPRequest.toString"}},{"id":9633,"name":"using","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/GetRequest.ts","line":78,"character":4}],"signatures":[{"id":9634,"name":"using","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Overrides the default Axios request configuration provided\\nwhen the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/) was instantiated.\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable)\\n- ["},{"kind":"code","text":"`WithAnswerableProperties`"},{"kind":"text","text":"](/api/core/#WithAnswerableProperties)\\n- [AxiosRequestConfig](https://axios-http.com/docs/req_config)"}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/GetRequest.ts","line":78,"character":4}],"parameters":[{"id":9635,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Axios request configuration overrides"}]},"type":{"type":"reference","target":688,"typeArguments":[{"type":"reflection","declaration":{"id":9636,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":9637,"name":"url","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":9638,"name":"method","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":9639,"name":"baseURL","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":9640,"name":"transformRequest","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":9641,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reflection","declaration":{"id":9642,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}]}},{"id":9643,"name":"transformResponse","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":9644,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reflection","declaration":{"id":9645,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}]}},{"id":9646,"name":"headers","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":9647,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":9648,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9649,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9650,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9651,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9652,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9653,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9654,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9655,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9656,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9657,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9658,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9659,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9660,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9661,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9662,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9663,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9664,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9665,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9666,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9667,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9668,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9669,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9670,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9671,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9672,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9673,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9674,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[9648,9649,9650,9651,9652,9653,9654,9655,9656,9657,9658,9659,9660,9661,9662,9663,9664,9665,9666,9667,9668,9669,9670,9671,9672,9673,9674]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":9675,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":9676,"name":"Accept","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":9677,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":9678,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9679,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9680,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9681,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9682,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9683,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9684,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9685,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9686,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9687,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9688,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9689,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9690,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9691,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9692,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9693,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9694,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9695,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9696,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9697,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9698,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9699,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9700,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9701,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9702,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9703,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9704,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[9678,9679,9680,9681,9682,9683,9684,9685,9686,9687,9688,9689,9690,9691,9692,9693,9694,9695,9696,9697,9698,9699,9700,9701,9702,9703,9704]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":9705,"name":"Content-Length","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":9706,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":9707,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9708,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9709,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9710,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9711,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9712,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9713,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9714,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9715,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9716,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9717,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9718,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9719,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9720,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9721,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9722,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9723,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9724,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9725,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9726,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9727,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9728,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9729,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9730,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9731,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9732,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9733,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[9707,9708,9709,9710,9711,9712,9713,9714,9715,9716,9717,9718,9719,9720,9721,9722,9723,9724,9725,9726,9727,9728,9729,9730,9731,9732,9733]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":9734,"name":"User-Agent","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":9735,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":9736,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9737,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9738,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9739,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9740,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9741,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9742,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9743,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9744,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9745,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9746,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9747,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9748,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9749,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9750,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9751,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9752,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9753,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9754,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9755,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9756,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9757,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9758,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9759,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9760,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9761,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9762,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[9736,9737,9738,9739,9740,9741,9742,9743,9744,9745,9746,9747,9748,9749,9750,9751,9752,9753,9754,9755,9756,9757,9758,9759,9760,9761,9762]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":9763,"name":"Content-Encoding","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":9764,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":9765,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9766,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9767,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9768,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9769,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9770,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9771,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9772,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9773,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9774,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9775,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9776,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9777,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9778,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9779,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9780,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9781,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9782,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9783,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9784,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9785,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9786,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9787,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9788,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9789,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9790,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9791,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[9765,9766,9767,9768,9769,9770,9771,9772,9773,9774,9775,9776,9777,9778,9779,9780,9781,9782,9783,9784,9785,9786,9787,9788,9789,9790,9791]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":9792,"name":"Authorization","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":9793,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":9794,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9795,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9796,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9797,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9798,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9799,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9800,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9801,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9802,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9803,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9804,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9805,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9806,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9807,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9808,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9809,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9810,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9811,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9812,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9813,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9814,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9815,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9816,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9817,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9818,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9819,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9820,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[9794,9795,9796,9797,9798,9799,9800,9801,9802,9803,9804,9805,9806,9807,9808,9809,9810,9811,9812,9813,9814,9815,9816,9817,9818,9819,9820]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":9850,"name":"link","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":9851,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":9852,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9853,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9854,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9855,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9856,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9857,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9858,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9859,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9860,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9861,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9862,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9863,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9864,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9865,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9866,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9867,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9868,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9869,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9870,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9871,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9872,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9873,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9874,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9875,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9876,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9877,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9878,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[9852,9853,9854,9855,9856,9857,9858,9859,9860,9861,9862,9863,9864,9865,9866,9867,9868,9869,9870,9871,9872,9873,9874,9875,9876,9877,9878]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":9879,"name":"delete","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":9880,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":9881,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9882,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9883,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9884,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9885,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9886,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9887,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9888,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9889,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9890,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9891,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9892,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9893,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9894,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9895,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9896,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9897,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9898,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9899,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9900,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9901,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9902,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9903,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9904,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9905,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9906,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9907,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[9881,9882,9883,9884,9885,9886,9887,9888,9889,9890,9891,9892,9893,9894,9895,9896,9897,9898,9899,9900,9901,9902,9903,9904,9905,9906,9907]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":9908,"name":"get","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":9909,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":9910,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9911,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9912,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9913,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9914,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9915,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9916,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9917,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9918,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9919,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9920,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9921,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9922,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9923,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9924,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9925,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9926,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9927,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9928,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9929,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9930,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9931,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9932,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9933,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9934,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9935,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9936,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[9910,9911,9912,9913,9914,9915,9916,9917,9918,9919,9920,9921,9922,9923,9924,9925,9926,9927,9928,9929,9930,9931,9932,9933,9934,9935,9936]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":9937,"name":"head","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":9938,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":9939,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9940,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9941,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9942,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9943,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9944,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9945,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9946,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9947,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9948,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9949,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9950,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9951,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9952,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9953,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9954,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9955,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9956,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9957,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9958,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9959,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9960,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9961,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9962,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9963,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9964,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9965,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[9939,9940,9941,9942,9943,9944,9945,9946,9947,9948,9949,9950,9951,9952,9953,9954,9955,9956,9957,9958,9959,9960,9961,9962,9963,9964,9965]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":9966,"name":"options","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":9967,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":9968,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9969,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9970,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9971,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9972,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9973,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9974,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9975,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9976,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9977,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9978,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9979,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9980,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9981,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9982,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9983,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9984,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9985,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9986,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9987,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9988,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9989,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9990,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9991,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9992,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9993,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9994,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[9968,9969,9970,9971,9972,9973,9974,9975,9976,9977,9978,9979,9980,9981,9982,9983,9984,9985,9986,9987,9988,9989,9990,9991,9992,9993,9994]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":9995,"name":"post","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":9996,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":9997,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9998,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9999,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10000,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10001,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10002,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10003,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10004,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10005,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10006,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10007,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10008,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10009,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10010,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10011,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10012,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10013,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10014,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10015,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10016,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10017,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10018,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10019,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10020,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10021,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10022,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10023,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[9997,9998,9999,10000,10001,10002,10003,10004,10005,10006,10007,10008,10009,10010,10011,10012,10013,10014,10015,10016,10017,10018,10019,10020,10021,10022,10023]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":10024,"name":"put","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":10025,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":10026,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10027,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10028,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10029,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10030,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10031,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10032,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10033,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10034,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10035,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10036,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10037,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10038,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10039,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10040,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10041,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10042,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10043,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10044,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10045,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10046,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10047,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10048,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10049,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10050,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10051,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10052,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[10026,10027,10028,10029,10030,10031,10032,10033,10034,10035,10036,10037,10038,10039,10040,10041,10042,10043,10044,10045,10046,10047,10048,10049,10050,10051,10052]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":10053,"name":"patch","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":10054,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":10055,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10056,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10057,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10058,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10059,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10060,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10061,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10062,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10063,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10064,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10065,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10066,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10067,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10068,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10069,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10070,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10071,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10072,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10073,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10074,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10075,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10076,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10077,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10078,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10079,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10080,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10081,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[10055,10056,10057,10058,10059,10060,10061,10062,10063,10064,10065,10066,10067,10068,10069,10070,10071,10072,10073,10074,10075,10076,10077,10078,10079,10080,10081]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":10082,"name":"purge","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":10083,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":10084,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10085,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10086,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10087,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10088,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10089,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10090,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10091,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10092,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10093,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10094,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10095,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10096,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10097,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10098,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10099,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10100,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10101,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10102,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10103,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10104,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10105,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10106,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10107,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10108,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10109,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10110,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[10084,10085,10086,10087,10088,10089,10090,10091,10092,10093,10094,10095,10096,10097,10098,10099,10100,10101,10102,10103,10104,10105,10106,10107,10108,10109,10110]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":10111,"name":"unlink","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":10112,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":10113,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10114,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10115,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10116,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10117,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10118,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10119,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10120,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10121,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10122,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10123,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10124,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10125,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10126,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10127,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10128,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10129,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10130,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10131,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10132,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10133,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10134,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10135,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10136,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10137,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10138,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10139,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[10113,10114,10115,10116,10117,10118,10119,10120,10121,10122,10123,10124,10125,10126,10127,10128,10129,10130,10131,10132,10133,10134,10135,10136,10137,10138,10139]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":10140,"name":"common","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":10141,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":10142,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10143,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10144,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10145,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10146,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10147,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10148,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10149,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10150,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10151,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10152,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10153,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10154,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10155,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10156,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10157,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10158,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10159,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10160,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10161,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10162,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10163,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10164,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10165,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10166,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10167,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":10168,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[10142,10143,10144,10145,10146,10147,10148,10149,10150,10151,10152,10153,10154,10155,10156,10157,10158,10159,10160,10161,10162,10163,10164,10165,10166,10167,10168]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":9821,"name":"Content-Type","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":9822,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":9823,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9824,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9825,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9826,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9827,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9828,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9829,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9830,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9831,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9832,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9833,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9834,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9835,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9836,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9837,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9838,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9839,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9840,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9841,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9842,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9843,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9844,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9845,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9846,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9847,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9848,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9849,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[9823,9824,9825,9826,9827,9828,9829,9830,9831,9832,9833,9834,9835,9836,9837,9838,9839,9840,9841,9842,9843,9844,9845,9846,9847,9848,9849]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}}],"groups":[{"title":"Properties","children":[9676,9705,9734,9763,9792,9850,9879,9908,9937,9966,9995,10024,10053,10082,10111,10140,9821]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":10169,"name":"params","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":10170,"name":"paramsSerializer","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":10171,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":10176,"name":"visitor","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":10177,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":10178,"name":"dots","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":10179,"name":"metaTokens","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":10180,"name":"indexes","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":10172,"name":"encode","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":10173,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":10174,"name":"serialize","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":10175,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[10176,10178,10179,10180,10172,10174]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":10181,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":10182,"name":"data","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":10183,"name":"timeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":10184,"name":"timeoutErrorMessage","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":10185,"name":"withCredentials","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":10186,"name":"adapter","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":10187,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"unknown","name":"Answerable<string> | {}"}}]}},{"id":10188,"name":"auth","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":10189,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":10190,"name":"username","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":10191,"name":"password","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[10190,10191]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":10192,"name":"responseType","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":"text"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":"arraybuffer"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":"blob"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":"document"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":"json"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":"stream"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":"formdata"}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":10193,"name":"responseEncoding","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":10194,"name":"xsrfCookieName","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":10195,"name":"xsrfHeaderName","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":10196,"name":"onUploadProgress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":10197,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":10198,"name":"onDownloadProgress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":10199,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":10200,"name":"maxContentLength","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":10201,"name":"validateStatus","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":10202,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":10203,"name":"maxBodyLength","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":10204,"name":"maxRedirects","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":10205,"name":"maxRate","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"tuple","elements":[{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}]}]}},{"id":10206,"name":"beforeRedirect","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":10207,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":10208,"name":"socketPath","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":10209,"name":"transport","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":10210,"name":"httpAgent","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":10211,"name":"httpsAgent","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":10212,"name":"proxy","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":10213,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":10214,"name":"host","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":10215,"name":"port","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":10216,"name":"auth","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":10217,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":10218,"name":"username","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":10219,"name":"password","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[10218,10219]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":10220,"name":"protocol","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[10214,10215,10216,10220]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":10221,"name":"cancelToken","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":10222,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":10223,"name":"promise","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"Cancel"},"name":"Cancel","package":"axios"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":10224,"name":"reason","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":10225,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":10226,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[10226]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":10227,"name":"throwIfRequested","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Properties","children":[10223,10224]},{"title":"Methods","children":[10227]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":10228,"name":"decompress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":10229,"name":"transitional","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":10230,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":10231,"name":"silentJSONParsing","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":10232,"name":"forcedJSONParsing","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":10233,"name":"clarifyTimeoutError","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}}],"groups":[{"title":"Properties","children":[10231,10232,10233]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":10234,"name":"signal","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":10235,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":10236,"name":"aborted","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isReadonly":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":10237,"name":"onabort","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":10238,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":10239,"name":"addEventListener","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":10240,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":10241,"name":"removeEventListener","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":10242,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[10236,10237,10239,10241]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":10243,"name":"insecureHTTPParser","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":10244,"name":"env","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":10245,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":10246,"name":"FormData","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":10247,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[10246]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":10248,"name":"formSerializer","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":10249,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":10250,"name":"visitor","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":10251,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":10252,"name":"dots","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":10253,"name":"metaTokens","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":10254,"name":"indexes","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}}],"groups":[{"title":"Properties","children":[10250,10252,10253,10254]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":10255,"name":"family","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":4}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":6}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":10256,"name":"lookup","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":10257,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":10258,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":10259,"name":"withXSRFToken","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":10260,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":10261,"name":"fetchOptions","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":10262,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[9637,9638,9639,9640,9643,9646,10169,10170,10182,10183,10184,10185,10186,10188,10192,10193,10194,10195,10196,10198,10200,10201,10203,10204,10205,10206,10208,10209,10210,10211,10212,10221,10228,10229,10234,10243,10244,10248,10255,10256,10259,10261]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":8948,"name":"GetRequest","package":"@serenity-js/rest"}}]},{"id":10893,"name":"answeredBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/HTTPRequest.ts","line":36,"character":4}],"signatures":[{"id":10894,"name":"answeredBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/HTTPRequest.ts","line":36,"character":4}],"parameters":[{"id":10895,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1049,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":600,"name":"UsesAbilities","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":14207,"name":"HTTPRequest.answeredBy"}}],"inheritedFrom":{"type":"reference","target":14206,"name":"HTTPRequest.answeredBy"}}],"groups":[{"title":"Methods","children":[8949,10896,10899,10906,10916,9633,10893]}],"sources":[{"fileName":"packages/rest/src/screenplay/models/GetRequest.ts","line":49,"character":13}],"extendedTypes":[{"type":"reference","target":12888,"name":"HTTPRequest","package":"@serenity-js/rest"}],"permalink":"/api/rest/class/GetRequest","previousId":6978,"nextId":12888},{"id":12888,"name":"HTTPRequest","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"HTTP Request sent by the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\nusing the [interaction](/api/core/class/Interaction/) to ["},{"kind":"code","text":"`Send`"},{"kind":"text","text":"](/api/rest/class/Send/)"}]},"children":[{"id":14209,"name":"describedAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"signatures":[{"id":14210,"name":"describedAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Changes the description of this object, as returned by ["},{"kind":"code","text":"`Describable.describedBy`"},{"kind":"text","text":"](/api/core/class/Describable/#describedBy)\\nand ["},{"kind":"code","text":"`Describable.toString`"},{"kind":"text","text":"](/api/core/class/Describable/#toString)."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"parameters":[{"id":14211,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Replaces the current description according to the following rules:\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is an ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable), it replaces the current description\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/), the current description is passed as "},{"kind":"code","text":"`context`"},{"kind":"text","text":" to "},{"kind":"code","text":"`description.of(context)`"},{"kind":"text","text":", and the result replaces the current description"}]},"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":1543,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"},{"type":"reference","target":939,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}]}}],"type":{"type":"intrinsic","name":"this"},"inheritedFrom":{"type":"reference","target":-1,"name":"Question.describedAs"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Question.describedAs"}},{"id":14212,"name":"as","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"signatures":[{"id":14213,"name":"as","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Maps this question to one of a different type.\\n\\n"},{"kind":"code","text":"```ts\\nQuestion.about(\'number returned as string\', actor => \'42\')   // returns: QuestionAdapter<string>\\n  .as(Number)                                                // returns: QuestionAdapter<number>\\n```"}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"typeParameter":[{"id":14214,"name":"O","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":14215,"name":"mapping","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":14216,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"signatures":[{"id":14217,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"parameters":[{"id":14218,"name":"answer","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"}}],"type":{"type":"union","types":[{"type":"reference","target":4538,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4538,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reference","target":1041,"typeArguments":[{"type":"reference","target":4538,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Question.as"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Question.as"}},{"id":14219,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":14220,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":14221,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1049,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":600,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":14222,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":14223,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[14223]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Question.describedBy"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Question.describedBy"}},{"id":14229,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":14230,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Question.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Question.toString"}},{"id":14206,"name":"answeredBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/HTTPRequest.ts","line":36,"character":4}],"signatures":[{"id":14207,"name":"answeredBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/HTTPRequest.ts","line":36,"character":4}],"parameters":[{"id":14208,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1049,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":600,"name":"UsesAbilities","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Question.answeredBy"}}],"overwrites":{"type":"reference","target":-1,"name":"Question.answeredBy"}}],"groups":[{"title":"Methods","children":[14209,14212,14219,14229,14206]}],"sources":[{"fileName":"packages/rest/src/screenplay/models/HTTPRequest.ts","line":12,"character":22}],"extendedTypes":[{"type":"reference","target":939,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"name":"AxiosRequestConfig","package":"axios"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"extendedBy":[{"type":"reference","target":6978,"name":"DeleteRequest"},{"type":"reference","target":8948,"name":"GetRequest"},{"type":"reference","target":10918,"name":"HeadRequest"},{"type":"reference","target":14231,"name":"OptionsRequest"},{"type":"reference","target":16201,"name":"PatchRequest"},{"type":"reference","target":18174,"name":"PostRequest"},{"type":"reference","target":20147,"name":"PutRequest"}],"permalink":"/api/rest/class/HTTPRequest","previousId":8948,"nextId":10918},{"id":10918,"name":"HeadRequest","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The HTTP HEAD method requests the headers that are returned if the specified resource\\nwould be requested with an HTTP GET method.\\nSuch a request can be done before deciding to download a large resource to save bandwidth, for example.\\n\\n## File download test\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, HeadRequest, LastResponse, Send } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(CallAnApi.at(\'https://api.example.org/\'))\\n  .attemptsTo(\\n    Send.a(HeadRequest.to(\'/downloads/my-test-document.pdf\')),\\n    Ensure.that(LastResponse.status(), equals(200)),\\n    Ensure.that(LastResponse.header(\'Content-Length\'), equals(256)), // assuming we know the size of the document\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/HEAD\\n- https://tools.ietf.org/html/rfc7231#section-4.3.2"}]},"children":[{"id":10919,"name":"to","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/HeadRequest.ts","line":47,"character":11}],"signatures":[{"id":10920,"name":"to","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the object with a destination URI.\\n\\nWhen the "},{"kind":"code","text":"`resourceUri`"},{"kind":"text","text":" is not a fully qualified URL but a path, such as "},{"kind":"code","text":"`/products/2`"},{"kind":"text","text":",\\nit gets concatenated with the URL provided to the Axios instance\\nwhen the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/) was instantiated."}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/HeadRequest.ts","line":47,"character":11}],"parameters":[{"id":10921,"name":"resourceUri","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The URI where the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n should send the ["},{"kind":"code","text":"`HTTPRequest`"},{"kind":"text","text":"](/api/rest/class/HTTPRequest/)"}]},"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":10918,"name":"HeadRequest","package":"@serenity-js/rest"}}]},{"id":12866,"name":"describedAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"signatures":[{"id":12867,"name":"describedAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Changes the description of this object, as returned by ["},{"kind":"code","text":"`Describable.describedBy`"},{"kind":"text","text":"](/api/core/class/Describable/#describedBy)\\nand ["},{"kind":"code","text":"`Describable.toString`"},{"kind":"text","text":"](/api/core/class/Describable/#toString)."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"parameters":[{"id":12868,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Replaces the current description according to the following rules:\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is an ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable), it replaces the current description\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/), the current description is passed as "},{"kind":"code","text":"`context`"},{"kind":"text","text":" to "},{"kind":"code","text":"`description.of(context)`"},{"kind":"text","text":", and the result replaces the current description"}]},"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":1543,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"},{"type":"reference","target":939,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}]}}],"type":{"type":"intrinsic","name":"this"},"inheritedFrom":{"type":"reference","target":14210,"name":"HTTPRequest.describedAs"}}],"inheritedFrom":{"type":"reference","target":14209,"name":"HTTPRequest.describedAs"}},{"id":12869,"name":"as","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"signatures":[{"id":12870,"name":"as","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Maps this question to one of a different type.\\n\\n"},{"kind":"code","text":"```ts\\nQuestion.about(\'number returned as string\', actor => \'42\')   // returns: QuestionAdapter<string>\\n  .as(Number)                                                // returns: QuestionAdapter<number>\\n```"}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"typeParameter":[{"id":12871,"name":"O","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":12872,"name":"mapping","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":12873,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"signatures":[{"id":12874,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"parameters":[{"id":12875,"name":"answer","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"}}],"type":{"type":"union","types":[{"type":"reference","target":4538,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4538,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reference","target":1041,"typeArguments":[{"type":"reference","target":4538,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":14213,"name":"HTTPRequest.as"}}],"inheritedFrom":{"type":"reference","target":14212,"name":"HTTPRequest.as"}},{"id":12876,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":12877,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":12878,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1049,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":600,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":12879,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":12880,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[12880]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":14220,"name":"HTTPRequest.describedBy"}}],"inheritedFrom":{"type":"reference","target":14219,"name":"HTTPRequest.describedBy"}},{"id":12886,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":12887,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":14230,"name":"HTTPRequest.toString"}}],"inheritedFrom":{"type":"reference","target":14229,"name":"HTTPRequest.toString"}},{"id":12863,"name":"answeredBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/HTTPRequest.ts","line":36,"character":4}],"signatures":[{"id":12864,"name":"answeredBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/HTTPRequest.ts","line":36,"character":4}],"parameters":[{"id":12865,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1049,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":600,"name":"UsesAbilities","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":14207,"name":"HTTPRequest.answeredBy"}}],"inheritedFrom":{"type":"reference","target":14206,"name":"HTTPRequest.answeredBy"}},{"id":11603,"name":"using","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/HeadRequest.ts","line":63,"character":4}],"signatures":[{"id":11604,"name":"using","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Overrides the default Axios request configuration provided\\nwhen the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/) was instantiated.\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable)\\n- ["},{"kind":"code","text":"`WithAnswerableProperties`"},{"kind":"text","text":"](/api/core/#WithAnswerableProperties)\\n- [AxiosRequestConfig](https://axios-http.com/docs/req_config)"}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/HeadRequest.ts","line":63,"character":4}],"parameters":[{"id":11605,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Axios request configuration overrides"}]},"type":{"type":"reference","target":688,"typeArguments":[{"type":"reflection","declaration":{"id":11606,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":11607,"name":"url","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":11608,"name":"method","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":11609,"name":"baseURL","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":11610,"name":"transformRequest","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":11611,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reflection","declaration":{"id":11612,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}]}},{"id":11613,"name":"transformResponse","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":11614,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reflection","declaration":{"id":11615,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}]}},{"id":11616,"name":"headers","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":11617,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":11618,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11619,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11620,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11621,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11622,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11623,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11624,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11625,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11626,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11627,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11628,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11629,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11630,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11631,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11632,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11633,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11634,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11635,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11636,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11637,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11638,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11639,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11640,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11641,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11642,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11643,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11644,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[11618,11619,11620,11621,11622,11623,11624,11625,11626,11627,11628,11629,11630,11631,11632,11633,11634,11635,11636,11637,11638,11639,11640,11641,11642,11643,11644]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":11645,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":11646,"name":"Accept","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":11647,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":11648,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11649,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11650,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11651,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11652,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11653,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11654,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11655,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11656,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11657,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11658,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11659,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11660,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11661,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11662,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11663,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11664,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11665,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11666,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11667,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11668,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11669,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11670,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11671,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11672,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11673,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11674,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[11648,11649,11650,11651,11652,11653,11654,11655,11656,11657,11658,11659,11660,11661,11662,11663,11664,11665,11666,11667,11668,11669,11670,11671,11672,11673,11674]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":11675,"name":"Content-Length","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":11676,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":11677,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11678,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11679,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11680,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11681,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11682,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11683,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11684,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11685,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11686,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11687,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11688,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11689,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11690,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11691,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11692,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11693,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11694,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11695,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11696,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11697,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11698,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11699,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11700,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11701,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11702,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11703,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[11677,11678,11679,11680,11681,11682,11683,11684,11685,11686,11687,11688,11689,11690,11691,11692,11693,11694,11695,11696,11697,11698,11699,11700,11701,11702,11703]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":11704,"name":"User-Agent","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":11705,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":11706,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11707,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11708,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11709,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11710,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11711,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11712,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11713,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11714,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11715,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11716,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11717,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11718,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11719,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11720,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11721,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11722,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11723,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11724,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11725,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11726,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11727,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11728,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11729,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11730,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11731,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11732,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[11706,11707,11708,11709,11710,11711,11712,11713,11714,11715,11716,11717,11718,11719,11720,11721,11722,11723,11724,11725,11726,11727,11728,11729,11730,11731,11732]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":11733,"name":"Content-Encoding","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":11734,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":11735,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11736,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11737,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11738,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11739,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11740,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11741,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11742,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11743,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11744,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11745,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11746,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11747,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11748,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11749,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11750,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11751,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11752,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11753,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11754,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11755,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11756,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11757,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11758,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11759,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11760,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11761,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[11735,11736,11737,11738,11739,11740,11741,11742,11743,11744,11745,11746,11747,11748,11749,11750,11751,11752,11753,11754,11755,11756,11757,11758,11759,11760,11761]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":11762,"name":"Authorization","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":11763,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":11764,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11765,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11766,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11767,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11768,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11769,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11770,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11771,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11772,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11773,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11774,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11775,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11776,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11777,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11778,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11779,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11780,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11781,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11782,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11783,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11784,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11785,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11786,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11787,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11788,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11789,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11790,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[11764,11765,11766,11767,11768,11769,11770,11771,11772,11773,11774,11775,11776,11777,11778,11779,11780,11781,11782,11783,11784,11785,11786,11787,11788,11789,11790]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":11820,"name":"link","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":11821,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":11822,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11823,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11824,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11825,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11826,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11827,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11828,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11829,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11830,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11831,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11832,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11833,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11834,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11835,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11836,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11837,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11838,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11839,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11840,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11841,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11842,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11843,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11844,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11845,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11846,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11847,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11848,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[11822,11823,11824,11825,11826,11827,11828,11829,11830,11831,11832,11833,11834,11835,11836,11837,11838,11839,11840,11841,11842,11843,11844,11845,11846,11847,11848]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":11849,"name":"delete","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":11850,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":11851,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11852,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11853,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11854,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11855,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11856,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11857,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11858,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11859,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11860,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11861,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11862,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11863,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11864,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11865,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11866,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11867,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11868,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11869,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11870,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11871,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11872,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11873,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11874,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11875,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11876,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11877,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[11851,11852,11853,11854,11855,11856,11857,11858,11859,11860,11861,11862,11863,11864,11865,11866,11867,11868,11869,11870,11871,11872,11873,11874,11875,11876,11877]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":11878,"name":"get","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":11879,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":11880,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11881,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11882,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11883,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11884,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11885,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11886,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11887,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11888,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11889,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11890,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11891,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11892,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11893,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11894,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11895,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11896,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11897,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11898,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11899,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11900,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11901,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11902,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11903,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11904,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11905,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11906,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[11880,11881,11882,11883,11884,11885,11886,11887,11888,11889,11890,11891,11892,11893,11894,11895,11896,11897,11898,11899,11900,11901,11902,11903,11904,11905,11906]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":11907,"name":"head","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":11908,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":11909,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11910,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11911,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11912,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11913,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11914,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11915,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11916,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11917,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11918,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11919,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11920,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11921,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11922,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11923,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11924,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11925,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11926,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11927,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11928,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11929,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11930,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11931,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11932,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11933,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11934,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11935,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[11909,11910,11911,11912,11913,11914,11915,11916,11917,11918,11919,11920,11921,11922,11923,11924,11925,11926,11927,11928,11929,11930,11931,11932,11933,11934,11935]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":11936,"name":"options","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":11937,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":11938,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11939,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11940,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11941,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11942,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11943,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11944,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11945,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11946,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11947,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11948,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11949,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11950,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11951,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11952,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11953,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11954,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11955,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11956,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11957,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11958,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11959,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11960,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11961,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11962,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11963,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11964,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[11938,11939,11940,11941,11942,11943,11944,11945,11946,11947,11948,11949,11950,11951,11952,11953,11954,11955,11956,11957,11958,11959,11960,11961,11962,11963,11964]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":11965,"name":"post","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":11966,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":11967,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11968,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11969,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11970,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11971,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11972,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11973,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11974,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11975,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11976,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11977,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11978,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11979,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11980,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11981,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11982,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11983,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11984,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11985,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11986,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11987,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11988,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11989,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11990,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11991,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11992,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11993,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[11967,11968,11969,11970,11971,11972,11973,11974,11975,11976,11977,11978,11979,11980,11981,11982,11983,11984,11985,11986,11987,11988,11989,11990,11991,11992,11993]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":11994,"name":"put","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":11995,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":11996,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11997,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11998,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11999,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12000,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12001,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12002,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12003,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12004,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12005,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12006,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12007,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12008,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12009,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12010,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12011,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12012,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12013,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12014,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12015,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12016,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12017,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12018,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12019,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12020,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12021,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12022,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[11996,11997,11998,11999,12000,12001,12002,12003,12004,12005,12006,12007,12008,12009,12010,12011,12012,12013,12014,12015,12016,12017,12018,12019,12020,12021,12022]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":12023,"name":"patch","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":12024,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":12025,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12026,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12027,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12028,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12029,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12030,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12031,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12032,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12033,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12034,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12035,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12036,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12037,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12038,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12039,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12040,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12041,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12042,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12043,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12044,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12045,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12046,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12047,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12048,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12049,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12050,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12051,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[12025,12026,12027,12028,12029,12030,12031,12032,12033,12034,12035,12036,12037,12038,12039,12040,12041,12042,12043,12044,12045,12046,12047,12048,12049,12050,12051]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":12052,"name":"purge","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":12053,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":12054,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12055,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12056,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12057,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12058,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12059,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12060,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12061,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12062,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12063,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12064,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12065,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12066,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12067,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12068,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12069,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12070,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12071,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12072,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12073,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12074,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12075,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12076,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12077,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12078,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12079,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12080,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[12054,12055,12056,12057,12058,12059,12060,12061,12062,12063,12064,12065,12066,12067,12068,12069,12070,12071,12072,12073,12074,12075,12076,12077,12078,12079,12080]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":12081,"name":"unlink","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":12082,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":12083,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12084,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12085,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12086,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12087,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12088,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12089,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12090,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12091,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12092,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12093,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12094,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12095,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12096,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12097,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12098,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12099,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12100,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12101,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12102,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12103,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12104,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12105,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12106,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12107,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12108,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12109,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[12083,12084,12085,12086,12087,12088,12089,12090,12091,12092,12093,12094,12095,12096,12097,12098,12099,12100,12101,12102,12103,12104,12105,12106,12107,12108,12109]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":12110,"name":"common","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":12111,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":12112,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12113,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12114,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12115,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12116,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12117,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12118,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12119,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12120,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12121,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12122,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12123,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12124,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12125,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12126,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12127,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12128,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12129,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12130,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12131,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12132,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12133,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12134,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12135,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12136,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12137,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":12138,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[12112,12113,12114,12115,12116,12117,12118,12119,12120,12121,12122,12123,12124,12125,12126,12127,12128,12129,12130,12131,12132,12133,12134,12135,12136,12137,12138]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":11791,"name":"Content-Type","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":11792,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":11793,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11794,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11795,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11796,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11797,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11798,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11799,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11800,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11801,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11802,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11803,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11804,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11805,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11806,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11807,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11808,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11809,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11810,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11811,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11812,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11813,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11814,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11815,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11816,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11817,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11818,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11819,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[11793,11794,11795,11796,11797,11798,11799,11800,11801,11802,11803,11804,11805,11806,11807,11808,11809,11810,11811,11812,11813,11814,11815,11816,11817,11818,11819]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}}],"groups":[{"title":"Properties","children":[11646,11675,11704,11733,11762,11820,11849,11878,11907,11936,11965,11994,12023,12052,12081,12110,11791]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":12139,"name":"params","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":12140,"name":"paramsSerializer","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":12141,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":12146,"name":"visitor","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":12147,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":12148,"name":"dots","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":12149,"name":"metaTokens","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":12150,"name":"indexes","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":12142,"name":"encode","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":12143,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":12144,"name":"serialize","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":12145,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[12146,12148,12149,12150,12142,12144]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":12151,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":12152,"name":"data","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":12153,"name":"timeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":12154,"name":"timeoutErrorMessage","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":12155,"name":"withCredentials","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":12156,"name":"adapter","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":12157,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"unknown","name":"Answerable<string> | {}"}}]}},{"id":12158,"name":"auth","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":12159,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":12160,"name":"username","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":12161,"name":"password","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[12160,12161]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":12162,"name":"responseType","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":"text"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":"arraybuffer"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":"blob"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":"document"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":"json"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":"stream"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":"formdata"}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":12163,"name":"responseEncoding","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":12164,"name":"xsrfCookieName","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":12165,"name":"xsrfHeaderName","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":12166,"name":"onUploadProgress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":12167,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":12168,"name":"onDownloadProgress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":12169,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":12170,"name":"maxContentLength","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":12171,"name":"validateStatus","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":12172,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":12173,"name":"maxBodyLength","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":12174,"name":"maxRedirects","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":12175,"name":"maxRate","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"tuple","elements":[{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}]}]}},{"id":12176,"name":"beforeRedirect","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":12177,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":12178,"name":"socketPath","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":12179,"name":"transport","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":12180,"name":"httpAgent","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":12181,"name":"httpsAgent","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":12182,"name":"proxy","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":12183,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":12184,"name":"host","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":12185,"name":"port","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":12186,"name":"auth","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":12187,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":12188,"name":"username","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":12189,"name":"password","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[12188,12189]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":12190,"name":"protocol","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[12184,12185,12186,12190]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":12191,"name":"cancelToken","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":12192,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":12193,"name":"promise","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"Cancel"},"name":"Cancel","package":"axios"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":12194,"name":"reason","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":12195,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":12196,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[12196]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":12197,"name":"throwIfRequested","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Properties","children":[12193,12194]},{"title":"Methods","children":[12197]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":12198,"name":"decompress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":12199,"name":"transitional","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":12200,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":12201,"name":"silentJSONParsing","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":12202,"name":"forcedJSONParsing","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":12203,"name":"clarifyTimeoutError","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}}],"groups":[{"title":"Properties","children":[12201,12202,12203]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":12204,"name":"signal","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":12205,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":12206,"name":"aborted","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isReadonly":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":12207,"name":"onabort","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":12208,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":12209,"name":"addEventListener","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":12210,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":12211,"name":"removeEventListener","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":12212,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[12206,12207,12209,12211]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":12213,"name":"insecureHTTPParser","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":12214,"name":"env","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":12215,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":12216,"name":"FormData","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":12217,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[12216]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":12218,"name":"formSerializer","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":12219,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":12220,"name":"visitor","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":12221,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":12222,"name":"dots","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":12223,"name":"metaTokens","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":12224,"name":"indexes","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}}],"groups":[{"title":"Properties","children":[12220,12222,12223,12224]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":12225,"name":"family","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":4}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":6}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":12226,"name":"lookup","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":12227,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":12228,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":12229,"name":"withXSRFToken","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":12230,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":12231,"name":"fetchOptions","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":12232,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[11607,11608,11609,11610,11613,11616,12139,12140,12152,12153,12154,12155,12156,12158,12162,12163,12164,12165,12166,12168,12170,12171,12173,12174,12175,12176,12178,12179,12180,12181,12182,12191,12198,12199,12204,12213,12214,12218,12225,12226,12229,12231]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":10918,"name":"HeadRequest","package":"@serenity-js/rest"}}]}],"groups":[{"title":"Methods","children":[10919,12866,12869,12876,12886,12863,11603]}],"sources":[{"fileName":"packages/rest/src/screenplay/models/HeadRequest.ts","line":34,"character":13}],"extendedTypes":[{"type":"reference","target":12888,"name":"HTTPRequest","package":"@serenity-js/rest"}],"permalink":"/api/rest/class/HeadRequest","previousId":12888,"nextId":14231},{"id":14231,"name":"OptionsRequest","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The OPTIONS method requests information about the communication\\noptions available for the target resource, at either the origin\\nserver or an intervening intermediary.  This method allows a client\\nto determine the options and/or requirements associated with a\\nresource, or the capabilities of a server, without implying a\\nresource action.\\n\\n## File download test\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, OptionsRequest, LastResponse, Send } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(CallAnApi.at(\'https://api.example.org/\'))\\n  .attemptsTo(\\n    Send.a(OptionsRequest.to(\'/downloads/my-test-document.pdf\')),\\n    Ensure.that(LastResponse.status(), equals(200)),\\n    Ensure.that(LastResponse.header(\'Allow\'), equals(\'OPTIONS, GET, HEAD\')),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/OPTIONS\\n- https://tools.ietf.org/html/rfc7231#section-4.3.7"}]},"children":[{"id":14232,"name":"to","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/OptionsRequest.ts","line":50,"character":11}],"signatures":[{"id":14233,"name":"to","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the object with a destination URI.\\n\\nWhen the "},{"kind":"code","text":"`resourceUri`"},{"kind":"text","text":" is not a fully qualified URL but a path, such as "},{"kind":"code","text":"`/products/2`"},{"kind":"text","text":",\\nit gets concatenated with the URL provided to the Axios instance\\nwhen the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/) was instantiated."}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/OptionsRequest.ts","line":50,"character":11}],"parameters":[{"id":14234,"name":"resourceUri","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The URI where the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n should send the ["},{"kind":"code","text":"`HTTPRequest`"},{"kind":"text","text":"](/api/rest/class/HTTPRequest/)"}]},"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":14231,"name":"OptionsRequest","package":"@serenity-js/rest"}}]},{"id":16179,"name":"describedAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"signatures":[{"id":16180,"name":"describedAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Changes the description of this object, as returned by ["},{"kind":"code","text":"`Describable.describedBy`"},{"kind":"text","text":"](/api/core/class/Describable/#describedBy)\\nand ["},{"kind":"code","text":"`Describable.toString`"},{"kind":"text","text":"](/api/core/class/Describable/#toString)."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"parameters":[{"id":16181,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Replaces the current description according to the following rules:\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is an ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable), it replaces the current description\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/), the current description is passed as "},{"kind":"code","text":"`context`"},{"kind":"text","text":" to "},{"kind":"code","text":"`description.of(context)`"},{"kind":"text","text":", and the result replaces the current description"}]},"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":1543,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"},{"type":"reference","target":939,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}]}}],"type":{"type":"intrinsic","name":"this"},"inheritedFrom":{"type":"reference","target":14210,"name":"HTTPRequest.describedAs"}}],"inheritedFrom":{"type":"reference","target":14209,"name":"HTTPRequest.describedAs"}},{"id":16182,"name":"as","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"signatures":[{"id":16183,"name":"as","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Maps this question to one of a different type.\\n\\n"},{"kind":"code","text":"```ts\\nQuestion.about(\'number returned as string\', actor => \'42\')   // returns: QuestionAdapter<string>\\n  .as(Number)                                                // returns: QuestionAdapter<number>\\n```"}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"typeParameter":[{"id":16184,"name":"O","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":16185,"name":"mapping","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":16186,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"signatures":[{"id":16187,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"parameters":[{"id":16188,"name":"answer","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"}}],"type":{"type":"union","types":[{"type":"reference","target":4538,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4538,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reference","target":1041,"typeArguments":[{"type":"reference","target":4538,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":14213,"name":"HTTPRequest.as"}}],"inheritedFrom":{"type":"reference","target":14212,"name":"HTTPRequest.as"}},{"id":16189,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":16190,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":16191,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1049,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":600,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":16192,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":16193,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[16193]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":14220,"name":"HTTPRequest.describedBy"}}],"inheritedFrom":{"type":"reference","target":14219,"name":"HTTPRequest.describedBy"}},{"id":16199,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":16200,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":14230,"name":"HTTPRequest.toString"}}],"inheritedFrom":{"type":"reference","target":14229,"name":"HTTPRequest.toString"}},{"id":16176,"name":"answeredBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/HTTPRequest.ts","line":36,"character":4}],"signatures":[{"id":16177,"name":"answeredBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/HTTPRequest.ts","line":36,"character":4}],"parameters":[{"id":16178,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1049,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":600,"name":"UsesAbilities","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":14207,"name":"HTTPRequest.answeredBy"}}],"inheritedFrom":{"type":"reference","target":14206,"name":"HTTPRequest.answeredBy"}},{"id":14916,"name":"using","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/OptionsRequest.ts","line":66,"character":4}],"signatures":[{"id":14917,"name":"using","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Overrides the default Axios request configuration provided\\nwhen the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/) was instantiated.\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable)\\n- ["},{"kind":"code","text":"`WithAnswerableProperties`"},{"kind":"text","text":"](/api/core/#WithAnswerableProperties)\\n- [AxiosRequestConfig](https://axios-http.com/docs/req_config)"}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/OptionsRequest.ts","line":66,"character":4}],"parameters":[{"id":14918,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Axios request configuration overrides"}]},"type":{"type":"reference","target":688,"typeArguments":[{"type":"reflection","declaration":{"id":14919,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":14920,"name":"url","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":14921,"name":"method","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":14922,"name":"baseURL","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":14923,"name":"transformRequest","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":14924,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reflection","declaration":{"id":14925,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}]}},{"id":14926,"name":"transformResponse","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":14927,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reflection","declaration":{"id":14928,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}]}},{"id":14929,"name":"headers","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":14930,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":14931,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14932,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14933,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14934,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14935,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14936,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14937,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14938,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14939,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14940,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14941,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14942,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14943,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14944,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14945,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14946,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14947,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14948,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14949,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14950,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14951,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14952,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14953,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14954,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14955,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14956,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14957,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[14931,14932,14933,14934,14935,14936,14937,14938,14939,14940,14941,14942,14943,14944,14945,14946,14947,14948,14949,14950,14951,14952,14953,14954,14955,14956,14957]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":14958,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":14959,"name":"Accept","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":14960,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":14961,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14962,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14963,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14964,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14965,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14966,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14967,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14968,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14969,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14970,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14971,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14972,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14973,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14974,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14975,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14976,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14977,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14978,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14979,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14980,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14981,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14982,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14983,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14984,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14985,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14986,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14987,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[14961,14962,14963,14964,14965,14966,14967,14968,14969,14970,14971,14972,14973,14974,14975,14976,14977,14978,14979,14980,14981,14982,14983,14984,14985,14986,14987]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":14988,"name":"Content-Length","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":14989,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":14990,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14991,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14992,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14993,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14994,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14995,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14996,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14997,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14998,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14999,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15000,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15001,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15002,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15003,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15004,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15005,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15006,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15007,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15008,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15009,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15010,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15011,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15012,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15013,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15014,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15015,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15016,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[14990,14991,14992,14993,14994,14995,14996,14997,14998,14999,15000,15001,15002,15003,15004,15005,15006,15007,15008,15009,15010,15011,15012,15013,15014,15015,15016]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":15017,"name":"User-Agent","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":15018,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":15019,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15020,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15021,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15022,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15023,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15024,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15025,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15026,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15027,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15028,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15029,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15030,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15031,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15032,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15033,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15034,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15035,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15036,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15037,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15038,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15039,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15040,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15041,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15042,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15043,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15044,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15045,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[15019,15020,15021,15022,15023,15024,15025,15026,15027,15028,15029,15030,15031,15032,15033,15034,15035,15036,15037,15038,15039,15040,15041,15042,15043,15044,15045]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":15046,"name":"Content-Encoding","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":15047,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":15048,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15049,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15050,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15051,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15052,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15053,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15054,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15055,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15056,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15057,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15058,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15059,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15060,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15061,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15062,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15063,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15064,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15065,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15066,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15067,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15068,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15069,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15070,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15071,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15072,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15073,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15074,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[15048,15049,15050,15051,15052,15053,15054,15055,15056,15057,15058,15059,15060,15061,15062,15063,15064,15065,15066,15067,15068,15069,15070,15071,15072,15073,15074]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":15075,"name":"Authorization","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":15076,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":15077,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15078,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15079,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15080,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15081,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15082,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15083,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15084,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15085,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15086,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15087,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15088,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15089,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15090,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15091,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15092,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15093,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15094,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15095,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15096,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15097,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15098,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15099,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15100,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15101,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15102,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15103,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[15077,15078,15079,15080,15081,15082,15083,15084,15085,15086,15087,15088,15089,15090,15091,15092,15093,15094,15095,15096,15097,15098,15099,15100,15101,15102,15103]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":15133,"name":"link","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":15134,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":15135,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15136,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15137,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15138,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15139,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15140,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15141,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15142,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15143,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15144,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15145,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15146,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15147,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15148,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15149,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15150,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15151,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15152,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15153,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15154,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15155,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15156,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15157,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15158,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15159,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15160,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15161,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[15135,15136,15137,15138,15139,15140,15141,15142,15143,15144,15145,15146,15147,15148,15149,15150,15151,15152,15153,15154,15155,15156,15157,15158,15159,15160,15161]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":15162,"name":"delete","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":15163,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":15164,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15165,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15166,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15167,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15168,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15169,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15170,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15171,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15172,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15173,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15174,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15175,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15176,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15177,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15178,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15179,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15180,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15181,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15182,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15183,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15184,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15185,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15186,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15187,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15188,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15189,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15190,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[15164,15165,15166,15167,15168,15169,15170,15171,15172,15173,15174,15175,15176,15177,15178,15179,15180,15181,15182,15183,15184,15185,15186,15187,15188,15189,15190]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":15191,"name":"get","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":15192,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":15193,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15194,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15195,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15196,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15197,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15198,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15199,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15200,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15201,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15202,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15203,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15204,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15205,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15206,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15207,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15208,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15209,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15210,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15211,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15212,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15213,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15214,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15215,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15216,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15217,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15218,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15219,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[15193,15194,15195,15196,15197,15198,15199,15200,15201,15202,15203,15204,15205,15206,15207,15208,15209,15210,15211,15212,15213,15214,15215,15216,15217,15218,15219]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":15220,"name":"head","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":15221,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":15222,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15223,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15224,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15225,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15226,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15227,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15228,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15229,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15230,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15231,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15232,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15233,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15234,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15235,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15236,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15237,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15238,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15239,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15240,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15241,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15242,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15243,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15244,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15245,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15246,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15247,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15248,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[15222,15223,15224,15225,15226,15227,15228,15229,15230,15231,15232,15233,15234,15235,15236,15237,15238,15239,15240,15241,15242,15243,15244,15245,15246,15247,15248]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":15249,"name":"options","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":15250,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":15251,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15252,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15253,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15254,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15255,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15256,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15257,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15258,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15259,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15260,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15261,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15262,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15263,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15264,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15265,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15266,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15267,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15268,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15269,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15270,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15271,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15272,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15273,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15274,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15275,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15276,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15277,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[15251,15252,15253,15254,15255,15256,15257,15258,15259,15260,15261,15262,15263,15264,15265,15266,15267,15268,15269,15270,15271,15272,15273,15274,15275,15276,15277]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":15278,"name":"post","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":15279,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":15280,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15281,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15282,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15283,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15284,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15285,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15286,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15287,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15288,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15289,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15290,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15291,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15292,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15293,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15294,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15295,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15296,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15297,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15298,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15299,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15300,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15301,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15302,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15303,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15304,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15305,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15306,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[15280,15281,15282,15283,15284,15285,15286,15287,15288,15289,15290,15291,15292,15293,15294,15295,15296,15297,15298,15299,15300,15301,15302,15303,15304,15305,15306]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":15307,"name":"put","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":15308,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":15309,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15310,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15311,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15312,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15313,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15314,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15315,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15316,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15317,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15318,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15319,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15320,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15321,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15322,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15323,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15324,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15325,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15326,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15327,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15328,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15329,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15330,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15331,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15332,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15333,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15334,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15335,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[15309,15310,15311,15312,15313,15314,15315,15316,15317,15318,15319,15320,15321,15322,15323,15324,15325,15326,15327,15328,15329,15330,15331,15332,15333,15334,15335]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":15336,"name":"patch","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":15337,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":15338,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15339,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15340,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15341,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15342,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15343,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15344,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15345,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15346,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15347,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15348,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15349,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15350,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15351,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15352,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15353,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15354,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15355,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15356,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15357,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15358,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15359,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15360,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15361,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15362,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15363,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15364,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[15338,15339,15340,15341,15342,15343,15344,15345,15346,15347,15348,15349,15350,15351,15352,15353,15354,15355,15356,15357,15358,15359,15360,15361,15362,15363,15364]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":15365,"name":"purge","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":15366,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":15367,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15368,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15369,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15370,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15371,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15372,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15373,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15374,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15375,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15376,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15377,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15378,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15379,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15380,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15381,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15382,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15383,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15384,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15385,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15386,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15387,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15388,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15389,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15390,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15391,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15392,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15393,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[15367,15368,15369,15370,15371,15372,15373,15374,15375,15376,15377,15378,15379,15380,15381,15382,15383,15384,15385,15386,15387,15388,15389,15390,15391,15392,15393]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":15394,"name":"unlink","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":15395,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":15396,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15397,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15398,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15399,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15400,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15401,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15402,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15403,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15404,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15405,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15406,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15407,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15408,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15409,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15410,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15411,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15412,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15413,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15414,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15415,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15416,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15417,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15418,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15419,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15420,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15421,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15422,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[15396,15397,15398,15399,15400,15401,15402,15403,15404,15405,15406,15407,15408,15409,15410,15411,15412,15413,15414,15415,15416,15417,15418,15419,15420,15421,15422]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":15423,"name":"common","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":15424,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":15425,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15426,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15427,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15428,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15429,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15430,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15431,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15432,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15433,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15434,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15435,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15436,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15437,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15438,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15439,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15440,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15441,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15442,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15443,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15444,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15445,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15446,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15447,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15448,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15449,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15450,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15451,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[15425,15426,15427,15428,15429,15430,15431,15432,15433,15434,15435,15436,15437,15438,15439,15440,15441,15442,15443,15444,15445,15446,15447,15448,15449,15450,15451]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":15104,"name":"Content-Type","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":15105,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":15106,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15107,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15108,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15109,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15110,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15111,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15112,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15113,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15114,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15115,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15116,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15117,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15118,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15119,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15120,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15121,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15122,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15123,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15124,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15125,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15126,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15127,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15128,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15129,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15130,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15131,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15132,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[15106,15107,15108,15109,15110,15111,15112,15113,15114,15115,15116,15117,15118,15119,15120,15121,15122,15123,15124,15125,15126,15127,15128,15129,15130,15131,15132]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}}],"groups":[{"title":"Properties","children":[14959,14988,15017,15046,15075,15133,15162,15191,15220,15249,15278,15307,15336,15365,15394,15423,15104]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":15452,"name":"params","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":15453,"name":"paramsSerializer","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":15454,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":15459,"name":"visitor","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":15460,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":15461,"name":"dots","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":15462,"name":"metaTokens","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":15463,"name":"indexes","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":15455,"name":"encode","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":15456,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":15457,"name":"serialize","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":15458,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[15459,15461,15462,15463,15455,15457]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":15464,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":15465,"name":"data","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":15466,"name":"timeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":15467,"name":"timeoutErrorMessage","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":15468,"name":"withCredentials","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":15469,"name":"adapter","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":15470,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"unknown","name":"Answerable<string> | {}"}}]}},{"id":15471,"name":"auth","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":15472,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":15473,"name":"username","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":15474,"name":"password","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[15473,15474]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":15475,"name":"responseType","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":"text"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":"arraybuffer"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":"blob"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":"document"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":"json"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":"stream"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":"formdata"}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":15476,"name":"responseEncoding","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":15477,"name":"xsrfCookieName","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":15478,"name":"xsrfHeaderName","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":15479,"name":"onUploadProgress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":15480,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":15481,"name":"onDownloadProgress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":15482,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":15483,"name":"maxContentLength","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":15484,"name":"validateStatus","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":15485,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":15486,"name":"maxBodyLength","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":15487,"name":"maxRedirects","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":15488,"name":"maxRate","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"tuple","elements":[{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}]}]}},{"id":15489,"name":"beforeRedirect","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":15490,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":15491,"name":"socketPath","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":15492,"name":"transport","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":15493,"name":"httpAgent","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":15494,"name":"httpsAgent","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":15495,"name":"proxy","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":15496,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":15497,"name":"host","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":15498,"name":"port","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":15499,"name":"auth","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":15500,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":15501,"name":"username","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":15502,"name":"password","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[15501,15502]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":15503,"name":"protocol","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[15497,15498,15499,15503]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":15504,"name":"cancelToken","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":15505,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":15506,"name":"promise","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"Cancel"},"name":"Cancel","package":"axios"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":15507,"name":"reason","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":15508,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":15509,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[15509]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":15510,"name":"throwIfRequested","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Properties","children":[15506,15507]},{"title":"Methods","children":[15510]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":15511,"name":"decompress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":15512,"name":"transitional","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":15513,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":15514,"name":"silentJSONParsing","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":15515,"name":"forcedJSONParsing","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":15516,"name":"clarifyTimeoutError","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}}],"groups":[{"title":"Properties","children":[15514,15515,15516]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":15517,"name":"signal","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":15518,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":15519,"name":"aborted","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isReadonly":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":15520,"name":"onabort","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":15521,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":15522,"name":"addEventListener","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":15523,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":15524,"name":"removeEventListener","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":15525,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[15519,15520,15522,15524]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":15526,"name":"insecureHTTPParser","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":15527,"name":"env","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":15528,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":15529,"name":"FormData","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":15530,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[15529]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":15531,"name":"formSerializer","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":15532,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":15533,"name":"visitor","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":15534,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":15535,"name":"dots","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":15536,"name":"metaTokens","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":15537,"name":"indexes","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}}],"groups":[{"title":"Properties","children":[15533,15535,15536,15537]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":15538,"name":"family","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":4}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":6}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":15539,"name":"lookup","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":15540,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":15541,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":15542,"name":"withXSRFToken","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":15543,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":15544,"name":"fetchOptions","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":15545,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[14920,14921,14922,14923,14926,14929,15452,15453,15465,15466,15467,15468,15469,15471,15475,15476,15477,15478,15479,15481,15483,15484,15486,15487,15488,15489,15491,15492,15493,15494,15495,15504,15511,15512,15517,15526,15527,15531,15538,15539,15542,15544]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":14231,"name":"OptionsRequest","package":"@serenity-js/rest"}}]}],"groups":[{"title":"Methods","children":[14232,16179,16182,16189,16199,16176,14916]}],"sources":[{"fileName":"packages/rest/src/screenplay/models/OptionsRequest.ts","line":37,"character":13}],"extendedTypes":[{"type":"reference","target":12888,"name":"HTTPRequest","package":"@serenity-js/rest"}],"permalink":"/api/rest/class/OptionsRequest","previousId":10918,"nextId":16201},{"id":16201,"name":"PatchRequest","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The PATCH method requests that a set of changes described in the\\nrequest entity be applied to the resource identified by the "},{"kind":"code","text":"`resourceUri`"},{"kind":"text","text":".\\n\\n## Add new resource to a collection\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, LastResponse, PatchRequest, Send } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(CallAnApi.at(\'https://api.example.org/\'))\\n  .attemptsTo(\\n    Send.a(PatchRequest.to(\'/books/0-688-00230-7\').with({\\n      lastReadOn: \'2016-06-16\',\\n    })),\\n    Ensure.that(LastResponse.status(), equals(204)),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/PATCH\\n- https://tools.ietf.org/html/rfc5789"}]},"children":[{"id":16202,"name":"to","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/PatchRequest.ts","line":47,"character":11}],"signatures":[{"id":16203,"name":"to","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the object with a destination URI.\\n\\nWhen the "},{"kind":"code","text":"`resourceUri`"},{"kind":"text","text":" is not a fully qualified URL but a path, such as "},{"kind":"code","text":"`/products/2`"},{"kind":"text","text":",\\nit gets concatenated with the URL provided to the Axios instance\\nwhen the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/) was instantiated."}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/PatchRequest.ts","line":47,"character":11}],"parameters":[{"id":16204,"name":"resourceUri","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The URI where the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n should send the ["},{"kind":"code","text":"`HTTPRequest`"},{"kind":"text","text":"](/api/rest/class/HTTPRequest/)"}]},"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":16201,"name":"PatchRequest","package":"@serenity-js/rest"}}]},{"id":18152,"name":"describedAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"signatures":[{"id":18153,"name":"describedAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Changes the description of this object, as returned by ["},{"kind":"code","text":"`Describable.describedBy`"},{"kind":"text","text":"](/api/core/class/Describable/#describedBy)\\nand ["},{"kind":"code","text":"`Describable.toString`"},{"kind":"text","text":"](/api/core/class/Describable/#toString)."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"parameters":[{"id":18154,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Replaces the current description according to the following rules:\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is an ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable), it replaces the current description\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/), the current description is passed as "},{"kind":"code","text":"`context`"},{"kind":"text","text":" to "},{"kind":"code","text":"`description.of(context)`"},{"kind":"text","text":", and the result replaces the current description"}]},"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":1543,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"},{"type":"reference","target":939,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}]}}],"type":{"type":"intrinsic","name":"this"},"inheritedFrom":{"type":"reference","target":14210,"name":"HTTPRequest.describedAs"}}],"inheritedFrom":{"type":"reference","target":14209,"name":"HTTPRequest.describedAs"}},{"id":18155,"name":"as","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"signatures":[{"id":18156,"name":"as","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Maps this question to one of a different type.\\n\\n"},{"kind":"code","text":"```ts\\nQuestion.about(\'number returned as string\', actor => \'42\')   // returns: QuestionAdapter<string>\\n  .as(Number)                                                // returns: QuestionAdapter<number>\\n```"}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"typeParameter":[{"id":18157,"name":"O","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":18158,"name":"mapping","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":18159,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"signatures":[{"id":18160,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"parameters":[{"id":18161,"name":"answer","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"}}],"type":{"type":"union","types":[{"type":"reference","target":4538,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4538,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reference","target":1041,"typeArguments":[{"type":"reference","target":4538,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":14213,"name":"HTTPRequest.as"}}],"inheritedFrom":{"type":"reference","target":14212,"name":"HTTPRequest.as"}},{"id":18162,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":18163,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":18164,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1049,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":600,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":18165,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":18166,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[18166]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":14220,"name":"HTTPRequest.describedBy"}}],"inheritedFrom":{"type":"reference","target":14219,"name":"HTTPRequest.describedBy"}},{"id":18172,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":18173,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":14230,"name":"HTTPRequest.toString"}}],"inheritedFrom":{"type":"reference","target":14229,"name":"HTTPRequest.toString"}},{"id":18149,"name":"answeredBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/HTTPRequest.ts","line":36,"character":4}],"signatures":[{"id":18150,"name":"answeredBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/HTTPRequest.ts","line":36,"character":4}],"parameters":[{"id":18151,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1049,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":600,"name":"UsesAbilities","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":14207,"name":"HTTPRequest.answeredBy"}}],"inheritedFrom":{"type":"reference","target":14206,"name":"HTTPRequest.answeredBy"}},{"id":16886,"name":"with","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/PatchRequest.ts","line":57,"character":4}],"signatures":[{"id":16887,"name":"with","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the object with a request body."}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/PatchRequest.ts","line":57,"character":4}],"parameters":[{"id":16888,"name":"data","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Data to be sent to the "},{"kind":"code","text":"`resourceUri`"}]},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"reference","target":16201,"name":"PatchRequest","package":"@serenity-js/rest"}}]},{"id":16889,"name":"using","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/PatchRequest.ts","line":73,"character":4}],"signatures":[{"id":16890,"name":"using","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Overrides the default Axios request configuration provided\\nwhen the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/) was instantiated.\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable)\\n- ["},{"kind":"code","text":"`WithAnswerableProperties`"},{"kind":"text","text":"](/api/core/#WithAnswerableProperties)\\n- [AxiosRequestConfig](https://axios-http.com/docs/req_config)"}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/PatchRequest.ts","line":73,"character":4}],"parameters":[{"id":16891,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Axios request configuration overrides"}]},"type":{"type":"reference","target":688,"typeArguments":[{"type":"reflection","declaration":{"id":16892,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":16893,"name":"url","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":16894,"name":"method","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":16895,"name":"baseURL","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":16896,"name":"transformRequest","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":16897,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reflection","declaration":{"id":16898,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}]}},{"id":16899,"name":"transformResponse","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":16900,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reflection","declaration":{"id":16901,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}]}},{"id":16902,"name":"headers","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":16903,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":16904,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16905,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16906,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16907,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16908,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16909,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16910,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16911,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16912,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16913,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16914,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16915,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16916,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16917,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16918,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16919,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16920,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16921,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16922,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16923,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16924,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16925,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16926,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16927,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16928,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16929,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16930,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[16904,16905,16906,16907,16908,16909,16910,16911,16912,16913,16914,16915,16916,16917,16918,16919,16920,16921,16922,16923,16924,16925,16926,16927,16928,16929,16930]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":16931,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":16932,"name":"Accept","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":16933,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":16934,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16935,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16936,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16937,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16938,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16939,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16940,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16941,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16942,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16943,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16944,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16945,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16946,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16947,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16948,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16949,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16950,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16951,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16952,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16953,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16954,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16955,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16956,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16957,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16958,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16959,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16960,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[16934,16935,16936,16937,16938,16939,16940,16941,16942,16943,16944,16945,16946,16947,16948,16949,16950,16951,16952,16953,16954,16955,16956,16957,16958,16959,16960]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":16961,"name":"Content-Length","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":16962,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":16963,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16964,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16965,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16966,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16967,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16968,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16969,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16970,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16971,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16972,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16973,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16974,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16975,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16976,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16977,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16978,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16979,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16980,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16981,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16982,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16983,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16984,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16985,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16986,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16987,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16988,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16989,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[16963,16964,16965,16966,16967,16968,16969,16970,16971,16972,16973,16974,16975,16976,16977,16978,16979,16980,16981,16982,16983,16984,16985,16986,16987,16988,16989]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":16990,"name":"User-Agent","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":16991,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":16992,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16993,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16994,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16995,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16996,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16997,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16998,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16999,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17000,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17001,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17002,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17003,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17004,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17005,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17006,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17007,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17008,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17009,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17010,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17011,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17012,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17013,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17014,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17015,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17016,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17017,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17018,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[16992,16993,16994,16995,16996,16997,16998,16999,17000,17001,17002,17003,17004,17005,17006,17007,17008,17009,17010,17011,17012,17013,17014,17015,17016,17017,17018]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":17019,"name":"Content-Encoding","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":17020,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":17021,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17022,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17023,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17024,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17025,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17026,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17027,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17028,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17029,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17030,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17031,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17032,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17033,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17034,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17035,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17036,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17037,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17038,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17039,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17040,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17041,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17042,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17043,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17044,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17045,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17046,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17047,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[17021,17022,17023,17024,17025,17026,17027,17028,17029,17030,17031,17032,17033,17034,17035,17036,17037,17038,17039,17040,17041,17042,17043,17044,17045,17046,17047]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":17048,"name":"Authorization","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":17049,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":17050,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17051,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17052,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17053,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17054,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17055,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17056,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17057,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17058,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17059,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17060,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17061,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17062,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17063,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17064,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17065,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17066,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17067,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17068,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17069,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17070,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17071,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17072,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17073,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17074,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17075,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17076,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[17050,17051,17052,17053,17054,17055,17056,17057,17058,17059,17060,17061,17062,17063,17064,17065,17066,17067,17068,17069,17070,17071,17072,17073,17074,17075,17076]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":17106,"name":"link","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":17107,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":17108,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17109,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17110,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17111,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17112,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17113,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17114,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17115,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17116,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17117,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17118,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17119,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17120,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17121,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17122,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17123,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17124,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17125,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17126,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17127,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17128,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17129,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17130,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17131,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17132,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17133,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17134,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[17108,17109,17110,17111,17112,17113,17114,17115,17116,17117,17118,17119,17120,17121,17122,17123,17124,17125,17126,17127,17128,17129,17130,17131,17132,17133,17134]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":17135,"name":"delete","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":17136,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":17137,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17138,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17139,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17140,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17141,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17142,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17143,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17144,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17145,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17146,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17147,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17148,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17149,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17150,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17151,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17152,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17153,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17154,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17155,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17156,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17157,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17158,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17159,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17160,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17161,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17162,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17163,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[17137,17138,17139,17140,17141,17142,17143,17144,17145,17146,17147,17148,17149,17150,17151,17152,17153,17154,17155,17156,17157,17158,17159,17160,17161,17162,17163]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":17164,"name":"get","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":17165,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":17166,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17167,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17168,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17169,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17170,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17171,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17172,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17173,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17174,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17175,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17176,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17177,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17178,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17179,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17180,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17181,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17182,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17183,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17184,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17185,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17186,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17187,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17188,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17189,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17190,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17191,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17192,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[17166,17167,17168,17169,17170,17171,17172,17173,17174,17175,17176,17177,17178,17179,17180,17181,17182,17183,17184,17185,17186,17187,17188,17189,17190,17191,17192]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":17193,"name":"head","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":17194,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":17195,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17196,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17197,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17198,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17199,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17200,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17201,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17202,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17203,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17204,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17205,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17206,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17207,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17208,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17209,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17210,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17211,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17212,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17213,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17214,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17215,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17216,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17217,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17218,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17219,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17220,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17221,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[17195,17196,17197,17198,17199,17200,17201,17202,17203,17204,17205,17206,17207,17208,17209,17210,17211,17212,17213,17214,17215,17216,17217,17218,17219,17220,17221]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":17222,"name":"options","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":17223,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":17224,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17225,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17226,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17227,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17228,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17229,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17230,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17231,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17232,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17233,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17234,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17235,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17236,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17237,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17238,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17239,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17240,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17241,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17242,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17243,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17244,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17245,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17246,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17247,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17248,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17249,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17250,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[17224,17225,17226,17227,17228,17229,17230,17231,17232,17233,17234,17235,17236,17237,17238,17239,17240,17241,17242,17243,17244,17245,17246,17247,17248,17249,17250]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":17251,"name":"post","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":17252,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":17253,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17254,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17255,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17256,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17257,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17258,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17259,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17260,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17261,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17262,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17263,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17264,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17265,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17266,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17267,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17268,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17269,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17270,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17271,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17272,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17273,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17274,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17275,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17276,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17277,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17278,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17279,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[17253,17254,17255,17256,17257,17258,17259,17260,17261,17262,17263,17264,17265,17266,17267,17268,17269,17270,17271,17272,17273,17274,17275,17276,17277,17278,17279]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":17280,"name":"put","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":17281,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":17282,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17283,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17284,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17285,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17286,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17287,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17288,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17289,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17290,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17291,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17292,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17293,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17294,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17295,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17296,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17297,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17298,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17299,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17300,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17301,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17302,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17303,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17304,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17305,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17306,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17307,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17308,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[17282,17283,17284,17285,17286,17287,17288,17289,17290,17291,17292,17293,17294,17295,17296,17297,17298,17299,17300,17301,17302,17303,17304,17305,17306,17307,17308]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":17309,"name":"patch","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":17310,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":17311,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17312,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17313,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17314,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17315,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17316,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17317,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17318,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17319,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17320,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17321,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17322,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17323,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17324,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17325,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17326,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17327,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17328,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17329,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17330,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17331,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17332,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17333,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17334,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17335,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17336,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17337,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[17311,17312,17313,17314,17315,17316,17317,17318,17319,17320,17321,17322,17323,17324,17325,17326,17327,17328,17329,17330,17331,17332,17333,17334,17335,17336,17337]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":17338,"name":"purge","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":17339,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":17340,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17341,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17342,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17343,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17344,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17345,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17346,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17347,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17348,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17349,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17350,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17351,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17352,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17353,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17354,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17355,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17356,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17357,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17358,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17359,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17360,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17361,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17362,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17363,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17364,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17365,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17366,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[17340,17341,17342,17343,17344,17345,17346,17347,17348,17349,17350,17351,17352,17353,17354,17355,17356,17357,17358,17359,17360,17361,17362,17363,17364,17365,17366]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":17367,"name":"unlink","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":17368,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":17369,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17370,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17371,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17372,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17373,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17374,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17375,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17376,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17377,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17378,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17379,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17380,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17381,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17382,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17383,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17384,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17385,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17386,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17387,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17388,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17389,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17390,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17391,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17392,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17393,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17394,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17395,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[17369,17370,17371,17372,17373,17374,17375,17376,17377,17378,17379,17380,17381,17382,17383,17384,17385,17386,17387,17388,17389,17390,17391,17392,17393,17394,17395]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":17396,"name":"common","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":17397,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":17398,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17399,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17400,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17401,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17402,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17403,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17404,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17405,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17406,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17407,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17408,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17409,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17410,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17411,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17412,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17413,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17414,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17415,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17416,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17417,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17418,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17419,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17420,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17421,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17422,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17423,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17424,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[17398,17399,17400,17401,17402,17403,17404,17405,17406,17407,17408,17409,17410,17411,17412,17413,17414,17415,17416,17417,17418,17419,17420,17421,17422,17423,17424]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":17077,"name":"Content-Type","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":17078,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":17079,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17080,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17081,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17082,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17083,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17084,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17085,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17086,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17087,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17088,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17089,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17090,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17091,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17092,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17093,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17094,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17095,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17096,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17097,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17098,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17099,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17100,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17101,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17102,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17103,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17104,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17105,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[17079,17080,17081,17082,17083,17084,17085,17086,17087,17088,17089,17090,17091,17092,17093,17094,17095,17096,17097,17098,17099,17100,17101,17102,17103,17104,17105]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}}],"groups":[{"title":"Properties","children":[16932,16961,16990,17019,17048,17106,17135,17164,17193,17222,17251,17280,17309,17338,17367,17396,17077]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":17425,"name":"params","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":17426,"name":"paramsSerializer","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":17427,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":17432,"name":"visitor","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":17433,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":17434,"name":"dots","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":17435,"name":"metaTokens","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":17436,"name":"indexes","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":17428,"name":"encode","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":17429,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":17430,"name":"serialize","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":17431,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[17432,17434,17435,17436,17428,17430]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":17437,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":17438,"name":"data","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":17439,"name":"timeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":17440,"name":"timeoutErrorMessage","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":17441,"name":"withCredentials","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":17442,"name":"adapter","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":17443,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"unknown","name":"Answerable<string> | {}"}}]}},{"id":17444,"name":"auth","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":17445,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":17446,"name":"username","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":17447,"name":"password","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[17446,17447]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":17448,"name":"responseType","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":"text"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":"arraybuffer"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":"blob"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":"document"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":"json"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":"stream"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":"formdata"}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":17449,"name":"responseEncoding","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":17450,"name":"xsrfCookieName","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":17451,"name":"xsrfHeaderName","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":17452,"name":"onUploadProgress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":17453,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":17454,"name":"onDownloadProgress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":17455,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":17456,"name":"maxContentLength","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":17457,"name":"validateStatus","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":17458,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":17459,"name":"maxBodyLength","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":17460,"name":"maxRedirects","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":17461,"name":"maxRate","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"tuple","elements":[{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}]}]}},{"id":17462,"name":"beforeRedirect","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":17463,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":17464,"name":"socketPath","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":17465,"name":"transport","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":17466,"name":"httpAgent","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":17467,"name":"httpsAgent","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":17468,"name":"proxy","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":17469,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":17470,"name":"host","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":17471,"name":"port","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":17472,"name":"auth","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":17473,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":17474,"name":"username","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":17475,"name":"password","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[17474,17475]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":17476,"name":"protocol","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[17470,17471,17472,17476]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":17477,"name":"cancelToken","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":17478,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":17479,"name":"promise","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"Cancel"},"name":"Cancel","package":"axios"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":17480,"name":"reason","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":17481,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":17482,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[17482]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":17483,"name":"throwIfRequested","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Properties","children":[17479,17480]},{"title":"Methods","children":[17483]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":17484,"name":"decompress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":17485,"name":"transitional","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":17486,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":17487,"name":"silentJSONParsing","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":17488,"name":"forcedJSONParsing","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":17489,"name":"clarifyTimeoutError","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}}],"groups":[{"title":"Properties","children":[17487,17488,17489]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":17490,"name":"signal","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":17491,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":17492,"name":"aborted","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isReadonly":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":17493,"name":"onabort","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":17494,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":17495,"name":"addEventListener","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":17496,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":17497,"name":"removeEventListener","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":17498,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[17492,17493,17495,17497]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":17499,"name":"insecureHTTPParser","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":17500,"name":"env","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":17501,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":17502,"name":"FormData","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":17503,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[17502]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":17504,"name":"formSerializer","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":17505,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":17506,"name":"visitor","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":17507,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":17508,"name":"dots","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":17509,"name":"metaTokens","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":17510,"name":"indexes","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}}],"groups":[{"title":"Properties","children":[17506,17508,17509,17510]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":17511,"name":"family","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":4}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":6}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":17512,"name":"lookup","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":17513,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":17514,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":17515,"name":"withXSRFToken","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":17516,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":17517,"name":"fetchOptions","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":17518,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[16893,16894,16895,16896,16899,16902,17425,17426,17438,17439,17440,17441,17442,17444,17448,17449,17450,17451,17452,17454,17456,17457,17459,17460,17461,17462,17464,17465,17466,17467,17468,17477,17484,17485,17490,17499,17500,17504,17511,17512,17515,17517]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":16201,"name":"PatchRequest","package":"@serenity-js/rest"}}]}],"groups":[{"title":"Methods","children":[16202,18152,18155,18162,18172,18149,16886,16889]}],"sources":[{"fileName":"packages/rest/src/screenplay/models/PatchRequest.ts","line":34,"character":13}],"extendedTypes":[{"type":"reference","target":12888,"name":"HTTPRequest","package":"@serenity-js/rest"}],"permalink":"/api/rest/class/PatchRequest","previousId":14231,"nextId":18174},{"id":18174,"name":"PostRequest","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The HTTP POST method requests that the origin server accepts\\nthe entity enclosed in the request as a new subordinate of the resource\\nidentified by the "},{"kind":"code","text":"`resourceUri`"},{"kind":"text","text":".\\n\\nThis means that the POST should be used when you want to create a child resource under\\na collection of resources.\\n\\nPOST request is neither [safe](https://developer.mozilla.org/en-US/docs/Glossary/Safe),\\nnor [idempotent](https://developer.mozilla.org/en-US/docs/Glossary/Idempotent).\\nThis means that if you retry a POST request N times,\\na correctly implemented HTTP REST API will create N resources with N different URIs.\\n\\n## Add new resource to a collection\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, LastResponse, PostRequest, Send } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(CallAnApi.at(\'https://api.example.org/\'))\\n  .attemptsTo(\\n    Send.a(PostRequest.to(\'/books\').with({\\n      isbn: \'0-688-00230-7\',\\n      title: \'Zen and the Art of Motorcycle Maintenance: An Inquiry into Values\',\\n      author: \'Robert M. Pirsig\',\\n    })),\\n    Ensure.that(LastResponse.status(), equals(201)),\\n    Ensure.that(LastResponse.header(\'Location\'), equals(\'/books/0-688-00230-7\')),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Submit an HTML form\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, LastResponse, PostRequest, Send } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { stringify } from \'querystring\'\\n\\nconst formData = stringify({\\n    name: actor.name,\\n    email: `${ actor.name }@example.com`,\\n    text: \'Your website is great! Learnt a lot :-)\'\\n});\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(CallAnApi.at(\'https://api.example.org/\'))\\n  .attemptsTo(\\n    Send.a(PostRequest.to(\'/feedback\').with(formData).using({\\n      headers: {\\n        \'Content-Type\': \'application/x-www-form-urlencoded\',\\n        \'Content-Length\': formData.length\\n      }\\n    })),\\n    Ensure.that(LastResponse.status(), equals(200)),\\n    Ensure.that(LastResponse.header(\'Location\'), equals(\'/feedback/thank-you.html\')),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/POST\\n- https://tools.ietf.org/html/rfc7231#section-4.3.3"}]},"children":[{"id":18175,"name":"to","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/PostRequest.ts","line":87,"character":11}],"signatures":[{"id":18176,"name":"to","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the object with a destination URI.\\n\\nWhen the "},{"kind":"code","text":"`resourceUri`"},{"kind":"text","text":" is not a fully qualified URL but a path, such as "},{"kind":"code","text":"`/products/2`"},{"kind":"text","text":",\\nit gets concatenated with the URL provided to the Axios instance\\nwhen the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/) was instantiated."}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/PostRequest.ts","line":87,"character":11}],"parameters":[{"id":18177,"name":"resourceUri","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The URI where the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n should send the ["},{"kind":"code","text":"`HTTPRequest`"},{"kind":"text","text":"](/api/rest/class/HTTPRequest/)"}]},"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":18174,"name":"PostRequest","package":"@serenity-js/rest"}}]},{"id":20125,"name":"describedAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"signatures":[{"id":20126,"name":"describedAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Changes the description of this object, as returned by ["},{"kind":"code","text":"`Describable.describedBy`"},{"kind":"text","text":"](/api/core/class/Describable/#describedBy)\\nand ["},{"kind":"code","text":"`Describable.toString`"},{"kind":"text","text":"](/api/core/class/Describable/#toString)."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"parameters":[{"id":20127,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Replaces the current description according to the following rules:\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is an ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable), it replaces the current description\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/), the current description is passed as "},{"kind":"code","text":"`context`"},{"kind":"text","text":" to "},{"kind":"code","text":"`description.of(context)`"},{"kind":"text","text":", and the result replaces the current description"}]},"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":1543,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"},{"type":"reference","target":939,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}]}}],"type":{"type":"intrinsic","name":"this"},"inheritedFrom":{"type":"reference","target":14210,"name":"HTTPRequest.describedAs"}}],"inheritedFrom":{"type":"reference","target":14209,"name":"HTTPRequest.describedAs"}},{"id":20128,"name":"as","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"signatures":[{"id":20129,"name":"as","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Maps this question to one of a different type.\\n\\n"},{"kind":"code","text":"```ts\\nQuestion.about(\'number returned as string\', actor => \'42\')   // returns: QuestionAdapter<string>\\n  .as(Number)                                                // returns: QuestionAdapter<number>\\n```"}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"typeParameter":[{"id":20130,"name":"O","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":20131,"name":"mapping","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":20132,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"signatures":[{"id":20133,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"parameters":[{"id":20134,"name":"answer","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"}}],"type":{"type":"union","types":[{"type":"reference","target":4538,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4538,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reference","target":1041,"typeArguments":[{"type":"reference","target":4538,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":14213,"name":"HTTPRequest.as"}}],"inheritedFrom":{"type":"reference","target":14212,"name":"HTTPRequest.as"}},{"id":20135,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":20136,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":20137,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1049,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":600,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":20138,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":20139,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[20139]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":14220,"name":"HTTPRequest.describedBy"}}],"inheritedFrom":{"type":"reference","target":14219,"name":"HTTPRequest.describedBy"}},{"id":20145,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":20146,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":14230,"name":"HTTPRequest.toString"}}],"inheritedFrom":{"type":"reference","target":14229,"name":"HTTPRequest.toString"}},{"id":20122,"name":"answeredBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/HTTPRequest.ts","line":36,"character":4}],"signatures":[{"id":20123,"name":"answeredBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/HTTPRequest.ts","line":36,"character":4}],"parameters":[{"id":20124,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1049,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":600,"name":"UsesAbilities","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":14207,"name":"HTTPRequest.answeredBy"}}],"inheritedFrom":{"type":"reference","target":14206,"name":"HTTPRequest.answeredBy"}},{"id":18859,"name":"with","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/PostRequest.ts","line":97,"character":4}],"signatures":[{"id":18860,"name":"with","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the object with a request body."}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/PostRequest.ts","line":97,"character":4}],"parameters":[{"id":18861,"name":"data","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Data to be sent to the "},{"kind":"code","text":"`resourceUri`"}]},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"reference","target":18174,"name":"PostRequest","package":"@serenity-js/rest"}}]},{"id":18862,"name":"using","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/PostRequest.ts","line":113,"character":4}],"signatures":[{"id":18863,"name":"using","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Overrides the default Axios request configuration provided\\nwhen the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/) was instantiated.\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable)\\n- ["},{"kind":"code","text":"`WithAnswerableProperties`"},{"kind":"text","text":"](/api/core/#WithAnswerableProperties)\\n- [AxiosRequestConfig](https://axios-http.com/docs/req_config)"}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/PostRequest.ts","line":113,"character":4}],"parameters":[{"id":18864,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Axios request configuration overrides"}]},"type":{"type":"reference","target":688,"typeArguments":[{"type":"reflection","declaration":{"id":18865,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":18866,"name":"url","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":18867,"name":"method","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":18868,"name":"baseURL","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":18869,"name":"transformRequest","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":18870,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reflection","declaration":{"id":18871,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}]}},{"id":18872,"name":"transformResponse","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":18873,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reflection","declaration":{"id":18874,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}]}},{"id":18875,"name":"headers","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":18876,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":18877,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18878,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18879,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18880,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18881,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18882,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18883,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18884,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18885,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18886,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18887,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18888,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18889,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18890,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18891,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18892,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18893,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18894,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18895,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18896,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18897,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18898,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18899,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18900,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18901,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18902,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18903,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[18877,18878,18879,18880,18881,18882,18883,18884,18885,18886,18887,18888,18889,18890,18891,18892,18893,18894,18895,18896,18897,18898,18899,18900,18901,18902,18903]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":18904,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":18905,"name":"Accept","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":18906,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":18907,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18908,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18909,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18910,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18911,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18912,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18913,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18914,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18915,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18916,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18917,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18918,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18919,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18920,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18921,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18922,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18923,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18924,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18925,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18926,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18927,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18928,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18929,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18930,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18931,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18932,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18933,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[18907,18908,18909,18910,18911,18912,18913,18914,18915,18916,18917,18918,18919,18920,18921,18922,18923,18924,18925,18926,18927,18928,18929,18930,18931,18932,18933]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":18934,"name":"Content-Length","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":18935,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":18936,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18937,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18938,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18939,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18940,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18941,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18942,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18943,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18944,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18945,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18946,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18947,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18948,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18949,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18950,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18951,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18952,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18953,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18954,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18955,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18956,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18957,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18958,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18959,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18960,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18961,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18962,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[18936,18937,18938,18939,18940,18941,18942,18943,18944,18945,18946,18947,18948,18949,18950,18951,18952,18953,18954,18955,18956,18957,18958,18959,18960,18961,18962]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":18963,"name":"User-Agent","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":18964,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":18965,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18966,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18967,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18968,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18969,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18970,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18971,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18972,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18973,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18974,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18975,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18976,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18977,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18978,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18979,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18980,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18981,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18982,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18983,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18984,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18985,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18986,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18987,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18988,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18989,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18990,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18991,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[18965,18966,18967,18968,18969,18970,18971,18972,18973,18974,18975,18976,18977,18978,18979,18980,18981,18982,18983,18984,18985,18986,18987,18988,18989,18990,18991]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":18992,"name":"Content-Encoding","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":18993,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":18994,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18995,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18996,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18997,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18998,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18999,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19000,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19001,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19002,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19003,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19004,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19005,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19006,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19007,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19008,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19009,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19010,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19011,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19012,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19013,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19014,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19015,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19016,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19017,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19018,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19019,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19020,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[18994,18995,18996,18997,18998,18999,19000,19001,19002,19003,19004,19005,19006,19007,19008,19009,19010,19011,19012,19013,19014,19015,19016,19017,19018,19019,19020]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":19021,"name":"Authorization","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":19022,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":19023,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19024,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19025,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19026,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19027,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19028,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19029,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19030,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19031,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19032,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19033,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19034,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19035,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19036,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19037,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19038,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19039,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19040,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19041,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19042,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19043,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19044,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19045,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19046,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19047,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19048,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19049,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[19023,19024,19025,19026,19027,19028,19029,19030,19031,19032,19033,19034,19035,19036,19037,19038,19039,19040,19041,19042,19043,19044,19045,19046,19047,19048,19049]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":19079,"name":"link","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":19080,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":19081,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19082,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19083,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19084,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19085,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19086,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19087,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19088,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19089,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19090,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19091,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19092,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19093,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19094,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19095,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19096,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19097,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19098,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19099,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19100,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19101,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19102,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19103,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19104,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19105,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19106,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19107,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[19081,19082,19083,19084,19085,19086,19087,19088,19089,19090,19091,19092,19093,19094,19095,19096,19097,19098,19099,19100,19101,19102,19103,19104,19105,19106,19107]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19108,"name":"delete","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":19109,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":19110,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19111,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19112,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19113,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19114,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19115,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19116,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19117,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19118,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19119,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19120,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19121,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19122,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19123,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19124,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19125,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19126,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19127,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19128,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19129,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19130,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19131,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19132,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19133,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19134,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19135,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19136,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[19110,19111,19112,19113,19114,19115,19116,19117,19118,19119,19120,19121,19122,19123,19124,19125,19126,19127,19128,19129,19130,19131,19132,19133,19134,19135,19136]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19137,"name":"get","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":19138,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":19139,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19140,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19141,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19142,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19143,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19144,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19145,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19146,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19147,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19148,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19149,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19150,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19151,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19152,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19153,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19154,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19155,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19156,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19157,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19158,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19159,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19160,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19161,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19162,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19163,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19164,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19165,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[19139,19140,19141,19142,19143,19144,19145,19146,19147,19148,19149,19150,19151,19152,19153,19154,19155,19156,19157,19158,19159,19160,19161,19162,19163,19164,19165]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19166,"name":"head","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":19167,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":19168,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19169,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19170,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19171,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19172,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19173,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19174,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19175,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19176,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19177,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19178,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19179,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19180,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19181,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19182,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19183,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19184,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19185,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19186,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19187,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19188,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19189,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19190,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19191,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19192,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19193,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19194,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[19168,19169,19170,19171,19172,19173,19174,19175,19176,19177,19178,19179,19180,19181,19182,19183,19184,19185,19186,19187,19188,19189,19190,19191,19192,19193,19194]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19195,"name":"options","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":19196,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":19197,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19198,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19199,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19200,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19201,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19202,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19203,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19204,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19205,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19206,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19207,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19208,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19209,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19210,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19211,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19212,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19213,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19214,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19215,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19216,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19217,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19218,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19219,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19220,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19221,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19222,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19223,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[19197,19198,19199,19200,19201,19202,19203,19204,19205,19206,19207,19208,19209,19210,19211,19212,19213,19214,19215,19216,19217,19218,19219,19220,19221,19222,19223]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19224,"name":"post","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":19225,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":19226,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19227,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19228,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19229,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19230,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19231,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19232,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19233,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19234,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19235,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19236,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19237,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19238,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19239,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19240,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19241,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19242,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19243,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19244,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19245,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19246,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19247,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19248,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19249,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19250,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19251,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19252,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[19226,19227,19228,19229,19230,19231,19232,19233,19234,19235,19236,19237,19238,19239,19240,19241,19242,19243,19244,19245,19246,19247,19248,19249,19250,19251,19252]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19253,"name":"put","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":19254,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":19255,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19256,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19257,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19258,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19259,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19260,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19261,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19262,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19263,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19264,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19265,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19266,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19267,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19268,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19269,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19270,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19271,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19272,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19273,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19274,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19275,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19276,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19277,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19278,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19279,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19280,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19281,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[19255,19256,19257,19258,19259,19260,19261,19262,19263,19264,19265,19266,19267,19268,19269,19270,19271,19272,19273,19274,19275,19276,19277,19278,19279,19280,19281]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19282,"name":"patch","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":19283,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":19284,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19285,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19286,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19287,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19288,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19289,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19290,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19291,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19292,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19293,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19294,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19295,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19296,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19297,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19298,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19299,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19300,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19301,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19302,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19303,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19304,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19305,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19306,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19307,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19308,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19309,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19310,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[19284,19285,19286,19287,19288,19289,19290,19291,19292,19293,19294,19295,19296,19297,19298,19299,19300,19301,19302,19303,19304,19305,19306,19307,19308,19309,19310]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19311,"name":"purge","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":19312,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":19313,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19314,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19315,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19316,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19317,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19318,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19319,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19320,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19321,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19322,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19323,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19324,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19325,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19326,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19327,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19328,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19329,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19330,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19331,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19332,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19333,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19334,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19335,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19336,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19337,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19338,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19339,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[19313,19314,19315,19316,19317,19318,19319,19320,19321,19322,19323,19324,19325,19326,19327,19328,19329,19330,19331,19332,19333,19334,19335,19336,19337,19338,19339]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19340,"name":"unlink","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":19341,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":19342,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19343,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19344,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19345,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19346,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19347,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19348,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19349,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19350,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19351,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19352,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19353,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19354,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19355,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19356,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19357,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19358,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19359,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19360,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19361,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19362,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19363,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19364,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19365,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19366,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19367,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19368,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[19342,19343,19344,19345,19346,19347,19348,19349,19350,19351,19352,19353,19354,19355,19356,19357,19358,19359,19360,19361,19362,19363,19364,19365,19366,19367,19368]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19369,"name":"common","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":19370,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":19371,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19372,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19373,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19374,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19375,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19376,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19377,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19378,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19379,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19380,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19381,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19382,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19383,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19384,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19385,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19386,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19387,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19388,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19389,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19390,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19391,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19392,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19393,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19394,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19395,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19396,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19397,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[19371,19372,19373,19374,19375,19376,19377,19378,19379,19380,19381,19382,19383,19384,19385,19386,19387,19388,19389,19390,19391,19392,19393,19394,19395,19396,19397]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19050,"name":"Content-Type","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":19051,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":19052,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19053,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19054,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19055,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19056,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19057,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19058,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19059,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19060,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19061,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19062,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19063,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19064,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19065,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19066,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19067,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19068,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19069,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19070,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19071,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19072,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19073,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19074,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19075,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19076,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19077,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19078,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[19052,19053,19054,19055,19056,19057,19058,19059,19060,19061,19062,19063,19064,19065,19066,19067,19068,19069,19070,19071,19072,19073,19074,19075,19076,19077,19078]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}}],"groups":[{"title":"Properties","children":[18905,18934,18963,18992,19021,19079,19108,19137,19166,19195,19224,19253,19282,19311,19340,19369,19050]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":19398,"name":"params","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":19399,"name":"paramsSerializer","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":19400,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":19405,"name":"visitor","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":19406,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19407,"name":"dots","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":19408,"name":"metaTokens","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":19409,"name":"indexes","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":19401,"name":"encode","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":19402,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19403,"name":"serialize","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":19404,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[19405,19407,19408,19409,19401,19403]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":19410,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":19411,"name":"data","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":19412,"name":"timeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":19413,"name":"timeoutErrorMessage","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":19414,"name":"withCredentials","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":19415,"name":"adapter","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":19416,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"unknown","name":"Answerable<string> | {}"}}]}},{"id":19417,"name":"auth","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":19418,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":19419,"name":"username","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":19420,"name":"password","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[19419,19420]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19421,"name":"responseType","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":"text"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":"arraybuffer"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":"blob"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":"document"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":"json"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":"stream"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":"formdata"}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":19422,"name":"responseEncoding","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":19423,"name":"xsrfCookieName","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":19424,"name":"xsrfHeaderName","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":19425,"name":"onUploadProgress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":19426,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19427,"name":"onDownloadProgress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":19428,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19429,"name":"maxContentLength","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":19430,"name":"validateStatus","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":19431,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19432,"name":"maxBodyLength","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":19433,"name":"maxRedirects","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":19434,"name":"maxRate","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"tuple","elements":[{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}]}]}},{"id":19435,"name":"beforeRedirect","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":19436,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19437,"name":"socketPath","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":19438,"name":"transport","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":19439,"name":"httpAgent","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":19440,"name":"httpsAgent","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":19441,"name":"proxy","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":19442,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":19443,"name":"host","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":19444,"name":"port","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":19445,"name":"auth","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":19446,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":19447,"name":"username","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":19448,"name":"password","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[19447,19448]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19449,"name":"protocol","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[19443,19444,19445,19449]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":19450,"name":"cancelToken","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":19451,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":19452,"name":"promise","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"Cancel"},"name":"Cancel","package":"axios"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":19453,"name":"reason","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":19454,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":19455,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[19455]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19456,"name":"throwIfRequested","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Properties","children":[19452,19453]},{"title":"Methods","children":[19456]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19457,"name":"decompress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":19458,"name":"transitional","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":19459,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":19460,"name":"silentJSONParsing","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":19461,"name":"forcedJSONParsing","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":19462,"name":"clarifyTimeoutError","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}}],"groups":[{"title":"Properties","children":[19460,19461,19462]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19463,"name":"signal","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":19464,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":19465,"name":"aborted","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isReadonly":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":19466,"name":"onabort","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":19467,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19468,"name":"addEventListener","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":19469,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19470,"name":"removeEventListener","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":19471,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[19465,19466,19468,19470]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19472,"name":"insecureHTTPParser","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":19473,"name":"env","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":19474,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":19475,"name":"FormData","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":19476,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[19475]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19477,"name":"formSerializer","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":19478,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":19479,"name":"visitor","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":19480,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19481,"name":"dots","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":19482,"name":"metaTokens","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":19483,"name":"indexes","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}}],"groups":[{"title":"Properties","children":[19479,19481,19482,19483]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19484,"name":"family","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":4}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":6}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":19485,"name":"lookup","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":19486,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":19487,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":19488,"name":"withXSRFToken","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":19489,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":19490,"name":"fetchOptions","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":19491,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[18866,18867,18868,18869,18872,18875,19398,19399,19411,19412,19413,19414,19415,19417,19421,19422,19423,19424,19425,19427,19429,19430,19432,19433,19434,19435,19437,19438,19439,19440,19441,19450,19457,19458,19463,19472,19473,19477,19484,19485,19488,19490]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":18174,"name":"PostRequest","package":"@serenity-js/rest"}}]}],"groups":[{"title":"Methods","children":[18175,20125,20128,20135,20145,20122,18859,18862]}],"sources":[{"fileName":"packages/rest/src/screenplay/models/PostRequest.ts","line":74,"character":13}],"extendedTypes":[{"type":"reference","target":12888,"name":"HTTPRequest","package":"@serenity-js/rest"}],"permalink":"/api/rest/class/PostRequest","previousId":16201,"nextId":20147},{"id":20147,"name":"PutRequest","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The PUT method requests that the state of the target resource be\\ncreated or replaced with the state defined by the representation\\nenclosed in the request message payload.\\n\\nPUT request should be used when you want to create\\na new resource at a known "},{"kind":"code","text":"`resourceUri`"},{"kind":"text","text":" (e.g. "},{"kind":"code","text":"`/books/0-688-00230-7`"},{"kind":"text","text":")\\nor replace an existing resource at such "},{"kind":"code","text":"`resourceUri`"},{"kind":"text","text":".\\n\\nPUT request is [idempotent](https://developer.mozilla.org/en-US/docs/Glossary/Idempotent):\\ncalling it once or several times successively has the same effect (that is no _side effect_).\\n\\n## Create a new resource at a known location\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\';\\nimport { CallAnApi, LastResponse, PutRequest, Send } from \'@serenity-js/rest\';\\nimport { Ensure, equals } from \'@serenity-js/assertions\';\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(CallAnApi.at(\'https://api.example.org/\'))\\n  .attemptsTo(\\n    Send.a(PutRequest.to(\'/books/0-688-00230-7\').with({\\n      isbn: \'0-688-00230-7\',\\n      title: \'Zen and the Art of Motorcycle Maintenance: An Inquiry into Values\',\\n      author: \'Robert M. Pirsig\',\\n    })),\\n    Ensure.that(LastResponse.status(), equals(201)),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/PUT\\n- https://tools.ietf.org/html/rfc7231#section-4.3.4"}]},"children":[{"id":20148,"name":"to","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/PutRequest.ts","line":57,"character":11}],"signatures":[{"id":20149,"name":"to","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the object with a destination URI.\\n\\nWhen the "},{"kind":"code","text":"`resourceUri`"},{"kind":"text","text":" is not a fully qualified URL but a path, such as "},{"kind":"code","text":"`/products/2`"},{"kind":"text","text":",\\nit gets concatenated with the URL provided to the Axios instance\\nwhen the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/) was instantiated."}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/PutRequest.ts","line":57,"character":11}],"parameters":[{"id":20150,"name":"resourceUri","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The URI where the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n should send the ["},{"kind":"code","text":"`HTTPRequest`"},{"kind":"text","text":"](/api/rest/class/HTTPRequest/)"}]},"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":20147,"name":"PutRequest","package":"@serenity-js/rest"}}]},{"id":22098,"name":"describedAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"signatures":[{"id":22099,"name":"describedAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Changes the description of this object, as returned by ["},{"kind":"code","text":"`Describable.describedBy`"},{"kind":"text","text":"](/api/core/class/Describable/#describedBy)\\nand ["},{"kind":"code","text":"`Describable.toString`"},{"kind":"text","text":"](/api/core/class/Describable/#toString)."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"parameters":[{"id":22100,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Replaces the current description according to the following rules:\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is an ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable), it replaces the current description\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/), the current description is passed as "},{"kind":"code","text":"`context`"},{"kind":"text","text":" to "},{"kind":"code","text":"`description.of(context)`"},{"kind":"text","text":", and the result replaces the current description"}]},"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":1543,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"},{"type":"reference","target":939,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}]}}],"type":{"type":"intrinsic","name":"this"},"inheritedFrom":{"type":"reference","target":14210,"name":"HTTPRequest.describedAs"}}],"inheritedFrom":{"type":"reference","target":14209,"name":"HTTPRequest.describedAs"}},{"id":22101,"name":"as","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"signatures":[{"id":22102,"name":"as","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Maps this question to one of a different type.\\n\\n"},{"kind":"code","text":"```ts\\nQuestion.about(\'number returned as string\', actor => \'42\')   // returns: QuestionAdapter<string>\\n  .as(Number)                                                // returns: QuestionAdapter<number>\\n```"}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"typeParameter":[{"id":22103,"name":"O","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":22104,"name":"mapping","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":22105,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"signatures":[{"id":22106,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"parameters":[{"id":22107,"name":"answer","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"}}],"type":{"type":"union","types":[{"type":"reference","target":4538,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4538,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reference","target":1041,"typeArguments":[{"type":"reference","target":4538,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":14213,"name":"HTTPRequest.as"}}],"inheritedFrom":{"type":"reference","target":14212,"name":"HTTPRequest.as"}},{"id":22108,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":22109,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":22110,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1049,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":600,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":22111,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":22112,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[22112]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":14220,"name":"HTTPRequest.describedBy"}}],"inheritedFrom":{"type":"reference","target":14219,"name":"HTTPRequest.describedBy"}},{"id":22118,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":22119,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":14230,"name":"HTTPRequest.toString"}}],"inheritedFrom":{"type":"reference","target":14229,"name":"HTTPRequest.toString"}},{"id":22095,"name":"answeredBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/HTTPRequest.ts","line":36,"character":4}],"signatures":[{"id":22096,"name":"answeredBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/HTTPRequest.ts","line":36,"character":4}],"parameters":[{"id":22097,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1049,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":600,"name":"UsesAbilities","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":14207,"name":"HTTPRequest.answeredBy"}}],"inheritedFrom":{"type":"reference","target":14206,"name":"HTTPRequest.answeredBy"}},{"id":20832,"name":"with","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/PutRequest.ts","line":67,"character":4}],"signatures":[{"id":20833,"name":"with","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the object with a request body."}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/PutRequest.ts","line":67,"character":4}],"parameters":[{"id":20834,"name":"data","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Data to be sent to the "},{"kind":"code","text":"`resourceUri`"}]},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"reference","target":20147,"name":"PutRequest","package":"@serenity-js/rest"}}]},{"id":20835,"name":"using","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/PutRequest.ts","line":83,"character":4}],"signatures":[{"id":20836,"name":"using","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Overrides the default Axios request configuration provided\\nwhen the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/) was instantiated.\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable)\\n- ["},{"kind":"code","text":"`WithAnswerableProperties`"},{"kind":"text","text":"](/api/core/#WithAnswerableProperties)\\n- [AxiosRequestConfig](https://axios-http.com/docs/req_config)"}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/PutRequest.ts","line":83,"character":4}],"parameters":[{"id":20837,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Axios request configuration overrides"}]},"type":{"type":"reference","target":688,"typeArguments":[{"type":"reflection","declaration":{"id":20838,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":20839,"name":"url","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":20840,"name":"method","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":20841,"name":"baseURL","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":20842,"name":"transformRequest","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":20843,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reflection","declaration":{"id":20844,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}]}},{"id":20845,"name":"transformResponse","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":20846,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reflection","declaration":{"id":20847,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}]}},{"id":20848,"name":"headers","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":20849,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":20850,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20851,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20852,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20853,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20854,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20855,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20856,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20857,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20858,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20859,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20860,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20861,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20862,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20863,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20864,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20865,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20866,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20867,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20868,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20869,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20870,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20871,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20872,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20873,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20874,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20875,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20876,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[20850,20851,20852,20853,20854,20855,20856,20857,20858,20859,20860,20861,20862,20863,20864,20865,20866,20867,20868,20869,20870,20871,20872,20873,20874,20875,20876]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":20877,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":20878,"name":"Accept","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":20879,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":20880,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20881,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20882,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20883,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20884,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20885,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20886,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20887,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20888,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20889,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20890,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20891,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20892,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20893,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20894,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20895,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20896,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20897,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20898,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20899,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20900,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20901,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20902,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20903,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20904,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20905,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20906,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[20880,20881,20882,20883,20884,20885,20886,20887,20888,20889,20890,20891,20892,20893,20894,20895,20896,20897,20898,20899,20900,20901,20902,20903,20904,20905,20906]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":20907,"name":"Content-Length","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":20908,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":20909,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20910,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20911,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20912,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20913,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20914,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20915,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20916,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20917,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20918,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20919,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20920,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20921,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20922,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20923,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20924,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20925,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20926,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20927,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20928,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20929,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20930,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20931,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20932,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20933,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20934,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20935,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[20909,20910,20911,20912,20913,20914,20915,20916,20917,20918,20919,20920,20921,20922,20923,20924,20925,20926,20927,20928,20929,20930,20931,20932,20933,20934,20935]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":20936,"name":"User-Agent","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":20937,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":20938,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20939,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20940,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20941,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20942,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20943,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20944,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20945,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20946,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20947,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20948,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20949,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20950,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20951,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20952,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20953,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20954,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20955,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20956,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20957,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20958,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20959,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20960,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20961,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20962,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20963,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20964,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[20938,20939,20940,20941,20942,20943,20944,20945,20946,20947,20948,20949,20950,20951,20952,20953,20954,20955,20956,20957,20958,20959,20960,20961,20962,20963,20964]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":20965,"name":"Content-Encoding","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":20966,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":20967,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20968,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20969,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20970,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20971,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20972,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20973,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20974,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20975,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20976,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20977,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20978,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20979,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20980,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20981,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20982,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20983,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20984,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20985,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20986,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20987,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20988,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20989,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20990,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20991,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20992,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20993,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[20967,20968,20969,20970,20971,20972,20973,20974,20975,20976,20977,20978,20979,20980,20981,20982,20983,20984,20985,20986,20987,20988,20989,20990,20991,20992,20993]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":20994,"name":"Authorization","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":20995,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":20996,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20997,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20998,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20999,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21000,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21001,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21002,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21003,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21004,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21005,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21006,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21007,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21008,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21009,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21010,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21011,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21012,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21013,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21014,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21015,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21016,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21017,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21018,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21019,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21020,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21021,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21022,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[20996,20997,20998,20999,21000,21001,21002,21003,21004,21005,21006,21007,21008,21009,21010,21011,21012,21013,21014,21015,21016,21017,21018,21019,21020,21021,21022]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":21052,"name":"link","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":21053,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21054,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21055,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21056,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21057,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21058,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21059,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21060,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21061,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21062,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21063,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21064,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21065,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21066,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21067,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21068,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21069,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21070,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21071,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21072,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21073,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21074,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21075,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21076,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21077,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21078,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21079,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21080,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[21054,21055,21056,21057,21058,21059,21060,21061,21062,21063,21064,21065,21066,21067,21068,21069,21070,21071,21072,21073,21074,21075,21076,21077,21078,21079,21080]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21081,"name":"delete","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":21082,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21083,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21084,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21085,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21086,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21087,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21088,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21089,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21090,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21091,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21092,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21093,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21094,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21095,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21096,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21097,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21098,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21099,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21100,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21101,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21102,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21103,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21104,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21105,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21106,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21107,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21108,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21109,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[21083,21084,21085,21086,21087,21088,21089,21090,21091,21092,21093,21094,21095,21096,21097,21098,21099,21100,21101,21102,21103,21104,21105,21106,21107,21108,21109]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21110,"name":"get","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":21111,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21112,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21113,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21114,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21115,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21116,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21117,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21118,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21119,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21120,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21121,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21122,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21123,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21124,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21125,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21126,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21127,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21128,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21129,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21130,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21131,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21132,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21133,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21134,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21135,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21136,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21137,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21138,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[21112,21113,21114,21115,21116,21117,21118,21119,21120,21121,21122,21123,21124,21125,21126,21127,21128,21129,21130,21131,21132,21133,21134,21135,21136,21137,21138]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21139,"name":"head","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":21140,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21141,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21142,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21143,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21144,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21145,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21146,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21147,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21148,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21149,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21150,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21151,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21152,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21153,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21154,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21155,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21156,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21157,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21158,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21159,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21160,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21161,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21162,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21163,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21164,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21165,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21166,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21167,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[21141,21142,21143,21144,21145,21146,21147,21148,21149,21150,21151,21152,21153,21154,21155,21156,21157,21158,21159,21160,21161,21162,21163,21164,21165,21166,21167]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21168,"name":"options","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":21169,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21170,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21171,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21172,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21173,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21174,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21175,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21176,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21177,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21178,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21179,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21180,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21181,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21182,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21183,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21184,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21185,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21186,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21187,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21188,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21189,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21190,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21191,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21192,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21193,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21194,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21195,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21196,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[21170,21171,21172,21173,21174,21175,21176,21177,21178,21179,21180,21181,21182,21183,21184,21185,21186,21187,21188,21189,21190,21191,21192,21193,21194,21195,21196]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21197,"name":"post","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":21198,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21199,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21200,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21201,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21202,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21203,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21204,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21205,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21206,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21207,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21208,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21209,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21210,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21211,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21212,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21213,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21214,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21215,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21216,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21217,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21218,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21219,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21220,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21221,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21222,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21223,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21224,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21225,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[21199,21200,21201,21202,21203,21204,21205,21206,21207,21208,21209,21210,21211,21212,21213,21214,21215,21216,21217,21218,21219,21220,21221,21222,21223,21224,21225]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21226,"name":"put","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":21227,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21228,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21229,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21230,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21231,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21232,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21233,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21234,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21235,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21236,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21237,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21238,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21239,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21240,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21241,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21242,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21243,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21244,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21245,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21246,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21247,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21248,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21249,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21250,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21251,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21252,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21253,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21254,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[21228,21229,21230,21231,21232,21233,21234,21235,21236,21237,21238,21239,21240,21241,21242,21243,21244,21245,21246,21247,21248,21249,21250,21251,21252,21253,21254]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21255,"name":"patch","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":21256,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21257,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21258,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21259,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21260,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21261,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21262,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21263,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21264,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21265,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21266,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21267,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21268,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21269,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21270,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21271,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21272,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21273,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21274,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21275,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21276,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21277,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21278,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21279,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21280,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21281,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21282,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21283,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[21257,21258,21259,21260,21261,21262,21263,21264,21265,21266,21267,21268,21269,21270,21271,21272,21273,21274,21275,21276,21277,21278,21279,21280,21281,21282,21283]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21284,"name":"purge","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":21285,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21286,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21287,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21288,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21289,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21290,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21291,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21292,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21293,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21294,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21295,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21296,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21297,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21298,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21299,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21300,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21301,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21302,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21303,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21304,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21305,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21306,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21307,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21308,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21309,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21310,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21311,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21312,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[21286,21287,21288,21289,21290,21291,21292,21293,21294,21295,21296,21297,21298,21299,21300,21301,21302,21303,21304,21305,21306,21307,21308,21309,21310,21311,21312]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21313,"name":"unlink","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":21314,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21315,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21316,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21317,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21318,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21319,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21320,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21321,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21322,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21323,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21324,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21325,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21326,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21327,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21328,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21329,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21330,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21331,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21332,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21333,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21334,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21335,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21336,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21337,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21338,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21339,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21340,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21341,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[21315,21316,21317,21318,21319,21320,21321,21322,21323,21324,21325,21326,21327,21328,21329,21330,21331,21332,21333,21334,21335,21336,21337,21338,21339,21340,21341]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21342,"name":"common","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":21343,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21344,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21345,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21346,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21347,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21348,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21349,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21350,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21351,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21352,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21353,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21354,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21355,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21356,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21357,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21358,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21359,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21360,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21361,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21362,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21363,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21364,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21365,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21366,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21367,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21368,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21369,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21370,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[21344,21345,21346,21347,21348,21349,21350,21351,21352,21353,21354,21355,21356,21357,21358,21359,21360,21361,21362,21363,21364,21365,21366,21367,21368,21369,21370]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21023,"name":"Content-Type","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":21024,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21025,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21026,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21027,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21028,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21029,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21030,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21031,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21032,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21033,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21034,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21035,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21036,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21037,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21038,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21039,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21040,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21041,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21042,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21043,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21044,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21045,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21046,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21047,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21048,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21049,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21050,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21051,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[21025,21026,21027,21028,21029,21030,21031,21032,21033,21034,21035,21036,21037,21038,21039,21040,21041,21042,21043,21044,21045,21046,21047,21048,21049,21050,21051]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}}],"groups":[{"title":"Properties","children":[20878,20907,20936,20965,20994,21052,21081,21110,21139,21168,21197,21226,21255,21284,21313,21342,21023]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":21371,"name":"params","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":21372,"name":"paramsSerializer","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":21373,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21378,"name":"visitor","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":21379,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21380,"name":"dots","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":21381,"name":"metaTokens","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":21382,"name":"indexes","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":21374,"name":"encode","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":21375,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21376,"name":"serialize","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":21377,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[21378,21380,21381,21382,21374,21376]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":21383,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":21384,"name":"data","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":21385,"name":"timeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":21386,"name":"timeoutErrorMessage","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":21387,"name":"withCredentials","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":21388,"name":"adapter","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":21389,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"unknown","name":"Answerable<string> | {}"}}]}},{"id":21390,"name":"auth","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":21391,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21392,"name":"username","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":21393,"name":"password","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[21392,21393]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21394,"name":"responseType","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":"text"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":"arraybuffer"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":"blob"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":"document"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":"json"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":"stream"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":"formdata"}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":21395,"name":"responseEncoding","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":21396,"name":"xsrfCookieName","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":21397,"name":"xsrfHeaderName","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":21398,"name":"onUploadProgress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":21399,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21400,"name":"onDownloadProgress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":21401,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21402,"name":"maxContentLength","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":21403,"name":"validateStatus","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":21404,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21405,"name":"maxBodyLength","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":21406,"name":"maxRedirects","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":21407,"name":"maxRate","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"tuple","elements":[{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}]}]}},{"id":21408,"name":"beforeRedirect","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":21409,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21410,"name":"socketPath","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":21411,"name":"transport","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":21412,"name":"httpAgent","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":21413,"name":"httpsAgent","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":21414,"name":"proxy","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":21415,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21416,"name":"host","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":21417,"name":"port","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":21418,"name":"auth","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":21419,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21420,"name":"username","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":21421,"name":"password","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[21420,21421]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21422,"name":"protocol","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[21416,21417,21418,21422]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":21423,"name":"cancelToken","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":21424,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21425,"name":"promise","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"Cancel"},"name":"Cancel","package":"axios"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":21426,"name":"reason","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":21427,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21428,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[21428]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21429,"name":"throwIfRequested","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Properties","children":[21425,21426]},{"title":"Methods","children":[21429]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21430,"name":"decompress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":21431,"name":"transitional","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":21432,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21433,"name":"silentJSONParsing","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":21434,"name":"forcedJSONParsing","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":21435,"name":"clarifyTimeoutError","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}}],"groups":[{"title":"Properties","children":[21433,21434,21435]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21436,"name":"signal","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":21437,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21438,"name":"aborted","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isReadonly":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":21439,"name":"onabort","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":21440,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21441,"name":"addEventListener","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":21442,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21443,"name":"removeEventListener","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":21444,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[21438,21439,21441,21443]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21445,"name":"insecureHTTPParser","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":21446,"name":"env","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":21447,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21448,"name":"FormData","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":21449,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[21448]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21450,"name":"formSerializer","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":21451,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21452,"name":"visitor","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":21453,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21454,"name":"dots","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":21455,"name":"metaTokens","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":21456,"name":"indexes","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}}],"groups":[{"title":"Properties","children":[21452,21454,21455,21456]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21457,"name":"family","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":4}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":6}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":21458,"name":"lookup","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":21459,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":21460,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":21461,"name":"withXSRFToken","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":21462,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":21463,"name":"fetchOptions","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":21464,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[20839,20840,20841,20842,20845,20848,21371,21372,21384,21385,21386,21387,21388,21390,21394,21395,21396,21397,21398,21400,21402,21403,21405,21406,21407,21408,21410,21411,21412,21413,21414,21423,21430,21431,21436,21445,21446,21450,21457,21458,21461,21463]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":20147,"name":"PutRequest","package":"@serenity-js/rest"}}]}],"groups":[{"title":"Methods","children":[20148,22098,22101,22108,22118,22095,20832,20835]}],"sources":[{"fileName":"packages/rest/src/screenplay/models/PutRequest.ts","line":44,"character":13}],"extendedTypes":[{"type":"reference","target":12888,"name":"HTTPRequest","package":"@serenity-js/rest"}],"permalink":"/api/rest/class/PutRequest","previousId":18174,"nextId":22120},{"id":22120,"name":"LastResponse","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Provides access to the properties of the last ["},{"kind":"code","text":"`AxiosResponse`"},{"kind":"text","text":"](https://axios-http.com/docs/res_schema) object,\\ncached on the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/).\\n\\n## Verify response to a GET request\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, GetRequest, LastResponse, Send } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\ninterface Book {\\n    title: string;\\n    author: string;\\n}\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(CallAnApi.at(\'https://api.example.org/\'))\\n  .attemptsTo(\\n    Send.a(GetRequest.to(\'/books/0-688-00230-7\')),\\n    Ensure.that(LastResponse.status(), equals(200)),\\n    Ensure.that(LastResponse.header(\'Content-Type\'), equals(\'application/json\')),\\n    Ensure.that(LastResponse.body<Book>(), equals({\\n        title: \'Zen and the Art of Motorcycle Maintenance: An Inquiry into Values\',\\n        author: \'Robert M. Pirsig\',\\n    })),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Use Serenity/JS adapters to navigate complex response objects\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, GetRequest, LastResponse, Send } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\ninterface Developer {\\n    name: string;\\n    id: string;\\n    projects: Project[];\\n}\\n\\ninterface Project {\\n    name: string;\\n    repoUrl: string;\\n}\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(CallAnApi.at(\'https://api.example.org/\'))\\n  .attemptsTo(\\n    Send.a(GetRequest.to(\'/developers/jan-molak\')),\\n    Ensure.that(LastResponse.status(), equals(200)),\\n    Ensure.that(LastResponse.body<Developer>().name, equals(\'Jan Molak\')),\\n    Ensure.that(LastResponse.body<Developer>().projects[0].name, equals(\'Serenity/JS\')),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- [AxiosResponse](https://axios-http.com/docs/res_schema)"}]},"children":[{"id":22121,"name":"status","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/questions/LastResponse.ts","line":77,"character":11}],"signatures":[{"id":22122,"name":"status","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Retrieves the status code of the [last response](/api/rest/class/LastResponse/)\\n\\n#### Learn more\\n- [HTTP response status codes](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status)"}]},"sources":[{"fileName":"packages/rest/src/screenplay/questions/LastResponse.ts","line":77,"character":11}],"type":{"type":"reference","target":1041,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":22123,"name":"body","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/questions/LastResponse.ts","line":157,"character":11}],"signatures":[{"id":22124,"name":"body","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Retrieves the body of the [last response](/api/rest/class/LastResponse/)\\n\\n#### A type-safe approach using generics\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, LastResponse } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\ninterface Book {\\n  title: string;\\n  author: string;\\n}\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(CallAnApi.at(\'https://api.example.org/\'))\\n  .attemptsTo(\\n     // ...\\n\\n     // note body<T>() parameterised with type \\"Book\\"\\n     Ensure.that(LastResponse.body<Book>(), equals({\\n       title: \'Zen and the Art of Motorcycle Maintenance: An Inquiry into Values\',\\n       author: \'Robert M. Pirsig\',\\n     })),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## A not type-safe approach using "},{"kind":"code","text":"`any`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, LastResponse } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(CallAnApi.at(\'https://api.example.org/\'))\\n  .attemptsTo(\\n     // ...\\n\\n     // note body<T>() parameterised with \\"any\\" or with no parameter is not type-safe!\\n     Ensure.that(LastResponse.body<any>(), equals({\\n       title: \'Zen and the Art of Motorcycle Maintenance: An Inquiry into Values\',\\n       author: \'Robert M. Pirsig\',\\n     })),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Iterating over the items in the response body\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, LastResponse } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\ninterface Product {\\n  id: number;\\n  name: string;\\n}\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(CallAnApi.at(\'https://api.example.org/\'))\\n  .attemptsTo(\\n    Send.a(GetRequest.to(`/products`)),\\n    List.of<Product>(LastResponse.body<{ products: Product[] }>().products)\\n      .forEach(({ item, actor }) =>\\n        actor.attemptsTo(\\n          Send.a(GetRequest.to(`/products/${ item.id }`)),\\n          Ensure.that(LastResponse.body<Product>().id, equals(item.id)),\\n        )\\n      ),\\n  )\\n```"}]},"sources":[{"fileName":"packages/rest/src/screenplay/questions/LastResponse.ts","line":157,"character":11}],"typeParameter":[{"id":22125,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"any"}}],"type":{"type":"reference","target":1041,"typeArguments":[{"type":"reference","target":22125,"name":"T","package":"@serenity-js/rest","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":22126,"name":"header","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/questions/LastResponse.ts","line":183,"character":11}],"signatures":[{"id":22127,"name":"header","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Retrieves a header of the [last response](/api/rest/class/LastResponse/), identified by "},{"kind":"code","text":"`name`"},{"kind":"text","text":"\\n\\n## Asserting on a header\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, LastResponse } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(CallAnApi.at(\'https://api.example.org/\'))\\n  .attemptsTo(\\n    Send.a(GetRequest.to(`/products`)),\\n    Ensure.that(LastResponse.header(\'Content-Type\'), equals(\'application/json\')),\\n  )\\n```"}]},"sources":[{"fileName":"packages/rest/src/screenplay/questions/LastResponse.ts","line":183,"character":11}],"parameters":[{"id":22128,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":1041,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":22129,"name":"headers","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/questions/LastResponse.ts","line":207,"character":11}],"signatures":[{"id":22130,"name":"headers","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Retrieves all the headers of the [last response](/api/rest/class/LastResponse/).\\n\\n## Asserting on a header\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, LastResponse } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(CallAnApi.at(\'https://api.example.org/\'))\\n  .attemptsTo(\\n    Send.a(GetRequest.to(`/products`)),\\n    Ensure.that(LastResponse.headers()[\'Content-Type\'], equals(\'application/json\')),\\n  )\\n```"}]},"sources":[{"fileName":"packages/rest/src/screenplay/questions/LastResponse.ts","line":207,"character":11}],"type":{"type":"reference","target":1041,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Partial"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"RawAxiosHeaders"},"name":"RawAxiosHeaders","package":"axios"},{"type":"reflection","declaration":{"id":22131,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":22132,"name":"Content-Length","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosHeaderValue"},"name":"AxiosHeaderValue","package":"axios"}},{"id":22133,"name":"Content-Encoding","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosHeaderValue"},"name":"AxiosHeaderValue","package":"axios"}},{"id":22134,"name":"Content-Type","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosHeaderValue"},"name":"AxiosHeaderValue","package":"axios"}},{"id":22135,"name":"Server","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosHeaderValue"},"name":"AxiosHeaderValue","package":"axios"}},{"id":22136,"name":"Cache-Control","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosHeaderValue"},"name":"AxiosHeaderValue","package":"axios"}}],"groups":[{"title":"Properties","children":[22132,22133,22134,22135,22136]}],"sources":[]}},{"type":"reflection","declaration":{"id":22137,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":22138,"name":"set-cookie","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"groups":[{"title":"Properties","children":[22138]}],"sources":[]}}]}],"name":"Partial","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#partialtype"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":22139,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":22140,"name":"new LastResponse","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":22120,"name":"LastResponse","package":"@serenity-js/rest"}}]}],"groups":[{"title":"Constructors","children":[22139]},{"title":"Methods","children":[22121,22123,22126,22129]}],"sources":[{"fileName":"packages/rest/src/screenplay/questions/LastResponse.ts","line":69,"character":13}],"permalink":"/api/rest/class/LastResponse","previousId":20147,"nextId":6863}],"groups":[{"title":"Abilities","children":[6879]},{"title":"Activities","children":[6921,6934]},{"title":"Functions","children":[6876]},{"title":"Models","children":[6978,8948,12888,10918,14231,16201,18174,20147]},{"title":"Questions","children":[22120]},{"title":"Type Aliases","children":[6863,6872]}],"sources":[{"fileName":"packages/rest/src/index.ts","line":1,"character":0}],"permalink":"/api/rest"},"urlSlug":"rest"}],"packageName":"@serenity-js/rest","packageVersion":"3.26.0"},{"entryPoints":[{"index":true,"label":"Index","reflection":{"id":33,"name":"@serenity-js/serenity-bdd","variant":"declaration","kind":2,"flags":{"isExternal":true},"children":[{"id":34,"name":"default","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/serenity-bdd/src/index.ts","line":8,"character":24}],"signatures":[{"id":35,"name":"default","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/serenity-bdd/src/index.ts","line":8,"character":24}],"parameters":[{"id":36,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":22338,"name":"SerenityBDDReporterConfig","package":"@serenity-js/serenity-bdd"},"defaultValue":"{}"}],"type":{"type":"reference","target":2188,"typeArguments":[{"type":"reference","target":22316,"name":"SerenityBDDReporter","package":"@serenity-js/serenity-bdd"}],"name":"StageCrewMemberBuilder","package":"@serenity-js/core"}}],"permalink":"/api/serenity-bdd/function/default","nextId":22316},{"id":22316,"name":"SerenityBDDReporter","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/) that produces [Serenity BDD](http://serenity-bdd.info/)-standard JSON reports\\nto be parsed by [Serenity BDD CLI Reporter](https://github.com/serenity-bdd/serenity-cli)\\nto produce HTML reports and living documentation.\\n\\n## Registering Serenity BDD Reporter programmatically\\n\\n"},{"kind":"code","text":"```ts\\nimport { ArtifactArchiver, configure } from \'@serenity-js/core\';\\nimport { SerenityBDDReporter } from \'@serenity-js/serenity-bdd\';\\n\\nconfigure({\\n  crew: [\\n    ArtifactArchiver.fromJSON({\\n      outputDirectory: \'./target/site/serenity\'\\n    }),\\n    SerenityBDDReporter.fromJSON({\\n      specDirectory: \'./features\'            // optional configuration\\n    })\\n  ],\\n})\\n```"},{"kind":"text","text":"\\n\\n## Using Serenity BDD Reporter with Playwright Test\\n\\n"},{"kind":"code","text":"```ts\\n// playwright.config.ts\\nimport { devices } from \'@playwright/test\';\\nimport type { PlaywrightTestConfig } from \'@serenity-js/playwright-test\';\\n\\nconst config: PlaywrightTestConfig = {\\n\\n  reporter: [\\n    [ \'line\' ],\\n    [ \'html\', { open: \'never\' } ],\\n    [ \'@serenity-js/playwright-test\', {\\n      crew: [\\n        \'@serenity-js/serenity-bdd\',\\n        [ \'@serenity-js/core:ArtifactArchiver\', { outputDirectory: \'target/site/serenity\' } ],\\n      ]\\n    }]\\n  ],\\n}\\n```"},{"kind":"text","text":"\\n\\n## Using Serenity BDD Reporter with WebdriverIO\\n\\n"},{"kind":"code","text":"```ts\\n// wdio.conf.ts\\nimport { WebdriverIOConfig } from \'@serenity-js/webdriverio\';\\n\\nexport const config: WebdriverIOConfig = {\\n\\n  framework: \'@serenity-js/webdriverio\',\\n\\n  serenity: {\\n    crew: [\\n      \'@serenity-js/serenity-bdd\',\\n       [ \'@serenity-js/core:ArtifactArchiver\', { outputDirectory: \'target/site/serenity\' } ],\\n    ],\\n    // other Serenity/JS config\\n  },\\n  // other Protractor config\\n}\\n```"},{"kind":"text","text":"\\n\\n## Using Serenity BDD Reporter with Protractor\\n\\n"},{"kind":"code","text":"```js\\n// protractor.conf.js\\nexports.config = {\\n  framework:     \'custom\',\\n  frameworkPath: require.resolve(\'@serenity-js/protractor/adapter\'),\\n\\n  serenity: {\\n    crew: [\\n        \'@serenity-js/serenity-bdd\',\\n         [ \'@serenity-js/core:ArtifactArchiver\', { outputDirectory: \'target/site/serenity\' } ],\\n    ],\\n    // other Serenity/JS config\\n  },\\n\\n  // other Protractor config\\n}\\n```"},{"kind":"text","text":"\\n\\n## Configuring Serenity BDD Reporter\\n\\nTo override Serenity BDD Reporter default configuration, provide a ["},{"kind":"code","text":"`SerenityBDDReporterConfig`"},{"kind":"text","text":"](/api/serenity-bdd/interface/SerenityBDDReporterConfig/)\\nas the second element of the ["},{"kind":"code","text":"`SerenityBDDReporterConfig`"},{"kind":"text","text":"](/api/serenity-bdd/interface/SerenityBDDReporterConfig/) array\\nusing your test runner-specific configuration mechanism.\\n\\nFor example, to change the default location\\nof the [requirements hierarchy root directory](https://serenity-bdd.github.io/docs/reporting/living_documentation#the-requirements-hierarchy),\\nspecify the "},{"kind":"code","text":"`specDirectory`"},{"kind":"text","text":" property:\\n\\n"},{"kind":"code","text":"```js\\n    crew: [\\n      [ \'@serenity-js/serenity-bdd\', { specDirectory: \'./features\' } ],\\n      // ...\\n    ],\\n```"},{"kind":"text","text":"\\n\\n### Learn more:\\n- [Serenity BDD Reporter integration documentation](/handbook/reporting/serenity-bdd-reporter/)\\n- [Serenity/JS examples on GitHub](https://github.com/serenity-js/serenity-js/tree/main/examples)"}]},"children":[{"id":22317,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/serenity-bdd/src/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.ts","line":124,"character":11}],"signatures":[{"id":22318,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/serenity-bdd/src/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.ts","line":124,"character":11}],"parameters":[{"id":22319,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":22338,"name":"SerenityBDDReporterConfig","package":"@serenity-js/serenity-bdd"}}],"type":{"type":"reference","target":2188,"typeArguments":[{"type":"reference","target":22316,"name":"SerenityBDDReporter","package":"@serenity-js/serenity-bdd"}],"name":"StageCrewMemberBuilder","package":"@serenity-js/core"}}]},{"id":22320,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/serenity-bdd/src/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.ts","line":133,"character":4}],"signatures":[{"id":22321,"name":"new SerenityBDDReporter","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/serenity-bdd/src/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.ts","line":133,"character":4}],"parameters":[{"id":22322,"name":"processors","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"EventQueueProcessors","package":"@serenity-js/serenity-bdd"}},{"id":22323,"name":"stage","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The stage this ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/) should be assigned to"}]},"type":{"type":"reference","target":2103,"name":"Stage","package":"@serenity-js/core"}}],"type":{"type":"reference","target":22316,"name":"SerenityBDDReporter","package":"@serenity-js/serenity-bdd"}}]},{"id":22327,"name":"assignedTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/serenity-bdd/src/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.ts","line":143,"character":4}],"signatures":[{"id":22328,"name":"assignedTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/serenity-bdd/src/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.ts","line":143,"character":4}],"parameters":[{"id":22329,"name":"stage","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":2103,"name":"Stage","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2181,"name":"StageCrewMember","package":"@serenity-js/core"},"implementationOf":{"type":"reference","target":-1,"name":"StageCrewMember.assignedTo"}}],"implementationOf":{"type":"reference","target":-1,"name":"StageCrewMember.assignedTo"}},{"id":22330,"name":"notifyOf","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/serenity-bdd/src/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.ts","line":151,"character":4}],"signatures":[{"id":22331,"name":"notifyOf","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/serenity-bdd/src/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.ts","line":151,"character":4}],"parameters":[{"id":22332,"name":"event","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":2565,"name":"DomainEvent","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"void"},"implementationOf":{"type":"reference","target":-1,"name":"StageCrewMember.notifyOf"}}],"implementationOf":{"type":"reference","target":-1,"name":"StageCrewMember.notifyOf"}}],"groups":[{"title":"Constructors","children":[22320]},{"title":"Methods","children":[22317,22327,22330]}],"sources":[{"fileName":"packages/serenity-bdd/src/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.ts","line":121,"character":13}],"implementedTypes":[{"type":"reference","target":2181,"name":"StageCrewMember","package":"@serenity-js/core"}],"permalink":"/api/serenity-bdd/class/SerenityBDDReporter","previousId":34,"nextId":22338},{"id":22338,"name":"SerenityBDDReporterConfig","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configuration options for the ["},{"kind":"code","text":"`SerenityBDDReporter`"},{"kind":"text","text":"](/api/serenity-bdd/class/SerenityBDDReporter/)."}]},"children":[{"id":22339,"name":"specDirectory","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The root directory that ["},{"kind":"code","text":"`SerenityBDDReporter`"},{"kind":"text","text":"](/api/serenity-bdd/class/SerenityBDDReporter/) should recursively scan for test scenario files\\nto determine the [requirements hierarchy](https://serenity-bdd.github.io/docs/reporting/living_documentation#the-requirements-hierarchy),\\nrelative to the current working directory.\\n\\nIf not specified, "},{"kind":"code","text":"`specDirectory`"},{"kind":"text","text":" defaults to the first one of the following subdirectories that\'s present in the current working\\ndirectory:\\n- "},{"kind":"code","text":"`features`"},{"kind":"text","text":" - typically used by [Serenity/JS + Cucumber.js](/handbook/test-runners/cucumber/) projects to store "},{"kind":"code","text":"`.feature`"},{"kind":"text","text":" files\\n- "},{"kind":"code","text":"`specs`"},{"kind":"text","text":" - typically used by [Serenity/JS + Jasmine](/handbook/test-runners/jasmine/) and [Mocha](/handbook/test-runners/mocha/) projects to store "},{"kind":"code","text":"`.spec.js`"},{"kind":"text","text":" or "},{"kind":"code","text":"`.spec.ts`"},{"kind":"text","text":" files\\n- "},{"kind":"code","text":"`spec`"},{"kind":"text","text":" - another popular naming convention seen in [Serenity/JS + Jasmine](/handbook/test-runners/jasmine/) and [Mocha](/handbook/test-runners/mocha/) projects\\n- "},{"kind":"code","text":"`tests`"},{"kind":"text","text":" - typically used by [Serenity/JS + Playwright Test](/handbook/test-runners/playwright-test/) projects to store "},{"kind":"code","text":"`.spec.ts`"},{"kind":"text","text":" files\\n- "},{"kind":"code","text":"`test`"},{"kind":"text","text":" - typically used by [Serenity/JS + WebdriverIO](/handbook/test-runners/webdriverio/) projects to store "},{"kind":"code","text":"`.spec.ts`"},{"kind":"text","text":" files\\n- "},{"kind":"code","text":"`src`"},{"kind":"text","text":" - typically used by [Serenity/JS + Playwright Component Test](/api/playwright-test/#ui-component-testing) projects to store "},{"kind":"code","text":"`.spec.ts`"},{"kind":"text","text":" files alongside the source code\\n\\nIf not specified and none of the above subdirectories are present, "},{"kind":"code","text":"`specDirectory`"},{"kind":"text","text":" defaults to the current working directory.\\n\\nIf "},{"kind":"code","text":"`specDirectory`"},{"kind":"text","text":" _is_ specified, but the directory doesn\'t exist, SerenityBDDReporter throws a ["},{"kind":"code","text":"`ConfigurationError`"},{"kind":"text","text":"](/api/core/class/ConfigurationError/).\\n\\n**IMPORTANT**: For the Serenity BDD CLI Reporter to correctly parse the requirements hierarchy and recognise your test scenarios,\\nyour test scenario files must be named using either:\\n- "},{"kind":"code","text":"`<feature name>.feature`"},{"kind":"text","text":" naming convention for Cucumber.js projects\\n- "},{"kind":"code","text":"`<feature name>.<suffix>.<extension>`"},{"kind":"text","text":" naming convention for non-Cucumber.js projects\\n\\nIn the naming conventions above:\\n- "},{"kind":"code","text":"`<feature name>`"},{"kind":"text","text":" is the name of the feature or component the scenario exercises; e.g. "},{"kind":"code","text":"`checkout.feature`"},{"kind":"text","text":", "},{"kind":"code","text":"`checkout.spec.ts`"},{"kind":"text","text":", "},{"kind":"code","text":"`LoginForm.spec.ts`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`<suffix>`"},{"kind":"text","text":" is one of the following: "},{"kind":"code","text":"`spec`"},{"kind":"text","text":", "},{"kind":"code","text":"`test`"},{"kind":"text","text":", "},{"kind":"code","text":"`integration`"},{"kind":"text","text":", "},{"kind":"code","text":"`it`"},{"kind":"text","text":", "},{"kind":"code","text":"`e2e`"},{"kind":"text","text":", "},{"kind":"code","text":"`spec.e2e`"},{"kind":"text","text":", "},{"kind":"code","text":"`spec-e2e`"},{"kind":"text","text":"; e.g. "},{"kind":"code","text":"`checkout.spec.ts`"},{"kind":"text","text":", "},{"kind":"code","text":"`payments.spec-e2e.ts`"},{"kind":"text","text":", "},{"kind":"code","text":"`user_registration.integration.ts`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`<extension>`"},{"kind":"text","text":" is one of the following: "},{"kind":"code","text":"`js`"},{"kind":"text","text":", "},{"kind":"code","text":"`jsx`"},{"kind":"text","text":", "},{"kind":"code","text":"`mjs`"},{"kind":"text","text":", "},{"kind":"code","text":"`mjsx`"},{"kind":"text","text":", "},{"kind":"code","text":"`cjs`"},{"kind":"text","text":", "},{"kind":"code","text":"`cjsx`"},{"kind":"text","text":", "},{"kind":"code","text":"`ts`"},{"kind":"text","text":", "},{"kind":"code","text":"`tsx`"},{"kind":"text","text":", "},{"kind":"code","text":"`mts`"},{"kind":"text","text":", "},{"kind":"code","text":"`mtsx`"},{"kind":"text","text":", "},{"kind":"code","text":"`cts`"},{"kind":"text","text":", "},{"kind":"code","text":"`ctxs`"},{"kind":"text","text":"; e.g. "},{"kind":"code","text":"`authentication.spec.ts`"},{"kind":"text","text":", "},{"kind":"code","text":"`FormValidator.spec.mtsx`"},{"kind":"text","text":"\\n\\nTo find out more about how [Serenity BDD CLI](https://github.com/serenity-bdd/serenity-core/tree/main/serenity-cli) parses the requirements hierarchy,\\nsee the [SpecFileFilters](https://github.com/serenity-bdd/serenity-core/blob/main/serenity-model/src/main/java/net/thucydides/model/requirements/SpecFileFilters.java)\\nclass."}]},"sources":[{"fileName":"packages/serenity-bdd/src/stage/crew/serenity-bdd-reporter/SerenityBDDReporterConfig.ts","line":40,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":22340,"name":"reporter","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/serenity-bdd/src/stage/crew/serenity-bdd-reporter/SerenityBDDReporterConfig.ts","line":42,"character":4}],"type":{"type":"reflection","declaration":{"id":22341,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":22342,"name":"includeAbilityDetails","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether to include the details of final state and configuration details of actors\' abilities in Serenity BDD reports.\\nDefaults to "},{"kind":"code","text":"`true`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/serenity-bdd/src/stage/crew/serenity-bdd-reporter/SerenityBDDReporterConfig.ts","line":47,"character":8}],"type":{"type":"intrinsic","name":"boolean"}}],"groups":[{"title":"Properties","children":[22342]}],"sources":[{"fileName":"packages/serenity-bdd/src/stage/crew/serenity-bdd-reporter/SerenityBDDReporterConfig.ts","line":42,"character":15}]}}}],"groups":[{"title":"Properties","children":[22339,22340]}],"sources":[{"fileName":"packages/serenity-bdd/src/stage/crew/serenity-bdd-reporter/SerenityBDDReporterConfig.ts","line":7,"character":17}],"permalink":"/api/serenity-bdd/interface/SerenityBDDReporterConfig","previousId":22316}],"groups":[{"title":"Functions","children":[34]},{"title":"Stage","children":[22316,22338]}],"sources":[{"fileName":"packages/serenity-bdd/src/index.ts","line":1,"character":0}],"permalink":"/api/serenity-bdd"},"urlSlug":"serenity-bdd"}],"packageName":"@serenity-js/serenity-bdd","packageVersion":"3.26.0"},{"entryPoints":[{"index":true,"label":"Index","reflection":{"id":5,"name":"@serenity-js/web","variant":"declaration","kind":2,"flags":{"isExternal":true},"children":[{"id":3166,"name":"BrowserWindowClosedError","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Thrown when you\'re trying to take a screenshot of a browser window\\nthat\'s already been closed.\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`TakeScreenshot`"},{"kind":"text","text":"](/api/web/class/TakeScreenshot/)\\n- ["},{"kind":"code","text":"`Page.takeScreenshot`"},{"kind":"text","text":"](/api/web/class/Page/#takeScreenshot)"}]},"children":[{"id":3184,"name":"cause","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true,"isReadonly":true},"sources":[{"fileName":"packages/core/lib/errors/model/RuntimeError.ts","line":67,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"},"inheritedFrom":{"type":"reference","target":-1,"name":"LogicError.cause"}},{"id":3185,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/errors/model/RuntimeError.ts","line":77,"character":4}],"signatures":[{"id":3186,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"sources":[{"fileName":"packages/core/lib/errors/model/RuntimeError.ts","line":77,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"LogicError.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"LogicError.toString"}},{"id":3187,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/errors/model/RuntimeError.ts","line":78,"character":4}],"signatures":[{"id":3188,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/errors/model/RuntimeError.ts","line":78,"character":4}],"type":{"type":"intrinsic","name":"object"},"inheritedFrom":{"type":"reference","target":-1,"name":"LogicError.toJSON"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"LogicError.toJSON"}},{"id":3180,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/errors/BrowserWindowClosedError.ts","line":14,"character":4}],"signatures":[{"id":3181,"name":"new BrowserWindowClosedError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/errors/BrowserWindowClosedError.ts","line":14,"character":4}],"parameters":[{"id":3182,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":3183,"name":"cause","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}],"type":{"type":"reference","target":3166,"name":"BrowserWindowClosedError","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"LogicError.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"LogicError.constructor"}},{"id":3189,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"LogicError.name"}},{"id":3190,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"LogicError.message"}},{"id":3191,"name":"stack","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"LogicError.stack"}}],"groups":[{"title":"Constructors","children":[3180]},{"title":"Properties","children":[3184,3189,3190,3191]},{"title":"Methods","children":[3185,3187]}],"sources":[{"fileName":"packages/web/src/errors/BrowserWindowClosedError.ts","line":13,"character":13}],"extendedTypes":[{"type":"reference","target":297,"name":"LogicError","package":"@serenity-js/core"}],"permalink":"/api/web/class/BrowserWindowClosedError","previousId":3790,"nextId":3192},{"id":3192,"name":"CookieMissingError","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Thrown when the [cookie](https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies)\\nyou\'re trying to retrieve has not been set yet.\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Cookie`"},{"kind":"text","text":"](/api/web/class/Cookie/)\\n- ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/)"}]},"children":[{"id":3207,"name":"cause","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true,"isReadonly":true},"sources":[{"fileName":"packages/core/lib/errors/model/RuntimeError.ts","line":67,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"},"inheritedFrom":{"type":"reference","target":-1,"name":"RuntimeError.cause"}},{"id":3208,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/errors/model/RuntimeError.ts","line":77,"character":4}],"signatures":[{"id":3209,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"sources":[{"fileName":"packages/core/lib/errors/model/RuntimeError.ts","line":77,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"RuntimeError.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"RuntimeError.toString"}},{"id":3210,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/errors/model/RuntimeError.ts","line":78,"character":4}],"signatures":[{"id":3211,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/errors/model/RuntimeError.ts","line":78,"character":4}],"type":{"type":"intrinsic","name":"object"},"inheritedFrom":{"type":"reference","target":-1,"name":"RuntimeError.toJSON"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"RuntimeError.toJSON"}},{"id":3203,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/errors/CookieMissingError.ts","line":14,"character":4}],"signatures":[{"id":3204,"name":"new CookieMissingError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/errors/CookieMissingError.ts","line":14,"character":4}],"parameters":[{"id":3205,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":3206,"name":"cause","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}],"type":{"type":"reference","target":3192,"name":"CookieMissingError","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"RuntimeError.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"RuntimeError.constructor"}},{"id":3212,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"RuntimeError.name"}},{"id":3213,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"RuntimeError.message"}},{"id":3214,"name":"stack","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"RuntimeError.stack"}}],"groups":[{"title":"Constructors","children":[3203]},{"title":"Properties","children":[3207,3212,3213,3214]},{"title":"Methods","children":[3208,3210]}],"sources":[{"fileName":"packages/web/src/errors/CookieMissingError.ts","line":13,"character":13}],"extendedTypes":[{"type":"reference","target":349,"name":"RuntimeError","package":"@serenity-js/core"}],"permalink":"/api/web/class/CookieMissingError","previousId":3166,"nextId":3215},{"id":3215,"name":"ModalDialogObstructsScreenshotError","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Thrown when the presence of a JavaScript dialog obstructs taking a screenshot.\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Photographer`"},{"kind":"text","text":"](/api/web/class/Photographer/)\\n- ["},{"kind":"code","text":"`LogicError`"},{"kind":"text","text":"](/api/core/class/LogicError/)\\n- ["},{"kind":"code","text":"`TakeScreenshot`"},{"kind":"text","text":"](/api/web/class/TakeScreenshot/)"}]},"children":[{"id":3233,"name":"cause","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true,"isReadonly":true},"sources":[{"fileName":"packages/core/lib/errors/model/RuntimeError.ts","line":67,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"},"inheritedFrom":{"type":"reference","target":-1,"name":"LogicError.cause"}},{"id":3234,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/errors/model/RuntimeError.ts","line":77,"character":4}],"signatures":[{"id":3235,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"sources":[{"fileName":"packages/core/lib/errors/model/RuntimeError.ts","line":77,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"LogicError.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"LogicError.toString"}},{"id":3236,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/errors/model/RuntimeError.ts","line":78,"character":4}],"signatures":[{"id":3237,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/errors/model/RuntimeError.ts","line":78,"character":4}],"type":{"type":"intrinsic","name":"object"},"inheritedFrom":{"type":"reference","target":-1,"name":"LogicError.toJSON"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"LogicError.toJSON"}},{"id":3229,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/errors/ModalDialogObstructsScreenshotError.ts","line":14,"character":4}],"signatures":[{"id":3230,"name":"new ModalDialogObstructsScreenshotError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/errors/ModalDialogObstructsScreenshotError.ts","line":14,"character":4}],"parameters":[{"id":3231,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":3232,"name":"cause","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}],"type":{"type":"reference","target":3215,"name":"ModalDialogObstructsScreenshotError","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"LogicError.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"LogicError.constructor"}},{"id":3238,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"LogicError.name"}},{"id":3239,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"LogicError.message"}},{"id":3240,"name":"stack","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"LogicError.stack"}}],"groups":[{"title":"Constructors","children":[3229]},{"title":"Properties","children":[3233,3238,3239,3240]},{"title":"Methods","children":[3234,3236]}],"sources":[{"fileName":"packages/web/src/errors/ModalDialogObstructsScreenshotError.ts","line":13,"character":13}],"extendedTypes":[{"type":"reference","target":297,"name":"LogicError","package":"@serenity-js/core"}],"permalink":"/api/web/class/ModalDialogObstructsScreenshotError","previousId":3192,"nextId":3241},{"id":3241,"name":"isActive","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/expectations/isActive.ts","line":27,"character":16}],"signatures":[{"id":3242,"name":"isActive","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/) that an element is \\"active\\", which means it resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":" when:\\n - the element [is present](/api/assertions/function/isPresent/) in the [DOM](https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model)\\n - ["},{"kind":"code","text":"`PageElement.isActive`"},{"kind":"text","text":"](/api/web/class/PageElement/#isActive) resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":"\\n\\n If the above conditions are not met, the expectation resolves to "},{"kind":"code","text":"`false`"},{"kind":"text","text":".\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`PageElement.isActive`"},{"kind":"text","text":"](/api/web/class/PageElement/#isActive)\\n- ["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/)\\n- ["},{"kind":"code","text":"`Check`"},{"kind":"text","text":"](/api/core/class/Check/)\\n- ["},{"kind":"code","text":"`Ensure`"},{"kind":"text","text":"](/api/assertions/class/Ensure/)\\n- ["},{"kind":"code","text":"`Wait`"},{"kind":"text","text":"](/api/core/class/Wait/)"}]},"sources":[{"fileName":"packages/web/src/expectations/isActive.ts","line":27,"character":16}],"type":{"type":"reference","target":1138,"typeArguments":[{"type":"reference","target":4353,"name":"PageElement","package":"@serenity-js/web"}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/web/function/isActive","previousId":3215,"nextId":3243},{"id":3243,"name":"isClickable","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/expectations/isClickable.ts","line":27,"character":16}],"signatures":[{"id":3244,"name":"isClickable","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/) that an element is clickable, which means it resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":" when:\\n - the element [is present](/api/assertions/function/isPresent/) in the [DOM](https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model)\\n - ["},{"kind":"code","text":"`PageElement.isClickable`"},{"kind":"text","text":"](/api/web/class/PageElement/#isClickable) resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":"\\n\\n If the above conditions are not met, the expectation resolves to "},{"kind":"code","text":"`false`"},{"kind":"text","text":".\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`PageElement.isClickable`"},{"kind":"text","text":"](/api/web/class/PageElement/#isClickable)\\n- ["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/)\\n- ["},{"kind":"code","text":"`Check`"},{"kind":"text","text":"](/api/core/class/Check/)\\n- ["},{"kind":"code","text":"`Ensure`"},{"kind":"text","text":"](/api/assertions/class/Ensure/)\\n- ["},{"kind":"code","text":"`Wait`"},{"kind":"text","text":"](/api/core/class/Wait/)"}]},"sources":[{"fileName":"packages/web/src/expectations/isClickable.ts","line":27,"character":16}],"type":{"type":"reference","target":1138,"typeArguments":[{"type":"reference","target":4353,"name":"PageElement","package":"@serenity-js/web"}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/web/function/isClickable","previousId":3241,"nextId":3245},{"id":3245,"name":"isEnabled","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/expectations/isEnabled.ts","line":27,"character":16}],"signatures":[{"id":3246,"name":"isEnabled","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/) that an element is enabled, which means it resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":" when:\\n - the element [is present](/api/assertions/function/isPresent/) in the [DOM](https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model)\\n - ["},{"kind":"code","text":"`PageElement.isEnabled`"},{"kind":"text","text":"](/api/web/class/PageElement/#isEnabled) resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":"\\n\\n If the above conditions are not met, the expectation resolves to "},{"kind":"code","text":"`false`"},{"kind":"text","text":".\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`PageElement.isEnabled`"},{"kind":"text","text":"](/api/web/class/PageElement/#isEnabled)\\n- ["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/)\\n- ["},{"kind":"code","text":"`Check`"},{"kind":"text","text":"](/api/core/class/Check/)\\n- ["},{"kind":"code","text":"`Ensure`"},{"kind":"text","text":"](/api/assertions/class/Ensure/)\\n- ["},{"kind":"code","text":"`Wait`"},{"kind":"text","text":"](/api/core/class/Wait/)"}]},"sources":[{"fileName":"packages/web/src/expectations/isEnabled.ts","line":27,"character":16}],"type":{"type":"reference","target":1138,"typeArguments":[{"type":"reference","target":4353,"name":"PageElement","package":"@serenity-js/web"}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/web/function/isEnabled","previousId":3243,"nextId":3247},{"id":3247,"name":"isSelected","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/expectations/isSelected.ts","line":27,"character":16}],"signatures":[{"id":3248,"name":"isSelected","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/) that an "},{"kind":"code","text":"`<option>`"},{"kind":"text","text":" or "},{"kind":"code","text":"`<input>`"},{"kind":"text","text":" element is selected, which means it resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":" when:\\n - the element [is present](/api/assertions/function/isPresent/) in the [DOM](https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model)\\n - ["},{"kind":"code","text":"`PageElement.isSelected`"},{"kind":"text","text":"](/api/web/class/PageElement/#isSelected) resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":"\\n\\n If the above conditions are not met, the expectation resolves to "},{"kind":"code","text":"`false`"},{"kind":"text","text":".\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`PageElement.isSelected`"},{"kind":"text","text":"](/api/web/class/PageElement/#isSelected)\\n- ["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/)\\n- ["},{"kind":"code","text":"`Check`"},{"kind":"text","text":"](/api/core/class/Check/)\\n- ["},{"kind":"code","text":"`Ensure`"},{"kind":"text","text":"](/api/assertions/class/Ensure/)\\n- ["},{"kind":"code","text":"`Wait`"},{"kind":"text","text":"](/api/core/class/Wait/)"}]},"sources":[{"fileName":"packages/web/src/expectations/isSelected.ts","line":27,"character":16}],"type":{"type":"reference","target":1138,"typeArguments":[{"type":"reference","target":4353,"name":"PageElement","package":"@serenity-js/web"}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/web/function/isSelected","previousId":3245,"nextId":3249},{"id":3249,"name":"isVisible","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/expectations/isVisible.ts","line":27,"character":16}],"signatures":[{"id":3250,"name":"isVisible","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/) that an element is visible, which means it resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":" when:\\n - the element [is present](/api/assertions/function/isPresent/) in the [DOM](https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model)\\n - ["},{"kind":"code","text":"`PageElement.isVisible`"},{"kind":"text","text":"](/api/web/class/PageElement/#isVisible) resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":"\\n\\n If the above conditions are not met, the expectation resolves to "},{"kind":"code","text":"`false`"},{"kind":"text","text":".\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`PageElement.isVisible`"},{"kind":"text","text":"](/api/web/class/PageElement/#isVisible)\\n- ["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/)\\n- ["},{"kind":"code","text":"`Check`"},{"kind":"text","text":"](/api/core/class/Check/)\\n- ["},{"kind":"code","text":"`Ensure`"},{"kind":"text","text":"](/api/assertions/class/Ensure/)\\n- ["},{"kind":"code","text":"`Wait`"},{"kind":"text","text":"](/api/core/class/Wait/)"}]},"sources":[{"fileName":"packages/web/src/expectations/isVisible.ts","line":27,"character":16}],"type":{"type":"reference","target":1138,"typeArguments":[{"type":"reference","target":4353,"name":"PageElement","package":"@serenity-js/web"}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/web/function/isVisible","previousId":3247,"nextId":3826},{"id":3251,"name":"BrowseTheWeb","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"The [ability](/api/core/class/Ability/) to "},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":" enables an [actor](/api/core/class/Actor/)\\nto [interact with](/api/core/class/Interaction/) and [retrieve information from](/api/core/class/Question/) Web-based user interfaces.\\n\\n"},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":" wraps test integration tools such as [Playwright](/api/playwright),\\n[Protractor](/api/protractor), or [WebdriverIO](/api/webdriverio),\\nand together with Serenity/JS Web models, such as ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/) or ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) - offers a standardised way\\nto write Web-based tests following the Screenplay Pattern.\\n\\nThe consistent and portable design of abstractions provided by the ["},{"kind":"code","text":"`@serenity-js/web`"},{"kind":"text","text":" module](/api/web)\\nalso helps to make your tests portable across the various test integration tools and helps to make your test\\ncode easier to reuse across projects and teams.\\n\\n## Giving the actors an ability to "},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"\\n\\nTo give an [actor](/api/core/class/Actor/) an ability to "},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":", provide the **integration tool-specific implementation**\\nvia ["},{"kind":"code","text":"`Actor.whoCan`"},{"kind":"text","text":"](/api/core/class/Actor/#whoCan) in ["},{"kind":"code","text":"`Cast.prepare`"},{"kind":"text","text":"](/api/core/class/Cast/#prepare), or via ["},{"kind":"code","text":"`Cast.where`"},{"kind":"text","text":"](/api/core/class/Cast/#where).\\n\\n"},{"kind":"code","text":"```ts\\nimport { beforeEach } from \'mocha\'\\nimport { engage, Actor, Cast } from \'@serenity-js/core\'\\nimport { BrowseTheWebWithPlaywright } from \'@serenity-js/playwright\'\\nimport { Browser, chromium } from \'playwright\'\\n\\nbeforeEach(async () => {\\n  const browser = await chromium.launch({ headless: true })\\n\\n  engage(\\n    BrowseTheWebWithPlaywright.using(browser),\\n  )\\n})\\n```"},{"kind":"text","text":"\\n\\n### Learn more\\n\\nTo learn more about using Serenity/JS with your chosen test integration tool, follow their respective documentation:\\n\\n- ["},{"kind":"code","text":"`BrowseTheWebWithPlaywright`"},{"kind":"text","text":"](/api/playwright/class/BrowseTheWebWithPlaywright/)\\n- ["},{"kind":"code","text":"`BrowseTheWebWithProtractor`"},{"kind":"text","text":"](/api/protractor/class/BrowseTheWebWithProtractor/)\\n- ["},{"kind":"code","text":"`BrowseTheWebWithWebdriverIO`"},{"kind":"text","text":"](/api/webdriverio/class/BrowseTheWebWithWebdriverIO/)\\n\\n## Using the ability to "},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"\\n\\nTo use the ability to "},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":" in a custom ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/)\\nor ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/), use the **generic** method ["},{"kind":"code","text":"`BrowseTheWeb.as`"},{"kind":"text","text":"](/api/core/class/Ability/#as)\\nto retrieve it.\\n\\nThis generic method retrieves the integration tool-specific implementation of ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/) present on the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/),\\nsuch as ["},{"kind":"code","text":"`BrowseTheWebWithPlaywright`"},{"kind":"text","text":"](/api/playwright/class/BrowseTheWebWithPlaywright/)\\nor ["},{"kind":"code","text":"`BrowseTheWebWithWebdriverIO`"},{"kind":"text","text":"](/api/webdriverio/class/BrowseTheWebWithWebdriverIO/), using ["},{"kind":"code","text":"`Actor.abilityTo`"},{"kind":"text","text":"](/api/core/class/Actor/#abilityTo).\\n\\nThis decoupling mechanism helps to make your test code portable across test integration tools,\\nsince the only part of your test suite that needs to know about the test integration tool used are the actors.\\nThe rest of your test code, so [tasks](/api/core/class/Task/), [interactions](/api/core/class/Interaction/), and [questions](/api/core/class/Question/),\\nremain fully agnostic of the underlying tool.\\n\\n"},{"kind":"code","text":"```ts\\nimport { BrowseTheWeb, Question } from \'@serenity-js/web\'\\n\\nconst BrowserDetails = () =>\\n Question.about(\'browser details\', async actor => {\\n   const capabilities = await BrowseTheWeb.as(actor).browserCapabilities();\\n   return ${ capabilities.browserName } ${ capabilities.browserVersion }`;\\n })\\n```"},{"kind":"text","text":"\\n\\n**Pro tip:** Use the specific "},{"kind":"code","text":"`BrowseTheWebWith<test integration tool name>`"},{"kind":"text","text":" to give the actor the ability,\\nand generic "},{"kind":"code","text":"`BrowseTheWeb.as(actor)`"},{"kind":"text","text":" to retrieve it.\\n\\n### Learn more\\n\\n- ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/)\\n- ["},{"kind":"code","text":"`Actor.whoCan`"},{"kind":"text","text":"](/api/core/class/Actor/#whoCan)\\n- ["},{"kind":"code","text":"`Cast.where`"},{"kind":"text","text":"](/api/core/class/Cast/#where)\\n- ["},{"kind":"code","text":"`Cast.prepare`"},{"kind":"text","text":"](/api/core/class/Cast/#prepare)"}]},"children":[{"id":3270,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/abilities/Ability.ts","line":406,"character":4}],"signatures":[{"id":3271,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a JSON representation of the ability and its current state, if available.\\nThe purpose of this method is to enable reporting the state of the ability in a human-readable format,\\nrather than to serialise and deserialise the ability itself."}]},"sources":[{"fileName":"packages/core/lib/screenplay/abilities/Ability.ts","line":406,"character":4}],"type":{"type":"reference","target":596,"name":"SerialisedAbility","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Ability.toJSON"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Ability.toJSON"}},{"id":3272,"name":"abilityType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/abilities/Ability.ts","line":436,"character":4}],"signatures":[{"id":3273,"name":"abilityType","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the most abstract type of this Ability instance,\\nspecifically the first class in the inheritance hierarchy that directly extends the "},{"kind":"code","text":"`Ability`"},{"kind":"text","text":" class.\\n\\n"},{"kind":"code","text":"```ts\\nimport { Ability } from \'@serenity-js/core\';\\n\\nclass MyAbility extends Ability {}\\nclass MySpecialisedAbility extends MyAbility {}\\n\\nnew MyAbility().abilityType();            // returns MyAbility\\nnew MySpecialisedAbility().abilityType(); // returns MyAbility\\n```"}]},"sources":[{"fileName":"packages/core/lib/screenplay/abilities/Ability.ts","line":436,"character":4}],"type":{"type":"reference","target":511,"typeArguments":[{"type":"reference","target":490,"name":"Ability","package":"@serenity-js/core"}],"name":"AbilityType","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Ability.abilityType"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Ability.abilityType"}},{"id":3259,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/abilities/BrowseTheWeb.ts","line":85,"character":4}],"signatures":[{"id":3260,"name":"new BrowseTheWeb","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/abilities/BrowseTheWeb.ts","line":85,"character":4}],"typeParameter":[{"id":3261,"name":"Native_Element_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"any"}}],"parameters":[{"id":3262,"name":"session","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":3867,"typeArguments":[{"type":"reference","target":4237,"typeArguments":[{"type":"reference","target":3261,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"BrowseTheWeb.Native_Element_Type","refersToTypeParameter":true}],"name":"Page","package":"@serenity-js/web"}],"name":"BrowsingSession","package":"@serenity-js/web"}}],"type":{"type":"reference","target":3251,"typeArguments":[{"type":"reference","target":3261,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"BrowseTheWeb.Native_Element_Type","refersToTypeParameter":true}],"name":"BrowseTheWeb","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"Ability.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"Ability.constructor"}},{"id":3264,"name":"currentPage","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/abilities/BrowseTheWeb.ts","line":92,"character":10}],"signatures":[{"id":3265,"name":"currentPage","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/) representing the currently active browser tab."}]},"sources":[{"fileName":"packages/web/src/screenplay/abilities/BrowseTheWeb.ts","line":92,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4237,"typeArguments":[{"type":"reference","target":3261,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"BrowseTheWeb.Native_Element_Type","refersToTypeParameter":true}],"name":"Page","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":3266,"name":"allPages","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/abilities/BrowseTheWeb.ts","line":100,"character":4}],"signatures":[{"id":3267,"name":"allPages","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns an array of [pages](/api/web/class/Page/) representing all the browser tabs\\navailable in the current ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/)."}]},"sources":[{"fileName":"packages/web/src/screenplay/abilities/BrowseTheWeb.ts","line":100,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4237,"typeArguments":[{"type":"reference","target":3261,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"BrowseTheWeb.Native_Element_Type","refersToTypeParameter":true}],"name":"Page","package":"@serenity-js/web"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":3268,"name":"browserCapabilities","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/abilities/BrowseTheWeb.ts","line":107,"character":10}],"signatures":[{"id":3269,"name":"browserCapabilities","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns [basic meta-data](/api/web/interface/BrowserCapabilities/) about the browser associated with this ability."}]},"sources":[{"fileName":"packages/web/src/screenplay/abilities/BrowseTheWeb.ts","line":107,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":3863,"name":"BrowserCapabilities","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]}],"groups":[{"title":"Constructors","children":[3259]},{"title":"Methods","children":[3270,3272,3264,3266,3268]}],"sources":[{"fileName":"packages/web/src/screenplay/abilities/BrowseTheWeb.ts","line":83,"character":22}],"typeParameters":[{"id":3274,"name":"Native_Element_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"any"}}],"extendedTypes":[{"type":"reference","target":490,"name":"Ability","package":"@serenity-js/core"}],"permalink":"/api/web/class/BrowseTheWeb","nextId":3275},{"id":3275,"name":"Clear","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs an [actor](/api/core/class/Actor/) who has the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\nto clear the "},{"kind":"code","text":"`value`"},{"kind":"text","text":" of a [form "},{"kind":"code","text":"`input`"},{"kind":"text","text":" field](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input).\\n\\n## Example widget\\n\\n"},{"kind":"code","text":"```html\\n<form>\\n  <input type=\\"text\\" name=\\"example\\" id=\\"example\\" />\\n</form>\\n```"},{"kind":"text","text":"\\n\\n## Lean Page Object describing the widget\\n\\n"},{"kind":"code","text":"```ts\\nimport { By, PageElement } from \'@serenity-js/web\'\\n\\nconst Form = {\\n  exampleInput: () =>\\n    PageElement.located(By.id(\'example\'))\\n     .describedAs(\'example input\')\\n}\\n```"},{"kind":"text","text":"\\n\\n## Clearing the value of an input field\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Clear, Enter, Value } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'In\xe9s\')\\n  .whoCan(BrowseTheWeb.using(browser))\\n  .attemptsTo(\\n    Enter.theValue(\'Hello world!\').into(Form.exampleInput()),\\n    Ensure.that(Value.of(Form.exampleInput()), equals(\'Hello world!\')),\\n\\n    Clear.theValueOf(Form.exampleInput()),\\n    Ensure.that(Value.of(Form.exampleInput()), equals(\'\')),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\n- ["},{"kind":"code","text":"`Enter`"},{"kind":"text","text":"](/api/web/class/Enter/)\\n- ["},{"kind":"code","text":"`Value`"},{"kind":"text","text":"](/api/web/class/Value/)\\n- ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)"}]},"children":[{"id":3276,"name":"theValueOf","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Clear.ts","line":68,"character":11}],"signatures":[{"id":3277,"name":"theValueOf","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates an [interaction](/api/core/class/Interaction/)\\nthat instructs the [actor](/api/core/class/Actor/)\\nto clear the value of an input "},{"kind":"code","text":"`field`"},{"kind":"text","text":","}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Clear.ts","line":68,"character":11}],"parameters":[{"id":3278,"name":"field","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The field which value should be cleared"}]},"type":{"type":"reference","target":688,"typeArguments":[{"type":"reference","target":4353,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":793,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":3307,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"signatures":[{"id":3308,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":3579,"name":"PageElementInteraction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","target":3578,"name":"PageElementInteraction.instantiationLocation"}},{"id":3309,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":3310,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":3311,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1049,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":600,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":3312,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3313,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3313]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":3581,"name":"PageElementInteraction.describedBy"}}],"inheritedFrom":{"type":"reference","target":3580,"name":"PageElementInteraction.describedBy"}},{"id":3319,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":3320,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":3591,"name":"PageElementInteraction.toString"}}],"inheritedFrom":{"type":"reference","target":3590,"name":"PageElementInteraction.toString"}},{"id":3293,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Clear.ts","line":79,"character":10}],"signatures":[{"id":3294,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the provided ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to perform this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/).\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`PerformsActivities`"},{"kind":"text","text":"](/api/core/interface/PerformsActivities/)\\n- ["},{"kind":"code","text":"`UsesAbilities`"},{"kind":"text","text":"](/api/core/interface/UsesAbilities/)\\n- ["},{"kind":"code","text":"`AnswersQuestions`"},{"kind":"text","text":"](/api/core/interface/AnswersQuestions/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Clear.ts","line":79,"character":10}],"parameters":[{"id":3295,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":600,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":1049,"name":"AnswersQuestions","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":3575,"name":"PageElementInteraction.performAs"}}],"overwrites":{"type":"reference","target":3574,"name":"PageElementInteraction.performAs"}}],"groups":[{"title":"Methods","children":[3276,3307,3309,3319,3293]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/Clear.ts","line":58,"character":13}],"extendedTypes":[{"type":"reference","target":3555,"name":"PageElementInteraction","package":"@serenity-js/web"}],"permalink":"/api/web/class/Clear","previousId":3251,"nextId":3321},{"id":3321,"name":"Click","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs an [actor](/api/core/class/Actor/) who has the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\nto scroll the given ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) into view and then [click](https://developer.mozilla.org/en-US/docs/Web/API/Element/click_event) on it.\\n\\n## Example widget\\n\\n"},{"kind":"code","text":"```html\\n<form>\\n  <input type=\\"text\\" name=\\"example\\" id=\\"example\\" />\\n</form>\\n```"},{"kind":"text","text":"\\n\\n## Lean Page Object describing the widget\\n\\n"},{"kind":"code","text":"```ts\\nimport { By, PageElement } from \'@serenity-js/webdriverio\';\\n\\nclass Form {\\n  static exampleInput = () =>\\n    PageElement.located(by.id(\'example\'))\\n      .describedAs(\'example input\')\\n}\\n```"},{"kind":"text","text":"\\n\\n## Clicking on an element\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Click, isSelected } from \'@serenity-js/web\'\\nimport { Ensure } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Chlo\xe9\')\\n  .attemptsTo(\\n    Click.on(Form.exampleInput()),\\n    Ensure.that(Form.exampleInput(), isSelected()),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\n- ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)"}]},"children":[{"id":3322,"name":"on","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Click.ts","line":60,"character":11}],"signatures":[{"id":3323,"name":"on","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/)."}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Click.ts","line":60,"character":11}],"parameters":[{"id":3324,"name":"pageElement","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The element to be clicked on"}]},"type":{"type":"reference","target":688,"typeArguments":[{"type":"reference","target":4353,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":793,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":3347,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"signatures":[{"id":3348,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":3579,"name":"PageElementInteraction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","target":3578,"name":"PageElementInteraction.instantiationLocation"}},{"id":3349,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":3350,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":3351,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1049,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":600,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":3352,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3353,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3353]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":3581,"name":"PageElementInteraction.describedBy"}}],"inheritedFrom":{"type":"reference","target":3580,"name":"PageElementInteraction.describedBy"}},{"id":3359,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":3360,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":3591,"name":"PageElementInteraction.toString"}}],"inheritedFrom":{"type":"reference","target":3590,"name":"PageElementInteraction.toString"}},{"id":3339,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Click.ts","line":71,"character":10}],"signatures":[{"id":3340,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the provided ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to perform this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/).\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`PerformsActivities`"},{"kind":"text","text":"](/api/core/interface/PerformsActivities/)\\n- ["},{"kind":"code","text":"`UsesAbilities`"},{"kind":"text","text":"](/api/core/interface/UsesAbilities/)\\n- ["},{"kind":"code","text":"`AnswersQuestions`"},{"kind":"text","text":"](/api/core/interface/AnswersQuestions/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Click.ts","line":71,"character":10}],"parameters":[{"id":3341,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":600,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":1049,"name":"AnswersQuestions","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":3575,"name":"PageElementInteraction.performAs"}}],"overwrites":{"type":"reference","target":3574,"name":"PageElementInteraction.performAs"}}],"groups":[{"title":"Methods","children":[3322,3347,3349,3359,3339]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/Click.ts","line":52,"character":13}],"extendedTypes":[{"type":"reference","target":3555,"name":"PageElementInteraction","package":"@serenity-js/web"}],"permalink":"/api/web/class/Click","previousId":3275,"nextId":3361},{"id":3361,"name":"DoubleClick","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs an [actor](/api/core/class/Actor/) who has the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\nto perform a double click on a given ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/).\\n\\n## Example widget\\n"},{"kind":"code","text":"```html\\n\x3c!--\\n    The editor shows up when the user double-clicks\\n    on one of the properties of their profile\\n    and lets them change the value of that property.\\n--\x3e\\n<div id=\\"user-profile\\">\\n    <ul>\\n        <li id=\\"display-name\\" ondblclick=\\"edit(this)\\">User12345</li>\\n        <li id=\\"email-address\\" ondblclick=\\"edit(this)\\">tester@example.org</li>\\n    </ul>\\n    <form id=\\"editor\\" class=\\"hidden\\">\\n        <input type=\\"text\\" value=\\"\\" />\\n    </form>\\n</div>\\n```"},{"kind":"text","text":"\\n\\n## Lean Page Object describing the widget\\n\\n"},{"kind":"code","text":"```ts\\nimport { By, PageElement } from \'@serenity-js/web\'\\n\\nclass UserProfile {\\n  static displayName = () =>\\n    PageElement.located(by.id(\'display-name\'))\\n      .describedAs(\'display name\')\\n\\n  static emailAddress = () =>\\n    PageElement.located(by.id(\'email-address\'))\\n      .describedAs(\'email address\')\\n\\n  static editor = () =>\\n    PageElement.located(by.id(\'editor\'))\\n      .describedAs(\'editor\')\\n}\\n```"},{"kind":"text","text":"\\n\\n## Double-clicking on an element\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Wait } from \'@serenity-js/core\'\\nimport { DoubleClick, isVisible, Enter, Text } from \'@serenity-js/web\'\\nimport { Ensure, equals, not } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Dorothy\')\\n  .whoCan(BrowseTheWeb.using(browser))\\n  .attemptsTo(\\n    DoubleClick.on(UserProfile.displayName),\\n    Wait.until(UserProfile.editor(), isVisible()),\\n\\n    Enter.theValue(\'New username\').into(UserProfile.editor),\\n\\n    Ensure.that(Text.of(UserProfile.displayName()), equals(\'New username\')),\\n    Ensure.that(UserProfile.editor, not(isVisible()))\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\n- ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)"}]},"children":[{"id":3362,"name":"on","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/DoubleClick.ts","line":83,"character":11}],"signatures":[{"id":3363,"name":"on","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/)."}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/DoubleClick.ts","line":83,"character":11}],"parameters":[{"id":3364,"name":"pageElement","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The element to be double-clicked on"}]},"type":{"type":"reference","target":688,"typeArguments":[{"type":"reference","target":4353,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":793,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":3387,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"signatures":[{"id":3388,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":3579,"name":"PageElementInteraction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","target":3578,"name":"PageElementInteraction.instantiationLocation"}},{"id":3389,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":3390,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":3391,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1049,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":600,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":3392,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3393,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3393]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":3581,"name":"PageElementInteraction.describedBy"}}],"inheritedFrom":{"type":"reference","target":3580,"name":"PageElementInteraction.describedBy"}},{"id":3399,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":3400,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":3591,"name":"PageElementInteraction.toString"}}],"inheritedFrom":{"type":"reference","target":3590,"name":"PageElementInteraction.toString"}},{"id":3379,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/DoubleClick.ts","line":94,"character":10}],"signatures":[{"id":3380,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the provided ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to perform this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/).\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`PerformsActivities`"},{"kind":"text","text":"](/api/core/interface/PerformsActivities/)\\n- ["},{"kind":"code","text":"`UsesAbilities`"},{"kind":"text","text":"](/api/core/interface/UsesAbilities/)\\n- ["},{"kind":"code","text":"`AnswersQuestions`"},{"kind":"text","text":"](/api/core/interface/AnswersQuestions/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/DoubleClick.ts","line":94,"character":10}],"parameters":[{"id":3381,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":600,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":1049,"name":"AnswersQuestions","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":3575,"name":"PageElementInteraction.performAs"}}],"overwrites":{"type":"reference","target":3574,"name":"PageElementInteraction.performAs"}}],"groups":[{"title":"Methods","children":[3362,3387,3389,3399,3379]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/DoubleClick.ts","line":75,"character":13}],"extendedTypes":[{"type":"reference","target":3555,"name":"PageElementInteraction","package":"@serenity-js/web"}],"permalink":"/api/web/class/DoubleClick","previousId":3321,"nextId":3401},{"id":3401,"name":"Enter","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs an [actor](/api/core/class/Actor/) who has the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\nto enter a value into a [form "},{"kind":"code","text":"`input`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input) field.\\n\\n## Example widget\\n"},{"kind":"code","text":"```html\\n<form>\\n <input type=\\"text\\" name=\\"example\\" id=\\"example\\" />\\n</form>\\n```"},{"kind":"text","text":"\\n\\n## Lean Page Object describing the widget\\n\\n"},{"kind":"code","text":"```ts\\nimport { By, PageElement } from \'@serenity-js/web\'\\n\\nclass Form {\\n  static exampleInput = () =>\\n    PageElement.located(By.id(\'example\'))\\n      .describedAs(\'example input\')\\n }\\n```"},{"kind":"text","text":"\\n\\n## Entering the value into a form field\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\';\\nimport { Enter } from \'@serenity-js/web\';\\n\\nawait actorCalled(\'Esme\')\\n  .attemptsTo(\\n    Enter.theValue(\'Hello world!\').into(Form.exampleInput()),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Handling sensitive information\\n\\nBy design, any data handled by an actor appears in Serenity/JS reports.\\nTo prevent the exposure of any sensitive information, such as passwords or tokens, you should use ["},{"kind":"code","text":"`Masked`"},{"kind":"text","text":"](/api/core/class/Masked/).\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Masked } from \'@serenity-js/core\'\\nimport { Enter } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Esme\')\\n  .attemptsTo(\\n    Enter.theValue(Masked.valueOf(\'your little secret\').into(Form.exampleInputField()),\\n  )\\n\\n  // Gets reported as: \\"Esme enters [a masked value] into the example input field\\"\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\n- ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)"}]},"children":[{"id":3402,"name":"theValue","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Enter.ts","line":75,"character":11}],"signatures":[{"id":3403,"name":"theValue","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/)."}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Enter.ts","line":75,"character":11}],"parameters":[{"id":3404,"name":"values","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"comment":{"summary":[{"kind":"text","text":"The text value to be entered"}]},"type":{"type":"array","elementType":{"type":"reference","target":688,"typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"intrinsic","name":"string"}},{"type":"array","elementType":{"type":"intrinsic","name":"number"}}]}],"name":"Answerable","package":"@serenity-js/core"}}}],"type":{"type":"reflection","declaration":{"id":3405,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3406,"name":"into","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Enter.ts","line":75,"character":92}],"type":{"type":"reflection","declaration":{"id":3407,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Enter.ts","line":75,"character":98}],"signatures":[{"id":3408,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Enter.ts","line":75,"character":98}],"parameters":[{"id":3409,"name":"field","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":688,"typeArguments":[{"type":"reference","target":4353,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":793,"name":"Interaction","package":"@serenity-js/core"}}]}}}],"groups":[{"title":"Properties","children":[3406]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/Enter.ts","line":75,"character":90}]}}}]},{"id":3434,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"signatures":[{"id":3435,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":3579,"name":"PageElementInteraction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","target":3578,"name":"PageElementInteraction.instantiationLocation"}},{"id":3436,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":3437,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":3438,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1049,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":600,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":3439,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3440,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3440]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":3581,"name":"PageElementInteraction.describedBy"}}],"inheritedFrom":{"type":"reference","target":3580,"name":"PageElementInteraction.describedBy"}},{"id":3446,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":3447,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":3591,"name":"PageElementInteraction.toString"}}],"inheritedFrom":{"type":"reference","target":3590,"name":"PageElementInteraction.toString"}},{"id":3426,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Enter.ts","line":96,"character":10}],"signatures":[{"id":3427,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the provided ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to perform this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/).\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`PerformsActivities`"},{"kind":"text","text":"](/api/core/interface/PerformsActivities/)\\n- ["},{"kind":"code","text":"`UsesAbilities`"},{"kind":"text","text":"](/api/core/interface/UsesAbilities/)\\n- ["},{"kind":"code","text":"`AnswersQuestions`"},{"kind":"text","text":"](/api/core/interface/AnswersQuestions/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Enter.ts","line":96,"character":10}],"parameters":[{"id":3428,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":600,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":1049,"name":"AnswersQuestions","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":3575,"name":"PageElementInteraction.performAs"}}],"overwrites":{"type":"reference","target":3574,"name":"PageElementInteraction.performAs"}}],"groups":[{"title":"Methods","children":[3402,3434,3436,3446,3426]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/Enter.ts","line":67,"character":13}],"extendedTypes":[{"type":"reference","target":3555,"name":"PageElementInteraction","package":"@serenity-js/web"}],"permalink":"/api/web/class/Enter","previousId":3361,"nextId":3448},{"id":3448,"name":"ExecuteScript","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs an [actor](/api/core/class/Actor/) who has the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\nto inject a script into the browser and execute it in the context of the current browser tab.\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\n- ["},{"kind":"code","text":"`LastScriptExecution.result`"},{"kind":"text","text":"](/api/web/class/LastScriptExecution/#result)"}]},"children":[{"id":3449,"name":"from","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/ExecuteScript.ts","line":28,"character":11}],"signatures":[{"id":3450,"name":"from","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a version of this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/)\\nconfigured to load a script from "},{"kind":"code","text":"`sourceUrl`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/ExecuteScript.ts","line":28,"character":11}],"parameters":[{"id":3451,"name":"sourceUrl","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The URL to load the script from"}]},"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":793,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":3452,"name":"async","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/ExecuteScript.ts","line":173,"character":11}],"signatures":[{"id":3453,"name":"async","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs an [actor](/api/core/class/Actor/) who has the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\nto execute an asynchronous script within the context of the current browser tab.\\n\\nThe script fragment will be executed as the body of an anonymous function.\\nIf the script is provided as a function object, that function will be converted to a string for injection\\ninto the target window.\\n\\nAny arguments provided in addition to the script will be included as script arguments and may be referenced\\nusing the "},{"kind":"code","text":"`arguments`"},{"kind":"text","text":" object. Arguments may be a "},{"kind":"code","text":"`boolean`"},{"kind":"text","text":", "},{"kind":"code","text":"`number`"},{"kind":"text","text":", "},{"kind":"code","text":"`string`"},{"kind":"text","text":"\\nor ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/).\\nArrays and objects may also be used as script arguments as long as each item adheres\\nto the types previously mentioned.\\n\\nUnlike executing synchronous JavaScript with ["},{"kind":"code","text":"`ExecuteScript.sync`"},{"kind":"text","text":"](/api/web/class/ExecuteScript/#sync),\\nscripts executed with this function must explicitly signal they are finished by invoking the provided callback.\\n\\nThis callback will always be injected into the executed function as the last argument,\\nand thus may be referenced with "},{"kind":"code","text":"`arguments[arguments.length - 1]`"},{"kind":"text","text":".\\n\\nIf the script invokes the "},{"kind":"code","text":"`callback`"},{"kind":"text","text":" with a return value, this will be made available\\nvia the ["},{"kind":"code","text":"`LastScriptExecution.result`"},{"kind":"text","text":"](/api/web/class/LastScriptExecution/#result).\\n\\n**Please note** that in order to signal an error in the "},{"kind":"code","text":"`script`"},{"kind":"text","text":" you need to throw an ["},{"kind":"code","text":"`Error`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error)\\ninstead of passing it to the callback function.\\n\\n#### Executing an async script\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { ExecuteScript } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Esti\').attemptsTo(\\n  ExecuteScript.async(`\\n    var callback = arguments[arguments.length - 1]\\n\\n    // do stuff\\n\\n    callback(result)\\n  `)\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Executing async script as function\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { ExecuteScript } from \'@serenity-js/web\'\\n\\nconst MyPage = {\\n  header: () =>\\n    PageElement.located(By.css(\'h1\')).describedAs(\'header\'),\\n}\\n\\nawait actorCalled(\'Esti\').attemptsTo(\\n  ExecuteScript.async(function getText(header, callback) {\\n    callback(header.innerText)\\n  }).withArguments(MyPage.header())\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Passing arguments to an async script\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { ExecuteScript } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Esti\').attemptsTo(\\n  ExecuteScript.async(`\\n    var name = arguments[0];\\n    var age = arguments[1];\\n    var callback = arguments[arguments.length - 1]\\n\\n    // do stuff\\n\\n    callback(result)\\n  `).withArguments(\'Bob\', 24)\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Passing PageElement arguments to an async script\\n\\nSerenity/JS automatically converts ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) objects passed as arguments to the script\\ninto their corresponding DOM elements.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { ExecuteScript, PageElement } from \'@serenity-js/web\'\\n\\nconst MyPage = {\\n  header: () =>\\n    PageElement.located(By.css(\'h1\')).describedAs(\'header\'),\\n}\\n\\nawait actorCalled(\'Esti\').attemptsTo(\\n  ExecuteScript.async(`\\n    var header = arguments[0]\\n    var callback = arguments[arguments.length - 1]\\n\\n    callback(header.innerText)\\n  `).withArguments(MyPage.header())\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Using nested data structures containing PageElement objects\\n\\nSerenity/JS automatically converts any ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) objects\\ncontained in nested data structures passed to the script\\ninto their corresponding DOM elements.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { ExecuteScript, PageElement } from \'@serenity-js/web\'\\n\\nconst MyPage = {\\n  header: () =>\\n    PageElement.located(By.css(\'h1\')).describedAs(\'header\'),\\n\\n  article: () =>\\n    PageElement.located(By.css(\'article\')).describedAs(\'article\'),\\n}\\n\\nawait actorCalled(\'Esti\').attemptsTo(\\n  ExecuteScript.async(`\\n    var { include, exclude }  = arguments[0]\\n    var callback = arguments[arguments.length - 1]\\n\\n    callback(include[0].innerText)\\n  `).withArguments({\\n    include: [ MyPage.article() ],\\n    exclude: [ MyPage.header() ],\\n  })\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`LastScriptExecution.result`"},{"kind":"text","text":"](/api/web/class/LastScriptExecution/#result)"}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/ExecuteScript.ts","line":173,"character":11}],"parameters":[{"id":3454,"name":"script","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The script to be executed"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Function"},"name":"Function","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Function"}]}}],"type":{"type":"reference","target":3460,"name":"ExecuteScriptWithArguments","package":"@serenity-js/web"}}]},{"id":3455,"name":"sync","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/ExecuteScript.ts","line":285,"character":11}],"signatures":[{"id":3456,"name":"sync","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs an [actor](/api/core/class/Actor/) who has the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\nto execute a synchronous script within the context of the current browser tab.\\n\\nIf the script returns a value, it will be made available via ["},{"kind":"code","text":"`LastScriptExecution.result`"},{"kind":"text","text":"](/api/web/class/LastScriptExecution/#result).\\n\\n#### Executing a sync script as string and reading the result\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { ExecuteScript, LastScriptExecution } from \'@serenity-js/web\'\\nimport { Ensure, includes } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Joseph\')\\n  .attemptsTo(\\n    ExecuteScript.sync(\'return navigator.userAgent\'),\\n    Ensure.that(LastScriptExecution.result<string>(), includes(\'Chrome\')),\\n  )\\n```"},{"kind":"text","text":"\\n\\n#### Executing a sync script as function and retrieving the result\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { By, Enter, ExecuteScript, LastScriptExecution, PageElement } from \'@serenity-js/web\'\\n\\nconst Checkout = {\\n  someOfferField: () =>\\n    PageElement.located(By.id(\'offer-code\'))\\n      .describedAs(\'offer code\')\\n\\n  applyOfferCodeField = () =>\\n    PageElement.located(By.id(\'apply-offer-code\'))\\n      .describedAs(\'apply offer field\')\\n}\\n\\nawait actorCalled(\'Joseph\')\\n  .attemptsTo(\\n    // inject JavaScript to read some property of an element\\n    ExecuteScript.sync(function getValue(element) {\\n        return element.value;\\n    }).withArguments(Checkout.someOfferField()),\\n\\n    // use LastScriptExecution.result() to read the value\\n    // returned from the injected script\\n    // and pass it to another interaction\\n    Enter.theValue(LastScriptExecution.result<string>()).into(Checkout.applyOfferCodeField()),\\n  )\\n```"},{"kind":"text","text":"\\n\\n#### Passing PageElement arguments to a sync script\\n\\nSerenity/JS automatically converts ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) objects passed as arguments to the script\\ninto their corresponding DOM elements.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { ExecuteScript, PageElement } from \'@serenity-js/web\'\\n\\nconst MyPage = {\\n  header: () =>\\n    PageElement.located(By.css(\'h1\')).describedAs(\'header\'),\\n}\\n\\nawait actorCalled(\'Esti\').attemptsTo(\\n  ExecuteScript.sync(function getInnerHtml(element) {\\n    return element.innerHTML;\\n  }).withArguments(MyPage.header())\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Using nested data structures containing PageElement objects\\n\\nSerenity/JS automatically converts any ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) objects\\ncontained in nested data structures passed to the script\\ninto their corresponding DOM elements.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { ExecuteScript, PageElement } from \'@serenity-js/web\'\\n\\nconst MyPage = {\\n  header: () =>\\n    PageElement.located(By.css(\'h1\')).describedAs(\'header\'),\\n\\n  article: () =>\\n    PageElement.located(By.css(\'article\')).describedAs(\'article\'),\\n}\\n\\nawait actorCalled(\'Esti\').attemptsTo(\\n  ExecuteScript.async(function getInnerHtml(scope) {\\n    return scope.include[0].innerHTML;\\n  `).withArguments({\\n    include: [ MyPage.article() ],\\n    exclude: [ MyPage.header() ],\\n  })\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`LastScriptExecution.result`"},{"kind":"text","text":"](/api/web/class/LastScriptExecution/#result)"}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/ExecuteScript.ts","line":285,"character":11}],"parameters":[{"id":3457,"name":"script","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The script to be executed"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Function"},"name":"Function","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Function"}]}}],"type":{"type":"reference","target":3460,"name":"ExecuteScriptWithArguments","package":"@serenity-js/web"}}]},{"id":3458,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":3459,"name":"new ExecuteScript","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":3448,"name":"ExecuteScript","package":"@serenity-js/web"}}]}],"groups":[{"title":"Constructors","children":[3458]},{"title":"Methods","children":[3449,3452,3455]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/ExecuteScript.ts","line":19,"character":13}],"permalink":"/api/web/class/ExecuteScript","previousId":3401,"nextId":3460},{"id":3460,"name":"ExecuteScriptWithArguments","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"Allows for a script to be executed to be parametrised.\\n\\n## Learn more\\n-  ["},{"kind":"code","text":"`ExecuteScript`"},{"kind":"text","text":"](/api/web/class/ExecuteScript/)"}]},"children":[{"id":3489,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"signatures":[{"id":3490,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.instantiationLocation"}},{"id":3491,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":3492,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":3493,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1049,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":600,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":3494,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3495,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3495]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.describedBy"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.describedBy"}},{"id":3501,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":3502,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.toString"}},{"id":3471,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/ExecuteScript.ts","line":303,"character":4}],"signatures":[{"id":3472,"name":"new ExecuteScriptWithArguments","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/ExecuteScript.ts","line":303,"character":4}],"parameters":[{"id":3473,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":3474,"name":"script","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Function"},"name":"Function","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Function"}]}},{"id":3475,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}},"defaultValue":"[]"}],"type":{"type":"reference","target":3460,"name":"ExecuteScriptWithArguments","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"Interaction.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"Interaction.constructor"}},{"id":3478,"name":"withArguments","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/ExecuteScript.ts","line":317,"character":20}],"signatures":[{"id":3479,"name":"withArguments","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/ExecuteScript.ts","line":317,"character":20}],"parameters":[{"id":3480,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"comment":{"summary":[{"kind":"text","text":"Arguments to parametrise the script with"}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"reference","target":793,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":3481,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/ExecuteScript.ts","line":322,"character":10}],"signatures":[{"id":3482,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/ExecuteScript.ts","line":322,"character":10}],"parameters":[{"id":3483,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":600,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":692,"name":"CollectsArtifacts","package":"@serenity-js/core"},{"type":"reference","target":1049,"name":"AnswersQuestions","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Interaction.performAs"}}],"overwrites":{"type":"reference","target":-1,"name":"Interaction.performAs"}}],"groups":[{"title":"Constructors","children":[3471]},{"title":"Methods","children":[3489,3491,3501,3478,3481]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/ExecuteScript.ts","line":301,"character":22}],"extendedTypes":[{"type":"reference","target":793,"name":"Interaction","package":"@serenity-js/core"}],"permalink":"/api/web/class/ExecuteScriptWithArguments","previousId":3448,"nextId":3503},{"id":3503,"name":"Hover","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs an [actor](/api/core/class/Actor/) who has the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\nto hover the mouse pointer over a given ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/).\\n\\n## Example widget\\n"},{"kind":"code","text":"```html\\n <a data-test=\\"example-link\\"\\n     class=\\"off\\"\\n     onmouseover=\\"this.className=\'on\';\\"\\n     onmouseout=\\"this.className=\'off\';\\"\\n     href=\\"/\\">hover over me</a>\\n```"},{"kind":"text","text":"\\n\\n## Lean Page Object describing the widget\\n\\n"},{"kind":"code","text":"```ts\\nimport { By, PageElement } from \'@serenity-js/web\'\\n\\nclass Example {\\n  static link = () =>\\n    PageElement.located(By.css(\'[data-test=\\"example-link\\"]\'))\\n      .describedAs(\'example link\')\\n }\\n```"},{"kind":"text","text":"\\n\\n## Hovering over an element\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Hover, CssClasses } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Hank\')\\n  .whoCan(BrowseTheWeb.using(browser))\\n  .attemptsTo(\\n     Ensure.that(CssClasses.of(Example.link()), equals([ \'off\' ])),\\n\\n    Hover.over(Example.link),\\n    Ensure.that(CssClasses.of(Example.link()), equals([ \'on\' ])),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\n- ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)"}]},"children":[{"id":3504,"name":"over","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Hover.ts","line":64,"character":11}],"signatures":[{"id":3505,"name":"over","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Hover.ts","line":64,"character":11}],"parameters":[{"id":3506,"name":"pageElement","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The element to be hovered over"}]},"type":{"type":"reference","target":688,"typeArguments":[{"type":"reference","target":4353,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":793,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":3529,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"signatures":[{"id":3530,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":3579,"name":"PageElementInteraction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","target":3578,"name":"PageElementInteraction.instantiationLocation"}},{"id":3531,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":3532,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":3533,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1049,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":600,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":3534,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3535,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3535]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":3581,"name":"PageElementInteraction.describedBy"}}],"inheritedFrom":{"type":"reference","target":3580,"name":"PageElementInteraction.describedBy"}},{"id":3541,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":3542,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":3591,"name":"PageElementInteraction.toString"}}],"inheritedFrom":{"type":"reference","target":3590,"name":"PageElementInteraction.toString"}},{"id":3521,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Hover.ts","line":75,"character":10}],"signatures":[{"id":3522,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the provided ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to perform this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/).\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`PerformsActivities`"},{"kind":"text","text":"](/api/core/interface/PerformsActivities/)\\n- ["},{"kind":"code","text":"`UsesAbilities`"},{"kind":"text","text":"](/api/core/interface/UsesAbilities/)\\n- ["},{"kind":"code","text":"`AnswersQuestions`"},{"kind":"text","text":"](/api/core/interface/AnswersQuestions/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Hover.ts","line":75,"character":10}],"parameters":[{"id":3523,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":600,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":1049,"name":"AnswersQuestions","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":3575,"name":"PageElementInteraction.performAs"}}],"overwrites":{"type":"reference","target":3574,"name":"PageElementInteraction.performAs"}}],"groups":[{"title":"Methods","children":[3504,3529,3531,3541,3521]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/Hover.ts","line":56,"character":13}],"extendedTypes":[{"type":"reference","target":3555,"name":"PageElementInteraction","package":"@serenity-js/web"}],"permalink":"/api/web/class/Hover","previousId":3460,"nextId":3543},{"id":3543,"name":"Navigate","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs an [actor](/api/core/class/Actor/) who has the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\nto navigate to a specific destination, as well as back and forth in the browser history,\\nor reload the current page.\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)"}]},"children":[{"id":3544,"name":"to","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Navigate.ts","line":68,"character":11}],"signatures":[{"id":3545,"name":"to","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs an [actor](/api/core/class/Actor/) who has the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\nto navigate to a given URL.\\n\\nThe URL can be:\\n- absolute, e.g. "},{"kind":"code","text":"`https://example.org/search`"},{"kind":"text","text":"\\n- relative, e.g. "},{"kind":"code","text":"`/search`"},{"kind":"text","text":"\\n\\nIf the URL is relative, your Web test integration tool will append it to any base URL\\nspecified in its respective configuration file.\\n\\n\\n#### Navigate to path relative to baseUrl\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Navigate } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Hannu\')\\n  .attemptsTo(\\n    Navigate.to(\'/search\'),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Navigate to an absolute URL (overrides baseUrl)\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Navigate } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Hannu\')\\n  .whoCan(BrowseTheWeb.using(browser))\\n  .attemptsTo(\\n    Navigate.to(\'https://mycompany.org/login\'),\\n  )\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n\\n- ["},{"kind":"code","text":"`Page.navigateTo`"},{"kind":"text","text":"](/api/web/class/Page/#navigateTo)\\n- [WebdriverIO: Configuration Options](https://webdriver.io/docs/options/#baseurl)\\n- [Playwright: Browser](https://playwright.dev/docs/api/class-browser#browser-new-context)\\n- [Playwright: Test Options](https://playwright.dev/docs/api/class-testoptions#test-options-base-url)\\n- [Protractor: Configuration](https://github.com/angular/protractor/blob/master/lib/config.ts)"}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Navigate.ts","line":68,"character":11}],"parameters":[{"id":3546,"name":"url","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An absolute URL or path an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n should navigate to"}]},"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":793,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":3547,"name":"back","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Navigate.ts","line":95,"character":11}],"signatures":[{"id":3548,"name":"back","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs an [actor](/api/core/class/Actor/) who has the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\nto navigate back one page in the joint session history of the current top-level browsing context.\\n\\n#### Navigate back in browsing history\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, endsWith } from \'@serenity-js/assertions\'\\nimport { Navigate, Page } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Hannu\')\\n  .whoCan(BrowseTheWeb.using(browser))\\n  .attemptsTo(\\n    Navigate.to(\'/first\'),\\n    Navigate.to(\'/second\'),\\n\\n    Navigate.back(),\\n\\n    Ensure.that(Page.current().url().href, endsWith(\'/first\')),\\n  )\\n```"}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Navigate.ts","line":95,"character":11}],"type":{"type":"reference","target":793,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":3549,"name":"forward","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Navigate.ts","line":127,"character":11}],"signatures":[{"id":3550,"name":"forward","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs an [actor](/api/core/class/Actor/) who has the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\nto navigate forward one page in the joint session history of the current top-level browsing context.\\n\\n#### Navigate forward in browsing history\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, endsWith } from \'@serenity-js/assertions\'\\nimport { Navigate, Page } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Hannu\')\\n  .whoCan(BrowseTheWeb.using(browser))\\n  .attemptsTo(\\n    Navigate.to(\'/first\'),\\n    Navigate.to(\'/second\'),\\n\\n    Navigate.back(),\\n    Navigate.forward(),\\n\\n    Ensure.that(Page.current().url().href, endsWith(\'/second\')),\\n  )\\n```"}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Navigate.ts","line":127,"character":11}],"type":{"type":"reference","target":793,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":3551,"name":"reloadPage","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Navigate.ts","line":156,"character":11}],"signatures":[{"id":3552,"name":"reloadPage","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs an [actor](/api/core/class/Actor/) who has the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\nto reload the current page.\\n\\n#### Navigate to path relative to baseUrl\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, endsWith } from \'@serenity-js/assertions\'\\nimport { Navigate, Cookie } from \'@serenity-js/web\'\\nimport { browser } from \'@wdio/globals\'\\n\\nawait actorCalled(\'Hannu\')\\n  .whoCan(BrowseTheWebWithWebdriverIO.using(browser))\\n  .attemptsTo(\\n    Navigate.to(\'/login\'),\\n    Cookie.called(\'session_id\').delete(),\\n    Navigate.reloadPage(),\\n  )\\n```"}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Navigate.ts","line":156,"character":11}],"type":{"type":"reference","target":793,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":3553,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":3554,"name":"new Navigate","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":3543,"name":"Navigate","package":"@serenity-js/web"}}]}],"groups":[{"title":"Constructors","children":[3553]},{"title":"Methods","children":[3544,3547,3549,3551]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/Navigate.ts","line":17,"character":13}],"permalink":"/api/web/class/Navigate","previousId":3503,"nextId":3555},{"id":3555,"name":"PageElementInteraction","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"A base class for interactions with ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) objects.\\n\\n**Note:** The recommended way to implement custom interactions\\nin your code is to use the ["},{"kind":"code","text":"`Interaction.where`"},{"kind":"text","text":"](/api/core/class/Interaction/#where) factory method."}]},"children":[{"id":3578,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"signatures":[{"id":3579,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.instantiationLocation"}},{"id":3574,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/core/lib/screenplay/Interaction.ts","line":89,"character":13}],"signatures":[{"id":3575,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the provided ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to perform this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/).\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`PerformsActivities`"},{"kind":"text","text":"](/api/core/interface/PerformsActivities/)\\n- ["},{"kind":"code","text":"`UsesAbilities`"},{"kind":"text","text":"](/api/core/interface/UsesAbilities/)\\n- ["},{"kind":"code","text":"`AnswersQuestions`"},{"kind":"text","text":"](/api/core/interface/AnswersQuestions/)"}]},"sources":[{"fileName":"packages/core/lib/screenplay/Interaction.ts","line":89,"character":13}],"parameters":[{"id":3576,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":600,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":1049,"name":"AnswersQuestions","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.performAs"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.performAs"}},{"id":3580,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":3581,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":3582,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1049,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":600,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":3583,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3584,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3584]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.describedBy"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.describedBy"}},{"id":3590,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":3591,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.toString"}}],"groups":[{"title":"Methods","children":[3578,3574,3580,3590]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/PageElementInteraction.ts","line":15,"character":22}],"extendedTypes":[{"type":"reference","target":793,"name":"Interaction","package":"@serenity-js/core"}],"extendedBy":[{"type":"reference","target":3275,"name":"Clear"},{"type":"reference","target":3321,"name":"Click"},{"type":"reference","target":3361,"name":"DoubleClick"},{"type":"reference","target":3401,"name":"Enter"},{"type":"reference","target":3503,"name":"Hover"},{"type":"reference","target":3592,"name":"Press"},{"type":"reference","target":3640,"name":"RightClick"}],"permalink":"/api/web/class/PageElementInteraction","previousId":3543,"nextId":3592},{"id":3592,"name":"Press","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs an [actor](/api/core/class/Actor/) who has the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\nto send a key press or a sequence of keys to a Web element.\\n\\n**Note:** On macOS, some keyboard shortcuts might not work\\nwith the ["},{"kind":"code","text":"`devtools`"},{"kind":"text","text":" protocol](https://webdriver.io/docs/automationProtocols/#devtools-protocol).\\n\\n For example:\\n - to *copy*, instead of ["},{"kind":"code","text":"`Key.Meta`"},{"kind":"text","text":"](/api/web/class/Key/#Meta)+"},{"kind":"code","text":"`C`"},{"kind":"text","text":", use ["},{"kind":"code","text":"`Key.Control`"},{"kind":"text","text":"](/api/web/class/Key/#Control)+["},{"kind":"code","text":"`Key.Insert`"},{"kind":"text","text":"](/api/web/class/Key/#Insert)\\n - to *cut*, instead of ["},{"kind":"code","text":"`Key.Meta`"},{"kind":"text","text":"](/api/web/class/Key/#Meta)+"},{"kind":"code","text":"`X`"},{"kind":"text","text":", use ["},{"kind":"code","text":"`Key.Control`"},{"kind":"text","text":"](/api/web/class/Key/#Control)+["},{"kind":"code","text":"`Key.Delete`"},{"kind":"text","text":"](/api/web/class/Key/#Delete)\\n - to *paste*, instead of ["},{"kind":"code","text":"`Key.Meta`"},{"kind":"text","text":"](/api/web/class/Key/#Meta)+"},{"kind":"code","text":"`V`"},{"kind":"text","text":", use ["},{"kind":"code","text":"`Key.Shift`"},{"kind":"text","text":"](/api/web/class/Key/#Shift)+["},{"kind":"code","text":"`Key.Insert`"},{"kind":"text","text":"](/api/web/class/Key/#Insert)\\n\\n## Example widget\\n\\n"},{"kind":"code","text":"```html\\n<form>\\n  <input type=\\"text\\" name=\\"example\\" id=\\"example\\" />\\n</form>\\n```"},{"kind":"text","text":"\\n\\n## Lean Page Object describing the widget\\n\\n"},{"kind":"code","text":"```ts\\nimport { By, PageElement } from \'@serenity-js/web\'\\n\\nclass Form {\\n  static exampleInput = () =>\\n    PageElement.located(By.id(\'example\'))\\n      .describedAs(\'example input\')\\n}\\n```"},{"kind":"text","text":"\\n\\n## Pressing keys\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Key, Press, Value } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Priyanka\')\\n  .attemptsTo(\\n    Press.the(\'H\', \'i\', \'!\', Key.ENTER).in(Form.exampleInput()),\\n    Ensure.that(Value.of(Form.exampleInput), equals(\'Hi!\')),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`Key`"},{"kind":"text","text":"](/api/web/class/Key/)\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\n- ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)"}]},"children":[{"id":3593,"name":"the","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Press.ts","line":77,"character":11}],"signatures":[{"id":3594,"name":"the","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates an [interaction](/api/core/class/Interaction/)\\nthat instructs the [actor](/api/core/class/Actor/)\\nto press a sequence of [keys](/api/web/class/Key/),\\n\\nWhen no "},{"kind":"code","text":"`field`"},{"kind":"text","text":" is specified, the key sequence will be sent to the currently focused element,\\nand if no element is focused - to the "},{"kind":"code","text":"`document.body`"},{"kind":"text","text":" to handle."}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Press.ts","line":77,"character":11}],"parameters":[{"id":3595,"name":"keys","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"comment":{"summary":[{"kind":"text","text":"A sequence of one or more keys to press"}]},"type":{"type":"array","elementType":{"type":"reference","target":688,"typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"array","elementType":{"type":"intrinsic","name":"string"}},{"type":"reference","target":4121,"name":"Key","package":"@serenity-js/web"},{"type":"array","elementType":{"type":"reference","target":4121,"name":"Key","package":"@serenity-js/web"}}]}],"name":"Answerable","package":"@serenity-js/core"}}}],"type":{"type":"intersection","types":[{"type":"reference","target":610,"name":"Activity","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":3596,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3597,"name":"in","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Press.ts","line":77,"character":90}],"type":{"type":"reflection","declaration":{"id":3598,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Press.ts","line":77,"character":94}],"signatures":[{"id":3599,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Press.ts","line":77,"character":94}],"parameters":[{"id":3600,"name":"field","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":688,"typeArguments":[{"type":"reference","target":4353,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":793,"name":"Interaction","package":"@serenity-js/core"}}]}}}],"groups":[{"title":"Properties","children":[3597]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/Press.ts","line":77,"character":88}]}}]}}]},{"id":3626,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"signatures":[{"id":3627,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":3579,"name":"PageElementInteraction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","target":3578,"name":"PageElementInteraction.instantiationLocation"}},{"id":3628,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":3629,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":3630,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1049,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":600,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":3631,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3632,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3632]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":3581,"name":"PageElementInteraction.describedBy"}}],"inheritedFrom":{"type":"reference","target":3580,"name":"PageElementInteraction.describedBy"}},{"id":3638,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":3639,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":3591,"name":"PageElementInteraction.toString"}}],"inheritedFrom":{"type":"reference","target":3590,"name":"PageElementInteraction.toString"}},{"id":3614,"name":"in","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Press.ts","line":86,"character":4}],"signatures":[{"id":3615,"name":"in","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Send the key sequence to a specific element."}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Press.ts","line":86,"character":4}],"parameters":[{"id":3616,"name":"field","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":688,"typeArguments":[{"type":"reference","target":4353,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":793,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":3618,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Press.ts","line":103,"character":10}],"signatures":[{"id":3619,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the provided ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to perform this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/).\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`PerformsActivities`"},{"kind":"text","text":"](/api/core/interface/PerformsActivities/)\\n- ["},{"kind":"code","text":"`UsesAbilities`"},{"kind":"text","text":"](/api/core/interface/UsesAbilities/)\\n- ["},{"kind":"code","text":"`AnswersQuestions`"},{"kind":"text","text":"](/api/core/interface/AnswersQuestions/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Press.ts","line":103,"character":10}],"parameters":[{"id":3620,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":600,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":1049,"name":"AnswersQuestions","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":3575,"name":"PageElementInteraction.performAs"}}],"overwrites":{"type":"reference","target":3574,"name":"PageElementInteraction.performAs"}}],"groups":[{"title":"Methods","children":[3593,3626,3628,3638,3614,3618]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/Press.ts","line":64,"character":13}],"extendedTypes":[{"type":"reference","target":3555,"name":"PageElementInteraction","package":"@serenity-js/web"}],"permalink":"/api/web/class/Press","previousId":3555,"nextId":3640},{"id":3640,"name":"RightClick","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs an [actor](/api/core/class/Actor/) who has the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\r\\nto perform a right click on a given ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/).\\r\\n\\r\\nThis is typically used to open a [custom context menu](https://developer.mozilla.org/en-US/docs/Web/API/Element/click_event)\\r\\non a given Web element, since it\'s not possible to interact with the standard context menu offered by your browser.\\r\\n\\r\\n## Example widget\\r\\n\\r\\n"},{"kind":"code","text":"```html\\r\\n<form>\\r\\n  <input type=\\"text\\" id=\\"field\\"\\r\\n    oncontextmenu=\\"showMenu(); return false;\\" />\\r\\n\\r\\n  <div id=\\"context-menu\\" style=\\"display:none\\">\\r\\n    Custom context menu\\r\\n  </div>\\r\\n</form>\\r\\n\\r\\n<script>\\r\\n  function showMenu() {\\r\\n    document.getElementById(\\"context-menu\\").style.display = \'block\';\\r\\n  }\\r\\n<\/script>\\r\\n```"},{"kind":"text","text":"\\r\\n\\r\\n## Lean Page Object describing the widget\\r\\n\\r\\n"},{"kind":"code","text":"```ts\\r\\nimport { By, PageElement } from \'@serenity-js/web\'\\r\\n\\r\\nclass Form {\\r\\n  static exampleInput = () =>\\r\\n    PageElement.located(By.id(\'example\'))\\r\\n      .describedAs(\'example input\')\\r\\n\\r\\n  static exampleContextMenu = () =>\\r\\n    PageElement.located(By.id(\'context-menu\'))\\r\\n      .describedAs(\'example context menu\')\\r\\n}\\r\\n```"},{"kind":"text","text":"\\r\\n\\r\\n## Right-click on an element\\r\\n\\r\\n"},{"kind":"code","text":"```ts\\r\\nimport { actorCalled } from \'@serenity-js/core\'\\r\\nimport { RightClick, isVisible } from \'@serenity-js/web\'\\r\\nimport { Ensure } from \'@serenity-js/assertions\'\\r\\n\\r\\nawait actorCalled(\'Chlo\xe9\')\\r\\n  .whoCan(BrowseTheWeb.using(browser))\\r\\n  .attemptsTo(\\r\\n    RightClick.on(Form.exampleInput()),\\r\\n    Ensure.that(Form.exampleContextMenu(), isVisible()),\\r\\n  )\\r\\n```"},{"kind":"text","text":"\\r\\n\\r\\n## Learn more\\r\\n\\r\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\r\\n- ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)"}]},"children":[{"id":3641,"name":"on","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/RightClick.ts","line":78,"character":11}],"signatures":[{"id":3642,"name":"on","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/)."}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/RightClick.ts","line":78,"character":11}],"parameters":[{"id":3643,"name":"pageElement","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The element to be right-clicked on"}]},"type":{"type":"reference","target":688,"typeArguments":[{"type":"reference","target":4353,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":793,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":3666,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"signatures":[{"id":3667,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":3579,"name":"PageElementInteraction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","target":3578,"name":"PageElementInteraction.instantiationLocation"}},{"id":3668,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":3669,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":3670,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1049,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":600,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":3671,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3672,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3672]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":3581,"name":"PageElementInteraction.describedBy"}}],"inheritedFrom":{"type":"reference","target":3580,"name":"PageElementInteraction.describedBy"}},{"id":3678,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":3679,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":3591,"name":"PageElementInteraction.toString"}}],"inheritedFrom":{"type":"reference","target":3590,"name":"PageElementInteraction.toString"}},{"id":3658,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/RightClick.ts","line":89,"character":10}],"signatures":[{"id":3659,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the provided ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to perform this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/).\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`PerformsActivities`"},{"kind":"text","text":"](/api/core/interface/PerformsActivities/)\\n- ["},{"kind":"code","text":"`UsesAbilities`"},{"kind":"text","text":"](/api/core/interface/UsesAbilities/)\\n- ["},{"kind":"code","text":"`AnswersQuestions`"},{"kind":"text","text":"](/api/core/interface/AnswersQuestions/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/RightClick.ts","line":89,"character":10}],"parameters":[{"id":3660,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":600,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":1049,"name":"AnswersQuestions","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":3575,"name":"PageElementInteraction.performAs"}}],"overwrites":{"type":"reference","target":3574,"name":"PageElementInteraction.performAs"}}],"groups":[{"title":"Methods","children":[3641,3666,3668,3678,3658]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/RightClick.ts","line":71,"character":13}],"extendedTypes":[{"type":"reference","target":3555,"name":"PageElementInteraction","package":"@serenity-js/web"}],"permalink":"/api/web/class/RightClick","previousId":3592,"nextId":3680},{"id":3680,"name":"Scroll","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs an [actor](/api/core/class/Actor/) who has the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\nto scroll until a given ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) comes into view.\\n\\n## Example widget\\n\\n"},{"kind":"code","text":"```html\\n\x3c!--\\n  an element somewhere at the bottom of the page,\\n  outside of the visible area\\n--\x3e\\n<input type=\\"submit\\" id=\\"submit\\" />\\n```"},{"kind":"text","text":"\\n\\n## Lean Page Object describing the widget\\n\\n"},{"kind":"code","text":"```ts\\nimport { By, PageElement } from \'@serenity-js/web\'\\n\\nclass Form {\\n  static submitButton = () => {\\n    PageElement.located(By.id(\'submit\'))\\n      .describedAs(\'submit button\')\\n}\\n```"},{"kind":"text","text":"\\n\\n## Scrolling to element\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure } from \'@serenity-js/assertions\'\\nimport { Scroll, isVisible } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Sara\')\\n  .attemptsTo(\\n    Scroll.to(Form.submitButton()),\\n    Ensure.that(Form.submitButton(), isVisible()),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\n- ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)"}]},"children":[{"id":3681,"name":"to","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Scroll.ts","line":61,"character":11}],"signatures":[{"id":3682,"name":"to","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/)."}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Scroll.ts","line":61,"character":11}],"parameters":[{"id":3683,"name":"pageElement","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The element to scroll to"}]},"type":{"type":"reference","target":688,"typeArguments":[{"type":"reference","target":4353,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":3680,"name":"Scroll","package":"@serenity-js/web"}}]},{"id":3702,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"signatures":[{"id":3703,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.instantiationLocation"}},{"id":3704,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":3705,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":3706,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1049,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":600,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":3707,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3708,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3708]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.describedBy"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.describedBy"}},{"id":3714,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":3715,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.toString"}},{"id":3698,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Scroll.ts","line":72,"character":10}],"signatures":[{"id":3699,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Scroll.ts","line":72,"character":10}],"parameters":[{"id":3700,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":600,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":1049,"name":"AnswersQuestions","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Interaction.performAs"}}],"overwrites":{"type":"reference","target":-1,"name":"Interaction.performAs"}}],"groups":[{"title":"Methods","children":[3681,3702,3704,3714,3698]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/Scroll.ts","line":53,"character":13}],"extendedTypes":[{"type":"reference","target":793,"name":"Interaction","package":"@serenity-js/core"}],"permalink":"/api/web/class/Scroll","previousId":3640,"nextId":3716},{"id":3716,"name":"Select","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs an [actor](/api/core/class/Actor/) who has the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\nto select an option from a [HTML "},{"kind":"code","text":"`<select>`"},{"kind":"text","text":" element](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select),\\neither by its display name, or by value.\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Selected`"},{"kind":"text","text":"](/api/web/class/Selected/)"}]},"children":[{"id":3717,"name":"value","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":70,"character":11}],"signatures":[{"id":3718,"name":"value","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates an [interaction](/api/core/class/Interaction/)\\nthat instructs the [actor](/api/core/class/Actor/)\\nto select a single ["},{"kind":"code","text":"`<option>`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option)\\nwith a given ["},{"kind":"code","text":"`value`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option#attr-value).,\\n\\n#### Example widget\\n\\n"},{"kind":"code","text":"```html\\n<select data-test=\'countries\'>\\n  <option value=\'UK\'>United Kingdom</option>\\n  <option value=\'PL\'>Poland</option>\\n  <option value=\'US\'>United States</option>\\n</select>\\n```"},{"kind":"text","text":"C\\n\\n#### Lean Page Object describing the widget\\n\\n"},{"kind":"code","text":"```ts\\nimport { By, PageElement } from \'@serenity-js/web\'\\n\\nclass Countries {\\n  static dropdown = () =>\\n    PageElement.located(By.css(\'[data-test=\\"countries\\"]\'))\\n      .describedAs(\'countries dropdown\')\\n}\\n```"},{"kind":"text","text":"\\n\\n#### Retrieving the selected value\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Select, Selected } from \'@serenity-js/web\';\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Nick\')\\n  .attemptsTo(\\n    Select.value(\'UK\').from(Countries.dropdown()),\\n    Ensure.that(Selected.valueOf(Countries.dropdown()), equals(\'UK\')),\\n  )\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Selected.valueOf`"},{"kind":"text","text":"](/api/web/class/Selected/#valueOf)\\n- ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":70,"character":11}],"parameters":[{"id":3719,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A value of the ["},{"kind":"code","text":"`option`"},{"kind":"text","text":" element](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option)\\n for the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to select"}]},"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reflection","declaration":{"id":3720,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3721,"name":"from","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":70,"character":47}],"type":{"type":"reflection","declaration":{"id":3722,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":70,"character":53}],"signatures":[{"id":3723,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":70,"character":53}],"parameters":[{"id":3724,"name":"pageElement","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":688,"typeArguments":[{"type":"reference","target":4353,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":793,"name":"Interaction","package":"@serenity-js/core"}}]}}}],"groups":[{"title":"Properties","children":[3721]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":70,"character":45}]}}}]},{"id":3725,"name":"values","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":133,"character":11}],"signatures":[{"id":3726,"name":"values","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates an [interaction](/api/core/class/Interaction/)\\nthat instructs the [actor](/api/core/class/Actor/)\\nto select multiple ["},{"kind":"code","text":"`<option>`"},{"kind":"text","text":" elements](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option)\\nidentified by their ["},{"kind":"code","text":"`value`"},{"kind":"text","text":"s](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option#attr-value).\\n\\n#### Example widget\\n\\n"},{"kind":"code","text":"```ts\\n<select multiple data-test=\'countries\'>\\n  <option value=\'UK\'>United Kingdom</option>\\n  <option value=\'PL\'>Poland</option>\\n  <option value=\'US\'>United States</option>\\n</select>\\n```"},{"kind":"text","text":"\\n\\n#### Lean Page Object describing the widget\\n\\n"},{"kind":"code","text":"```ts\\nimport { By, PageElement } from \'@serenity-js/web\'\\n\\nclass Countries {\\n  static dropdown = () =>\\n    PageElement.located(By.css(\'[data-test=\\"countries\\"]\'))\\n      .describedAs(\'countries dropdown\')\\n}\\n```"},{"kind":"text","text":"\\n\\n#### Retrieving the selected value\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Select, Selected } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Nick\')\\n  .attemptsTo(\\n    Select.values(\'UK\').from(Countries.dropdown()),\\n    Ensure.that(Selected.valuesOf(Countries.dropdown()), equals([ \'UK\' ])),\\n  )\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n\\n- ["},{"kind":"code","text":"`Selected.valuesOf`"},{"kind":"text","text":"](/api/web/class/Selected/#valuesOf)\\n- ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":133,"character":11}],"parameters":[{"id":3727,"name":"values","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"comment":{"summary":[{"kind":"text","text":"Values of the ["},{"kind":"code","text":"`option`"},{"kind":"text","text":" elements](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option)\\n for the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to select"}]},"type":{"type":"array","elementType":{"type":"reference","target":688,"typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"array","elementType":{"type":"intrinsic","name":"string"}}]}],"name":"Answerable","package":"@serenity-js/core"}}}],"type":{"type":"reflection","declaration":{"id":3728,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3729,"name":"from","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":133,"character":70}],"type":{"type":"reflection","declaration":{"id":3730,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":133,"character":76}],"signatures":[{"id":3731,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":133,"character":76}],"parameters":[{"id":3732,"name":"pageElement","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":688,"typeArguments":[{"type":"reference","target":4353,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":793,"name":"Interaction","package":"@serenity-js/core"}}]}}}],"groups":[{"title":"Properties","children":[3729]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":133,"character":68}]}}}]},{"id":3733,"name":"option","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":201,"character":11}],"signatures":[{"id":3734,"name":"option","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates an [interaction](/api/core/class/Interaction/)\\nthat instructs the [actor](/api/core/class/Actor/)\\nto select a single ["},{"kind":"code","text":"`<option>`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option)\\nwith a given description.\\n\\n#### Example widget\\n\\n"},{"kind":"code","text":"```html\\n<select data-test=\'countries\'>\\n  <option value=\'UK\'>United Kingdom</option>\\n  <option value=\'PL\'>Poland</option>\\n  <option value=\'US\'>United States</option>\\n</select>\\n```"},{"kind":"text","text":"\\n\\n#### Lean Page Object describing the widget\\n"},{"kind":"code","text":"```ts\\nimport { By, PageElement } from \'@serenity-js/by\'\\n\\nclass Countries {\\n  static dropdown = () =>\\n    PageElement.located(By.css(\'[data-test=\\"countries\\"]\'))\\n      .describedAs(\'countries dropdown\')\\n}\\n```"},{"kind":"text","text":"\\n\\n#### Retrieving the selected value\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Select, Selected } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Nick\')\\n  .whoCan(BrowseTheWeb.using(protractor.browser))\\n  .attemptsTo(\\n    Select.option(\'Poland\').from(Countries.dropdown()),\\n    Ensure.that(\\n      Selected.optionIn(Countries.dropdown()),\\n      equals(\'Poland\')\\n    ),\\n  )\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Selected.optionIn`"},{"kind":"text","text":"](/api/web/class/Selected/#optionIn)\\n- ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":201,"character":11}],"parameters":[{"id":3735,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Text of the ["},{"kind":"code","text":"`option`"},{"kind":"text","text":" element](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option)\\n for the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to select"}]},"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reflection","declaration":{"id":3736,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3737,"name":"from","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":201,"character":48}],"type":{"type":"reflection","declaration":{"id":3738,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":201,"character":54}],"signatures":[{"id":3739,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":201,"character":54}],"parameters":[{"id":3740,"name":"pageElement","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":688,"typeArguments":[{"type":"reference","target":4353,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":793,"name":"Interaction","package":"@serenity-js/core"}}]}}}],"groups":[{"title":"Properties","children":[3737]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":201,"character":46}]}}}]},{"id":3741,"name":"options","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":267,"character":11}],"signatures":[{"id":3742,"name":"options","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates an [interaction](/api/core/class/Interaction/)\\nthat instructs the [actor](/api/core/class/Actor/)\\nto select multiple ["},{"kind":"code","text":"`<option>`"},{"kind":"text","text":" elements](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option)\\nidentified by their descriptions.\\n\\n#### Example widget\\n\\n"},{"kind":"code","text":"```html\\n<select multiple data-test=\'countries\'>\\n  <option value=\'UK\'>United Kingdom</option>\\n  <option value=\'PL\'>Poland</option>\\n  <option value=\'US\'>United States</option>\\n</select>\\n```"},{"kind":"text","text":"\\n\\n#### Lean Page Object describing the widget\\n\\n"},{"kind":"code","text":"```ts\\nimport { By, PageElement } from \'@serenity-js/web\'\\n\\nclass Countries {\\n  static dropdown = () =>\\n    PageElement.located(By.css(\'[data-test=\\"countries\\"]\'))\\n      .describedAs(\'countries dropdown\')\\n}\\n```"},{"kind":"text","text":"\\n\\n##### Retrieving the selected value\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Select, Selected } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Nick\')\\n  .whoCan(BrowseTheWeb.using(protractor.browser))\\n  .attemptsTo(\\n    Select.options(\'Poland\', \'United States\').from(Countries.dropdown()),\\n    Ensure.that(\\n      Selected.optionsIn(Countries.dropdown()),\\n      equals([ \'Poland\', \'United States\' ])\\n    ),\\n  )\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Selected.optionsIn`"},{"kind":"text","text":"](/api/web/class/Selected/#optionsIn)\\n- ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":267,"character":11}],"parameters":[{"id":3743,"name":"values","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"comment":{"summary":[{"kind":"text","text":"Text of the ["},{"kind":"code","text":"`option`"},{"kind":"text","text":" elements  ](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option)\\n for the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to select"}]},"type":{"type":"array","elementType":{"type":"reference","target":688,"typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"array","elementType":{"type":"intrinsic","name":"string"}}]}],"name":"Answerable","package":"@serenity-js/core"}}}],"type":{"type":"reflection","declaration":{"id":3744,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3745,"name":"from","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":267,"character":71}],"type":{"type":"reflection","declaration":{"id":3746,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":267,"character":77}],"signatures":[{"id":3747,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":267,"character":77}],"parameters":[{"id":3748,"name":"pageElement","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":688,"typeArguments":[{"type":"reference","target":4353,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":793,"name":"Interaction","package":"@serenity-js/core"}}]}}}],"groups":[{"title":"Properties","children":[3745]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":267,"character":69}]}}}]},{"id":3749,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":3750,"name":"new Select","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":3716,"name":"Select","package":"@serenity-js/web"}}]}],"groups":[{"title":"Constructors","children":[3749]},{"title":"Methods","children":[3717,3725,3733,3741]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":18,"character":13}],"permalink":"/api/web/class/Select","previousId":3680,"nextId":3751},{"id":3751,"name":"Switch","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs an [actor](/api/core/class/Actor/) who has the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\nto switch the context for future activities to a ["},{"kind":"code","text":"`Switchable`"},{"kind":"text","text":"](/api/web/interface/Switchable/), such as a ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/) or a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/).\\n\\nPlease note that when the ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) implementing ["},{"kind":"code","text":"`Switchable`"},{"kind":"text","text":"](/api/web/interface/Switchable/) represents an ["},{"kind":"code","text":"`iframe`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe),\\nusing ["},{"kind":"code","text":"`Switch`"},{"kind":"text","text":"](/api/web/class/Switch/) will result in switching the top-level browsing context to that ["},{"kind":"code","text":"`iframe`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe).\\n\\nWhen the ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) represents any other [HTMLElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement),\\nusing ["},{"kind":"code","text":"`Switch`"},{"kind":"text","text":"](/api/web/class/Switch/) sets ["},{"kind":"code","text":"`HTMLElement#focus`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/focus)\\non the specified element. Assuming it can be focused.\\n\\n**Note:** The focused element is the element which will receive keyboard [press](/api/web/class/Press/) events by default.\\n\\n## Perform activities in the context of an iframe\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { By, Click, Enter, PageElement, Switch } from \'@serenity-js/web\'\\n\\n// Lean Page Object describing a login form, embedded in an iframe\\nclass LoginForm {\\n  static iframe = () =>\\n    PageElement.located(By.css(\'iframe\'))\\n      .describedAs(\'login form\')\\n\\n  static usernameField = () =>\\n    PageElement.located(By.css(\'[data-testid=\\"username\\"]\'))\\n      .describedAs(\'username field\')\\n\\n  static passwordField = () =>\\n    PageElement.located(By.css(\'[data-testid=\\"password\\"]\'))\\n      .describedAs(\'password field\')\\n\\n  static submitButton = () =>\\n    PageElement.located(By.css(\'button[type=\\"submit\\"]\'))\\n      .describedAs(\'submit button\')\\n }\\n\\n await actorCalled(\'Francesca\')\\n   .attemptsTo(\\n     Switch.to(LoginForm.iframe).and(\\n       Enter.theValue(\'francesca@example.org\').into(LoginForm.usernameField()),\\n       Enter.theValue(\'correct-horse-battery-staple\').into(LoginForm.passwordField()),\\n       Click.on(LoginForm.submitButton()),\\n     )\\n   )\\n```"},{"kind":"text","text":"\\n\\n## Perform activities in the context of another page\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Click, Enter, Switch } from \'@serenity-js/web\'\\nimport { browser } from \'@wdio/globals\'\\n\\nawait actorCalled(\'Francesca\')\\n  .whoCan(BrowseTheWebWithWebdriverIO.using(browser))\\n  .attemptsTo(\\n    Switch.to(Page.whichName(startsWith(\'popup\'))).and(\\n      // perform some activities in the context of the new window\\n\\n      // optionally, close the browser tab\\n      Page.current().close(),\\n    ),\\n\\n    // Note that switching back to the original page happens automatically\\n    // after the last activity from the list finishes\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Perform activities in the context of a focused page element\\n\\n"},{"kind":"code","text":"```ts\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Key, PageElement, Press, Switch, Value } from \'@serenity-js/web\'\\nimport { browser } from \'@wdio/globals\'\\n\\nconst inputField = () =>\\n  PageElement.located(By.css(\'input\'));\\n\\nawait actorCalled(\'Francesca\')\\n  .whoCan(BrowseTheWebWithWebdriverIO.using(browser))\\n  .attemptsTo(\\n    Switch.to(inputField()).and(\\n      Press.the(\'h\', \'e\', \'l\', \'l\', \'o\'),\\n      Press.the(Key.Tab),\\n    ),\\n    Ensure.that(Value.of(inputField()), equals(\'hello\'))\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\n- ["},{"kind":"code","text":"`Switchable`"},{"kind":"text","text":"](/api/web/interface/Switchable/)\\n- ["},{"kind":"code","text":"`SwitchableOrigin`"},{"kind":"text","text":"](/api/web/interface/SwitchableOrigin/)"}]},"children":[{"id":3752,"name":"to","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Switch.ts","line":115,"character":11}],"signatures":[{"id":3753,"name":"to","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\nto switch the context for future activities to a ["},{"kind":"code","text":"`Switchable`"},{"kind":"text","text":"](/api/web/interface/Switchable/),\\nsuch as a ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/) or a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)."}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Switch.ts","line":115,"character":11}],"parameters":[{"id":3754,"name":"switchable","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":688,"typeArguments":[{"type":"reference","target":4798,"name":"Switchable","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":3751,"name":"Switch","package":"@serenity-js/web"}}]},{"id":3776,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"signatures":[{"id":3777,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.instantiationLocation"}},{"id":3778,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":3779,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":3780,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1049,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":600,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":3781,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3782,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3782]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.describedBy"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.describedBy"}},{"id":3788,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":3789,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.toString"}},{"id":3769,"name":"and","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Switch.ts","line":132,"character":4}],"signatures":[{"id":3770,"name":"and","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\nto switch the context for future activities to a ["},{"kind":"code","text":"`Switchable`"},{"kind":"text","text":"](/api/web/interface/Switchable/),\\nsuch as a ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/) or a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/),\\nperform a sequence of "},{"kind":"code","text":"`activities`"},{"kind":"text","text":", and then switch the context back."}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Switch.ts","line":132,"character":4}],"parameters":[{"id":3771,"name":"activities","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"comment":{"summary":[{"kind":"text","text":"A sequence of activities to perform"}]},"type":{"type":"array","elementType":{"type":"reference","target":610,"name":"Activity","package":"@serenity-js/core"}}}],"type":{"type":"reference","target":1587,"name":"Task","package":"@serenity-js/core"}}]},{"id":3772,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Switch.ts","line":139,"character":10}],"signatures":[{"id":3773,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Switch.ts","line":139,"character":10}],"parameters":[{"id":3774,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":600,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":1049,"name":"AnswersQuestions","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Interaction.performAs"}}],"overwrites":{"type":"reference","target":-1,"name":"Interaction.performAs"}}],"groups":[{"title":"Methods","children":[3752,3776,3778,3788,3769,3772]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/Switch.ts","line":106,"character":13}],"extendedTypes":[{"type":"reference","target":793,"name":"Interaction","package":"@serenity-js/core"}],"permalink":"/api/web/class/Switch","previousId":3716,"nextId":3790},{"id":3790,"name":"TakeScreenshot","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs an [actor](/api/core/class/Actor/)\\nwho has the [ability](/api/core/class/Ability/)\\nto ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\nto take a screenshot and emit an artifact,\\nwhich can then be persisted by ["},{"kind":"code","text":"`ArtifactArchiver`"},{"kind":"text","text":"](/api/core/class/ArtifactArchiver/)\\nand reported by [Serenity BDD reporter](/api/serenity-bdd).\\n\\n#### Taking a screenshot\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\';\\nimport { Navigate, TakeScreenshot } from \'@serenity-js/protractor\';\\n\\nawait actorCalled(\'Tania\')\\n  .attemptsTo(\\n    Navigate.to(\'/app\'),\\n    TakeScreenshot.of(\'my app\'),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\n- ["},{"kind":"code","text":"`CollectsArtifacts`"},{"kind":"text","text":"](/api/core/interface/CollectsArtifacts/)\\n- ["},{"kind":"code","text":"`ArtifactArchiver`"},{"kind":"text","text":"](/api/core/class/ArtifactArchiver/)"}]},"children":[{"id":3791,"name":"of","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/TakeScreenshot.ts","line":44,"character":11}],"signatures":[{"id":3792,"name":"of","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/)."}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/TakeScreenshot.ts","line":44,"character":11}],"parameters":[{"id":3793,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The name to give the emitted artifact"}]},"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":793,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":3812,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"signatures":[{"id":3813,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.instantiationLocation"}},{"id":3814,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":3815,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":3816,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1049,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":600,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":3817,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3818,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3818]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.describedBy"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.describedBy"}},{"id":3824,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":3825,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.toString"}},{"id":3808,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/TakeScreenshot.ts","line":55,"character":10}],"signatures":[{"id":3809,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/TakeScreenshot.ts","line":55,"character":10}],"parameters":[{"id":3810,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":600,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":1049,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":692,"name":"CollectsArtifacts","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Interaction.performAs"}}],"overwrites":{"type":"reference","target":-1,"name":"Interaction.performAs"}}],"groups":[{"title":"Methods","children":[3791,3812,3814,3824,3808]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/TakeScreenshot.ts","line":36,"character":13}],"extendedTypes":[{"type":"reference","target":793,"name":"Interaction","package":"@serenity-js/core"}],"permalink":"/api/web/class/TakeScreenshot","previousId":3751,"nextId":3166},{"id":3826,"name":"ArgumentDehydrator","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":3827,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/ArgumentDehydrator.ts","line":16,"character":4}],"signatures":[{"id":3828,"name":"new ArgumentDehydrator","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/ArgumentDehydrator.ts","line":16,"character":4}],"typeParameter":[{"id":3829,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":3830,"name":"U","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":3831,"name":"shouldReference","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":3832,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/ArgumentDehydrator.ts","line":17,"character":42}],"signatures":[{"id":3833,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/ArgumentDehydrator.ts","line":17,"character":42}],"parameters":[{"id":3834,"name":"item","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"predicate","name":"item","asserts":false,"targetType":{"type":"reference","target":3829,"name":"T","package":"@serenity-js/web","qualifiedName":"ArgumentDehydrator.T","refersToTypeParameter":true}}}]}}},{"id":3835,"name":"transformation","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":3836,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/ArgumentDehydrator.ts","line":18,"character":41}],"signatures":[{"id":3837,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/ArgumentDehydrator.ts","line":18,"character":41}],"parameters":[{"id":3838,"name":"item","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":3829,"name":"T","package":"@serenity-js/web","qualifiedName":"ArgumentDehydrator.T","refersToTypeParameter":true}}],"type":{"type":"union","types":[{"type":"reference","target":3830,"name":"U","package":"@serenity-js/web","qualifiedName":"ArgumentDehydrator.U","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":3830,"name":"U","package":"@serenity-js/web","qualifiedName":"ArgumentDehydrator.U","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reference","target":3826,"typeArguments":[{"type":"reference","target":3829,"name":"T","package":"@serenity-js/web","qualifiedName":"ArgumentDehydrator.T","refersToTypeParameter":true},{"type":"reference","target":3830,"name":"U","package":"@serenity-js/web","qualifiedName":"ArgumentDehydrator.U","refersToTypeParameter":true}],"name":"ArgumentDehydrator","package":"@serenity-js/web"}}]},{"id":3847,"name":"dehydrate","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/ArgumentDehydrator.ts","line":22,"character":17}],"signatures":[{"id":3848,"name":"dehydrate","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/ArgumentDehydrator.ts","line":22,"character":17}],"parameters":[{"id":3849,"name":"inputArgs","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"tuple","elements":[{"type":"reflection","declaration":{"id":3850,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3851,"name":"argsCount","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/ArgumentDehydrator.ts","line":22,"character":63}],"type":{"type":"intrinsic","name":"number"}},{"id":3852,"name":"refsCount","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/ArgumentDehydrator.ts","line":22,"character":82}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[3851,3852]}],"sources":[{"fileName":"packages/web/src/screenplay/models/ArgumentDehydrator.ts","line":22,"character":61}]}},{"type":"rest","elementType":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}]}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]}],"groups":[{"title":"Constructors","children":[3827]},{"title":"Methods","children":[3847]}],"sources":[{"fileName":"packages/web/src/screenplay/models/ArgumentDehydrator.ts","line":15,"character":13}],"typeParameters":[{"id":3861,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":3862,"name":"U","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"permalink":"/api/web/class/ArgumentDehydrator","previousId":3249,"nextId":3863},{"id":3863,"name":"BrowserCapabilities","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Basic meta-data about the browser used in the test\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`BrowseTheWeb.browserCapabilities`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/#browserCapabilities)"}]},"children":[{"id":3864,"name":"platformName","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Name of the operating system platform the test is executed on, like "},{"kind":"code","text":"`darwin`"},{"kind":"text","text":", "},{"kind":"code","text":"`linux`"},{"kind":"text","text":" or "},{"kind":"code","text":"`windows`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowserCapabilities.ts","line":15,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":3865,"name":"browserName","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Name of the Web browser the test is executed in, like "},{"kind":"code","text":"`chrome`"},{"kind":"text","text":", "},{"kind":"code","text":"`firefox`"},{"kind":"text","text":" or "},{"kind":"code","text":"`safari`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowserCapabilities.ts","line":20,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":3866,"name":"browserVersion","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Version number of the browser the test is executed in."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowserCapabilities.ts","line":25,"character":4}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3864,3865,3866]}],"sources":[{"fileName":"packages/web/src/screenplay/models/BrowserCapabilities.ts","line":10,"character":17}],"permalink":"/api/web/interface/BrowserCapabilities","previousId":3826,"nextId":3867},{"id":3867,"name":"BrowsingSession","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"Represents the pages open in the current browsing context.\\n\\nYou\'ll need to use this class directly only if you\'re planning to integrate Serenity/JS\\nwith a new Web integration tool."}]},"children":[{"id":3868,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":3869,"name":"new BrowsingSession","variant":"signature","kind":16384,"flags":{"isExternal":true},"typeParameter":[{"id":3870,"name":"Page_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":4237,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Page","package":"@serenity-js/web"}}],"type":{"type":"reference","target":3867,"typeArguments":[{"type":"reference","target":3870,"name":"Page_Type","package":"@serenity-js/web","qualifiedName":"BrowsingSession.Page_Type","refersToTypeParameter":true}],"name":"BrowsingSession","package":"@serenity-js/web"}}]},{"id":3873,"name":"closePagesOtherThan","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowsingSession.ts","line":18,"character":10}],"signatures":[{"id":3874,"name":"closePagesOtherThan","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowsingSession.ts","line":18,"character":10}],"parameters":[{"id":3875,"name":"pageOfInterest","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":3870,"name":"Page_Type","package":"@serenity-js/web","qualifiedName":"BrowsingSession.Page_Type","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":3878,"name":"browserCapabilities","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowsingSession.ts","line":37,"character":20}],"signatures":[{"id":3879,"name":"browserCapabilities","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns [basic meta-data](/api/web/interface/BrowserCapabilities/) about the browser associated with this browsing session."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowsingSession.ts","line":37,"character":20}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":3863,"name":"BrowserCapabilities","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":3880,"name":"currentPage","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowsingSession.ts","line":42,"character":10}],"signatures":[{"id":3881,"name":"currentPage","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/) representing the currently active top-level browsing context."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowsingSession.ts","line":42,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":3870,"name":"Page_Type","package":"@serenity-js/web","qualifiedName":"BrowsingSession.Page_Type","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":3882,"name":"register","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowsingSession.ts","line":55,"character":4}],"signatures":[{"id":3883,"name":"register","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Registers specified [pages](/api/web/class/Page/) to be managed by this ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/)."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowsingSession.ts","line":55,"character":4}],"parameters":[{"id":3884,"name":"pages","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":3870,"name":"Page_Type","package":"@serenity-js/web","qualifiedName":"BrowsingSession.Page_Type","refersToTypeParameter":true}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":3885,"name":"deregister","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowsingSession.ts","line":67,"character":4}],"signatures":[{"id":3886,"name":"deregister","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Informs this ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/) that it should no longer manage [pages](/api/web/class/Page/)\\nidentified by the given "},{"kind":"code","text":"`pageIds`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowsingSession.ts","line":67,"character":4}],"parameters":[{"id":3887,"name":"pageIds","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":3888,"name":"allPages","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowsingSession.ts","line":77,"character":10}],"signatures":[{"id":3889,"name":"allPages","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a [pages](/api/web/class/Page/) representing all the available\\ntop-level browsing context, e.g. all the open browser tabs."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowsingSession.ts","line":77,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":3870,"name":"Page_Type","package":"@serenity-js/web","qualifiedName":"BrowsingSession.Page_Type","refersToTypeParameter":true}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":3890,"name":"registeredPageIds","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowsingSession.ts","line":84,"character":4}],"signatures":[{"id":3891,"name":"registeredPageIds","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the ids of any [pages](/api/web/class/Page/) this ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/) is aware of."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowsingSession.ts","line":84,"character":4}],"type":{"type":"array","elementType":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}}]},{"id":3892,"name":"changeCurrentPageTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowsingSession.ts","line":106,"character":10}],"signatures":[{"id":3893,"name":"changeCurrentPageTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Informs the ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/) that the \\"current page\\" has changed to "},{"kind":"code","text":"`page`"},{"kind":"text","text":".\\n\\nPlease note that different Web integration tools have a different definition of what a \\"current page\\" is.\\nFor example, Selenium or WebdriverIO use a single \\"focused\\" window that a developer\\nneeds to explicitly \\"switch to\\" in their tests in order to interact with it.\\nThis is similar to how a regular user would interact with Web pages;\\nswitching from one tab to another, but not interacting with more than one\\nwindow/tab simultaneously.\\n\\nPlaywright and Puppeteer, on the other hand, don\'t have a concept of the \\"current\\" page at all, since they\\nallow the developer to interact with multiple open tabs/windows at the same time.\\n\\nWeb integration-specific implementations of this class should override this method to define\\nhow the concept of the \\"current page\\" should be interpreted by Serenity/JS."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowsingSession.ts","line":106,"character":10}],"parameters":[{"id":3894,"name":"page","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":3870,"name":"Page_Type","package":"@serenity-js/web","qualifiedName":"BrowsingSession.Page_Type","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":3895,"name":"closeAllPages","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowsingSession.ts","line":113,"character":10}],"signatures":[{"id":3896,"name":"closeAllPages","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Closes all the pages available in this browsing context"}]},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowsingSession.ts","line":113,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]}],"groups":[{"title":"Constructors","children":[3868]},{"title":"Methods","children":[3873,3878,3880,3882,3885,3888,3890,3892,3895]}],"sources":[{"fileName":"packages/web/src/screenplay/models/BrowsingSession.ts","line":14,"character":22}],"typeParameters":[{"id":3897,"name":"Page_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":4237,"name":"Page","package":"@serenity-js/web"}}],"permalink":"/api/web/class/BrowsingSession","previousId":3863,"nextId":3898},{"id":3898,"name":"Cookie","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"A Screenplay Pattern-style model responsible for managing cookies available to the current ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/).\\n\\n## Checking if a cookie exists\\n\\n"},{"kind":"code","text":"```typescript\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Navigate, Cookie } from \'@serenity-js/web\'\\nimport { Ensure, isPresent } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Sid\')\\n  .attemptsTo(\\n    Navigate.to(\'https://example.org\'),\\n\\n    Ensure.that(\\n      Cookie.called(\'example-cookie-name\'),\\n      isPresent()\\n    ),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Setting a cookie\\n\\n"},{"kind":"code","text":"```typescript\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Navigate, Cookie } from \'@serenity-js/web\'\\nimport { Ensure, isPresent, not } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Sid\')\\n  .attemptsTo(\\n    Navigate.to(\'https://example.org\'),\\n\\n    Ensure.that(Cookie.called(\'example-cookie-name\'), not(isPresent())),\\n\\n    Cookie.set({\\n      name:  \'favourite\',\\n      value: \'triple chocolate\',\\n    }),\\n\\n    Ensure.that(Cookie.called(\'example-cookie-name\'), isPresent()),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Reading a cookie\\n\\n"},{"kind":"code","text":"```typescript\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Navigate, Cookie } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Sid\')\\n  .attemptsTo(\\n    Navigate.to(\'https://example.org\'),\\n\\n    Ensure.that(\\n      Cookie.called(\'some-cookie-name\').value(),\\n      equals(\'triple chocolate\')\\n    ),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`CookieData`"},{"kind":"text","text":"](/api/web/interface/CookieData/)\\n- ["},{"kind":"code","text":"`Page.cookie`"},{"kind":"text","text":"](/api/web/class/Page/#cookie)"}]},"children":[{"id":3899,"name":"called","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":84,"character":11}],"signatures":[{"id":3900,"name":"called","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates a ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter) that resolves to ["},{"kind":"code","text":"`Cookie`"},{"kind":"text","text":"](/api/web/class/Cookie/) identified by "},{"kind":"code","text":"`name`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":84,"character":11}],"parameters":[{"id":3901,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1041,"typeArguments":[{"type":"reference","target":3898,"name":"Cookie","package":"@serenity-js/web"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":3902,"name":"set","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":102,"character":11}],"signatures":[{"id":3903,"name":"set","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Sets a cookie for the current ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/). Note that ["},{"kind":"code","text":"`CookieData`"},{"kind":"text","text":"](/api/web/interface/CookieData/) can be either a plain-old JavaScript object, or an ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable) ["},{"kind":"code","text":"`WithAnswerableProperties`"},{"kind":"text","text":"](/api/core/#WithAnswerableProperties).\\n\\n:::info\\nMake sure that the actor performing this interaction is on the page that should receive the cookie.\\nBecause of browser security restrictions, an actor can\'t set a cookie for an arbitrary page without being on that page.\\n:::"}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":102,"character":11}],"parameters":[{"id":3904,"name":"cookieData","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":688,"typeArguments":[{"type":"reflection","declaration":{"id":3905,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3906,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The name of the cookie."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/CookieData.ts","line":18,"character":4}],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":3907,"name":"value","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The value of the cookie."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/CookieData.ts","line":23,"character":4}],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":3908,"name":"domain","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The domain this cookie is visible to.\\n\\nDefaults to the current browsing context\'s document\'s URL when setting a cookie."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/CookieData.ts","line":30,"character":4}],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":3909,"name":"path","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The cookie path. Defaults to \\"/\\" when adding a cookie."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/CookieData.ts","line":35,"character":4}],"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":3910,"name":"expiry","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The [timestamp](/api/core/class/Timestamp/) describing the point in time when this cookie expires."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/CookieData.ts","line":40,"character":4}],"type":{"type":"reflection","declaration":{"id":3911,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3912,"name":"value","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/lib/screenplay/time/models/Timestamp.ts","line":16,"character":13}],"type":{"type":"reflection","declaration":{"id":3913,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3957,"name":"[toPrimitive]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3914,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3915,"name":"toDateString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3916,"name":"toTimeString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3917,"name":"toLocaleString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3918,"name":"toLocaleDateString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3919,"name":"toLocaleTimeString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3920,"name":"valueOf","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3921,"name":"getTime","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3922,"name":"getFullYear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3923,"name":"getUTCFullYear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3924,"name":"getMonth","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3925,"name":"getUTCMonth","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3926,"name":"getDate","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3927,"name":"getUTCDate","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3928,"name":"getDay","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3929,"name":"getUTCDay","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3930,"name":"getHours","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3931,"name":"getUTCHours","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3932,"name":"getMinutes","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3933,"name":"getUTCMinutes","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3934,"name":"getSeconds","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3935,"name":"getUTCSeconds","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3936,"name":"getMilliseconds","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3937,"name":"getUTCMilliseconds","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3938,"name":"getTimezoneOffset","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3939,"name":"setTime","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3940,"name":"setMilliseconds","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3941,"name":"setUTCMilliseconds","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3942,"name":"setSeconds","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3943,"name":"setUTCSeconds","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3944,"name":"setMinutes","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3945,"name":"setUTCMinutes","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3946,"name":"setHours","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3947,"name":"setUTCHours","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3948,"name":"setDate","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3949,"name":"setUTCDate","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3950,"name":"setMonth","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3951,"name":"setUTCMonth","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3952,"name":"setFullYear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3953,"name":"setUTCFullYear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3954,"name":"toUTCString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3955,"name":"toISOString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3956,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[3957,3914,3915,3916,3917,3918,3919,3920,3921,3922,3923,3924,3925,3926,3927,3928,3929,3930,3931,3932,3933,3934,3935,3936,3937,3938,3939,3940,3941,3942,3943,3944,3945,3946,3947,3948,3949,3950,3951,3952,3953,3954,3955,3956]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":3958,"name":"diff","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/time/models/Timestamp.ts","line":22,"character":4}]},{"id":3959,"name":"plus","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/time/models/Timestamp.ts","line":23,"character":4}]},{"id":3960,"name":"less","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/time/models/Timestamp.ts","line":24,"character":4}]},{"id":3961,"name":"isBefore","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/time/models/Timestamp.ts","line":25,"character":4}]},{"id":3962,"name":"isBeforeOrEqual","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/time/models/Timestamp.ts","line":26,"character":4}]},{"id":3963,"name":"isAfter","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/time/models/Timestamp.ts","line":27,"character":4}]},{"id":3964,"name":"isAfterOrEqual","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/time/models/Timestamp.ts","line":28,"character":4}]},{"id":3965,"name":"toMilliseconds","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/time/models/Timestamp.ts","line":29,"character":4}]},{"id":3966,"name":"toSeconds","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/time/models/Timestamp.ts","line":30,"character":4}]},{"id":3967,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/time/models/Timestamp.ts","line":31,"character":4}]},{"id":3968,"name":"toISOString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/time/models/Timestamp.ts","line":32,"character":4}]},{"id":3969,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/time/models/Timestamp.ts","line":33,"character":4}]},{"id":3970,"name":"[custom]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/time/models/Timestamp.ts","line":34,"character":4}]},{"id":3971,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Properties","children":[3912]},{"title":"Methods","children":[3958,3959,3960,3961,3962,3963,3964,3965,3966,3967,3968,3969,3970,3971]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":3972,"name":"httpOnly","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether the cookie is an HTTP-only cookie.\\nDefaults to "},{"kind":"code","text":"`false`"},{"kind":"text","text":" when adding a new cookie."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/CookieData.ts","line":46,"character":4}],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":3973,"name":"secure","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether the cookie is a secure cookie.\\nDefaults to "},{"kind":"code","text":"`false`"},{"kind":"text","text":" when adding a new cookie."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/CookieData.ts","line":52,"character":4}],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":3974,"name":"sameSite","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether the cookie applies to a "},{"kind":"code","text":"`SameSite`"},{"kind":"text","text":" policy.\\nDefaults to "},{"kind":"code","text":"`None`"},{"kind":"text","text":" if omitted when adding a cookie."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/CookieData.ts","line":58,"character":4}],"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":"Lax"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":"Strict"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":688,"typeArguments":[{"type":"literal","value":"None"}],"name":"Answerable","package":"@serenity-js/core"}]}}],"groups":[{"title":"Properties","children":[3906,3907,3908,3909,3910,3972,3973,3974]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":793,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":3975,"name":"deleteAll","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":127,"character":11}],"signatures":[{"id":3976,"name":"deleteAll","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates an [interaction](/api/core/class/Interaction/) to delete all cookies available to the current ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/).."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":127,"character":11}],"type":{"type":"reference","target":793,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":3982,"name":"name","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":143,"character":4}],"signatures":[{"id":3983,"name":"name","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the name of this cookie."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":143,"character":4}],"type":{"type":"intrinsic","name":"string"}}]},{"id":3984,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":153,"character":10}],"signatures":[{"id":3985,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Checks if a given cookie is set.\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Optional`"},{"kind":"text","text":"](/api/core/interface/Optional/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":153,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"implementationOf":{"type":"reference","target":-1,"name":"Optional.isPresent"}}],"implementationOf":{"type":"reference","target":-1,"name":"Optional.isPresent"}},{"id":3986,"name":"value","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":170,"character":10}],"signatures":[{"id":3987,"name":"value","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the value of a given cookie."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":170,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":3988,"name":"path","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":178,"character":10}],"signatures":[{"id":3989,"name":"path","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the path of a given cookie, if any was set."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":178,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":3990,"name":"domain","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":186,"character":10}],"signatures":[{"id":3991,"name":"domain","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the domain of a given cookie, if any was set."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":186,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":3992,"name":"isHttpOnly","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":197,"character":10}],"signatures":[{"id":3993,"name":"isHttpOnly","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Checks if a given cookie is HTTP-only.\\n\\n#### Learn more\\n- [Mozilla Developer Network: Restricting access to cookies](https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies#restrict_access_to_cookies)"}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":197,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":3994,"name":"isSecure","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":208,"character":10}],"signatures":[{"id":3995,"name":"isSecure","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Checks if a given cookie is secure.\\n\\n#### Learn more\\n- [Mozilla Developer Network: Restricting access to cookies](https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies#restrict_access_to_cookies)"}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":208,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":3996,"name":"expiry","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":219,"character":10}],"signatures":[{"id":3997,"name":"expiry","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the expiry date of a given cookie\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Timestamp`"},{"kind":"text","text":"](/api/core/class/Timestamp/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":219,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":3998,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":227,"character":13}],"signatures":[{"id":3999,"name":"delete","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Deletes a given cookie."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":227,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]}],"groups":[{"title":"Methods","children":[3899,3902,3975,3982,3984,3986,3988,3990,3992,3994,3996,3998]}],"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":77,"character":22}],"implementedTypes":[{"type":"reference","target":936,"name":"Optional","package":"@serenity-js/core"}],"permalink":"/api/web/class/Cookie","previousId":3867,"nextId":4004},{"id":4004,"name":"CookieData","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A data structure describing a ["},{"kind":"code","text":"`Cookie`"},{"kind":"text","text":"](/api/web/class/Cookie/) to be set, or one that\'s been read.\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`Cookie`"},{"kind":"text","text":"](/api/web/class/Cookie/)\\n- ["},{"kind":"code","text":"`Page.cookie`"},{"kind":"text","text":"](/api/web/class/Page/#cookie)"}]},"children":[{"id":4005,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The name of the cookie."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/CookieData.ts","line":18,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":4006,"name":"value","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The value of the cookie."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/CookieData.ts","line":23,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":4007,"name":"domain","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The domain this cookie is visible to.\\n\\nDefaults to the current browsing context\'s document\'s URL when setting a cookie."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/CookieData.ts","line":30,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":4008,"name":"path","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The cookie path. Defaults to \\"/\\" when adding a cookie."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/CookieData.ts","line":35,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":4009,"name":"expiry","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The [timestamp](/api/core/class/Timestamp/) describing the point in time when this cookie expires."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/CookieData.ts","line":40,"character":4}],"type":{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"}},{"id":4010,"name":"httpOnly","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether the cookie is an HTTP-only cookie.\\nDefaults to "},{"kind":"code","text":"`false`"},{"kind":"text","text":" when adding a new cookie."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/CookieData.ts","line":46,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":4011,"name":"secure","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether the cookie is a secure cookie.\\nDefaults to "},{"kind":"code","text":"`false`"},{"kind":"text","text":" when adding a new cookie."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/CookieData.ts","line":52,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":4012,"name":"sameSite","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether the cookie applies to a "},{"kind":"code","text":"`SameSite`"},{"kind":"text","text":" policy.\\nDefaults to "},{"kind":"code","text":"`None`"},{"kind":"text","text":" if omitted when adding a cookie."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/CookieData.ts","line":58,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"Lax"},{"type":"literal","value":"Strict"},{"type":"literal","value":"None"}]}}],"groups":[{"title":"Properties","children":[4005,4006,4007,4008,4009,4010,4011,4012]}],"sources":[{"fileName":"packages/web/src/screenplay/models/CookieData.ts","line":13,"character":17}],"permalink":"/api/web/interface/CookieData","previousId":3898,"nextId":4121},{"id":4121,"name":"Key","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Represents keyboard keys that aren\'t text, and that can be used with the [interaction](/api/core/class/Interaction/) to ["},{"kind":"code","text":"`Press`"},{"kind":"text","text":"](/api/web/class/Press/).\\n\\n**Note:** Modifier keys like ["},{"kind":"code","text":"`Key.Shift`"},{"kind":"text","text":"](/api/web/class/Key/#Shift), ["},{"kind":"code","text":"`Key.Alt`"},{"kind":"text","text":"](/api/web/class/Key/#Alt) and ["},{"kind":"code","text":"`Key.Meta`"},{"kind":"text","text":"](/api/web/class/Key/#Meta) (a.k.a. \\"Command\\" on Mac) will stay pressed,\\nso there\'s no need to depress them.\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`Press`"},{"kind":"text","text":"](/api/web/class/Press/)\\n- ["},{"kind":"code","text":"`Page.sendKeys`"},{"kind":"text","text":"](/api/web/class/Page/#sendKeys)\\n- [W3C WebDriver Spec: Keyboard Actions](https://w3c.github.io/webdriver/webdriver-spec.html#keyboard-actions)\\n- [Selenium WebDriver: Inputs](https://github.com/SeleniumHQ/selenium/blob/trunk/javascript/node/selenium-webdriver/lib/input.js#L46)\\n- [WebdriverIO: Constants](https://github.com/webdriverio/webdriverio/blob/main/packages/wdio-utils/src/constants.ts#L5)"}]},"children":[{"id":4122,"name":"Alt","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":18,"character":18}],"type":{"type":"reference","target":4121,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4123,"name":"ArrowDown","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":19,"character":18}],"type":{"type":"reference","target":4121,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4124,"name":"ArrowLeft","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":20,"character":18}],"type":{"type":"reference","target":4121,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4125,"name":"ArrowRight","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":21,"character":18}],"type":{"type":"reference","target":4121,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4126,"name":"ArrowUp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":22,"character":18}],"type":{"type":"reference","target":4121,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4127,"name":"Backspace","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":23,"character":18}],"type":{"type":"reference","target":4121,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4128,"name":"Cancel","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":24,"character":18}],"type":{"type":"reference","target":4121,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4129,"name":"Clear","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":25,"character":18}],"type":{"type":"reference","target":4121,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4130,"name":"Control","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":26,"character":18}],"type":{"type":"reference","target":4121,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4131,"name":"Delete","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":27,"character":18}],"type":{"type":"reference","target":4121,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4132,"name":"End","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":28,"character":18}],"type":{"type":"reference","target":4121,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4133,"name":"Enter","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":29,"character":18}],"type":{"type":"reference","target":4121,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4134,"name":"Escape","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":30,"character":18}],"type":{"type":"reference","target":4121,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4135,"name":"F1","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":31,"character":18}],"type":{"type":"reference","target":4121,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4136,"name":"F2","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":32,"character":18}],"type":{"type":"reference","target":4121,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4137,"name":"F3","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":33,"character":18}],"type":{"type":"reference","target":4121,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4138,"name":"F4","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":34,"character":18}],"type":{"type":"reference","target":4121,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4139,"name":"F5","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":35,"character":18}],"type":{"type":"reference","target":4121,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4140,"name":"F6","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":36,"character":18}],"type":{"type":"reference","target":4121,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4141,"name":"F7","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":37,"character":18}],"type":{"type":"reference","target":4121,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4142,"name":"F8","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":38,"character":18}],"type":{"type":"reference","target":4121,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4143,"name":"F9","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":39,"character":18}],"type":{"type":"reference","target":4121,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4144,"name":"F10","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":40,"character":18}],"type":{"type":"reference","target":4121,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4145,"name":"F11","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":41,"character":18}],"type":{"type":"reference","target":4121,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4146,"name":"F12","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":42,"character":18}],"type":{"type":"reference","target":4121,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4147,"name":"Help","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":43,"character":18}],"type":{"type":"reference","target":4121,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4148,"name":"Home","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":44,"character":18}],"type":{"type":"reference","target":4121,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4149,"name":"Insert","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":45,"character":18}],"type":{"type":"reference","target":4121,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4150,"name":"Meta","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":46,"character":18}],"type":{"type":"reference","target":4121,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4151,"name":"Numpad0","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":47,"character":18}],"type":{"type":"reference","target":4121,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4152,"name":"Numpad1","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":48,"character":18}],"type":{"type":"reference","target":4121,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4153,"name":"Numpad2","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":49,"character":18}],"type":{"type":"reference","target":4121,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4154,"name":"Numpad3","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":50,"character":18}],"type":{"type":"reference","target":4121,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4155,"name":"Numpad4","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":51,"character":18}],"type":{"type":"reference","target":4121,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4156,"name":"Numpad5","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":52,"character":18}],"type":{"type":"reference","target":4121,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4157,"name":"Numpad6","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":53,"character":18}],"type":{"type":"reference","target":4121,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4158,"name":"Numpad7","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":54,"character":18}],"type":{"type":"reference","target":4121,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4159,"name":"Numpad8","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":55,"character":18}],"type":{"type":"reference","target":4121,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4160,"name":"Numpad9","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":56,"character":18}],"type":{"type":"reference","target":4121,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4161,"name":"NumpadAdd","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":57,"character":18}],"type":{"type":"reference","target":4121,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4162,"name":"NumpadDecimal","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":58,"character":18}],"type":{"type":"reference","target":4121,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4163,"name":"NumpadDivide","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":59,"character":18}],"type":{"type":"reference","target":4121,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4164,"name":"NumpadEqual","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":60,"character":18}],"type":{"type":"reference","target":4121,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4165,"name":"NumpadMultiply","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":61,"character":18}],"type":{"type":"reference","target":4121,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4166,"name":"NumpadSubtract","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":62,"character":18}],"type":{"type":"reference","target":4121,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4167,"name":"PageDown","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":63,"character":18}],"type":{"type":"reference","target":4121,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4168,"name":"PageUp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":64,"character":18}],"type":{"type":"reference","target":4121,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4169,"name":"Pause","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":65,"character":18}],"type":{"type":"reference","target":4121,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4170,"name":"Semicolon","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":66,"character":18}],"type":{"type":"reference","target":4121,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4171,"name":"Shift","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":67,"character":18}],"type":{"type":"reference","target":4121,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4172,"name":"Space","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":68,"character":18}],"type":{"type":"reference","target":4121,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4173,"name":"Tab","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":69,"character":18}],"type":{"type":"reference","target":4121,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4174,"name":"isKey","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":71,"character":18}],"signatures":[{"id":4175,"name":"isKey","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":71,"character":18}],"parameters":[{"id":4176,"name":"maybeKey","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"maybeKey","asserts":false,"targetType":{"type":"reference","target":4121,"name":"Key","package":"@serenity-js/web"}}}]},{"id":4177,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":76,"character":4}],"signatures":[{"id":4178,"name":"new Key","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":76,"character":4}],"parameters":[{"id":4179,"name":"devtoolsName","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":4180,"name":"utf16codePoint","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":4181,"name":"isModifier","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"}],"type":{"type":"reference","target":4121,"name":"Key","package":"@serenity-js/web"}}]},{"id":4182,"name":"devtoolsName","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":77,"character":24}],"type":{"type":"intrinsic","name":"string"}},{"id":4183,"name":"utf16codePoint","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":78,"character":24}],"type":{"type":"intrinsic","name":"string"}},{"id":4184,"name":"isModifier","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":79,"character":24}],"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"},{"id":4185,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":83,"character":4}],"signatures":[{"id":4186,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":83,"character":4}],"type":{"type":"intrinsic","name":"string"}}]}],"groups":[{"title":"Constructors","children":[4177]},{"title":"Properties","children":[4122,4123,4124,4125,4126,4127,4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,4138,4139,4140,4141,4142,4143,4144,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,4158,4159,4160,4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,4171,4172,4173,4182,4183,4184]},{"title":"Methods","children":[4174,4185]}],"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":17,"character":13}],"permalink":"/api/web/class/Key","previousId":4004,"nextId":4187},{"id":4187,"name":"Locator","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"["},{"kind":"code","text":"`Locator`"},{"kind":"text","text":"](/api/web/class/Locator/) uses a ["},{"kind":"code","text":"`Selector`"},{"kind":"text","text":"](/api/web/class/Selector/) to locate a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) or ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElements/)\\nwithin the ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/).\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`RootLocator`"},{"kind":"text","text":"](/api/web/class/RootLocator/)\\n- ["},{"kind":"code","text":"`Page.locate`"},{"kind":"text","text":"](/api/web/class/Page/#locate)\\n- ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)\\n- ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElements/)"}]},"children":[{"id":4195,"name":"selector","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":26,"character":24}],"type":{"type":"reference","target":4788,"name":"Selector","package":"@serenity-js/web"}},{"id":4196,"name":"nativeElement","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":31,"character":20}],"signatures":[{"id":4197,"name":"nativeElement","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":31,"character":20}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4235,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Locator.Native_Element_Type","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":4658,"name":"RootLocator.nativeElement"}}],"overwrites":{"type":"reference","target":4657,"name":"RootLocator.nativeElement"}},{"id":4198,"name":"allNativeElements","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":32,"character":20}],"signatures":[{"id":4199,"name":"allNativeElements","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":32,"character":20}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4235,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Locator.Native_Element_Type","refersToTypeParameter":true}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4200,"name":"switchToFrame","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":34,"character":10}],"signatures":[{"id":4201,"name":"switchToFrame","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":34,"character":10}],"parameters":[{"id":4202,"name":"element","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4235,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Locator.Native_Element_Type","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":4649,"name":"RootLocator.switchToFrame"}}],"overwrites":{"type":"reference","target":4648,"name":"RootLocator.switchToFrame"}},{"id":4203,"name":"switchToParentFrame","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":38,"character":10}],"signatures":[{"id":4204,"name":"switchToParentFrame","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":38,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":4652,"name":"RootLocator.switchToParentFrame"}}],"overwrites":{"type":"reference","target":4651,"name":"RootLocator.switchToParentFrame"}},{"id":4205,"name":"switchToMainFrame","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":42,"character":10}],"signatures":[{"id":4206,"name":"switchToMainFrame","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":42,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":4654,"name":"RootLocator.switchToMainFrame"}}],"overwrites":{"type":"reference","target":4653,"name":"RootLocator.switchToMainFrame"}},{"id":4209,"name":"of","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":48,"character":13}],"signatures":[{"id":4210,"name":"of","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":48,"character":13}],"parameters":[{"id":4211,"name":"parent","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4644,"typeArguments":[{"type":"reference","target":4235,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Locator.Native_Element_Type","refersToTypeParameter":true}],"name":"RootLocator","package":"@serenity-js/web"}}],"type":{"type":"reference","target":4187,"typeArguments":[{"type":"reference","target":4235,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Locator.Native_Element_Type","refersToTypeParameter":true},{"type":"intrinsic","name":"any"}],"name":"Locator","package":"@serenity-js/web"}}]},{"id":4212,"name":"closestTo","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":49,"character":13}],"signatures":[{"id":4213,"name":"closestTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":49,"character":13}],"parameters":[{"id":4214,"name":"child","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4187,"typeArguments":[{"type":"reference","target":4235,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Locator.Native_Element_Type","refersToTypeParameter":true},{"type":"intrinsic","name":"any"}],"name":"Locator","package":"@serenity-js/web"}}],"type":{"type":"reference","target":4187,"typeArguments":[{"type":"reference","target":4235,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Locator.Native_Element_Type","refersToTypeParameter":true},{"type":"intrinsic","name":"any"}],"name":"Locator","package":"@serenity-js/web"}}]},{"id":4215,"name":"locate","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":50,"character":13}],"signatures":[{"id":4216,"name":"locate","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":50,"character":13}],"parameters":[{"id":4217,"name":"child","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4187,"typeArguments":[{"type":"reference","target":4235,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Locator.Native_Element_Type","refersToTypeParameter":true},{"type":"intrinsic","name":"any"}],"name":"Locator","package":"@serenity-js/web"}}],"type":{"type":"reference","target":4187,"typeArguments":[{"type":"reference","target":4235,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Locator.Native_Element_Type","refersToTypeParameter":true},{"type":"intrinsic","name":"any"}],"name":"Locator","package":"@serenity-js/web"}}]},{"id":4221,"name":"element","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":77,"character":13}],"signatures":[{"id":4222,"name":"element","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":77,"character":13}],"type":{"type":"reference","target":4353,"typeArguments":[{"type":"reference","target":4235,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Locator.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}}]},{"id":4223,"name":"allElements","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":79,"character":13}],"signatures":[{"id":4224,"name":"allElements","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":79,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4353,"typeArguments":[{"type":"reference","target":4235,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Locator.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4225,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":81,"character":4}],"signatures":[{"id":4226,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":81,"character":4}],"type":{"type":"intrinsic","name":"string"},"overwrites":{"type":"reference","target":4660,"name":"RootLocator.toString"}}],"overwrites":{"type":"reference","target":4659,"name":"RootLocator.toString"}},{"id":4227,"name":"[custom]","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Custom [Node.js inspection method](https://nodejs.org/api/util.html#utilinspectcustom)."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":88,"character":4}],"type":{"type":"reflection","declaration":{"id":4228,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/io/inspectedObject.ts","line":2,"character":84}],"signatures":[{"id":4229,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/io/inspectedObject.ts","line":2,"character":84}],"parameters":[{"id":4230,"name":"depth","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}},{"id":4231,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/util.d.ts","qualifiedName":"\\"util\\".InspectOptionsStylized"},"name":"InspectOptionsStylized","package":"@types/node","qualifiedName":"\\"util\\".InspectOptionsStylized"}},{"id":4232,"name":"inspect","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"query","queryType":{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/util.d.ts","qualifiedName":"\\"util\\".inspect"},"name":"inspect","package":"@types/node","qualifiedName":"\\"util\\".inspect","preferValues":true}}}],"type":{"type":"intrinsic","name":"string"}}]}},"defaultValue":"...","overwrites":{"type":"reference","target":4661,"name":"RootLocator.[custom]"}},{"id":4233,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/RootLocator.ts","line":21,"character":20}],"signatures":[{"id":4234,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/RootLocator.ts","line":21,"character":20}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":4656,"name":"RootLocator.isPresent"}}],"inheritedFrom":{"type":"reference","target":4655,"name":"RootLocator.isPresent"}}],"groups":[{"title":"Properties","children":[4195,4227]},{"title":"Methods","children":[4196,4198,4200,4203,4205,4209,4212,4215,4221,4223,4225,4233]}],"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":21,"character":22}],"typeParameters":[{"id":4235,"name":"Native_Element_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":4236,"name":"Native_Selector_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"any"}}],"extendedTypes":[{"type":"reference","target":4644,"typeArguments":[{"type":"reference","target":4235,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Locator.Native_Element_Type","refersToTypeParameter":true}],"name":"RootLocator","package":"@serenity-js/web"}],"permalink":"/api/web/class/Locator","previousId":4121,"nextId":4237},{"id":4237,"name":"Page","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"Serenity/JS Screenplay Pattern-style model that enables interactions with a Web page\\nrendered in a Web browser tab.\\n\\n## Referring to the current page\\n\\n"},{"kind":"code","text":"```ts\\nimport { Ensure, endsWith } from \'@serenity-js/assertions\'\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Navigate, Page } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Serena\').attemptsTo(\\n  Navigate.to(\'https://serenity-js.org\'),\\n  Ensure.that(Page.current().title(), endsWith(\'Serenity/JS\')),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Switching to another open page\\n\\n"},{"kind":"code","text":"```ts\\nimport { Ensure, equals, includes, startsWith } from \'@serenity-js/assertions\'\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Navigate, Page, Switch, Text } from \'@serenity-js/web\'\\n\\nconst Navigation = {\\n  linkTo = (name: Answerable<string>) =>\\n    PageElements.located(By.css(\'nav a\'))\\n      .where(Text, includes(name))\\n      .first()\\n}\\n\\nawait actorCalled(\'Serena\').attemptsTo(\\n  Navigate.to(\'https://serenity-js.org\'),\\n  Click.on(Navigation.linkTo(\'GitHub\')),\\n\\n  Switch.to(Page.whichUrl(startsWith(\'https://github.com\')))\\n\\n  Ensure.that(\\n    Page.current().url().href,\\n    equals(\'https://github.com/serenity-js/serenity-js\')\\n  ),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Retrieving information about another open page\\n\\nYou can retrieve information about another open page without having to explicitly switch to it:\\n\\n"},{"kind":"code","text":"```ts\\nimport { Ensure, equals, includes, startsWith } from \'@serenity-js/assertions\'\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Navigate, Page, Text } from \'@serenity-js/web\'\\n\\nconst Navigation = {\\n  linkTo = (name: Answerable<string>) =>\\n    PageElements.located(By.css(\'nav a\'))\\n      .where(Text, includes(name))\\n      .first()\\n}\\n\\nawait actorCalled(\'Serena\').attemptsTo(\\n  Navigate.to(\'https://serenity-js.org\'),\\n  Click.on(Navigation.linkTo(\'GitHub\')),\\n  Ensure.that(\\n    Page.whichUrl(startsWith(\'https://github.com\')).url().href,\\n    equals(\'https://github.com/serenity-js/serenity-js\')\\n  ),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Performing activities in the context of another page\\n\\n"},{"kind":"code","text":"```ts\\nimport { Ensure, equals, includes, startsWith } from \'@serenity-js/assertions\'\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Navigate, Page, Text } from \'@serenity-js/web\'\\n\\nconst Navigation = {\\n  linkTo = (name: Answerable<string>) =>\\n    PageElements.located(By.css(\'nav a\'))\\n      .where(Text, includes(name))\\n      .first()\\n}\\n\\nawait actorCalled(\'Serena\').attemptsTo(\\n\\n  // Serenity/JS GitHub repository opens in a new browser tab\\n  Navigate.to(\'https://serenity-js.org\'),\\n  Click.on(Navigation.linkTo(\'GitHub\')),\\n\\n  // Switch to the newly opened page and perform an assertion\\n  Switch.to(Page.whichUrl(startsWith(\'https://github.com\')))\\n    .and(\\n      Ensure.that(\\n        Page.current().url().href,\\n        equals(\'https://github.com/serenity-js/serenity-js\')\\n      )\\n    ),\\n  // Automatically switch back to the original page\\n\\n  Ensure.that(Page.current().url().href, equals(\'https://serenity-js.org\'),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\n- ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)\\n- ["},{"kind":"code","text":"`Optional`"},{"kind":"text","text":"](/api/core/interface/Optional/)\\n- ["},{"kind":"code","text":"`Switchable`"},{"kind":"text","text":"](/api/web/interface/Switchable/)"}]},"children":[{"id":4238,"name":"current","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":138,"character":11}],"signatures":[{"id":4239,"name":"current","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates a ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter) representing the currently active ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/)."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":138,"character":11}],"type":{"type":"reference","target":1041,"typeArguments":[{"type":"reference","target":4237,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Page","package":"@serenity-js/web"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":4240,"name":"whichName","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":162,"character":11}],"signatures":[{"id":4241,"name":"whichName","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates a ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter) that resolves to a ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/) which ["},{"kind":"code","text":"`Page.name`"},{"kind":"text","text":"](/api/web/class/Page/#name)\\nmeets the [expectation](/api/core/class/Expectation/).\\n\\n#### Switching to a page with the desired name\\n\\n"},{"kind":"code","text":"```ts\\nimport { includes } from \'@serenity-js/assertions\'\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Switch } from \'@serenity-js/web\'\\n\\nactorCalled(\'Bernie\').attemptsTo(\\n  Switch.to(Page.whichName(includes(`photo-gallery`))),\\n)\\n```"}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":162,"character":11}],"parameters":[{"id":4242,"name":"expectation","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1138,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Expectation","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1041,"typeArguments":[{"type":"reference","target":4237,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Page","package":"@serenity-js/web"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":4243,"name":"whichTitle","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":192,"character":11}],"signatures":[{"id":4244,"name":"whichTitle","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates a ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter) that resolves to a ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/) which ["},{"kind":"code","text":"`Page.title`"},{"kind":"text","text":"](/api/web/class/Page/#title)\\nmeets the [expectation](/api/core/class/Expectation/).\\n\\n#### Switching to a page with the desired title\\n\\n"},{"kind":"code","text":"```ts\\nimport { includes } from \'@serenity-js/assertions\'\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Switch } from \'@serenity-js/web\'\\n\\nactorCalled(\'Bernie\').attemptsTo(\\n  Switch.to(Page.whichTitle(includes(`Summer collection`))),\\n)\\n```"}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":192,"character":11}],"parameters":[{"id":4245,"name":"expectation","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1138,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Expectation","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1041,"typeArguments":[{"type":"reference","target":4237,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Page","package":"@serenity-js/web"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":4246,"name":"whichUrl","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":222,"character":11}],"signatures":[{"id":4247,"name":"whichUrl","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates a ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter) that resolves to a ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/) which ["},{"kind":"code","text":"`Page.url`"},{"kind":"text","text":"](/api/web/class/Page/#url)\\nmeets the [expectation](/api/core/class/Expectation/).\\n\\n#### Switching to a page with the desired URL\\n\\n"},{"kind":"code","text":"```ts\\nimport { endsWith } from \'@serenity-js/assertions\'\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Switch } from \'@serenity-js/web\'\\n\\nactorCalled(\'Bernie\').attemptsTo(\\n  Switch.to(Page.whichUrl(endsWith(`/gallery.html`))),\\n)\\n```"}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":222,"character":11}],"parameters":[{"id":4248,"name":"expectation","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1138,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Expectation","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1041,"typeArguments":[{"type":"reference","target":4237,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Page","package":"@serenity-js/web"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":4257,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":248,"character":4}],"signatures":[{"id":4258,"name":"new Page","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":248,"character":4}],"typeParameter":[{"id":4259,"name":"Native_Element_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"any"}}],"parameters":[{"id":4260,"name":"session","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":3867,"typeArguments":[{"type":"reference","target":4237,"typeArguments":[{"type":"reference","target":4259,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Page.Native_Element_Type","refersToTypeParameter":true}],"name":"Page","package":"@serenity-js/web"}],"name":"BrowsingSession","package":"@serenity-js/web"}},{"id":4261,"name":"rootLocator","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4644,"typeArguments":[{"type":"reference","target":4259,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Page.Native_Element_Type","refersToTypeParameter":true}],"name":"RootLocator","package":"@serenity-js/web"}},{"id":4262,"name":"modalDialogHandler","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4105,"name":"ModalDialogHandler","package":"@serenity-js/web"}},{"id":4263,"name":"id","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}],"type":{"type":"reference","target":4237,"typeArguments":[{"type":"reference","target":4259,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Page.Native_Element_Type","refersToTypeParameter":true}],"name":"Page","package":"@serenity-js/web"}}]},{"id":4267,"name":"id","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":252,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":4268,"name":"createPageElement","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":265,"character":13}],"signatures":[{"id":4269,"name":"createPageElement","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) wrapping a native element."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":265,"character":13}],"parameters":[{"id":4270,"name":"nativeElement","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4259,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Page.Native_Element_Type","refersToTypeParameter":true}}],"type":{"type":"reference","target":4353,"typeArguments":[{"type":"reference","target":4259,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Page.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}}]},{"id":4271,"name":"locate","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":272,"character":13}],"signatures":[{"id":4272,"name":"locate","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/), retrieving an element located by ["},{"kind":"code","text":"`Selector`"},{"kind":"text","text":"](/api/web/class/Selector/)."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":272,"character":13}],"parameters":[{"id":4273,"name":"selector","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4788,"name":"Selector","package":"@serenity-js/web"}}],"type":{"type":"reference","target":4353,"typeArguments":[{"type":"reference","target":4259,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Page.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}}]},{"id":4274,"name":"locateAll","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":280,"character":13}],"signatures":[{"id":4275,"name":"locateAll","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElements/), retrieving a collection of elements located by ["},{"kind":"code","text":"`Selector`"},{"kind":"text","text":"](/api/web/class/Selector/)."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":280,"character":13}],"parameters":[{"id":4276,"name":"selector","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4788,"name":"Selector","package":"@serenity-js/web"}}],"type":{"type":"reference","target":4429,"typeArguments":[{"type":"reference","target":4259,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Page.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElements","package":"@serenity-js/web"}}]},{"id":4277,"name":"navigateTo","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":295,"character":13}],"signatures":[{"id":4278,"name":"navigateTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Navigate to a given destination, specified as an absolute URL\\nor a path relative to any base URL configured in your web test integration tool.\\n\\n#### Learn more\\n\\n- [WebdriverIO: Configuration Options](https://webdriver.io/docs/options/#baseurl)\\n- [Playwright: Browser](https://playwright.dev/docs/api/class-browser#browser-new-context)\\n- [Playwright: Test Options](https://playwright.dev/docs/api/class-testoptions#test-options-base-url)\\n- [Protractor: Configuration](https://github.com/angular/protractor/blob/master/lib/config.ts)"}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":295,"character":13}],"parameters":[{"id":4279,"name":"destination","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4280,"name":"navigateBack","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":304,"character":13}],"signatures":[{"id":4281,"name":"navigateBack","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Causes the browser to traverse one step backward in the joint session history\\nof the current ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/) (the current top-level browsing context).\\n\\nThis is equivalent to pressing the back button in the browser UI,\\nor calling ["},{"kind":"code","text":"`window.history.back`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/API/History/back)."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":304,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4282,"name":"navigateForward","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":313,"character":13}],"signatures":[{"id":4283,"name":"navigateForward","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Causes the browser to traverse one step forward in the joint session history\\nof the current ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/) (the current top-level browsing context).\\n\\nThis is equivalent to pressing the back button in the browser UI,\\nor calling ["},{"kind":"code","text":"`window.history.forward`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/API/History/forward)."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":313,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4284,"name":"reload","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":318,"character":13}],"signatures":[{"id":4285,"name":"reload","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Causes the browser to reload the ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/) in the current top-level browsing context."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":318,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4286,"name":"sendKeys","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":326,"character":13}],"signatures":[{"id":4287,"name":"sendKeys","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Send a sequence of ["},{"kind":"code","text":"`Key`"},{"kind":"text","text":"](/api/web/class/Key/) strokes to the active element."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":326,"character":13}],"parameters":[{"id":4288,"name":"keys","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Keys to enter"}]},"type":{"type":"array","elementType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":4121,"name":"Key","package":"@serenity-js/web"}]}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4289,"name":"executeScript","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":371,"character":13}],"signatures":[{"id":4290,"name":"executeScript","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Schedules a command to execute JavaScript in the context of the currently selected frame or window.\\n\\nThe script fragment will be executed as the body of an anonymous function.\\nIf the script is provided as a function object, that function will be converted to a string for injection\\ninto the target window.\\n\\nAny arguments provided in addition to the script will be included as script arguments and may be referenced\\nusing the "},{"kind":"code","text":"`arguments`"},{"kind":"text","text":" object. Arguments may be a "},{"kind":"code","text":"`boolean`"},{"kind":"text","text":", "},{"kind":"code","text":"`number`"},{"kind":"text","text":", "},{"kind":"code","text":"`string`"},{"kind":"text","text":" or "},{"kind":"code","text":"`WebElement`"},{"kind":"text","text":".\\nArrays and objects may also be used as script arguments as long as each item adheres\\nto the types previously mentioned.\\n\\nThe script may refer to any variables accessible from the current window.\\nFurthermore, the script will execute in the window\'s context, thus "},{"kind":"code","text":"`document`"},{"kind":"text","text":" may be used to refer\\nto the current document. Any local variables will not be available once the script has finished executing,\\nthough global variables will persist.\\n\\nIf the script has a return value (i.e. if the script contains a "},{"kind":"code","text":"`return`"},{"kind":"text","text":" statement),\\nthen the following steps will be taken for resolving this functions return value:\\n\\n- For a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/), the value will resolve to a [HTMLElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement)\\n- "},{"kind":"code","text":"`null`"},{"kind":"text","text":" and "},{"kind":"code","text":"`undefined`"},{"kind":"text","text":" return values will resolve to "},{"kind":"code","text":"`null`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`boolean`"},{"kind":"text","text":", "},{"kind":"code","text":"`number`"},{"kind":"text","text":", and "},{"kind":"code","text":"`string`"},{"kind":"text","text":" values will resolve as is\\n- Functions will resolve to their string representation\\n- For arrays and objects, each member item will be converted according to the rules above\\n\\n#### Use injected JavaScript to retrieve information about a HTMLElement\\n\\n"},{"kind":"code","text":"```ts\\nBrowseTheWeb.as(actor).executeAsyncScript(`\\n  return arguments[0].tagName;\\n`, PageElement.located(By.css(\'h1\')).describedAs(\'header\'))\\n\\n// returns a Promise that resolves to \'h1\'\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- [Selenium WebDriver: JavaScript Executor](https://seleniumhq.github.io/selenium/docs/api/java/org/openqa/selenium/JavascriptExecutor.html#executeAsyncScript-java.lang.String-java.lang.Object...-)\\n- ["},{"kind":"code","text":"`Page.lastScriptExecutionResult`"},{"kind":"text","text":"](/api/web/class/Page/#lastScriptExecutionResult)"}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":371,"character":13}],"typeParameter":[{"id":4291,"name":"Result","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":4292,"name":"InnerArguments","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"parameters":[{"id":4293,"name":"script","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reflection","declaration":{"id":4294,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":372,"character":26}],"signatures":[{"id":4295,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":372,"character":26}],"parameters":[{"id":4296,"name":"parameters","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"reference","target":4292,"name":"InnerArguments","package":"@serenity-js/web","refersToTypeParameter":true}}],"type":{"type":"reference","target":4291,"name":"Result","package":"@serenity-js/web","refersToTypeParameter":true}}]}}]}},{"id":4297,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"reference","target":4292,"name":"InnerArguments","package":"@serenity-js/web","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4291,"name":"Result","package":"@serenity-js/web","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4298,"name":"executeAsyncScript","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":431,"character":13}],"signatures":[{"id":4299,"name":"executeAsyncScript","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Schedules a command to execute asynchronous JavaScript in the context of the currently selected frame or window.\\n\\nThe script fragment will be executed as the body of an anonymous function.\\nIf the script is provided as a function object, that function will be converted to a string for injection\\ninto the target window.\\n\\nAny arguments provided in addition to the script will be included as script arguments and may be referenced\\nusing the "},{"kind":"code","text":"`arguments`"},{"kind":"text","text":" object. Arguments may be a "},{"kind":"code","text":"`boolean`"},{"kind":"text","text":", "},{"kind":"code","text":"`number`"},{"kind":"text","text":", "},{"kind":"code","text":"`string`"},{"kind":"text","text":" or "},{"kind":"code","text":"`WebElement`"},{"kind":"text","text":"\\nArrays and objects may also be used as script arguments as long as each item adheres\\nto the types previously mentioned.\\n\\nUnlike executing synchronous JavaScript with ["},{"kind":"code","text":"`Page.executeScript`"},{"kind":"text","text":"](/api/web/class/Page/#executeScript),\\nscripts executed with this function must explicitly signal they are finished by invoking the provided callback.\\n\\nThis callback will always be injected into the executed function as the last argument,\\nand thus may be referenced with "},{"kind":"code","text":"`arguments[arguments.length - 1]`"},{"kind":"text","text":".\\n\\nThe following steps will be taken for resolving this functions return value against\\nthe first argument to the script\'s callback function:\\n\\n- For a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/), the value will resolve to a [HTMLElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement)\\n- "},{"kind":"code","text":"`null`"},{"kind":"text","text":" and "},{"kind":"code","text":"`undefined`"},{"kind":"text","text":" return values will resolve to "},{"kind":"code","text":"`null`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`boolean`"},{"kind":"text","text":", "},{"kind":"code","text":"`number`"},{"kind":"text","text":", and "},{"kind":"code","text":"`string`"},{"kind":"text","text":" values will resolve as is\\n- Functions will resolve to their string representation\\n- For arrays and objects, each member item will be converted according to the rules above\\n\\n#### Perform a sleep in the browser under test>\\n\\n"},{"kind":"code","text":"```ts\\nBrowseTheWeb.as(actor).executeAsyncScript(`\\n  var delay    = arguments[0];\\n  var callback = arguments[arguments.length - 1];\\n\\n  window.setTimeout(callback, delay);\\n`, 500)\\n```"},{"kind":"text","text":"\\n\\n#### Return a value asynchronously\\n\\n"},{"kind":"code","text":"```ts\\nBrowseTheWeb.as(actor).executeAsyncScript(`\\n  var callback = arguments[arguments.length - 1];\\n\\n  callback(\'some return value\')\\n`).then(value => doSomethingWithThe(value))\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- [Selenium WebDriver: JavaScript Executor](https://seleniumhq.github.io/selenium/docs/api/java/org/openqa/selenium/JavascriptExecutor.html#executeAsyncScript-java.lang.String-java.lang.Object...-)\\n- ["},{"kind":"code","text":"`Page.lastScriptExecutionResult`"},{"kind":"text","text":"](/api/web/class/Page/#lastScriptExecutionResult)"}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":431,"character":13}],"typeParameter":[{"id":4300,"name":"Result","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":4301,"name":"Parameters","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"parameters":[{"id":4302,"name":"script","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reflection","declaration":{"id":4303,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":432,"character":26}],"signatures":[{"id":4304,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":432,"character":26}],"parameters":[{"id":4305,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"tuple","elements":[{"type":"rest","elementType":{"type":"namedTupleMember","name":"parameters","isOptional":false,"element":{"type":"array","elementType":{"type":"reference","target":4301,"name":"Parameters","package":"@serenity-js/web","refersToTypeParameter":true}}}},{"type":"namedTupleMember","name":"callback","isOptional":false,"element":{"type":"reflection","declaration":{"id":4306,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":432,"character":75}],"signatures":[{"id":4307,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":432,"character":75}],"parameters":[{"id":4308,"name":"result","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4300,"name":"Result","package":"@serenity-js/web","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"void"}}]}}}]}}],"type":{"type":"intrinsic","name":"void"}}]}}]}},{"id":4309,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"reference","target":4301,"name":"Parameters","package":"@serenity-js/web","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4300,"name":"Result","package":"@serenity-js/web","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4310,"name":"lastScriptExecutionResult","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":440,"character":13}],"signatures":[{"id":4311,"name":"lastScriptExecutionResult","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the last result of calling ["},{"kind":"code","text":"`Page.executeAsyncScript`"},{"kind":"text","text":"](/api/web/class/Page/#executeAsyncScript)\\nor ["},{"kind":"code","text":"`Page.executeScript`"},{"kind":"text","text":"](/api/web/class/Page/#executeScript)"}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":440,"character":13}],"typeParameter":[{"id":4312,"name":"R","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"any"}}],"type":{"type":"reference","target":4312,"name":"R","package":"@serenity-js/web","refersToTypeParameter":true}}]},{"id":4313,"name":"takeScreenshot","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":451,"character":13}],"signatures":[{"id":4314,"name":"takeScreenshot","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Take a screenshot of the top-level browsing context\'s viewport."}],"blockTags":[{"tag":"@throws","content":[{"kind":"text","text":"["},{"kind":"code","text":"`BrowserWindowClosedError`"},{"kind":"text","text":"](/api/web/class/BrowserWindowClosedError/)\\n When the page you\'re trying to take the screenshot of has already been closed"}]},{"tag":"@returns","content":[{"kind":"text","text":"A promise that will resolve to a base64-encoded screenshot PNG"}]}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":451,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4315,"name":"cookie","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":458,"character":13}],"signatures":[{"id":4316,"name":"cookie","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Retrieves a cookie identified by "},{"kind":"code","text":"`name`"},{"kind":"text","text":" and visible to this ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/)."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":458,"character":13}],"parameters":[{"id":4317,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":3898,"name":"Cookie","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4318,"name":"setCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":466,"character":13}],"signatures":[{"id":4319,"name":"setCookie","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Adds a single cookie with ["},{"kind":"code","text":"`CookieData`"},{"kind":"text","text":"](/api/web/interface/CookieData/) to the cookie store associated\\nwith the active ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/)\'s address."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":466,"character":13}],"parameters":[{"id":4320,"name":"cookieData","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4004,"name":"CookieData","package":"@serenity-js/web"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4321,"name":"deleteAllCookies","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":471,"character":13}],"signatures":[{"id":4322,"name":"deleteAllCookies","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Removes all the cookies."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":471,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4323,"name":"title","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":479,"character":13}],"signatures":[{"id":4324,"name":"title","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Retrieves the document title of the current top-level browsing context, equivalent to calling "},{"kind":"code","text":"`document.title`"},{"kind":"text","text":".\\n\\n#### Learn more\\n- [Mozilla Developer Network: Document title](https://developer.mozilla.org/en-US/docs/Web/API/Document/title)"}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":479,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4325,"name":"url","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":484,"character":13}],"signatures":[{"id":4326,"name":"url","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Retrieves the [URL](https://nodejs.org/api/url.html) of the current top-level browsing context."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":484,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/url.d.ts","qualifiedName":"\\"url\\".URL"},"name":"URL","package":"@types/node","qualifiedName":"\\"url\\".URL"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4327,"name":"name","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":489,"character":13}],"signatures":[{"id":4328,"name":"name","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Retrieves the name of the current top-level browsing context."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":489,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4329,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":494,"character":13}],"signatures":[{"id":4330,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Checks if a given window / tab / page is open and can be switched to, e.g. it\'s not closed."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":494,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"implementationOf":{"type":"reference","target":-1,"name":"Optional.isPresent"}}],"implementationOf":{"type":"reference","target":-1,"name":"Optional.isPresent"}},{"id":4331,"name":"viewportSize","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":500,"character":13}],"signatures":[{"id":4332,"name":"viewportSize","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the actual viewport size available for the given page,\\nexcluding any scrollbars."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":500,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reflection","declaration":{"id":4333,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":4334,"name":"width","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":500,"character":39}],"type":{"type":"intrinsic","name":"number"}},{"id":4335,"name":"height","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":500,"character":54}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[4334,4335]}],"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":500,"character":37}]}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4336,"name":"setViewportSize","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":507,"character":13}],"signatures":[{"id":4337,"name":"setViewportSize","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Sets ths size of the visible viewport to desired dimensions."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":507,"character":13}],"parameters":[{"id":4338,"name":"size","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":4339,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":4340,"name":"width","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":507,"character":37}],"type":{"type":"intrinsic","name":"number"}},{"id":4341,"name":"height","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":507,"character":52}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[4340,4341]}],"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":507,"character":35}]}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4342,"name":"switchTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":518,"character":10}],"signatures":[{"id":4343,"name":"switchTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Switches the current browsing context to the given page\\nand returns an object that allows the caller to switch back\\nto the previous context when needed.\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Switch`"},{"kind":"text","text":"](/api/web/class/Switch/)\\n- ["},{"kind":"code","text":"`Switchable`"},{"kind":"text","text":"](/api/web/interface/Switchable/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":518,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4801,"name":"SwitchableOrigin","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"implementationOf":{"type":"reference","target":4800,"name":"Switchable.switchTo"}}],"implementationOf":{"type":"reference","target":4799,"name":"Switchable.switchTo"}},{"id":4344,"name":"close","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":534,"character":13}],"signatures":[{"id":4345,"name":"close","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Closes this page."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":534,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4346,"name":"closeOthers","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":539,"character":13}],"signatures":[{"id":4347,"name":"closeOthers","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Closes any open pages, except for this one."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":539,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4348,"name":"modalDialog","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":544,"character":4}],"signatures":[{"id":4349,"name":"modalDialog","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the ["},{"kind":"code","text":"`ModalDialogHandler`"},{"kind":"text","text":"](/api/web/class/ModalDialogHandler/) for the current ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/)."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":544,"character":4}],"type":{"type":"reference","target":4105,"name":"ModalDialogHandler","package":"@serenity-js/web"}}]},{"id":4350,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":551,"character":4}],"signatures":[{"id":4351,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a description of this Page and its ID."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":551,"character":4}],"type":{"type":"intrinsic","name":"string"}}]}],"groups":[{"title":"Constructors","children":[4257]},{"title":"Properties","children":[4267]},{"title":"Methods","children":[4238,4240,4243,4246,4268,4271,4274,4277,4280,4282,4284,4286,4289,4298,4310,4313,4315,4318,4321,4323,4325,4327,4329,4331,4336,4342,4344,4346,4348,4350]}],"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":133,"character":22}],"typeParameters":[{"id":4352,"name":"Native_Element_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"any"}}],"implementedTypes":[{"type":"reference","target":936,"name":"Optional","package":"@serenity-js/core"},{"type":"reference","target":4798,"name":"Switchable","package":"@serenity-js/web"}],"permalink":"/api/web/class/Page","previousId":4187,"nextId":4353},{"id":4353,"name":"PageElement","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"Uses the [actor\'s](/api/core/class/Actor/) [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/) to identify\\na single Web element located by ["},{"kind":"code","text":"`Selector`"},{"kind":"text","text":"](/api/web/class/Selector/).\\n\\n## Learn more\\n- [Page Element Query Language](/handbook/web-testing/page-element-query-language)\\n- ["},{"kind":"code","text":"`Optional`"},{"kind":"text","text":"](/api/core/interface/Optional/)\\n- ["},{"kind":"code","text":"`Switchable`"},{"kind":"text","text":"](/api/web/interface/Switchable/)"}]},"children":[{"id":4354,"name":"from","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":25,"character":11}],"signatures":[{"id":4355,"name":"from","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":25,"character":11}],"typeParameter":[{"id":4356,"name":"NET","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":4357,"name":"nativeElement","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4356,"name":"NET","package":"@serenity-js/web","refersToTypeParameter":true}}],"type":{"type":"reference","target":1046,"typeArguments":[{"type":"reference","target":4353,"typeArguments":[{"type":"reference","target":4356,"name":"NET","package":"@serenity-js/web","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":4353,"typeArguments":[{"type":"reference","target":4356,"name":"NET","package":"@serenity-js/web","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}],"name":"MetaQuestionAdapter","package":"@serenity-js/core"}}]},{"id":4358,"name":"located","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":33,"character":11}],"signatures":[{"id":4359,"name":"located","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":33,"character":11}],"typeParameter":[{"id":4360,"name":"NET","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":4361,"name":"selector","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":688,"typeArguments":[{"type":"reference","target":4788,"name":"Selector","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1046,"typeArguments":[{"type":"reference","target":4353,"typeArguments":[{"type":"reference","target":4360,"name":"NET","package":"@serenity-js/web","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":4353,"typeArguments":[{"type":"reference","target":4360,"name":"NET","package":"@serenity-js/web","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}],"name":"MetaQuestionAdapter","package":"@serenity-js/core"}}]},{"id":4362,"name":"of","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":42,"character":11}],"signatures":[{"id":4363,"name":"of","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":42,"character":11}],"typeParameter":[{"id":4364,"name":"NET","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":4365,"name":"childElement","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":4353,"typeArguments":[{"type":"reference","target":4364,"name":"NET","package":"@serenity-js/web","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":1046,"typeArguments":[{"type":"reference","target":4353,"typeArguments":[{"type":"reference","target":4364,"name":"NET","package":"@serenity-js/web","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":4353,"typeArguments":[{"type":"reference","target":4364,"name":"NET","package":"@serenity-js/web","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}],"name":"MetaQuestionAdapter","package":"@serenity-js/core"}]}},{"id":4366,"name":"parentElement","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":688,"typeArguments":[{"type":"reference","target":4353,"typeArguments":[{"type":"reference","target":4364,"name":"NET","package":"@serenity-js/web","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1046,"typeArguments":[{"type":"reference","target":4353,"typeArguments":[{"type":"reference","target":4364,"name":"NET","package":"@serenity-js/web","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":4353,"typeArguments":[{"type":"reference","target":4364,"name":"NET","package":"@serenity-js/web","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}],"name":"MetaQuestionAdapter","package":"@serenity-js/core"}}]},{"id":4367,"name":"html","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":76,"character":11}],"signatures":[{"id":4368,"name":"html","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A static method producing a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/) that can be used with ["},{"kind":"code","text":"`PageElements.eachMappedTo`"},{"kind":"text","text":"](/api/web/class/PageElements/#eachMappedTo) method\\nto extract the HTML of each element in a collection.\\n\\n#### Example\\n\\n"},{"kind":"code","text":"```typescript\\nimport { actorCalled, Log } from \'@serenity-js/core\'\\nimport { Navigate, PageElement, By, Text } from \'@serenity-js/web\'\\nimport { includes } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Debbie\').attemptsTo(\\n  Navigate.to(\'https://serenity-js.org\'),\\n\\n  Log.the(\\n    PageElements.located(By.css(\'a\'))\\n      .where(Text, includes(\'modular\'))\\n      .eachMappedTo(PageElement.html())\\n  ),\\n)\\n```"}]},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":76,"character":11}],"typeParameter":[{"id":4369,"name":"NET","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"type":{"type":"reference","target":1543,"typeArguments":[{"type":"reference","target":4353,"typeArguments":[{"type":"reference","target":4369,"name":"NET","package":"@serenity-js/web","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":1041,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"QuestionAdapter","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}}]},{"id":4370,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":86,"character":4}],"signatures":[{"id":4371,"name":"new PageElement","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":86,"character":4}],"typeParameter":[{"id":4372,"name":"Native_Element_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"any"}}],"parameters":[{"id":4373,"name":"locator","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4187,"typeArguments":[{"type":"reference","target":4372,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElement.Native_Element_Type","refersToTypeParameter":true},{"type":"intrinsic","name":"any"}],"name":"Locator","package":"@serenity-js/web"}}],"type":{"type":"reference","target":4353,"typeArguments":[{"type":"reference","target":4372,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElement.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}}]},{"id":4374,"name":"locator","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":86,"character":32}],"type":{"type":"reference","target":4187,"typeArguments":[{"type":"reference","target":4372,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElement.Native_Element_Type","refersToTypeParameter":true},{"type":"intrinsic","name":"any"}],"name":"Locator","package":"@serenity-js/web"}},{"id":4375,"name":"of","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":97,"character":13}],"signatures":[{"id":4376,"name":"of","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Locates a child element that:\\n- matches the given selector\\n- is located within the "},{"kind":"code","text":"`parentElement`"}]},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":97,"character":13}],"parameters":[{"id":4377,"name":"parentElement","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4353,"typeArguments":[{"type":"reference","target":4372,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElement.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}}],"type":{"type":"reference","target":4353,"typeArguments":[{"type":"reference","target":4372,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElement.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}}]},{"id":4378,"name":"closestTo","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":147,"character":13}],"signatures":[{"id":4379,"name":"closestTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Traverses the element and its parents, heading toward the document root,\\nuntil it finds a parent ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) that matches its associated CSS selector.\\n\\n#### Example\\n\\n"},{"kind":"code","text":"```html\\n<div class=\\"form-entry\\">\\n    <input id=\\"username\\" />\\n    <ul class=\\"warnings\\">\\n        <li>Username should be an email address</li>\\n    </ul>\\n</div>\\n```"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```typescript\\nclass Username {\\n  static field = () =>\\n    PageElement.located(By.id(\'username\'))\\n      .describedAs(\'username field\')\\n\\n  private static container = () =>\\n    PageElement.located(By.css(\'.form-entry\'))\\n      .describedAs(\'form entry container\')\\n\\n  static warnings = () =>\\n    PageElements.located(By.css(\'ul.warnings li\'))\\n      .describedAs(\'warnings\')\\n      .of(\\n        Username.container().closestTo(Username.field())\\n      )\\n}\\n```"},{"kind":"text","text":"\\n\\n:::info\\nThis method relies on [Element: closest() API](https://developer.mozilla.org/en-US/docs/Web/API/Element/closest),\\nand so is only compatible with locating parent elements specified using the following CSS selectors:\\n- ["},{"kind":"code","text":"`ByCss`"},{"kind":"text","text":"](/api/web/class/ByCss/)\\n- ["},{"kind":"code","text":"`ById`"},{"kind":"text","text":"](/api/web/class/ById/)\\n- ["},{"kind":"code","text":"`ByTagName`"},{"kind":"text","text":"](/api/web/class/ByTagName/)\\n:::"}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"#### Learn more\\n- [Element: closest() method](https://developer.mozilla.org/en-US/docs/Web/API/Element/closest)"}]}]},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":147,"character":13}],"parameters":[{"id":4380,"name":"childElement","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4353,"typeArguments":[{"type":"reference","target":4372,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElement.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}}],"type":{"type":"reference","target":4353,"typeArguments":[{"type":"reference","target":4372,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElement.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}}]},{"id":4381,"name":"nativeElement","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":152,"character":10}],"signatures":[{"id":4382,"name":"nativeElement","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An \\"escape hatch\\" providing access to the integration tool-specific implementation of a Web element."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":152,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4372,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElement.Native_Element_Type","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4383,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":156,"character":4}],"signatures":[{"id":4384,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":156,"character":4}],"type":{"type":"intrinsic","name":"string"}}]},{"id":4385,"name":"enterValue","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":160,"character":13}],"signatures":[{"id":4386,"name":"enterValue","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":160,"character":13}],"parameters":[{"id":4387,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4388,"name":"clearValue","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":161,"character":13}],"signatures":[{"id":4389,"name":"clearValue","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":161,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4390,"name":"click","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":162,"character":13}],"signatures":[{"id":4391,"name":"click","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":162,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4392,"name":"doubleClick","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":163,"character":13}],"signatures":[{"id":4393,"name":"doubleClick","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":163,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4394,"name":"scrollIntoView","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":164,"character":13}],"signatures":[{"id":4395,"name":"scrollIntoView","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":164,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4396,"name":"hoverOver","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":165,"character":13}],"signatures":[{"id":4397,"name":"hoverOver","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":165,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4398,"name":"rightClick","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":166,"character":13}],"signatures":[{"id":4399,"name":"rightClick","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":166,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4400,"name":"selectOptions","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":167,"character":13}],"signatures":[{"id":4401,"name":"selectOptions","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":167,"character":13}],"parameters":[{"id":4402,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":4668,"name":"SelectOption","package":"@serenity-js/web"}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4403,"name":"selectedOptions","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":168,"character":13}],"signatures":[{"id":4404,"name":"selectedOptions","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":168,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4668,"name":"SelectOption","package":"@serenity-js/web"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4405,"name":"attribute","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":170,"character":13}],"signatures":[{"id":4406,"name":"attribute","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":170,"character":13}],"parameters":[{"id":4407,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4408,"name":"text","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":171,"character":13}],"signatures":[{"id":4409,"name":"text","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":171,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4410,"name":"value","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":172,"character":13}],"signatures":[{"id":4411,"name":"value","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":172,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4412,"name":"html","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":193,"character":13}],"signatures":[{"id":4413,"name":"html","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An instance method that resolves to the value of the ["},{"kind":"code","text":"`outerHTML`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/API/Element/outerHTML) property\\nof the underlying element.\\n\\n#### Example\\n\\n"},{"kind":"code","text":"```typescript\\nimport { actorCalled, Log } from \'@serenity-js/core\'\\nimport { Navigate, PageElement, By } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Debbie\').attemptsTo(\\n  Navigate.to(\'https://serenity-js.org\'),\\n\\n  Log.the(\\n    PageElement.located(By.css(\'h1\')).html()\\n  ),\\n)\\n```"}]},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":193,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4414,"name":"switchTo","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":210,"character":13}],"signatures":[{"id":4415,"name":"switchTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"When the element represents an ["},{"kind":"code","text":"`iframe`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe),\\ncalling this method switches the current browsing context to the given "},{"kind":"code","text":"`iframe`"},{"kind":"text","text":" context.\\n\\nWhen used with other types of [Web "},{"kind":"code","text":"`Element`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/API/Element),\\ncalling this method will have the same result as calling ["},{"kind":"code","text":"`Element.focus()`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/API/Element/focus_event)."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Returns an object that allows the caller to switch back\\n to the previous context if needed.\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Switch`"},{"kind":"text","text":"](/api/web/class/Switch/)\\n- ["},{"kind":"code","text":"`Switchable`"},{"kind":"text","text":"](/api/web/interface/Switchable/)"}]}]},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":210,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4801,"name":"SwitchableOrigin","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"implementationOf":{"type":"reference","target":4800,"name":"Switchable.switchTo"}}],"implementationOf":{"type":"reference","target":4799,"name":"Switchable.switchTo"}},{"id":4416,"name":"isActive","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":216,"character":13}],"signatures":[{"id":4417,"name":"isActive","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":" when the underlying element [has focus](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/focus).\\nOtherwise, resolves to "},{"kind":"code","text":"`false`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":216,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4418,"name":"isClickable","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":224,"character":13}],"signatures":[{"id":4419,"name":"isClickable","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":" when the underlying element can be clicked on.\\nOtherwise, resolves to "},{"kind":"code","text":"`false`"},{"kind":"text","text":".\\n\\nPlease refer to test integration tool-specific documentation for details."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":224,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4420,"name":"isEnabled","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":232,"character":13}],"signatures":[{"id":4421,"name":"isEnabled","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":" when the underlying\\nelement is not [explicitly disabled](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/disabled)\\n\\nPlease refer to test integration tool-specific documentation for details."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":232,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4422,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":239,"character":10}],"signatures":[{"id":4423,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a ["},{"kind":"code","text":"`Promise`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise) that resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":" when the element\\nis present in the [Document Object Model (DOM)](https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model),\\n"},{"kind":"code","text":"`false`"},{"kind":"text","text":" otherwise."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":239,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"implementationOf":{"type":"reference","target":-1,"name":"Optional.isPresent"}}],"implementationOf":{"type":"reference","target":-1,"name":"Optional.isPresent"}},{"id":4424,"name":"isSelected","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":250,"character":13}],"signatures":[{"id":4425,"name":"isSelected","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":" when the underlying element:\\n- has a ["},{"kind":"code","text":"`selected`"},{"kind":"text","text":" attribute](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option#attr-selected) for "},{"kind":"code","text":"`<option />`"},{"kind":"text","text":" elements\\n- has a ["},{"kind":"code","text":"`checked`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/checkbox) attribute for checkboxes\\n\\nOtherwise, resolves to "},{"kind":"code","text":"`false`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":250,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4426,"name":"isVisible","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":260,"character":13}],"signatures":[{"id":4427,"name":"isVisible","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":" when the underlying element:\\n- is not hidden, so doesn\'t have CSS style like "},{"kind":"code","text":"`display: none`"},{"kind":"text","text":", "},{"kind":"code","text":"`visibility: hidden`"},{"kind":"text","text":" or "},{"kind":"code","text":"`opacity: 0`"},{"kind":"text","text":"\\n- is within the browser viewport\\n- doesn\'t have its centre covered by other elements\\n\\nOtherwise, resolves to "},{"kind":"code","text":"`false`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":260,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]}],"groups":[{"title":"Constructors","children":[4370]},{"title":"Properties","children":[4374]},{"title":"Methods","children":[4354,4358,4362,4367,4375,4378,4381,4383,4385,4388,4390,4392,4394,4396,4398,4400,4403,4405,4408,4410,4412,4414,4416,4418,4420,4422,4424,4426]}],"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":23,"character":22}],"typeParameters":[{"id":4428,"name":"Native_Element_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"any"}}],"implementedTypes":[{"type":"reference","target":936,"name":"Optional","package":"@serenity-js/core"},{"type":"reference","target":4798,"name":"Switchable","package":"@serenity-js/web"}],"permalink":"/api/web/class/PageElement","previousId":4237,"nextId":4429},{"id":4429,"name":"PageElements","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Uses the [actor\'s](/api/core/class/Actor/) [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/) to identify\\na group of Web elements located by ["},{"kind":"code","text":"`Selector`"},{"kind":"text","text":"](/api/web/class/Selector/).\\n\\n## Learn more\\n\\n- [Page Element Query Language](/handbook/web-testing/page-element-query-language)\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)}\\n- ["},{"kind":"code","text":"`List`"},{"kind":"text","text":"](/api/core/class/List/)\\n- ["},{"kind":"code","text":"`ChainableMetaQuestion`"},{"kind":"text","text":"](/api/core/interface/ChainableMetaQuestion/)"}]},"children":[{"id":4430,"name":"located","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElements.ts","line":24,"character":11}],"signatures":[{"id":4431,"name":"located","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElements.ts","line":24,"character":11}],"typeParameter":[{"id":4432,"name":"NET","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":4433,"name":"selector","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":688,"typeArguments":[{"type":"reference","target":4788,"name":"Selector","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":4429,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElements","package":"@serenity-js/web"}}]},{"id":4533,"name":"describedAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"signatures":[{"id":4534,"name":"describedAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Changes the description of this object, as returned by ["},{"kind":"code","text":"`Describable.describedBy`"},{"kind":"text","text":"](/api/core/class/Describable/#describedBy)\\nand ["},{"kind":"code","text":"`Describable.toString`"},{"kind":"text","text":"](/api/core/class/Describable/#toString)."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"parameters":[{"id":4535,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Replaces the current description according to the following rules:\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is an ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable), it replaces the current description\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/), the current description is passed as "},{"kind":"code","text":"`context`"},{"kind":"text","text":" to "},{"kind":"code","text":"`description.of(context)`"},{"kind":"text","text":", and the result replaces the current description"}]},"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":1543,"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4353,"typeArguments":[{"type":"reference","target":4494,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}},{"type":"reference","target":939,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}]}}],"type":{"type":"intrinsic","name":"this"},"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.describedAs"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.describedAs"}},{"id":4536,"name":"as","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"signatures":[{"id":4537,"name":"as","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Maps this question to one of a different type.\\n\\n"},{"kind":"code","text":"```ts\\nQuestion.about(\'number returned as string\', actor => \'42\')   // returns: QuestionAdapter<string>\\n  .as(Number)                                                // returns: QuestionAdapter<number>\\n```"}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"typeParameter":[{"id":4538,"name":"O","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":4539,"name":"mapping","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":4540,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"signatures":[{"id":4541,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"parameters":[{"id":4542,"name":"answer","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"reference","target":4353,"typeArguments":[{"type":"reference","target":4494,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}}}],"type":{"type":"union","types":[{"type":"reference","target":4538,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4538,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reference","target":1041,"typeArguments":[{"type":"reference","target":4538,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.as"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.as"}},{"id":4543,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":4544,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":4545,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1049,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":600,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":4546,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":4547,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[4547]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.describedBy"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.describedBy"}},{"id":4553,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":4554,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.toString"}},{"id":4519,"name":"forEach","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.ts","line":21,"character":4}],"signatures":[{"id":4520,"name":"forEach","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.ts","line":21,"character":4}],"parameters":[{"id":4521,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":4522,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.ts","line":21,"character":22}],"signatures":[{"id":4523,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.ts","line":21,"character":22}],"parameters":[{"id":4524,"name":"current","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1533,"typeArguments":[{"type":"reference","target":4353,"typeArguments":[{"type":"reference","target":4494,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}],"name":"CurrentItem","package":"@serenity-js/core"}},{"id":4525,"name":"index","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}},{"id":4526,"name":"items","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"reference","target":4353,"typeArguments":[{"type":"reference","target":4494,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"void"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reference","target":1587,"name":"Task","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.forEach"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.forEach"}},{"id":4527,"name":"answeredBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.ts","line":28,"character":4}],"signatures":[{"id":4528,"name":"answeredBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.ts","line":28,"character":4}],"parameters":[{"id":4529,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1049,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":600,"name":"UsesAbilities","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4353,"typeArguments":[{"type":"reference","target":4494,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.answeredBy"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.answeredBy"}},{"id":4492,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.ts","line":68,"character":4}],"signatures":[{"id":4493,"name":"new PageElements","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.ts","line":68,"character":4}],"typeParameter":[{"id":4494,"name":"Native_Element_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"any"}}],"parameters":[{"id":4495,"name":"collection","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":688,"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4353,"typeArguments":[{"type":"reference","target":4494,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":1054,"typeArguments":[{"type":"reference","target":4353,"typeArguments":[{"type":"reference","target":4494,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"union","types":[{"type":"reference","target":939,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4353,"typeArguments":[{"type":"reference","target":4494,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"},{"type":"reference","target":939,"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4353,"typeArguments":[{"type":"reference","target":4494,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}}],"name":"Question","package":"@serenity-js/core"}]}],"name":"ChainableMetaQuestion","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":4429,"typeArguments":[{"type":"reference","target":4494,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElements","package":"@serenity-js/web"},"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList<PageElement<Native_Element_Type>, PageElement<Native_Element_Type>>.constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList<PageElement<Native_Element_Type>, PageElement<Native_Element_Type>>.constructor"}},{"id":4497,"name":"of","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.ts","line":69,"character":4}],"signatures":[{"id":4498,"name":"of","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.ts","line":69,"character":4}],"parameters":[{"id":4499,"name":"context","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":688,"typeArguments":[{"type":"reference","target":4353,"typeArguments":[{"type":"reference","target":4494,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1408,"typeArguments":[{"type":"reference","target":4353,"typeArguments":[{"type":"reference","target":4494,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":4353,"typeArguments":[{"type":"reference","target":4494,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}],"name":"MetaList","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.of"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.of"}},{"id":4500,"name":"eachMappedTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.ts","line":70,"character":4}],"signatures":[{"id":4501,"name":"eachMappedTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.ts","line":70,"character":4}],"typeParameter":[{"id":4502,"name":"Mapped_Item_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":4503,"name":"question","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1543,"typeArguments":[{"type":"reference","target":4353,"typeArguments":[{"type":"reference","target":4494,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":939,"typeArguments":[{"type":"union","types":[{"type":"reference","target":4502,"name":"Mapped_Item_Type","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4502,"name":"Mapped_Item_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1408,"typeArguments":[{"type":"reference","target":4353,"typeArguments":[{"type":"reference","target":4494,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":4502,"name":"Mapped_Item_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"MetaList","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.eachMappedTo"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.eachMappedTo"}},{"id":4504,"name":"where","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.ts","line":71,"character":4}],"signatures":[{"id":4505,"name":"where","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.ts","line":71,"character":4}],"typeParameter":[{"id":4506,"name":"Answer_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":4507,"name":"question","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1543,"typeArguments":[{"type":"reference","target":4353,"typeArguments":[{"type":"reference","target":4494,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":939,"typeArguments":[{"type":"union","types":[{"type":"reference","target":4506,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4506,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}},{"id":4508,"name":"expectation","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1138,"typeArguments":[{"type":"reference","target":4506,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1408,"typeArguments":[{"type":"reference","target":4353,"typeArguments":[{"type":"reference","target":4494,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":4353,"typeArguments":[{"type":"reference","target":4494,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}],"name":"MetaList","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.where"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.where"}},{"id":4509,"name":"count","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.ts","line":72,"character":4}],"signatures":[{"id":4510,"name":"count","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.ts","line":72,"character":4}],"type":{"type":"reference","target":1046,"typeArguments":[{"type":"reference","target":4353,"typeArguments":[{"type":"reference","target":4494,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"intrinsic","name":"number"}],"name":"MetaQuestionAdapter","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.count"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.count"}},{"id":4511,"name":"first","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.ts","line":73,"character":4}],"signatures":[{"id":4512,"name":"first","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.ts","line":73,"character":4}],"type":{"type":"reference","target":1046,"typeArguments":[{"type":"reference","target":4353,"typeArguments":[{"type":"reference","target":4494,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":4353,"typeArguments":[{"type":"reference","target":4494,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}],"name":"MetaQuestionAdapter","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.first"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.first"}},{"id":4513,"name":"last","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.ts","line":74,"character":4}],"signatures":[{"id":4514,"name":"last","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.ts","line":74,"character":4}],"type":{"type":"reference","target":1046,"typeArguments":[{"type":"reference","target":4353,"typeArguments":[{"type":"reference","target":4494,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":4353,"typeArguments":[{"type":"reference","target":4494,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}],"name":"MetaQuestionAdapter","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.last"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.last"}},{"id":4515,"name":"nth","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.ts","line":75,"character":4}],"signatures":[{"id":4516,"name":"nth","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.ts","line":75,"character":4}],"parameters":[{"id":4517,"name":"index","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":1046,"typeArguments":[{"type":"reference","target":4353,"typeArguments":[{"type":"reference","target":4494,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":4353,"typeArguments":[{"type":"reference","target":4494,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}],"name":"MetaQuestionAdapter","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.nth"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.nth"}}],"groups":[{"title":"Constructors","children":[4492]},{"title":"Methods","children":[4430,4533,4536,4543,4553,4519,4527,4497,4500,4504,4509,4511,4513,4515]}],"sources":[{"fileName":"packages/web/src/screenplay/models/PageElements.ts","line":21,"character":13}],"typeParameters":[{"id":4555,"name":"Native_Element_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"any"}}],"extendedTypes":[{"type":"reference","target":1408,"typeArguments":[{"type":"reference","target":4353,"typeArguments":[{"type":"reference","target":4494,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":4353,"typeArguments":[{"type":"reference","target":4494,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}],"name":"MetaList","package":"@serenity-js/core"}],"permalink":"/api/web/class/PageElements","previousId":4353,"nextId":4556},{"id":4556,"name":"PageElementsLocator","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":4557,"name":"fromDocumentRoot","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElementsLocator.ts","line":16,"character":11}],"signatures":[{"id":4558,"name":"fromDocumentRoot","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElementsLocator.ts","line":16,"character":11}],"typeParameter":[{"id":4559,"name":"NET","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":4560,"name":"selector","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":688,"typeArguments":[{"type":"reference","target":4788,"name":"Selector","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":4556,"typeArguments":[{"type":"reference","target":4559,"name":"NET","package":"@serenity-js/web","refersToTypeParameter":true}],"name":"PageElementsLocator","package":"@serenity-js/web"}}]},{"id":4621,"name":"describedAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"signatures":[{"id":4622,"name":"describedAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Changes the description of this object, as returned by ["},{"kind":"code","text":"`Describable.describedBy`"},{"kind":"text","text":"](/api/core/class/Describable/#describedBy)\\nand ["},{"kind":"code","text":"`Describable.toString`"},{"kind":"text","text":"](/api/core/class/Describable/#toString)."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"parameters":[{"id":4623,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Replaces the current description according to the following rules:\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is an ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable), it replaces the current description\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/), the current description is passed as "},{"kind":"code","text":"`context`"},{"kind":"text","text":" to "},{"kind":"code","text":"`description.of(context)`"},{"kind":"text","text":", and the result replaces the current description"}]},"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":1543,"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4353,"typeArguments":[{"type":"reference","target":4612,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElementsLocator.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}},{"type":"reference","target":939,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}]}}],"type":{"type":"intrinsic","name":"this"},"inheritedFrom":{"type":"reference","target":-1,"name":"Question.describedAs"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Question.describedAs"}},{"id":4624,"name":"as","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"signatures":[{"id":4625,"name":"as","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Maps this question to one of a different type.\\n\\n"},{"kind":"code","text":"```ts\\nQuestion.about(\'number returned as string\', actor => \'42\')   // returns: QuestionAdapter<string>\\n  .as(Number)                                                // returns: QuestionAdapter<number>\\n```"}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"typeParameter":[{"id":4626,"name":"O","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":4627,"name":"mapping","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":4628,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"signatures":[{"id":4629,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"parameters":[{"id":4630,"name":"answer","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"reference","target":4353,"typeArguments":[{"type":"reference","target":4612,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElementsLocator.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}}}],"type":{"type":"union","types":[{"type":"reference","target":4538,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4538,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reference","target":1041,"typeArguments":[{"type":"reference","target":4538,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Question.as"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Question.as"}},{"id":4631,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":4632,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":4633,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1049,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":600,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":4634,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":4635,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[4635]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Question.describedBy"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Question.describedBy"}},{"id":4641,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":4642,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Question.toString"},"implementationOf":{"type":"reference","target":-1,"name":"ChainableMetaQuestion.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Question.toString"},"implementationOf":{"type":"reference","target":-1,"name":"ChainableMetaQuestion.toString"}},{"id":4610,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElementsLocator.ts","line":27,"character":4}],"signatures":[{"id":4611,"name":"new PageElementsLocator","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElementsLocator.ts","line":27,"character":4}],"typeParameter":[{"id":4612,"name":"Native_Element_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"any"}}],"parameters":[{"id":4613,"name":"locator","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":688,"typeArguments":[{"type":"reference","target":4187,"typeArguments":[{"type":"reference","target":4612,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElementsLocator.Native_Element_Type","refersToTypeParameter":true},{"type":"intrinsic","name":"any"}],"name":"Locator","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":4556,"typeArguments":[{"type":"reference","target":4612,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElementsLocator.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElementsLocator","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"Question<Promise<Array<PageElement<Native_Element_Type>>>>.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"Question<Promise<Array<PageElement<Native_Element_Type>>>>.constructor"}},{"id":4615,"name":"of","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElementsLocator.ts","line":31,"character":4}],"signatures":[{"id":4616,"name":"of","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElementsLocator.ts","line":31,"character":4}],"parameters":[{"id":4617,"name":"parent","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":688,"typeArguments":[{"type":"reference","target":4353,"typeArguments":[{"type":"reference","target":4612,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElementsLocator.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"intersection","types":[{"type":"reference","target":939,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4353,"typeArguments":[{"type":"reference","target":4612,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElementsLocator.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"},{"type":"reference","target":1054,"typeArguments":[{"type":"reference","target":4353,"typeArguments":[{"type":"reference","target":4612,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElementsLocator.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":939,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4353,"typeArguments":[{"type":"reference","target":4612,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElementsLocator.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"name":"ChainableMetaQuestion","package":"@serenity-js/core"}]},"implementationOf":{"type":"reference","target":-1,"name":"ChainableMetaQuestion.of"}}],"implementationOf":{"type":"reference","target":-1,"name":"ChainableMetaQuestion.of"}},{"id":4618,"name":"answeredBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElementsLocator.ts","line":42,"character":10}],"signatures":[{"id":4619,"name":"answeredBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElementsLocator.ts","line":42,"character":10}],"parameters":[{"id":4620,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1049,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":600,"name":"UsesAbilities","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4353,"typeArguments":[{"type":"reference","target":4612,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElementsLocator.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Question.answeredBy"}}],"overwrites":{"type":"reference","target":-1,"name":"Question.answeredBy"}}],"groups":[{"title":"Constructors","children":[4610]},{"title":"Methods","children":[4557,4621,4624,4631,4641,4615,4618]}],"sources":[{"fileName":"packages/web/src/screenplay/models/PageElementsLocator.ts","line":12,"character":13}],"typeParameters":[{"id":4643,"name":"Native_Element_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"any"}}],"extendedTypes":[{"type":"reference","target":939,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4353,"typeArguments":[{"type":"reference","target":4612,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElementsLocator.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"implementedTypes":[{"type":"reference","target":1054,"typeArguments":[{"type":"reference","target":4353,"typeArguments":[{"type":"reference","target":4612,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElementsLocator.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":939,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4353,"typeArguments":[{"type":"reference","target":4612,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElementsLocator.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"name":"ChainableMetaQuestion","package":"@serenity-js/core"}],"permalink":"/api/web/class/PageElementsLocator","previousId":4429,"nextId":4644},{"id":4644,"name":"RootLocator","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"["},{"kind":"code","text":"`RootLocator`"},{"kind":"text","text":"](/api/web/class/RootLocator/) represents the context in which ["},{"kind":"code","text":"`Locator`"},{"kind":"text","text":"](/api/web/class/Locator/) looks for ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) or ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElements/).\\nThis context is either a parent element, or some representation of the top-level browsing context.\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Locator`"},{"kind":"text","text":"](/api/web/class/Locator/)\\n- ["},{"kind":"code","text":"`Page.locate`"},{"kind":"text","text":"](/api/web/class/Page/#locate)\\n- ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)\\n- ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElements/)"}]},"children":[{"id":4645,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":4646,"name":"new RootLocator","variant":"signature","kind":16384,"flags":{"isExternal":true},"typeParameter":[{"id":4647,"name":"Native_Element_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"type":{"type":"reference","target":4644,"typeArguments":[{"type":"reference","target":4647,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"RootLocator.Native_Element_Type","refersToTypeParameter":true}],"name":"RootLocator","package":"@serenity-js/web"}}]},{"id":4648,"name":"switchToFrame","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/RootLocator.ts","line":18,"character":20}],"signatures":[{"id":4649,"name":"switchToFrame","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/RootLocator.ts","line":18,"character":20}],"parameters":[{"id":4650,"name":"element","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4647,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"RootLocator.Native_Element_Type","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4651,"name":"switchToParentFrame","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/RootLocator.ts","line":19,"character":20}],"signatures":[{"id":4652,"name":"switchToParentFrame","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/RootLocator.ts","line":19,"character":20}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4653,"name":"switchToMainFrame","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/RootLocator.ts","line":20,"character":20}],"signatures":[{"id":4654,"name":"switchToMainFrame","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/RootLocator.ts","line":20,"character":20}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4655,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/RootLocator.ts","line":21,"character":20}],"signatures":[{"id":4656,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/RootLocator.ts","line":21,"character":20}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"implementationOf":{"type":"reference","target":-1,"name":"Optional.isPresent"}}],"implementationOf":{"type":"reference","target":-1,"name":"Optional.isPresent"}},{"id":4657,"name":"nativeElement","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/RootLocator.ts","line":23,"character":20}],"signatures":[{"id":4658,"name":"nativeElement","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/RootLocator.ts","line":23,"character":20}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Partial"},"typeArguments":[{"type":"reference","target":4647,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"RootLocator.Native_Element_Type","refersToTypeParameter":true}],"name":"Partial","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#partialtype"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4659,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/RootLocator.ts","line":25,"character":4}],"signatures":[{"id":4660,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/RootLocator.ts","line":25,"character":4}],"type":{"type":"intrinsic","name":"string"}}]},{"id":4661,"name":"[custom]","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/RootLocator.ts","line":29,"character":4}],"type":{"type":"reflection","declaration":{"id":4662,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/io/inspectedObject.ts","line":2,"character":84}],"signatures":[{"id":4663,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/io/inspectedObject.ts","line":2,"character":84}],"parameters":[{"id":4664,"name":"depth","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}},{"id":4665,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/util.d.ts","qualifiedName":"\\"util\\".InspectOptionsStylized"},"name":"InspectOptionsStylized","package":"@types/node","qualifiedName":"\\"util\\".InspectOptionsStylized"}},{"id":4666,"name":"inspect","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"query","queryType":{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/util.d.ts","qualifiedName":"\\"util\\".inspect"},"name":"inspect","package":"@types/node","qualifiedName":"\\"util\\".inspect","preferValues":true}}}],"type":{"type":"intrinsic","name":"string"}}]}},"defaultValue":"..."}],"groups":[{"title":"Constructors","children":[4645]},{"title":"Properties","children":[4661]},{"title":"Methods","children":[4648,4651,4653,4655,4657,4659]}],"sources":[{"fileName":"packages/web/src/screenplay/models/RootLocator.ts","line":17,"character":22}],"typeParameters":[{"id":4667,"name":"Native_Element_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"extendedBy":[{"type":"reference","target":4187,"name":"Locator"}],"implementedTypes":[{"type":"reference","target":936,"name":"Optional","package":"@serenity-js/core"}],"permalink":"/api/web/class/RootLocator","previousId":4556,"nextId":4668},{"id":4668,"name":"SelectOption","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Describes the ["},{"kind":"code","text":"`<option />`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option)\\nelements to select.\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`Select`"},{"kind":"text","text":"](/api/web/class/Select/)\\n- ["},{"kind":"code","text":"`Selected`"},{"kind":"text","text":"](/api/web/class/Selected/)\\n- ["},{"kind":"code","text":"`PageElement.selectOptions`"},{"kind":"text","text":"](/api/web/class/PageElement/#selectOptions)\\n- ["},{"kind":"code","text":"`PageElement.selectedOptions`"},{"kind":"text","text":"](/api/web/class/PageElement/#selectedOptions)"}]},"children":[{"id":4669,"name":"withLabel","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/SelectOption.ts","line":18,"character":11}],"signatures":[{"id":4670,"name":"withLabel","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/SelectOption.ts","line":18,"character":11}],"parameters":[{"id":4671,"name":"label","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":4668,"name":"SelectOption","package":"@serenity-js/web"}}]},{"id":4672,"name":"withValue","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/SelectOption.ts","line":22,"character":11}],"signatures":[{"id":4673,"name":"withValue","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/SelectOption.ts","line":22,"character":11}],"parameters":[{"id":4674,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":4668,"name":"SelectOption","package":"@serenity-js/web"}}]},{"id":4675,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/SelectOption.ts","line":26,"character":4}],"signatures":[{"id":4676,"name":"new SelectOption","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/SelectOption.ts","line":26,"character":4}],"parameters":[{"id":4677,"name":"label","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"id":4678,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"id":4679,"name":"selected","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}},{"id":4680,"name":"disabled","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"reference","target":4668,"name":"SelectOption","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"TinyType.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"TinyType.constructor"}},{"id":4681,"name":"label","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isOptional":true,"isReadonly":true},"sources":[{"fileName":"packages/web/src/screenplay/models/SelectOption.ts","line":27,"character":24}],"type":{"type":"intrinsic","name":"string"}},{"id":4682,"name":"value","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isOptional":true,"isReadonly":true},"sources":[{"fileName":"packages/web/src/screenplay/models/SelectOption.ts","line":28,"character":24}],"type":{"type":"intrinsic","name":"string"}},{"id":4683,"name":"selected","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isOptional":true,"isReadonly":true},"sources":[{"fileName":"packages/web/src/screenplay/models/SelectOption.ts","line":29,"character":24}],"type":{"type":"intrinsic","name":"boolean"}},{"id":4684,"name":"disabled","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isOptional":true,"isReadonly":true},"sources":[{"fileName":"packages/web/src/screenplay/models/SelectOption.ts","line":30,"character":24}],"type":{"type":"intrinsic","name":"boolean"}},{"id":4685,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/SelectOption.ts","line":35,"character":4}],"signatures":[{"id":4686,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/SelectOption.ts","line":35,"character":4}],"type":{"type":"intrinsic","name":"string"},"overwrites":{"type":"reference","target":-1,"name":"TinyType.toString"}}],"overwrites":{"type":"reference","target":-1,"name":"TinyType.toString"}},{"id":4687,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":4688,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":4689,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.equals"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.equals"}},{"id":4690,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":4691,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.toJSON"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.toJSON"}}],"groups":[{"title":"Constructors","children":[4675]},{"title":"Properties","children":[4681,4682,4683,4684]},{"title":"Methods","children":[4669,4672,4685,4687,4690]}],"sources":[{"fileName":"packages/web/src/screenplay/models/SelectOption.ts","line":16,"character":13}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}],"permalink":"/api/web/class/SelectOption","previousId":4644,"nextId":4798},{"id":4798,"name":"Switchable","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Describes a Serenity/JS model object that can be switched _to_ and switched back _from_\\nusing the [task](/api/core/class/Task/) to ["},{"kind":"code","text":"`Switch`"},{"kind":"text","text":"](/api/web/class/Switch/).\\n\\nExamples of switchable models include a ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/) and ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/).\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/)\\n- ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)\\n- ["},{"kind":"code","text":"`Switch`"},{"kind":"text","text":"](/api/web/class/Switch/)"}]},"children":[{"id":4799,"name":"switchTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Switchable.ts","line":23,"character":4}],"signatures":[{"id":4800,"name":"switchTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Switches the context to the object implementing this interface\\nand returns ["},{"kind":"code","text":"`SwitchableOrigin`"},{"kind":"text","text":"](/api/web/interface/SwitchableOrigin/) that allows for the context to be switched\\nback when needed."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Switchable.ts","line":23,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4801,"name":"SwitchableOrigin","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]}],"groups":[{"title":"Methods","children":[4799]}],"sources":[{"fileName":"packages/web/src/screenplay/models/Switchable.ts","line":16,"character":17}],"implementedBy":[{"type":"reference","target":4237,"name":"Page"},{"type":"reference","target":4353,"name":"PageElement"}],"permalink":"/api/web/interface/Switchable","previousId":4668,"nextId":4801},{"id":4801,"name":"SwitchableOrigin","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Enables the ["},{"kind":"code","text":"`Task`"},{"kind":"text","text":"](/api/core/class/Task/) to ["},{"kind":"code","text":"`Switch`"},{"kind":"text","text":"](/api/web/class/Switch/) to perform a sequence of activities\\nand switch back to the original context afterwards.\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`Switch`"},{"kind":"text","text":"](/api/web/class/Switch/)\\n- ["},{"kind":"code","text":"`Switchable`"},{"kind":"text","text":"](/api/web/interface/Switchable/)"}]},"children":[{"id":4802,"name":"switchBack","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/SwitchableOrigin.ts","line":17,"character":4}],"signatures":[{"id":4803,"name":"switchBack","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Switches the context back to the original ["},{"kind":"code","text":"`Switchable`"},{"kind":"text","text":"](/api/web/interface/Switchable/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/models/SwitchableOrigin.ts","line":17,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]}],"groups":[{"title":"Methods","children":[4802]}],"sources":[{"fileName":"packages/web/src/screenplay/models/SwitchableOrigin.ts","line":12,"character":17}],"permalink":"/api/web/interface/SwitchableOrigin","previousId":4798,"nextId":4013},{"id":4013,"name":"AbsentModalDialog","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"code","text":"`AbsentModalDialog`"},{"kind":"text","text":" is a [null object](https://en.wikipedia.org/wiki/Null_object_pattern)\\nrepresenting a ["},{"kind":"code","text":"`ModalDialog`"},{"kind":"text","text":"](/api/web/class/ModalDialog/) that hasn\'t appeared yet.\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`ModalDialog`"},{"kind":"text","text":"](/api/web/class/ModalDialog/)"}]},"children":[{"id":4027,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":4028,"name":"new AbsentModalDialog","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":4013,"name":"AbsentModalDialog","package":"@serenity-js/web"},"inheritedFrom":{"type":"reference","target":4098,"name":"ModalDialog.constructor"}}],"inheritedFrom":{"type":"reference","target":4097,"name":"ModalDialog.constructor"}},{"id":4029,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/AbsentModalDialog.ts","line":15,"character":10}],"signatures":[{"id":4030,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a promise that resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":"\\nwhen a modal dialog has been handled, so either accepted or dismissed.\\nReturns "},{"kind":"code","text":"`false`"},{"kind":"text","text":" for dialogs that haven\'t been handled yet.\\n\\nUseful when a JavaScript modal dialog is generated after a delay,\\ne.g. triggered by "},{"kind":"code","text":"`setTimeout`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/AbsentModalDialog.ts","line":15,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":4102,"name":"ModalDialog.isPresent"}}],"overwrites":{"type":"reference","target":4101,"name":"ModalDialog.isPresent"}},{"id":4031,"name":"message","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/AbsentModalDialog.ts","line":19,"character":10}],"signatures":[{"id":4032,"name":"message","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the message of the last modal dialog handled,\\nor rejects the promise with a ["},{"kind":"code","text":"`LogicError`"},{"kind":"text","text":"](/api/core/class/LogicError/)\\nwhen no modal dialogs have been observed yet."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Message of the last handled dialog, or a "},{"kind":"code","text":"`Promise`"},{"kind":"text","text":"\\n rejected with a ["},{"kind":"code","text":"`LogicError`"},{"kind":"text","text":"](/api/core/class/LogicError/)\\n when no dialog has been handled yet."}]}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/AbsentModalDialog.ts","line":19,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":4100,"name":"ModalDialog.message"}}],"overwrites":{"type":"reference","target":4099,"name":"ModalDialog.message"}},{"id":4033,"name":"state","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":199,"character":4}],"signatures":[{"id":4034,"name":"state","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns "},{"kind":"code","text":"`accepted`"},{"kind":"text","text":" or "},{"kind":"code","text":"`dismissed`"},{"kind":"text","text":" for dialogs that have been handled,\\nor "},{"kind":"code","text":"`absent`"},{"kind":"text","text":" for those that haven\'t been handled yet."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":199,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":4104,"name":"ModalDialog.state"}}],"inheritedFrom":{"type":"reference","target":4103,"name":"ModalDialog.state"}}],"groups":[{"title":"Constructors","children":[4027]},{"title":"Methods","children":[4029,4031,4033]}],"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/AbsentModalDialog.ts","line":14,"character":13}],"extendedTypes":[{"type":"reference","target":4083,"name":"ModalDialog","package":"@serenity-js/web"}],"permalink":"/api/web/class/AbsentModalDialog","previousId":4801,"nextId":4035},{"id":4035,"name":"AcceptedModalDialog","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"code","text":"`AcceptedModalDialog`"},{"kind":"text","text":" represents a ["},{"kind":"code","text":"`ModalDialog`"},{"kind":"text","text":"](/api/web/class/ModalDialog/) that has been accepted\\nvia ["},{"kind":"code","text":"`ModalDialog.acceptNext`"},{"kind":"text","text":"](/api/web/class/ModalDialog/#acceptNext).\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`ModalDialog`"},{"kind":"text","text":"](/api/web/class/ModalDialog/)"}]},"children":[{"id":4049,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/AcceptedModalDialog.ts","line":15,"character":4}],"signatures":[{"id":4050,"name":"new AcceptedModalDialog","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/AcceptedModalDialog.ts","line":15,"character":4}],"parameters":[{"id":4051,"name":"dialogMessage","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":4035,"name":"AcceptedModalDialog","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":4098,"name":"ModalDialog.constructor"}}],"overwrites":{"type":"reference","target":4097,"name":"ModalDialog.constructor"}},{"id":4053,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/AcceptedModalDialog.ts","line":20,"character":10}],"signatures":[{"id":4054,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a promise that resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":"\\nwhen a modal dialog has been handled, so either accepted or dismissed.\\nReturns "},{"kind":"code","text":"`false`"},{"kind":"text","text":" for dialogs that haven\'t been handled yet.\\n\\nUseful when a JavaScript modal dialog is generated after a delay,\\ne.g. triggered by "},{"kind":"code","text":"`setTimeout`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/AcceptedModalDialog.ts","line":20,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":4102,"name":"ModalDialog.isPresent"}}],"overwrites":{"type":"reference","target":4101,"name":"ModalDialog.isPresent"}},{"id":4055,"name":"message","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/AcceptedModalDialog.ts","line":24,"character":10}],"signatures":[{"id":4056,"name":"message","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the message of the last modal dialog handled,\\nor rejects the promise with a ["},{"kind":"code","text":"`LogicError`"},{"kind":"text","text":"](/api/core/class/LogicError/)\\nwhen no modal dialogs have been observed yet."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Message of the last handled dialog, or a "},{"kind":"code","text":"`Promise`"},{"kind":"text","text":"\\n rejected with a ["},{"kind":"code","text":"`LogicError`"},{"kind":"text","text":"](/api/core/class/LogicError/)\\n when no dialog has been handled yet."}]}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/AcceptedModalDialog.ts","line":24,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":4100,"name":"ModalDialog.message"}}],"overwrites":{"type":"reference","target":4099,"name":"ModalDialog.message"}},{"id":4057,"name":"state","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":199,"character":4}],"signatures":[{"id":4058,"name":"state","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns "},{"kind":"code","text":"`accepted`"},{"kind":"text","text":" or "},{"kind":"code","text":"`dismissed`"},{"kind":"text","text":" for dialogs that have been handled,\\nor "},{"kind":"code","text":"`absent`"},{"kind":"text","text":" for those that haven\'t been handled yet."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":199,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":4104,"name":"ModalDialog.state"}}],"inheritedFrom":{"type":"reference","target":4103,"name":"ModalDialog.state"}}],"groups":[{"title":"Constructors","children":[4049]},{"title":"Methods","children":[4053,4055,4057]}],"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/AcceptedModalDialog.ts","line":14,"character":13}],"extendedTypes":[{"type":"reference","target":4083,"name":"ModalDialog","package":"@serenity-js/web"}],"permalink":"/api/web/class/AcceptedModalDialog","previousId":4013,"nextId":4059},{"id":4059,"name":"DismissedModalDialog","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"code","text":"`DismissedModalDialog`"},{"kind":"text","text":" represents a ["},{"kind":"code","text":"`ModalDialog`"},{"kind":"text","text":"](/api/web/class/ModalDialog/) that has been dismissed\\nvia ["},{"kind":"code","text":"`ModalDialog.dismissNext`"},{"kind":"text","text":"](/api/web/class/ModalDialog/#dismissNext).\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`ModalDialog`"},{"kind":"text","text":"](/api/web/class/ModalDialog/)"}]},"children":[{"id":4073,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/DismissedModalDialog.ts","line":15,"character":4}],"signatures":[{"id":4074,"name":"new DismissedModalDialog","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/DismissedModalDialog.ts","line":15,"character":4}],"parameters":[{"id":4075,"name":"dialogMessage","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":4059,"name":"DismissedModalDialog","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":4098,"name":"ModalDialog.constructor"}}],"overwrites":{"type":"reference","target":4097,"name":"ModalDialog.constructor"}},{"id":4077,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/DismissedModalDialog.ts","line":20,"character":10}],"signatures":[{"id":4078,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a promise that resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":"\\nwhen a modal dialog has been handled, so either accepted or dismissed.\\nReturns "},{"kind":"code","text":"`false`"},{"kind":"text","text":" for dialogs that haven\'t been handled yet.\\n\\nUseful when a JavaScript modal dialog is generated after a delay,\\ne.g. triggered by "},{"kind":"code","text":"`setTimeout`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/DismissedModalDialog.ts","line":20,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":4102,"name":"ModalDialog.isPresent"}}],"overwrites":{"type":"reference","target":4101,"name":"ModalDialog.isPresent"}},{"id":4079,"name":"message","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/DismissedModalDialog.ts","line":24,"character":10}],"signatures":[{"id":4080,"name":"message","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the message of the last modal dialog handled,\\nor rejects the promise with a ["},{"kind":"code","text":"`LogicError`"},{"kind":"text","text":"](/api/core/class/LogicError/)\\nwhen no modal dialogs have been observed yet."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Message of the last handled dialog, or a "},{"kind":"code","text":"`Promise`"},{"kind":"text","text":"\\n rejected with a ["},{"kind":"code","text":"`LogicError`"},{"kind":"text","text":"](/api/core/class/LogicError/)\\n when no dialog has been handled yet."}]}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/DismissedModalDialog.ts","line":24,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":4100,"name":"ModalDialog.message"}}],"overwrites":{"type":"reference","target":4099,"name":"ModalDialog.message"}},{"id":4081,"name":"state","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":199,"character":4}],"signatures":[{"id":4082,"name":"state","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns "},{"kind":"code","text":"`accepted`"},{"kind":"text","text":" or "},{"kind":"code","text":"`dismissed`"},{"kind":"text","text":" for dialogs that have been handled,\\nor "},{"kind":"code","text":"`absent`"},{"kind":"text","text":" for those that haven\'t been handled yet."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":199,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":4104,"name":"ModalDialog.state"}}],"inheritedFrom":{"type":"reference","target":4103,"name":"ModalDialog.state"}}],"groups":[{"title":"Constructors","children":[4073]},{"title":"Methods","children":[4077,4079,4081]}],"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/DismissedModalDialog.ts","line":14,"character":13}],"extendedTypes":[{"type":"reference","target":4083,"name":"ModalDialog","package":"@serenity-js/web"}],"permalink":"/api/web/class/DismissedModalDialog","previousId":4035,"nextId":4083},{"id":4083,"name":"ModalDialog","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"Manages interactions with JavaScript modal dialog windows,\\ntriggered by [window.alert](https://developer.mozilla.org/en-US/docs/Web/API/Window/alert),\\n[window.confirm](https://developer.mozilla.org/en-US/docs/Web/API/Window/confirm),\\nor ["},{"kind":"code","text":"`window.prompt`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/API/Window/prompt),\\nand stores their "},{"kind":"code","text":"`message`"},{"kind":"text","text":" so that it can be asserted on once the dialog is handled.\\n\\nNote that in order to make handling modal windows\\nconsistent across the various Web integration tools (such as Playwright, Puppeteer,\\nWebdriverIO or Selenium), Serenity/JS works as follows:\\n- Serenity/JS dismisses any modal dialogs by default and stores their message so that it can be asserted on.\\n- This behaviour can be changed by invoking ["},{"kind":"code","text":"`ModalDialog.acceptNext`"},{"kind":"text","text":"](/api/web/class/ModalDialog/#acceptNext),\\n  ["},{"kind":"code","text":"`ModalDialog.acceptNextWithValue`"},{"kind":"text","text":"](/api/web/class/ModalDialog/#acceptNextWithValue),\\n  or ["},{"kind":"code","text":"`ModalDialog.dismissNext`"},{"kind":"text","text":"](/api/web/class/ModalDialog/#dismissNext)\\n  before the dialog is triggered, as per the below examples.\\n- Serenity/JS also allows you to "},{"kind":"code","text":"`Wait.until(ModalDialog, isPresent())`"},{"kind":"text","text":" so that you can synchronise your tests\\n  with modal dialogs that appear after a delay.\\n\\n## Example HTML widget\\n\\nIn the below example widget, clicking on the button results in a [confirmation dialog](https://developer.mozilla.org/en-US/docs/Web/API/Window/confirm)\\nappearing.\\n\\n"},{"kind":"code","text":"```html\\n<button id=\\"trigger\\" onclick=\\"trigger()\\">Trigger Alert</button>\\n<p id=\\"result\\"></p>\\n\\n<script>\\n  function trigger() {\\n    document.getElementById(\\"result\\").innerHTML = (\\n      function () {\\n        return confirm(\'Continue?\')\\n          ? \'accepted\'\\n          : \'dismissed\';\\n      }\\n    )();\\n  }\\n<\/script>\\n```"},{"kind":"text","text":"\\n\\n## Modal dialog gets dismissed by default\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { By, Click, Text, PageElement, ModalDialog } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nconst Example = {\\n  trigger: () =>\\n    PageElement.located(By.id(\'trigger\')).describedAs(\'the modal dialog trigger\'),\\n\\n  result: () =>\\n    PageElement.located(By.id(\'result\')).describedAs(\'result\'),\\n}\\n\\nawait actorCalled(\'Nick\').attemptsTo(\\n  Click.on(Example.trigger()),\\n\\n  Ensure.that(ModalDialog.lastDialogState(), equals(\'dismissed\')),\\n\\n  Ensure.that(Text.of(Example.result()), equals(\'dismissed\')),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Changing modal dialog handler\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { By, Click, Text, PageElement, ModalDialog } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nconst Example = {\\n  trigger: () =>\\n    PageElement.located(By.id(\'trigger\')).describedAs(\'the modal dialog trigger\'),\\n\\n  result: () =>\\n    PageElement.located(By.id(\'result\')).describedAs(\'result\'),\\n}\\n\\nawait actorCalled(\'Nick\').attemptsTo(\\n  ModalDialog.acceptNext(),\\n  // or: ModalDialog.acceptNextWithValue(\'some value\'),\\n  // or: ModalDialog.dismissNext(),\\n\\n  Click.on(Example.trigger),\\n\\n  Ensure.that(ModalDialog.lastDialogState(), equals(\'accepted\')),\\n\\n  Ensure.that(Text.of(Example.result), equals(\'accepted\')),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Optional`"},{"kind":"text","text":"](/api/core/interface/Optional/)"}]},"children":[{"id":4084,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":127,"character":11}],"signatures":[{"id":4085,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a promise that resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":"\\nwhen a modal dialog has been handled, so accepted or dismissed.\\nReturns "},{"kind":"code","text":"`false`"},{"kind":"text","text":" for dialogs that haven\'t been handled yet.\\n\\nUseful when a JavaScript modal dialog is generated after a delay,\\ne.g. triggered by "},{"kind":"code","text":"`setTimeout`"},{"kind":"text","text":".\\n\\n#### Example usage\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Wait } from \'@serenity-js/core\'\\nimport { Ensure, equals, isPresent } from \'@serenity-js/assertions\'\\nimport { ModalDialog } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Nick\').attemptsTo(\\n  ModalDialog.acceptNext(),\\n  Wait.until(ModalDialog, isPresent()),\\n  Ensure.that(ModalDialog.lastDialogState(), equals(\'accepted\')),\\n)\\n```"}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":127,"character":11}],"type":{"type":"reference","target":939,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}}]},{"id":4086,"name":"acceptNext","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":134,"character":11}],"signatures":[{"id":4087,"name":"acceptNext","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Produces an [interaction](/api/core/class/Interaction/) that invokes ["},{"kind":"code","text":"`ModalDialog.acceptNext`"},{"kind":"text","text":"](/api/web/class/ModalDialog/#acceptNext)."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":134,"character":11}],"type":{"type":"reference","target":793,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":4088,"name":"acceptNextWithValue","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":144,"character":11}],"signatures":[{"id":4089,"name":"acceptNextWithValue","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Produces an [interaction](/api/core/class/Interaction/) that invokes ["},{"kind":"code","text":"`ModalDialog.acceptNextWithValue`"},{"kind":"text","text":"](/api/web/class/ModalDialog/#acceptNextWithValue)."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":144,"character":11}],"parameters":[{"id":4090,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":688,"typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":793,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":4091,"name":"dismissNext","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":152,"character":11}],"signatures":[{"id":4092,"name":"dismissNext","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Produces an [interaction](/api/core/class/Interaction/) that invokes ["},{"kind":"code","text":"`ModalDialog.dismissNext`"},{"kind":"text","text":"](/api/web/class/ModalDialog/#dismissNext)."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":152,"character":11}],"type":{"type":"reference","target":793,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":4093,"name":"lastDialogMessage","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":160,"character":11}],"signatures":[{"id":4094,"name":"lastDialogMessage","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter) that resolves to ["},{"kind":"code","text":"`ModalDialog.message`"},{"kind":"text","text":"](/api/web/class/ModalDialog/#message) for the current ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/)."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":160,"character":11}],"type":{"type":"reference","target":1041,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":4095,"name":"lastDialogState","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":168,"character":11}],"signatures":[{"id":4096,"name":"lastDialogState","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter) that resolves to ["},{"kind":"code","text":"`ModalDialog.state`"},{"kind":"text","text":"](/api/web/class/ModalDialog/#state) for the current ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/)."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":168,"character":11}],"type":{"type":"reference","target":1041,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":4097,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":4098,"name":"new ModalDialog","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":4083,"name":"ModalDialog","package":"@serenity-js/web"}}]},{"id":4099,"name":"message","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":183,"character":13}],"signatures":[{"id":4100,"name":"message","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the message of the last modal dialog handled,\\nor rejects the promise with a ["},{"kind":"code","text":"`LogicError`"},{"kind":"text","text":"](/api/core/class/LogicError/)\\nwhen no modal dialogs have been observed yet."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Message of the last handled dialog, or a "},{"kind":"code","text":"`Promise`"},{"kind":"text","text":"\\n rejected with a ["},{"kind":"code","text":"`LogicError`"},{"kind":"text","text":"](/api/core/class/LogicError/)\\n when no dialog has been handled yet."}]}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":183,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4101,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":193,"character":13}],"signatures":[{"id":4102,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a promise that resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":"\\nwhen a modal dialog has been handled, so either accepted or dismissed.\\nReturns "},{"kind":"code","text":"`false`"},{"kind":"text","text":" for dialogs that haven\'t been handled yet.\\n\\nUseful when a JavaScript modal dialog is generated after a delay,\\ne.g. triggered by "},{"kind":"code","text":"`setTimeout`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":193,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"implementationOf":{"type":"reference","target":-1,"name":"Optional.isPresent"}}],"implementationOf":{"type":"reference","target":-1,"name":"Optional.isPresent"}},{"id":4103,"name":"state","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":199,"character":4}],"signatures":[{"id":4104,"name":"state","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns "},{"kind":"code","text":"`accepted`"},{"kind":"text","text":" or "},{"kind":"code","text":"`dismissed`"},{"kind":"text","text":" for dialogs that have been handled,\\nor "},{"kind":"code","text":"`absent`"},{"kind":"text","text":" for those that haven\'t been handled yet."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":199,"character":4}],"type":{"type":"intrinsic","name":"string"}}]}],"groups":[{"title":"Constructors","children":[4097]},{"title":"Methods","children":[4084,4086,4088,4091,4093,4095,4099,4101,4103]}],"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":103,"character":22}],"extendedBy":[{"type":"reference","target":4013,"name":"AbsentModalDialog"},{"type":"reference","target":4035,"name":"AcceptedModalDialog"},{"type":"reference","target":4059,"name":"DismissedModalDialog"}],"implementedTypes":[{"type":"reference","target":936,"name":"Optional","package":"@serenity-js/core"}],"permalink":"/api/web/class/ModalDialog","previousId":4059,"nextId":4105},{"id":4105,"name":"ModalDialogHandler","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"Represent the strategy to use with any upcoming ["},{"kind":"code","text":"`ModalDialog`"},{"kind":"text","text":"](/api/web/class/ModalDialog/) windows.\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`ModalDialog`"},{"kind":"text","text":"](/api/web/class/ModalDialog/)\\n- ["},{"kind":"code","text":"`Page.modalDialog`"},{"kind":"text","text":"](/api/web/class/Page/#modalDialog)"}]},"children":[{"id":4110,"name":"acceptNext","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialogHandler.ts","line":25,"character":13}],"signatures":[{"id":4111,"name":"acceptNext","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the handler to accept the next JavaScript modal dialog."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialogHandler.ts","line":25,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4112,"name":"acceptNextWithValue","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialogHandler.ts","line":31,"character":13}],"signatures":[{"id":4113,"name":"acceptNextWithValue","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the handler to accept the next JavaScript "},{"kind":"code","text":"`prompt``\\nwith a given `"},{"kind":"text","text":"text` value."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialogHandler.ts","line":31,"character":13}],"parameters":[{"id":4114,"name":"text","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4115,"name":"dismissNext","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialogHandler.ts","line":36,"character":13}],"signatures":[{"id":4116,"name":"dismissNext","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the handler to dismiss the next JavaScript modal dialog."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialogHandler.ts","line":36,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4117,"name":"reset","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialogHandler.ts","line":41,"character":13}],"signatures":[{"id":4118,"name":"reset","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resets the handler to its default state."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialogHandler.ts","line":41,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4119,"name":"last","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialogHandler.ts","line":47,"character":10}],"signatures":[{"id":4120,"name":"last","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the most recently handled ["},{"kind":"code","text":"`ModalDialog`"},{"kind":"text","text":"](/api/web/class/ModalDialog/),\\nor ["},{"kind":"code","text":"`AbsentModalDialog`"},{"kind":"text","text":"](/api/web/class/AbsentModalDialog/) when no dialogs have been handled yet."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialogHandler.ts","line":47,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4083,"name":"ModalDialog","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]}],"groups":[{"title":"Methods","children":[4110,4112,4115,4117,4119]}],"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialogHandler.ts","line":16,"character":22}],"permalink":"/api/web/class/ModalDialogHandler","previousId":4083,"nextId":4692},{"id":4692,"name":"By","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"code","text":"`By`"},{"kind":"text","text":" produces a ["},{"kind":"code","text":"`Selector`"},{"kind":"text","text":"](/api/web/class/Selector/) used to locate a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) or ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElements/) on a web page.\\nSelectors can be defined using a static value or a ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/) to be resolved at runtime.\\n\\n### Defining a selector using a static value\\n\\n"},{"kind":"code","text":"```typescript\\nimport { PageElement, By } from \'@serenity-js/web\'\\n\\nclass LoginForm {\\n  static usernameField = () =>\\n    PageElement.located(By.id(\'username\'))              // locate element by its id\\n      .describedAs(\'username field\')\\n\\n  static passwordField = () =>\\n    PageElement.of(By.css(\'[data-test=\\"password\\"]\'))    // locate element using a CSS selector\\n      .describedAs(\'password field\')\\n}\\n```"},{"kind":"text","text":"\\n\\n### Defining a selector using a Question\\n\\nEach method on this class accepts an ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable) to allow for dynamic resolution of the selector.\\nThis can be useful when the selector is not known at the time of writing the test, or when the selector\\nneeds to be calculated based on the state of the system under test.\\n\\nThe example below demonstrates how to use ["},{"kind":"code","text":"`q`"},{"kind":"text","text":"](/api/core/function/q/) to define a selector that includes a dynamic value.\\n\\n"},{"kind":"code","text":"```typescript\\nimport { q } from \'@serenity-js/core\'\\nimport { PageElement, By } from \'@serenity-js/web\'\\n\\nclass FormField {\\n  static withTestId = (id: Answerable<string>) =>\\n    PageElement.of(By.css(q`input[data-test-id=\\"${ id }\\"]`))\\n      .describedAs(\'form field\')\\n}\\n\\n```"},{"kind":"text","text":"\\n\\n### Learn more\\n- [Page Element Query Language](/handbook/web-testing/page-element-query-language)\\n- ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)\\n- ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElements/)\\n- ["},{"kind":"code","text":"`q`"},{"kind":"text","text":"](/api/core/function/q/)"}]},"children":[{"id":4693,"name":"css","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/By.ts","line":66,"character":11}],"signatures":[{"id":4694,"name":"css","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Locates a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) using a [CSS selector](https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Selectors)."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/By.ts","line":66,"character":11}],"parameters":[{"id":4695,"name":"selector","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":939,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4714,"name":"ByCss","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}}]},{"id":4696,"name":"cssContainingText","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/By.ts","line":80,"character":11}],"signatures":[{"id":4697,"name":"cssContainingText","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Locates a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) with a given ["},{"kind":"code","text":"`innerText`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/innerText)\\nusing a [CSS selector](https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Selectors)."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/By.ts","line":80,"character":11}],"parameters":[{"id":4698,"name":"selector","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":4699,"name":"text","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":939,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4726,"name":"ByCssContainingText","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}}]},{"id":4700,"name":"deepCss","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/By.ts","line":94,"character":11}],"signatures":[{"id":4701,"name":"deepCss","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Locates a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) using a [CSS selector](https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Selectors)\\ncapable of piercing [shadow DOM](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_shadow_DOM)-piercing"}]},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/By.ts","line":94,"character":11}],"parameters":[{"id":4702,"name":"selector","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":939,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4714,"name":"ByCss","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}}]},{"id":4703,"name":"id","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/By.ts","line":106,"character":11}],"signatures":[{"id":4704,"name":"id","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Locates a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) using its [id](https://developer.mozilla.org/en-US/docs/Web/CSS/ID_selectors)."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/By.ts","line":106,"character":11}],"parameters":[{"id":4705,"name":"selector","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":939,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4752,"name":"ById","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}}]},{"id":4706,"name":"tagName","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/By.ts","line":118,"character":11}],"signatures":[{"id":4707,"name":"tagName","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Locates a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) using the name of its [HTML tag](https://developer.mozilla.org/en-US/docs/Web/HTML/Element)."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/By.ts","line":118,"character":11}],"parameters":[{"id":4708,"name":"selector","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":939,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4764,"name":"ByTagName","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}}]},{"id":4709,"name":"xpath","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/By.ts","line":130,"character":11}],"signatures":[{"id":4710,"name":"xpath","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Locates a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) using an [XPath selector](https://developer.mozilla.org/en-US/docs/Web/XPath)."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/By.ts","line":130,"character":11}],"parameters":[{"id":4711,"name":"selector","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":939,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4776,"name":"ByXPath","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}}]},{"id":4712,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":4713,"name":"new By","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":4692,"name":"By","package":"@serenity-js/web"}}]}],"groups":[{"title":"Constructors","children":[4712]},{"title":"Methods","children":[4693,4696,4700,4703,4706,4709]}],"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/By.ts","line":59,"character":13}],"permalink":"/api/web/class/By","previousId":4105,"nextId":4714},{"id":4714,"name":"ByCss","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Locates a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) using a [CSS selector](https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Selectors).\\n\\n**Pro tip:** Instantiate using ["},{"kind":"code","text":"`By.css`"},{"kind":"text","text":"](/api/web/class/By/#css)"}]},"children":[{"id":4715,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByCss.ts","line":11,"character":4}],"signatures":[{"id":4716,"name":"new ByCss","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByCss.ts","line":11,"character":4}],"parameters":[{"id":4717,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":4714,"name":"ByCss","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":4790,"name":"Selector.constructor"}}],"overwrites":{"type":"reference","target":4789,"name":"Selector.constructor"}},{"id":4718,"name":"value","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByCss.ts","line":11,"character":32}],"type":{"type":"intrinsic","name":"string"}},{"id":4719,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/Selector.ts","line":11,"character":4}],"signatures":[{"id":4720,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/Selector.ts","line":11,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":4792,"name":"Selector.toString"}}],"inheritedFrom":{"type":"reference","target":4791,"name":"Selector.toString"}},{"id":4721,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":4722,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":4723,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":4794,"name":"Selector.equals"}}],"inheritedFrom":{"type":"reference","target":4793,"name":"Selector.equals"}},{"id":4724,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":4725,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":4797,"name":"Selector.toJSON"}}],"inheritedFrom":{"type":"reference","target":4796,"name":"Selector.toJSON"}}],"groups":[{"title":"Constructors","children":[4715]},{"title":"Properties","children":[4718]},{"title":"Methods","children":[4719,4721,4724]}],"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByCss.ts","line":10,"character":13}],"extendedTypes":[{"type":"reference","target":4788,"name":"Selector","package":"@serenity-js/web"}],"permalink":"/api/web/class/ByCss","previousId":4692,"nextId":4726},{"id":4726,"name":"ByCssContainingText","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Locates a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) with a given ["},{"kind":"code","text":"`innerText`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/innerText)\\nusing a [CSS selector](https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Selectors).\\n\\n**Pro tip:** Instantiate using ["},{"kind":"code","text":"`By.cssContainingText`"},{"kind":"text","text":"](/api/web/class/By/#cssContainingText)"}]},"children":[{"id":4727,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByCssContainingText.ts","line":12,"character":4}],"signatures":[{"id":4728,"name":"new ByCssContainingText","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByCssContainingText.ts","line":12,"character":4}],"parameters":[{"id":4729,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":4730,"name":"text","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":4726,"name":"ByCssContainingText","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":4790,"name":"Selector.constructor"}}],"overwrites":{"type":"reference","target":4789,"name":"Selector.constructor"}},{"id":4731,"name":"value","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByCssContainingText.ts","line":12,"character":32}],"type":{"type":"intrinsic","name":"string"}},{"id":4732,"name":"text","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByCssContainingText.ts","line":12,"character":63}],"type":{"type":"intrinsic","name":"string"}},{"id":4733,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/Selector.ts","line":11,"character":4}],"signatures":[{"id":4734,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/Selector.ts","line":11,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":4792,"name":"Selector.toString"}}],"inheritedFrom":{"type":"reference","target":4791,"name":"Selector.toString"}},{"id":4735,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":4736,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":4737,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":4794,"name":"Selector.equals"}}],"inheritedFrom":{"type":"reference","target":4793,"name":"Selector.equals"}},{"id":4738,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":4739,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":4797,"name":"Selector.toJSON"}}],"inheritedFrom":{"type":"reference","target":4796,"name":"Selector.toJSON"}}],"groups":[{"title":"Constructors","children":[4727]},{"title":"Properties","children":[4731,4732]},{"title":"Methods","children":[4733,4735,4738]}],"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByCssContainingText.ts","line":11,"character":13}],"extendedTypes":[{"type":"reference","target":4788,"name":"Selector","package":"@serenity-js/web"}],"permalink":"/api/web/class/ByCssContainingText","previousId":4714,"nextId":4740},{"id":4740,"name":"ByDeepCss","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Locates a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) using a [CSS selector](https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Selectors)\\ncapable of piercing [shadow DOM](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_shadow_DOM)-piercing\\n\\n**Pro tip:** Instantiate using ["},{"kind":"code","text":"`By.deepCss`"},{"kind":"text","text":"](/api/web/class/By/#deepCss)"}]},"children":[{"id":4741,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByDeepCss.ts","line":12,"character":4}],"signatures":[{"id":4742,"name":"new ByDeepCss","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByDeepCss.ts","line":12,"character":4}],"parameters":[{"id":4743,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":4740,"name":"ByDeepCss","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":4790,"name":"Selector.constructor"}}],"overwrites":{"type":"reference","target":4789,"name":"Selector.constructor"}},{"id":4744,"name":"value","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByDeepCss.ts","line":12,"character":32}],"type":{"type":"intrinsic","name":"string"}},{"id":4745,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/Selector.ts","line":11,"character":4}],"signatures":[{"id":4746,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/Selector.ts","line":11,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":4792,"name":"Selector.toString"}}],"inheritedFrom":{"type":"reference","target":4791,"name":"Selector.toString"}},{"id":4747,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":4748,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":4749,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":4794,"name":"Selector.equals"}}],"inheritedFrom":{"type":"reference","target":4793,"name":"Selector.equals"}},{"id":4750,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":4751,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":4797,"name":"Selector.toJSON"}}],"inheritedFrom":{"type":"reference","target":4796,"name":"Selector.toJSON"}}],"groups":[{"title":"Constructors","children":[4741]},{"title":"Properties","children":[4744]},{"title":"Methods","children":[4745,4747,4750]}],"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByDeepCss.ts","line":11,"character":13}],"extendedTypes":[{"type":"reference","target":4788,"name":"Selector","package":"@serenity-js/web"}],"permalink":"/api/web/class/ByDeepCss","previousId":4726,"nextId":4752},{"id":4752,"name":"ById","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Locates a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) using its [id](https://developer.mozilla.org/en-US/docs/Web/CSS/ID_selectors).\\n\\n**Pro tip:** Instantiate using ["},{"kind":"code","text":"`By.id`"},{"kind":"text","text":"](/api/web/class/By/#id)"}]},"children":[{"id":4753,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ById.ts","line":11,"character":4}],"signatures":[{"id":4754,"name":"new ById","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ById.ts","line":11,"character":4}],"parameters":[{"id":4755,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":4752,"name":"ById","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":4790,"name":"Selector.constructor"}}],"overwrites":{"type":"reference","target":4789,"name":"Selector.constructor"}},{"id":4756,"name":"value","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ById.ts","line":11,"character":32}],"type":{"type":"intrinsic","name":"string"}},{"id":4757,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/Selector.ts","line":11,"character":4}],"signatures":[{"id":4758,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/Selector.ts","line":11,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":4792,"name":"Selector.toString"}}],"inheritedFrom":{"type":"reference","target":4791,"name":"Selector.toString"}},{"id":4759,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":4760,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":4761,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":4794,"name":"Selector.equals"}}],"inheritedFrom":{"type":"reference","target":4793,"name":"Selector.equals"}},{"id":4762,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":4763,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":4797,"name":"Selector.toJSON"}}],"inheritedFrom":{"type":"reference","target":4796,"name":"Selector.toJSON"}}],"groups":[{"title":"Constructors","children":[4753]},{"title":"Properties","children":[4756]},{"title":"Methods","children":[4757,4759,4762]}],"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ById.ts","line":10,"character":13}],"extendedTypes":[{"type":"reference","target":4788,"name":"Selector","package":"@serenity-js/web"}],"permalink":"/api/web/class/ById","previousId":4740,"nextId":4764},{"id":4764,"name":"ByTagName","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Locates a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) using the name of its [HTML tag](https://developer.mozilla.org/en-US/docs/Web/HTML/Element).\\n\\n**Pro tip:** Instantiate using ["},{"kind":"code","text":"`By.tagName`"},{"kind":"text","text":"](/api/web/class/By/#tagName)"}]},"children":[{"id":4765,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByTagName.ts","line":11,"character":4}],"signatures":[{"id":4766,"name":"new ByTagName","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByTagName.ts","line":11,"character":4}],"parameters":[{"id":4767,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":4764,"name":"ByTagName","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":4790,"name":"Selector.constructor"}}],"overwrites":{"type":"reference","target":4789,"name":"Selector.constructor"}},{"id":4768,"name":"value","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByTagName.ts","line":11,"character":32}],"type":{"type":"intrinsic","name":"string"}},{"id":4769,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/Selector.ts","line":11,"character":4}],"signatures":[{"id":4770,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/Selector.ts","line":11,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":4792,"name":"Selector.toString"}}],"inheritedFrom":{"type":"reference","target":4791,"name":"Selector.toString"}},{"id":4771,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":4772,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":4773,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":4794,"name":"Selector.equals"}}],"inheritedFrom":{"type":"reference","target":4793,"name":"Selector.equals"}},{"id":4774,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":4775,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":4797,"name":"Selector.toJSON"}}],"inheritedFrom":{"type":"reference","target":4796,"name":"Selector.toJSON"}}],"groups":[{"title":"Constructors","children":[4765]},{"title":"Properties","children":[4768]},{"title":"Methods","children":[4769,4771,4774]}],"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByTagName.ts","line":10,"character":13}],"extendedTypes":[{"type":"reference","target":4788,"name":"Selector","package":"@serenity-js/web"}],"permalink":"/api/web/class/ByTagName","previousId":4752,"nextId":4776},{"id":4776,"name":"ByXPath","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Locates a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) using an [XPath selector](https://developer.mozilla.org/en-US/docs/Web/XPath).\\n\\n**Pro tip:** Instantiate using ["},{"kind":"code","text":"`By.xpath`"},{"kind":"text","text":"](/api/web/class/By/#xpath)"}]},"children":[{"id":4777,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByXPath.ts","line":11,"character":4}],"signatures":[{"id":4778,"name":"new ByXPath","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByXPath.ts","line":11,"character":4}],"parameters":[{"id":4779,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":4776,"name":"ByXPath","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":4790,"name":"Selector.constructor"}}],"overwrites":{"type":"reference","target":4789,"name":"Selector.constructor"}},{"id":4780,"name":"value","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByXPath.ts","line":11,"character":32}],"type":{"type":"intrinsic","name":"string"}},{"id":4781,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/Selector.ts","line":11,"character":4}],"signatures":[{"id":4782,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/Selector.ts","line":11,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":4792,"name":"Selector.toString"}}],"inheritedFrom":{"type":"reference","target":4791,"name":"Selector.toString"}},{"id":4783,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":4784,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":4785,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":4794,"name":"Selector.equals"}}],"inheritedFrom":{"type":"reference","target":4793,"name":"Selector.equals"}},{"id":4786,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":4787,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":4797,"name":"Selector.toJSON"}}],"inheritedFrom":{"type":"reference","target":4796,"name":"Selector.toJSON"}}],"groups":[{"title":"Constructors","children":[4777]},{"title":"Properties","children":[4780]},{"title":"Methods","children":[4781,4783,4786]}],"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByXPath.ts","line":10,"character":13}],"extendedTypes":[{"type":"reference","target":4788,"name":"Selector","package":"@serenity-js/web"}],"permalink":"/api/web/class/ByXPath","previousId":4764,"nextId":4788},{"id":4788,"name":"Selector","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"Describes a selector you use to identify a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) or a group of ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElements/)."}]},"children":[{"id":4789,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":4790,"name":"new Selector","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":4788,"name":"Selector","package":"@serenity-js/web"},"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.constructor"}},{"id":4791,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/Selector.ts","line":11,"character":4}],"signatures":[{"id":4792,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/Selector.ts","line":11,"character":4}],"type":{"type":"intrinsic","name":"string"},"overwrites":{"type":"reference","target":-1,"name":"TinyType.toString"}}],"overwrites":{"type":"reference","target":-1,"name":"TinyType.toString"}},{"id":4793,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":4794,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":4795,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.equals"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.equals"}},{"id":4796,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":4797,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.toJSON"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.toJSON"}}],"groups":[{"title":"Constructors","children":[4789]},{"title":"Methods","children":[4791,4793,4796]}],"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/Selector.ts","line":9,"character":22}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}],"extendedBy":[{"type":"reference","target":4714,"name":"ByCss"},{"type":"reference","target":4726,"name":"ByCssContainingText"},{"type":"reference","target":4740,"name":"ByDeepCss"},{"type":"reference","target":4752,"name":"ById"},{"type":"reference","target":4764,"name":"ByTagName"},{"type":"reference","target":4776,"name":"ByXPath"}],"permalink":"/api/web/class/Selector","previousId":4776,"nextId":4804},{"id":4804,"name":"Attribute","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Uses the [actor\'s](/api/core/class/Actor/) [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/) to retrieve\\nthe value of the specified HTML attribute of a given ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/).\\n\\n## Example widget\\n\\n"},{"kind":"code","text":"```html\\n<ul id=\\"shopping-list\\" data-items-left=\\"2\\">\\n  <li data-state=\\"bought\\">Coffee<li>\\n  <li data-state=\\"buy\\">Honey<li>\\n  <li data-state=\\"buy\\">Chocolate<li>\\n</ul>\\n```"},{"kind":"text","text":"\\n\\n## Retrieve an HTML attribute of a given ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { Attribute, By, PageElement } from \'@serenity-js/web\'\\n\\nconst shoppingList = () =>\\n  PageElement.located(By.id(\'shopping-list\'))\\n    .describedAs(\'shopping list\')\\n\\nawait actorCalled(\'Lisa\')\\n  .attemptsTo(\\n    Ensure.that(\\n      Attribute.called(\'data-items-left\').of(shoppingList()),\\n      equals(\'2\')\\n    ),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Using "},{"kind":"code","text":"`Attribute`"},{"kind":"text","text":" as ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter)\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { Attribute, By, PageElement } from \'@serenity-js/web\'\\n\\nconst shoppingList = () =>\\n  PageElement.located(By.css(\'#shopping-list\'))\\n    .describedAs(\'shopping list\')\\n\\nawait actorCalled(\'Lisa\')\\n  .attemptsTo(\\n    Ensure.that(\\n      Attribute.called(\'id\').of(shoppingList()).toLocaleUpperCase(),\\n      equals(\'SHOPPING-LIST\')\\n    ),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Using as filter in [Page Element Query Language](/handbook/web-testing/page-element-query-language/)\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, includes } from \'@serenity-js/assertions\'\\nimport { Attribute, By, PageElements } from \'@serenity-js/web\'\\n\\nclass ShoppingList {\\n  static items = () =>\\n    PageElements.located(By.css(\'#shopping-list li\'))\\n      .describedAs(\'items\')\\n\\n  static outstandingItems = () =>\\n    ShoppingList.items()\\n      .where(\\n        Attribute.called(\'data-state\'),\\n        includes(\'buy\')\\n      )\\n}\\n\\nawait actorCalled(\'Lisa\')\\n.whoCan(BrowseTheWebWithWebdriverIO.using(browser))\\n.attemptsTo(\\n  Ensure.that(\\n    Text.ofAll(ShoppingList.outstandingItems()),\\n    equals([ \'Honey\', \'Chocolate\' ])\\n  ),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\n- ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/)\\n- ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter)\\n- ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/)"}]},"children":[{"id":4805,"name":"called","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/questions/Attribute.ts","line":110,"character":11}],"signatures":[{"id":4806,"name":"called","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/) that uses\\nthe [actor\'s](/api/core/class/Actor/) [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/) to retrieve\\nthe value of the specified HTML attribute of a given ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)."}]},"sources":[{"fileName":"packages/web/src/screenplay/questions/Attribute.ts","line":110,"character":11}],"typeParameter":[{"id":4807,"name":"NET","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"any"}}],"parameters":[{"id":4808,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The name of the attribute to retrieve"}]},"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":4804,"typeArguments":[{"type":"reference","target":4807,"name":"NET","package":"@serenity-js/web","refersToTypeParameter":true}],"name":"Attribute","package":"@serenity-js/web"}}]},{"id":4873,"name":"describedAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"signatures":[{"id":4874,"name":"describedAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Changes the description of this object, as returned by ["},{"kind":"code","text":"`Describable.describedBy`"},{"kind":"text","text":"](/api/core/class/Describable/#describedBy)\\nand ["},{"kind":"code","text":"`Describable.toString`"},{"kind":"text","text":"](/api/core/class/Describable/#toString)."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"parameters":[{"id":4875,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Replaces the current description according to the following rules:\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is an ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable), it replaces the current description\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/), the current description is passed as "},{"kind":"code","text":"`context`"},{"kind":"text","text":" to "},{"kind":"code","text":"`description.of(context)`"},{"kind":"text","text":", and the result replaces the current description"}]},"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":1543,"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reference","target":939,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}]}}],"type":{"type":"intrinsic","name":"this"},"inheritedFrom":{"type":"reference","target":-1,"name":"Question.describedAs"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Question.describedAs"}},{"id":4876,"name":"as","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"signatures":[{"id":4877,"name":"as","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Maps this question to one of a different type.\\n\\n"},{"kind":"code","text":"```ts\\nQuestion.about(\'number returned as string\', actor => \'42\')   // returns: QuestionAdapter<string>\\n  .as(Number)                                                // returns: QuestionAdapter<number>\\n```"}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"typeParameter":[{"id":4878,"name":"O","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":4879,"name":"mapping","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":4880,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"signatures":[{"id":4881,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"parameters":[{"id":4882,"name":"answer","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"union","types":[{"type":"reference","target":4538,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4538,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reference","target":1041,"typeArguments":[{"type":"reference","target":4538,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Question.as"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Question.as"}},{"id":4883,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":4884,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":4885,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1049,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":600,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":4886,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":4887,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[4887]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Question.describedBy"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Question.describedBy"}},{"id":4893,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":4894,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Question.toString"},"implementationOf":{"type":"reference","target":-1,"name":"MetaQuestion.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Question.toString"},"implementationOf":{"type":"reference","target":-1,"name":"MetaQuestion.toString"}},{"id":4865,"name":"of","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/questions/Attribute.ts","line":132,"character":4}],"signatures":[{"id":4866,"name":"of","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves to the value of an HTML attribute of the "},{"kind":"code","text":"`pageElement`"},{"kind":"text","text":".\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/questions/Attribute.ts","line":132,"character":4}],"parameters":[{"id":4867,"name":"pageElement","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":4353,"typeArguments":[{"type":"reference","target":4895,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Attribute.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":1041,"typeArguments":[{"type":"reference","target":4353,"typeArguments":[{"type":"reference","target":4895,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Attribute.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}],"name":"QuestionAdapter","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":1046,"typeArguments":[{"type":"reference","target":4353,"typeArguments":[{"type":"reference","target":4895,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Attribute.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"intrinsic","name":"string"}],"name":"MetaQuestionAdapter","package":"@serenity-js/core"},"implementationOf":{"type":"reference","target":-1,"name":"MetaQuestion.of"}}],"implementationOf":{"type":"reference","target":-1,"name":"MetaQuestion.of"}},{"id":4868,"name":"answeredBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/questions/Attribute.ts","line":146,"character":10}],"signatures":[{"id":4869,"name":"answeredBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/web/src/screenplay/questions/Attribute.ts","line":146,"character":10}],"parameters":[{"id":4870,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1049,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":600,"name":"UsesAbilities","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Question.answeredBy"}}],"overwrites":{"type":"reference","target":-1,"name":"Question.answeredBy"}},{"id":4871,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/questions/Attribute.ts","line":161,"character":4}],"signatures":[{"id":4872,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/web/src/screenplay/questions/Attribute.ts","line":161,"character":4}],"type":{"type":"reference","target":1041,"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"QuestionAdapter","package":"@serenity-js/core"},"implementationOf":{"type":"reference","target":-1,"name":"Optional.isPresent"}}],"implementationOf":{"type":"reference","target":-1,"name":"Optional.isPresent"}}],"groups":[{"title":"Methods","children":[4805,4873,4876,4883,4893,4865,4868,4871]}],"sources":[{"fileName":"packages/web/src/screenplay/questions/Attribute.ts","line":98,"character":13}],"typeParameters":[{"id":4895,"name":"Native_Element_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"extendedTypes":[{"type":"reference","target":939,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"implementedTypes":[{"type":"reference","target":1543,"typeArguments":[{"type":"reference","target":4353,"typeArguments":[{"type":"reference","target":4895,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Attribute.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":939,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"},{"type":"reference","target":936,"name":"Optional","package":"@serenity-js/core"}],"permalink":"/api/web/class/Attribute","previousId":4788,"nextId":4896},{"id":4896,"name":"ComputedStyle","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Uses the [actor\'s](/api/core/class/Actor/) [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/) to retrieve\\nthe value of the specified computed style property of a given ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/).\\n\\n## Example widget\\n\\n"},{"kind":"code","text":"```html\\n<ul id=\\"shopping-list\\" style=\\"display: block\\">\\n  <li style=\\"display: block\\">Coffee<li>\\n  <li style=\\"display: none\\">Honey<li>\\n  <li style=\\"display: block\\">Chocolate<li>\\n</ul>\\n```"},{"kind":"text","text":"\\n\\n## Retrieve a computed style property of a given ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { ComputedStyle, By, PageElement } from \'@serenity-js/web\'\\n\\nconst shoppingList = () =>\\n  PageElement.located(By.id(\'shopping-list\'))\\n     .describedAs(\'shopping list\')\\n\\nawait actorCalled(\'Lisa\').attemptsTo(\\n  Ensure.that(\\n    ComputedStyle.called(\'display\').of(shoppingList()),\\n    equals(\'block\')\\n  ),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Using "},{"kind":"code","text":"`ComputedStyle`"},{"kind":"text","text":" as ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter)\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { Attribute, By, PageElement } from \'@serenity-js/web\'\\n\\nconst shoppingList = () =>\\n  PageElement.located(By.css(\'#shopping-list\'))\\n    .describedAs(\'shopping list\')\\n\\nawait actorCalled(\'Lisa\').attemptsTo(\\n  Ensure.that(\\n    ComputedStyle.called(\'display\').of(shoppingList()).toLocaleUpperCase(),\\n    equals(\'BLOCK\')\\n  ),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Using as filter in [Page Element Query Language](/handbook/web-testing/page-element-query-language/)\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, includes } from \'@serenity-js/assertions\'\\nimport { Attribute, By, PageElements } from \'@serenity-js/web\'\\n\\nclass ShoppingList {\\n  static items = () =>\\n    PageElements.located(By.css(\'#shopping-list li\'))\\n      .describedAs(\'items\')\\n\\n  static outstandingItems = () =>\\n    ShoppingList.items()\\n      .where(\\n        ComputedStyle.called(\'display\'),\\n        equals(\'block\')\\n      )\\n}\\n\\nawait actorCalled(\'Lisa\')\\n .whoCan(BrowseTheWebWithWebdriverIO.using(browser))\\n .attemptsTo(\\n   Ensure.that(\\n     Text.ofAll(ShoppingList.outstandingItems()),\\n     equals([ \'Honey\', \'Chocolate\' ])\\n   ),\\n )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\n- ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/)\\n- ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter)\\n- ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/)"}]},"children":[{"id":4897,"name":"called","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/questions/ComputedStyle.ts","line":116,"character":11}],"signatures":[{"id":4898,"name":"called","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/) that uses\\nthe [actor\'s](/api/core/class/Actor/) [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/) to retrieve\\nthe value of the specified computed style property of a given ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)."}]},"sources":[{"fileName":"packages/web/src/screenplay/questions/ComputedStyle.ts","line":116,"character":11}],"typeParameter":[{"id":4899,"name":"NET","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"any"}}],"parameters":[{"id":4900,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The name of the computed style property to retrieve"}]},"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":4896,"typeArguments":[{"type":"reference","target":4899,"name":"NET","package":"@serenity-js/web","refersToTypeParameter":true}],"name":"ComputedStyle","package":"@serenity-js/web"}}]},{"id":4968,"name":"describedAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"signatures":[{"id":4969,"name":"describedAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Changes the description of this object, as returned by ["},{"kind":"code","text":"`Describable.describedBy`"},{"kind":"text","text":"](/api/core/class/Describable/#describedBy)\\nand ["},{"kind":"code","text":"`Describable.toString`"},{"kind":"text","text":"](/api/core/class/Describable/#toString)."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"parameters":[{"id":4970,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Replaces the current description according to the following rules:\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is an ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable), it replaces the current description\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/), the current description is passed as "},{"kind":"code","text":"`context`"},{"kind":"text","text":" to "},{"kind":"code","text":"`description.of(context)`"},{"kind":"text","text":", and the result replaces the current description"}]},"type":{"type":"union","types":[{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":1543,"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reference","target":939,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}]}}],"type":{"type":"intrinsic","name":"this"},"inheritedFrom":{"type":"reference","target":-1,"name":"Question.describedAs"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Question.describedAs"}},{"id":4971,"name":"as","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"signatures":[{"id":4972,"name":"as","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Maps this question to one of a different type.\\n\\n"},{"kind":"code","text":"```ts\\nQuestion.about(\'number returned as string\', actor => \'42\')   // returns: QuestionAdapter<string>\\n  .as(Number)                                                // returns: QuestionAdapter<number>\\n```"}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"typeParameter":[{"id":4973,"name":"O","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":4974,"name":"mapping","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":4975,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"signatures":[{"id":4976,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"parameters":[{"id":4977,"name":"answer","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"union","types":[{"type":"reference","target":4538,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4538,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reference","target":1041,"typeArguments":[{"type":"reference","target":4538,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Question.as"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Question.as"}},{"id":4978,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":4979,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":4980,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1049,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":600,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":4981,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":4982,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[4982]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Question.describedBy"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Question.describedBy"}},{"id":4988,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":4989,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Question.toString"},"implementationOf":{"type":"reference","target":-1,"name":"MetaQuestion.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Question.toString"},"implementationOf":{"type":"reference","target":-1,"name":"MetaQuestion.toString"}},{"id":4959,"name":"ofPseudoElement","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/questions/ComputedStyle.ts","line":140,"character":4}],"signatures":[{"id":4960,"name":"ofPseudoElement","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/) that uses\\nthe [actor\'s](/api/core/class/Actor/) [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/) to retrieve\\nthe value of the specified computed style property of the specified pseudo-element of a given ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)."}]},"sources":[{"fileName":"packages/web/src/screenplay/questions/ComputedStyle.ts","line":140,"character":4}],"parameters":[{"id":4961,"name":"pseudoElement","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The pseudo-element to retrieve the computed style property from, such as "},{"kind":"code","text":"`::before`"},{"kind":"text","text":" or "},{"kind":"code","text":"`::after`"}]},"type":{"type":"reference","target":688,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1046,"typeArguments":[{"type":"reference","target":4353,"typeArguments":[{"type":"reference","target":4990,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"ComputedStyle.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"intrinsic","name":"string"}],"name":"MetaQuestionAdapter","package":"@serenity-js/core"}}]},{"id":4962,"name":"of","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/questions/ComputedStyle.ts","line":158,"character":4}],"signatures":[{"id":4963,"name":"of","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves to the value of a computed style property of the "},{"kind":"code","text":"`pageElement`"},{"kind":"text","text":".\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/questions/ComputedStyle.ts","line":158,"character":4}],"parameters":[{"id":4964,"name":"pageElement","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":4353,"typeArguments":[{"type":"reference","target":4990,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"ComputedStyle.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":1041,"typeArguments":[{"type":"reference","target":4353,"typeArguments":[{"type":"reference","target":4990,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"ComputedStyle.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}],"name":"QuestionAdapter","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":1046,"typeArguments":[{"type":"reference","target":4353,"typeArguments":[{"type":"reference","target":4990,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"ComputedStyle.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"intrinsic","name":"string"}],"name":"MetaQuestionAdapter","package":"@serenity-js/core"},"implementationOf":{"type":"reference","target":-1,"name":"MetaQuestion.of"}}],"implementationOf":{"type":"reference","target":-1,"name":"MetaQuestion.of"}},{"id":4965,"name":"answeredBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/questions/ComputedStyle.ts","line":173,"character":10}],"signatures":[{"id":4966,"name":"answeredBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/web/src/screenplay/questions/ComputedStyle.ts","line":173,"character":10}],"parameters":[{"id":4967,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1049,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":600,"name":"UsesAbilities","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Question.answeredBy"}}],"overwrites":{"type":"reference","target":-1,"name":"Question.answeredBy"}}],"groups":[{"title":"Methods","children":[4897,4968,4971,4978,4988,4959,4962,4965]}],"sources":[{"fileName":"packages/web/src/screenplay/questions/ComputedStyle.ts","line":104,"character":13}],"typeParameters":[{"id":4990,"name":"Native_Element_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"extendedTypes":[{"type":"reference","target":939,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"implementedTypes":[{"type":"reference","target":1543,"typeArguments":[{"type":"reference","target":4353,"typeArguments":[{"type":"reference","target":4990,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"ComputedStyle.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":939,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}],"permalink":"/api/web/class/ComputedStyle","previousId":4804,"nextId":4991},{"id":4991,"name":"CssClasses","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Uses the [actor\'s](/api/core/class/Actor/) [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/) to retrieve\\na list of [CSS classes](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes#attr-class)\\nof a given ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/).\\n\\n## Example widget\\n\\n"},{"kind":"code","text":"```html\\n<ul id=\\"shopping-list\\" class=\\"active favourite\\">\\n  <li class=\\"bought\\">Coffee<li>\\n  <li class=\\"buy\\">Honey<li>\\n  <li class=\\"buy\\">Chocolate<li>\\n</ul>\\n```"},{"kind":"text","text":"\\n\\n## Retrieve CSS classes of a given ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { By, CssClasses, PageElement } from \'@serenity-js/web\'\\n\\nconst shoppingList = () =>\\n  PageElement.located(By.css(\'#shopping-list\'))\\n    .describedAs(\'shopping list\')\\n\\nawait actorCalled(\'Lisa\')\\n  .attemptsTo(\\n    Ensure.that(\\n      CssClasses.of(shoppingList()),\\n      equals([ \'active\', \'favourite\' ])\\n    ),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Using CssClasses as ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter)\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { By, CssClasses, PageElement } from \'@serenity-js/web\'\\n\\nconst shoppingList = () =>\\n  PageElement.located(By.css(\'#shopping-list\'))\\n    .describedAs(\'shopping list\')\\n\\nawait actorCalled(\'Lisa\')\\n  .attemptsTo(\\n    Ensure.that(\\n      CssClasses.of(shoppingList()).length,\\n      equals(2)\\n    ),\\n    Ensure.that(\\n      CssClasses.of(shoppingList())[0],\\n      equals(\'active\')\\n    ),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Using as filter in [Page Element Query Language](/handbook/web-testing/page-element-query-language/)\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, contain } from \'@serenity-js/assertions\'\\nimport { By, CssClasses, PageElement } from \'@serenity-js/web\'\\n\\nclass ShoppingList {\\n  static items = () =>\\n    PageElements.located(By.css(\'#shopping-list li\'))\\n      .describedAs(\'items\')\\n\\n  static outstandingItems = () =>\\n    ShoppingList.items()\\n      .where(CssClasses, contain(\'buy\'))\\n}\\n\\nawait actorCalled(\'Lisa\')\\n  .attemptsTo(\\n    Ensure.that(\\n      Text.ofAll(ShoppingList.outstandingItems()),\\n      equals([ \'Honey\', \'Chocolate\' ])\\n    ),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\n- ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/)\\n- ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter)\\n- ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/)"}]},"children":[{"id":4992,"name":"of","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/questions/CssClasses.ts","line":112,"character":11}],"signatures":[{"id":4993,"name":"of","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/) that uses\\nthe [actor\'s](/api/core/class/Actor/) [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/) to retrieve\\na list of [CSS classes](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes#attr-class)\\nof a given ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/).\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/questions/CssClasses.ts","line":112,"character":11}],"parameters":[{"id":4994,"name":"pageElement","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":4353,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":1041,"typeArguments":[{"type":"reference","target":4353,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"}],"name":"QuestionAdapter","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":1046,"typeArguments":[{"type":"reference","target":4353,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"},{"type":"array","elementType":{"type":"intrinsic","name":"string"}}],"name":"MetaQuestionAdapter","package":"@serenity-js/core"}}]},{"id":4995,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":4996,"name":"new CssClasses","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":4991,"name":"CssClasses","package":"@serenity-js/web"}}]}],"groups":[{"title":"Constructors","children":[4995]},{"title":"Methods","children":[4992]}],"sources":[{"fileName":"packages/web/src/screenplay/questions/CssClasses.ts","line":99,"character":13}],"permalink":"/api/web/class/CssClasses","previousId":4896,"nextId":4997},{"id":4997,"name":"LastScriptExecution","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Uses the [actor\'s](/api/core/class/Actor/) [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/) to retrieve\\na returns the result of the last script executed via ["},{"kind":"code","text":"`ExecuteScript`"},{"kind":"text","text":"](/api/web/class/ExecuteScript/).\\n\\n## Executing a script and reading the result\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { ExecuteScript, LastScriptExecution } from \'@serenity-js/web\'\\nimport { Ensure, includes } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Joseph\')\\n  .attemptsTo(\\n    ExecuteScript.sync(() => navigator.userAgent),\\n    Ensure.that(LastScriptExecution.result<string>(), includes(\'Chrome\')),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Using LastScriptExecution as ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter)\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { ExecuteScript, LastScriptExecution } from \'@serenity-js/web\'\\nimport { Ensure, includes } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Joseph\')\\n  .attemptsTo(\\n    ExecuteScript.sync(() => navigator.userAgent),\\n    Ensure.that(\\n      LastScriptExecution.result<string>().toLocaleLowerCase(),\\n      includes(\'chrome\')\\n    ),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`ExecuteScript`"},{"kind":"text","text":"](/api/web/class/ExecuteScript/)\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\n- ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter)"}]},"children":[{"id":4998,"name":"result","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/questions/LastScriptExecution.ts","line":53,"character":11}],"signatures":[{"id":4999,"name":"result","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Enables asserting on the result of a function executed via ["},{"kind":"code","text":"`ExecuteScript`"},{"kind":"text","text":"](/api/web/class/ExecuteScript/)."}]},"sources":[{"fileName":"packages/web/src/screenplay/questions/LastScriptExecution.ts","line":53,"character":11}],"typeParameter":[{"id":5000,"name":"R","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"type":{"type":"reference","target":1041,"typeArguments":[{"type":"reference","target":5000,"name":"R","package":"@serenity-js/web","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":5001,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":5002,"name":"new LastScriptExecution","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":4997,"name":"LastScriptExecution","package":"@serenity-js/web"}}]}],"groups":[{"title":"Constructors","children":[5001]},{"title":"Methods","children":[4998]}],"sources":[{"fileName":"packages/web/src/screenplay/questions/LastScriptExecution.ts","line":48,"character":13}],"permalink":"/api/web/class/LastScriptExecution","previousId":4991,"nextId":5003},{"id":5003,"name":"Selected","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Uses the [actor\'s](/api/core/class/Actor/) [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/) to retrieve\\noptions and values selected in a\\n[HTML "},{"kind":"code","text":"`<select>`"},{"kind":"text","text":" element](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select).\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Select`"},{"kind":"text","text":"](/api/web/class/Select/)\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\n- ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter)\\n- ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/)"}]},"children":[{"id":5004,"name":"valueOf","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/questions/Selected.ts","line":69,"character":11}],"signatures":[{"id":5005,"name":"valueOf","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Uses the [actor\'s](/api/core/class/Actor/) [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/) to retrieve\\na single [option](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option)\\nselected in an [HTML "},{"kind":"code","text":"`<select>`"},{"kind":"text","text":" element](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select).\\n\\n#### Example widget\\n\\n"},{"kind":"code","text":"```html\\n<select multiple data-test=\'countries\'>\\n  <option value=\'UK\'>United Kingdom</option>\\n  <option value=\'PL\'>Poland</option>\\n  <option value=\'US\'>United States</option>\\n</select>\\n```"},{"kind":"text","text":"\\n\\n#### Lean Page Object describing the widget\\n\\n"},{"kind":"code","text":"```ts\\nimport { By, PageElement } from \'@serenity-js/web\'\\n\\nclass Countries {\\n  static dropdown = () =>\\n    PageElement.located(By.css(\'[data-test=\\"countries\\"]\'))\\n      .describedAs(\'countries dropdown\');\\n}\\n```"},{"kind":"text","text":"\\n\\n#### Retrieving the selected value\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Select, Selected } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Nick\')\\n  .whoCan(BrowseTheWeb.using(protractor.browser))\\n  .attemptsTo(\\n    Select.value(\'UK\').from(Countries.dropdown),\\n    Ensure.that(Selected.valueOf(Countries.dropdown), equals(\'UK\')),\\n  )\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Select.value`"},{"kind":"text","text":"](/api/web/class/Select/#value)"}]},"sources":[{"fileName":"packages/web/src/screenplay/questions/Selected.ts","line":69,"character":11}],"parameters":[{"id":5006,"name":"pageElement","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) identifying the "},{"kind":"code","text":"`<select>`"},{"kind":"text","text":" element of interest"}]},"type":{"type":"reference","target":688,"typeArguments":[{"type":"reference","target":4353,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1041,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":5007,"name":"valuesOf","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/questions/Selected.ts","line":128,"character":11}],"signatures":[{"id":5008,"name":"valuesOf","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Uses the [actor\'s](/api/core/class/Actor/) [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/) to retrieve\\nvalues of [options](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option)\\nselected in an [HTML "},{"kind":"code","text":"`<select multiple>`"},{"kind":"text","text":" element](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select#attr-multiple)\\n\\n#### Example widget\\n\\n"},{"kind":"code","text":"```html\\n<select multiple data-test=\'countries\'>\\n  <option value=\'UK\'>United Kingdom</option>\\n  <option value=\'PL\'>Poland</option>\\n  <option value=\'US\'>United States</option>\\n</select>\\n```"},{"kind":"text","text":"\\n\\n#### Lean Page Object describing the widget\\n\\n"},{"kind":"code","text":"```ts\\nimport { By, PageElement } from \'@serenity-js/web\'\\n\\nclass Countries {\\n  static dropdown = () =>\\n    PageElement.located(By.css(\'[data-test=\\"countries\\"]\'))\\n      .describedAs(\'countries dropdown\')\\n}\\n```"},{"kind":"text","text":"\\n\\n#### Retrieving the selected value\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Select, Selected } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Nick\')\\n  .whoCan(BrowseTheWeb.using(protractor.browser))\\n  .attemptsTo(\\n    Select.values(\'UK\').from(Countries.dropdown),\\n    Ensure.that(Selected.valuesOf(Countries.dropdown), equals([ \'UK\' ])),\\n  )\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Select.values`"},{"kind":"text","text":"](/api/web/class/Select/#values)"}]},"sources":[{"fileName":"packages/web/src/screenplay/questions/Selected.ts","line":128,"character":11}],"parameters":[{"id":5009,"name":"pageElement","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) identifying the "},{"kind":"code","text":"`<select>`"},{"kind":"text","text":" element of interest"}]},"type":{"type":"reference","target":688,"typeArguments":[{"type":"reference","target":4353,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1041,"typeArguments":[{"type":"array","elementType":{"type":"intrinsic","name":"string"}}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":5010,"name":"optionIn","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/questions/Selected.ts","line":189,"character":11}],"signatures":[{"id":5011,"name":"optionIn","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Uses the [actor\'s](/api/core/class/Actor/) [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/) to retrieve\\na single option selected in an [HTML "},{"kind":"code","text":"`<select>`"},{"kind":"text","text":" element](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select#attr-multiple)\\n\\n#### Example widget\\n\\n"},{"kind":"code","text":"```html\\n<select multiple data-test=\'countries\'>\\n  <option value=\'UK\'>United Kingdom</option>\\n  <option value=\'PL\'>Poland</option>\\n  <option value=\'US\'>United States</option>\\n</select>\\n```"},{"kind":"text","text":"\\n\\n#### Lean Page Object describing the widget\\n\\n"},{"kind":"code","text":"```ts\\nimport { By, PageElement } from \'@serenity-js/web\'\\n\\nclass Countries {\\n  static dropdown = () =>\\n    PageElement.located(By.css(\'[data-test=\\"countries\\"]\'))\\n      .describedAs(\'countries dropdown\')\\n}\\n```"},{"kind":"text","text":"\\n\\n#### Retrieving the selected value\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Select, Selected } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Nick\')\\n  .attemptsTo(\\n    Select.option(\'Poland\').from(Countries.dropdown),\\n    Ensure.that(\\n      Selected.optionIn(Countries.dropdown),\\n      equals(\'Poland\')\\n    ),\\n  )\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Select.option`"},{"kind":"text","text":"](/api/web/class/Select/#option)"}]},"sources":[{"fileName":"packages/web/src/screenplay/questions/Selected.ts","line":189,"character":11}],"parameters":[{"id":5012,"name":"pageElement","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) identifying the "},{"kind":"code","text":"`<select>`"},{"kind":"text","text":" element of interest"}]},"type":{"type":"reference","target":688,"typeArguments":[{"type":"reference","target":4353,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1041,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":5013,"name":"optionsIn","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/questions/Selected.ts","line":250,"character":11}],"signatures":[{"id":5014,"name":"optionsIn","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Uses the [actor\'s](/api/core/class/Actor/) [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/) to retrieve\\noptions selected in an [HTML "},{"kind":"code","text":"`<select multiple>`"},{"kind":"text","text":" element](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select#attr-multiple)\\n\\n#### Example widget\\n\\n"},{"kind":"code","text":"```html\\n<select multiple data-test=\'countries\'>\\n  <option value=\'UK\'>United Kingdom</option>\\n  <option value=\'PL\'>Poland</option>\\n  <option value=\'US\'>United States</option>\\n</select>\\n```"},{"kind":"text","text":"\\n\\n#### Lean Page Object describing the widget\\n\\n"},{"kind":"code","text":"```ts\\nimport { By, PageElement } from \'@serenity-js/web\'\\n\\nclass Countries {\\n  static dropdown = () =>\\n    PageElement.located(By.css(\'[data-test=\\"countries\\"]\'))\\n      .describedAs(\'countries dropdown\')\\n}\\n```"},{"kind":"text","text":"\\n\\n#### Retrieving the selected value\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Select, Selected } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Nick\')\\n  .attemptsTo(\\n    Select.options(\'Poland\', \'United States\').from(Countries.dropdown),\\n    Ensure.that(\\n      Selected.optionsIn(Countries.dropdown),\\n      equals([ \'Poland\', \'United States\' ])\\n    ),\\n  )\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Select.options`"},{"kind":"text","text":"](/api/web/class/Select/#options)"}]},"sources":[{"fileName":"packages/web/src/screenplay/questions/Selected.ts","line":250,"character":11}],"parameters":[{"id":5015,"name":"pageElement","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) identifying the "},{"kind":"code","text":"`<select>`"},{"kind":"text","text":" element of interest"}]},"type":{"type":"reference","target":688,"typeArguments":[{"type":"reference","target":4353,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1041,"typeArguments":[{"type":"array","elementType":{"type":"intrinsic","name":"string"}}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":5016,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":5017,"name":"new Selected","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":5003,"name":"Selected","package":"@serenity-js/web"}}]}],"groups":[{"title":"Constructors","children":[5016]},{"title":"Methods","children":[5004,5007,5010,5013]}],"sources":[{"fileName":"packages/web/src/screenplay/questions/Selected.ts","line":19,"character":13}],"permalink":"/api/web/class/Selected","previousId":4997,"nextId":5018},{"id":5018,"name":"Text","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Uses the [actor\'s](/api/core/class/Actor/) [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/) to retrieve\\nthe visible (i.e. not hidden by CSS) ["},{"kind":"code","text":"`innerText`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/innerText) of:\\n- a given ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)\\n- a group of ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElements/)\\n\\nThe result includes the visible text of any sub-elements, without any leading or trailing whitespace.\\n\\n## Example widget\\n\\n"},{"kind":"code","text":"```html\\n<h1>Shopping list</h1>\\n<ul id=\\"shopping-list\\">\\n  <li>Coffee<li>\\n  <li class=\\"bought\\">Honey<li>\\n  <li>Chocolate<li>\\n</ul>\\n```"},{"kind":"text","text":"\\n\\n## Retrieve text of a single ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { By, PageElement, Text } from \'@serenity-js/web\'\\n\\nconst header = () =>\\n  PageElement.located(By.css(\'h1\'))\\n    .describedAs(\'header\')\\n\\nawait actorCalled(\'Lisa\')\\n  .whoCan(BrowseTheWebWithWebdriverIO.using(browser))\\n  .attemptsTo(\\n    Ensure.that(Text.of(header()), equals(\'Shopping list\')),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Retrieve text of multiple ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElements/)\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { By, PageElement, Text } from \'@serenity-js/web\'\\n\\nconst shoppingListItems = () =>\\n  PageElements.located(By.css(\'#shopping-list li\'))\\n    .describedAs(\'shopping list items\')\\n\\nawait actorCalled(\'Lisa\')\\n  .attemptsTo(\\n    Ensure.that(\\n      Text.ofAll(shoppingListItems()),\\n      equals([ \'Coffee\', \'Honey\', \'Chocolate\' ])\\n    ),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Using as filter in [Page Element Query Language](/handbook/web-testing/page-element-query-language/)\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { contain, Ensure } from \'@serenity-js/assertions\'\\nimport { By, CssClasses, PageElement, Text } from \'@serenity-js/web\'\\n\\nconst shoppingListItemCalled = (name: string) =>\\n  PageElements.located(By.css(\'#shopping-list li\'))\\n    .describedAs(\'shopping list items\')\\n    .where(Text, equals(name))\\n    .first()\\n\\nawait actorCalled(\'Lisa\')\\n  .attemptsTo(\\n    Ensure.that(\\n      CssClasses.of(shoppingListItemCalled(\'Honey)),\\n      contain(\'bought\')\\n    ),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\n- ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/)\\n- ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter)\\n- ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/)"}]},"children":[{"id":5019,"name":"of","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/questions/Text.ts","line":107,"character":11}],"signatures":[{"id":5020,"name":"of","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/) that uses\\nthe [actor\'s](/api/core/class/Actor/) [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/) to retrieve\\nthe text of a single ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/).\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/questions/Text.ts","line":107,"character":11}],"parameters":[{"id":5021,"name":"pageElement","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":4353,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":1041,"typeArguments":[{"type":"reference","target":4353,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"}],"name":"QuestionAdapter","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":1046,"typeArguments":[{"type":"reference","target":4353,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"},{"type":"intrinsic","name":"string"}],"name":"MetaQuestionAdapter","package":"@serenity-js/core"}}]},{"id":5022,"name":"ofAll","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/questions/Text.ts","line":129,"character":11},{"fileName":"packages/web/src/screenplay/questions/Text.ts","line":130,"character":11},{"fileName":"packages/web/src/screenplay/questions/Text.ts","line":131,"character":11}],"signatures":[{"id":5023,"name":"ofAll","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/) that uses\\nthe [actor\'s](/api/core/class/Actor/) [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/) to retrieve\\nthe text of a group of ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElements/).\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/questions/Text.ts","line":129,"character":11}],"parameters":[{"id":5024,"name":"pageElements","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4429,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElements","package":"@serenity-js/web"}}],"type":{"type":"reference","target":1046,"typeArguments":[{"type":"reference","target":4353,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"},{"type":"array","elementType":{"type":"intrinsic","name":"string"}}],"name":"MetaQuestionAdapter","package":"@serenity-js/core"}},{"id":5025,"name":"ofAll","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/questions/Text.ts","line":130,"character":11}],"parameters":[{"id":5026,"name":"pageElements","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":688,"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4353,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"}}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1041,"typeArguments":[{"type":"array","elementType":{"type":"intrinsic","name":"string"}}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":5027,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":5028,"name":"new Text","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":5018,"name":"Text","package":"@serenity-js/web"}}]}],"groups":[{"title":"Constructors","children":[5027]},{"title":"Methods","children":[5019,5022]}],"sources":[{"fileName":"packages/web/src/screenplay/questions/Text.ts","line":95,"character":13}],"permalink":"/api/web/class/Text","previousId":5003,"nextId":5029},{"id":5029,"name":"Value","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Uses the [actor\'s](/api/core/class/Actor/) [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/) to retrieve\\nthe "},{"kind":"code","text":"`value`"},{"kind":"text","text":" attribute of a given ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/).\\n\\n## Example widget\\n"},{"kind":"code","text":"```html\\n<input type=\\"text\\" id=\\"username\\" value=\\"Alice\\" />\\n```"},{"kind":"text","text":"\\n\\n## Retrieve the "},{"kind":"code","text":"`value`"},{"kind":"text","text":" of a given ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { By, PageElement, Value } from \'@serenity-js/web\'\\n\\nconst usernameField = () =>\\n  PageElement.located(By.id(\'username\'))\\n    .describedAs(\'username field\')\\n\\nawait actorCalled(\'Lisa\')\\n  .attemptsTo(\\n    Ensure.that(Value.of(usernameField), equals(\'Alice\')),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Using Value as ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter)\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { By, PageElement, Value } from \'@serenity-js/web\'\\n\\nconst usernameField = () =>\\n  PageElement.located(By.id(\'username\'))\\n    .describedAs(\'username field\')\\n\\nawait actorCalled(\'Lisa\')\\n  .attemptsTo(\\n    Ensure.that(\\n      Value.of(usernameField).toLocaleLowerCase()[0],\\n      equals(\'a\')  // [a]lice\\n    ),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\n- ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/)\\n- ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter)\\n- ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/)"}]},"children":[{"id":5030,"name":"of","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/questions/Value.ts","line":72,"character":11}],"signatures":[{"id":5031,"name":"of","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/) that uses\\nthe [actor\'s](/api/core/class/Actor/) [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/) to retrieve\\nthe "},{"kind":"code","text":"`value`"},{"kind":"text","text":" attribute of a given ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/).\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/questions/Value.ts","line":72,"character":11}],"parameters":[{"id":5032,"name":"pageElement","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":4353,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":1041,"typeArguments":[{"type":"reference","target":4353,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"}],"name":"QuestionAdapter","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":1046,"typeArguments":[{"type":"reference","target":4353,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"},{"type":"intrinsic","name":"string"}],"name":"MetaQuestionAdapter","package":"@serenity-js/core"}}]},{"id":5033,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":5034,"name":"new Value","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":5029,"name":"Value","package":"@serenity-js/web"}}]}],"groups":[{"title":"Constructors","children":[5033]},{"title":"Methods","children":[5030]}],"sources":[{"fileName":"packages/web/src/screenplay/questions/Value.ts","line":60,"character":13}],"permalink":"/api/web/class/Value","previousId":5018,"nextId":5035},{"id":5035,"name":"Photographer","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The Photographer is a ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/) who takes screenshots\\nusing the web browser associated with the [actor](/api/core/class/Actor/) that is\\ncurrently [in the spotlight](/api/core/function/actorInTheSpotlight/).\\n\\n## Registering Photographer programmatically\\n\\n"},{"kind":"code","text":"```ts\\nimport { configure, ArtifactArchiver } from \'@serenity-js/core\'\\nimport { Photographer, TakePhotosOfFailures } from \'@serenity-js/web\'\\n\\nconfigure({\\n  crew: [\\n    ArtifactArchiver.storingArtifactsAt(process.cwd(), \'target/site/serenity\'),\\n    Photographer.whoWill(TakePhotosOfFailures),\\n  ]\\n})\\n```"},{"kind":"text","text":"\\n\\n## Using Photographer with Playwright Test\\n\\n"},{"kind":"code","text":"```ts\\n// playwright.config.ts\\nimport type { PlaywrightTestConfig } from \'@serenity-js/playwright-test\'\\n\\nconst config: PlaywrightTestConfig = {\\n  reporter: [\\n      [ \'@serenity-js/playwright-test\', {\\n          crew: [\\n              \'@serenity-js/serenity-bdd\',\\n              [ \'@serenity-js/core:ArtifactArchiver\', { outputDirectory: \'target/site/serenity\' } ],\\n          ]\\n          // other Serenity/JS config\\n      }]\\n  ],\\n\\n  use: {\\n    crew: [\\n      [ \'@serenity-js/web:Photographer\', {\\n        strategy: \'TakePhotosOfFailures\',\\n        // strategy: \'TakePhotosOfInteractions\',\\n      } ]\\n    ],\\n  },\\n};\\nexport default config;\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`SerenityOptions`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityOptions/)\\n\\n## Using Photographer with WebdriverIO\\n\\n"},{"kind":"code","text":"```ts\\n// wdio.conf.ts\\nimport { ArtifactArchiver } from \'@serenity-js/core\'\\nimport { WebdriverIOConfig } from \'@serenity-js/webdriverio\'\\n\\nexport const config: WebdriverIOConfig= {\\n\\n  // Tell WebdriverIO to use Serenity/JS framework\\n  framework: \'@serenity-js/webdriverio\',\\n\\n  serenity: {\\n    // Configure Serenity/JS to use an appropriate test runner adapter\\n    runner: \'cucumber\',\\n    // runner: \'mocha\',\\n    // runner: \'jasmine\',\\n\\n    // register custom Actors class to configure your Serenity/JS actors\\n    actors: new Actors(),\\n\\n    // Register StageCrewMembers we\'ve imported at the top of this file\\n    crew: [\\n      \'@serenity-js/serenity-bdd\',\\n      [ \'@serenity-js/core:ArtifactArchiver\', { outputDirectory: \'target/site/serenity\' } ],\\n      [ \'@serenity-js/web:Photographer\', {\\n        strategy: \'TakePhotosOfFailures\',\\n        // strategy: \'TakePhotosOfInteractions\',\\n      } ]\\n    ]\\n  },\\n\\n  // ... rest of the config omitted for brevity\\n}\\n```"},{"kind":"text","text":"\\n\\n## Using Photographer with Protractor\\n\\n"},{"kind":"code","text":"```ts\\n// protractor.conf.js\\nexports.config = {\\n\\n  // Tell Protractor to use the Serenity/JS framework Protractor Adapter\\n  framework:      \'custom\',\\n  frameworkPath:  require.resolve(\'@serenity-js/protractor/adapter\'),\\n\\n  serenity: {\\n    runner: \'jasmine\',\\n    // runner: \'cucumber\',\\n    // runner: \'mocha\',\\n    crew: [\\n      @serenity-js/serenity-bdd\',\\n       \'@serenity-js/core:ArtifactArchiver\', { outputDirectory: \'target/site/serenity\' } ],\\n       \'@serenity-js/web:Photographer\', {\\n         strategy: \'TakePhotosOfFailures\',\\n         // strategy: \'TakePhotosOfInteractions\',\\n       ]\\n    ]\\n  },\\n\\n  // ... rest of the config omitted for brevity\\n}\\n```"},{"kind":"text","text":"\\n\\n## Taking photos only upon failures only\\n\\n"},{"kind":"code","text":"```ts\\nimport { Photographer, TakePhotosOfFailures } from \'@serenity-js/web\'\\n\\nPhotographer.whoWill(TakePhotosOfFailures)\\n```"},{"kind":"text","text":"\\n\\n## Taking photos of all the interactions\\n\\n"},{"kind":"code","text":"```ts\\nimport { Photographer, TakePhotosOfInteractions } from \'@serenity-js/web\'\\n\\nPhotographer.whoWill(TakePhotosOfInteractions)\\n```"},{"kind":"text","text":"\\n\\n## Taking photos before and after all the interactions\\n\\n"},{"kind":"code","text":"```ts\\nimport { Photographer, TakePhotosBeforeAndAfterInteractions } from \'@serenity-js/web\'\\n\\nPhotographer.whoWill(TakePhotosBeforeAndAfterInteractions)\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Stage`"},{"kind":"text","text":"](/api/core/class/Stage/)\\n- ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/)\\n- ["},{"kind":"code","text":"`TakePhotosBeforeAndAfterInteractions`"},{"kind":"text","text":"](/api/web/class/TakePhotosBeforeAndAfterInteractions/)\\n- ["},{"kind":"code","text":"`TakePhotosOfFailures`"},{"kind":"text","text":"](/api/web/class/TakePhotosOfFailures/)\\n- ["},{"kind":"code","text":"`TakePhotosOfInteractions`"},{"kind":"text","text":"](/api/web/class/TakePhotosOfInteractions/)"}]},"children":[{"id":5036,"name":"whoWill","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/Photographer.ts","line":165,"character":11}],"signatures":[{"id":5037,"name":"whoWill","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a new ["},{"kind":"code","text":"`Photographer`"},{"kind":"text","text":"](/api/web/class/Photographer/) configured to take photos (screenshots)\\nas per the specified ["},{"kind":"code","text":"`PhotoTakingStrategy`"},{"kind":"text","text":"](/api/web/class/PhotoTakingStrategy/)."}]},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/Photographer.ts","line":165,"character":11}],"parameters":[{"id":5038,"name":"strategy","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A no-arg constructor function that instantiates a ["},{"kind":"code","text":"`PhotoTakingStrategy`"},{"kind":"text","text":"](/api/web/class/PhotoTakingStrategy/)"}]},"type":{"type":"reflection","declaration":{"id":5039,"name":"__type","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/Photographer.ts","line":165,"character":29}],"signatures":[{"id":5040,"name":"new strategy","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/Photographer.ts","line":165,"character":29}],"type":{"type":"reference","target":5058,"name":"PhotoTakingStrategy","package":"@serenity-js/web"}}]}}}],"type":{"type":"reference","target":2181,"name":"StageCrewMember","package":"@serenity-js/core"}}]},{"id":5041,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/Photographer.ts","line":175,"character":11}],"signatures":[{"id":5042,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a new ["},{"kind":"code","text":"`Photographer`"},{"kind":"text","text":"](/api/web/class/Photographer/) configured to take photos (screenshots)\\nas per the specified ["},{"kind":"code","text":"`PhotoTakingStrategy`"},{"kind":"text","text":"](/api/web/class/PhotoTakingStrategy/)."}]},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/Photographer.ts","line":175,"character":11}],"parameters":[{"id":5043,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reflection","declaration":{"id":5044,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":5045,"name":"strategy","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/Photographer.ts","line":175,"character":31}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"union","types":[{"type":"literal","value":"PhotoTakingStrategy"},{"type":"literal","value":"TakePhotosBeforeAndAfterInteractions"},{"type":"literal","value":"TakePhotosOfFailures"},{"type":"literal","value":"TakePhotosOfInteractions"}]},{"type":"literal","value":"PhotoTakingStrategy"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"}}],"groups":[{"title":"Properties","children":[5045]}],"sources":[{"fileName":"packages/web/src/stage/crew/photographer/Photographer.ts","line":175,"character":29}]}}}],"type":{"type":"reference","target":2181,"name":"StageCrewMember","package":"@serenity-js/core"}}]},{"id":5046,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/Photographer.ts","line":192,"character":4}],"signatures":[{"id":5047,"name":"new Photographer","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/Photographer.ts","line":192,"character":4}],"parameters":[{"id":5048,"name":"photoTakingStrategy","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":5058,"name":"PhotoTakingStrategy","package":"@serenity-js/web"}},{"id":5049,"name":"stage","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":2103,"name":"Stage","package":"@serenity-js/core"}}],"type":{"type":"reference","target":5035,"name":"Photographer","package":"@serenity-js/web"}}]},{"id":5052,"name":"assignedTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/Photographer.ts","line":204,"character":4}],"signatures":[{"id":5053,"name":"assignedTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Assigns this ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/) to a given ["},{"kind":"code","text":"`Stage`"},{"kind":"text","text":"](/api/core/class/Stage/)."}]},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/Photographer.ts","line":204,"character":4}],"parameters":[{"id":5054,"name":"stage","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An instance of a ["},{"kind":"code","text":"`Stage`"},{"kind":"text","text":"](/api/core/class/Stage/) this ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/) will be assigned to"}]},"type":{"type":"reference","target":2103,"name":"Stage","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2181,"name":"StageCrewMember","package":"@serenity-js/core"},"implementationOf":{"type":"reference","target":-1,"name":"StageCrewMember.assignedTo"}}],"implementationOf":{"type":"reference","target":-1,"name":"StageCrewMember.assignedTo"}},{"id":5055,"name":"notifyOf","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/Photographer.ts","line":215,"character":4}],"signatures":[{"id":5056,"name":"notifyOf","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Handles ["},{"kind":"code","text":"`DomainEvent`"},{"kind":"text","text":"](/api/core-events/class/DomainEvent/) objects emitted by the ["},{"kind":"code","text":"`Stage`"},{"kind":"text","text":"](/api/core/class/Stage/)\\nthis ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/) is assigned to."}]},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/Photographer.ts","line":215,"character":4}],"parameters":[{"id":5057,"name":"event","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":2565,"name":"DomainEvent","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"void"},"implementationOf":{"type":"reference","target":-1,"name":"StageCrewMember.notifyOf"}}],"implementationOf":{"type":"reference","target":-1,"name":"StageCrewMember.notifyOf"}}],"groups":[{"title":"Constructors","children":[5046]},{"title":"Methods","children":[5036,5041,5052,5055]}],"sources":[{"fileName":"packages/web/src/stage/crew/photographer/Photographer.ts","line":156,"character":13}],"implementedTypes":[{"type":"reference","target":2181,"name":"StageCrewMember","package":"@serenity-js/core"}],"permalink":"/api/web/class/Photographer","previousId":5029,"nextId":5058},{"id":5058,"name":"PhotoTakingStrategy","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"Configures the ["},{"kind":"code","text":"`Photographer`"},{"kind":"text","text":"](/api/web/class/Photographer/) to take photos, a.k.a. screenshots,\\nof the ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) performed by the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) in the [spotlight](/api/core/function/actorInTheSpotlight/)\\nwhen desired conditions are met."}]},"children":[{"id":5059,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":5060,"name":"new PhotoTakingStrategy","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":5058,"name":"PhotoTakingStrategy","package":"@serenity-js/web"}}]},{"id":5061,"name":"considerTakingPhoto","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/strategies/PhotoTakingStrategy.ts","line":30,"character":10}],"signatures":[{"id":5062,"name":"considerTakingPhoto","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Takes a photo of the web browser used by the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) in the [spotlight](/api/core/function/actorInTheSpotlight/).\\n\\n#### Learn more\\n- [ActivityStarts](/api/core-events/class/ActivityStarts/)\\n- [ActivityFinished](/api/core-events/class/ActivityFinished/)\\n- ["},{"kind":"code","text":"`Stage`"},{"kind":"text","text":"](/api/core/class/Stage/)"}]},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/strategies/PhotoTakingStrategy.ts","line":30,"character":10}],"parameters":[{"id":5063,"name":"event","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":2307,"name":"ActivityStarts","package":"@serenity-js/core"},{"type":"reference","target":2237,"name":"ActivityFinished","package":"@serenity-js/core"}]}},{"id":5064,"name":"stage","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The Stage that holds reference to the Actor in the spotlight"}]},"type":{"type":"reference","target":2103,"name":"Stage","package":"@serenity-js/core"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]}],"groups":[{"title":"Constructors","children":[5059]},{"title":"Methods","children":[5061]}],"sources":[{"fileName":"packages/web/src/stage/crew/photographer/strategies/PhotoTakingStrategy.ts","line":16,"character":22}],"extendedBy":[{"type":"reference","target":5077,"name":"TakePhotosBeforeAndAfterInteractions"},{"type":"reference","target":5090,"name":"TakePhotosOfFailures"},{"type":"reference","target":5103,"name":"TakePhotosOfInteractions"}],"permalink":"/api/web/class/PhotoTakingStrategy","previousId":5035,"nextId":5077},{"id":5077,"name":"TakePhotosBeforeAndAfterInteractions","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the ["},{"kind":"code","text":"`Photographer`"},{"kind":"text","text":"](/api/web/class/Photographer/) to take photos (a.k.a. screenshots) **both before and after**\\nevery single ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/) performed\\nby the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) in the [spotlight](/api/core/function/actorInTheSpotlight/).\\n\\n**Please note** that this strategy will result in _a lot_ of screenshots being taken,\\nwhich will seriously affect the performance of your tests.\\nFor this reason, it\'s best to use it only for debugging purposes."}]},"children":[{"id":5078,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":5079,"name":"new TakePhotosBeforeAndAfterInteractions","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":5077,"name":"TakePhotosBeforeAndAfterInteractions","package":"@serenity-js/web"},"inheritedFrom":{"type":"reference","target":5060,"name":"PhotoTakingStrategy.constructor"}}],"inheritedFrom":{"type":"reference","target":5059,"name":"PhotoTakingStrategy.constructor"}},{"id":5086,"name":"considerTakingPhoto","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/strategies/PhotoTakingStrategy.ts","line":30,"character":10}],"signatures":[{"id":5087,"name":"considerTakingPhoto","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Takes a photo of the web browser used by the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) in the [spotlight](/api/core/function/actorInTheSpotlight/).\\n\\n#### Learn more\\n- [ActivityStarts](/api/core-events/class/ActivityStarts/)\\n- [ActivityFinished](/api/core-events/class/ActivityFinished/)\\n- ["},{"kind":"code","text":"`Stage`"},{"kind":"text","text":"](/api/core/class/Stage/)"}]},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/strategies/PhotoTakingStrategy.ts","line":30,"character":10}],"parameters":[{"id":5088,"name":"event","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":2307,"name":"ActivityStarts","package":"@serenity-js/core"},{"type":"reference","target":2237,"name":"ActivityFinished","package":"@serenity-js/core"}]}},{"id":5089,"name":"stage","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The Stage that holds reference to the Actor in the spotlight"}]},"type":{"type":"reference","target":2103,"name":"Stage","package":"@serenity-js/core"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":5062,"name":"PhotoTakingStrategy.considerTakingPhoto"}}],"inheritedFrom":{"type":"reference","target":5061,"name":"PhotoTakingStrategy.considerTakingPhoto"}}],"groups":[{"title":"Constructors","children":[5078]},{"title":"Methods","children":[5086]}],"sources":[{"fileName":"packages/web/src/stage/crew/photographer/strategies/TakePhotosBeforeAndAfterInteractions.ts","line":17,"character":13}],"extendedTypes":[{"type":"reference","target":5058,"name":"PhotoTakingStrategy","package":"@serenity-js/web"}],"permalink":"/api/web/class/TakePhotosBeforeAndAfterInteractions","previousId":5058,"nextId":5090},{"id":5090,"name":"TakePhotosOfFailures","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the ["},{"kind":"code","text":"`Photographer`"},{"kind":"text","text":"](/api/web/class/Photographer/) to take photos (a.k.a. screenshots)\\nwhen then ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/) performed\\nby the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) in the [spotlight](/api/core/function/actorInTheSpotlight/)\\nresults in an error.\\n\\nThis strategy works best when you are interested in the screenshots only when\\na scenario fails."}]},"children":[{"id":5091,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":5092,"name":"new TakePhotosOfFailures","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":5090,"name":"TakePhotosOfFailures","package":"@serenity-js/web"},"inheritedFrom":{"type":"reference","target":5060,"name":"PhotoTakingStrategy.constructor"}}],"inheritedFrom":{"type":"reference","target":5059,"name":"PhotoTakingStrategy.constructor"}},{"id":5099,"name":"considerTakingPhoto","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/strategies/PhotoTakingStrategy.ts","line":30,"character":10}],"signatures":[{"id":5100,"name":"considerTakingPhoto","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Takes a photo of the web browser used by the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) in the [spotlight](/api/core/function/actorInTheSpotlight/).\\n\\n#### Learn more\\n- [ActivityStarts](/api/core-events/class/ActivityStarts/)\\n- [ActivityFinished](/api/core-events/class/ActivityFinished/)\\n- ["},{"kind":"code","text":"`Stage`"},{"kind":"text","text":"](/api/core/class/Stage/)"}]},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/strategies/PhotoTakingStrategy.ts","line":30,"character":10}],"parameters":[{"id":5101,"name":"event","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":2307,"name":"ActivityStarts","package":"@serenity-js/core"},{"type":"reference","target":2237,"name":"ActivityFinished","package":"@serenity-js/core"}]}},{"id":5102,"name":"stage","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The Stage that holds reference to the Actor in the spotlight"}]},"type":{"type":"reference","target":2103,"name":"Stage","package":"@serenity-js/core"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":5062,"name":"PhotoTakingStrategy.considerTakingPhoto"}}],"inheritedFrom":{"type":"reference","target":5061,"name":"PhotoTakingStrategy.considerTakingPhoto"}}],"groups":[{"title":"Constructors","children":[5091]},{"title":"Methods","children":[5099]}],"sources":[{"fileName":"packages/web/src/stage/crew/photographer/strategies/TakePhotosOfFailures.ts","line":18,"character":13}],"extendedTypes":[{"type":"reference","target":5058,"name":"PhotoTakingStrategy","package":"@serenity-js/web"}],"permalink":"/api/web/class/TakePhotosOfFailures","previousId":5077,"nextId":5103},{"id":5103,"name":"TakePhotosOfInteractions","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the ["},{"kind":"code","text":"`Photographer`"},{"kind":"text","text":"](/api/web/class/Photographer/) to take photos (a.k.a. screenshots)\\nwhen then ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) in the [spotlight](/api/core/function/actorInTheSpotlight/)\\nperforms any ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/).\\n\\nThis strategy works best when you want the results of your automated tests\\nto become comprehensive living documentation of your system.\\n\\n*Please note* that taking screenshots affects the performance of your tests."}]},"children":[{"id":5104,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":5105,"name":"new TakePhotosOfInteractions","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":5103,"name":"TakePhotosOfInteractions","package":"@serenity-js/web"},"inheritedFrom":{"type":"reference","target":5060,"name":"PhotoTakingStrategy.constructor"}}],"inheritedFrom":{"type":"reference","target":5059,"name":"PhotoTakingStrategy.constructor"}},{"id":5112,"name":"considerTakingPhoto","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/strategies/PhotoTakingStrategy.ts","line":30,"character":10}],"signatures":[{"id":5113,"name":"considerTakingPhoto","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Takes a photo of the web browser used by the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) in the [spotlight](/api/core/function/actorInTheSpotlight/).\\n\\n#### Learn more\\n- [ActivityStarts](/api/core-events/class/ActivityStarts/)\\n- [ActivityFinished](/api/core-events/class/ActivityFinished/)\\n- ["},{"kind":"code","text":"`Stage`"},{"kind":"text","text":"](/api/core/class/Stage/)"}]},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/strategies/PhotoTakingStrategy.ts","line":30,"character":10}],"parameters":[{"id":5114,"name":"event","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":2307,"name":"ActivityStarts","package":"@serenity-js/core"},{"type":"reference","target":2237,"name":"ActivityFinished","package":"@serenity-js/core"}]}},{"id":5115,"name":"stage","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The Stage that holds reference to the Actor in the spotlight"}]},"type":{"type":"reference","target":2103,"name":"Stage","package":"@serenity-js/core"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":5062,"name":"PhotoTakingStrategy.considerTakingPhoto"}}],"inheritedFrom":{"type":"reference","target":5061,"name":"PhotoTakingStrategy.considerTakingPhoto"}}],"groups":[{"title":"Constructors","children":[5104]},{"title":"Methods","children":[5112]}],"sources":[{"fileName":"packages/web/src/stage/crew/photographer/strategies/TakePhotosOfInteractions.ts","line":18,"character":13}],"extendedTypes":[{"type":"reference","target":5058,"name":"PhotoTakingStrategy","package":"@serenity-js/web"}],"permalink":"/api/web/class/TakePhotosOfInteractions","previousId":5090}],"groups":[{"title":"Abilities","children":[3251]},{"title":"Activities","children":[3275,3321,3361,3401,3448,3460,3503,3543,3555,3592,3640,3680,3716,3751,3790]},{"title":"Errors","children":[3166,3192,3215]},{"title":"Expectations","children":[3241,3243,3245,3247,3249]},{"title":"Models","children":[3826,3863,3867,3898,4004,4121,4187,4237,4353,4429,4556,4644,4668,4798,4801,4013,4035,4059,4083,4105,4692,4714,4726,4740,4752,4764,4776,4788]},{"title":"Questions","children":[4804,4896,4991,4997,5003,5018,5029]},{"title":"Stage","children":[5035,5058,5077,5090,5103]}],"sources":[{"fileName":"packages/web/src/index.ts","line":1,"character":0}],"permalink":"/api/web"},"urlSlug":"web"}],"packageName":"@serenity-js/web","packageVersion":"3.26.0"},{"entryPoints":[{"index":false,"label":"Test runner adapter","reflection":{"id":26,"name":"@serenity-js/webdriverio/adapter","variant":"declaration","kind":2,"flags":{"isExternal":true},"children":[{"id":6847,"name":"WebdriverIOFrameworkAdapterFactory","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":6848,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/adapter/WebdriverIOFrameworkAdapterFactory.ts","line":14,"character":4}],"signatures":[{"id":6849,"name":"new WebdriverIOFrameworkAdapterFactory","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/adapter/WebdriverIOFrameworkAdapterFactory.ts","line":14,"character":4}],"parameters":[{"id":6850,"name":"serenity","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1898,"name":"Serenity","package":"@serenity-js/core"}},{"id":6851,"name":"loader","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"ModuleLoader","package":"@serenity-js/core"}},{"id":6852,"name":"cwd","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Path","package":"@serenity-js/core"}}],"type":{"type":"reference","target":6847,"name":"WebdriverIOFrameworkAdapterFactory","package":"@serenity-js/webdriverio"}}]},{"id":6856,"name":"init","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/adapter/WebdriverIOFrameworkAdapterFactory.ts","line":21,"character":11}],"signatures":[{"id":6857,"name":"init","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/adapter/WebdriverIOFrameworkAdapterFactory.ts","line":21,"character":11}],"parameters":[{"id":6858,"name":"cid","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":6859,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":6384,"name":"WebdriverIOConfig","package":"@serenity-js/webdriverio"}},{"id":6860,"name":"specs","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":6861,"name":"capabilities","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/Capabilities.ts","qualifiedName":"RemoteCapability"},"name":"RemoteCapability","package":"@wdio/types"}},{"id":6862,"name":"reporter","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/events.d.ts","qualifiedName":"EventEmitter"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/events.d.ts","qualifiedName":"DefaultEventMap"},"name":"DefaultEventMap","package":"@types/node"}],"name":"EventEmitter","package":"@types/node"},{"type":"reference","name":"ProvidesWriteStream","package":"@serenity-js/webdriverio"},{"type":"reference","name":"InitialisesReporters","package":"@serenity-js/webdriverio"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","name":"WebdriverIOFrameworkAdapter","package":"@serenity-js/webdriverio"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]}],"groups":[{"title":"Constructors","children":[6848]},{"title":"Methods","children":[6856]}],"sources":[{"fileName":"packages/webdriverio/src/adapter/WebdriverIOFrameworkAdapterFactory.ts","line":13,"character":13}],"permalink":"/api/webdriverio-adapter/class/WebdriverIOFrameworkAdapterFactory"}],"groups":[{"title":"Test Runner Adapter","children":[6847]}],"sources":[{"fileName":"packages/webdriverio/src/adapter/index.ts","line":1,"character":0}],"permalink":"/api/webdriverio-adapter"},"urlSlug":"webdriverio-adapter"},{"index":true,"label":"index","reflection":{"id":9,"name":"@serenity-js/webdriverio","variant":"declaration","kind":2,"flags":{"isExternal":true},"children":[{"id":6384,"name":"WebdriverIOConfig","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"[WebdriverIO configuration object](https://webdriver.io/docs/configurationfile/),\\nwith [Serenity/JS-specific additions](https://serenity-js.orgapi/core/class/SerenityConfig/).\\n\\n## Integrating WebdriverIO with Serenity/JS\\n\\n"},{"kind":"code","text":"```ts\\n// wdio.conf.ts\\nimport { WebdriverIOConfig } from \'@serenity-js/webdriverio\'\\n\\nexport const config: WebdriverIOConfig = {\\n\\n  framework: \'@serenity-js/webdriverio\',\\n\\n  serenity: {\\n    runner: \'cucumber\',\\n    // runner: \'mocha\',\\n    // runner: \'jasmine\',\\n\\n    crew: [\\n      // Optional, print test execution results to standard output\\n      \'@serenity-js/console-reporter\',\\n\\n      // Optional, produce Serenity BDD reports\\n      // and living documentation (HTML)\\n      \'@serenity-js/serenity-bdd\',\\n      [ \'@serenity-js/core:ArtifactArchiver\', {\\n          outputDirectory: \'target/site/serenity\'\\n      } ],\\n\\n      // Optional, automatically capture screenshots\\n      // upon interaction failure\\n      [ \'@serenity-js/web:Photographer\', {\\n          strategy: \'TakePhotosOfFailures\'\\n          // strategy: \'TakePhotosOfInteractions\'\\n      } ],\\n    ]\\n  },\\n\\n  // Configure your Cucumber runner\\n  cucumberOpts: {\\n    // see Cucumber configuration options below\\n  },\\n\\n  // ... or Jasmine runner\\n  jasmineOpts: {\\n    // see Jasmine configuration options below\\n  },\\n\\n  // ... or Mocha runner\\n  mochaOpts: {\\n     // see Mocha configuration options below\\n  },\\n\\n  runner: \'local\',\\n\\n  specs: [\\n    \'./features/*.feature\',\\n\\n    // or for Mocha/Jasmine\\n    // \'./*.spec.ts\'\\n  ],\\n\\n  // Any other WebdriverIO configuration\\n}\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- [WebdriverIO configuration file](https://webdriver.io/docs/configurationfile/)\\n- ["},{"kind":"code","text":"`CucumberConfig`"},{"kind":"text","text":"](/api/cucumber-adapter/interface/CucumberConfig/)\\n- ["},{"kind":"code","text":"`JasmineConfig`"},{"kind":"text","text":"](/api/jasmine-adapter/interface/JasmineConfig/)\\n- ["},{"kind":"code","text":"`MochaConfig`"},{"kind":"text","text":"](/api/mocha-adapter/interface/MochaConfig/)"}]},"children":[{"id":6385,"name":"serenity","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Serenity/JS configuration with an additional "},{"kind":"code","text":"`runner`"},{"kind":"text","text":" entry\\nallowing to specify the test runner, such as "},{"kind":"code","text":"`cucumber`"},{"kind":"text","text":", "},{"kind":"code","text":"`mocha`"},{"kind":"text","text":", or "},{"kind":"code","text":"`jasmine`"},{"kind":"text","text":".\\n\\n#### Learn more\\n\\n- [WebdriverIO configuration file](https://webdriver.io/docs/configurationfile/)\\n- ["},{"kind":"code","text":"`CucumberConfig`"},{"kind":"text","text":"](/api/cucumber-adapter/interface/CucumberConfig/)\\n- ["},{"kind":"code","text":"`JasmineConfig`"},{"kind":"text","text":"](/api/jasmine-adapter/interface/JasmineConfig/)\\n- ["},{"kind":"code","text":"`MochaConfig`"},{"kind":"text","text":"](/api/mocha-adapter/interface/MochaConfig/)"}]},"sources":[{"fileName":"packages/webdriverio/src/config/WebdriverIOConfig.ts","line":93,"character":4}],"type":{"type":"intersection","types":[{"type":"reference","target":67,"name":"SerenityConfig","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":6386,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":6387,"name":"runner","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/webdriverio/src/config/WebdriverIOConfig.ts","line":93,"character":34}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[6387]}],"sources":[{"fileName":"packages/webdriverio/src/config/WebdriverIOConfig.ts","line":93,"character":32}]}}]}},{"id":6469,"name":"protocol","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Protocol to use when communicating with the Selenium standalone server (or driver)."}],"blockTags":[{"tag":"@default","content":[{"kind":"code","text":"```ts\\n\'http\'\\n```"}]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.protocol"}},{"id":6470,"name":"hostname","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Host of your WebDriver server."}],"blockTags":[{"tag":"@default","content":[{"kind":"code","text":"```ts\\n\'localhost\'\\n```"}]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.hostname"}},{"id":6471,"name":"port","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Port your WebDriver server is on."}]},"sources":[],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.port"}},{"id":6442,"name":"path","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Path to WebDriver endpoint or grid server."}],"blockTags":[{"tag":"@default","content":[{"kind":"code","text":"```ts\\n\'/\'\\n```"}]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.path"}},{"id":6472,"name":"queryParams","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Query paramaters that are propagated to the driver server."}]},"sources":[],"type":{"type":"reflection","declaration":{"id":6473,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"indexSignature":{"id":6474,"name":"__index","variant":"signature","kind":8192,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":6475,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}}},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.queryParams"}},{"id":6476,"name":"user","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Your cloud service username (only works for [Sauce Labs](https://saucelabs.com),\\n[Browserstack](https://www.browserstack.com), [TestingBot](https://testingbot.com),\\n[CrossBrowserTesting](https://crossbrowsertesting.com) or\\n[LambdaTest](https://www.lambdatest.com) accounts). If set, WebdriverIO will\\nautomatically set connection options for you. If you don\'t use a cloud provider this\\ncan be used to authenticate any other WebDriver backend."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.user"}},{"id":6477,"name":"key","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Your cloud service access key or secret key (only works for\\n[Sauce Labs](https://saucelabs.com), [Browserstack](https://www.browserstack.com),\\n[TestingBot](https://testingbot.com), [CrossBrowserTesting](https://crossbrowsertesting.com)\\nor [LambdaTest](https://www.lambdatest.com) accounts). If set, WebdriverIO will\\nautomatically set connection options for you. If you don\'t use a cloud provider this\\ncan be used to authenticate any other WebDriver backend."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.key"}},{"id":6444,"name":"logLevel","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Level of logging verbosity."}],"blockTags":[{"tag":"@default","content":[{"kind":"code","text":"```ts\\n\'info\'\\n```"}]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/Options.ts","qualifiedName":"WebDriverLogTypes"},"name":"WebDriverLogTypes","package":"@wdio/types"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.logLevel"}},{"id":6445,"name":"logLevels","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Set specific log levels per logger\\nuse \'silent\' level to disable logger"}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/Options.ts","qualifiedName":"WebDriverLogTypes"},"name":"WebDriverLogTypes","package":"@wdio/types"}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.logLevels"}},{"id":6446,"name":"connectionRetryTimeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Timeout for any WebDriver request to a driver or grid."}],"blockTags":[{"tag":"@default","content":[{"kind":"code","text":"```ts\\n120000\\n```"}]}]},"sources":[],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.connectionRetryTimeout"}},{"id":6447,"name":"connectionRetryCount","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Count of request retries to the Selenium server."}],"blockTags":[{"tag":"@default","content":[{"kind":"code","text":"```ts\\n3\\n```"}]}]},"sources":[],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.connectionRetryCount"}},{"id":6448,"name":"headers","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Specify custom headers to pass into every request."}]},"sources":[],"type":{"type":"reflection","declaration":{"id":6449,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"indexSignature":{"id":6450,"name":"__index","variant":"signature","kind":8192,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":6451,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}}},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.headers"}},{"id":6452,"name":"agent","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Allows you to use a custom http/https/http2 [agent](https://www.npmjs.com/package/got#agent) to make requests."}],"blockTags":[{"tag":"@default","content":[{"kind":"code","text":"```js\\n{\\n    http: new http.Agent({ keepAlive: true }),\\n    https: new https.Agent({ keepAlive: true })\\n}\\n```"}]}]},"sources":[],"type":{"type":"reflection","declaration":{"id":6453,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":6454,"name":"http","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/http.d.ts","qualifiedName":"\\"http\\".Agent"},"name":"Agent","package":"@types/node","qualifiedName":"\\"http\\".Agent"}},{"id":6455,"name":"https","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/https.d.ts","qualifiedName":"\\"https\\".Agent"},"name":"Agent","package":"@types/node","qualifiedName":"\\"https\\".Agent"}}],"groups":[{"title":"Properties","children":[6454,6455]}],"sources":[]}},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.agent"}},{"id":6456,"name":"transformRequest","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Function intercepting [HTTP request options](https://github.com/sindresorhus/got#options) before a WebDriver request is made."}]},"sources":[],"type":{"type":"reflection","declaration":{"id":6457,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":6458,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":6459,"name":"requestOptions","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/Options.ts","qualifiedName":"RequestLibOptions"},"name":"RequestLibOptions","package":"@wdio/types"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/Options.ts","qualifiedName":"RequestLibOptions"},"name":"RequestLibOptions","package":"@wdio/types"}}]}},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.transformRequest"}},{"id":6460,"name":"transformResponse","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Function intercepting HTTP response objects after a WebDriver response has arrived."}]},"sources":[],"type":{"type":"reflection","declaration":{"id":6461,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":6462,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":6463,"name":"response","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/Options.ts","qualifiedName":"RequestLibResponse"},"name":"RequestLibResponse","package":"@wdio/types"}},{"id":6464,"name":"requestOptions","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/Options.ts","qualifiedName":"RequestLibOptions"},"name":"RequestLibOptions","package":"@wdio/types"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/Options.ts","qualifiedName":"RequestLibResponse"},"name":"RequestLibResponse","package":"@wdio/types"}}]}},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.transformResponse"}},{"id":6465,"name":"enableDirectConnect","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Appium direct connect options (see: https://appiumpro.com/editions/86-connecting-directly-to-appium-hosts-in-distributed-environments)"}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.enableDirectConnect"}},{"id":6466,"name":"strictSSL","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether it requires SSL certificates to be valid in HTTP/s requests\\nfor an environment which cannot get process environment well."}],"blockTags":[{"tag":"@default","content":[{"kind":"code","text":"```ts\\ntrue\\n```"}]}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.strictSSL"}},{"id":6467,"name":"outputDir","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Directory to store all testrunner log files (including reporter logs and "},{"kind":"code","text":"`wdio`"},{"kind":"text","text":" logs).\\nIf not set, all logs are streamed to "},{"kind":"code","text":"`stdout`"},{"kind":"text","text":". Since most reporters are made to log to\\n"},{"kind":"code","text":"`stdout`"},{"kind":"text","text":", it is recommended to only use this option for specific reporters where it\\nmakes more sense to push report into a file (like the "},{"kind":"code","text":"`junit`"},{"kind":"text","text":" reporter, for example).\\n\\nWhen running in standalone mode, the only log generated by WebdriverIO will be\\nthe "},{"kind":"code","text":"`wdio`"},{"kind":"text","text":" log."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.outputDir"}},{"id":6468,"name":"cacheDir","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The path to the root of the cache directory. This directory is used to store all drivers that are downloaded\\nwhen attempting to start a session."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.cacheDir"}},{"id":6478,"name":"automationProtocol","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Define the protocol you want to use for your browser automation.\\nCurrently only ["},{"kind":"code","text":"`webdriver`"},{"kind":"text","text":"](https://www.npmjs.com/package/webdriver) and\\n["},{"kind":"code","text":"`devtools`"},{"kind":"text","text":"](https://www.npmjs.com/package/devtools) are supported,\\nas these are the main browser automation technologies available."}],"blockTags":[{"tag":"@deprecated","content":[{"kind":"text","text":"this option will be removed in future versions of WebdriverIO. We recommend to use WebDriver for browser or mobile automation."}]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/Options.ts","qualifiedName":"SupportedProtocols"},"name":"SupportedProtocols","package":"@wdio/types"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.automationProtocol"}},{"id":6479,"name":"region","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If running on Sauce Labs, you can choose to run tests between different data centers:\\nUS or EU. To change your region to EU, add region: \'eu\' to your config."}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/Options.ts","qualifiedName":"SauceRegions"},"name":"SauceRegions","package":"@wdio/types"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.region"}},{"id":6480,"name":"headless","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Sauce Labs provides a headless offering that allows you to run Chrome and Firefox tests headless."}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.headless"}},{"id":6443,"name":"baseUrl","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Shorten url command calls by setting a base URL."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.baseUrl"}},{"id":6481,"name":"waitforTimeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Default timeout for all "},{"kind":"code","text":"`waitFor*`"},{"kind":"text","text":" commands. (Note the lowercase f in the option name.)\\nThis timeout only affects commands starting with "},{"kind":"code","text":"`waitFor*`"},{"kind":"text","text":" and their default wait time."}]},"sources":[],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.waitforTimeout"}},{"id":6482,"name":"waitforInterval","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Default interval for all "},{"kind":"code","text":"`waitFor*`"},{"kind":"text","text":" commands to check if an expected state (e.g.,\\nvisibility) has been changed."}]},"sources":[],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.waitforInterval"}},{"id":6388,"name":"capabilities","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Defines a set of capabilities you want to run in your testrunner session. Check out the\\n[WebDriver Protocol](https://w3c.github.io/webdriver/#capabilities) for more details.\\nIf you want to run a multiremote session you need to define instead of an array of\\ncapabilities an object that has an arbitrary browser instance name as string and its\\ncapabilities as values."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```js\\n// wdio.conf.js\\nexport const config = {\\n  // define parallel running capabilities\\n  capabilities: [{\\n    browserName: \'safari\',\\n    platformName: \'MacOS 10.13\',\\n    ...\\n  }, {\\n    browserName: \'microsoftedge\',\\n    platformName: \'Windows 10\',\\n    ...\\n  }]\\n}\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```\\n// wdio.conf.js\\nexport const config = {\\n  // multiremote example\\n  capabilities: {\\n    browserA: {\\n      browserName: \'chrome\',\\n      browserVersion: 86\\n      platformName: \'Windows 10\'\\n    },\\n    browserB: {\\n      browserName: \'firefox\',\\n      browserVersion: 74\\n      platformName: \'Mac OS X\'\\n    }\\n  }\\n})\\n```"}]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/Capabilities.ts","qualifiedName":"RemoteCapabilities"},"name":"RemoteCapabilities","package":"@wdio/types"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.capabilities"}},{"id":6389,"name":"runner","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Type of runner\\n- local: every spec file group is spawned in its own local process\\n  running an independant browser session\\n- browser: all spec files are run within the browser"}]},"sources":[],"type":{"type":"union","types":[{"type":"literal","value":"local"},{"type":"literal","value":"browser"},{"type":"tuple","elements":[{"type":"literal","value":"browser"},{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/index.ts","qualifiedName":"__global.WebdriverIO.BrowserRunnerOptions"},"name":"BrowserRunnerOptions","package":"@wdio/types","qualifiedName":"__global.WebdriverIO.BrowserRunnerOptions"}]},{"type":"tuple","elements":[{"type":"literal","value":"local"},{"type":"intrinsic","name":"never"}]}]},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.runner"}},{"id":6390,"name":"rootDir","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Project root directory path."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.rootDir"}},{"id":6391,"name":"specs","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Define specs for test execution. You can either specify a glob\\npattern to match multiple files at once or wrap a glob or set of\\npaths into an array to run them within a single worker process."}]},"sources":[],"type":{"type":"array","elementType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"array","elementType":{"type":"intrinsic","name":"string"}}]}},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.specs"}},{"id":6392,"name":"exclude","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Exclude specs from test execution."}]},"sources":[],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.exclude"}},{"id":6393,"name":"suites","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"An object describing various of suites, which you can then specify\\nwith the --suite option on the wdio CLI."}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"union","types":[{"type":"array","elementType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"array","elementType":{"type":"intrinsic","name":"string"}}]}},{"type":"array","elementType":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}]}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.suites"}},{"id":6394,"name":"maxInstances","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Maximum number of total parallel running workers."}]},"sources":[],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.maxInstances"}},{"id":6395,"name":"maxInstancesPerCapability","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Maximum number of total parallel running workers per capability."}]},"sources":[],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.maxInstancesPerCapability"}},{"id":6396,"name":"injectGlobals","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Inserts WebdriverIO\'s globals (e.g. "},{"kind":"code","text":"`browser`"},{"kind":"text","text":", "},{"kind":"code","text":"`$`"},{"kind":"text","text":" and "},{"kind":"code","text":"`$$`"},{"kind":"text","text":") into the\\nglobal environment. If you set to "},{"kind":"code","text":"`false`"},{"kind":"text","text":", you should import from\\n"},{"kind":"code","text":"`@wdio/globals`"},{"kind":"text","text":", e.g.:\\n\\n"},{"kind":"code","text":"```ts\\nimport { browser, $, $$, expect } from \'@wdio/globals\'\\n```"},{"kind":"text","text":"\\n\\nNote: WebdriverIO doesn\'t handle injection of test framework specific\\nglobals."}],"blockTags":[{"tag":"@default","content":[{"kind":"code","text":"```ts\\ntrue\\n```"}]}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.injectGlobals"}},{"id":6397,"name":"bail","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If you want your test run to stop after a specific number of test failures, use bail.\\n(It defaults to 0, which runs all tests no matter what.) Note: Please be aware that\\nwhen using a third party test runner (such as Mocha), additional configuration might\\nbe required."}]},"sources":[],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.bail"}},{"id":6398,"name":"updateSnapshots","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Set to true if you want to update your snapshots."}]},"sources":[],"type":{"type":"union","types":[{"type":"literal","value":"none"},{"type":"literal","value":"all"},{"type":"literal","value":"new"}]},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.updateSnapshots"}},{"id":6399,"name":"resolveSnapshotPath","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Overrides default snapshot path. For example, to store snapshots next to test files."}],"blockTags":[{"tag":"@default","content":[{"kind":"code","text":"```ts\\n__snapshots__ stores snapshot files in __snapshots__ directory next to the test file.\\n```"}]}]},"sources":[],"type":{"type":"reflection","declaration":{"id":6400,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":6401,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":6402,"name":"testPath","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":6403,"name":"snapExtension","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}]}},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.resolveSnapshotPath"}},{"id":6404,"name":"specFileRetries","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The number of retry attempts for an entire specfile when it fails as a whole."}]},"sources":[],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.specFileRetries"}},{"id":6405,"name":"specFileRetriesDelay","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Delay in seconds between the spec file retry attempts"}]},"sources":[],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.specFileRetriesDelay"}},{"id":6406,"name":"specFileRetriesDeferred","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether or not retried spec files should be retried immediately or deferred to the end of the queue"}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.specFileRetriesDeferred"}},{"id":6407,"name":"groupLogsByTestSpec","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Choose the log output view.\\nIf set to \\"false\\" logs from different test files will be printed in real-time.\\nPlease note that this may result in the mixing of log outputs from different Test Specs when running in parallel.\\nIf set to \\"true\\" log outputs will be grouped by test files and printed only when the test is completed.\\nBy default, it is set to \\"false\\" so logs are printed in real-time."}],"blockTags":[{"tag":"@default","content":[{"kind":"code","text":"```ts\\nfalse\\n```"}]}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.groupLogsByTestSpec"}},{"id":6408,"name":"services","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Services take over a specific job you don\'t want to take care of. They enhance\\nyour test setup with almost no effort."}]},"sources":[],"type":{"type":"array","elementType":{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/Services.ts","qualifiedName":"ServiceEntry"},"name":"ServiceEntry","package":"@wdio/types"}},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.services"}},{"id":6409,"name":"framework","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Defines the test framework to be used by the WDIO testrunner."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.framework"}},{"id":6410,"name":"reporters","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"List of reporters to use. A reporter can be either a string, or an array of\\n"},{"kind":"code","text":"`[\'reporterName\', { <reporter options> }]`"},{"kind":"text","text":" where the first element is a string\\nwith the reporter name and the second element an object with reporter options."}]},"sources":[],"type":{"type":"array","elementType":{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/Reporters.ts","qualifiedName":"ReporterEntry"},"name":"ReporterEntry","package":"@wdio/types"}},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.reporters"}},{"id":6411,"name":"reporterSyncInterval","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Determines in which interval the reporter should check if they are synchronised\\nif they report their logs asynchronously (e.g. if logs are streamed to a 3rd\\nparty vendor)."}]},"sources":[],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.reporterSyncInterval"}},{"id":6412,"name":"reporterSyncTimeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Determines the maximum time reporters have to finish uploading all their logs\\nuntil an error is being thrown by the testrunner."}]},"sources":[],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.reporterSyncTimeout"}},{"id":6413,"name":"execArgv","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Node arguments to specify when launching child processes."}]},"sources":[],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.execArgv"}},{"id":6414,"name":"runnerEnv","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A set of environment variables to be injected into the worker process."}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.runnerEnv"}},{"id":6415,"name":"filesToWatch","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Files to watch when running "},{"kind":"code","text":"`wdio`"},{"kind":"text","text":" with the "},{"kind":"code","text":"`--watch`"},{"kind":"text","text":" flag."}]},"sources":[],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.filesToWatch"}},{"id":6416,"name":"cucumberFeaturesWithLineNumbers","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"List of cucumber features with line numbers (when using [cucumber framework](https://webdriver.io/docs/frameworks.html#using-cucumber))."}],"blockTags":[{"tag":"@default","content":[{"kind":"code","text":"```ts\\n[]\\n```"}]}]},"sources":[],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.cucumberFeaturesWithLineNumbers"}},{"id":6417,"name":"watch","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"flags"}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.watch"}},{"id":6418,"name":"shard","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Shard tests and execute only the selected shard. Specify in the one-based form like "},{"kind":"code","text":"`{ total: 5, current: 2 }`"},{"kind":"text","text":"."}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/Options.ts","qualifiedName":"ShardOptions"},"name":"ShardOptions","package":"@wdio/types"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.shard"}},{"id":6419,"name":"mochaOpts","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"framework options"}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/index.ts","qualifiedName":"__global.WebdriverIO.MochaOpts"},"name":"MochaOpts","package":"@wdio/types","qualifiedName":"__global.WebdriverIO.MochaOpts"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.mochaOpts"}},{"id":6420,"name":"jasmineOpts","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/index.ts","qualifiedName":"__global.WebdriverIO.JasmineOpts"},"name":"JasmineOpts","package":"@wdio/types","qualifiedName":"__global.WebdriverIO.JasmineOpts"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.jasmineOpts"}},{"id":6421,"name":"cucumberOpts","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/index.ts","qualifiedName":"__global.WebdriverIO.CucumberOpts"},"name":"CucumberOpts","package":"@wdio/types","qualifiedName":"__global.WebdriverIO.CucumberOpts"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.cucumberOpts"}},{"id":6422,"name":"autoCompileOpts","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"autocompile options"}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/Options.ts","qualifiedName":"AutoCompileConfig"},"name":"AutoCompileConfig","package":"@wdio/types"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.autoCompileOpts"}},{"id":6423,"name":"onPrepare","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isOptional":true},"sources":[],"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.onPrepare"}},{"id":6424,"name":"onComplete","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isOptional":true},"sources":[],"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.onComplete"}},{"id":6425,"name":"onWorkerStart","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isOptional":true},"sources":[],"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.onWorkerStart"}},{"id":6426,"name":"onWorkerEnd","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isOptional":true},"sources":[],"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.onWorkerEnd"}},{"id":6427,"name":"before","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isOptional":true},"sources":[],"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.before"}},{"id":6428,"name":"after","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isOptional":true},"sources":[],"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.after"}},{"id":6429,"name":"beforeSession","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isOptional":true},"sources":[],"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.beforeSession"}},{"id":6430,"name":"afterSession","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isOptional":true},"sources":[],"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.afterSession"}},{"id":6431,"name":"onReload","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isOptional":true},"sources":[],"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.onReload"}},{"id":6432,"name":"beforeSuite","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isOptional":true},"sources":[],"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.beforeSuite"}},{"id":6433,"name":"afterSuite","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isOptional":true},"sources":[],"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.afterSuite"}},{"id":6434,"name":"beforeTest","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isOptional":true},"sources":[],"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.beforeTest"}},{"id":6435,"name":"afterTest","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isOptional":true},"sources":[],"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.afterTest"}},{"id":6436,"name":"beforeHook","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isOptional":true},"sources":[],"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.beforeHook"}},{"id":6437,"name":"afterHook","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isOptional":true},"sources":[],"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.afterHook"}},{"id":6438,"name":"beforeCommand","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isOptional":true},"sources":[],"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.beforeCommand"}},{"id":6439,"name":"afterCommand","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isOptional":true},"sources":[],"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.afterCommand"}},{"id":6440,"name":"beforeAssertion","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isOptional":true},"sources":[],"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.beforeAssertion"}},{"id":6441,"name":"afterAssertion","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isOptional":true},"sources":[],"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.afterAssertion"}}],"groups":[{"title":"Properties","children":[6385,6469,6470,6471,6442,6472,6476,6477,6444,6445,6446,6447,6448,6452,6456,6460,6465,6466,6467,6468,6478,6479,6480,6443,6481,6482,6388,6389,6390,6391,6392,6393,6394,6395,6396,6397,6398,6399,6404,6405,6406,6407,6408,6409,6410,6411,6412,6413,6414,6415,6416,6417,6418,6419,6420,6421,6422]},{"title":"Methods","children":[6423,6424,6425,6426,6427,6428,6429,6430,6431,6432,6433,6434,6435,6436,6437,6438,6439,6440,6441]}],"sources":[{"fileName":"packages/webdriverio/src/config/WebdriverIOConfig.ts","line":80,"character":17}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/Options.ts","qualifiedName":"Testrunner"},"name":"Testrunner","package":"@wdio/types"}],"permalink":"/api/webdriverio/interface/WebdriverIOConfig","previousId":6483,"nextId":6508},{"id":10,"name":"default","variant":"declaration","kind":32,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"WebdriverIO Framework Adapter integrates WebdriverIO with Serenity/JS"}]},"sources":[{"fileName":"packages/webdriverio/src/index.ts","line":12,"character":0}],"type":{"type":"reflection","declaration":{"id":11,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":12,"name":"init","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/index.ts","line":13,"character":10}],"signatures":[{"id":13,"name":"init","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/index.ts","line":13,"character":10}],"parameters":[{"id":14,"name":"cid","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":15,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":6384,"name":"WebdriverIOConfig","package":"@serenity-js/webdriverio"}},{"id":16,"name":"specs","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":17,"name":"capabilities","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/Capabilities.ts","qualifiedName":"RemoteCapability"},"name":"RemoteCapability","package":"@wdio/types"}},{"id":18,"name":"reporter","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/events.d.ts","qualifiedName":"EventEmitter"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/events.d.ts","qualifiedName":"DefaultEventMap"},"name":"DefaultEventMap","package":"@types/node"}],"name":"EventEmitter","package":"@types/node"},{"type":"reference","name":"ProvidesWriteStream","package":"@serenity-js/webdriverio"},{"type":"reference","name":"InitialisesReporters","package":"@serenity-js/webdriverio"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reflection","declaration":{"id":19,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":20,"name":"hasTests","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/index.ts","line":19,"character":17}],"type":{"type":"reflection","declaration":{"id":21,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/index.ts","line":19,"character":27}],"signatures":[{"id":22,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/index.ts","line":19,"character":27}],"type":{"type":"intrinsic","name":"boolean"}}]}}},{"id":23,"name":"run","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/index.ts","line":19,"character":42}],"type":{"type":"reflection","declaration":{"id":24,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/index.ts","line":19,"character":47}],"signatures":[{"id":25,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/index.ts","line":19,"character":47}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]}}}],"groups":[{"title":"Properties","children":[20,23]}],"sources":[{"fileName":"packages/webdriverio/src/index.ts","line":19,"character":15}]}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]}],"groups":[{"title":"Methods","children":[12]}],"sources":[{"fileName":"packages/webdriverio/src/index.ts","line":12,"character":15}]}},"permalink":"/api/webdriverio#default","previousId":6770},{"id":6483,"name":"BrowseTheWebWithWebdriverIO","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"This implementation of the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\nenables the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to interact with web front-ends using [WebdriverIO](https://webdriver.io/).\\n\\n## Using WebdriverIO to "},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { BrowseTheWebWithWebdriverIO } from \'@serenity-js/webdriverio\'\\nimport { By, Navigate, PageElement, Text } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { browser } from \'@wdio/globals\'\\n\\nconst HomePage = {\\n  title: () =>\\n    PageElement.located(By.css(\'h1\')).describedAs(\'title\')\\n}\\n\\nawait actorCalled(\'Wendy\')\\n  .whoCan(BrowseTheWebWithWebdriverIO.using(browser))  // `browser` is global in WebdriverIO tests\\n  .attemptsTo(\\n    Navigate.to(`https://serenity-js.org`),\\n    Ensure.that(Text.of(HomePage.title()), equals(\'Serenity/JS\')),\\n  );\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- [WebdriverIO website](https://webdriver.io/)\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\n- ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/)\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)"}]},"children":[{"id":6484,"name":"using","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/abilities/BrowseTheWebWithWebdriverIO.ts","line":43,"character":11}],"signatures":[{"id":6485,"name":"using","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/abilities/BrowseTheWebWithWebdriverIO.ts","line":43,"character":11}],"parameters":[{"id":6486,"name":"browserInstance","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/webdriverio/src/types.ts","qualifiedName":"__global.WebdriverIO.Browser"},"name":"Browser","package":"webdriverio","qualifiedName":"__global.WebdriverIO.Browser"}}],"type":{"type":"reference","target":6483,"name":"BrowseTheWebWithWebdriverIO","package":"@serenity-js/webdriverio"}}]},{"id":6504,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/abilities/Ability.ts","line":406,"character":4}],"signatures":[{"id":6505,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a JSON representation of the ability and its current state, if available.\\nThe purpose of this method is to enable reporting the state of the ability in a human-readable format,\\nrather than to serialise and deserialise the ability itself."}]},"sources":[{"fileName":"packages/core/lib/screenplay/abilities/Ability.ts","line":406,"character":4}],"type":{"type":"reference","target":596,"name":"SerialisedAbility","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.toJSON"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.toJSON"}},{"id":6506,"name":"abilityType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/abilities/Ability.ts","line":436,"character":4}],"signatures":[{"id":6507,"name":"abilityType","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the most abstract type of this Ability instance,\\nspecifically the first class in the inheritance hierarchy that directly extends the "},{"kind":"code","text":"`Ability`"},{"kind":"text","text":" class.\\n\\n"},{"kind":"code","text":"```ts\\nimport { Ability } from \'@serenity-js/core\';\\n\\nclass MyAbility extends Ability {}\\nclass MySpecialisedAbility extends MyAbility {}\\n\\nnew MyAbility().abilityType();            // returns MyAbility\\nnew MySpecialisedAbility().abilityType(); // returns MyAbility\\n```"}]},"sources":[{"fileName":"packages/core/lib/screenplay/abilities/Ability.ts","line":436,"character":4}],"type":{"type":"reference","target":511,"typeArguments":[{"type":"reference","target":490,"name":"Ability","package":"@serenity-js/core"}],"name":"AbilityType","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.abilityType"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.abilityType"}},{"id":6494,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":83,"character":4}],"signatures":[{"id":6495,"name":"new BrowseTheWebWithWebdriverIO","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":83,"character":4}],"parameters":[{"id":6496,"name":"session","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":3867,"typeArguments":[{"type":"reference","target":4237,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/webdriverio/src/types.ts","qualifiedName":"__global.WebdriverIO.Element"},"name":"Element","package":"webdriverio","qualifiedName":"__global.WebdriverIO.Element"}],"name":"Page","package":"@serenity-js/web"}],"name":"BrowsingSession","package":"@serenity-js/web"}}],"type":{"type":"reference","target":6483,"name":"BrowseTheWebWithWebdriverIO","package":"@serenity-js/webdriverio"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb<WebdriverIO.Element>.constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb<WebdriverIO.Element>.constructor"}},{"id":6498,"name":"currentPage","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":87,"character":4}],"signatures":[{"id":6499,"name":"currentPage","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/) representing the currently active browser tab."}]},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":87,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4237,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/webdriverio/src/types.ts","qualifiedName":"__global.WebdriverIO.Element"},"name":"Element","package":"webdriverio","qualifiedName":"__global.WebdriverIO.Element"}],"name":"Page","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.currentPage"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.currentPage"}},{"id":6500,"name":"allPages","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":92,"character":4}],"signatures":[{"id":6501,"name":"allPages","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns an array of [pages](/api/web/class/Page/) representing all the browser tabs\\navailable in the current ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/)."}]},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":92,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4237,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/webdriverio/src/types.ts","qualifiedName":"__global.WebdriverIO.Element"},"name":"Element","package":"webdriverio","qualifiedName":"__global.WebdriverIO.Element"}],"name":"Page","package":"@serenity-js/web"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.allPages"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.allPages"}},{"id":6502,"name":"browserCapabilities","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":96,"character":4}],"signatures":[{"id":6503,"name":"browserCapabilities","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns [basic meta-data](/api/web/interface/BrowserCapabilities/) about the browser associated with this ability."}]},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":96,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":3863,"name":"BrowserCapabilities","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.browserCapabilities"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.browserCapabilities"}}],"groups":[{"title":"Constructors","children":[6494]},{"title":"Methods","children":[6484,6504,6506,6498,6500,6502]}],"sources":[{"fileName":"packages/webdriverio/src/screenplay/abilities/BrowseTheWebWithWebdriverIO.ts","line":41,"character":13}],"extendedTypes":[{"type":"reference","target":3251,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/webdriverio/src/types.ts","qualifiedName":"__global.WebdriverIO.Element"},"name":"WebdriverIO.Element","package":"webdriverio","qualifiedName":"__global.WebdriverIO.Element"}],"name":"BrowseTheWeb","package":"@serenity-js/web"}],"permalink":"/api/webdriverio/class/BrowseTheWebWithWebdriverIO","nextId":6384},{"id":6508,"name":"WebdriverIOBrowsingSession","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"WebdriverIO-specific implementation of ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/)."}]},"children":[{"id":6535,"name":"closePagesOtherThan","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":15,"character":4}],"signatures":[{"id":6536,"name":"closePagesOtherThan","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":15,"character":4}],"parameters":[{"id":6537,"name":"pageOfInterest","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":6653,"name":"WebdriverIOPage","package":"@serenity-js/webdriverio"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.closePagesOtherThan"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.closePagesOtherThan"}},{"id":6538,"name":"register","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":33,"character":4}],"signatures":[{"id":6539,"name":"register","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Registers specified [pages](/api/web/class/Page/) to be managed by this ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/)."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":33,"character":4}],"parameters":[{"id":6540,"name":"pages","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":6653,"name":"WebdriverIOPage","package":"@serenity-js/webdriverio"}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.register"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.register"}},{"id":6541,"name":"deregister","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":40,"character":4}],"signatures":[{"id":6542,"name":"deregister","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Informs this ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/) that it should no longer manage [pages](/api/web/class/Page/)\\nidentified by the given "},{"kind":"code","text":"`pageIds`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":40,"character":4}],"parameters":[{"id":6543,"name":"pageIds","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.deregister"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.deregister"}},{"id":6544,"name":"registeredPageIds","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":49,"character":4}],"signatures":[{"id":6545,"name":"registeredPageIds","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the ids of any [pages](/api/web/class/Page/) this ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/) is aware of."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":49,"character":4}],"type":{"type":"array","elementType":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.registeredPageIds"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.registeredPageIds"}},{"id":6546,"name":"closeAllPages","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":72,"character":4}],"signatures":[{"id":6547,"name":"closeAllPages","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Closes all the pages available in this browsing context"}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":72,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.closeAllPages"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.closeAllPages"}},{"id":6509,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOBrowsingSession.ts","line":21,"character":4}],"signatures":[{"id":6510,"name":"new WebdriverIOBrowsingSession","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOBrowsingSession.ts","line":21,"character":4}],"parameters":[{"id":6511,"name":"browser","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/webdriverio/src/types.ts","qualifiedName":"__global.WebdriverIO.Browser"},"name":"Browser","package":"webdriverio","qualifiedName":"__global.WebdriverIO.Browser"}}],"type":{"type":"reference","target":6508,"name":"WebdriverIOBrowsingSession","package":"@serenity-js/webdriverio"},"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession<WebdriverIOPage>.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession<WebdriverIOPage>.constructor"}},{"id":6513,"name":"allPages","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOBrowsingSession.ts","line":29,"character":19}],"signatures":[{"id":6514,"name":"allPages","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOBrowsingSession.ts","line":29,"character":19}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":6653,"name":"WebdriverIOPage","package":"@serenity-js/webdriverio"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession.allPages"}}],"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession.allPages"}},{"id":6515,"name":"changeCurrentPageTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOBrowsingSession.ts","line":62,"character":19}],"signatures":[{"id":6516,"name":"changeCurrentPageTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOBrowsingSession.ts","line":62,"character":19}],"parameters":[{"id":6517,"name":"page","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":6653,"name":"WebdriverIOPage","package":"@serenity-js/webdriverio"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession.changeCurrentPageTo"}}],"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession.changeCurrentPageTo"}},{"id":6520,"name":"currentPage","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOBrowsingSession.ts","line":101,"character":19}],"signatures":[{"id":6521,"name":"currentPage","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOBrowsingSession.ts","line":101,"character":19}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":6653,"name":"WebdriverIOPage","package":"@serenity-js/webdriverio"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession.currentPage"}}],"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession.currentPage"}},{"id":6531,"name":"browserCapabilities","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOBrowsingSession.ts","line":173,"character":13}],"signatures":[{"id":6532,"name":"browserCapabilities","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOBrowsingSession.ts","line":173,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":3863,"name":"BrowserCapabilities","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession.browserCapabilities"}}],"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession.browserCapabilities"}}],"groups":[{"title":"Constructors","children":[6509]},{"title":"Methods","children":[6535,6538,6541,6544,6546,6513,6515,6520,6531]}],"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOBrowsingSession.ts","line":19,"character":13}],"extendedTypes":[{"type":"reference","target":3867,"typeArguments":[{"type":"reference","target":6653,"name":"WebdriverIOPage","package":"@serenity-js/webdriverio"}],"name":"BrowsingSession","package":"@serenity-js/web"}],"permalink":"/api/webdriverio/class/WebdriverIOBrowsingSession","previousId":6384,"nextId":6548},{"id":6548,"name":"WebdriverIOCookie","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"WebdriverIO-specific implementation of ["},{"kind":"code","text":"`Cookie`"},{"kind":"text","text":"](/api/web/class/Cookie/)."}]},"children":[{"id":6637,"name":"name","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":99,"character":4}],"signatures":[{"id":6638,"name":"name","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the name of this cookie."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":99,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.name"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.name"}},{"id":6639,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":106,"character":4}],"signatures":[{"id":6640,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Checks if a given cookie is set.\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Optional`"},{"kind":"text","text":"](/api/core/interface/Optional/)"}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":106,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.isPresent"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.isPresent"}},{"id":6641,"name":"value","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":110,"character":4}],"signatures":[{"id":6642,"name":"value","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the value of a given cookie."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":110,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.value"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.value"}},{"id":6643,"name":"path","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":114,"character":4}],"signatures":[{"id":6644,"name":"path","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the path of a given cookie, if any was set."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":114,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.path"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.path"}},{"id":6645,"name":"domain","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":118,"character":4}],"signatures":[{"id":6646,"name":"domain","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the domain of a given cookie, if any was set."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":118,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.domain"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.domain"}},{"id":6647,"name":"isHttpOnly","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":125,"character":4}],"signatures":[{"id":6648,"name":"isHttpOnly","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Checks if a given cookie is HTTP-only.\\n\\n#### Learn more\\n- [Mozilla Developer Network: Restricting access to cookies](https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies#restrict_access_to_cookies)"}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":125,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.isHttpOnly"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.isHttpOnly"}},{"id":6649,"name":"isSecure","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":132,"character":4}],"signatures":[{"id":6650,"name":"isSecure","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Checks if a given cookie is secure.\\n\\n#### Learn more\\n- [Mozilla Developer Network: Restricting access to cookies](https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies#restrict_access_to_cookies)"}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":132,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.isSecure"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.isSecure"}},{"id":6651,"name":"expiry","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":139,"character":4}],"signatures":[{"id":6652,"name":"expiry","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the expiry date of a given cookie\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Timestamp`"},{"kind":"text","text":"](/api/core/class/Timestamp/)"}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":139,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":1841,"name":"Timestamp","package":"@serenity-js/core"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.expiry"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.expiry"}},{"id":6627,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOCookie.ts","line":15,"character":4}],"signatures":[{"id":6628,"name":"new WebdriverIOCookie","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOCookie.ts","line":15,"character":4}],"parameters":[{"id":6629,"name":"browser","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/webdriverio/src/types.ts","qualifiedName":"__global.WebdriverIO.Browser"},"name":"Browser","package":"webdriverio","qualifiedName":"__global.WebdriverIO.Browser"}},{"id":6630,"name":"cookieName","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":6548,"name":"WebdriverIOCookie","package":"@serenity-js/webdriverio"},"overwrites":{"type":"reference","target":-1,"name":"Cookie.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"Cookie.constructor"}},{"id":6632,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOCookie.ts","line":23,"character":10}],"signatures":[{"id":6633,"name":"delete","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOCookie.ts","line":23,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Cookie.delete"}}],"overwrites":{"type":"reference","target":-1,"name":"Cookie.delete"}}],"groups":[{"title":"Constructors","children":[6627]},{"title":"Methods","children":[6637,6639,6641,6643,6645,6647,6649,6651,6632]}],"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOCookie.ts","line":13,"character":13}],"extendedTypes":[{"type":"reference","target":3898,"name":"Cookie","package":"@serenity-js/web"}],"permalink":"/api/webdriverio/class/WebdriverIOCookie","previousId":6508,"nextId":6653},{"id":6653,"name":"WebdriverIOPage","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"WebdriverIO-specific implementation of ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/)."}]},"children":[{"id":6763,"name":"id","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":132,"character":13}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Page.id"}},{"id":6764,"name":"switchTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":432,"character":4}],"signatures":[{"id":6765,"name":"switchTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Switches the current browsing context to the given page\\nand returns an object that allows the caller to switch back\\nto the previous context when needed.\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Switch`"},{"kind":"text","text":"](/api/web/class/Switch/)\\n- ["},{"kind":"code","text":"`Switchable`"},{"kind":"text","text":"](/api/web/interface/Switchable/)"}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":432,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4801,"name":"SwitchableOrigin","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Page.switchTo"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Page.switchTo"}},{"id":6766,"name":"modalDialog","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":444,"character":4}],"signatures":[{"id":6767,"name":"modalDialog","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the ["},{"kind":"code","text":"`ModalDialogHandler`"},{"kind":"text","text":"](/api/web/class/ModalDialogHandler/) for the current ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/)."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":444,"character":4}],"type":{"type":"reference","target":4105,"name":"ModalDialogHandler","package":"@serenity-js/web"},"inheritedFrom":{"type":"reference","target":-1,"name":"Page.modalDialog"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Page.modalDialog"}},{"id":6768,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":448,"character":4}],"signatures":[{"id":6769,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a description of this Page and its ID."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":448,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Page.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Page.toString"}},{"id":6665,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":32,"character":4}],"signatures":[{"id":6666,"name":"new WebdriverIOPage","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":32,"character":4}],"parameters":[{"id":6667,"name":"session","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":6508,"name":"WebdriverIOBrowsingSession","package":"@serenity-js/webdriverio"}},{"id":6668,"name":"browser","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/webdriverio/src/types.ts","qualifiedName":"__global.WebdriverIO.Browser"},"name":"Browser","package":"webdriverio","qualifiedName":"__global.WebdriverIO.Browser"}},{"id":6669,"name":"modalDialogHandler","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4105,"name":"ModalDialogHandler","package":"@serenity-js/web"}},{"id":6670,"name":"errorHandler","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"WebdriverIOErrorHandler","package":"@serenity-js/webdriverio"}},{"id":6671,"name":"pageId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}],"type":{"type":"reference","target":6653,"name":"WebdriverIOPage","package":"@serenity-js/webdriverio"},"overwrites":{"type":"reference","target":-1,"name":"Page<WebdriverIO.Element>.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"Page<WebdriverIO.Element>.constructor"}},{"id":6676,"name":"createPageElement","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":47,"character":4}],"signatures":[{"id":6677,"name":"createPageElement","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":47,"character":4}],"parameters":[{"id":6678,"name":"nativeElement","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/webdriverio/src/types.ts","qualifiedName":"__global.WebdriverIO.Element"},"name":"Element","package":"webdriverio","qualifiedName":"__global.WebdriverIO.Element"}}],"type":{"type":"reference","target":4353,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/webdriverio/src/types.ts","qualifiedName":"__global.WebdriverIO.Element"},"name":"Element","package":"webdriverio","qualifiedName":"__global.WebdriverIO.Element"}],"name":"PageElement","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"Page.createPageElement"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.createPageElement"}},{"id":6679,"name":"locate","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":58,"character":4}],"signatures":[{"id":6680,"name":"locate","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":58,"character":4}],"parameters":[{"id":6681,"name":"selector","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4788,"name":"Selector","package":"@serenity-js/web"}}],"type":{"type":"reference","target":4353,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/webdriverio/src/types.ts","qualifiedName":"__global.WebdriverIO.Element"},"name":"Element","package":"webdriverio","qualifiedName":"__global.WebdriverIO.Element"}],"name":"PageElement","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"Page.locate"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.locate"}},{"id":6682,"name":"locateAll","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":64,"character":4}],"signatures":[{"id":6683,"name":"locateAll","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":64,"character":4}],"parameters":[{"id":6684,"name":"selector","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4788,"name":"Selector","package":"@serenity-js/web"}}],"type":{"type":"reference","target":4429,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/webdriverio/src/types.ts","qualifiedName":"__global.WebdriverIO.Element"},"name":"Element","package":"webdriverio","qualifiedName":"__global.WebdriverIO.Element"}],"name":"PageElements","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"Page.locateAll"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.locateAll"}},{"id":6685,"name":"navigateTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":72,"character":10}],"signatures":[{"id":6686,"name":"navigateTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":72,"character":10}],"parameters":[{"id":6687,"name":"destination","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.navigateTo"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.navigateTo"}},{"id":6688,"name":"navigateBack","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":76,"character":10}],"signatures":[{"id":6689,"name":"navigateBack","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":76,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.navigateBack"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.navigateBack"}},{"id":6690,"name":"navigateForward","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":80,"character":10}],"signatures":[{"id":6691,"name":"navigateForward","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":80,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.navigateForward"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.navigateForward"}},{"id":6692,"name":"reload","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":84,"character":10}],"signatures":[{"id":6693,"name":"reload","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":84,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.reload"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.reload"}},{"id":6694,"name":"sendKeys","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":88,"character":10}],"signatures":[{"id":6695,"name":"sendKeys","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":88,"character":10}],"parameters":[{"id":6696,"name":"keys","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":4121,"name":"Key","package":"@serenity-js/web"}]}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.sendKeys"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.sendKeys"}},{"id":6697,"name":"executeScript","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":100,"character":10}],"signatures":[{"id":6698,"name":"executeScript","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":100,"character":10}],"typeParameter":[{"id":6699,"name":"Result","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":6700,"name":"InnerArguments","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"parameters":[{"id":6701,"name":"script","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reflection","declaration":{"id":6702,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":101,"character":26}],"signatures":[{"id":6703,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":101,"character":26}],"parameters":[{"id":6704,"name":"parameters","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"reference","target":6700,"name":"InnerArguments","package":"@serenity-js/webdriverio","refersToTypeParameter":true}}],"type":{"type":"reference","target":6699,"name":"Result","package":"@serenity-js/webdriverio","refersToTypeParameter":true}}]}}]}},{"id":6705,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"reference","target":6700,"name":"InnerArguments","package":"@serenity-js/webdriverio","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":6699,"name":"Result","package":"@serenity-js/webdriverio","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.executeScript"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.executeScript"}},{"id":6706,"name":"executeAsyncScript","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":126,"character":10}],"signatures":[{"id":6707,"name":"executeAsyncScript","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":126,"character":10}],"typeParameter":[{"id":6708,"name":"Result","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":6709,"name":"Parameters","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"parameters":[{"id":6710,"name":"script","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reflection","declaration":{"id":6711,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":127,"character":26}],"signatures":[{"id":6712,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":127,"character":26}],"parameters":[{"id":6713,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"tuple","elements":[{"type":"rest","elementType":{"type":"namedTupleMember","name":"parameters","isOptional":false,"element":{"type":"array","elementType":{"type":"reference","target":6709,"name":"Parameters","package":"@serenity-js/webdriverio","refersToTypeParameter":true}}}},{"type":"namedTupleMember","name":"callback","isOptional":false,"element":{"type":"reflection","declaration":{"id":6714,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":127,"character":74}],"signatures":[{"id":6715,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":127,"character":74}],"parameters":[{"id":6716,"name":"result","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":6708,"name":"Result","package":"@serenity-js/webdriverio","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"void"}}]}}}]}}],"type":{"type":"intrinsic","name":"void"}}]}}]}},{"id":6717,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"reference","target":6709,"name":"Parameters","package":"@serenity-js/webdriverio","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":6708,"name":"Result","package":"@serenity-js/webdriverio","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.executeAsyncScript"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.executeAsyncScript"}},{"id":6718,"name":"lastScriptExecutionResult","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":157,"character":4}],"signatures":[{"id":6719,"name":"lastScriptExecutionResult","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":157,"character":4}],"typeParameter":[{"id":6720,"name":"Result","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"any"}}],"type":{"type":"reference","target":6720,"name":"Result","package":"@serenity-js/webdriverio","refersToTypeParameter":true},"overwrites":{"type":"reference","target":-1,"name":"Page.lastScriptExecutionResult"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.lastScriptExecutionResult"}},{"id":6721,"name":"takeScreenshot","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":169,"character":10}],"signatures":[{"id":6722,"name":"takeScreenshot","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":169,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.takeScreenshot"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.takeScreenshot"}},{"id":6723,"name":"cookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":188,"character":10}],"signatures":[{"id":6724,"name":"cookie","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":188,"character":10}],"parameters":[{"id":6725,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":3898,"name":"Cookie","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.cookie"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.cookie"}},{"id":6726,"name":"setCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":192,"character":10}],"signatures":[{"id":6727,"name":"setCookie","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":192,"character":10}],"parameters":[{"id":6728,"name":"cookieData","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4004,"name":"CookieData","package":"@serenity-js/web"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.setCookie"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.setCookie"}},{"id":6729,"name":"deleteAllCookies","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":209,"character":10}],"signatures":[{"id":6730,"name":"deleteAllCookies","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":209,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.deleteAllCookies"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.deleteAllCookies"}},{"id":6731,"name":"title","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":215,"character":10}],"signatures":[{"id":6732,"name":"title","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":215,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.title"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.title"}},{"id":6733,"name":"name","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":219,"character":10}],"signatures":[{"id":6734,"name":"name","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":219,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.name"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.name"}},{"id":6735,"name":"url","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":223,"character":10}],"signatures":[{"id":6736,"name":"url","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":223,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/url.d.ts","qualifiedName":"\\"url\\".URL"},"name":"URL","package":"@types/node","qualifiedName":"\\"url\\".URL"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.url"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.url"}},{"id":6737,"name":"viewportSize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":229,"character":10}],"signatures":[{"id":6738,"name":"viewportSize","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":229,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reflection","declaration":{"id":6739,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":6740,"name":"width","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":229,"character":36}],"type":{"type":"intrinsic","name":"number"}},{"id":6741,"name":"height","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":229,"character":51}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[6740,6741]}],"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":229,"character":34}]}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.viewportSize"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.viewportSize"}},{"id":6742,"name":"setViewportSize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":249,"character":10}],"signatures":[{"id":6743,"name":"setViewportSize","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":249,"character":10}],"parameters":[{"id":6744,"name":"size","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":6745,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":6746,"name":"width","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":249,"character":34}],"type":{"type":"intrinsic","name":"number"}},{"id":6747,"name":"height","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":249,"character":49}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[6746,6747]}],"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":249,"character":32}]}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.setViewportSize"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.setViewportSize"}},{"id":6748,"name":"close","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":269,"character":10}],"signatures":[{"id":6749,"name":"close","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":269,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.close"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.close"}},{"id":6750,"name":"closeOthers","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":273,"character":10}],"signatures":[{"id":6751,"name":"closeOthers","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":273,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.closeOthers"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.closeOthers"}},{"id":6752,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":277,"character":10}],"signatures":[{"id":6753,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":277,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.isPresent"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.isPresent"}}],"groups":[{"title":"Constructors","children":[6665]},{"title":"Properties","children":[6763]},{"title":"Methods","children":[6764,6766,6768,6676,6679,6682,6685,6688,6690,6692,6694,6697,6706,6718,6721,6723,6726,6729,6731,6733,6735,6737,6742,6748,6750,6752]}],"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":21,"character":13}],"extendedTypes":[{"type":"reference","target":4237,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/webdriverio/src/types.ts","qualifiedName":"__global.WebdriverIO.Element"},"name":"WebdriverIO.Element","package":"webdriverio","qualifiedName":"__global.WebdriverIO.Element"}],"name":"Page","package":"@serenity-js/web"}],"permalink":"/api/webdriverio/class/WebdriverIOPage","previousId":6548,"nextId":6770},{"id":6770,"name":"WebdriverIOPageElement","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"WebdriverIO-specific implementation of ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)."}]},"children":[{"id":6842,"name":"locator","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":19,"character":13}],"type":{"type":"reference","target":4187,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/webdriverio/src/types.ts","qualifiedName":"__global.WebdriverIO.Element"},"name":"Element","package":"webdriverio","qualifiedName":"__global.WebdriverIO.Element"},{"type":"intrinsic","name":"any"}],"name":"Locator","package":"@serenity-js/web"},"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement.locator"}},{"id":6787,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":46,"character":4}],"signatures":[{"id":6788,"name":"new WebdriverIOPageElement","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":46,"character":4}],"parameters":[{"id":6789,"name":"locator","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4187,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/webdriverio/src/types.ts","qualifiedName":"__global.WebdriverIO.Element"},"name":"Element","package":"webdriverio","qualifiedName":"__global.WebdriverIO.Element"},{"type":"intrinsic","name":"any"}],"name":"Locator","package":"@serenity-js/web"}}],"type":{"type":"reference","target":6770,"name":"WebdriverIOPageElement","package":"@serenity-js/webdriverio"},"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement<WebdriverIO.Element>.constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement<WebdriverIO.Element>.constructor"}},{"id":6843,"name":"nativeElement","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":107,"character":4}],"signatures":[{"id":6844,"name":"nativeElement","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An \\"escape hatch\\" providing access to the integration tool-specific implementation of a Web element."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":107,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/webdriverio/src/types.ts","qualifiedName":"__global.WebdriverIO.Element"},"name":"Element","package":"webdriverio","qualifiedName":"__global.WebdriverIO.Element"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement.nativeElement"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement.nativeElement"}},{"id":6845,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":108,"character":4}],"signatures":[{"id":6846,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":108,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement.toString"}},{"id":6790,"name":"of","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":17,"character":4}],"signatures":[{"id":6791,"name":"of","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":17,"character":4}],"parameters":[{"id":6792,"name":"parent","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":6770,"name":"WebdriverIOPageElement","package":"@serenity-js/webdriverio"}}],"type":{"type":"reference","target":6770,"name":"WebdriverIOPageElement","package":"@serenity-js/webdriverio"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.of"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.of"}},{"id":6793,"name":"closestTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":21,"character":4}],"signatures":[{"id":6794,"name":"closestTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":21,"character":4}],"parameters":[{"id":6795,"name":"child","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":6770,"name":"WebdriverIOPageElement","package":"@serenity-js/webdriverio"}}],"type":{"type":"reference","target":6770,"name":"WebdriverIOPageElement","package":"@serenity-js/webdriverio"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.closestTo"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.closestTo"}},{"id":6796,"name":"clearValue","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":25,"character":10}],"signatures":[{"id":6797,"name":"clearValue","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":25,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.clearValue"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.clearValue"}},{"id":6798,"name":"click","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":64,"character":10}],"signatures":[{"id":6799,"name":"click","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":64,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.click"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.click"}},{"id":6800,"name":"doubleClick","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":69,"character":10}],"signatures":[{"id":6801,"name":"doubleClick","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":69,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.doubleClick"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.doubleClick"}},{"id":6802,"name":"enterValue","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":74,"character":10}],"signatures":[{"id":6803,"name":"enterValue","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":74,"character":10}],"parameters":[{"id":6804,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.enterValue"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.enterValue"}},{"id":6805,"name":"scrollIntoView","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":81,"character":10}],"signatures":[{"id":6806,"name":"scrollIntoView","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":81,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.scrollIntoView"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.scrollIntoView"}},{"id":6807,"name":"hoverOver","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":86,"character":10}],"signatures":[{"id":6808,"name":"hoverOver","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":86,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.hoverOver"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.hoverOver"}},{"id":6809,"name":"rightClick","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":91,"character":10}],"signatures":[{"id":6810,"name":"rightClick","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":91,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.rightClick"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.rightClick"}},{"id":6811,"name":"selectOptions","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":96,"character":10}],"signatures":[{"id":6812,"name":"selectOptions","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":96,"character":10}],"parameters":[{"id":6813,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":4668,"name":"SelectOption","package":"@serenity-js/web"}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.selectOptions"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.selectOptions"}},{"id":6814,"name":"selectedOptions","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":109,"character":10}],"signatures":[{"id":6815,"name":"selectedOptions","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":109,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4668,"name":"SelectOption","package":"@serenity-js/web"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.selectedOptions"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.selectedOptions"}},{"id":6816,"name":"attribute","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":137,"character":10}],"signatures":[{"id":6817,"name":"attribute","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":137,"character":10}],"parameters":[{"id":6818,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.attribute"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.attribute"}},{"id":6819,"name":"text","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":142,"character":10}],"signatures":[{"id":6820,"name":"text","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":142,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.text"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.text"}},{"id":6821,"name":"value","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":147,"character":10}],"signatures":[{"id":6822,"name":"value","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":147,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.value"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.value"}},{"id":6823,"name":"html","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":152,"character":10}],"signatures":[{"id":6824,"name":"html","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":152,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.html"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.html"}},{"id":6825,"name":"switchTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":157,"character":10}],"signatures":[{"id":6826,"name":"switchTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":157,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4801,"name":"SwitchableOrigin","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.switchTo"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.switchTo"}},{"id":6827,"name":"isActive","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":217,"character":10}],"signatures":[{"id":6828,"name":"isActive","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":217,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.isActive"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.isActive"}},{"id":6829,"name":"isClickable","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":222,"character":10}],"signatures":[{"id":6830,"name":"isClickable","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":222,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.isClickable"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.isClickable"}},{"id":6831,"name":"isEnabled","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":227,"character":10}],"signatures":[{"id":6832,"name":"isEnabled","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":227,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.isEnabled"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.isEnabled"}},{"id":6833,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":232,"character":10}],"signatures":[{"id":6834,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":232,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.isPresent"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.isPresent"}},{"id":6835,"name":"isSelected","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":237,"character":10}],"signatures":[{"id":6836,"name":"isSelected","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":237,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.isSelected"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.isSelected"}},{"id":6837,"name":"isVisible","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":242,"character":10}],"signatures":[{"id":6838,"name":"isVisible","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":242,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.isVisible"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.isVisible"}}],"groups":[{"title":"Constructors","children":[6787]},{"title":"Properties","children":[6842]},{"title":"Methods","children":[6843,6845,6790,6793,6796,6798,6800,6802,6805,6807,6809,6811,6814,6816,6819,6821,6823,6825,6827,6829,6831,6833,6835,6837]}],"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":16,"character":13}],"extendedTypes":[{"type":"reference","target":4353,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/webdriverio/src/types.ts","qualifiedName":"__global.WebdriverIO.Element"},"name":"WebdriverIO.Element","package":"webdriverio","qualifiedName":"__global.WebdriverIO.Element"}],"name":"PageElement","package":"@serenity-js/web"}],"permalink":"/api/webdriverio/class/WebdriverIOPageElement","previousId":6653,"nextId":10}],"groups":[{"title":"Abilities","children":[6483]},{"title":"Configuration","children":[6384]},{"title":"Models","children":[6508,6548,6653,6770]},{"title":"Variables","children":[10]}],"sources":[{"fileName":"packages/webdriverio/src/index.ts","line":1,"character":0}],"permalink":"/api/webdriverio"},"urlSlug":"webdriverio"}],"packageName":"@serenity-js/webdriverio","packageVersion":"3.26.0"}]')}}]);